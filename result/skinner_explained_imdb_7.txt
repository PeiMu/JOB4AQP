SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=46738.99..46739.00 rows=1 width=64) (actual time=1084.889..1084.889 rows=1 loops=1)
   ->  Gather  (cost=46738.77..46738.98 rows=2 width=64) (actual time=1084.749..1090.047 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=45738.77..45738.78 rows=1 width=64) (actual time=1077.107..1077.108 rows=1 loops=3)
               ->  Nested Loop  (cost=4735.95..45738.76 rows=2 width=33) (actual time=140.357..1076.972 rows=35 loops=3)
                     ->  Nested Loop  (cost=4735.82..45738.46 rows=2 width=37) (actual time=140.250..1076.676 rows=35 loops=3)
                           ->  Hash Join  (cost=4735.39..45712.02 rows=5 width=25) (actual time=140.121..1075.447 rows=37 loops=3)
                                 Hash Cond: (ci.role_id = rt.id)
                                 ->  Nested Loop  (cost=4734.23..45710.67 rows=54 width=29) (actual time=139.896..1075.145 rows=50 loops=3)
                                       Join Filter: (t.id = ci.movie_id)
                                       ->  Nested Loop  (cost=4733.66..40594.00 rows=2624 width=29) (actual time=33.111..385.475 rows=1513 loops=3)
                                             ->  Parallel Hash Join  (cost=4733.23..37248.39 rows=6486 width=8) (actual time=32.582..321.959 rows=2930 loops=3)
                                                   Hash Cond: (mc.company_id = cn.id)
                                                   ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=12) (actual time=0.035..162.693 rows=869710 loops=3)
                                                   ->  Parallel Hash  (cost=4722.92..4722.92 rows=825 width=4) (actual time=31.562..31.562 rows=454 loops=3)
                                                         Buckets: 2048  Batches: 1  Memory Usage: 112kB
                                                         ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=825 width=4) (actual time=0.121..31.043 rows=454 loops=3)
                                                               Filter: ((country_code)::text = '[ru]'::text)
                                                               Rows Removed by Filter: 77879
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..0.52 rows=1 width=21) (actual time=0.020..0.020 rows=1 loops=8790)
                                                   Index Cond: (id = mc.movie_id)
                                                   Filter: (production_year > 2005)
                                                   Rows Removed by Filter: 0
                                       ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.94 rows=1 width=12) (actual time=0.426..0.455 rows=0 loops=4539)
                                             Index Cond: (movie_id = mc.movie_id)
                                             Filter: (((note)::text ~~ '%(voice)%'::text) AND ((note)::text ~~ '%(uncredited)%'::text))
                                             Rows Removed by Filter: 50
                                 ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.076..0.076 rows=1 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.051..0.053 rows=1 loops=3)
                                             Filter: ((role)::text = 'actor'::text)
                                             Rows Removed by Filter: 11
                           ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..5.29 rows=1 width=20) (actual time=0.031..0.031 rows=1 loops=112)
                                 Index Cond: (id = ci.person_role_id)
                     ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=104)
                           Index Cond: (id = mc.company_type_id)
                           Heap Fetches: 104
 Planning Time: 8.971 ms
 Execution Time: 1090.695 ms
(40 rows)

SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=43565.51..43565.52 rows=1 width=64) (actual time=593.278..593.278 rows=1 loops=1)
   ->  Gather  (cost=43565.29..43565.50 rows=2 width=64) (actual time=593.090..601.443 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=42565.29..42565.30 rows=1 width=64) (actual time=585.943..585.944 rows=1 loops=3)
               ->  Hash Join  (cost=4736.91..42565.02 rows=55 width=33) (actual time=585.929..585.929 rows=0 loops=3)
                     Hash Cond: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=4735.82..42563.63 rows=55 width=37) (actual time=585.749..585.749 rows=0 loops=3)
                           ->  Hash Join  (cost=4735.39..42496.51 rows=115 width=25) (actual time=585.748..585.748 rows=0 loops=3)
                                 Hash Cond: (ci.role_id = rt.id)
                                 ->  Nested Loop  (cost=4734.23..42490.46 rows=1377 width=29) (actual time=38.142..585.308 rows=871 loops=3)
                                       Join Filter: (t.id = ci.movie_id)
                                       ->  Nested Loop  (cost=4733.66..40594.00 rows=1021 width=29) (actual time=36.197..400.312 rows=420 loops=3)
                                             ->  Parallel Hash Join  (cost=4733.23..37248.39 rows=6486 width=8) (actual time=33.908..326.537 rows=2930 loops=3)
                                                   Hash Cond: (mc.company_id = cn.id)
                                                   ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=12) (actual time=0.037..165.792 rows=869710 loops=3)
                                                   ->  Parallel Hash  (cost=4722.92..4722.92 rows=825 width=4) (actual time=32.955..32.955 rows=454 loops=3)
                                                         Buckets: 2048  Batches: 1  Memory Usage: 112kB
                                                         ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=825 width=4) (actual time=0.123..32.397 rows=454 loops=3)
                                                               Filter: ((country_code)::text = '[ru]'::text)
                                                               Rows Removed by Filter: 77879
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..0.52 rows=1 width=21) (actual time=0.024..0.024 rows=0 loops=8790)
                                                   Index Cond: (id = mc.movie_id)
                                                   Filter: (production_year > 2010)
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.84 rows=1 width=12) (actual time=0.230..0.439 rows=2 loops=1259)
                                             Index Cond: (movie_id = mc.movie_id)
                                             Filter: ((note)::text ~~ '%(producer)%'::text)
                                             Rows Removed by Filter: 44
                                 ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.053..0.053 rows=1 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.041..0.044 rows=1 loops=3)
                                             Filter: ((role)::text = 'actor'::text)
                                             Rows Removed by Filter: 11
                           ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.58 rows=1 width=20) (never executed)
                                 Index Cond: (id = ci.person_role_id)
                     ->  Hash  (cost=1.04..1.04 rows=4 width=4) (actual time=0.062..0.062 rows=4 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.040..0.042 rows=4 loops=3)
 Planning Time: 9.037 ms
 Execution Time: 602.077 ms
(41 rows)

SET
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=652016.30..652016.31 rows=1 width=64) (actual time=5371.250..5371.250 rows=1 loops=1)
   ->  Gather  (cost=652016.08..652016.29 rows=2 width=64) (actual time=5366.728..5465.164 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=651016.08..651016.09 rows=1 width=64) (actual time=5359.902..5359.902 rows=1 loops=3)
               ->  Hash Join  (cost=609518.31..650122.02 rows=178812 width=33) (actual time=5322.612..5359.883 rows=3 loops=3)
                     Hash Cond: (ci.role_id = rt.id)
                     ->  Hash Join  (cost=609517.04..649485.59 rows=178812 width=37) (actual time=5322.315..5359.584 rows=3 loops=3)
                           Hash Cond: (mc.company_type_id = ct.id)
                           ->  Parallel Hash Join  (cost=609515.95..648517.80 rows=178812 width=41) (actual time=5322.211..5359.478 rows=3 loops=3)
                                 Hash Cond: (mc.movie_id = t.id)
                                 ->  Parallel Hash Join  (cost=5350.78..37865.94 rows=395029 width=8) (actual time=47.255..434.294 rows=384599 loops=3)
                                       Hash Cond: (mc.company_id = cn.id)
                                       ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=12) (actual time=0.032..177.668 rows=869710 loops=3)
                                       ->  Parallel Hash  (cost=4722.92..4722.92 rows=50229 width=4) (actual time=47.034..47.035 rows=28281 loops=3)
                                             Buckets: 131072  Batches: 1  Memory Usage: 4416kB
                                             ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=50229 width=4) (actual time=0.073..32.054 rows=28281 loops=3)
                                                   Filter: ((country_code)::text = '[us]'::text)
                                                   Rows Removed by Filter: 50051
                                 ->  Parallel Hash  (cost=600222.44..600222.44 rows=185178 width=45) (actual time=4727.823..4727.823 rows=4 loops=3)
                                       Buckets: 65536  Batches: 16  Memory Usage: 576kB
                                       ->  Parallel Hash Join  (cost=136144.88..600222.44 rows=185178 width=45) (actual time=4620.454..4726.517 rows=4 loops=3)
                                             Hash Cond: (ci.movie_id = t.id)
                                             ->  Parallel Hash Join  (cost=73555.68..529520.84 rows=266824 width=24) (actual time=3887.353..4067.650 rows=5 loops=3)
                                                   Hash Cond: (ci.person_role_id = chn.id)
                                                   ->  Parallel Seq Scan on cast_info ci  (cost=0.00..441459.62 rows=551821 width=12) (actual time=321.422..2936.859 rows=478480 loops=3)
                                                         Filter: ((note)::text ~~ '%(producer)%'::text)
                                                         Rows Removed by Filter: 11602968
                                                   ->  Parallel Hash  (cost=49532.75..49532.75 rows=1308475 width=20) (actual time=713.405..713.405 rows=1046780 loops=3)
                                                         Buckets: 65536  Batches: 64  Memory Usage: 3264kB
                                                         ->  Parallel Seq Scan on char_name chn  (cost=0.00..49532.75 rows=1308475 width=20) (actual time=0.062..316.852 rows=1046780 loops=3)
                                             ->  Parallel Hash  (cost=49166.29..49166.29 rows=731112 width=21) (actual time=529.804..529.804 rows=583011 loops=3)
                                                   Buckets: 65536  Batches: 32  Memory Usage: 3616kB
                                                   ->  Parallel Seq Scan on title t  (cost=0.00..49166.29 rows=731112 width=21) (actual time=0.043..301.418 rows=583011 loops=3)
                                                         Filter: (production_year > 1990)
                                                         Rows Removed by Filter: 259760
                           ->  Hash  (cost=1.04..1.04 rows=4 width=4) (actual time=0.040..0.041 rows=4 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                 ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.024..0.025 rows=4 loops=3)
                     ->  Hash  (cost=1.12..1.12 rows=12 width=4) (actual time=0.063..0.063 rows=12 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on role_type rt  (cost=0.00..1.12 rows=12 width=4) (actual time=0.036..0.038 rows=12 loops=3)
 Planning Time: 9.235 ms
 Execution Time: 5465.862 ms
(44 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3754.86..3754.87 rows=1 width=96) (actual time=245.025..245.026 rows=1 loops=1)
   ->  Nested Loop  (cost=8.32..3754.85 rows=1 width=118) (actual time=6.517..244.583 rows=310 loops=1)
         Join Filter: (mc.company_type_id = ct.id)
         Rows Removed by Join Filter: 20
         ->  Nested Loop  (cost=8.32..3753.79 rows=1 width=122) (actual time=6.495..241.842 rows=330 loops=1)
               ->  Nested Loop  (cost=7.90..3753.33 rows=1 width=107) (actual time=5.747..238.137 rows=705 loops=1)
                     Join Filter: (ml.movie_id = mc.movie_id)
                     ->  Nested Loop  (cost=7.47..3752.76 rows=1 width=111) (actual time=5.699..236.169 rows=152 loops=1)
                           Join Filter: (ml.movie_id = t.id)
                           ->  Nested Loop  (cost=7.04..3752.25 rows=1 width=90) (actual time=5.519..234.569 rows=199 loops=1)
                                 Join Filter: (ml.link_type_id = lt.id)
                                 Rows Removed by Join Filter: 303
                                 ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.030..0.041 rows=2 loops=1)
                                       Filter: ((link)::text ~~ '%follow%'::text)
                                       Rows Removed by Filter: 16
                                 ->  Nested Loop  (cost=7.04..3750.90 rows=10 width=12) (actual time=4.771..117.217 rows=251 loops=2)
                                       ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=4.761..94.695 rows=10544 loops=2)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.268..23.440 rows=1 loops=2)
                                                   Filter: ((keyword)::text = 'sequel'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=3.447..68.544 rows=10544 loops=2)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=11140
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=2.661..2.661 rows=10544 loops=2)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.002..0.002 rows=0 loops=21088)
                                             Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.007..0.007 rows=1 loops=199)
                                 Index Cond: (id = mk.movie_id)
                                 Filter: ((production_year >= 1950) AND (production_year <= 2000))
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=12) (actual time=0.008..0.011 rows=5 loops=152)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: (note IS NULL)
                           Rows Removed by Filter: 1
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.005..0.005 rows=0 loops=705)
                     Index Cond: (id = mc.company_id)
                     Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                     Rows Removed by Filter: 1
         ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=330)
               Filter: ((kind)::text = 'production companies'::text)
               Rows Removed by Filter: 1
 Planning Time: 13.410 ms
 Execution Time: 245.617 ms
(44 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3754.86..3754.87 rows=1 width=96) (actual time=61.699..61.699 rows=1 loops=1)
   ->  Nested Loop  (cost=8.32..3754.85 rows=1 width=118) (actual time=5.373..61.664 rows=14 loops=1)
         Join Filter: (mc.company_type_id = ct.id)
         ->  Nested Loop  (cost=8.32..3753.79 rows=1 width=122) (actual time=5.352..61.537 rows=14 loops=1)
               ->  Nested Loop  (cost=7.90..3753.33 rows=1 width=107) (actual time=5.331..61.386 rows=21 loops=1)
                     Join Filter: (ml.movie_id = mc.movie_id)
                     ->  Nested Loop  (cost=7.47..3752.76 rows=1 width=111) (actual time=5.316..61.333 rows=7 loops=1)
                           Join Filter: (ml.movie_id = t.id)
                           ->  Nested Loop  (cost=7.04..3752.25 rows=1 width=90) (actual time=4.429..60.872 rows=64 loops=1)
                                 Join Filter: (ml.link_type_id = lt.id)
                                 Rows Removed by Join Filter: 187
                                 ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.023..0.029 rows=1 loops=1)
                                       Filter: ((link)::text ~~ '%follows%'::text)
                                       Rows Removed by Filter: 17
                                 ->  Nested Loop  (cost=7.04..3750.90 rows=10 width=12) (actual time=4.401..60.807 rows=251 loops=1)
                                       ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=4.391..45.107 rows=10544 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.998..18.436 rows=1 loops=1)
                                                   Filter: ((keyword)::text = 'sequel'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=3.385..24.736 rows=10544 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=5570
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=2.620..2.620 rows=10544 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.001..0.001 rows=0 loops=10544)
                                             Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.007..0.007 rows=0 loops=64)
                                 Index Cond: (id = mk.movie_id)
                                 Filter: (((title)::text ~~ '%Money%'::text) AND (production_year = 1998))
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=12) (actual time=0.004..0.006 rows=3 loops=7)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: (note IS NULL)
                           Rows Removed by Filter: 1
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.006..0.006 rows=1 loops=21)
                     Index Cond: (id = mc.company_id)
                     Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                     Rows Removed by Filter: 0
         ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=14)
               Filter: ((kind)::text = 'production companies'::text)
               Rows Removed by Filter: 1
 Planning Time: 12.790 ms
 Execution Time: 62.340 ms
(43 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=6178.62..6178.63 rows=1 width=96) (actual time=609.665..609.666 rows=1 loops=1)
   ->  Nested Loop  (cost=8.32..6178.61 rows=1 width=60) (actual time=5.545..599.281 rows=6946 loops=1)
         Join Filter: (ml.movie_id = t.id)
         ->  Nested Loop  (cost=7.89..6178.11 rows=1 width=55) (actual time=5.499..563.653 rows=6946 loops=1)
               Join Filter: (ml.link_type_id = lt.id)
               Rows Removed by Join Filter: 42158
               ->  Nested Loop  (cost=7.89..6176.70 rows=1 width=59) (actual time=5.486..502.456 rows=6946 loops=1)
                     ->  Nested Loop  (cost=7.47..6147.98 rows=63 width=44) (actual time=4.798..455.433 rows=14916 loops=1)
                           Join Filter: (mc.company_type_id = ct.id)
                           Rows Removed by Join Filter: 1782
                           ->  Nested Loop  (cost=7.47..6143.61 rows=84 width=48) (actual time=4.772..446.565 rows=15510 loops=1)
                                 Join Filter: (ml.movie_id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.04..6125.70 rows=31 width=12) (actual time=4.727..428.661 rows=1460 loops=1)
                                       ->  Nested Loop  (cost=6.76..6082.75 rows=101 width=4) (actual time=4.717..324.897 rows=47403 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2793.84 rows=3 width=4) (actual time=1.076..27.239 rows=3 loops=1)
                                                   Filter: ((keyword)::text = ANY ('{sequel,revenge,based-on-novel}'::text[]))
                                                   Rows Removed by Filter: 134167
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1093.30 rows=300 width=8) (actual time=4.975..94.868 rows=15801 loops=3)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=23953
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.813..3.813 rows=15801 loops=3)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.002..0.002 rows=0 loops=47403)
                                             Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=36) (actual time=0.004..0.009 rows=11 loops=1460)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: (note IS NOT NULL)
                                       Rows Removed by Filter: 2
                           ->  Materialize  (cost=0.00..1.06 rows=3 width=4) (actual time=0.000..0.000 rows=1 loops=15510)
                                 ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=3 width=4) (actual time=0.021..0.022 rows=3 loops=1)
                                       Filter: ((kind IS NOT NULL) AND ((kind)::text <> 'production companies'::text))
                                       Rows Removed by Filter: 1
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=14916)
                           Index Cond: (id = mc.company_id)
                           Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '20th Century Fox%'::text) OR ((name)::text ~~ 'Twentieth Century Fox%'::text)))
                           Rows Removed by Filter: 1
               ->  Seq Scan on link_type lt  (cost=0.00..1.18 rows=18 width=4) (actual time=0.002..0.002 rows=7 loops=6946)
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.004..0.004 rows=1 loops=6946)
               Index Cond: (id = mk.movie_id)
               Filter: (production_year > 1950)
 Planning Time: 12.985 ms
 Execution Time: 610.250 ms
(42 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=6195.83..6195.84 rows=1 width=96) (actual time=505.954..505.955 rows=1 loops=1)
   ->  Nested Loop  (cost=8.32..6195.45 rows=51 width=60) (actual time=4.823..496.958 rows=14899 loops=1)
         ->  Nested Loop  (cost=7.90..6169.75 rows=57 width=45) (actual time=4.791..458.142 rows=14916 loops=1)
               Join Filter: (mc.company_type_id = ct.id)
               Rows Removed by Join Filter: 1782
               ->  Nested Loop  (cost=7.90..6165.70 rows=76 width=49) (actual time=4.768..452.394 rows=15510 loops=1)
                     Join Filter: (ml.movie_id = mc.movie_id)
                     ->  Nested Loop  (cost=7.47..6149.51 rows=28 width=29) (actual time=4.744..438.355 rows=1460 loops=1)
                           Join Filter: (ml.link_type_id = lt.id)
                           Rows Removed by Join Filter: 10576
                           ->  Nested Loop  (cost=7.47..6141.21 rows=28 width=33) (actual time=4.728..435.946 rows=1460 loops=1)
                                 Join Filter: (ml.movie_id = t.id)
                                 ->  Nested Loop  (cost=7.04..6125.70 rows=31 width=12) (actual time=4.684..428.652 rows=1460 loops=1)
                                       ->  Nested Loop  (cost=6.76..6082.75 rows=101 width=4) (actual time=4.666..323.213 rows=47403 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2793.84 rows=3 width=4) (actual time=1.093..35.612 rows=3 loops=1)
                                                   Filter: ((keyword)::text = ANY ('{sequel,revenge,based-on-novel}'::text[]))
                                                   Rows Removed by Filter: 134167
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1093.30 rows=300 width=8) (actual time=5.021..91.403 rows=15801 loops=3)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=23953
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.861..3.861 rows=15801 loops=3)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.002..0.002 rows=0 loops=47403)
                                             Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.004..0.004 rows=1 loops=1460)
                                       Index Cond: (id = mk.movie_id)
                                       Filter: (production_year > 1950)
                           ->  Materialize  (cost=0.00..1.27 rows=18 width=4) (actual time=0.000..0.001 rows=8 loops=1460)
                                 ->  Seq Scan on link_type lt  (cost=0.00..1.18 rows=18 width=4) (actual time=0.009..0.013 rows=16 loops=1)
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=36) (actual time=0.003..0.007 rows=11 loops=1460)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: (note IS NOT NULL)
                           Rows Removed by Filter: 2
               ->  Materialize  (cost=0.00..1.06 rows=3 width=4) (actual time=0.000..0.000 rows=1 loops=15510)
                     ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=3 width=4) (actual time=0.020..0.022 rows=3 loops=1)
                           Filter: ((kind IS NOT NULL) AND ((kind)::text <> 'production companies'::text))
                           Rows Removed by Filter: 1
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=14916)
               Index Cond: (id = mc.company_id)
               Filter: ((country_code)::text <> '[pl]'::text)
               Rows Removed by Filter: 0
 Planning Time: 13.822 ms
 Execution Time: 506.515 ms
(43 rows)

SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16837.50..16837.51 rows=1 width=96) (actual time=517.075..517.076 rows=1 loops=1)
   ->  Gather  (cost=1005.35..16837.49 rows=1 width=41) (actual time=46.430..523.091 rows=397 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Nested Loop  (cost=5.34..15837.39 rows=1 width=41) (actual time=41.714..509.112 rows=132 loops=3)
               ->  Nested Loop  (cost=5.20..15835.91 rows=9 width=45) (actual time=41.680..508.484 rows=132 loops=3)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=4.77..15811.93 rows=15 width=53) (actual time=2.435..399.093 rows=1891 loops=3)
                           ->  Nested Loop  (cost=4.35..15793.67 rows=41 width=38) (actual time=2.346..373.230 rows=2203 loops=3)
                                 Join Filter: (mi_idx.movie_id = t.id)
                                 ->  Hash Join  (cost=3.92..15669.98 rows=233 width=17) (actual time=0.532..250.452 rows=8078 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Nested Loop  (cost=2.86..15663.88 rows=932 width=21) (actual time=0.264..243.323 rows=21569 loops=3)
                                             ->  Hash Join  (cost=2.43..15179.85 rows=178 width=9) (actual time=0.168..143.422 rows=5283 loops=3)
                                                   Hash Cond: (mi_idx.info_type_id = it2.id)
                                                   ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..15122.68 rows=20101 width=13) (actual time=0.052..138.095 rows=17883 loops=3)
                                                         Filter: ((info)::text > '8.0'::text)
                                                         Rows Removed by Filter: 442129
                                                   ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.059..0.059 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.039..0.042 rows=1 loops=3)
                                                               Filter: ((info)::text = 'rating'::text)
                                                               Rows Removed by Filter: 112
                                             ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.67 rows=5 width=12) (actual time=0.013..0.017 rows=4 loops=15849)
                                                   Index Cond: (movie_id = mi_idx.movie_id)
                                       ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.072..0.072 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.048..0.049 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.52 rows=1 width=21) (actual time=0.014..0.014 rows=0 loops=24233)
                                       Index Cond: (id = mc.movie_id)
                                       Filter: ((production_year >= 2005) AND (production_year <= 2008))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.011..0.011 rows=1 loops=6610)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.59 rows=1 width=8) (actual time=0.057..0.057 rows=0 loops=5674)
                           Index Cond: (movie_id = mc.movie_id)
                           Filter: ((info)::text = ANY ('{Drama,Horror}'::text[]))
                           Rows Removed by Filter: 28
               ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=397)
                     Index Cond: (id = mi.info_type_id)
                     Filter: ((info)::text = 'genres'::text)
 Planning Time: 14.263 ms
 Execution Time: 524.132 ms
(47 rows)

SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=19208.43..19208.44 rows=1 width=64) (actual time=146.507..146.507 rows=1 loops=1)
   ->  Nested Loop  (cost=1006.70..19208.43 rows=1 width=60) (actual time=144.831..146.484 rows=10 loops=1)
         ->  Gather  (cost=1006.57..19208.26 rows=1 width=64) (actual time=144.674..147.693 rows=10 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Nested Loop  (cost=6.57..18208.16 rows=1 width=64) (actual time=136.832..137.388 rows=3 loops=3)
                     ->  Nested Loop  (cost=6.15..18207.71 rows=1 width=68) (actual time=136.799..137.109 rows=11 loops=3)
                           Join Filter: (t.id = mc.movie_id)
                           ->  Hash Join  (cost=5.72..18207.13 rows=1 width=72) (actual time=136.749..137.015 rows=1 loops=3)
                                 Hash Cond: (mi.info_type_id = it1.id)
                                 ->  Nested Loop  (cost=3.29..18204.66 rows=17 width=76) (actual time=136.443..136.776 rows=74 loops=3)
                                       Join Filter: (t.id = mi.movie_id)
                                       ->  Nested Loop  (cost=2.86..18202.37 rows=1 width=25) (actual time=136.394..136.444 rows=1 loops=3)
                                             ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=4) (actual time=136.207..136.212 rows=3 loops=3)
                                                   Hash Cond: (mi_idx.info_type_id = it2.id)
                                                   ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=8) (actual time=0.038..80.242 rows=460012 loops=3)
                                                   ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.033..0.033 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.021..0.022 rows=1 loops=3)
                                                               Filter: ((info)::text = 'bottom 10 rank'::text)
                                                               Rows Removed by Filter: 112
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..0.58 rows=1 width=21) (actual time=0.068..0.068 rows=0 loops=10)
                                                   Index Cond: (id = mi_idx.movie_id)
                                                   Filter: ((production_year > 2000) AND (((title)::text ~~ 'Birdemic%'::text) OR ((title)::text ~~ '%Movie%'::text)))
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.76 rows=42 width=51) (actual time=0.100..0.456 rows=110 loops=2)
                                             Index Cond: (movie_id = mi_idx.movie_id)
                                 ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.082..0.082 rows=1 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.061..0.064 rows=1 loops=3)
                                             Filter: ((info)::text = 'budget'::text)
                                             Rows Removed by Filter: 112
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.52 rows=5 width=12) (actual time=0.104..0.131 rows=16 loops=2)
                                 Index Cond: (movie_id = mi.movie_id)
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.024..0.024 rows=0 loops=33)
                           Index Cond: (id = mc.company_id)
                           Filter: ((country_code)::text = '[us]'::text)
                           Rows Removed by Filter: 1
         ->  Index Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.017..0.017 rows=1 loops=10)
               Index Cond: (id = mc.company_type_id)
               Filter: ((kind IS NOT NULL) AND (((kind)::text = 'production companies'::text) OR ((kind)::text = 'distributors'::text)))
 Planning Time: 14.705 ms
 Execution Time: 148.639 ms
(43 rows)

SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=17908.15..17908.16 rows=1 width=96) (actual time=1699.151..1699.152 rows=1 loops=1)
   ->  Gather  (cost=1007.63..17908.14 rows=2 width=41) (actual time=7.324..1702.008 rows=4711 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Hash Join  (cost=7.63..16907.94 rows=1 width=41) (actual time=8.325..1688.079 rows=1570 loops=3)
               Hash Cond: (mi.info_type_id = it1.id)
               ->  Nested Loop  (cost=5.20..16905.24 rows=98 width=45) (actual time=8.092..1686.549 rows=1570 loops=3)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=4.77..16670.19 rows=138 width=53) (actual time=1.058..1073.824 rows=14111 loops=3)
                           ->  Hash Join  (cost=4.35..16500.42 rows=381 width=38) (actual time=0.500..886.126 rows=22822 loops=3)
                                 Hash Cond: (mc.company_type_id = ct.id)
                                 ->  Nested Loop  (cost=3.29..16491.13 rows=1523 width=42) (actual time=0.375..867.594 rows=56386 loops=3)
                                       ->  Nested Loop  (cost=2.86..16296.91 rows=291 width=30) (actual time=0.300..644.214 rows=17435 loops=3)
                                             ->  Hash Join  (cost=2.43..15342.82 rows=708 width=9) (actual time=0.160..185.605 rows=40524 loops=3)
                                                   Hash Cond: (mi_idx.info_type_id = it2.id)
                                                   ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..15122.68 rows=79942 width=13) (actual time=0.062..160.756 rows=64632 loops=3)
                                                         Filter: ((info)::text > '7.0'::text)
                                                         Rows Removed by Filter: 395380
                                                   ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.038..0.038 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.020..0.022 rows=1 loops=3)
                                                               Filter: ((info)::text = 'rating'::text)
                                                               Rows Removed by Filter: 112
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..1.35 rows=1 width=21) (actual time=0.011..0.011 rows=0 loops=121572)
                                                   Index Cond: (id = mi_idx.movie_id)
                                                   Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.62 rows=5 width=12) (actual time=0.009..0.011 rows=3 loops=52304)
                                             Index Cond: (movie_id = t.id)
                                 ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.048..0.048 rows=1 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.031..0.033 rows=1 loops=3)
                                             Filter: ((kind)::text = 'production companies'::text)
                                             Rows Removed by Filter: 3
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.007..0.007 rows=1 loops=68466)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.69 rows=1 width=8) (actual time=0.043..0.043 rows=0 loops=42332)
                           Index Cond: (movie_id = mc.movie_id)
                           Filter: ((info)::text = ANY ('{Drama,Horror,Western,Family}'::text[]))
                           Rows Removed by Filter: 29
               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.080..0.080 rows=1 loops=3)
                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                     ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.049..0.061 rows=1 loops=3)
                           Filter: ((info)::text = 'genres'::text)
                           Rows Removed by Filter: 112
 Planning Time: 13.690 ms
 Execution Time: 1706.371 ms
(49 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=20155.74..20155.75 rows=1 width=96) (actual time=2577.023..2577.023 rows=1 loops=1)
   ->  Gather  (cost=20155.52..20155.73 rows=2 width=96) (actual time=2576.986..2581.592 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=19155.52..19155.53 rows=1 width=96) (actual time=2568.789..2568.790 rows=1 loops=3)
               ->  Hash Join  (cost=8.73..19155.43 rows=11 width=65) (actual time=542.771..2549.645 rows=37034 loops=3)
                     Hash Cond: (mi.info_type_id = it2.id)
                     ->  Nested Loop  (cost=6.30..19149.54 rows=1275 width=69) (actual time=542.511..2519.836 rows=172109 loops=3)
                           ->  Nested Loop  (cost=5.87..19075.02 rows=39 width=34) (actual time=542.418..2155.137 rows=5490 loops=3)
                                 ->  Hash Join  (cost=5.45..18650.83 rows=952 width=38) (actual time=539.759..1654.038 rows=100870 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Nested Loop  (cost=4.39..18629.17 rows=3809 width=42) (actual time=539.654..1600.815 rows=257695 loops=3)
                                             ->  Hash Join  (cost=3.96..18186.75 rows=727 width=30) (actual time=539.417..1143.635 rows=69960 loops=3)
                                                   Hash Cond: (t.kind_id = kt.id)
                                                   ->  Nested Loop  (cost=2.86..18164.20 rows=5089 width=34) (actual time=0.239..1102.265 rows=153308 loops=3)
                                                         ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=9) (actual time=0.148..190.881 rows=153308 loops=3)
                                                               Hash Cond: (miidx.info_type_id = it.id)
                                                               ->  Parallel Seq Scan on movie_info_idx miidx  (cost=0.00..13685.15 rows=575015 width=13) (actual time=0.036..88.851 rows=460012 loops=3)
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.047..0.047 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.025..0.028 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'rating'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=25) (actual time=0.005..0.005 rows=1 loops=459925)
                                                               Index Cond: (id = miidx.movie_id)
                                                   ->  Hash  (cost=1.09..1.09 rows=1 width=4) (actual time=0.043..0.043 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.031..0.033 rows=1 loops=3)
                                                               Filter: ((kind)::text = 'movie'::text)
                                                               Rows Removed by Filter: 6
                                             ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.56 rows=5 width=12) (actual time=0.004..0.005 rows=4 loops=209880)
                                                   Index Cond: (movie_id = t.id)
                                       ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.044..0.044 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.032..0.033 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                 ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=302610)
                                       Index Cond: (id = mc.company_id)
                                       Filter: ((country_code)::text = '[de]'::text)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.49 rows=42 width=51) (actual time=0.012..0.059 rows=31 loops=16470)
                                 Index Cond: (movie_id = t.id)
                     ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.077..0.077 rows=1 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.041..0.052 rows=1 loops=3)
                                 Filter: ((info)::text = 'release dates'::text)
                                 Rows Removed by Filter: 112
 Planning Time: 21.196 ms
 Execution Time: 2582.507 ms
(50 rows)

SET
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=19206.33..19206.34 rows=1 width=96) (actual time=1405.612..1405.612 rows=1 loops=1)
   ->  Gather  (cost=1004.54..19206.32 rows=1 width=41) (actual time=695.906..1413.534 rows=372 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Nested Loop  (cost=4.54..18206.22 rows=1 width=41) (actual time=690.096..1397.600 rows=124 loops=3)
               ->  Nested Loop  (cost=4.40..18205.87 rows=2 width=45) (actual time=689.971..1396.033 rows=707 loops=3)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=3.97..18203.87 rows=1 width=53) (actual time=689.852..1393.389 rows=20 loops=3)
                           ->  Nested Loop  (cost=3.84..18203.70 rows=1 width=57) (actual time=689.776..1393.113 rows=54 loops=3)
                                 ->  Nested Loop  (cost=3.42..18203.25 rows=1 width=42) (actual time=675.259..1390.672 rows=104 loops=3)
                                       Join Filter: (t.id = mc.movie_id)
                                       ->  Nested Loop  (cost=2.99..18202.60 rows=1 width=30) (actual time=675.116..1389.533 rows=30 loops=3)
                                             ->  Nested Loop  (cost=2.86..18202.37 rows=1 width=34) (actual time=5.179..1389.122 rows=117 loops=3)
                                                   ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=9) (actual time=0.305..196.953 rows=153308 loops=3)
                                                         Hash Cond: (miidx.info_type_id = it.id)
                                                         ->  Parallel Seq Scan on movie_info_idx miidx  (cost=0.00..13685.15 rows=575015 width=13) (actual time=0.047..88.292 rows=460012 loops=3)
                                                         ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.073..0.074 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.051..0.053 rows=1 loops=3)
                                                                     Filter: ((info)::text = 'rating'::text)
                                                                     Rows Removed by Filter: 112
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.58 rows=1 width=25) (actual time=0.007..0.007 rows=0 loops=459925)
                                                         Index Cond: (id = miidx.movie_id)
                                                         Filter: (((title)::text <> ''::text) AND (((title)::text ~~ '%Champion%'::text) OR ((title)::text ~~ '%Loser%'::text)))
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using kind_type_pkey on kind_type kt  (cost=0.13..0.18 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=352)
                                                   Index Cond: (id = t.kind_id)
                                                   Filter: ((kind)::text = 'movie'::text)
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.59 rows=5 width=12) (actual time=0.028..0.035 rows=3 loops=90)
                                             Index Cond: (movie_id = miidx.movie_id)
                                 ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.022..0.022 rows=1 loops=313)
                                       Index Cond: (id = mc.company_id)
                                       Filter: ((country_code)::text = '[us]'::text)
                                       Rows Removed by Filter: 0
                           ->  Index Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=161)
                                 Index Cond: (id = mc.company_type_id)
                                 Filter: ((kind)::text = 'production companies'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.48 rows=42 width=8) (actual time=0.028..0.117 rows=35 loops=61)
                           Index Cond: (movie_id = mc.movie_id)
               ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=2122)
                     Index Cond: (id = mi.info_type_id)
                     Filter: ((info)::text = 'release dates'::text)
                     Rows Removed by Filter: 1
 Planning Time: 22.068 ms
 Execution Time: 1414.628 ms
(47 rows)

SET
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=19206.33..19206.34 rows=1 width=96) (actual time=1207.440..1207.441 rows=1 loops=1)
   ->  Gather  (cost=1004.54..19206.32 rows=1 width=41) (actual time=667.109..1213.333 rows=53 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Nested Loop  (cost=4.54..18206.22 rows=1 width=41) (actual time=914.427..1199.672 rows=18 loops=3)
               ->  Nested Loop  (cost=4.40..18205.87 rows=2 width=45) (actual time=914.351..1199.472 rows=73 loops=3)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=3.97..18203.87 rows=1 width=53) (actual time=914.280..1199.130 rows=5 loops=3)
                           ->  Nested Loop  (cost=3.84..18203.70 rows=1 width=57) (actual time=914.084..1199.031 rows=16 loops=3)
                                 ->  Nested Loop  (cost=3.42..18203.25 rows=1 width=42) (actual time=914.007..1198.257 rows=32 loops=3)
                                       Join Filter: (t.id = mc.movie_id)
                                       ->  Nested Loop  (cost=2.99..18202.60 rows=1 width=30) (actual time=913.915..1198.081 rows=10 loops=3)
                                             ->  Nested Loop  (cost=2.86..18202.37 rows=1 width=34) (actual time=78.933..1197.977 rows=22 loops=3)
                                                   ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=9) (actual time=0.315..194.188 rows=153308 loops=3)
                                                         Hash Cond: (miidx.info_type_id = it.id)
                                                         ->  Parallel Seq Scan on movie_info_idx miidx  (cost=0.00..13685.15 rows=575015 width=13) (actual time=0.046..86.423 rows=460012 loops=3)
                                                         ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.083..0.083 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.059..0.061 rows=1 loops=3)
                                                                     Filter: ((info)::text = 'rating'::text)
                                                                     Rows Removed by Filter: 112
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.58 rows=1 width=25) (actual time=0.006..0.006 rows=0 loops=459925)
                                                         Index Cond: (id = miidx.movie_id)
                                                         Filter: (((title)::text <> ''::text) AND (((title)::text ~~ 'Champion%'::text) OR ((title)::text ~~ 'Loser%'::text)))
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using kind_type_pkey on kind_type kt  (cost=0.13..0.18 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=66)
                                                   Index Cond: (id = t.kind_id)
                                                   Filter: ((kind)::text = 'movie'::text)
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.59 rows=5 width=12) (actual time=0.013..0.016 rows=3 loops=29)
                                             Index Cond: (movie_id = miidx.movie_id)
                                 ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.023..0.023 rows=0 loops=95)
                                       Index Cond: (id = mc.company_id)
                                       Filter: ((country_code)::text = '[us]'::text)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=47)
                                 Index Cond: (id = mc.company_type_id)
                                 Filter: ((kind)::text = 'production companies'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.48 rows=42 width=8) (actual time=0.021..0.066 rows=16 loops=14)
                           Index Cond: (movie_id = mc.movie_id)
               ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=218)
                     Index Cond: (id = mi.info_type_id)
                     Filter: ((info)::text = 'release dates'::text)
                     Rows Removed by Filter: 1
 Planning Time: 21.857 ms
 Execution Time: 1214.235 ms
(47 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=20770.24..20770.25 rows=1 width=96) (actual time=4393.105..4393.105 rows=1 loops=1)
   ->  Gather  (cost=20770.01..20770.22 rows=2 width=96) (actual time=4392.504..4399.593 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=19770.01..19770.02 rows=1 width=96) (actual time=4384.867..4384.867 rows=1 loops=3)
               ->  Hash Join  (cost=8.73..19769.26 rows=100 width=41) (actual time=616.460..4274.373 rows=223463 loops=3)
                     Hash Cond: (mi.info_type_id = it2.id)
                     ->  Nested Loop  (cost=6.30..19736.13 rows=11276 width=45) (actual time=616.114..4084.155 rows=1438861 loops=3)
                           ->  Nested Loop  (cost=5.87..19075.02 rows=346 width=53) (actual time=615.997..2509.969 rows=29098 loops=3)
                                 ->  Hash Join  (cost=5.45..18650.83 rows=952 width=38) (actual time=615.843..1858.927 rows=100870 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Nested Loop  (cost=4.39..18629.17 rows=3809 width=42) (actual time=615.741..1803.214 rows=257695 loops=3)
                                             ->  Hash Join  (cost=3.96..18186.75 rows=727 width=30) (actual time=615.583..1305.497 rows=69960 loops=3)
                                                   Hash Cond: (t.kind_id = kt.id)
                                                   ->  Nested Loop  (cost=2.86..18164.20 rows=5089 width=34) (actual time=0.255..1262.543 rows=153308 loops=3)
                                                         ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=9) (actual time=0.141..200.370 rows=153308 loops=3)
                                                               Hash Cond: (miidx.info_type_id = it.id)
                                                               ->  Parallel Seq Scan on movie_info_idx miidx  (cost=0.00..13685.15 rows=575015 width=13) (actual time=0.038..93.140 rows=460012 loops=3)
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.044..0.045 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.025..0.028 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'rating'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=25) (actual time=0.006..0.006 rows=1 loops=459925)
                                                               Index Cond: (id = miidx.movie_id)
                                                   ->  Hash  (cost=1.09..1.09 rows=1 width=4) (actual time=0.048..0.048 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.036..0.038 rows=1 loops=3)
                                                               Filter: ((kind)::text = 'movie'::text)
                                                               Rows Removed by Filter: 6
                                             ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.56 rows=5 width=12) (actual time=0.004..0.006 rows=4 loops=209880)
                                                   Index Cond: (movie_id = t.id)
                                       ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.044..0.044 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.031..0.032 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                 ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.006..0.006 rows=0 loops=302610)
                                       Index Cond: (id = mc.company_id)
                                       Filter: ((country_code)::text = '[us]'::text)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.49 rows=42 width=8) (actual time=0.009..0.045 rows=49 loops=87293)
                                 Index Cond: (movie_id = t.id)
                     ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.085..0.085 rows=1 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.048..0.059 rows=1 loops=3)
                                 Filter: ((info)::text = 'release dates'::text)
                                 Rows Removed by Filter: 112
 Planning Time: 21.795 ms
 Execution Time: 4400.361 ms
(50 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7394.40..7394.41 rows=1 width=64) (actual time=1436.721..1436.721 rows=1 loops=1)
   ->  Nested Loop  (cost=8.05..7394.40 rows=1 width=22) (actual time=38.919..1435.779 rows=761 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         Rows Removed by Join Filter: 117
         ->  Nested Loop  (cost=8.05..7391.97 rows=1 width=26) (actual time=38.900..1425.125 rows=878 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=7.62..7390.07 rows=1 width=34) (actual time=37.436..1168.485 rows=1147 loops=1)
                     Join Filter: (mi_idx.info_type_id = it2.id)
                     Rows Removed by Join Filter: 2256
                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.023..0.025 rows=1 loops=1)
                           Filter: ((info)::text = 'rating'::text)
                           Rows Removed by Filter: 112
                     ->  Nested Loop  (cost=7.62..7387.55 rows=9 width=38) (actual time=36.404..1167.688 rows=3403 loops=1)
                           Join Filter: (t.id = mi_idx.movie_id)
                           ->  Nested Loop  (cost=7.19..7385.94 rows=3 width=25) (actual time=36.333..1124.219 rows=1966 loops=1)
                                 Join Filter: (t.kind_id = kt.id)
                                 Rows Removed by Join Filter: 616
                                 ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.027..0.029 rows=1 loops=1)
                                       Filter: ((kind)::text = 'movie'::text)
                                       Rows Removed by Filter: 6
                                 ->  Nested Loop  (cost=7.19..7384.59 rows=21 width=29) (actual time=8.488..1123.264 rows=2582 loops=1)
                                       ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=7.824..548.431 rows=37091 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.993..38.456 rows=3 loops=1)
                                                   Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                   Rows Removed by Filter: 134167
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=5.029..164.170 rows=12364 loops=3)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=26312
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.733..3.733 rows=12364 loops=3)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.014..0.014 rows=0 loops=37091)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: (production_year > 2010)
                                             Rows Removed by Filter: 1
                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=13) (actual time=0.020..0.021 rows=2 loops=1966)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((info)::text < '8.5'::text)
                                 Rows Removed by Filter: 0
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.191..0.222 rows=1 loops=1147)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,USA,American}'::text[]))
                     Rows Removed by Filter: 69
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=878)
               Filter: ((info)::text = 'countries'::text)
               Rows Removed by Filter: 21
 Planning Time: 13.830 ms
 Execution Time: 1437.263 ms
(47 rows)

SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4874.32..4874.33 rows=1 width=64) (actual time=585.164..585.164 rows=1 loops=1)
   ->  Nested Loop  (cost=8.05..4874.31 rows=1 width=22) (actual time=373.265..585.146 rows=1 loops=1)
         Join Filter: (t.kind_id = kt.id)
         Rows Removed by Join Filter: 1
         ->  Nested Loop  (cost=8.05..4873.21 rows=1 width=26) (actual time=15.482..585.098 rows=2 loops=1)
               Join Filter: (mi_idx.info_type_id = it2.id)
               Rows Removed by Join Filter: 1
               ->  Nested Loop  (cost=8.05..4870.79 rows=1 width=30) (actual time=15.438..585.035 rows=3 loops=1)
                     Join Filter: (t.id = mi_idx.movie_id)
                     ->  Nested Loop  (cost=7.62..4870.28 rows=1 width=33) (actual time=15.390..584.772 rows=8 loops=1)
                           Join Filter: (mi.info_type_id = it1.id)
                           ->  Nested Loop  (cost=7.62..4867.85 rows=1 width=37) (actual time=15.375..584.637 rows=8 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=7.19..4865.95 rows=1 width=29) (actual time=15.041..582.485 rows=15 loops=1)
                                       ->  Nested Loop  (cost=6.76..4832.75 rows=67 width=4) (actual time=9.792..282.846 rows=19528 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=2 width=4) (actual time=2.073..32.272 rows=1 loops=1)
                                                   Filter: ((keyword)::text = ANY ('{murder,murder-in-title}'::text[]))
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1100.31 rows=300 width=8) (actual time=7.711..241.651 rows=19528 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=12389
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=5.884..5.884 rows=19528 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.50 rows=1 width=25) (actual time=0.014..0.014 rows=0 loops=19528)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: ((production_year > 2010) AND (((title)::text ~~ '%murder%'::text) OR ((title)::text ~~ '%Murder%'::text) OR ((title)::text ~~ '%Mord%'::text)))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.134..0.141 rows=1 loops=15)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,USA,American}'::text[]))
                                       Rows Removed by Filter: 12
                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=8)
                                 Filter: ((info)::text = 'countries'::text)
                                 Rows Removed by Filter: 7
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=13) (actual time=0.030..0.031 rows=0 loops=8)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((info)::text > '6.0'::text)
                           Rows Removed by Filter: 1
               ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.016..0.016 rows=1 loops=3)
                     Filter: ((info)::text = 'rating'::text)
                     Rows Removed by Filter: 104
         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.018..0.019 rows=1 loops=2)
               Filter: ((kind)::text = 'movie'::text)
               Rows Removed by Filter: 3
 Planning Time: 13.807 ms
 Execution Time: 585.804 ms
(46 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7403.14..7403.15 rows=1 width=64) (actual time=2450.998..2450.998 rows=1 loops=1)
   ->  Nested Loop  (cost=8.05..7403.13 rows=1 width=22) (actual time=8.244..2446.163 rows=4115 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         Rows Removed by Join Filter: 594
         ->  Nested Loop  (cost=8.05..7400.71 rows=1 width=26) (actual time=8.223..2390.388 rows=4709 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=7.62..7398.81 rows=1 width=34) (actual time=8.070..1266.135 rows=5949 loops=1)
                     Join Filter: (mi_idx.info_type_id = it2.id)
                     Rows Removed by Join Filter: 11942
                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.024..0.026 rows=1 loops=1)
                           Filter: ((info)::text = 'rating'::text)
                           Rows Removed by Filter: 112
                     ->  Nested Loop  (cost=7.62..7395.82 rows=46 width=38) (actual time=8.041..1262.406 rows=17891 loops=1)
                           Join Filter: (t.id = mi_idx.movie_id)
                           ->  Nested Loop  (cost=7.19..7387.25 rows=16 width=25) (actual time=7.995..1110.245 rows=8073 loops=1)
                                 Join Filter: (t.kind_id = kt.id)
                                 Rows Removed by Join Filter: 4332
                                 ->  Nested Loop  (cost=7.19..7384.59 rows=55 width=29) (actual time=7.844..1099.750 rows=9739 loops=1)
                                       ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=7.787..530.749 rows=37091 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.983..39.534 rows=3 loops=1)
                                                   Filter: ((keyword IS NOT NULL) AND ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[])))
                                                   Rows Removed by Filter: 134167
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=5.021..157.978 rows=12364 loops=3)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=26312
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.729..3.729 rows=12364 loops=3)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.014..0.014 rows=0 loops=37091)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: (production_year > 2005)
                                             Rows Removed by Filter: 1
                                 ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=9739)
                                       ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.024..0.026 rows=2 loops=1)
                                             Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                             Rows Removed by Filter: 5
                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=13) (actual time=0.016..0.017 rows=2 loops=8073)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((info)::text < '8.5'::text)
                                 Rows Removed by Filter: 0
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.162..0.188 rows=1 loops=5949)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                     Rows Removed by Filter: 71
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=4709)
               Filter: ((info)::text = 'countries'::text)
               Rows Removed by Filter: 20
 Planning Time: 13.179 ms
 Execution Time: 2451.574 ms
(48 rows)

SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=51296.76..51296.77 rows=1 width=64) (actual time=725.809..725.809 rows=1 loops=1)
   ->  Gather  (cost=51296.54..51296.75 rows=2 width=64) (actual time=724.848..732.522 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=50296.54..50296.55 rows=1 width=64) (actual time=717.380..717.380 rows=1 loops=3)
               ->  Nested Loop  (cost=5353.19..50296.50 rows=8 width=60) (actual time=257.241..717.244 rows=109 loops=3)
                     ->  Nested Loop  (cost=5352.77..50292.99 rows=8 width=64) (actual time=257.135..715.583 rows=109 loops=3)
                           ->  Nested Loop  (cost=5352.34..50291.15 rows=1 width=76) (actual time=82.140..715.003 rows=19 loops=3)
                                 ->  Nested Loop  (cost=5352.20..50290.92 rows=1 width=80) (actual time=82.058..714.840 rows=19 loops=3)
                                       ->  Nested Loop  (cost=5352.07..50290.76 rows=1 width=84) (actual time=81.956..714.650 rows=19 loops=3)
                                             ->  Nested Loop  (cost=5351.63..48102.52 rows=1107 width=33) (actual time=54.053..496.259 rows=1711 loops=3)
                                                   ->  Nested Loop  (cost=5351.20..46229.21 rows=2025 width=12) (actual time=53.934..431.259 rows=4566 loops=3)
                                                         ->  Parallel Hash Join  (cost=5350.78..40467.98 rows=2789 width=8) (actual time=53.171..326.149 rows=14612 loops=3)
                                                               Hash Cond: (mc.company_id = cn.id)
                                                               ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..35097.06 rows=7675 width=12) (actual time=0.061..260.384 rows=20555 loops=3)
                                                                     Filter: (((note)::text ~~ '%(200%)%'::text) AND ((note)::text ~~ '%(worldwide)%'::text))
                                                                     Rows Removed by Filter: 849155
                                                               ->  Parallel Hash  (cost=4722.92..4722.92 rows=50229 width=4) (actual time=51.831..51.832 rows=28281 loops=3)
                                                                     Buckets: 131072  Batches: 1  Memory Usage: 4384kB
                                                                     ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=50229 width=4) (actual time=0.056..35.392 rows=28281 loops=3)
                                                                           Filter: ((country_code)::text = '[us]'::text)
                                                                           Rows Removed by Filter: 50051
                                                         ->  Index Only Scan using movie_id_aka_title on aka_title at  (cost=0.42..2.04 rows=3 width=4) (actual time=0.005..0.007 rows=0 loops=43837)
                                                               Index Cond: (movie_id = mc.movie_id)
                                                               Heap Fetches: 13699
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.93 rows=1 width=21) (actual time=0.013..0.013 rows=0 loops=13699)
                                                         Index Cond: (id = at.movie_id)
                                                         Filter: (production_year > 2000)
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.97 rows=1 width=51) (actual time=0.126..0.127 rows=0 loops=5134)
                                                   Index Cond: (movie_id = t.id)
                                                   Filter: (((note)::text ~~ '%internet%'::text) AND ((info)::text ~~ 'USA:% 200%'::text))
                                                   Rows Removed by Filter: 72
                                       ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=57)
                                             Index Cond: (id = mc.company_type_id)
                                             Heap Fetches: 57
                                 ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.19 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=57)
                                       Index Cond: (id = mi.info_type_id)
                                       Filter: ((info)::text = 'release dates'::text)
                           ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.36 rows=47 width=8) (actual time=0.025..0.028 rows=6 loops=57)
                                 Index Cond: (movie_id = t.id)
                     ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=328)
                           Index Cond: (id = mk.keyword_id)
                           Heap Fetches: 328
 Planning Time: 29.945 ms
 Execution Time: 733.367 ms
(46 rows)

SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=6434.72..6434.73 rows=1 width=64) (actual time=69.339..69.339 rows=1 loops=1)
   ->  Gather  (cost=6434.61..6434.72 rows=1 width=64) (actual time=69.157..72.113 rows=2 loops=1)
         Workers Planned: 1
         Workers Launched: 1
         ->  Partial Aggregate  (cost=5434.61..5434.62 rows=1 width=64) (actual time=63.224..63.224 rows=1 loops=2)
               ->  Nested Loop  (cost=2.84..5434.58 rows=5 width=60) (actual time=48.147..63.192 rows=18 loops=2)
                     ->  Nested Loop  (cost=2.42..5432.39 rows=5 width=64) (actual time=48.088..62.678 rows=18 loops=2)
                           ->  Nested Loop  (cost=1.99..5430.46 rows=1 width=76) (actual time=41.258..62.537 rows=2 loops=2)
                                 ->  Nested Loop  (cost=1.85..5430.22 rows=1 width=80) (actual time=41.225..62.498 rows=2 loops=2)
                                       ->  Nested Loop  (cost=1.41..5427.71 rows=1 width=29) (actual time=36.170..60.022 rows=13 loops=2)
                                             ->  Nested Loop  (cost=0.98..5426.78 rows=1 width=8) (actual time=36.111..59.398 rows=14 loops=2)
                                                   ->  Nested Loop  (cost=0.85..5426.62 rows=1 width=12) (actual time=36.068..59.296 rows=14 loops=2)
                                                         ->  Nested Loop  (cost=0.43..5424.56 rows=1 width=8) (actual time=35.136..57.071 rows=139 loops=2)
                                                               ->  Parallel Seq Scan on company_name cn  (cost=0.00..5068.50 rows=1 width=4) (actual time=35.040..46.552 rows=0 loops=2)
                                                                     Filter: (((country_code)::text = '[us]'::text) AND ((name)::text = 'YouTube'::text))
                                                                     Rows Removed by Filter: 117498
                                                               ->  Index Scan using company_id_movie_companies on movie_companies mc  (cost=0.43..356.04 rows=1 width=12) (actual time=0.188..20.933 rows=278 loops=1)
                                                                     Index Cond: (company_id = cn.id)
                                                                     Filter: (((note)::text ~~ '%(200%)%'::text) AND ((note)::text ~~ '%(worldwide)%'::text))
                                                                     Rows Removed by Filter: 1180
                                                         ->  Index Only Scan using movie_id_aka_title on aka_title at  (cost=0.42..2.04 rows=3 width=4) (actual time=0.015..0.015 rows=0 loops=278)
                                                               Index Cond: (movie_id = mc.movie_id)
                                                               Heap Fetches: 27
                                                   ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=27)
                                                         Index Cond: (id = mc.company_type_id)
                                                         Heap Fetches: 27
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..0.93 rows=1 width=21) (actual time=0.045..0.045 rows=1 loops=27)
                                                   Index Cond: (id = at.movie_id)
                                                   Filter: ((production_year >= 2005) AND (production_year <= 2010))
                                                   Rows Removed by Filter: 0
                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.51 rows=1 width=51) (actual time=0.179..0.189 rows=0 loops=26)
                                             Index Cond: (movie_id = t.id)
                                             Filter: (((note)::text ~~ '%internet%'::text) AND ((info)::text ~~ 'USA:% 200%'::text))
                                             Rows Removed by Filter: 19
                                 ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.19 rows=1 width=4) (actual time=0.024..0.024 rows=1 loops=3)
                                       Index Cond: (id = mi.info_type_id)
                                       Filter: ((info)::text = 'release dates'::text)
                           ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.46 rows=47 width=8) (actual time=0.081..0.087 rows=12 loops=3)
                                 Index Cond: (movie_id = t.id)
                     ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.027..0.027 rows=1 loops=37)
                           Index Cond: (id = mk.keyword_id)
                           Heap Fetches: 37
 Planning Time: 30.654 ms
 Execution Time: 72.819 ms
(44 rows)

SET
                                                                                                          QUERY PLAN                                                                                                          
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=271217.23..271217.24 rows=1 width=64) (actual time=1363.941..1363.942 rows=1 loops=1)
   ->  Gather  (cost=271217.01..271217.22 rows=2 width=64) (actual time=1363.729..1368.928 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=270217.01..270217.02 rows=1 width=64) (actual time=1356.201..1356.202 rows=1 loops=3)
               ->  Nested Loop  (cost=5.11..270216.63 rows=76 width=60) (actual time=325.832..1355.719 rows=757 loops=3)
                     Join Filter: (t.id = at.movie_id)
                     ->  Nested Loop  (cost=4.69..270201.06 rows=30 width=76) (actual time=308.528..1346.854 rows=2655 loops=3)
                           ->  Nested Loop  (cost=4.27..270187.90 rows=30 width=80) (actual time=308.440..1331.862 rows=2655 loops=3)
                                 ->  Nested Loop  (cost=3.84..270184.28 rows=2 width=72) (actual time=308.237..1317.664 rows=882 loops=3)
                                       ->  Nested Loop  (cost=3.71..270183.98 rows=2 width=76) (actual time=308.172..1314.487 rows=882 loops=3)
                                             ->  Nested Loop  (cost=3.29..270181.31 rows=6 width=80) (actual time=307.943..1300.134 rows=961 loops=3)
                                                   ->  Nested Loop  (cost=2.86..270180.68 rows=1 width=68) (actual time=307.850..1277.480 rows=594 loops=3)
                                                         ->  Hash Join  (cost=2.43..270164.10 rows=2 width=47) (actual time=307.749..1257.151 rows=594 loops=3)
                                                               Hash Cond: (mi.info_type_id = it1.id)
                                                               ->  Parallel Seq Scan on movie_info mi  (cost=0.00..270161.12 rows=200 width=51) (actual time=307.453..1256.186 rows=594 loops=3)
                                                                     Filter: ((info IS NOT NULL) AND ((note)::text ~~ '%internet%'::text) AND (((info)::text ~~ 'USA:% 199%'::text) OR ((info)::text ~~ 'USA:% 200%'::text)))
                                                                     Rows Removed by Filter: 4944646
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.096..0.096 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.057..0.068 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'release dates'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..8.29 rows=1 width=21) (actual time=0.033..0.033 rows=1 loops=1783)
                                                               Index Cond: (id = mi.movie_id)
                                                               Filter: (production_year > 1990)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.58 rows=5 width=12) (actual time=0.029..0.036 rows=2 loops=1782)
                                                         Index Cond: (movie_id = t.id)
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=2884)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((country_code)::text = '[us]'::text)
                                                   Rows Removed by Filter: 0
                                       ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=2647)
                                             Index Cond: (id = mc.company_type_id)
                                             Heap Fetches: 2647
                                 ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.34 rows=47 width=8) (actual time=0.014..0.015 rows=3 loops=2647)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=7964)
                                 Index Cond: (id = mk.keyword_id)
                                 Heap Fetches: 7964
                     ->  Index Only Scan using movie_id_aka_title on aka_title at  (cost=0.42..0.48 rows=3 width=4) (actual time=0.003..0.003 rows=0 loops=7964)
                           Index Cond: (movie_id = mk.movie_id)
                           Heap Fetches: 2271
 Planning Time: 29.823 ms
 Execution Time: 1369.682 ms
(46 rows)

SET
                                                                                               QUERY PLAN                                                                                               
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=241404.07..241404.08 rows=1 width=64) (actual time=1644.330..1644.330 rows=1 loops=1)
   ->  Gather  (cost=241403.85..241404.06 rows=2 width=64) (actual time=1644.167..1653.061 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=240403.85..240403.86 rows=1 width=64) (actual time=1636.365..1636.366 rows=1 loops=3)
               ->  Nested Loop  (cost=6.07..240394.49 rows=1873 width=38) (actual time=319.654..1634.838 rows=3782 loops=3)
                     Join Filter: (t.id = at.movie_id)
                     ->  Nested Loop  (cost=5.65..240025.58 rows=711 width=33) (actual time=303.621..1607.161 rows=8521 loops=3)
                           ->  Nested Loop  (cost=5.23..239713.69 rows=711 width=37) (actual time=303.516..1567.891 rows=8521 loops=3)
                                 ->  Hash Join  (cost=4.80..239612.38 rows=56 width=29) (actual time=303.289..1521.538 rows=3286 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Nested Loop  (cost=3.71..239610.99 rows=56 width=33) (actual time=303.099..1518.473 rows=3286 loops=3)
                                             ->  Nested Loop  (cost=3.29..239542.81 rows=153 width=37) (actual time=303.040..1462.445 rows=4792 loops=3)
                                                   ->  Nested Loop  (cost=2.86..239524.64 rows=29 width=25) (actual time=302.816..1363.133 rows=3554 loops=3)
                                                         ->  Hash Join  (cost=2.43..239268.80 rows=42 width=4) (actual time=302.724..1263.117 rows=3560 loops=3)
                                                               Hash Cond: (mi.info_type_id = it1.id)
                                                               ->  Parallel Seq Scan on movie_info mi  (cost=0.00..239253.38 rows=4774 width=8) (actual time=44.103..1259.827 rows=3603 loops=3)
                                                                     Filter: ((note)::text ~~ '%internet%'::text)
                                                                     Rows Removed by Filter: 4941637
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.070..0.070 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.049..0.060 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'release dates'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..6.09 rows=1 width=21) (actual time=0.027..0.027 rows=1 loops=10679)
                                                               Index Cond: (id = mi.movie_id)
                                                               Filter: (production_year > 1990)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.58 rows=5 width=12) (actual time=0.022..0.026 rows=1 loops=10662)
                                                         Index Cond: (movie_id = t.id)
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.011..0.011 rows=1 loops=14377)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((country_code)::text = '[us]'::text)
                                                   Rows Removed by Filter: 0
                                       ->  Hash  (cost=1.04..1.04 rows=4 width=4) (actual time=0.063..0.063 rows=4 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.038..0.040 rows=4 loops=3)
                                 ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.34 rows=47 width=8) (actual time=0.012..0.013 rows=3 loops=9857)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=25564)
                                 Index Cond: (id = mk.keyword_id)
                                 Heap Fetches: 25564
                     ->  Index Scan using movie_id_aka_title on aka_title at  (cost=0.42..0.48 rows=3 width=25) (actual time=0.003..0.003 rows=0 loops=25564)
                           Index Cond: (movie_id = mk.movie_id)
 Planning Time: 30.146 ms
 Execution Time: 1653.846 ms
(46 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3790.42..3790.43 rows=1 width=64) (actual time=829.672..829.673 rows=1 loops=1)
   ->  Nested Loop  (cost=9.46..3790.05 rows=74 width=33) (actual time=37.477..829.340 rows=385 loops=1)
         Join Filter: (n.id = an.person_id)
         ->  Nested Loop  (cost=9.03..3774.48 rows=32 width=25) (actual time=37.397..823.374 rows=323 loops=1)
               ->  Nested Loop  (cost=8.60..3759.93 rows=32 width=21) (actual time=37.299..816.464 rows=323 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=8.04..3755.95 rows=2 width=29) (actual time=37.226..812.686 rows=25 loops=1)
                           ->  Nested Loop  (cost=7.62..3753.72 rows=5 width=33) (actual time=36.760..811.743 rows=54 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.19..3753.12 rows=1 width=25) (actual time=29.544..809.981 rows=146 loops=1)
                                       ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.903..270.843 rows=41840 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.260..26.651 rows=1 loops=1)
                                                   Filter: ((keyword)::text = 'character-name-in-title'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.635..229.485 rows=41840 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=11541
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.928..7.928 rows=41840 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.012..0.012 rows=0 loops=41840)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: ((episode_nr >= 50) AND (episode_nr < 100))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.010..0.011 rows=0 loops=146)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.016..0.016 rows=0 loops=54)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.032..0.142 rows=13 loops=25)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.020..0.020 rows=1 loops=323)
                     Index Cond: (id = ci.person_id)
                     Heap Fetches: 323
         ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.46 rows=2 width=20) (actual time=0.015..0.017 rows=1 loops=323)
               Index Cond: (person_id = ci.person_id)
 Planning Time: 16.658 ms
 Execution Time: 830.388 ms
(38 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=5125.30..5125.31 rows=1 width=64) (actual time=51369.204..51369.205 rows=1 loops=1)
   ->  Nested Loop  (cost=9.46..5111.49 rows=2761 width=33) (actual time=12.227..49782.829 rows=3710592 loops=1)
         Join Filter: (n.id = an.person_id)
         ->  Nested Loop  (cost=9.03..4526.68 rows=1202 width=25) (actual time=12.152..33688.379 rows=2832555 loops=1)
               ->  Nested Loop  (cost=8.60..3979.90 rows=1202 width=21) (actual time=12.068..13562.870 rows=2832555 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=8.04..3852.77 rows=64 width=29) (actual time=11.138..3266.597 rows=68316 loops=1)
                           ->  Nested Loop  (cost=7.62..3773.45 rows=178 width=33) (actual time=11.006..1481.906 rows=148552 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.19..3752.95 rows=34 width=25) (actual time=10.883..904.625 rows=41840 loops=1)
                                       ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.845..271.348 rows=41840 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.305..26.456 rows=1 loops=1)
                                                   Filter: ((keyword)::text = 'character-name-in-title'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.532..229.796 rows=41840 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=11541
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.821..7.821 rows=41840 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.014..0.014 rows=1 loops=41840)
                                             Index Cond: (id = mk.movie_id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.008..0.011 rows=4 loops=41840)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.011..0.011 rows=0 loops=148552)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.010..0.136 rows=41 loops=68316)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=2832555)
                     Index Cond: (id = ci.person_id)
                     Heap Fetches: 2832555
         ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.46 rows=2 width=20) (actual time=0.004..0.005 rows=1 loops=2832555)
               Index Cond: (person_id = ci.person_id)
 Planning Time: 16.467 ms
 Execution Time: 51369.901 ms
(36 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4271.02..4271.03 rows=1 width=64) (actual time=4457.961..4457.962 rows=1 loops=1)
   ->  Nested Loop  (cost=9.46..4265.81 rows=1042 width=33) (actual time=12.413..4320.361 rows=319932 loops=1)
         Join Filter: (n.id = an.person_id)
         ->  Nested Loop  (cost=9.03..4044.93 rows=454 width=25) (actual time=12.345..3082.978 rows=221609 loops=1)
               ->  Nested Loop  (cost=8.60..3838.40 rows=454 width=21) (actual time=12.266..1630.749 rows=221609 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=8.04..3790.73 rows=24 width=29) (actual time=12.208..875.718 rows=8538 loops=1)
                           ->  Nested Loop  (cost=7.62..3760.87 rows=67 width=33) (actual time=11.303..808.895 rows=11406 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.19..3753.04 rows=13 width=25) (actual time=11.100..741.523 rows=6926 loops=1)
                                       ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=11.068..257.496 rows=41840 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.295..26.587 rows=1 loops=1)
                                                   Filter: ((keyword)::text = 'character-name-in-title'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.765..216.206 rows=41840 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=11541
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=8.018..8.018 rows=41840 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.011..0.011 rows=0 loops=41840)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: (episode_nr < 100)
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.006..0.008 rows=2 loops=6926)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=11406)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.008..0.079 rows=26 loops=8538)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=221609)
                     Index Cond: (id = ci.person_id)
                     Heap Fetches: 221609
         ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.46 rows=2 width=20) (actual time=0.004..0.005 rows=1 loops=221609)
               Index Cond: (person_id = ci.person_id)
 Planning Time: 16.886 ms
 Execution Time: 4458.666 ms
(38 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4132.51..4132.52 rows=1 width=64) (actual time=3646.807..3646.808 rows=1 loops=1)
   ->  Nested Loop  (cost=9.46..4128.69 rows=764 width=33) (actual time=12.177..3540.052 rows=249455 loops=1)
         Join Filter: (n.id = an.person_id)
         ->  Nested Loop  (cost=9.03..3967.16 rows=332 width=25) (actual time=12.103..2565.849 rows=169273 loops=1)
               ->  Nested Loop  (cost=8.60..3816.14 rows=332 width=21) (actual time=12.024..1440.170 rows=169273 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=8.04..3780.38 rows=18 width=29) (actual time=11.951..847.806 rows=6766 loops=1)
                           ->  Nested Loop  (cost=7.62..3758.55 rows=49 width=33) (actual time=11.083..796.241 rows=8661 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.19..3753.12 rows=9 width=25) (actual time=10.881..742.175 rows=5385 loops=1)
                                       ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.848..256.514 rows=41840 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.297..26.676 rows=1 loops=1)
                                                   Filter: ((keyword)::text = 'character-name-in-title'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.542..215.397 rows=41840 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=11541
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.832..7.832 rows=41840 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.011..0.011 rows=0 loops=41840)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: ((episode_nr >= 5) AND (episode_nr < 100))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.007..0.008 rows=2 loops=5385)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=8661)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.009..0.079 rows=25 loops=6766)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=169273)
                     Index Cond: (id = ci.person_id)
                     Heap Fetches: 169273
         ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.46 rows=2 width=20) (actual time=0.004..0.005 rows=1 loops=169273)
               Index Cond: (person_id = ci.person_id)
 Planning Time: 16.617 ms
 Execution Time: 3647.539 ms
(38 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4530.17..4530.18 rows=1 width=64) (actual time=33206.537..33206.537 rows=1 loops=1)
   ->  Nested Loop  (cost=9.03..4529.69 rows=97 width=15) (actual time=12.272..33050.043 rows=258289 loops=1)
         ->  Nested Loop  (cost=8.60..3979.90 rows=1202 width=4) (actual time=12.114..13148.004 rows=2832555 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=8.04..3852.77 rows=64 width=12) (actual time=11.164..3073.196 rows=68316 loops=1)
                     ->  Nested Loop  (cost=7.62..3773.45 rows=178 width=16) (actual time=11.025..1453.406 rows=148552 loops=1)
                           Join Filter: (t.id = mc.movie_id)
                           ->  Nested Loop  (cost=7.19..3752.95 rows=34 width=8) (actual time=10.889..891.041 rows=41840 loops=1)
                                 ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.860..265.377 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.297..26.442 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.554..224.332 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.832..7.832 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=41840)
                                       Index Cond: (id = mk.movie_id)
                                       Heap Fetches: 41840
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.008..0.011 rows=4 loops=41840)
                                 Index Cond: (movie_id = mk.movie_id)
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.010..0.010 rows=0 loops=148552)
                           Index Cond: (id = mc.company_id)
                           Filter: ((country_code)::text = '[us]'::text)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.009..0.133 rows=41 loops=68316)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.007..0.007 rows=0 loops=2832555)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ 'B%'::text)
               Rows Removed by Filter: 1
 Planning Time: 10.647 ms
 Execution Time: 33207.261 ms
(34 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4371.77..4371.78 rows=1 width=64) (actual time=32455.408..32455.408 rows=1 loops=1)
   ->  Nested Loop  (cost=9.03..4371.77 rows=1 width=15) (actual time=26.864..32416.385 rows=52306 loops=1)
         ->  Nested Loop  (cost=8.60..4371.31 rows=1 width=27) (actual time=26.788..32154.718 rows=52306 loops=1)
               ->  Nested Loop  (cost=8.18..4370.87 rows=1 width=31) (actual time=26.734..31647.277 rows=52306 loops=1)
                     ->  Nested Loop  (cost=7.75..4370.30 rows=1 width=23) (actual time=26.688..31483.929 rows=6642 loops=1)
                           ->  Nested Loop  (cost=7.32..3800.84 rows=1245 width=12) (actual time=10.972..11919.191 rows=1038393 loops=1)
                                 ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.921..267.144 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.310..26.714 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.603..224.463 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.889..7.889 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.017..0.264 rows=25 loops=41840)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.018..0.018 rows=0 loops=1038393)
                                 Index Cond: (id = ci.person_id)
                                 Filter: ((name)::text ~~ 'Z%'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.52 rows=5 width=8) (actual time=0.014..0.021 rows=8 loops=6642)
                           Index Cond: (movie_id = ci.movie_id)
               ->  Index Only Scan using company_name_pkey on company_name cn  (cost=0.42..0.44 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=52306)
                     Index Cond: (id = mc.company_id)
                     Heap Fetches: 52306
         ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.45 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=52306)
               Index Cond: (id = ci.movie_id)
               Heap Fetches: 52306
 Planning Time: 10.808 ms
 Execution Time: 32456.093 ms
(31 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4371.77..4371.78 rows=1 width=64) (actual time=31313.615..31313.615 rows=1 loops=1)
   ->  Nested Loop  (cost=9.03..4371.77 rows=1 width=15) (actual time=225.969..31310.805 rows=1918 loops=1)
         ->  Nested Loop  (cost=8.60..4371.31 rows=1 width=27) (actual time=225.893..31296.790 rows=1918 loops=1)
               ->  Nested Loop  (cost=8.18..4370.87 rows=1 width=31) (actual time=225.815..31261.763 rows=1918 loops=1)
                     ->  Nested Loop  (cost=7.75..4370.30 rows=1 width=23) (actual time=225.766..31251.226 rows=250 loops=1)
                           ->  Nested Loop  (cost=7.32..3800.84 rows=1245 width=12) (actual time=11.030..11848.687 rows=1038393 loops=1)
                                 ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.984..266.004 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.283..26.456 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.693..223.596 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.943..7.943 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.017..0.262 rows=25 loops=41840)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.018..0.018 rows=0 loops=1038393)
                                 Index Cond: (id = ci.person_id)
                                 Filter: ((name)::text ~~ 'X%'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.52 rows=5 width=8) (actual time=0.026..0.037 rows=8 loops=250)
                           Index Cond: (movie_id = ci.movie_id)
               ->  Index Only Scan using company_name_pkey on company_name cn  (cost=0.42..0.44 rows=1 width=4) (actual time=0.017..0.017 rows=1 loops=1918)
                     Index Cond: (id = mc.company_id)
                     Heap Fetches: 1918
         ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.45 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=1918)
               Index Cond: (id = ci.movie_id)
               Heap Fetches: 1918
 Planning Time: 10.676 ms
 Execution Time: 31314.257 ms
(31 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4371.77..4371.78 rows=1 width=32) (actual time=31763.962..31763.963 rows=1 loops=1)
   ->  Nested Loop  (cost=9.03..4371.77 rows=1 width=15) (actual time=130.082..31750.451 rows=11538 loops=1)
         ->  Nested Loop  (cost=8.60..4371.31 rows=1 width=27) (actual time=130.012..31667.140 rows=11538 loops=1)
               ->  Nested Loop  (cost=8.18..4370.87 rows=1 width=31) (actual time=129.939..31489.703 rows=11538 loops=1)
                     ->  Nested Loop  (cost=7.75..4370.30 rows=1 width=23) (actual time=129.888..31424.622 rows=1972 loops=1)
                           ->  Nested Loop  (cost=7.32..3800.84 rows=1245 width=12) (actual time=10.909..11877.671 rows=1038393 loops=1)
                                 ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.858..265.480 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.292..26.442 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.558..223.101 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.834..7.834 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.017..0.263 rows=25 loops=41840)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.018..0.018 rows=0 loops=1038393)
                                 Index Cond: (id = ci.person_id)
                                 Filter: ((name)::text ~~ '%Bert%'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.52 rows=5 width=8) (actual time=0.020..0.028 rows=6 loops=1972)
                           Index Cond: (movie_id = ci.movie_id)
               ->  Index Only Scan using company_name_pkey on company_name cn  (cost=0.42..0.44 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=11538)
                     Index Cond: (id = mc.company_id)
                     Heap Fetches: 11538
         ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.45 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=11538)
               Index Cond: (id = ci.movie_id)
               Heap Fetches: 11538
 Planning Time: 10.788 ms
 Execution Time: 31764.721 ms
(31 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4529.69..4529.70 rows=1 width=32) (actual time=33559.162..33559.163 rows=1 loops=1)
   ->  Nested Loop  (cost=9.03..4526.68 rows=1202 width=15) (actual time=12.183..32389.192 rows=2832555 loops=1)
         ->  Nested Loop  (cost=8.60..3979.90 rows=1202 width=4) (actual time=12.104..13333.982 rows=2832555 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=8.04..3852.77 rows=64 width=12) (actual time=11.174..3077.146 rows=68316 loops=1)
                     ->  Nested Loop  (cost=7.62..3773.45 rows=178 width=16) (actual time=11.039..1447.224 rows=148552 loops=1)
                           Join Filter: (t.id = mc.movie_id)
                           ->  Nested Loop  (cost=7.19..3752.95 rows=34 width=8) (actual time=10.905..886.760 rows=41840 loops=1)
                                 ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.878..265.327 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.320..26.621 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.549..224.334 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.840..7.840 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=41840)
                                       Index Cond: (id = mk.movie_id)
                                       Heap Fetches: 41840
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.008..0.011 rows=4 loops=41840)
                                 Index Cond: (movie_id = mk.movie_id)
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.010..0.010 rows=0 loops=148552)
                           Index Cond: (id = mc.company_id)
                           Filter: ((country_code)::text = '[us]'::text)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.009..0.136 rows=41 loops=68316)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=19) (actual time=0.006..0.006 rows=1 loops=2832555)
               Index Cond: (id = ci.person_id)
 Planning Time: 10.593 ms
 Execution Time: 33559.805 ms
(32 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4654.76..4654.77 rows=1 width=32) (actual time=37931.794..37931.794 rows=1 loops=1)
   ->  Nested Loop  (cost=9.03..4653.75 rows=401 width=15) (actual time=15.408..37536.642 rows=1113120 loops=1)
         ->  Nested Loop  (cost=8.61..4476.08 rows=401 width=19) (actual time=15.346..34079.201 rows=1113120 loops=1)
               ->  Nested Loop  (cost=8.18..4389.95 rows=151 width=27) (actual time=11.266..32587.044 rows=149494 loops=1)
                     ->  Nested Loop  (cost=7.75..3820.49 rows=1245 width=16) (actual time=11.191..12766.377 rows=1038393 loops=1)
                           Join Filter: (t.id = ci.movie_id)
                           ->  Nested Loop  (cost=7.19..3752.95 rows=34 width=8) (actual time=11.134..902.661 rows=41840 loops=1)
                                 ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=11.094..269.077 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.302..26.362 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.783..226.325 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=8.065..8.065 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=41840)
                                       Index Cond: (id = mk.movie_id)
                                       Heap Fetches: 41840
                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.018..0.264 rows=25 loops=41840)
                                 Index Cond: (movie_id = mk.movie_id)
                     ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.018..0.018 rows=0 loops=1038393)
                           Index Cond: (id = ci.person_id)
                           Filter: ((name)::text ~~ '%B%'::text)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.52 rows=5 width=8) (actual time=0.005..0.008 rows=7 loops=149494)
                     Index Cond: (movie_id = ci.movie_id)
         ->  Index Only Scan using company_name_pkey on company_name cn  (cost=0.42..0.44 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1113120)
               Index Cond: (id = mc.company_id)
               Heap Fetches: 1113120
 Planning Time: 10.946 ms
 Execution Time: 37932.493 ms
(32 rows)

SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=111692.15..111692.16 rows=1 width=96) (actual time=13754.346..13754.347 rows=1 loops=1)
   ->  Nested Loop  (cost=1006.71..111692.14 rows=1 width=65) (actual time=327.241..13752.712 rows=410 loops=1)
         ->  Gather  (cost=1006.28..111691.68 rows=1 width=60) (actual time=327.137..13745.045 rows=410 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Nested Loop  (cost=6.28..110691.58 rows=1 width=60) (actual time=438.074..13741.274 rows=137 loops=3)
                     ->  Nested Loop  (cost=5.85..108696.70 rows=3377 width=64) (actual time=2.058..12592.201 rows=35780 loops=3)
                           ->  Hash Join  (cost=5.29..74146.13 rows=1468 width=56) (actual time=1.246..3908.918 rows=15144 loops=3)
                                 Hash Cond: (mi.info_type_id = it1.id)
                                 ->  Nested Loop  (cost=2.86..73692.04 rows=165842 width=60) (actual time=0.248..3635.904 rows=2310111 loops=3)
                                       ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=9) (actual time=0.130..212.074 rows=153308 loops=3)
                                             Hash Cond: (mi_idx.info_type_id = it2.id)
                                             ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=13) (actual time=0.037..93.070 rows=460012 loops=3)
                                             ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.037..0.037 rows=1 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.020..0.023 rows=1 loops=3)
                                                         Filter: ((info)::text = 'votes'::text)
                                                         Rows Removed by Filter: 112
                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..11.06 rows=42 width=51) (actual time=0.005..0.019 rows=15 loops=459925)
                                             Index Cond: (movie_id = mi_idx.movie_id)
                                 ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.075..0.075 rows=1 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.051..0.053 rows=1 loops=3)
                                             Filter: ((info)::text = 'budget'::text)
                                             Rows Removed by Filter: 112
                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..23.52 rows=2 width=8) (actual time=0.331..0.571 rows=2 loops=45431)
                                 Index Cond: (movie_id = mi.movie_id)
                                 Filter: ((note)::text = ANY ('{(producer),"(executive producer)"}'::text[]))
                                 Rows Removed by Filter: 38
                     ->  Index Scan using name_pkey on name n  (cost=0.43..0.59 rows=1 width=4) (actual time=0.031..0.031 rows=0 loops=107339)
                           Index Cond: (id = ci.person_id)
                           Filter: (((name)::text ~~ '%Tim%'::text) AND ((gender)::text = 'm'::text))
                           Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.46 rows=1 width=21) (actual time=0.031..0.031 rows=1 loops=410)
               Index Cond: (id = mi.movie_id)
 Planning Time: 10.376 ms
 Execution Time: 13760.996 ms
(37 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=17462.60..17462.61 rows=1 width=96) (actual time=527.482..527.482 rows=1 loops=1)
   ->  Nested Loop  (cost=1004.43..17462.59 rows=1 width=65) (actual time=271.981..527.421 rows=11 loops=1)
         ->  Nested Loop  (cost=1004.00..17461.90 rows=1 width=69) (actual time=121.050..518.959 rows=268 loops=1)
               ->  Gather  (cost=1003.43..17437.17 rows=1 width=77) (actual time=120.017..357.167 rows=358 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Nested Loop  (cost=3.43..16437.07 rows=1 width=77) (actual time=49.557..461.076 rows=119 loops=3)
                           ->  Nested Loop  (cost=3.29..16435.43 rows=10 width=81) (actual time=49.533..460.446 rows=119 loops=3)
                                 ->  Nested Loop  (cost=2.86..15789.08 rows=56 width=30) (actual time=2.047..284.180 rows=2051 loops=3)
                                       ->  Hash Join  (cost=2.43..15179.85 rows=178 width=9) (actual time=0.282..144.694 rows=5283 loops=3)
                                             Hash Cond: (mi_idx.info_type_id = it2.id)
                                             ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..15122.68 rows=20101 width=13) (actual time=0.062..137.319 rows=17883 loops=3)
                                                   Filter: ((info)::text > '8.0'::text)
                                                   Rows Removed by Filter: 442129
                                             ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.063..0.063 rows=1 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.038..0.041 rows=1 loops=3)
                                                         Filter: ((info)::text = 'rating'::text)
                                                         Rows Removed by Filter: 112
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..3.42 rows=1 width=21) (actual time=0.025..0.025 rows=0 loops=15849)
                                             Index Cond: (id = mi_idx.movie_id)
                                             Filter: ((production_year >= 2008) AND (production_year <= 2014))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..11.53 rows=1 width=51) (actual time=0.085..0.085 rows=0 loops=6152)
                                       Index Cond: (movie_id = t.id)
                                       Filter: ((note IS NULL) AND ((info)::text = ANY ('{Horror,Thriller}'::text[])))
                                       Rows Removed by Filter: 18
                           ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=358)
                                 Index Cond: (id = mi.info_type_id)
                                 Filter: ((info)::text = 'genres'::text)
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..24.72 rows=1 width=8) (actual time=0.358..0.467 rows=1 loops=358)
                     Index Cond: (movie_id = t.id)
                     Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                     Rows Removed by Filter: 34
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.69 rows=1 width=4) (actual time=0.030..0.030 rows=0 loops=268)
               Index Cond: (id = ci.person_id)
               Filter: ((gender IS NOT NULL) AND ((gender)::text = 'f'::text))
               Rows Removed by Filter: 1
 Planning Time: 10.292 ms
 Execution Time: 533.971 ms
(40 rows)

SET
                                                                                          QUERY PLAN                                                                                          
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=74751.79..74751.80 rows=1 width=96) (actual time=16098.410..16098.411 rows=1 loops=1)
   ->  Gather  (cost=74751.57..74751.78 rows=2 width=96) (actual time=16093.742..16103.231 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=73751.57..73751.58 rows=1 width=96) (actual time=16089.267..16089.267 rows=1 loops=3)
               ->  Nested Loop  (cost=6.71..73751.49 rows=11 width=65) (actual time=34.897..16075.760 rows=9358 loops=3)
                     ->  Nested Loop  (cost=6.28..73732.96 rows=27 width=69) (actual time=18.115..15656.941 rows=18052 loops=3)
                           ->  Nested Loop  (cost=5.72..73229.83 rows=21 width=77) (actual time=1.326..4014.182 rows=34172 loops=3)
                                 Join Filter: (mi.movie_id = t.id)
                                 ->  Hash Join  (cost=5.29..73217.55 rows=21 width=56) (actual time=1.229..3548.325 rows=34172 loops=3)
                                       Hash Cond: (mi.info_type_id = it1.id)
                                       ->  Nested Loop  (cost=2.86..73208.58 rows=2405 width=60) (actual time=1.019..3519.738 rows=34964 loops=3)
                                             ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=9) (actual time=0.132..248.963 rows=153308 loops=3)
                                                   Hash Cond: (mi_idx.info_type_id = it2.id)
                                                   ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=13) (actual time=0.036..96.081 rows=460012 loops=3)
                                                   ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.039..0.040 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.020..0.023 rows=1 loops=3)
                                                               Filter: ((info)::text = 'votes'::text)
                                                               Rows Removed by Filter: 112
                                             ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..11.38 rows=1 width=51) (actual time=0.020..0.021 rows=0 loops=459925)
                                                   Index Cond: (movie_id = mi_idx.movie_id)
                                                   Filter: ((info)::text = ANY ('{Horror,Action,Sci-Fi,Thriller,Crime,War}'::text[]))
                                                   Rows Removed by Filter: 15
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.080..0.080 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.045..0.058 rows=1 loops=3)
                                                   Filter: ((info)::text = 'genres'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=21) (actual time=0.012..0.012 rows=1 loops=102516)
                                       Index Cond: (id = mi_idx.movie_id)
                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..23.95 rows=1 width=8) (actual time=0.290..0.340 rows=1 loops=102516)
                                 Index Cond: (movie_id = t.id)
                                 Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                 Rows Removed by Filter: 39
                     ->  Index Scan using name_pkey on name n  (cost=0.43..0.69 rows=1 width=4) (actual time=0.022..0.022 rows=1 loops=54155)
                           Index Cond: (id = ci.person_id)
                           Filter: ((gender)::text = 'm'::text)
                           Rows Removed by Filter: 0
 Planning Time: 10.328 ms
 Execution Time: 16103.874 ms
(41 rows)

SET
                                                                                                QUERY PLAN                                                                                                 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=85507.29..85507.30 rows=1 width=64) (actual time=585.723..585.723 rows=1 loops=1)
   ->  Nested Loop  (cost=1004.44..85507.29 rows=1 width=32) (actual time=240.663..585.588 rows=184 loops=1)
         ->  Nested Loop  (cost=1004.30..85507.10 rows=1 width=36) (actual time=240.629..585.141 rows=184 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=1003.86..85479.65 rows=1 width=44) (actual time=240.441..573.708 rows=77 loops=1)
                     ->  Nested Loop  (cost=1003.44..85478.45 rows=1 width=48) (actual time=240.376..572.531 rows=79 loops=1)
                           Join Filter: (t.id = mc.movie_id)
                           ->  Nested Loop  (cost=1003.01..85475.72 rows=1 width=40) (actual time=240.260..569.861 rows=102 loops=1)
                                 ->  Gather  (cost=1002.58..85474.30 rows=1 width=44) (actual time=233.249..571.312 rows=115 loops=1)
                                       Workers Planned: 2
                                       Workers Launched: 2
                                       ->  Nested Loop  (cost=2.58..84474.20 rows=1 width=44) (actual time=226.693..572.685 rows=38 loops=3)
                                             ->  Hash Join  (cost=2.15..84471.40 rows=2 width=23) (actual time=224.836..569.443 rows=142 loops=3)
                                                   Hash Cond: (ci.role_id = rt.id)
                                                   ->  Nested Loop  (cost=0.99..84470.16 rows=19 width=27) (actual time=224.606..569.123 rows=142 loops=3)
                                                         Join Filter: (n.id = ci.person_id)
                                                         ->  Nested Loop  (cost=0.42..82155.48 rows=9 width=23) (actual time=218.919..546.370 rows=519 loops=3)
                                                               ->  Parallel Seq Scan on name n  (cost=0.00..81659.82 rows=40 width=19) (actual time=217.508..518.898 rows=2256 loops=3)
                                                                     Filter: (((name)::text ~~ '%Ang%'::text) AND ((gender)::text = 'f'::text))
                                                                     Rows Removed by Filter: 1386908
                                                               ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..12.37 rows=2 width=4) (actual time=0.011..0.011 rows=0 loops=6768)
                                                                     Index Cond: (person_id = n.id)
                                                                     Heap Fetches: 1558
                                                         ->  Index Scan using person_id_cast_info on cast_info ci  (cost=0.56..257.04 rows=12 width=16) (actual time=0.040..0.043 rows=0 loops=1558)
                                                               Index Cond: (person_id = an.person_id)
                                                               Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                               Rows Removed by Filter: 44
                                                   ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.068..0.068 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.034..0.037 rows=1 loops=3)
                                                               Filter: ((role)::text = 'actress'::text)
                                                               Rows Removed by Filter: 11
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..1.40 rows=1 width=21) (actual time=0.022..0.022 rows=0 loops=425)
                                                   Index Cond: (id = ci.movie_id)
                                                   Filter: ((production_year >= 2005) AND (production_year <= 2009))
                                                   Rows Removed by Filter: 1
                                 ->  Index Only Scan using char_name_pkey on char_name chn  (cost=0.43..1.42 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=115)
                                       Index Cond: (id = ci.person_role_id)
                                       Heap Fetches: 102
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.72 rows=1 width=8) (actual time=0.020..0.025 rows=1 loops=102)
                                 Index Cond: (movie_id = ci.movie_id)
                                 Filter: ((note IS NOT NULL) AND (((note)::text ~~ '%(USA)%'::text) OR ((note)::text ~~ '%(worldwide)%'::text)))
                                 Rows Removed by Filter: 6
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.20 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=79)
                           Index Cond: (id = mc.company_id)
                           Filter: ((country_code)::text = '[us]'::text)
                           Rows Removed by Filter: 0
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..27.43 rows=2 width=8) (actual time=0.043..0.147 rows=2 loops=77)
                     Index Cond: (movie_id = ci.movie_id)
                     Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%200%'::text) OR ((info)::text ~~ 'USA:%200%'::text)))
                     Rows Removed by Filter: 166
         ->  Index Scan using info_type_pkey on info_type it  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=184)
               Index Cond: (id = mi.info_type_id)
               Filter: ((info)::text = 'release dates'::text)
 Planning Time: 50.353 ms
 Execution Time: 589.821 ms
(56 rows)

SET
                                                                                                   QUERY PLAN                                                                                                   
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=55722.95..55722.96 rows=1 width=64) (actual time=281.102..281.102 rows=1 loops=1)
   ->  Nested Loop  (cost=1003.41..55722.94 rows=1 width=32) (actual time=237.908..281.084 rows=15 loops=1)
         ->  Nested Loop  (cost=1003.28..55722.77 rows=1 width=36) (actual time=237.852..281.000 rows=15 loops=1)
               Join Filter: (ci.person_id = n.id)
               ->  Nested Loop  (cost=1002.85..55721.23 rows=1 width=29) (actual time=221.687..278.954 rows=275 loops=1)
                     ->  Nested Loop  (cost=1002.70..55721.05 rows=1 width=33) (actual time=221.652..278.360 rows=275 loops=1)
                           Join Filter: (t.id = mi.movie_id)
                           ->  Nested Loop  (cost=1002.27..55693.47 rows=1 width=41) (actual time=221.555..251.372 rows=275 loops=1)
                                 ->  Nested Loop  (cost=1001.85..55692.20 rows=1 width=45) (actual time=221.498..250.296 rows=275 loops=1)
                                       ->  Nested Loop  (cost=1001.42..55690.54 rows=1 width=41) (actual time=221.423..248.259 rows=99 loops=1)
                                             ->  Nested Loop  (cost=1001.00..55689.08 rows=1 width=45) (actual time=221.342..245.920 rows=100 loops=1)
                                                   Join Filter: (t.id = ci.movie_id)
                                                   ->  Gather  (cost=1000.43..55647.01 rows=1 width=29) (actual time=221.252..242.926 rows=4 loops=1)
                                                         Workers Planned: 2
                                                         Workers Launched: 2
                                                         ->  Nested Loop  (cost=0.43..54646.91 rows=1 width=29) (actual time=234.160..261.268 rows=1 loops=3)
                                                               ->  Parallel Seq Scan on title t  (cost=0.00..54433.61 rows=10 width=21) (actual time=54.243..261.083 rows=2 loops=3)
                                                                     Filter: ((production_year >= 2007) AND (production_year <= 2008) AND ((title)::text ~~ '%Kung%Fu%Panda%'::text))
                                                                     Rows Removed by Filter: 842768
                                                               ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..21.32 rows=1 width=8) (actual time=0.074..0.076 rows=1 loops=7)
                                                                     Index Cond: (movie_id = t.id)
                                                                     Filter: (((note)::text ~~ '%(200%)%'::text) AND (((note)::text ~~ '%(USA)%'::text) OR ((note)::text ~~ '%(worldwide)%'::text)))
                                                                     Rows Removed by Filter: 6
                                                   ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..42.06 rows=1 width=16) (actual time=0.032..1.174 rows=25 loops=4)
                                                         Index Cond: (movie_id = mc.movie_id)
                                                         Filter: ((note)::text = '(voice)'::text)
                                                         Rows Removed by Filter: 127
                                             ->  Index Only Scan using char_name_pkey on char_name chn  (cost=0.43..1.46 rows=1 width=4) (actual time=0.022..0.022 rows=1 loops=100)
                                                   Index Cond: (id = ci.person_role_id)
                                                   Heap Fetches: 99
                                       ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..1.64 rows=2 width=4) (actual time=0.015..0.019 rows=3 loops=99)
                                             Index Cond: (person_id = ci.person_id)
                                             Heap Fetches: 275
                                 ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.27 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=275)
                                       Index Cond: (id = mc.company_id)
                                       Filter: ((country_code)::text = '[us]'::text)
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..27.56 rows=1 width=8) (actual time=0.016..0.098 rows=1 loops=275)
                                 Index Cond: (movie_id = ci.movie_id)
                                 Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%2007%'::text) OR ((info)::text ~~ 'USA:%2008%'::text)))
                                 Rows Removed by Filter: 295
                     ->  Index Scan using info_type_pkey on info_type it  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=275)
                           Index Cond: (id = mi.info_type_id)
                           Filter: ((info)::text = 'release dates'::text)
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.53 rows=1 width=19) (actual time=0.007..0.007 rows=0 loops=275)
                     Index Cond: (id = an.person_id)
                     Filter: (((name)::text ~~ '%Angel%'::text) AND ((gender)::text = 'f'::text))
                     Rows Removed by Filter: 1
         ->  Index Scan using role_type_pkey on role_type rt  (cost=0.14..0.16 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=15)
               Index Cond: (id = ci.role_id)
               Filter: ((role)::text = 'actress'::text)
 Planning Time: 48.512 ms
 Execution Time: 283.634 ms
(52 rows)

SET
                                                                                                           QUERY PLAN                                                                                                           
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=224820.56..224820.57 rows=1 width=64) (actual time=4053.741..4053.741 rows=1 loops=1)
   ->  Gather  (cost=224820.34..224820.55 rows=2 width=64) (actual time=4035.108..4060.140 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=223820.34..223820.35 rows=1 width=64) (actual time=4033.093..4033.094 rows=1 loops=3)
               ->  Nested Loop  (cost=135386.97..223820.33 rows=2 width=32) (actual time=3036.527..4032.404 rows=1192 loops=3)
                     Join Filter: (n.id = an.person_id)
                     ->  Nested Loop  (cost=135386.54..223818.68 rows=1 width=40) (actual time=2986.543..4026.700 rows=877 loops=3)
                           ->  Nested Loop  (cost=135386.12..223816.35 rows=2 width=44) (actual time=2940.477..4006.899 rows=2862 loops=3)
                                 ->  Hash Join  (cost=135385.69..223813.63 rows=1 width=52) (actual time=2893.652..3994.981 rows=710 loops=3)
                                       Hash Cond: (mi.info_type_id = it.id)
                                       ->  Nested Loop  (cost=135383.27..223811.07 rows=52 width=56) (actual time=2893.404..3994.137 rows=710 loops=3)
                                             ->  Nested Loop  (cost=135382.83..221277.71 rows=93 width=48) (actual time=2888.521..3914.105 rows=1116 loops=3)
                                                   ->  Nested Loop  (cost=135382.40..221003.48 rows=193 width=52) (actual time=2888.377..3893.707 rows=1229 loops=3)
                                                         ->  Hash Join  (cost=135381.97..195421.31 rows=16716 width=33) (actual time=2885.788..3479.319 rows=56136 loops=3)
                                                               Hash Cond: (t.id = ci.movie_id)
                                                               ->  Parallel Seq Scan on title t  (cost=0.00..49166.29 rows=575821 width=21) (actual time=0.055..296.547 rows=460484 loops=3)
                                                                     Filter: (production_year > 2000)
                                                                     Rows Removed by Filter: 382286
                                                               ->  Hash  (cost=134105.54..134105.54 rows=73395 width=12) (actual time=2883.078..2883.078 rows=276166 loops=3)
                                                                     Buckets: 131072 (originally 131072)  Batches: 4 (originally 2)  Memory Usage: 3984kB
                                                                     ->  Nested Loop  (cost=0.56..134105.54 rows=73395 width=12) (actual time=0.306..2762.737 rows=276166 loops=3)
                                                                           ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.042..0.047 rows=1 loops=3)
                                                                                 Filter: ((role)::text = 'actress'::text)
                                                                                 Rows Removed by Filter: 11
                                                                           ->  Index Scan using role_id_cast_info on cast_info ci  (cost=0.56..133303.71 rows=80067 width=16) (actual time=0.261..2724.887 rows=276166 loops=3)
                                                                                 Index Cond: (role_id = rt.id)
                                                                                 Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                                 Rows Removed by Filter: 7175807
                                                         ->  Index Scan using name_pkey on name n  (cost=0.43..1.53 rows=1 width=19) (actual time=0.007..0.007 rows=0 loops=168407)
                                                               Index Cond: (id = ci.person_id)
                                                               Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                                               Rows Removed by Filter: 1
                                                   ->  Index Only Scan using char_name_pkey on char_name chn  (cost=0.43..1.42 rows=1 width=4) (actual time=0.016..0.016 rows=1 loops=3686)
                                                         Index Cond: (id = ci.person_role_id)
                                                         Heap Fetches: 3349
                                             ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..27.22 rows=2 width=8) (actual time=0.050..0.071 rows=1 loops=3349)
                                                   Index Cond: (movie_id = t.id)
                                                   Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%200%'::text) OR ((info)::text ~~ 'USA:%200%'::text)))
                                                   Rows Removed by Filter: 15
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.090..0.090 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.056..0.067 rows=1 loops=3)
                                                   Filter: ((info)::text = 'release dates'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.67 rows=5 width=8) (actual time=0.011..0.015 rows=4 loops=2129)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.16 rows=1 width=4) (actual time=0.006..0.006 rows=0 loops=8585)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..1.63 rows=2 width=4) (actual time=0.005..0.006 rows=1 loops=2632)
                           Index Cond: (person_id = ci.person_id)
                           Heap Fetches: 3575
 Planning Time: 48.979 ms
 Execution Time: 4060.992 ms
(56 rows)

SET
                                                                                                           QUERY PLAN                                                                                                           
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=281048.09..281048.10 rows=1 width=64) (actual time=13184.798..13184.798 rows=1 loops=1)
   ->  Gather  (cost=281047.87..281048.08 rows=2 width=64) (actual time=12003.806..13190.008 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=280047.87..280047.88 rows=1 width=64) (actual time=11822.672..11822.673 rows=1 loops=3)
               ->  Nested Loop  (cost=135386.97..280042.47 rows=1080 width=32) (actual time=2924.405..11630.764 rows=586882 loops=3)
                     ->  Nested Loop  (cost=135386.54..279269.61 rows=470 width=40) (actual time=2924.008..10630.277 rows=262348 loops=3)
                           ->  Nested Loop  (cost=135386.12..277763.14 rows=1294 width=44) (actual time=2923.938..7053.494 rows=1076352 loops=3)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Hash Join  (cost=135385.69..277101.59 rows=247 width=52) (actual time=2921.477..6007.768 rows=113945 loops=3)
                                       Hash Cond: (mi.info_type_id = it.id)
                                       ->  Nested Loop  (cost=135383.27..277023.18 rows=27899 width=56) (actual time=2921.223..5892.945 rows=540998 loops=3)
                                             ->  Nested Loop  (cost=135382.83..226386.57 rows=1846 width=48) (actual time=2921.136..4827.811 rows=53102 loops=3)
                                                   ->  Nested Loop  (cost=135382.40..220961.69 rows=3818 width=52) (actual time=2921.038..4179.382 rows=56088 loops=3)
                                                         ->  Hash Join  (cost=135381.97..195421.31 rows=16716 width=33) (actual time=2920.940..3644.691 rows=56136 loops=3)
                                                               Hash Cond: (t.id = ci.movie_id)
                                                               ->  Parallel Seq Scan on title t  (cost=0.00..49166.29 rows=575821 width=21) (actual time=0.044..280.318 rows=460484 loops=3)
                                                                     Filter: (production_year > 2000)
                                                                     Rows Removed by Filter: 382286
                                                               ->  Hash  (cost=134105.54..134105.54 rows=73395 width=12) (actual time=2918.289..2918.289 rows=276166 loops=3)
                                                                     Buckets: 131072 (originally 131072)  Batches: 4 (originally 2)  Memory Usage: 3984kB
                                                                     ->  Nested Loop  (cost=0.56..134105.54 rows=73395 width=12) (actual time=0.291..2805.822 rows=276166 loops=3)
                                                                           ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.033..0.038 rows=1 loops=3)
                                                                                 Filter: ((role)::text = 'actress'::text)
                                                                                 Rows Removed by Filter: 11
                                                                           ->  Index Scan using role_id_cast_info on cast_info ci  (cost=0.56..133303.71 rows=80067 width=16) (actual time=0.249..2767.787 rows=276166 loops=3)
                                                                                 Index Cond: (role_id = rt.id)
                                                                                 Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                                 Rows Removed by Filter: 7175807
                                                         ->  Index Scan using name_pkey on name n  (cost=0.43..1.53 rows=1 width=19) (actual time=0.009..0.009 rows=1 loops=168407)
                                                               Index Cond: (id = ci.person_id)
                                                               Filter: ((gender)::text = 'f'::text)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Only Scan using char_name_pkey on char_name chn  (cost=0.43..1.42 rows=1 width=4) (actual time=0.011..0.011 rows=1 loops=168264)
                                                         Index Cond: (id = ci.person_role_id)
                                                         Heap Fetches: 159307
                                             ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..27.01 rows=42 width=8) (actual time=0.007..0.017 rows=10 loops=159307)
                                                   Index Cond: (movie_id = t.id)
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.080..0.080 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.048..0.059 rows=1 loops=3)
                                                   Filter: ((info)::text = 'release dates'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.62 rows=5 width=8) (actual time=0.004..0.006 rows=9 loops=341836)
                                       Index Cond: (movie_id = mi.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.16 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=3229056)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..1.62 rows=2 width=4) (actual time=0.003..0.003 rows=2 loops=787043)
                           Index Cond: (person_id = n.id)
                           Heap Fetches: 1760645
 Planning Time: 52.179 ms
 Execution Time: 13191.168 ms
(54 rows)

SET
                                                                                                 QUERY PLAN                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=19541.81..19541.82 rows=1 width=68) (actual time=164.494..164.494 rows=1 loops=1)
   ->  Gather  (cost=19541.58..19541.79 rows=2 width=68) (actual time=144.714..166.450 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=18541.58..18541.59 rows=1 width=68) (actual time=148.048..148.048 rows=1 loops=3)
               ->  Nested Loop  (cost=4.35..18541.23 rows=47 width=45) (actual time=137.955..147.964 rows=47 loops=3)
                     Join Filter: (mc.movie_id = t.id)
                     ->  Hash Join  (cost=3.92..18513.76 rows=47 width=32) (actual time=137.861..146.188 rows=47 loops=3)
                           Hash Cond: (mc.company_type_id = ct.id)
                           ->  Nested Loop  (cost=2.86..18511.69 rows=187 width=36) (actual time=137.672..145.957 rows=49 loops=3)
                                 ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=4) (actual time=137.534..137.635 rows=83 loops=3)
                                       Hash Cond: (mi_idx.info_type_id = it.id)
                                       ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=8) (actual time=0.036..81.148 rows=460012 loops=3)
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.055..0.055 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.044..0.045 rows=1 loops=3)
                                                   Filter: ((info)::text = 'top 250 rank'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.63 rows=1 width=32) (actual time=0.097..0.099 rows=1 loops=250)
                                       Index Cond: (movie_id = mi_idx.movie_id)
                                       Filter: (((note)::text !~~ '%(as Metro-Goldwyn-Mayer Pictures)%'::text) AND (((note)::text ~~ '%(co-production)%'::text) OR ((note)::text ~~ '%(presents)%'::text)))
                                       Rows Removed by Filter: 33
                           ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.066..0.066 rows=1 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                 ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.045..0.047 rows=1 loops=3)
                                       Filter: ((kind)::text = 'production companies'::text)
                                       Rows Removed by Filter: 3
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=25) (actual time=0.036..0.036 rows=1 loops=142)
                           Index Cond: (id = mi_idx.movie_id)
 Planning Time: 5.050 ms
 Execution Time: 166.930 ms
(31 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=20151.20..20151.21 rows=1 width=68) (actual time=144.244..144.244 rows=1 loops=1)
   ->  Gather  (cost=20150.97..20151.18 rows=2 width=68) (actual time=144.236..144.406 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=19150.97..19150.98 rows=1 width=68) (actual time=136.725..136.725 rows=1 loops=3)
               ->  Hash Join  (cost=4.35..19143.68 rows=972 width=45) (actual time=136.717..136.718 rows=1 loops=3)
                     Hash Cond: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=3.29..19121.60 rows=3890 width=49) (actual time=136.330..136.506 rows=22 loops=3)
                           Join Filter: (t.id = mc.movie_id)
                           ->  Nested Loop  (cost=2.86..18189.65 rows=1450 width=29) (actual time=136.303..136.374 rows=1 loops=3)
                                 ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=4) (actual time=136.147..136.152 rows=3 loops=3)
                                       Hash Cond: (mi_idx.info_type_id = it.id)
                                       ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=8) (actual time=0.045..80.339 rows=460012 loops=3)
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.048..0.048 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.038..0.038 rows=1 loops=3)
                                                   Filter: ((info)::text = 'bottom 10 rank'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.58 rows=1 width=25) (actual time=0.065..0.065 rows=0 loops=10)
                                       Index Cond: (id = mi_idx.movie_id)
                                       Filter: ((production_year >= 2005) AND (production_year <= 2010))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.61 rows=3 width=32) (actual time=0.068..0.094 rows=16 loops=4)
                                 Index Cond: (movie_id = mi_idx.movie_id)
                                 Filter: ((note)::text !~~ '%(as Metro-Goldwyn-Mayer Pictures)%'::text)
                                 Rows Removed by Filter: 2
                     ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.057..0.057 rows=1 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.036..0.038 rows=1 loops=3)
                                 Filter: ((kind)::text = 'production companies'::text)
                                 Rows Removed by Filter: 3
 Planning Time: 3.858 ms
 Execution Time: 145.002 ms
(33 rows)

SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=19470.70..19470.71 rows=1 width=68) (actual time=152.544..152.544 rows=1 loops=1)
   ->  Gather  (cost=19470.48..19470.69 rows=2 width=68) (actual time=152.534..152.685 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=18470.48..18470.49 rows=1 width=68) (actual time=141.452..141.452 rows=1 loops=3)
               ->  Nested Loop  (cost=4.35..18470.44 rows=5 width=45) (actual time=139.700..141.447 rows=1 loops=3)
                     Join Filter: (mc.movie_id = t.id)
                     ->  Hash Join  (cost=3.92..18449.90 rows=35 width=32) (actual time=137.760..141.332 rows=8 loops=3)
                           Hash Cond: (mc.company_type_id = ct.id)
                           ->  Nested Loop  (cost=2.86..18448.07 rows=141 width=36) (actual time=137.559..141.126 rows=8 loops=3)
                                 ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=4) (actual time=136.009..136.116 rows=83 loops=3)
                                       Hash Cond: (mi_idx.info_type_id = it.id)
                                       ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=8) (actual time=0.041..80.068 rows=460012 loops=3)
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.048..0.048 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.037..0.038 rows=1 loops=3)
                                                   Filter: ((info)::text = 'top 250 rank'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.62 rows=1 width=32) (actual time=0.059..0.059 rows=0 loops=250)
                                       Index Cond: (movie_id = mi_idx.movie_id)
                                       Filter: (((note)::text !~~ '%(as Metro-Goldwyn-Mayer Pictures)%'::text) AND ((note)::text ~~ '%(co-production)%'::text))
                                       Rows Removed by Filter: 33
                           ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.055..0.055 rows=1 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                 ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.035..0.037 rows=1 loops=3)
                                       Filter: ((kind)::text = 'production companies'::text)
                                       Rows Removed by Filter: 3
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=25) (actual time=0.014..0.014 rows=0 loops=23)
                           Index Cond: (id = mi_idx.movie_id)
                           Filter: (production_year > 2010)
                           Rows Removed by Filter: 1
 Planning Time: 3.738 ms
 Execution Time: 153.198 ms
(33 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=20999.43..20999.44 rows=1 width=68) (actual time=143.984..143.984 rows=1 loops=1)
   ->  Gather  (cost=20999.20..20999.41 rows=2 width=68) (actual time=142.871..145.419 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=19999.20..19999.21 rows=1 width=68) (actual time=136.559..136.559 rows=1 loops=3)
               ->  Hash Join  (cost=4.35..19985.21 rows=1865 width=45) (actual time=136.519..136.551 rows=1 loops=3)
                     Hash Cond: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=3.29..19943.82 rows=7460 width=49) (actual time=136.171..136.370 rows=26 loops=3)
                           ->  Nested Loop  (cost=2.86..18176.93 rows=2782 width=29) (actual time=136.115..136.201 rows=2 loops=3)
                                 ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=4) (actual time=136.056..136.060 rows=3 loops=3)
                                       Hash Cond: (mi_idx.info_type_id = it.id)
                                       ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=8) (actual time=0.044..80.154 rows=460012 loops=3)
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.055..0.055 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.044..0.045 rows=1 loops=3)
                                                   Filter: ((info)::text = 'bottom 10 rank'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=25) (actual time=0.041..0.041 rows=1 loops=10)
                                       Index Cond: (id = mi_idx.movie_id)
                                       Filter: (production_year > 2000)
                                       Rows Removed by Filter: 0
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.61 rows=3 width=32) (actual time=0.062..0.081 rows=13 loops=6)
                                 Index Cond: (movie_id = t.id)
                                 Filter: ((note)::text !~~ '%(as Metro-Goldwyn-Mayer Pictures)%'::text)
                                 Rows Removed by Filter: 2
                     ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.058..0.058 rows=1 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.037..0.038 rows=1 loops=3)
                                 Filter: ((kind)::text = 'production companies'::text)
                                 Rows Removed by Filter: 3
 Planning Time: 3.763 ms
 Execution Time: 145.866 ms
(32 rows)

SET
                                                                                             QUERY PLAN                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=12310.68..12310.69 rows=1 width=32) (actual time=12371.849..12371.850 rows=1 loops=1)
   ->  Nested Loop  (cost=9.03..12310.67 rows=1 width=17) (actual time=123.142..12371.724 rows=33 loops=1)
         ->  Nested Loop  (cost=8.60..12310.22 rows=1 width=21) (actual time=123.079..12370.691 rows=33 loops=1)
               ->  Nested Loop  (cost=8.17..12305.16 rows=11 width=25) (actual time=13.089..7460.783 rows=532809 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=7.61..12299.20 rows=3 width=29) (actual time=13.005..1569.827 rows=6016 loops=1)
                           Join Filter: (t.kind_id = kt.id)
                           Rows Removed by Join Filter: 1347
                           ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.050..0.052 rows=1 loops=1)
                                 Filter: ((kind)::text = 'movie'::text)
                                 Rows Removed by Filter: 6
                           ->  Nested Loop  (cost=7.61..12297.85 rows=21 width=33) (actual time=2.104..1566.944 rows=7363 loops=1)
                                 ->  Nested Loop  (cost=7.18..12286.63 rows=23 width=8) (actual time=2.044..1379.404 rows=8765 loops=1)
                                       Join Filter: (cc.status_id = cct2.id)
                                       Rows Removed by Join Filter: 8765
                                       ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.028..0.031 rows=2 loops=1)
                                             Filter: ((kind)::text ~~ '%complete%'::text)
                                             Rows Removed by Filter: 2
                                       ->  Nested Loop  (cost=7.18..12284.40 rows=94 width=12) (actual time=1.611..687.851 rows=8765 loops=2)
                                             Join Filter: (cc.subject_id = cct1.id)
                                             Rows Removed by Join Filter: 4045
                                             ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.005..0.007 rows=1 loops=2)
                                                   Filter: ((kind)::text = 'cast'::text)
                                                   Rows Removed by Filter: 3
                                             ->  Nested Loop  (cost=7.18..12278.66 rows=375 width=16) (actual time=1.602..683.635 rows=12810 loops=2)
                                                   ->  Nested Loop  (cost=6.76..12150.15 rows=270 width=4) (actual time=0.889..475.725 rows=35548 loops=2)
                                                         ->  Seq Scan on keyword k  (cost=0.00..3632.40 rows=8 width=4) (actual time=0.182..50.427 rows=8 loops=2)
                                                               Filter: ((keyword)::text = ANY ('{superhero,sequel,second-part,marvel-comics,based-on-comic,tv-special,fight,violence}'::text[]))
                                                               Rows Removed by Filter: 134162
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1061.72 rows=300 width=8) (actual time=1.571..51.355 rows=4444 loops=16)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=46976
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=1.154..1.154 rows=4444 loops=16)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.004..0.005 rows=0 loops=71096)
                                                         Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.020..0.020 rows=1 loops=8765)
                                       Index Cond: (id = mk.movie_id)
                                       Filter: (production_year > 1950)
                                       Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.029..0.914 rows=89 loops=6016)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=4) (actual time=0.008..0.008 rows=0 loops=532809)
                     Index Cond: (id = ci.person_role_id)
                     Filter: (((name)::text !~~ '%Sherlock%'::text) AND (((name)::text ~~ '%Tony%Stark%'::text) OR ((name)::text ~~ '%Iron%Man%'::text)))
                     Rows Removed by Filter: 0
         ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.029..0.029 rows=1 loops=33)
               Index Cond: (id = ci.person_id)
               Heap Fetches: 33
 Planning Time: 32.868 ms
 Execution Time: 12372.470 ms
(51 rows)

SET
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=12305.07..12305.08 rows=1 width=32) (actual time=9418.145..9418.146 rows=1 loops=1)
   ->  Nested Loop  (cost=9.03..12305.06 rows=1 width=17) (actual time=149.528..9418.049 rows=17 loops=1)
         ->  Nested Loop  (cost=8.60..12304.60 rows=1 width=21) (actual time=149.487..9417.005 rows=27 loops=1)
               ->  Nested Loop  (cost=8.17..12301.40 rows=7 width=25) (actual time=19.898..4877.550 rows=222518 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=7.61..12297.43 rows=2 width=29) (actual time=19.823..2268.942 rows=1472 loops=1)
                           Join Filter: (cc.status_id = cct2.id)
                           Rows Removed by Join Filter: 1472
                           ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.040..0.043 rows=2 loops=1)
                                 Filter: ((kind)::text ~~ '%complete%'::text)
                                 Rows Removed by Filter: 2
                           ->  Nested Loop  (cost=7.61..12296.29 rows=7 width=33) (actual time=16.484..1134.077 rows=1472 loops=2)
                                 Join Filter: (cc.subject_id = cct1.id)
                                 Rows Removed by Join Filter: 243
                                 ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.006..0.008 rows=1 loops=2)
                                       Filter: ((kind)::text = 'cast'::text)
                                       Rows Removed by Filter: 3
                                 ->  Nested Loop  (cost=7.61..12294.88 rows=29 width=37) (actual time=16.473..1133.361 rows=1715 loops=2)
                                       ->  Nested Loop  (cost=7.19..12284.84 rows=21 width=25) (actual time=16.221..1082.459 rows=6043 loops=2)
                                             Join Filter: (t.kind_id = kt.id)
                                             Rows Removed by Join Filter: 8122
                                             ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.006..0.009 rows=1 loops=2)
                                                   Filter: ((kind)::text = 'movie'::text)
                                                   Rows Removed by Filter: 6
                                             ->  Nested Loop  (cost=7.19..12281.90 rows=148 width=29) (actual time=0.905..1077.924 rows=14165 loops=2)
                                                   ->  Nested Loop  (cost=6.76..12150.15 rows=270 width=4) (actual time=0.867..477.102 rows=35548 loops=2)
                                                         ->  Seq Scan on keyword k  (cost=0.00..3632.40 rows=8 width=4) (actual time=0.172..49.144 rows=8 loops=2)
                                                               Filter: ((keyword)::text = ANY ('{superhero,sequel,second-part,marvel-comics,based-on-comic,tv-special,fight,violence}'::text[]))
                                                               Rows Removed by Filter: 134162
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1061.72 rows=300 width=8) (actual time=1.552..51.464 rows=4444 loops=16)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=46976
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=1.135..1.135 rows=4444 loops=16)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.016..0.016 rows=0 loops=71096)
                                                         Index Cond: (id = mk.movie_id)
                                                         Filter: (production_year > 2000)
                                                         Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.007..0.007 rows=0 loops=12086)
                                             Index Cond: (movie_id = t.id)
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.034..1.655 rows=151 loops=1472)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=4) (actual time=0.019..0.019 rows=0 loops=222518)
                     Index Cond: (id = ci.person_id)
                     Filter: ((name)::text ~~ '%Downey%Robert%'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=4) (actual time=0.036..0.036 rows=1 loops=27)
               Index Cond: (id = ci.person_role_id)
               Filter: (((name)::text !~~ '%Sherlock%'::text) AND (((name)::text ~~ '%Tony%Stark%'::text) OR ((name)::text ~~ '%Iron%Man%'::text)))
               Rows Removed by Filter: 0
 Planning Time: 34.110 ms
 Execution Time: 9418.780 ms
(52 rows)

SET
                                                                                             QUERY PLAN                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=14700.60..14700.61 rows=1 width=64) (actual time=5320.641..5320.641 rows=1 loops=1)
   ->  Nested Loop  (cost=9.03..14700.60 rows=1 width=32) (actual time=19.446..5313.922 rows=5406 loops=1)
         ->  Nested Loop  (cost=8.60..14700.14 rows=1 width=21) (actual time=19.367..5173.400 rows=5406 loops=1)
               ->  Nested Loop  (cost=8.17..14696.48 rows=8 width=25) (actual time=18.638..3652.167 rows=189844 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=7.61..14692.51 rows=2 width=29) (actual time=18.556..1655.144 rows=1267 loops=1)
                           Join Filter: (cc.status_id = cct2.id)
                           Rows Removed by Join Filter: 1267
                           ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.031..0.033 rows=2 loops=1)
                                 Filter: ((kind)::text ~~ '%complete%'::text)
                                 Rows Removed by Filter: 2
                           ->  Nested Loop  (cost=7.61..14691.35 rows=9 width=33) (actual time=15.717..827.247 rows=1267 loops=2)
                                 Join Filter: (cc.subject_id = cct1.id)
                                 Rows Removed by Join Filter: 218
                                 ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=2)
                                       Filter: ((kind)::text = 'cast'::text)
                                       Rows Removed by Filter: 3
                                 ->  Nested Loop  (cost=7.61..14689.84 rows=37 width=37) (actual time=15.702..826.688 rows=1485 loops=2)
                                       ->  Nested Loop  (cost=7.19..14677.40 rows=26 width=25) (actual time=15.468..786.354 rows=5032 loops=2)
                                             Join Filter: (t.kind_id = kt.id)
                                             Rows Removed by Join Filter: 5581
                                             ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.006..0.008 rows=1 loops=2)
                                                   Filter: ((kind)::text = 'movie'::text)
                                                   Rows Removed by Filter: 6
                                             ->  Nested Loop  (cost=7.19..14674.02 rows=184 width=29) (actual time=0.930..782.745 rows=10613 loops=2)
                                                   ->  Nested Loop  (cost=6.76..14509.57 rows=337 width=4) (actual time=0.891..362.871 rows=24091 loops=2)
                                                         ->  Seq Scan on keyword k  (cost=0.00..3967.82 rows=10 width=4) (actual time=0.189..53.591 rows=10 loops=2)
                                                               Filter: ((keyword)::text = ANY ('{superhero,marvel-comics,based-on-comic,tv-special,fight,violence,magnet,web,claw,laser}'::text[]))
                                                               Rows Removed by Filter: 134160
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1051.17 rows=300 width=8) (actual time=0.975..29.804 rows=2409 loops=20)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=34254
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.722..0.722 rows=2409 loops=20)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.016..0.016 rows=0 loops=48182)
                                                         Index Cond: (id = mk.movie_id)
                                                         Filter: (production_year > 2000)
                                                         Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.006..0.007 rows=0 loops=10064)
                                             Index Cond: (movie_id = t.id)
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.032..1.471 rows=150 loops=1267)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=4) (actual time=0.007..0.007 rows=0 loops=189844)
                     Index Cond: (id = ci.person_role_id)
                     Filter: ((name IS NOT NULL) AND (((name)::text ~~ '%man%'::text) OR ((name)::text ~~ '%Man%'::text)))
                     Rows Removed by Filter: 0
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=19) (actual time=0.024..0.024 rows=1 loops=5406)
               Index Cond: (id = ci.person_id)
 Planning Time: 33.896 ms
 Execution Time: 5321.286 ms
(50 rows)

SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3756.64..3756.65 rows=1 width=96) (actual time=270.746..270.746 rows=1 loops=1)
   ->  Nested Loop  (cost=8.76..3756.63 rows=1 width=118) (actual time=6.842..269.001 rows=1410 loops=1)
         Join Filter: (ml.movie_id = t.id)
         ->  Nested Loop  (cost=8.33..3756.13 rows=1 width=117) (actual time=6.796..259.186 rows=1816 loops=1)
               Join Filter: (mc.company_type_id = ct.id)
               Rows Removed by Join Filter: 95
               ->  Nested Loop  (cost=8.33..3755.07 rows=1 width=121) (actual time=6.754..243.454 rows=1911 loops=1)
                     ->  Nested Loop  (cost=7.91..3754.61 rows=1 width=106) (actual time=6.698..229.178 rows=4365 loops=1)
                           Join Filter: (ml.movie_id = mc.movie_id)
                           ->  Nested Loop  (cost=7.48..3754.04 rows=1 width=94) (actual time=6.654..223.836 rows=684 loops=1)
                                 Join Filter: (ml.movie_id = mi.movie_id)
                                 ->  Nested Loop  (cost=7.04..3752.25 rows=1 width=90) (actual time=5.399..216.732 rows=199 loops=1)
                                       Join Filter: (ml.link_type_id = lt.id)
                                       Rows Removed by Join Filter: 303
                                       ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.037..0.047 rows=2 loops=1)
                                             Filter: ((link)::text ~~ '%follow%'::text)
                                             Rows Removed by Filter: 16
                                       ->  Nested Loop  (cost=7.04..3750.90 rows=10 width=12) (actual time=4.732..108.291 rows=251 loops=2)
                                             ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=4.719..86.129 rows=10544 loops=2)
                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.240..17.810 rows=1 loops=2)
                                                         Filter: ((keyword)::text = 'sequel'::text)
                                                         Rows Removed by Filter: 134169
                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=3.431..65.662 rows=10544 loops=2)
                                                         Recheck Cond: (keyword_id = k.id)
                                                         Heap Blocks: exact=11140
                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=2.655..2.655 rows=10544 loops=2)
                                                               Index Cond: (keyword_id = k.id)
                                             ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.002..0.002 rows=0 loops=21088)
                                                   Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.77 rows=1 width=4) (actual time=0.031..0.034 rows=3 loops=199)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German}'::text[]))
                                       Rows Removed by Filter: 17
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=12) (actual time=0.003..0.006 rows=6 loops=684)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: (note IS NULL)
                                 Rows Removed by Filter: 2
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=4365)
                           Index Cond: (id = mc.company_id)
                           Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                           Rows Removed by Filter: 1
               ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1911)
                     Filter: ((kind)::text = 'production companies'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.004..0.004 rows=1 loops=1816)
               Index Cond: (id = mk.movie_id)
               Filter: ((production_year >= 1950) AND (production_year <= 2000))
               Rows Removed by Filter: 0
 Planning Time: 30.517 ms
 Execution Time: 271.360 ms
(50 rows)

SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3756.33..3756.34 rows=1 width=96) (actual time=128.705..128.705 rows=1 loops=1)
   ->  Nested Loop  (cost=8.76..3756.32 rows=1 width=118) (actual time=6.330..128.624 rows=38 loops=1)
         Join Filter: (ml.movie_id = t.id)
         ->  Nested Loop  (cost=8.33..3755.82 rows=1 width=117) (actual time=5.266..126.874 rows=308 loops=1)
               Join Filter: (mc.company_type_id = ct.id)
               Rows Removed by Join Filter: 19
               ->  Nested Loop  (cost=8.33..3754.75 rows=1 width=121) (actual time=5.245..124.210 rows=327 loops=1)
                     ->  Nested Loop  (cost=7.91..3754.30 rows=1 width=106) (actual time=5.232..121.644 rows=749 loops=1)
                           Join Filter: (ml.movie_id = mc.movie_id)
                           ->  Nested Loop  (cost=7.48..3753.72 rows=1 width=94) (actual time=5.217..120.725 rows=118 loops=1)
                                 Join Filter: (ml.movie_id = mi.movie_id)
                                 ->  Nested Loop  (cost=7.04..3752.25 rows=1 width=90) (actual time=4.729..117.250 rows=199 loops=1)
                                       Join Filter: (ml.link_type_id = lt.id)
                                       Rows Removed by Join Filter: 303
                                       ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.027..0.037 rows=2 loops=1)
                                             Filter: ((link)::text ~~ '%follow%'::text)
                                             Rows Removed by Filter: 16
                                       ->  Nested Loop  (cost=7.04..3750.90 rows=10 width=12) (actual time=4.394..58.561 rows=251 loops=2)
                                             ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=4.376..42.776 rows=10544 loops=2)
                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.026..17.683 rows=1 loops=2)
                                                         Filter: ((keyword)::text = 'sequel'::text)
                                                         Rows Removed by Filter: 134169
                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=3.304..23.149 rows=10544 loops=2)
                                                         Recheck Cond: (keyword_id = k.id)
                                                         Heap Blocks: exact=11140
                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=2.540..2.540 rows=10544 loops=2)
                                                               Index Cond: (keyword_id = k.id)
                                             ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.001..0.001 rows=0 loops=21088)
                                                   Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.45 rows=1 width=4) (actual time=0.015..0.017 rows=1 loops=199)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Germany,German}'::text[]))
                                       Rows Removed by Filter: 20
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=12) (actual time=0.003..0.006 rows=6 loops=118)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: (note IS NULL)
                                 Rows Removed by Filter: 2
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=749)
                           Index Cond: (id = mc.company_id)
                           Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                           Rows Removed by Filter: 1
               ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=327)
                     Filter: ((kind)::text = 'production companies'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.005..0.005 rows=0 loops=308)
               Index Cond: (id = mk.movie_id)
               Filter: ((production_year >= 2000) AND (production_year <= 2010))
               Rows Removed by Filter: 1
 Planning Time: 28.571 ms
 Execution Time: 129.318 ms
(50 rows)

SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3756.72..3756.73 rows=1 width=96) (actual time=135.451..135.452 rows=1 loops=1)
   ->  Nested Loop  (cost=8.76..3756.71 rows=1 width=118) (actual time=5.746..134.374 rows=1874 loops=1)
         Join Filter: (ml.movie_id = mi.movie_id)
         ->  Nested Loop  (cost=8.32..3754.85 rows=1 width=134) (actual time=5.708..126.593 rows=402 loops=1)
               Join Filter: (mc.company_type_id = ct.id)
               Rows Removed by Join Filter: 20
               ->  Nested Loop  (cost=8.32..3753.79 rows=1 width=138) (actual time=5.697..123.127 rows=422 loops=1)
                     ->  Nested Loop  (cost=7.90..3753.33 rows=1 width=123) (actual time=4.855..118.887 rows=1021 loops=1)
                           Join Filter: (ml.movie_id = mc.movie_id)
                           ->  Nested Loop  (cost=7.47..3752.76 rows=1 width=111) (actual time=4.781..116.695 rows=199 loops=1)
                                 Join Filter: (ml.movie_id = t.id)
                                 ->  Nested Loop  (cost=7.04..3752.25 rows=1 width=90) (actual time=4.697..115.218 rows=199 loops=1)
                                       Join Filter: (ml.link_type_id = lt.id)
                                       Rows Removed by Join Filter: 303
                                       ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.025..0.035 rows=2 loops=1)
                                             Filter: ((link)::text ~~ '%follow%'::text)
                                             Rows Removed by Filter: 16
                                       ->  Nested Loop  (cost=7.04..3750.90 rows=10 width=12) (actual time=4.378..57.541 rows=251 loops=2)
                                             ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=4.365..41.592 rows=10544 loops=2)
                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.016..17.596 rows=1 loops=2)
                                                         Filter: ((keyword)::text = 'sequel'::text)
                                                         Rows Removed by Filter: 134169
                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=3.306..22.045 rows=10544 loops=2)
                                                         Recheck Cond: (keyword_id = k.id)
                                                         Heap Blocks: exact=11140
                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=2.538..2.538 rows=10544 loops=2)
                                                               Index Cond: (keyword_id = k.id)
                                             ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.001..0.001 rows=0 loops=21088)
                                                   Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.007..0.007 rows=1 loops=199)
                                       Index Cond: (id = mk.movie_id)
                                       Filter: ((production_year >= 1950) AND (production_year <= 2010))
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=12) (actual time=0.007..0.009 rows=5 loops=199)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: (note IS NULL)
                                 Rows Removed by Filter: 2
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.004..0.004 rows=0 loops=1021)
                           Index Cond: (id = mc.company_id)
                           Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                           Rows Removed by Filter: 1
               ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=422)
                     Filter: ((kind)::text = 'production companies'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.82 rows=3 width=4) (actual time=0.013..0.017 rows=5 loops=402)
               Index Cond: (movie_id = mk.movie_id)
               Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,English}'::text[]))
               Rows Removed by Filter: 16
 Planning Time: 29.212 ms
 Execution Time: 136.086 ms
(49 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7401.04..7401.05 rows=1 width=96) (actual time=1629.493..1629.493 rows=1 loops=1)
   ->  Nested Loop  (cost=8.90..7401.03 rows=1 width=41) (actual time=35.291..1626.150 rows=2851 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         Rows Removed by Join Filter: 191
         ->  Nested Loop  (cost=8.90..7398.61 rows=1 width=45) (actual time=35.275..1592.888 rows=3042 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=8.46..7397.02 rows=1 width=57) (actual time=13.402..1337.599 rows=2958 loops=1)
                     Join Filter: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=8.46..7395.93 rows=1 width=61) (actual time=13.379..1314.618 rows=2958 loops=1)
                           ->  Nested Loop  (cost=8.04..7395.38 rows=1 width=46) (actual time=13.344..1275.266 rows=3374 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.62..7394.80 rows=1 width=34) (actual time=13.274..1171.642 rows=2378 loops=1)
                                       Join Filter: (mi_idx.info_type_id = it2.id)
                                       Rows Removed by Join Filter: 6321
                                       ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.031..0.034 rows=1 loops=1)
                                             Filter: ((info)::text = 'rating'::text)
                                             Rows Removed by Filter: 112
                                       ->  Nested Loop  (cost=7.62..7392.07 rows=26 width=38) (actual time=7.692..1169.819 rows=8699 loops=1)
                                             Join Filter: (t.id = mi_idx.movie_id)
                                             ->  Nested Loop  (cost=7.19..7386.71 rows=10 width=25) (actual time=7.640..1073.911 rows=4832 loops=1)
                                                   Join Filter: (t.kind_id = kt.id)
                                                   Rows Removed by Join Filter: 2286
                                                   ->  Nested Loop  (cost=7.19..7384.59 rows=36 width=29) (actual time=7.584..1067.731 rows=5606 loops=1)
                                                         ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=7.411..501.643 rows=37091 loops=1)
                                                               ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.504..38.054 rows=3 loops=1)
                                                                     Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                     Rows Removed by Filter: 134167
                                                               ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=5.101..148.887 rows=12364 loops=3)
                                                                     Recheck Cond: (keyword_id = k.id)
                                                                     Heap Blocks: exact=26312
                                                                     ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.808..3.808 rows=12364 loops=3)
                                                                           Index Cond: (keyword_id = k.id)
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.014..0.014 rows=0 loops=37091)
                                                               Index Cond: (id = mk.movie_id)
                                                               Filter: (production_year > 2008)
                                                               Rows Removed by Filter: 1
                                                   ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=5606)
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.036..0.038 rows=2 loops=1)
                                                               Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                               Rows Removed by Filter: 5
                                             ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=13) (actual time=0.017..0.018 rows=2 loops=4832)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((info)::text < '7.0'::text)
                                                   Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.036..0.042 rows=1 loops=2378)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                                       Rows Removed by Filter: 10
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.010..0.010 rows=1 loops=3374)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text <> '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.002..0.002 rows=1 loops=2958)
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.56 rows=2 width=8) (actual time=0.077..0.085 rows=1 loops=2958)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Germany,German,USA,American}'::text[]))
                     Rows Removed by Filter: 155
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=3042)
               Filter: ((info)::text = 'countries'::text)
               Rows Removed by Filter: 14
 Planning Time: 76.585 ms
 Execution Time: 1630.253 ms
(62 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7399.71..7399.72 rows=1 width=96) (actual time=1239.775..1239.776 rows=1 loops=1)
   ->  Nested Loop  (cost=8.90..7399.70 rows=1 width=41) (actual time=43.628..1239.674 rows=31 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         Rows Removed by Join Filter: 3
         ->  Nested Loop  (cost=8.90..7397.27 rows=1 width=45) (actual time=43.613..1239.239 rows=34 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=8.46..7395.69 rows=1 width=57) (actual time=43.411..1229.771 rows=50 loops=1)
                     Join Filter: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=8.46..7394.60 rows=1 width=61) (actual time=43.386..1229.180 rows=50 loops=1)
                           ->  Nested Loop  (cost=8.04..7394.05 rows=1 width=46) (actual time=43.347..1227.223 rows=78 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.62..7393.47 rows=1 width=34) (actual time=17.249..1158.460 rows=1615 loops=1)
                                       Join Filter: (mi_idx.info_type_id = it2.id)
                                       Rows Removed by Join Filter: 4362
                                       ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.031..0.034 rows=1 loops=1)
                                             Filter: ((info)::text = 'rating'::text)
                                             Rows Removed by Filter: 112
                                       ->  Nested Loop  (cost=7.62..7390.80 rows=21 width=38) (actual time=8.113..1157.197 rows=5977 loops=1)
                                             Join Filter: (t.id = mi_idx.movie_id)
                                             ->  Nested Loop  (cost=7.19..7386.51 rows=8 width=25) (actual time=8.062..1087.924 rows=3517 loops=1)
                                                   Join Filter: (t.kind_id = kt.id)
                                                   Rows Removed by Join Filter: 1618
                                                   ->  Nested Loop  (cost=7.19..7384.59 rows=29 width=29) (actual time=8.024..1083.464 rows=4040 loops=1)
                                                         ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=7.791..540.138 rows=37091 loops=1)
                                                               ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.953..38.648 rows=3 loops=1)
                                                                     Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                     Rows Removed by Filter: 134167
                                                               ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=5.037..161.439 rows=12364 loops=3)
                                                                     Recheck Cond: (keyword_id = k.id)
                                                                     Heap Blocks: exact=26312
                                                                     ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.746..3.746 rows=12364 loops=3)
                                                                           Index Cond: (keyword_id = k.id)
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.014..0.014 rows=0 loops=37091)
                                                               Index Cond: (id = mk.movie_id)
                                                               Filter: (production_year > 2009)
                                                               Rows Removed by Filter: 1
                                                   ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=4040)
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.027..0.029 rows=2 loops=1)
                                                               Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                               Rows Removed by Filter: 5
                                             ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=13) (actual time=0.017..0.018 rows=2 loops=3517)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((info)::text < '7.0'::text)
                                                   Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.041..0.042 rows=0 loops=1615)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                                       Rows Removed by Filter: 12
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.023..0.023 rows=1 loops=78)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text <> '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.003..0.003 rows=1 loops=50)
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.56 rows=2 width=8) (actual time=0.173..0.187 rows=1 loops=50)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Germany,German,USA,American}'::text[]))
                     Rows Removed by Filter: 53
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=34)
               Filter: ((info)::text = 'countries'::text)
               Rows Removed by Filter: 16
 Planning Time: 78.550 ms
 Execution Time: 1240.661 ms
(62 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7405.36..7405.37 rows=1 width=96) (actual time=4746.473..4746.474 rows=1 loops=1)
   ->  Nested Loop  (cost=8.90..7405.35 rows=1 width=41) (actual time=12.089..4721.856 rows=21489 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         Rows Removed by Join Filter: 3123
         ->  Nested Loop  (cost=8.90..7402.92 rows=1 width=45) (actual time=12.075..4435.984 rows=24612 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=8.46..7401.02 rows=1 width=57) (actual time=11.934..1900.343 rows=23425 loops=1)
                     Join Filter: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=8.46..7399.93 rows=1 width=61) (actual time=11.911..1720.117 rows=23425 loops=1)
                           ->  Nested Loop  (cost=8.04..7399.38 rows=1 width=46) (actual time=11.869..1531.992 rows=25316 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.62..7398.81 rows=1 width=34) (actual time=8.124..1282.533 rows=5949 loops=1)
                                       Join Filter: (mi_idx.info_type_id = it2.id)
                                       Rows Removed by Join Filter: 11942
                                       ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.032..0.034 rows=1 loops=1)
                                             Filter: ((info)::text = 'rating'::text)
                                             Rows Removed by Filter: 112
                                       ->  Nested Loop  (cost=7.62..7395.82 rows=46 width=38) (actual time=8.087..1278.756 rows=17891 loops=1)
                                             Join Filter: (t.id = mi_idx.movie_id)
                                             ->  Nested Loop  (cost=7.19..7387.25 rows=16 width=25) (actual time=8.036..1123.678 rows=8073 loops=1)
                                                   Join Filter: (t.kind_id = kt.id)
                                                   Rows Removed by Join Filter: 4332
                                                   ->  Nested Loop  (cost=7.19..7384.59 rows=55 width=29) (actual time=7.881..1112.756 rows=9739 loops=1)
                                                         ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=7.832..532.380 rows=37091 loops=1)
                                                               ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.959..38.609 rows=3 loops=1)
                                                                     Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                     Rows Removed by Filter: 134167
                                                               ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=5.062..158.872 rows=12364 loops=3)
                                                                     Recheck Cond: (keyword_id = k.id)
                                                                     Heap Blocks: exact=26312
                                                                     ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.758..3.758 rows=12364 loops=3)
                                                                           Index Cond: (keyword_id = k.id)
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.014..0.014 rows=0 loops=37091)
                                                               Index Cond: (id = mk.movie_id)
                                                               Filter: (production_year > 2005)
                                                               Rows Removed by Filter: 1
                                                   ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=9739)
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.026..0.028 rows=2 loops=1)
                                                               Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                               Rows Removed by Filter: 5
                                             ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=13) (actual time=0.016..0.018 rows=2 loops=8073)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((info)::text < '8.5'::text)
                                                   Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.028..0.039 rows=4 loops=5949)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                                       Rows Removed by Filter: 8
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.006..0.006 rows=1 loops=25316)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text <> '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.002..0.002 rows=1 loops=23425)
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.089..0.107 rows=1 loops=23425)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                     Rows Removed by Filter: 180
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=24612)
               Filter: ((info)::text = 'countries'::text)
               Rows Removed by Filter: 20
 Planning Time: 78.795 ms
 Execution Time: 4747.239 ms
(62 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7405.28..7405.29 rows=1 width=96) (actual time=3524.239..3524.239 rows=1 loops=1)
   ->  Nested Loop  (cost=8.90..7405.27 rows=1 width=41) (actual time=12.377..3468.084 rows=46281 loops=1)
         Join Filter: (mc.company_type_id = ct.id)
         Rows Removed by Join Filter: 4783
         ->  Nested Loop  (cost=8.90..7404.18 rows=1 width=45) (actual time=12.354..3111.647 rows=46281 loops=1)
               ->  Nested Loop  (cost=8.48..7403.73 rows=1 width=30) (actual time=8.289..2660.687 rows=64848 loops=1)
                     Join Filter: (t.id = mc.movie_id)
                     ->  Nested Loop  (cost=8.05..7403.13 rows=1 width=38) (actual time=8.250..2475.234 rows=4115 loops=1)
                           Join Filter: (mi.info_type_id = it1.id)
                           Rows Removed by Join Filter: 594
                           ->  Nested Loop  (cost=8.05..7400.71 rows=1 width=42) (actual time=8.238..2418.299 rows=4709 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=7.62..7398.81 rows=1 width=34) (actual time=8.121..1287.960 rows=5949 loops=1)
                                       Join Filter: (mi_idx.info_type_id = it2.id)
                                       Rows Removed by Join Filter: 11942
                                       ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.031..0.034 rows=1 loops=1)
                                             Filter: ((info)::text = 'rating'::text)
                                             Rows Removed by Filter: 112
                                       ->  Nested Loop  (cost=7.62..7395.82 rows=46 width=38) (actual time=8.085..1283.991 rows=17891 loops=1)
                                             Join Filter: (t.id = mi_idx.movie_id)
                                             ->  Nested Loop  (cost=7.19..7387.25 rows=16 width=25) (actual time=8.034..1128.827 rows=8073 loops=1)
                                                   Join Filter: (t.kind_id = kt.id)
                                                   Rows Removed by Join Filter: 4332
                                                   ->  Nested Loop  (cost=7.19..7384.59 rows=55 width=29) (actual time=7.879..1118.031 rows=9739 loops=1)
                                                         ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=7.833..533.681 rows=37091 loops=1)
                                                               ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.975..38.566 rows=3 loops=1)
                                                                     Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                     Rows Removed by Filter: 134167
                                                               ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=5.067..159.274 rows=12364 loops=3)
                                                                     Recheck Cond: (keyword_id = k.id)
                                                                     Heap Blocks: exact=26312
                                                                     ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.772..3.772 rows=12364 loops=3)
                                                                           Index Cond: (keyword_id = k.id)
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.015..0.015 rows=0 loops=37091)
                                                               Index Cond: (id = mk.movie_id)
                                                               Filter: (production_year > 2005)
                                                               Rows Removed by Filter: 1
                                                   ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=9739)
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.031..0.033 rows=2 loops=1)
                                                               Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                               Rows Removed by Filter: 5
                                             ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=13) (actual time=0.016..0.018 rows=2 loops=8073)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((info)::text < '8.5'::text)
                                                   Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.163..0.189 rows=1 loops=5949)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                                       Rows Removed by Filter: 71
                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=4709)
                                 Filter: ((info)::text = 'countries'::text)
                                 Rows Removed by Filter: 20
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=12) (actual time=0.020..0.037 rows=16 loops=4115)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.006..0.006 rows=1 loops=64848)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text <> '[us]'::text)
                     Rows Removed by Filter: 0
         ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.002..0.002 rows=1 loops=46281)
 Planning Time: 81.142 ms
 Execution Time: 3525.047 ms
(61 rows)

SET
                                                                                                    QUERY PLAN                                                                                                    
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=57963.27..57963.28 rows=1 width=64) (actual time=556.841..556.842 rows=1 loops=1)
   ->  Nested Loop  (cost=4238.90..57963.26 rows=1 width=65) (actual time=499.893..556.368 rows=618 loops=1)
         ->  Nested Loop  (cost=4238.48..57962.82 rows=1 width=69) (actual time=499.817..550.847 rows=618 loops=1)
               ->  Gather  (cost=4238.35..57962.67 rows=1 width=73) (actual time=499.728..556.279 rows=618 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Nested Loop  (cost=3238.35..56962.57 rows=1 width=73) (actual time=506.961..546.494 rows=206 loops=3)
                           ->  Nested Loop  (cost=3237.93..56962.12 rows=1 width=77) (actual time=506.879..545.897 rows=206 loops=3)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=3237.50..56961.52 rows=1 width=85) (actual time=506.804..545.258 rows=205 loops=3)
                                       ->  Nested Loop  (cost=3237.06..56959.69 rows=1 width=77) (actual time=506.733..545.069 rows=2 loops=3)
                                             ->  Nested Loop  (cost=3236.92..56959.27 rows=2 width=81) (actual time=506.673..545.006 rows=2 loops=3)
                                                   ->  Hash Join  (cost=3236.49..54671.45 rows=1099 width=73) (actual time=271.583..391.072 rows=344 loops=3)
                                                         Hash Cond: (t.kind_id = kt.id)
                                                         ->  Hash Join  (cost=3235.39..54637.93 rows=7692 width=29) (actual time=51.106..390.507 rows=694 loops=3)
                                                               Hash Cond: (t.id = cc.movie_id)
                                                               ->  Parallel Seq Scan on title t  (cost=0.00..49166.29 rows=575821 width=25) (actual time=0.048..282.922 rows=460484 loops=3)
                                                                     Filter: (production_year > 2000)
                                                                     Rows Removed by Filter: 382286
                                                               ->  Hash  (cost=2813.24..2813.24 rows=33772 width=4) (actual time=49.380..49.380 rows=24592 loops=3)
                                                                     Buckets: 65536  Batches: 1  Memory Usage: 1377kB
                                                                     ->  Hash Join  (cost=1.06..2813.24 rows=33772 width=4) (actual time=0.139..42.226 rows=24592 loops=3)
                                                                           Hash Cond: (cc.status_id = cct1.id)
                                                                           ->  Seq Scan on complete_cast cc  (cost=0.00..2081.86 rows=135086 width=8) (actual time=0.039..21.416 rows=135086 loops=3)
                                                                           ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.042..0.043 rows=1 loops=3)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.031..0.032 rows=1 loops=3)
                                                                                       Filter: ((kind)::text = 'complete+verified'::text)
                                                                                       Rows Removed by Filter: 3
                                                         ->  Hash  (cost=1.09..1.09 rows=1 width=52) (actual time=0.082..0.082 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=52) (actual time=0.056..0.058 rows=1 loops=3)
                                                                     Filter: ((kind)::text = 'movie'::text)
                                                                     Rows Removed by Filter: 6
                                                   ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.07 rows=1 width=8) (actual time=0.445..0.446 rows=0 loops=1033)
                                                         Index Cond: (movie_id = t.id)
                                                         Filter: ((info IS NOT NULL) AND ((note)::text ~~ '%internet%'::text) AND (((info)::text ~~ 'USA:% 199%'::text) OR ((info)::text ~~ 'USA:% 200%'::text)))
                                                         Rows Removed by Filter: 211
                                             ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.19 rows=1 width=4) (actual time=0.036..0.036 rows=1 loops=5)
                                                   Index Cond: (id = mi.info_type_id)
                                                   Filter: ((info)::text = 'release dates'::text)
                                       ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.36 rows=47 width=8) (actual time=0.043..0.085 rows=123 loops=5)
                                             Index Cond: (movie_id = t.id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=12) (actual time=0.002..0.003 rows=1 loops=615)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=618)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
               ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=618)
                     Index Cond: (id = mc.company_type_id)
                     Heap Fetches: 618
         ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=618)
               Index Cond: (id = mk.keyword_id)
               Heap Fetches: 618
 Planning Time: 76.160 ms
 Execution Time: 564.845 ms
(56 rows)

SET
                                                                                              QUERY PLAN                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7402.39..7402.40 rows=1 width=64) (actual time=163.370..163.370 rows=1 loops=1)
   ->  Nested Loop  (cost=8.89..7402.38 rows=1 width=65) (actual time=47.965..163.334 rows=16 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         ->  Nested Loop  (cost=8.89..7399.96 rows=1 width=69) (actual time=47.949..163.143 rows=16 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=8.46..7398.38 rows=1 width=81) (actual time=9.976..129.642 rows=315 loops=1)
                     Join Filter: (mc.company_type_id = ct.id)
                     Rows Removed by Join Filter: 140
                     ->  Nested Loop  (cost=8.46..7397.29 rows=1 width=85) (actual time=9.954..127.035 rows=315 loops=1)
                           ->  Nested Loop  (cost=8.04..7395.51 rows=4 width=89) (actual time=9.811..114.253 rows=1218 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.61..7393.10 rows=4 width=77) (actual time=9.752..110.526 rows=60 loops=1)
                                       Join Filter: (cc.status_id = cct1.id)
                                       Rows Removed by Join Filter: 81
                                       ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.046..0.047 rows=1 loops=1)
                                             Filter: ((kind)::text = 'complete+verified'::text)
                                             Rows Removed by Filter: 3
                                       ->  Nested Loop  (cost=7.61..7391.86 rows=15 width=81) (actual time=9.674..110.426 rows=141 loops=1)
                                             ->  Nested Loop  (cost=7.19..7386.60 rows=11 width=73) (actual time=9.119..104.472 rows=401 loops=1)
                                                   Join Filter: (t.kind_id = kt.id)
                                                   Rows Removed by Join Filter: 156
                                                   ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=52) (actual time=0.020..0.022 rows=1 loops=1)
                                                         Filter: ((kind)::text = 'movie'::text)
                                                         Rows Removed by Filter: 6
                                                   ->  Nested Loop  (cost=7.19..7384.59 rows=74 width=29) (actual time=1.621..104.229 rows=557 loops=1)
                                                         ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=1.573..67.429 rows=1133 loops=1)
                                                               ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.160..42.996 rows=4 loops=1)
                                                                     Filter: ((keyword)::text = ANY ('{nerd,loner,alienation,dignity}'::text[]))
                                                                     Rows Removed by Filter: 134166
                                                               ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=0.175..5.954 rows=283 loops=4)
                                                                     Recheck Cond: (keyword_id = k.id)
                                                                     Heap Blocks: exact=1083
                                                                     ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.118..0.118 rows=283 loops=4)
                                                                           Index Cond: (keyword_id = k.id)
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.031..0.031 rows=0 loops=1133)
                                                               Index Cond: (id = mk.movie_id)
                                                               Filter: (production_year > 2000)
                                                               Rows Removed by Filter: 1
                                             ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=8) (actual time=0.013..0.014 rows=0 loops=401)
                                                   Index Cond: (movie_id = t.id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=12) (actual time=0.031..0.052 rows=20 loops=60)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.010..0.010 rows=0 loops=1218)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.002..0.002 rows=1 loops=315)
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.56 rows=1 width=8) (actual time=0.105..0.105 rows=0 loops=315)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: (((note)::text ~~ '%internet%'::text) AND ((info)::text ~~ 'USA:% 200%'::text))
                     Rows Removed by Filter: 268
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=16)
               Filter: ((info)::text = 'release dates'::text)
               Rows Removed by Filter: 15
 Planning Time: 75.233 ms
 Execution Time: 164.096 ms
(56 rows)

SET
                                                                                                       QUERY PLAN                                                                                                       
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=67209.67..67209.68 rows=1 width=64) (actual time=827.396..827.396 rows=1 loops=1)
   ->  Gather  (cost=67209.45..67209.66 rows=2 width=64) (actual time=827.109..834.189 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=66209.45..66209.46 rows=1 width=64) (actual time=819.159..819.159 rows=1 loops=3)
               ->  Nested Loop  (cost=3238.95..66209.44 rows=2 width=65) (actual time=617.964..819.046 rows=209 loops=3)
                     ->  Nested Loop  (cost=3238.53..66208.57 rows=2 width=69) (actual time=617.858..817.046 rows=209 loops=3)
                           ->  Nested Loop  (cost=3238.10..66206.76 rows=1 width=81) (actual time=617.738..816.796 rows=2 loops=3)
                                 ->  Nested Loop  (cost=3237.97..66206.60 rows=1 width=85) (actual time=617.655..816.708 rows=2 loops=3)
                                       ->  Nested Loop  (cost=3237.55..66206.16 rows=1 width=89) (actual time=617.534..816.565 rows=2 loops=3)
                                             ->  Nested Loop  (cost=3237.12..66205.53 rows=1 width=77) (actual time=617.421..816.440 rows=2 loops=3)
                                                   ->  Nested Loop  (cost=3236.98..66203.98 rows=8 width=81) (actual time=617.332..816.348 rows=2 loops=3)
                                                         ->  Hash Join  (cost=3236.54..55283.32 rows=5580 width=73) (actual time=274.187..417.803 rows=1684 loops=3)
                                                               Hash Cond: (t.kind_id = kt.id)
                                                               ->  Hash Join  (cost=3235.39..55241.01 rows=9766 width=29) (actual time=50.908..416.353 rows=2141 loops=3)
                                                                     Hash Cond: (t.id = cc.movie_id)
                                                                     ->  Parallel Seq Scan on title t  (cost=0.00..49166.29 rows=731112 width=25) (actual time=0.063..288.403 rows=583011 loops=3)
                                                                           Filter: (production_year > 1990)
                                                                           Rows Removed by Filter: 259760
                                                                     ->  Hash  (cost=2813.24..2813.24 rows=33772 width=4) (actual time=49.536..49.536 rows=24592 loops=3)
                                                                           Buckets: 65536  Batches: 1  Memory Usage: 1377kB
                                                                           ->  Hash Join  (cost=1.06..2813.24 rows=33772 width=4) (actual time=0.136..42.334 rows=24592 loops=3)
                                                                                 Hash Cond: (cc.status_id = cct1.id)
                                                                                 ->  Seq Scan on complete_cast cc  (cost=0.00..2081.86 rows=135086 width=8) (actual time=0.035..21.568 rows=135086 loops=3)
                                                                                 ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.039..0.040 rows=1 loops=3)
                                                                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                       ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.029..0.030 rows=1 loops=3)
                                                                                             Filter: ((kind)::text = 'complete+verified'::text)
                                                                                             Rows Removed by Filter: 3
                                                               ->  Hash  (cost=1.10..1.10 rows=4 width=52) (actual time=0.075..0.075 rows=4 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on kind_type kt  (cost=0.00..1.10 rows=4 width=52) (actual time=0.044..0.047 rows=4 loops=3)
                                                                           Filter: ((kind)::text = ANY ('{movie,"tv movie","video movie","video game"}'::text[]))
                                                                           Rows Removed by Filter: 3
                                                         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.95 rows=1 width=8) (actual time=0.235..0.235 rows=0 loops=5053)
                                                               Index Cond: (movie_id = t.id)
                                                               Filter: ((info IS NOT NULL) AND ((note)::text ~~ '%internet%'::text) AND (((info)::text ~~ 'USA:% 199%'::text) OR ((info)::text ~~ 'USA:% 200%'::text)))
                                                               Rows Removed by Filter: 123
                                                   ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.19 rows=1 width=4) (actual time=0.044..0.044 rows=1 loops=6)
                                                         Index Cond: (id = mi.info_type_id)
                                                         Filter: ((info)::text = 'release dates'::text)
                                             ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.58 rows=5 width=12) (actual time=0.057..0.060 rows=1 loops=6)
                                                   Index Cond: (movie_id = t.id)
                                       ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.060..0.060 rows=1 loops=7)
                                             Index Cond: (id = mc.company_id)
                                             Filter: ((country_code)::text = '[us]'::text)
                                 ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.036..0.036 rows=1 loops=7)
                                       Index Cond: (id = mc.company_type_id)
                                       Heap Fetches: 7
                           ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.34 rows=47 width=8) (actual time=0.053..0.086 rows=90 loops=7)
                                 Index Cond: (movie_id = t.id)
                     ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=628)
                           Index Cond: (id = mk.keyword_id)
                           Heap Fetches: 628
 Planning Time: 73.802 ms
 Execution Time: 835.156 ms
(56 rows)

SET
                                                                                                  QUERY PLAN                                                                                                  
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=6567.88..6567.89 rows=1 width=96) (actual time=1519.431..1519.432 rows=1 loops=1)
   ->  Nested Loop  (cost=10.32..6567.87 rows=1 width=48) (actual time=231.087..1519.172 rows=275 loops=1)
         ->  Nested Loop  (cost=9.89..6566.07 rows=1 width=41) (actual time=5.200..1494.788 rows=6518 loops=1)
               Join Filter: (rt.id = ci.role_id)
               Rows Removed by Join Filter: 30060
               ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.029..0.031 rows=1 loops=1)
                     Filter: ((role)::text = 'actress'::text)
                     Rows Removed by Filter: 11
               ->  Nested Loop  (cost=9.89..6564.90 rows=2 width=45) (actual time=4.715..1490.535 rows=36578 loops=1)
                     ->  Nested Loop  (cost=9.47..6562.80 rows=1 width=41) (actual time=4.670..1406.973 rows=13608 loops=1)
                           ->  Nested Loop  (cost=9.04..6561.09 rows=1 width=29) (actual time=4.607..1328.782 rows=13758 loops=1)
                                 Join Filter: (t.id = ci.movie_id)
                                 ->  Nested Loop  (cost=8.47..6521.26 rows=1 width=33) (actual time=2.268..628.288 rows=3406 loops=1)
                                       Join Filter: (it.id = mi.info_type_id)
                                       ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.012..0.024 rows=1 loops=1)
                                             Filter: ((info)::text = 'release dates'::text)
                                             Rows Removed by Filter: 112
                                       ->  Nested Loop  (cost=8.47..6518.83 rows=1 width=37) (actual time=2.254..627.395 rows=3406 loops=1)
                                             Join Filter: (t.id = mi.movie_id)
                                             ->  Nested Loop  (cost=8.04..6322.71 rows=6 width=29) (actual time=2.195..478.087 rows=1576 loops=1)
                                                   ->  Nested Loop  (cost=7.62..6297.69 rows=17 width=33) (actual time=2.152..416.480 rows=5566 loops=1)
                                                         Join Filter: (t.id = mc.movie_id)
                                                         ->  Nested Loop  (cost=7.19..6242.22 rows=16 width=25) (actual time=2.108..394.016 rows=495 loops=1)
                                                               ->  Nested Loop  (cost=6.76..6082.75 rows=101 width=4) (actual time=1.685..183.982 rows=9696 loops=1)
                                                                     ->  Seq Scan on keyword k  (cost=0.00..2793.84 rows=3 width=4) (actual time=0.043..35.583 rows=3 loops=1)
                                                                           Filter: ((keyword)::text = ANY ('{hero,martial-arts,hand-to-hand-combat}'::text[]))
                                                                           Rows Removed by Filter: 134167
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1093.30 rows=300 width=8) (actual time=1.459..47.816 rows=3232 loops=3)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=7446
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=1.119..1.119 rows=3232 loops=3)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using title_pkey on title t  (cost=0.43..1.58 rows=1 width=21) (actual time=0.021..0.021 rows=0 loops=9696)
                                                                     Index Cond: (id = mk.movie_id)
                                                                     Filter: (production_year > 2010)
                                                                     Rows Removed by Filter: 1
                                                         ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..3.40 rows=5 width=8) (actual time=0.026..0.039 rows=11 loops=495)
                                                               Index Cond: (movie_id = mk.movie_id)
                                                   ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.47 rows=1 width=4) (actual time=0.010..0.010 rows=0 loops=5566)
                                                         Index Cond: (id = mc.company_id)
                                                         Filter: ((country_code)::text = '[us]'::text)
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..32.67 rows=1 width=8) (actual time=0.031..0.093 rows=2 loops=1576)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%201%'::text) OR ((info)::text ~~ 'USA:%201%'::text)))
                                                   Rows Removed by Filter: 131
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..39.82 rows=1 width=16) (actual time=0.134..0.204 rows=4 loops=3406)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                       Rows Removed by Filter: 169
                           ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..1.70 rows=1 width=20) (actual time=0.005..0.005 rows=1 loops=13758)
                                 Index Cond: (id = ci.person_role_id)
                     ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.08 rows=2 width=4) (actual time=0.004..0.005 rows=3 loops=13608)
                           Index Cond: (person_id = ci.person_id)
                           Heap Fetches: 36578
         ->  Index Scan using name_pkey on name n  (cost=0.43..1.80 rows=1 width=19) (actual time=0.003..0.003 rows=0 loops=6518)
               Index Cond: (id = ci.person_id)
               Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
               Rows Removed by Filter: 1
 Planning Time: 102.439 ms
 Execution Time: 1520.310 ms
(61 rows)

SET
                                                                                                            QUERY PLAN                                                                                                            
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=6518.41..6518.42 rows=1 width=96) (actual time=111.751..111.752 rows=1 loops=1)
   ->  Nested Loop  (cost=1004.27..6518.40 rows=1 width=48) (actual time=63.227..111.696 rows=45 loops=1)
         ->  Nested Loop  (cost=1003.85..6516.52 rows=1 width=52) (actual time=21.731..108.181 rows=810 loops=1)
               ->  Nested Loop  (cost=1003.42..6514.72 rows=1 width=45) (actual time=21.685..102.216 rows=1986 loops=1)
                     ->  Nested Loop  (cost=1003.28..6514.53 rows=1 width=49) (actual time=21.659..98.594 rows=1986 loops=1)
                           Join Filter: (t.id = mi.movie_id)
                           ->  Nested Loop  (cost=1002.85..6481.85 rows=1 width=61) (actual time=21.591..49.545 rows=842 loops=1)
                                 ->  Gather  (cost=1002.42..6480.14 rows=1 width=49) (actual time=21.548..46.967 rows=857 loops=1)
                                       Workers Planned: 1
                                       Workers Launched: 1
                                       ->  Nested Loop  (cost=2.42..5480.04 rows=1 width=49) (actual time=44.638..57.199 rows=428 loops=2)
                                             ->  Nested Loop  (cost=2.28..5479.87 rows=1 width=53) (actual time=44.192..53.377 rows=2428 loops=2)
                                                   ->  Nested Loop  (cost=1.86..5477.77 rows=1 width=49) (actual time=44.146..49.210 rows=920 loops=2)
                                                         Join Filter: (t.id = ci.movie_id)
                                                         ->  Nested Loop  (cost=1.29..5437.93 rows=1 width=33) (actual time=43.060..45.068 rows=42 loops=2)
                                                               Join Filter: (t.id = mk.movie_id)
                                                               ->  Nested Loop  (cost=0.86..5434.87 rows=1 width=25) (actual time=43.024..44.960 rows=2 loops=2)
                                                                     ->  Nested Loop  (cost=0.43..5425.21 rows=6 width=4) (actual time=42.549..43.241 rows=50 loops=2)
                                                                           ->  Parallel Seq Scan on company_name cn  (cost=0.00..5068.50 rows=1 width=4) (actual time=42.503..42.511 rows=0 loops=2)
                                                                                 Filter: (((country_code)::text = '[us]'::text) AND ((name)::text = 'DreamWorks Animation'::text))
                                                                                 Rows Removed by Filter: 117498
                                                                           ->  Index Scan using company_id_movie_companies on movie_companies mc  (cost=0.43..355.38 rows=133 width=8) (actual time=0.084..1.405 rows=99 loops=1)
                                                                                 Index Cond: (company_id = cn.id)
                                                                     ->  Index Scan using title_pkey on title t  (cost=0.43..1.60 rows=1 width=21) (actual time=0.034..0.034 rows=0 loops=99)
                                                                           Index Cond: (id = mc.movie_id)
                                                                           Filter: ((production_year > 2010) AND ((title)::text ~~ 'Kung Fu Panda%'::text))
                                                                           Rows Removed by Filter: 1
                                                               ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..2.47 rows=47 width=8) (actual time=0.034..0.043 rows=21 loops=4)
                                                                     Index Cond: (movie_id = mc.movie_id)
                                                         ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..39.82 rows=1 width=16) (actual time=0.012..0.093 rows=22 loops=83)
                                                               Index Cond: (movie_id = mk.movie_id)
                                                               Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                               Rows Removed by Filter: 75
                                                   ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.08 rows=2 width=4) (actual time=0.003..0.004 rows=3 loops=1841)
                                                         Index Cond: (person_id = ci.person_id)
                                                         Heap Fetches: 4855
                                             ->  Index Scan using role_type_pkey on role_type rt  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=4855)
                                                   Index Cond: (id = ci.role_id)
                                                   Filter: ((role)::text = 'actress'::text)
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..1.70 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=857)
                                       Index Cond: (id = ci.person_role_id)
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..32.67 rows=1 width=8) (actual time=0.010..0.057 rows=2 loops=842)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%201%'::text) OR ((info)::text ~~ 'USA:%201%'::text)))
                                 Rows Removed by Filter: 166
                     ->  Index Scan using info_type_pkey on info_type it  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1986)
                           Index Cond: (id = mi.info_type_id)
                           Filter: ((info)::text = 'release dates'::text)
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.80 rows=1 width=19) (actual time=0.003..0.003 rows=0 loops=1986)
                     Index Cond: (id = ci.person_id)
                     Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                     Rows Removed by Filter: 1
         ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..1.46 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=810)
               Index Cond: (id = mk.keyword_id)
               Filter: ((keyword)::text = ANY ('{hero,martial-arts,hand-to-hand-combat,computer-animated-movie}'::text[]))
               Rows Removed by Filter: 1
 Planning Time: 100.152 ms
 Execution Time: 112.777 ms
(59 rows)

SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7505.11..7505.12 rows=1 width=128) (actual time=9170.457..9170.457 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.03..7505.10 rows=1 width=80) (actual time=60.688..9162.105 rows=4407 loops=1)
         Join Filter: (mi.movie_id = t.id)
         ->  Nested Loop  (cost=1011.60..7504.28 rows=1 width=79) (actual time=60.582..9063.197 rows=4407 loops=1)
               ->  Nested Loop  (cost=1011.17..7503.25 rows=1 width=68) (actual time=34.081..8857.691 rows=7112 loops=1)
                     ->  Nested Loop  (cost=1011.03..7503.07 rows=1 width=72) (actual time=34.028..8820.503 rows=7740 loops=1)
                           Join Filter: (mi.movie_id = ci.movie_id)
                           ->  Gather  (cost=1010.47..7474.12 rows=1 width=64) (actual time=9.983..2004.484 rows=12260 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Nested Loop  (cost=10.46..6474.02 rows=1 width=64) (actual time=10.835..2664.921 rows=4087 loops=3)
                                       Join Filter: (mi_idx.movie_id = mi.movie_id)
                                       ->  Hash Join  (cost=10.03..6438.32 rows=2 width=13) (actual time=7.285..633.554 rows=16920 loops=3)
                                             Hash Cond: (mi_idx.info_type_id = it2.id)
                                             ->  Nested Loop  (cost=7.61..6435.32 rows=213 width=17) (actual time=7.054..607.491 rows=50907 loops=3)
                                                   ->  Nested Loop  (cost=7.18..6379.27 rows=70 width=4) (actual time=6.980..324.849 rows=20699 loops=3)
                                                         ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4207.70 rows=2 width=4) (actual time=0.370..32.152 rows=2 loops=3)
                                                               Filter: ((keyword)::text = ANY ('{murder,blood,gore,death,female-nudity}'::text[]))
                                                               Rows Removed by Filter: 44722
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1082.78 rows=300 width=8) (actual time=5.413..170.547 rows=12419 loops=5)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=12389
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=4.180..4.180 rows=12419 loops=5)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.77 rows=3 width=13) (actual time=0.011..0.012 rows=2 loops=62096)
                                                         Index Cond: (movie_id = mk.movie_id)
                                             ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.085..0.085 rows=1 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.063..0.065 rows=1 loops=3)
                                                         Filter: ((info)::text = 'votes'::text)
                                                         Rows Removed by Filter: 112
                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..17.84 rows=1 width=51) (actual time=0.118..0.119 rows=0 loops=50760)
                                             Index Cond: (movie_id = mk.movie_id)
                                             Filter: ((info)::text = 'Horror'::text)
                                             Rows Removed by Filter: 56
                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..28.93 rows=1 width=8) (actual time=0.452..0.554 rows=1 loops=12260)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                 Rows Removed by Filter: 47
                     ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=7740)
                           Index Cond: (id = mi.info_type_id)
                           Filter: ((info)::text = 'genres'::text)
                           Rows Removed by Filter: 0
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.03 rows=1 width=19) (actual time=0.028..0.028 rows=1 loops=7112)
                     Index Cond: (id = ci.person_id)
                     Filter: ((gender)::text = 'm'::text)
                     Rows Removed by Filter: 0
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.81 rows=1 width=21) (actual time=0.020..0.020 rows=1 loops=4407)
               Index Cond: (id = mk.movie_id)
 Planning Time: 26.881 ms
 Execution Time: 9171.565 ms
(51 rows)

SET
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7485.20..7485.21 rows=1 width=128) (actual time=840.857..840.857 rows=1 loops=1)
   ->  Nested Loop  (cost=1009.75..7485.19 rows=1 width=80) (actual time=407.572..840.800 rows=6 loops=1)
         ->  Nested Loop  (cost=1009.32..7484.17 rows=1 width=69) (actual time=407.483..840.573 rows=6 loops=1)
               ->  Nested Loop  (cost=1009.18..7483.98 rows=1 width=73) (actual time=407.454..840.493 rows=18 loops=1)
                     Join Filter: (t.id = mi_idx.movie_id)
                     ->  Nested Loop  (cost=1008.75..7483.18 rows=1 width=80) (actual time=407.370..840.321 rows=6 loops=1)
                           ->  Nested Loop  (cost=1008.61..7482.99 rows=1 width=84) (actual time=407.278..840.204 rows=6 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=1008.17..7465.14 rows=1 width=33) (actual time=406.987..839.287 rows=6 loops=1)
                                       Join Filter: (t.id = ci.movie_id)
                                       ->  Gather  (cost=1007.61..7436.20 rows=1 width=25) (actual time=406.170..842.954 rows=9 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Nested Loop  (cost=7.61..6436.10 rows=1 width=25) (actual time=422.842..599.526 rows=3 loops=3)
                                                   ->  Nested Loop  (cost=7.18..6379.27 rows=70 width=4) (actual time=6.949..293.995 rows=20699 loops=3)
                                                         ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4207.70 rows=2 width=4) (actual time=0.393..47.032 rows=2 loops=3)
                                                               Filter: ((keyword)::text = ANY ('{murder,blood,gore,death,female-nudity}'::text[]))
                                                               Rows Removed by Filter: 44722
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1082.78 rows=300 width=8) (actual time=5.368..143.176 rows=12419 loops=5)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=12389
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=4.153..4.153 rows=12419 loops=5)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.81 rows=1 width=21) (actual time=0.014..0.014 rows=0 loops=62096)
                                                         Index Cond: (id = mk.movie_id)
                                                         Filter: ((production_year > 2010) AND ((title)::text ~~ 'Vampire%'::text))
                                                         Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..28.93 rows=1 width=8) (actual time=0.197..0.240 rows=1 loops=9)
                                             Index Cond: (movie_id = mk.movie_id)
                                             Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                             Rows Removed by Filter: 21
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..17.84 rows=1 width=51) (actual time=0.151..0.151 rows=1 loops=6)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = 'Horror'::text)
                                       Rows Removed by Filter: 20
                           ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=6)
                                 Index Cond: (id = mi.info_type_id)
                                 Filter: ((info)::text = 'genres'::text)
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.77 rows=3 width=13) (actual time=0.025..0.026 rows=3 loops=6)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=18)
                     Index Cond: (id = mi_idx.info_type_id)
                     Filter: ((info)::text = 'votes'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using name_pkey on name n  (cost=0.43..1.03 rows=1 width=19) (actual time=0.036..0.036 rows=1 loops=6)
               Index Cond: (id = ci.person_id)
               Filter: ((gender)::text = 'm'::text)
 Planning Time: 28.497 ms
 Execution Time: 847.487 ms
(49 rows)

SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8711.77..8711.78 rows=1 width=128) (actual time=30457.612..30457.612 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.03..8711.76 rows=1 width=80) (actual time=13.949..30418.577 rows=26153 loops=1)
         Join Filter: (mi.movie_id = t.id)
         ->  Nested Loop  (cost=1011.60..8710.94 rows=1 width=79) (actual time=13.892..30091.591 rows=26153 loops=1)
               ->  Nested Loop  (cost=1011.17..8709.91 rows=1 width=68) (actual time=13.816..29311.027 rows=42900 loops=1)
                     Join Filter: (mi.movie_id = ci.movie_id)
                     ->  Gather  (cost=1010.61..8680.97 rows=1 width=60) (actual time=9.914..2253.905 rows=63386 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop  (cost=10.61..7680.87 rows=1 width=60) (actual time=7.639..3662.007 rows=21129 loops=3)
                                 ->  Nested Loop  (cost=10.46..7680.52 rows=2 width=64) (actual time=7.622..3582.254 rows=22577 loops=3)
                                       Join Filter: (mi_idx.movie_id = mi.movie_id)
                                       ->  Hash Join  (cost=10.03..7644.40 rows=2 width=13) (actual time=7.390..775.529 rows=21234 loops=3)
                                             Hash Cond: (mi_idx.info_type_id = it2.id)
                                             ->  Nested Loop  (cost=7.61..7641.16 rows=298 width=17) (actual time=7.144..741.424 rows=63896 loops=3)
                                                   ->  Nested Loop  (cost=7.18..7562.69 rows=98 width=4) (actual time=7.074..394.561 rows=25571 loops=3)
                                                         ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4347.46 rows=3 width=4) (actual time=0.533..34.882 rows=2 loops=3)
                                                               Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                               Rows Removed by Filter: 44721
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1068.74 rows=300 width=8) (actual time=4.966..149.505 rows=10959 loops=7)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=12389
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.833..3.833 rows=10959 loops=7)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.77 rows=3 width=13) (actual time=0.011..0.012 rows=2 loops=76714)
                                                         Index Cond: (movie_id = mk.movie_id)
                                             ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.085..0.085 rows=1 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.057..0.060 rows=1 loops=3)
                                                         Filter: ((info)::text = 'votes'::text)
                                                         Rows Removed by Filter: 112
                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..18.05 rows=1 width=51) (actual time=0.127..0.131 rows=1 loops=63701)
                                             Index Cond: (movie_id = mk.movie_id)
                                             Filter: ((info)::text = ANY ('{Horror,Action,Sci-Fi,Thriller,Crime,War}'::text[]))
                                             Rows Removed by Filter: 58
                                 ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=67732)
                                       Index Cond: (id = mi.info_type_id)
                                       Filter: ((info)::text = 'genres'::text)
                                       Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..28.93 rows=1 width=8) (actual time=0.339..0.426 rows=1 loops=63386)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                           Rows Removed by Filter: 63
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.03 rows=1 width=19) (actual time=0.017..0.017 rows=1 loops=42900)
                     Index Cond: (id = ci.person_id)
                     Filter: ((gender)::text = 'm'::text)
                     Rows Removed by Filter: 0
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.81 rows=1 width=21) (actual time=0.011..0.011 rows=1 loops=26153)
               Index Cond: (id = mk.movie_id)
 Planning Time: 28.445 ms
 Execution Time: 30458.676 ms
(51 rows)

SET
                                                                                                      QUERY PLAN                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=14697.96..14697.97 rows=1 width=128) (actual time=5662.225..5662.225 rows=1 loops=1)
   ->  Nested Loop  (cost=9.46..14697.95 rows=1 width=53) (actual time=34.164..5658.930 rows=1728 loops=1)
         Join Filter: (cct1.id = cc.subject_id)
         Rows Removed by Join Filter: 471
         ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.029..0.030 rows=1 loops=1)
               Filter: ((kind)::text = 'cast'::text)
               Rows Removed by Filter: 3
         ->  Nested Loop  (cost=9.46..14696.89 rows=1 width=57) (actual time=34.132..5658.300 rows=2199 loops=1)
               Join Filter: (cct2.id = cc.status_id)
               Rows Removed by Join Filter: 2199
               ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.009..0.011 rows=2 loops=1)
                     Filter: ((kind)::text ~~ '%complete%'::text)
                     Rows Removed by Filter: 2
               ->  Nested Loop  (cost=9.46..14695.82 rows=1 width=61) (actual time=28.509..2828.435 rows=2199 loops=2)
                     ->  Nested Loop  (cost=9.04..14695.35 rows=1 width=69) (actual time=20.745..2804.897 rows=2929 loops=2)
                           ->  Nested Loop  (cost=8.61..14694.89 rows=1 width=58) (actual time=20.701..2730.584 rows=2929 loops=2)
                                 ->  Nested Loop  (cost=8.18..14688.49 rows=14 width=46) (actual time=20.244..1881.815 rows=105632 loops=2)
                                       Join Filter: (t.id = ci.movie_id)
                                       ->  Nested Loop  (cost=7.62..14686.50 rows=1 width=34) (actual time=20.177..793.042 rows=884 loops=2)
                                             Join Filter: (kt.id = t.kind_id)
                                             Rows Removed by Join Filter: 1016
                                             ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.018..0.020 rows=1 loops=2)
                                                   Filter: ((kind)::text = 'movie'::text)
                                                   Rows Removed by Filter: 6
                                             ->  Nested Loop  (cost=7.62..14685.40 rows=1 width=38) (actual time=1.169..792.331 rows=1900 loops=2)
                                                   ->  Nested Loop  (cost=7.19..14684.91 rows=1 width=13) (actual time=1.134..704.331 rows=3908 loops=2)
                                                         Join Filter: (mi_idx.info_type_id = it2.id)
                                                         Rows Removed by Join Filter: 2713
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.017..0.021 rows=1 loops=2)
                                                               Filter: ((info)::text = 'rating'::text)
                                                               Rows Removed by Filter: 112
                                                         ->  Nested Loop  (cost=7.19..14680.72 rows=142 width=17) (actual time=1.113..702.318 rows=6621 loops=2)
                                                               ->  Nested Loop  (cost=6.76..14509.57 rows=337 width=4) (actual time=0.887..363.807 rows=24091 loops=2)
                                                                     ->  Seq Scan on keyword k  (cost=0.00..3967.82 rows=10 width=4) (actual time=0.192..53.514 rows=10 loops=2)
                                                                           Filter: ((keyword)::text = ANY ('{superhero,marvel-comics,based-on-comic,tv-special,fight,violence,magnet,web,claw,laser}'::text[]))
                                                                           Rows Removed by Filter: 134160
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1051.17 rows=300 width=8) (actual time=0.983..29.944 rows=2409 loops=20)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=34254
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.728..0.728 rows=2409 loops=20)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=13) (actual time=0.013..0.013 rows=0 loops=48182)
                                                                     Index Cond: (movie_id = mk.movie_id)
                                                                     Filter: ((info)::text > '7.0'::text)
                                                                     Rows Removed by Filter: 2
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.021..0.021 rows=0 loops=7816)
                                                         Index Cond: (id = mk.movie_id)
                                                         Filter: (production_year > 2000)
                                                         Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.032..1.144 rows=119 loops=1768)
                                             Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=20) (actual time=0.007..0.007 rows=0 loops=211264)
                                       Index Cond: (id = ci.person_role_id)
                                       Filter: ((name IS NOT NULL) AND (((name)::text ~~ '%man%'::text) OR ((name)::text ~~ '%Man%'::text)))
                                       Rows Removed by Filter: 0
                           ->  Index Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=19) (actual time=0.024..0.024 rows=1 loops=5858)
                                 Index Cond: (id = ci.person_id)
                     ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.006..0.007 rows=1 loops=5858)
                           Index Cond: (movie_id = t.id)
 Planning Time: 88.426 ms
 Execution Time: 5662.982 ms
(61 rows)

SET
                                                                                                      QUERY PLAN                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7402.91..7402.92 rows=1 width=96) (actual time=775.519..775.519 rows=1 loops=1)
   ->  Nested Loop  (cost=9.46..7402.90 rows=1 width=38) (actual time=67.653..775.365 rows=93 loops=1)
         Join Filter: (cct1.id = cc.subject_id)
         Rows Removed by Join Filter: 87
         ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.025..0.027 rows=1 loops=1)
               Filter: ((kind)::text = 'cast'::text)
               Rows Removed by Filter: 3
         ->  Nested Loop  (cost=9.46..7401.84 rows=1 width=42) (actual time=67.625..775.302 rows=180 loops=1)
               Join Filter: (cct2.id = cc.status_id)
               Rows Removed by Join Filter: 180
               ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.008..0.011 rows=2 loops=1)
                     Filter: ((kind)::text ~~ '%complete%'::text)
                     Rows Removed by Filter: 2
               ->  Nested Loop  (cost=9.46..7400.78 rows=1 width=46) (actual time=56.308..387.603 rows=180 loops=2)
                     ->  Nested Loop  (cost=9.04..7400.30 rows=1 width=54) (actual time=52.947..386.664 rows=191 loops=2)
                           ->  Nested Loop  (cost=8.61..7399.84 rows=1 width=58) (actual time=52.921..383.688 rows=191 loops=2)
                                 ->  Nested Loop  (cost=8.18..7393.44 rows=14 width=46) (actual time=52.840..348.161 rows=7981 loops=2)
                                       Join Filter: (t.id = ci.movie_id)
                                       ->  Nested Loop  (cost=7.62..7391.45 rows=1 width=34) (actual time=52.812..303.109 rows=31 loops=2)
                                             Join Filter: (kt.id = t.kind_id)
                                             Rows Removed by Join Filter: 167
                                             ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.015..0.017 rows=1 loops=2)
                                                   Filter: ((kind)::text = 'movie'::text)
                                                   Rows Removed by Filter: 6
                                             ->  Nested Loop  (cost=7.62..7390.35 rows=1 width=38) (actual time=1.522..303.022 rows=198 loops=2)
                                                   ->  Nested Loop  (cost=7.19..7389.87 rows=1 width=13) (actual time=1.485..296.150 rows=313 loops=2)
                                                         Join Filter: (mi_idx.info_type_id = it2.id)
                                                         Rows Removed by Join Filter: 613
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.018..0.021 rows=1 loops=2)
                                                               Filter: ((info)::text = 'rating'::text)
                                                               Rows Removed by Filter: 112
                                                         ->  Nested Loop  (cost=7.19..7387.28 rows=14 width=17) (actual time=1.155..295.884 rows=926 loops=2)
                                                               ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=0.880..167.040 rows=9984 loops=2)
                                                                     ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=0.137..38.534 rows=4 loops=2)
                                                                           Filter: ((keyword)::text = ANY ('{superhero,marvel-comics,based-on-comic,fight}'::text[]))
                                                                           Rows Removed by Filter: 134166
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=1.021..31.031 rows=2496 loops=8)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=15372
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.755..0.755 rows=2496 loops=8)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=13) (actual time=0.012..0.012 rows=0 loops=19968)
                                                                     Index Cond: (movie_id = mk.movie_id)
                                                                     Filter: ((info)::text > '8.0'::text)
                                                                     Rows Removed by Filter: 2
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.021..0.021 rows=1 loops=626)
                                                         Index Cond: (id = mk.movie_id)
                                                         Filter: (production_year > 2005)
                                                         Rows Removed by Filter: 0
                                       ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.031..1.332 rows=257 loops=62)
                                             Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=20) (actual time=0.004..0.004 rows=0 loops=15962)
                                       Index Cond: (id = ci.person_role_id)
                                       Filter: ((name IS NOT NULL) AND (((name)::text ~~ '%man%'::text) OR ((name)::text ~~ '%Man%'::text)))
                                       Rows Removed by Filter: 0
                           ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=382)
                                 Index Cond: (id = ci.person_id)
                                 Heap Fetches: 382
                     ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.003..0.004 rows=1 loops=382)
                           Index Cond: (movie_id = t.id)
 Planning Time: 88.032 ms
 Execution Time: 776.284 ms
(62 rows)

SET
                                                                                                   QUERY PLAN                                                                                                   
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=14709.67..14709.68 rows=1 width=96) (actual time=9581.097..9581.097 rows=1 loops=1)
   ->  Nested Loop  (cost=9.46..14709.67 rows=1 width=38) (actual time=18.980..9572.657 rows=5400 loops=1)
         Join Filter: (it2.id = mi_idx.info_type_id)
         Rows Removed by Join Filter: 11196
         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.026..0.029 rows=1 loops=1)
               Filter: ((info)::text = 'rating'::text)
               Rows Removed by Filter: 112
         ->  Nested Loop  (cost=9.46..14707.24 rows=1 width=42) (actual time=18.949..9569.618 rows=16596 loops=1)
               Join Filter: (t.id = mi_idx.movie_id)
               ->  Nested Loop  (cost=9.03..14706.72 rows=1 width=49) (actual time=18.897..9508.272 rows=5406 loops=1)
                     ->  Nested Loop  (cost=8.60..14700.32 rows=14 width=37) (actual time=17.835..7795.784 rows=189844 loops=1)
                           ->  Nested Loop  (cost=8.17..14693.95 rows=14 width=41) (actual time=17.807..3959.912 rows=189844 loops=1)
                                 Join Filter: (t.id = ci.movie_id)
                                 ->  Nested Loop  (cost=7.61..14691.96 rows=1 width=29) (actual time=17.725..1704.155 rows=1267 loops=1)
                                       Join Filter: (cct2.id = cc.status_id)
                                       Rows Removed by Join Filter: 1267
                                       ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.020..0.022 rows=2 loops=1)
                                             Filter: ((kind)::text ~~ '%complete%'::text)
                                             Rows Removed by Filter: 2
                                       ->  Nested Loop  (cost=7.61..14690.90 rows=1 width=33) (actual time=15.371..851.711 rows=1267 loops=2)
                                             Join Filter: (cct1.id = cc.subject_id)
                                             Rows Removed by Join Filter: 218
                                             ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.005..0.007 rows=1 loops=2)
                                                   Filter: ((kind)::text = 'cast'::text)
                                                   Rows Removed by Filter: 3
                                             ->  Nested Loop  (cost=7.61..14689.84 rows=1 width=37) (actual time=15.361..851.084 rows=1485 loops=2)
                                                   ->  Nested Loop  (cost=7.19..14677.40 rows=26 width=25) (actual time=15.120..808.212 rows=5032 loops=2)
                                                         Join Filter: (kt.id = t.kind_id)
                                                         Rows Removed by Join Filter: 5581
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.011..0.013 rows=1 loops=2)
                                                               Filter: ((kind)::text = 'movie'::text)
                                                               Rows Removed by Filter: 6
                                                         ->  Nested Loop  (cost=7.19..14674.02 rows=184 width=29) (actual time=0.924..804.727 rows=10613 loops=2)
                                                               ->  Nested Loop  (cost=6.76..14509.57 rows=337 width=4) (actual time=0.887..369.151 rows=24091 loops=2)
                                                                     ->  Seq Scan on keyword k  (cost=0.00..3967.82 rows=10 width=4) (actual time=0.193..53.977 rows=10 loops=2)
                                                                           Filter: ((keyword)::text = ANY ('{superhero,marvel-comics,based-on-comic,tv-special,fight,violence,magnet,web,claw,laser}'::text[]))
                                                                           Rows Removed by Filter: 134160
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1051.17 rows=300 width=8) (actual time=0.994..30.358 rows=2409 loops=20)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=34254
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.739..0.739 rows=2409 loops=20)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.017..0.017 rows=0 loops=48182)
                                                                     Index Cond: (id = mk.movie_id)
                                                                     Filter: (production_year > 2000)
                                                                     Rows Removed by Filter: 1
                                                   ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.007..0.007 rows=0 loops=10064)
                                                         Index Cond: (movie_id = t.id)
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.034..1.658 rows=150 loops=1267)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.019..0.019 rows=1 loops=189844)
                                 Index Cond: (id = ci.person_id)
                                 Heap Fetches: 189844
                     ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=20) (actual time=0.008..0.008 rows=0 loops=189844)
                           Index Cond: (id = ci.person_role_id)
                           Filter: ((name IS NOT NULL) AND (((name)::text ~~ '%man%'::text) OR ((name)::text ~~ '%Man%'::text)))
                           Rows Removed by Filter: 0
               ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.48 rows=3 width=13) (actual time=0.008..0.009 rows=3 loops=5406)
                     Index Cond: (movie_id = ci.movie_id)
 Planning Time: 88.491 ms
 Execution Time: 9581.867 ms
(61 rows)

SET
                                                                                                  QUERY PLAN                                                                                                   
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3759.09..3759.10 rows=1 width=96) (actual time=228.885..228.885 rows=1 loops=1)
   ->  Nested Loop  (cost=9.18..3759.08 rows=1 width=118) (actual time=10.164..228.510 rows=477 loops=1)
         Join Filter: (ml.movie_id = mi.movie_id)
         ->  Nested Loop  (cost=8.74..3757.51 rows=1 width=138) (actual time=9.868..225.278 rows=172 loops=1)
               Join Filter: (cc.subject_id = cct1.id)
               Rows Removed by Join Filter: 57
               ->  Nested Loop  (cost=8.74..3756.43 rows=1 width=142) (actual time=9.856..223.887 rows=172 loops=1)
                     Join Filter: (cct2.id = cc.status_id)
                     Rows Removed by Join Filter: 57
                     ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.027..0.029 rows=1 loops=1)
                           Filter: ((kind)::text = 'complete'::text)
                           Rows Removed by Filter: 3
                     ->  Nested Loop  (cost=8.74..3755.36 rows=2 width=146) (actual time=9.827..223.804 rows=229 loops=1)
                           Join Filter: (ml.movie_id = cc.movie_id)
                           ->  Nested Loop  (cost=8.32..3754.88 rows=1 width=134) (actual time=6.505..222.844 rows=310 loops=1)
                                 Join Filter: (ml.movie_id = t.id)
                                 ->  Nested Loop  (cost=7.89..3754.38 rows=1 width=113) (actual time=6.439..221.340 rows=402 loops=1)
                                       ->  Nested Loop  (cost=7.47..3753.92 rows=1 width=98) (actual time=5.542..217.324 rows=962 loops=1)
                                             Join Filter: (ct.id = mc.company_type_id)
                                             Rows Removed by Join Filter: 59
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.024..0.026 rows=1 loops=1)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                             ->  Nested Loop  (cost=7.47..3752.83 rows=3 width=102) (actual time=5.516..217.098 rows=1021 loops=1)
                                                   Join Filter: (ml.movie_id = mc.movie_id)
                                                   ->  Nested Loop  (cost=7.04..3752.25 rows=1 width=90) (actual time=5.440..214.891 rows=199 loops=1)
                                                         Join Filter: (lt.id = ml.link_type_id)
                                                         Rows Removed by Join Filter: 303
                                                         ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.025..0.034 rows=2 loops=1)
                                                               Filter: ((link)::text ~~ '%follow%'::text)
                                                               Rows Removed by Filter: 16
                                                         ->  Nested Loop  (cost=7.04..3750.90 rows=10 width=12) (actual time=4.783..107.381 rows=251 loops=2)
                                                               ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=4.764..85.599 rows=10544 loops=2)
                                                                     ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.229..17.648 rows=1 loops=2)
                                                                           Filter: ((keyword)::text = 'sequel'::text)
                                                                           Rows Removed by Filter: 134169
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=3.488..65.383 rows=10544 loops=2)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=11140
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=2.661..2.661 rows=10544 loops=2)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.002..0.002 rows=0 loops=21088)
                                                                     Index Cond: (movie_id = mk.movie_id)
                                                   ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=12) (actual time=0.007..0.010 rows=5 loops=199)
                                                         Index Cond: (movie_id = mk.movie_id)
                                                         Filter: (note IS NULL)
                                                         Rows Removed by Filter: 2
                                       ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.004..0.004 rows=0 loops=962)
                                             Index Cond: (id = mc.company_id)
                                             Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.003..0.003 rows=1 loops=402)
                                       Index Cond: (id = mk.movie_id)
                                       Filter: ((production_year >= 1950) AND (production_year <= 2000))
                                       Rows Removed by Filter: 0
                           ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.002..0.002 rows=1 loops=310)
                                 Index Cond: (movie_id = mk.movie_id)
               ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=2 width=4) (actual time=0.002..0.002 rows=1 loops=172)
                     Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.56 rows=1 width=4) (actual time=0.014..0.017 rows=3 loops=172)
               Index Cond: (movie_id = mk.movie_id)
               Filter: ((info)::text = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
               Rows Removed by Filter: 17
 Planning Time: 87.154 ms
 Execution Time: 229.613 ms
(65 rows)

SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=2479.14..2479.15 rows=1 width=96) (actual time=68.443..68.443 rows=1 loops=1)
   ->  Nested Loop  (cost=4.75..2479.13 rows=1 width=118) (actual time=44.415..68.099 rows=247 loops=1)
         Join Filter: (mc.company_type_id = ct.id)
         ->  Nested Loop  (cost=4.75..2478.07 rows=1 width=122) (actual time=44.400..66.059 rows=247 loops=1)
               ->  Nested Loop  (cost=4.33..2457.31 rows=47 width=126) (actual time=44.263..60.543 rows=1919 loops=1)
                     Join Filter: (ml.movie_id = mk.movie_id)
                     ->  Nested Loop  (cost=3.90..2455.35 rows=1 width=142) (actual time=44.210..58.808 rows=247 loops=1)
                           Join Filter: (ml.movie_id = mi.movie_id)
                           ->  Nested Loop  (cost=3.47..2453.33 rows=1 width=138) (actual time=44.092..57.632 rows=95 loops=1)
                                 ->  Nested Loop  (cost=3.05..2451.96 rows=3 width=123) (actual time=44.044..56.945 rows=190 loops=1)
                                       Join Filter: (ml.movie_id = t.id)
                                       ->  Hash Join  (cost=2.62..2365.94 rows=144 width=102) (actual time=3.467..53.635 rows=794 loops=1)
                                             Hash Cond: (ml.link_type_id = lt.id)
                                             ->  Merge Join  (cost=1.38..2356.27 rows=2601 width=24) (actual time=0.803..52.494 rows=7314 loops=1)
                                                   Merge Cond: (mc.movie_id = ml.movie_id)
                                                   ->  Nested Loop  (cost=0.85..33295.88 rows=43182 width=16) (actual time=0.738..37.354 rows=4811 loops=1)
                                                         ->  Nested Loop  (cost=0.42..11074.61 rows=16886 width=4) (actual time=0.090..9.497 rows=5561 loops=1)
                                                               Join Filter: (cct2.id = cc.status_id)
                                                               Rows Removed by Join Filter: 432
                                                               ->  Nested Loop  (cost=0.42..10060.41 rows=67543 width=8) (actual time=0.063..7.468 rows=5993 loops=1)
                                                                     Join Filter: (cct1.id = cc.subject_id)
                                                                     Rows Removed by Join Filter: 2305
                                                                     ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..6344.49 rows=135086 width=12) (actual time=0.024..4.039 rows=5993 loops=1)
                                                                     ->  Materialize  (cost=0.00..1.06 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=5993)
                                                                           ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=2 width=4) (actual time=0.024..0.025 rows=2 loops=1)
                                                                                 Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
                                                               ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=5993)
                                                                     ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.016..0.017 rows=1 loops=1)
                                                                           Filter: ((kind)::text = 'complete'::text)
                                                                           Rows Removed by Filter: 3
                                                         ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..1.29 rows=3 width=12) (actual time=0.004..0.005 rows=1 loops=5561)
                                                               Index Cond: (movie_id = cc.movie_id)
                                                               Filter: (note IS NULL)
                                                               Rows Removed by Filter: 2
                                                   ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..959.51 rows=29997 width=8) (actual time=0.023..9.703 rows=35147 loops=1)
                                             ->  Hash  (cost=1.23..1.23 rows=1 width=86) (actual time=0.046..0.046 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.022..0.027 rows=2 loops=1)
                                                         Filter: ((link)::text ~~ '%follow%'::text)
                                                         Rows Removed by Filter: 16
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.58 rows=1 width=21) (actual time=0.004..0.004 rows=0 loops=794)
                                             Index Cond: (id = mc.movie_id)
                                             Filter: (production_year = 1998)
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=190)
                                       Index Cond: (id = mc.company_id)
                                       Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                                       Rows Removed by Filter: 0
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.02 rows=1 width=4) (actual time=0.008..0.011 rows=3 loops=95)
                                 Index Cond: (movie_id = mc.movie_id)
                                 Filter: ((info)::text = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
                                 Rows Removed by Filter: 10
                     ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.37 rows=47 width=8) (actual time=0.002..0.004 rows=8 loops=247)
                           Index Cond: (movie_id = mc.movie_id)
               ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=1919)
                     Index Cond: (id = mk.keyword_id)
                     Filter: ((keyword)::text = 'sequel'::text)
                     Rows Removed by Filter: 1
         ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=247)
               Filter: ((kind)::text = 'production companies'::text)
               Rows Removed by Filter: 1
 Planning Time: 85.688 ms
 Execution Time: 69.227 ms
(63 rows)

SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=2071.28..2071.29 rows=1 width=96) (actual time=119.584..119.584 rows=1 loops=1)
   ->  Nested Loop  (cost=3.52..2071.27 rows=1 width=118) (actual time=10.518..119.156 rows=743 loops=1)
         ->  Nested Loop  (cost=3.10..1948.16 rows=279 width=122) (actual time=5.623..90.380 rows=11620 loops=1)
               Join Filter: (ml.movie_id = mk.movie_id)
               ->  Nested Loop  (cost=2.66..1936.64 rows=6 width=138) (actual time=5.573..81.956 rows=1150 loops=1)
                     ->  Nested Loop  (cost=2.24..1920.67 rows=35 width=123) (actual time=2.697..72.665 rows=2871 loops=1)
                           Join Filter: (ml.movie_id = mi.movie_id)
                           ->  Nested Loop  (cost=1.81..1891.16 rows=14 width=119) (actual time=2.375..45.215 rows=763 loops=1)
                                 Join Filter: (mc.company_type_id = ct.id)
                                 Rows Removed by Join Filter: 101
                                 ->  Nested Loop  (cost=1.81..1889.30 rows=54 width=123) (actual time=2.354..44.788 rows=864 loops=1)
                                       Join Filter: (ml.movie_id = t.id)
                                       ->  Nested Loop  (cost=1.38..1846.11 rows=72 width=102) (actual time=2.313..41.147 rows=864 loops=1)
                                             Join Filter: (lt.id = ml.link_type_id)
                                             Rows Removed by Join Filter: 12659
                                             ->  Merge Join  (cost=1.38..1825.36 rows=1301 width=24) (actual time=0.566..37.059 rows=6843 loops=1)
                                                   Merge Cond: (mc.movie_id = ml.movie_id)
                                                   ->  Nested Loop  (cost=0.85..19990.11 rows=21591 width=16) (actual time=0.493..24.569 rows=3202 loops=1)
                                                         ->  Nested Loop  (cost=0.42..8879.47 rows=8443 width=4) (actual time=0.071..8.233 rows=3688 loops=1)
                                                               Join Filter: (cc.subject_id = cct1.id)
                                                               Rows Removed by Join Filter: 2305
                                                               ->  Nested Loop  (cost=0.42..8371.84 rows=33772 width=8) (actual time=0.052..6.113 rows=5993 loops=1)
                                                                     Join Filter: (cct2.id = cc.status_id)
                                                                     Rows Removed by Join Filter: 432
                                                                     ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..6344.49 rows=135086 width=12) (actual time=0.009..3.434 rows=5993 loops=1)
                                                                     ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=5993)
                                                                           ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.027..0.028 rows=2 loops=1)
                                                                                 Filter: ((kind)::text ~~ 'complete%'::text)
                                                                                 Rows Removed by Filter: 2
                                                               ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=5993)
                                                                     ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=1)
                                                                           Filter: ((kind)::text = 'cast'::text)
                                                                           Rows Removed by Filter: 3
                                                         ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..1.29 rows=3 width=12) (actual time=0.004..0.004 rows=1 loops=3688)
                                                               Index Cond: (movie_id = cc.movie_id)
                                                               Filter: (note IS NULL)
                                                               Rows Removed by Filter: 2
                                                   ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..959.51 rows=29997 width=8) (actual time=0.023..7.484 rows=33905 loops=1)
                                             ->  Materialize  (cost=0.00..1.23 rows=1 width=86) (actual time=0.000..0.000 rows=2 loops=6843)
                                                   ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.027..0.032 rows=2 loops=1)
                                                         Filter: ((link)::text ~~ '%follow%'::text)
                                                         Rows Removed by Filter: 16
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.59 rows=1 width=21) (actual time=0.004..0.004 rows=1 loops=864)
                                             Index Cond: (id = mc.movie_id)
                                             Filter: ((production_year >= 1950) AND (production_year <= 2010))
                                 ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=864)
                                       ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=1)
                                             Filter: ((kind)::text = 'production companies'::text)
                                             Rows Removed by Filter: 3
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.07 rows=3 width=4) (actual time=0.031..0.035 rows=4 loops=763)
                                 Index Cond: (movie_id = t.id)
                                 Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,English}'::text[]))
                                 Rows Removed by Filter: 31
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=2871)
                           Index Cond: (id = mc.company_id)
                           Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.33 rows=47 width=8) (actual time=0.003..0.004 rows=10 loops=1150)
                     Index Cond: (movie_id = t.id)
         ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=11620)
               Index Cond: (id = mk.keyword_id)
               Filter: ((keyword)::text = 'sequel'::text)
               Rows Removed by Filter: 1
 Planning Time: 85.128 ms
 Execution Time: 120.359 ms
(65 rows)

SET
                                                                                                        QUERY PLAN                                                                                                         
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7410.76..7410.77 rows=1 width=96) (actual time=1693.000..1693.001 rows=1 loops=1)
   ->  Nested Loop  (cost=9.32..7410.76 rows=1 width=41) (actual time=11.689..1687.140 rows=4803 loops=1)
         ->  Nested Loop  (cost=8.90..7410.21 rows=1 width=26) (actual time=11.661..1640.871 rows=4955 loops=1)
               Join Filter: (ct.id = mc.company_type_id)
               ->  Nested Loop  (cost=8.90..7409.12 rows=1 width=30) (actual time=11.643..1602.636 rows=4955 loops=1)
                     Join Filter: (t.id = mc.movie_id)
                     ->  Nested Loop  (cost=8.47..7408.54 rows=1 width=42) (actual time=11.587..1576.630 rows=432 loops=1)
                           Join Filter: (it1.id = mi.info_type_id)
                           Rows Removed by Join Filter: 49
                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.015..0.026 rows=1 loops=1)
                                 Filter: ((info)::text = 'countries'::text)
                                 Rows Removed by Filter: 112
                           ->  Nested Loop  (cost=8.47..7406.11 rows=1 width=46) (actual time=11.571..1576.437 rows=481 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=8.04..7404.21 rows=1 width=38) (actual time=11.431..1433.901 rows=473 loops=1)
                                       Join Filter: (cc.subject_id = cct1.id)
                                       Rows Removed by Join Filter: 1570
                                       ->  Nested Loop  (cost=8.04..7403.15 rows=1 width=42) (actual time=11.385..1416.914 rows=2043 loops=1)
                                             Join Filter: (cct2.id = cc.status_id)
                                             Rows Removed by Join Filter: 6987
                                             ->  Nested Loop  (cost=8.04..7402.06 rows=1 width=46) (actual time=11.362..1389.838 rows=3010 loops=1)
                                                   ->  Nested Loop  (cost=7.62..7401.59 rows=1 width=34) (actual time=7.635..1326.890 rows=9301 loops=1)
                                                         Join Filter: (it2.id = mi_idx.info_type_id)
                                                         Rows Removed by Join Filter: 18529
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.019..0.023 rows=1 loops=1)
                                                               Filter: ((info)::text = 'rating'::text)
                                                               Rows Removed by Filter: 112
                                                         ->  Nested Loop  (cost=7.62..7399.04 rows=11 width=38) (actual time=7.612..1321.972 rows=27830 loops=1)
                                                               Join Filter: (t.id = mi_idx.movie_id)
                                                               ->  Nested Loop  (cost=7.19..7387.79 rows=21 width=25) (actual time=7.558..1111.793 rows=11686 loops=1)
                                                                     Join Filter: (kt.id = t.kind_id)
                                                                     Rows Removed by Join Filter: 7484
                                                                     ->  Nested Loop  (cost=7.19..7384.59 rows=74 width=29) (actual time=7.403..1095.951 rows=14771 loops=1)
                                                                           ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=7.357..527.569 rows=37091 loops=1)
                                                                                 ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.485..38.343 rows=3 loops=1)
                                                                                       Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                       Rows Removed by Filter: 134167
                                                                                 ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=5.128..157.372 rows=12364 loops=3)
                                                                                       Recheck Cond: (keyword_id = k.id)
                                                                                       Heap Blocks: exact=26312
                                                                                       ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.821..3.821 rows=12364 loops=3)
                                                                                             Index Cond: (keyword_id = k.id)
                                                                           ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.014..0.014 rows=0 loops=37091)
                                                                                 Index Cond: (id = mk.movie_id)
                                                                                 Filter: (production_year > 2000)
                                                                                 Rows Removed by Filter: 1
                                                                     ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=14771)
                                                                           ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.025..0.027 rows=2 loops=1)
                                                                                 Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                                                 Rows Removed by Filter: 5
                                                               ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=13) (actual time=0.015..0.016 rows=2 loops=11686)
                                                                     Index Cond: (movie_id = mk.movie_id)
                                                                     Filter: ((info)::text < '8.5'::text)
                                                                     Rows Removed by Filter: 0
                                                   ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.005..0.006 rows=0 loops=9301)
                                                         Index Cond: (movie_id = t.id)
                                             ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=3 width=4) (actual time=0.002..0.003 rows=3 loops=3010)
                                                   Filter: ((kind)::text <> 'complete+verified'::text)
                                                   Rows Removed by Filter: 0
                                       ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=2043)
                                             Filter: ((kind)::text = 'crew'::text)
                                             Rows Removed by Filter: 3
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.259..0.300 rows=1 loops=473)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                                       Rows Removed by Filter: 139
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.027..0.055 rows=11 loops=432)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                           Rows Removed by Filter: 10
               ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.002..0.002 rows=1 loops=4955)
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.008..0.008 rows=1 loops=4955)
               Index Cond: (id = mc.company_id)
               Filter: ((country_code)::text <> '[us]'::text)
               Rows Removed by Filter: 0
 Planning Time: 111.048 ms
 Execution Time: 1693.846 ms
(77 rows)

SET
                                                                                                            QUERY PLAN                                                                                                            
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7401.26..7401.27 rows=1 width=96) (actual time=1297.768..1297.768 rows=1 loops=1)
   ->  Nested Loop  (cost=9.32..7401.25 rows=1 width=41) (actual time=17.268..1297.513 rows=148 loops=1)
         ->  Nested Loop  (cost=8.90..7400.70 rows=1 width=26) (actual time=17.215..1294.901 rows=150 loops=1)
               Join Filter: (ct.id = mc.company_type_id)
               ->  Nested Loop  (cost=8.90..7399.61 rows=1 width=30) (actual time=17.195..1293.700 rows=150 loops=1)
                     Join Filter: (t.id = mc.movie_id)
                     ->  Nested Loop  (cost=8.47..7399.03 rows=1 width=42) (actual time=17.133..1292.469 rows=13 loops=1)
                           Join Filter: (it1.id = mi.info_type_id)
                           Rows Removed by Join Filter: 7
                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.014..0.026 rows=1 loops=1)
                                 Filter: ((info)::text = 'countries'::text)
                                 Rows Removed by Filter: 112
                           ->  Nested Loop  (cost=8.47..7396.60 rows=1 width=46) (actual time=17.116..1292.428 rows=20 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=8.04..7395.03 rows=1 width=38) (actual time=12.444..1250.143 rows=179 loops=1)
                                       Join Filter: (cct2.id = cc.status_id)
                                       Rows Removed by Join Filter: 394
                                       ->  Nested Loop  (cost=8.04..7393.94 rows=1 width=42) (actual time=12.433..1248.390 rows=191 loops=1)
                                             Join Filter: (cct1.id = cc.subject_id)
                                             Rows Removed by Join Filter: 689
                                             ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.022..0.023 rows=1 loops=1)
                                                   Filter: ((kind)::text = 'crew'::text)
                                                   Rows Removed by Filter: 3
                                             ->  Nested Loop  (cost=8.04..7392.88 rows=1 width=46) (actual time=12.391..1248.089 rows=880 loops=1)
                                                   ->  Nested Loop  (cost=7.62..7392.40 rows=1 width=34) (actual time=8.026..1225.947 rows=2312 loops=1)
                                                         Join Filter: (kt.id = t.kind_id)
                                                         Rows Removed by Join Filter: 1695
                                                         ->  Nested Loop  (cost=7.62..7391.29 rows=1 width=38) (actual time=7.782..1199.976 rows=2835 loops=1)
                                                               ->  Nested Loop  (cost=7.19..7390.80 rows=1 width=13) (actual time=7.741..984.819 rows=11708 loops=1)
                                                                     Join Filter: (it2.id = mi_idx.info_type_id)
                                                                     Rows Removed by Join Filter: 5912
                                                                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.019..0.023 rows=1 loops=1)
                                                                           Filter: ((info)::text = 'rating'::text)
                                                                           Rows Removed by Filter: 112
                                                                     ->  Nested Loop  (cost=7.19..7387.28 rows=89 width=17) (actual time=7.721..979.573 rows=17620 loops=1)
                                                                           ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=7.664..536.062 rows=37091 loops=1)
                                                                                 ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.947..38.620 rows=3 loops=1)
                                                                                       Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                       Rows Removed by Filter: 134167
                                                                                 ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=4.969..160.630 rows=12364 loops=3)
                                                                                       Recheck Cond: (keyword_id = k.id)
                                                                                       Heap Blocks: exact=26312
                                                                                       ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.685..3.685 rows=12364 loops=3)
                                                                                             Index Cond: (keyword_id = k.id)
                                                                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=13) (actual time=0.011..0.011 rows=0 loops=37091)
                                                                                 Index Cond: (movie_id = mk.movie_id)
                                                                                 Filter: ((info)::text > '6.5'::text)
                                                                                 Rows Removed by Filter: 2
                                                               ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.018..0.018 rows=0 loops=11708)
                                                                     Index Cond: (id = mk.movie_id)
                                                                     Filter: (production_year > 2005)
                                                                     Rows Removed by Filter: 1
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.003..0.003 rows=1 loops=2835)
                                                               Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                               Rows Removed by Filter: 2
                                                   ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.008..0.008 rows=0 loops=2312)
                                                         Index Cond: (movie_id = t.id)
                                       ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=3 width=4) (actual time=0.002..0.003 rows=3 loops=191)
                                             Filter: ((kind)::text <> 'complete+verified'::text)
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.56 rows=1 width=8) (actual time=0.226..0.235 rows=0 loops=179)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
                                       Rows Removed by Filter: 130
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.048..0.088 rows=12 loops=13)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                           Rows Removed by Filter: 17
               ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.002..0.002 rows=1 loops=150)
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.016..0.016 rows=1 loops=150)
               Index Cond: (id = mc.company_id)
               Filter: ((country_code)::text <> '[us]'::text)
               Rows Removed by Filter: 0
 Planning Time: 111.182 ms
 Execution Time: 1298.601 ms
(75 rows)

SET
                                                                                                        QUERY PLAN                                                                                                         
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7408.04..7408.05 rows=1 width=96) (actual time=4435.565..4435.565 rows=1 loops=1)
   ->  Nested Loop  (cost=9.32..7408.03 rows=1 width=41) (actual time=12.514..4424.453 rows=8373 loops=1)
         Join Filter: (mc.company_type_id = ct.id)
         ->  Nested Loop  (cost=9.32..7406.94 rows=1 width=45) (actual time=12.495..4359.821 rows=8373 loops=1)
               Join Filter: (it1.id = mi.info_type_id)
               Rows Removed by Join Filter: 1116
               ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.014..0.026 rows=1 loops=1)
                     Filter: ((info)::text = 'countries'::text)
                     Rows Removed by Filter: 112
               ->  Nested Loop  (cost=9.32..7404.51 rows=1 width=49) (actual time=12.478..4357.451 rows=9489 loops=1)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=8.88..7402.62 rows=1 width=65) (actual time=12.331..3425.766 rows=8156 loops=1)
                           Join Filter: (cc.subject_id = cct1.id)
                           Rows Removed by Join Filter: 1453
                           ->  Nested Loop  (cost=8.88..7401.55 rows=1 width=69) (actual time=12.320..3348.958 rows=9609 loops=1)
                                 Join Filter: (cct2.id = cc.status_id)
                                 Rows Removed by Join Filter: 5617
                                 ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.022..0.024 rows=1 loops=1)
                                       Filter: ((kind)::text = 'complete'::text)
                                       Rows Removed by Filter: 3
                                 ->  Nested Loop  (cost=8.88..7400.49 rows=1 width=73) (actual time=12.296..3345.021 rows=15226 loops=1)
                                       ->  Nested Loop  (cost=8.46..7400.01 rows=1 width=61) (actual time=12.253..3208.967 rows=23425 loops=1)
                                             Join Filter: (mi_idx.info_type_id = it2.id)
                                             Rows Removed by Join Filter: 46773
                                             ->  Nested Loop  (cost=8.46..7397.59 rows=1 width=65) (actual time=11.052..1799.660 rows=70198 loops=1)
                                                   Join Filter: (t.id = mi_idx.movie_id)
                                                   ->  Nested Loop  (cost=8.04..7397.05 rows=1 width=52) (actual time=11.005..1585.835 rows=23902 loops=1)
                                                         ->  Nested Loop  (cost=7.62..7396.50 rows=1 width=37) (actual time=10.964..1421.035 rows=25853 loops=1)
                                                               Join Filter: (t.id = mc.movie_id)
                                                               ->  Nested Loop  (cost=7.19..7387.25 rows=16 width=25) (actual time=7.920..1127.371 rows=8073 loops=1)
                                                                     Join Filter: (t.kind_id = kt.id)
                                                                     Rows Removed by Join Filter: 4332
                                                                     ->  Nested Loop  (cost=7.19..7384.59 rows=55 width=29) (actual time=7.772..1116.858 rows=9739 loops=1)
                                                                           ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=7.728..537.268 rows=37091 loops=1)
                                                                                 ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.903..38.262 rows=3 loops=1)
                                                                                       Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                       Rows Removed by Filter: 134167
                                                                                 ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=5.057..160.561 rows=12364 loops=3)
                                                                                       Recheck Cond: (keyword_id = k.id)
                                                                                       Heap Blocks: exact=26312
                                                                                       ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.763..3.763 rows=12364 loops=3)
                                                                                             Index Cond: (keyword_id = k.id)
                                                                           ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.014..0.014 rows=0 loops=37091)
                                                                                 Index Cond: (id = mk.movie_id)
                                                                                 Filter: (production_year > 2005)
                                                                                 Rows Removed by Filter: 1
                                                                     ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=9739)
                                                                           ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.010..0.013 rows=2 loops=1)
                                                                                 Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                                                 Rows Removed by Filter: 5
                                                               ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.025..0.034 rows=3 loops=8073)
                                                                     Index Cond: (movie_id = mk.movie_id)
                                                                     Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                                                                     Rows Removed by Filter: 7
                                                         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.005..0.005 rows=1 loops=25853)
                                                               Index Cond: (id = mc.company_id)
                                                               Filter: ((country_code)::text <> '[us]'::text)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=13) (actual time=0.005..0.007 rows=3 loops=23902)
                                                         Index Cond: (movie_id = mk.movie_id)
                                                         Filter: ((info)::text < '8.5'::text)
                                                         Rows Removed by Filter: 0
                                             ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.014..0.015 rows=1 loops=70198)
                                                   Filter: ((info)::text = 'rating'::text)
                                                   Rows Removed by Filter: 108
                                       ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.004..0.005 rows=1 loops=23425)
                                             Index Cond: (movie_id = t.id)
                           ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=9609)
                                 Filter: ((kind)::text = 'cast'::text)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.094..0.113 rows=1 loops=8156)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                           Rows Removed by Filter: 206
         ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.002..0.002 rows=1 loops=8373)
 Planning Time: 111.444 ms
 Execution Time: 4436.435 ms
(77 rows)

SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3946.87..3946.88 rows=1 width=96) (actual time=62.335..62.336 rows=1 loops=1)
   ->  Nested Loop  (cost=11.17..3946.87 rows=1 width=48) (actual time=19.172..61.816 rows=1620 loops=1)
         Join Filter: (it3.id = pi.info_type_id)
         Rows Removed by Join Filter: 3270
         ->  Seq Scan on info_type it3  (cost=0.00..2.41 rows=1 width=4) (actual time=0.017..0.027 rows=1 loops=1)
               Filter: ((info)::text = 'trivia'::text)
               Rows Removed by Filter: 112
         ->  Nested Loop  (cost=11.17..3944.44 rows=1 width=52) (actual time=19.115..61.296 rows=4890 loops=1)
               Join Filter: (n.id = pi.person_id)
               ->  Nested Loop  (cost=10.74..3924.23 rows=1 width=60) (actual time=19.028..58.910 rows=30 loops=1)
                     Join Filter: (it.id = mi.info_type_id)
                     ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.011..0.022 rows=1 loops=1)
                           Filter: ((info)::text = 'release dates'::text)
                           Rows Removed by Filter: 112
                     ->  Nested Loop  (cost=10.74..3921.81 rows=1 width=64) (actual time=19.016..58.878 rows=30 loops=1)
                           Join Filter: (t.id = mi.movie_id)
                           ->  Nested Loop  (cost=10.31..3878.76 rows=1 width=80) (actual time=18.842..56.045 rows=15 loops=1)
                                 Join Filter: (cct2.id = cc.status_id)
                                 ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.023..0.023 rows=1 loops=1)
                                       Filter: ((kind)::text = 'complete+verified'::text)
                                       Rows Removed by Filter: 3
                                 ->  Nested Loop  (cost=10.31..3877.70 rows=1 width=84) (actual time=18.817..56.015 rows=15 loops=1)
                                       Join Filter: (cct1.id = cc.subject_id)
                                       ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.007..0.009 rows=1 loops=1)
                                             Filter: ((kind)::text = 'cast'::text)
                                             Rows Removed by Filter: 3
                                       ->  Nested Loop  (cost=10.31..3876.64 rows=1 width=88) (actual time=18.808..56.000 rows=15 loops=1)
                                             Join Filter: (t.id = cc.movie_id)
                                             ->  Nested Loop  (cost=9.89..3873.84 rows=1 width=76) (actual time=18.764..55.908 rows=15 loops=1)
                                                   ->  Nested Loop  (cost=9.46..3871.53 rows=1 width=57) (actual time=18.689..55.769 rows=15 loops=1)
                                                         ->  Nested Loop  (cost=9.04..3869.51 rows=1 width=61) (actual time=18.641..55.130 rows=66 loops=1)
                                                               ->  Nested Loop  (cost=8.61..3865.49 rows=1 width=49) (actual time=18.561..53.840 rows=352 loops=1)
                                                                     Join Filter: (rt.id = ci.role_id)
                                                                     Rows Removed by Join Filter: 1100
                                                                     ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.024..0.027 rows=1 loops=1)
                                                                           Filter: ((role)::text = 'actress'::text)
                                                                           Rows Removed by Filter: 11
                                                                     ->  Nested Loop  (cost=8.61..3864.32 rows=2 width=53) (actual time=17.523..53.625 rows=1452 loops=1)
                                                                           ->  Nested Loop  (cost=8.18..3861.40 rows=1 width=49) (actual time=17.369..49.869 rows=836 loops=1)
                                                                                 Join Filter: (t.id = ci.movie_id)
                                                                                 ->  Nested Loop  (cost=7.62..3813.81 rows=1 width=33) (actual time=17.288..42.888 rows=22 loops=1)
                                                                                       Join Filter: (t.id = mc.movie_id)
                                                                                       ->  Nested Loop  (cost=7.19..3808.95 rows=1 width=25) (actual time=17.185..42.747 rows=1 loops=1)
                                                                                             ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=0.331..29.245 rows=414 loops=1)
                                                                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.106..21.079 rows=1 loops=1)
                                                                                                         Filter: ((keyword)::text = 'computer-animation'::text)
                                                                                                         Rows Removed by Filter: 134169
                                                                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=0.217..7.939 rows=414 loops=1)
                                                                                                         Recheck Cond: (keyword_id = k.id)
                                                                                                         Heap Blocks: exact=358
                                                                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.147..0.147 rows=414 loops=1)
                                                                                                               Index Cond: (keyword_id = k.id)
                                                                                             ->  Index Scan using title_pkey on title t  (cost=0.43..2.12 rows=1 width=21) (actual time=0.031..0.031 rows=0 loops=414)
                                                                                                   Index Cond: (id = mk.movie_id)
                                                                                                   Filter: ((production_year >= 2000) AND (production_year <= 2010) AND ((title)::text = 'Shrek 2'::text))
                                                                                                   Rows Removed by Filter: 1
                                                                                       ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..4.80 rows=5 width=8) (actual time=0.100..0.129 rows=22 loops=1)
                                                                                             Index Cond: (movie_id = mk.movie_id)
                                                                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..47.58 rows=1 width=16) (actual time=0.007..0.307 rows=38 loops=22)
                                                                                       Index Cond: (movie_id = mk.movie_id)
                                                                                       Filter: ((note)::text = ANY ('{(voice),"(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                                       Rows Removed by Filter: 191
                                                                           ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.90 rows=2 width=4) (actual time=0.003..0.004 rows=2 loops=836)
                                                                                 Index Cond: (person_id = ci.person_id)
                                                                                 Heap Fetches: 1452
                                                               ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..2.22 rows=1 width=20) (actual time=0.003..0.003 rows=0 loops=352)
                                                                     Index Cond: (id = ci.person_role_id)
                                                                     Filter: ((name)::text = 'Queen'::text)
                                                                     Rows Removed by Filter: 1
                                                         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..2.03 rows=1 width=4) (actual time=0.009..0.009 rows=0 loops=66)
                                                               Index Cond: (id = mc.company_id)
                                                               Filter: ((country_code)::text = '[us]'::text)
                                                               Rows Removed by Filter: 1
                                                   ->  Index Scan using name_pkey on name n  (cost=0.43..2.30 rows=1 width=19) (actual time=0.008..0.008 rows=1 loops=15)
                                                         Index Cond: (id = ci.person_id)
                                                         Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                             ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..2.78 rows=2 width=12) (actual time=0.005..0.005 rows=1 loops=15)
                                                   Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..43.02 rows=2 width=8) (actual time=0.026..0.188 rows=2 loops=15)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%200%'::text) OR ((info)::text ~~ 'USA:%200%'::text)))
                                 Rows Removed by Filter: 455
               ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..19.88 rows=26 width=8) (actual time=0.005..0.043 rows=163 loops=30)
                     Index Cond: (person_id = an.person_id)
 Planning Time: 146.022 ms
 Execution Time: 63.529 ms
(86 rows)

SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3950.13..3950.14 rows=1 width=96) (actual time=35.360..35.360 rows=1 loops=1)
   ->  Nested Loop  (cost=11.17..3950.12 rows=1 width=48) (actual time=8.569..35.337 rows=15 loops=1)
         Join Filter: (ci.person_id = n.id)
         ->  Nested Loop  (cost=10.74..3947.92 rows=1 width=45) (actual time=8.537..35.257 rows=15 loops=1)
               Join Filter: (it3.id = pi.info_type_id)
               Rows Removed by Join Filter: 2430
               ->  Seq Scan on info_type it3  (cost=0.00..2.41 rows=1 width=4) (actual time=0.018..0.028 rows=1 loops=1)
                     Filter: ((info)::text = 'height'::text)
                     Rows Removed by Filter: 112
               ->  Nested Loop  (cost=10.74..3945.19 rows=26 width=49) (actual time=8.430..35.013 rows=2445 loops=1)
                     ->  Nested Loop  (cost=10.31..3925.03 rows=1 width=41) (actual time=8.389..33.980 rows=15 loops=1)
                           ->  Nested Loop  (cost=9.89..3923.01 rows=1 width=45) (actual time=8.343..33.464 rows=66 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=9.46..3918.14 rows=1 width=61) (actual time=8.299..33.355 rows=3 loops=1)
                                       Join Filter: (mi.info_type_id = it.id)
                                       ->  Nested Loop  (cost=9.46..3915.72 rows=1 width=65) (actual time=8.286..33.320 rows=3 loops=1)
                                             Join Filter: (cc.status_id = cct2.id)
                                             ->  Nested Loop  (cost=9.46..3914.65 rows=1 width=69) (actual time=8.275..33.291 rows=3 loops=1)
                                                   Join Filter: (cct1.id = cc.subject_id)
                                                   ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.023..0.024 rows=1 loops=1)
                                                         Filter: ((kind)::text = 'cast'::text)
                                                         Rows Removed by Filter: 3
                                                   ->  Nested Loop  (cost=9.46..3913.59 rows=1 width=73) (actual time=8.251..33.264 rows=3 loops=1)
                                                         Join Filter: (t.id = cc.movie_id)
                                                         ->  Nested Loop  (cost=9.04..3907.99 rows=2 width=61) (actual time=8.211..33.215 rows=3 loops=1)
                                                               ->  Nested Loop  (cost=8.62..3905.08 rows=1 width=57) (actual time=8.163..33.151 rows=1 loops=1)
                                                                     Join Filter: (t.id = mi.movie_id)
                                                                     ->  Nested Loop  (cost=8.18..3862.13 rows=1 width=49) (actual time=8.093..32.826 rows=1 loops=1)
                                                                           ->  Nested Loop  (cost=7.75..3858.12 rows=1 width=37) (actual time=8.042..32.355 rows=11 loops=1)
                                                                                 Join Filter: (rt.id = ci.role_id)
                                                                                 Rows Removed by Join Filter: 27
                                                                                 ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.010..0.013 rows=1 loops=1)
                                                                                       Filter: ((role)::text = 'actress'::text)
                                                                                       Rows Removed by Filter: 11
                                                                                 ->  Nested Loop  (cost=7.75..3856.96 rows=1 width=41) (actual time=7.824..32.332 rows=38 loops=1)
                                                                                       Join Filter: (t.id = ci.movie_id)
                                                                                       ->  Nested Loop  (cost=7.19..3809.37 rows=1 width=25) (actual time=7.779..31.063 rows=1 loops=1)
                                                                                             ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=0.254..23.239 rows=414 loops=1)
                                                                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.054..20.626 rows=1 loops=1)
                                                                                                         Filter: ((keyword)::text = 'computer-animation'::text)
                                                                                                         Rows Removed by Filter: 134169
                                                                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=0.193..2.438 rows=414 loops=1)
                                                                                                         Recheck Cond: (keyword_id = k.id)
                                                                                                         Heap Blocks: exact=358
                                                                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.120..0.121 rows=414 loops=1)
                                                                                                               Index Cond: (keyword_id = k.id)
                                                                                             ->  Index Scan using title_pkey on title t  (cost=0.43..2.12 rows=1 width=21) (actual time=0.018..0.018 rows=0 loops=414)
                                                                                                   Index Cond: (id = mk.movie_id)
                                                                                                   Filter: ((production_year >= 2000) AND (production_year <= 2005) AND ((title)::text = 'Shrek 2'::text))
                                                                                                   Rows Removed by Filter: 1
                                                                                       ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..47.58 rows=1 width=16) (actual time=0.042..1.247 rows=38 loops=1)
                                                                                             Index Cond: (movie_id = mk.movie_id)
                                                                                             Filter: ((note)::text = ANY ('{(voice),"(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                                             Rows Removed by Filter: 191
                                                                           ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..2.22 rows=1 width=20) (actual time=0.042..0.042 rows=0 loops=11)
                                                                                 Index Cond: (id = ci.person_role_id)
                                                                                 Filter: ((name)::text = 'Queen'::text)
                                                                                 Rows Removed by Filter: 1
                                                                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..42.92 rows=2 width=8) (actual time=0.068..0.321 rows=1 loops=1)
                                                                           Index Cond: (movie_id = mk.movie_id)
                                                                           Filter: ((info)::text ~~ 'USA:%200%'::text)
                                                                           Rows Removed by Filter: 456
                                                               ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.90 rows=2 width=4) (actual time=0.046..0.060 rows=3 loops=1)
                                                                     Index Cond: (person_id = ci.person_id)
                                                                     Heap Fetches: 3
                                                         ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..2.78 rows=2 width=12) (actual time=0.014..0.014 rows=1 loops=3)
                                                               Index Cond: (movie_id = mk.movie_id)
                                             ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'complete+verified'::text)
                                                   Rows Removed by Filter: 3
                                       ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=3)
                                             Filter: ((info)::text = 'release dates'::text)
                                             Rows Removed by Filter: 15
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..4.80 rows=5 width=8) (actual time=0.017..0.027 rows=22 loops=3)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..2.03 rows=1 width=4) (actual time=0.007..0.007 rows=0 loops=66)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..19.89 rows=26 width=8) (actual time=0.005..0.042 rows=163 loops=15)
                           Index Cond: (person_id = ci.person_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..2.19 rows=1 width=19) (actual time=0.004..0.004 rows=1 loops=15)
               Index Cond: (id = pi.person_id)
               Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
 Planning Time: 145.522 ms
 Execution Time: 36.545 ms
(86 rows)

SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=5517.26..5517.27 rows=1 width=96) (actual time=5791.249..5791.249 rows=1 loops=1)
   ->  Nested Loop  (cost=11.17..5517.25 rows=1 width=48) (actual time=849.771..5773.302 rows=16308 loops=1)
         Join Filter: (pi.info_type_id = it3.id)
         Rows Removed by Join Filter: 51519
         ->  Nested Loop  (cost=11.17..5514.83 rows=1 width=52) (actual time=300.583..4527.976 rows=67827 loops=1)
               Join Filter: (cc.subject_id = cct1.id)
               ->  Nested Loop  (cost=11.17..5513.77 rows=1 width=56) (actual time=300.571..3998.456 rows=67827 loops=1)
                     Join Filter: (ci.role_id = rt.id)
                     ->  Nested Loop  (cost=11.17..5512.60 rows=1 width=60) (actual time=300.552..3434.546 rows=67827 loops=1)
                           Join Filter: (it.id = mi.info_type_id)
                           ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.017..0.028 rows=1 loops=1)
                                 Filter: ((info)::text = 'release dates'::text)
                                 Rows Removed by Filter: 112
                           ->  Nested Loop  (cost=11.17..5510.18 rows=1 width=64) (actual time=300.532..3418.501 rows=67827 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=10.74..5467.13 rows=1 width=80) (actual time=300.374..1095.805 rows=23424 loops=1)
                                       Join Filter: (mc.movie_id = t.id)
                                       ->  Nested Loop  (cost=10.31..5465.00 rows=1 width=59) (actual time=32.129..1011.954 rows=27549 loops=1)
                                             Join Filter: (cct2.id = cc.status_id)
                                             Rows Removed by Join Filter: 19742
                                             ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.023..0.024 rows=1 loops=1)
                                                   Filter: ((kind)::text = 'complete+verified'::text)
                                                   Rows Removed by Filter: 3
                                             ->  Nested Loop  (cost=10.31..5463.94 rows=1 width=63) (actual time=32.103..1002.484 rows=47291 loops=1)
                                                   ->  Nested Loop  (cost=9.89..5461.14 rows=1 width=51) (actual time=32.039..852.524 rows=56941 loops=1)
                                                         ->  Nested Loop  (cost=9.46..5458.93 rows=1 width=39) (actual time=31.990..665.263 rows=58777 loops=1)
                                                               Join Filter: (n.id = an.person_id)
                                                               ->  Nested Loop  (cost=9.03..5456.03 rows=1 width=51) (actual time=31.891..579.211 rows=15702 loops=1)
                                                                     ->  Nested Loop  (cost=8.61..5449.96 rows=3 width=55) (actual time=31.724..371.319 rows=75939 loops=1)
                                                                           Join Filter: (ci.movie_id = mc.movie_id)
                                                                           ->  Nested Loop  (cost=8.18..5445.09 rows=1 width=47) (actual time=31.638..316.536 rows=2996 loops=1)
                                                                                 Join Filter: (n.id = pi.person_id)
                                                                                 ->  Nested Loop  (cost=7.75..5424.88 rows=1 width=39) (actual time=31.556..312.506 rows=45 loops=1)
                                                                                       ->  Nested Loop  (cost=7.32..5355.96 rows=30 width=20) (actual time=0.346..224.729 rows=4395 loops=1)
                                                                                             ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=0.254..27.602 rows=414 loops=1)
                                                                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.057..23.015 rows=1 loops=1)
                                                                                                         Filter: ((keyword)::text = 'computer-animation'::text)
                                                                                                         Rows Removed by Filter: 134169
                                                                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=0.190..4.372 rows=414 loops=1)
                                                                                                         Recheck Cond: (keyword_id = k.id)
                                                                                                         Heap Blocks: exact=358
                                                                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.118..0.118 rows=414 loops=1)
                                                                                                               Index Cond: (keyword_id = k.id)
                                                                                             ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..47.62 rows=1 width=16) (actual time=0.121..0.470 rows=11 loops=414)
                                                                                                   Index Cond: (movie_id = mk.movie_id)
                                                                                                   Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                                                   Rows Removed by Filter: 33
                                                                                       ->  Index Scan using name_pkey on name n  (cost=0.43..2.30 rows=1 width=19) (actual time=0.019..0.019 rows=0 loops=4395)
                                                                                             Index Cond: (id = ci.person_id)
                                                                                             Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                                                                             Rows Removed by Filter: 1
                                                                                 ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..19.89 rows=26 width=8) (actual time=0.027..0.062 rows=67 loops=45)
                                                                                       Index Cond: (person_id = ci.person_id)
                                                                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..4.80 rows=5 width=8) (actual time=0.004..0.010 rows=25 loops=2996)
                                                                                 Index Cond: (movie_id = mk.movie_id)
                                                                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..2.03 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=75939)
                                                                           Index Cond: (id = mc.company_id)
                                                                           Filter: ((country_code)::text = '[us]'::text)
                                                                           Rows Removed by Filter: 1
                                                               ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.87 rows=2 width=4) (actual time=0.002..0.004 rows=4 loops=15702)
                                                                     Index Cond: (person_id = pi.person_id)
                                                                     Heap Fetches: 58777
                                                         ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..2.21 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=58777)
                                                               Index Cond: (id = ci.person_role_id)
                                                   ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..2.78 rows=2 width=12) (actual time=0.002..0.002 rows=1 loops=56941)
                                                         Index Cond: (movie_id = mc.movie_id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..2.12 rows=1 width=21) (actual time=0.002..0.002 rows=1 loops=27549)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..43.02 rows=2 width=8) (actual time=0.015..0.098 rows=3 loops=23424)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%200%'::text) OR ((info)::text ~~ 'USA:%200%'::text)))
                                       Rows Removed by Filter: 298
                     ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=67827)
                           Filter: ((role)::text = 'actress'::text)
                           Rows Removed by Filter: 1
               ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=67827)
                     Filter: ((kind)::text = 'cast'::text)
         ->  Seq Scan on info_type it3  (cost=0.00..2.41 rows=1 width=4) (actual time=0.005..0.013 rows=1 loops=67827)
               Filter: ((info)::text = 'trivia'::text)
               Rows Removed by Filter: 89
 Planning Time: 146.763 ms
 Execution Time: 5792.316 ms
(84 rows)

SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3839.34..3839.35 rows=1 width=32) (actual time=1348.120..1348.120 rows=1 loops=1)
   ->  Nested Loop  (cost=8.04..3839.32 rows=7 width=17) (actual time=12.481..1342.422 rows=7834 loops=1)
         Join Filter: (mc.movie_id = t.id)
         ->  Nested Loop  (cost=7.61..3835.84 rows=7 width=8) (actual time=12.436..1253.331 rows=7834 loops=1)
               ->  Nested Loop  (cost=7.19..3756.52 rows=178 width=12) (actual time=10.685..700.497 rows=148552 loops=1)
                     ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.586..262.037 rows=41840 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.872..26.036 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'character-name-in-title'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.706..225.056 rows=41840 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=11541
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.980..7.980 rows=41840 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.007..0.009 rows=4 loops=41840)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=148552)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text = '[de]'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.010..0.010 rows=1 loops=7834)
               Index Cond: (id = mk.movie_id)
 Planning Time: 4.269 ms
 Execution Time: 1348.665 ms
(24 rows)

SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3836.84..3836.85 rows=1 width=32) (actual time=1293.796..1293.796 rows=1 loops=1)
   ->  Nested Loop  (cost=8.04..3836.83 rows=2 width=17) (actual time=16.743..1290.307 rows=5228 loops=1)
         Join Filter: (mc.movie_id = t.id)
         ->  Nested Loop  (cost=7.61..3835.84 rows=2 width=8) (actual time=16.702..1231.176 rows=5228 loops=1)
               ->  Nested Loop  (cost=7.19..3756.52 rows=178 width=12) (actual time=10.998..691.725 rows=148552 loops=1)
                     ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.910..260.389 rows=41840 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.316..26.791 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'character-name-in-title'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.585..222.522 rows=41840 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=11541
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.865..7.865 rows=41840 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.006..0.009 rows=4 loops=41840)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=148552)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text = '[nl]'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.010..0.010 rows=1 loops=5228)
               Index Cond: (id = mk.movie_id)
 Planning Time: 5.362 ms
 Execution Time: 1294.285 ms
(24 rows)

SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3836.34..3836.35 rows=1 width=32) (actual time=1217.332..1217.332 rows=1 loops=1)
   ->  Nested Loop  (cost=8.04..3836.34 rows=1 width=17) (actual time=1217.324..1217.324 rows=0 loops=1)
         Join Filter: (mc.movie_id = t.id)
         ->  Nested Loop  (cost=7.61..3835.84 rows=1 width=8) (actual time=1217.323..1217.323 rows=0 loops=1)
               ->  Nested Loop  (cost=7.19..3756.52 rows=178 width=12) (actual time=11.045..695.123 rows=148552 loops=1)
                     ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.959..262.089 rows=41840 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.342..26.662 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'character-name-in-title'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.609..224.209 rows=41840 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=11541
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.888..7.889 rows=41840 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.007..0.009 rows=4 loops=41840)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=148552)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text = '[sm]'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (never executed)
               Index Cond: (id = mk.movie_id)
 Planning Time: 5.330 ms
 Execution Time: 1217.811 ms
(24 rows)

SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3852.93..3852.94 rows=1 width=32) (actual time=1770.807..1770.807 rows=1 loops=1)
   ->  Nested Loop  (cost=8.04..3852.77 rows=64 width=17) (actual time=11.215..1740.085 rows=68316 loops=1)
         ->  Nested Loop  (cost=7.62..3773.45 rows=178 width=21) (actual time=11.072..1184.285 rows=148552 loops=1)
               Join Filter: (t.id = mc.movie_id)
               ->  Nested Loop  (cost=7.19..3752.95 rows=34 width=25) (actual time=10.939..711.585 rows=41840 loops=1)
                     ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.912..257.896 rows=41840 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.343..26.587 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'character-name-in-title'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.561..219.345 rows=41840 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=11541
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.847..7.847 rows=41840 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.010..0.010 rows=1 loops=41840)
                           Index Cond: (id = mk.movie_id)
               ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.007..0.009 rows=4 loops=41840)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=148552)
               Index Cond: (id = mc.company_id)
               Filter: ((country_code)::text = '[us]'::text)
               Rows Removed by Filter: 1
 Planning Time: 5.264 ms
 Execution Time: 1771.280 ms
(24 rows)

SET
                                                                                                         QUERY PLAN                                                                                                         
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8702.65..8702.66 rows=1 width=128) (actual time=12784.409..12784.409 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.71..8702.64 rows=1 width=80) (actual time=91.967..12781.376 rows=757 loops=1)
         ->  Nested Loop  (cost=1012.58..8702.48 rows=1 width=84) (actual time=91.939..12779.540 rows=757 loops=1)
               ->  Nested Loop  (cost=1012.45..8702.31 rows=1 width=88) (actual time=82.919..12772.763 rows=2492 loops=1)
                     ->  Nested Loop  (cost=1012.31..8702.12 rows=1 width=92) (actual time=82.881..12761.669 rows=2492 loops=1)
                           Join Filter: (mi.movie_id = t.id)
                           ->  Nested Loop  (cost=1011.88..8701.29 rows=1 width=95) (actual time=33.234..12619.101 rows=9940 loops=1)
                                 ->  Nested Loop  (cost=1011.45..8700.26 rows=1 width=84) (actual time=30.972..12330.261 rows=15093 loops=1)
                                       Join Filter: (mi.movie_id = ci.movie_id)
                                       ->  Gather  (cost=1010.88..8671.17 rows=1 width=76) (actual time=13.990..1700.818 rows=19944 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Nested Loop  (cost=10.88..7671.07 rows=1 width=76) (actual time=10.764..2796.643 rows=6648 loops=3)
                                                   Join Filter: (mi_idx.movie_id = mi.movie_id)
                                                   ->  Nested Loop  (cost=10.45..7653.03 rows=1 width=25) (actual time=8.335..922.825 rows=11782 loops=3)
                                                         ->  Hash Join  (cost=10.03..7651.37 rows=2 width=13) (actual time=7.530..801.882 rows=21234 loops=3)
                                                               Hash Cond: (mi_idx.info_type_id = it2.id)
                                                               ->  Nested Loop  (cost=7.61..7648.12 rows=298 width=17) (actual time=7.279..773.304 rows=63896 loops=3)
                                                                     ->  Nested Loop  (cost=7.18..7568.64 rows=98 width=4) (actual time=7.205..417.215 rows=25571 loops=3)
                                                                           ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4353.41 rows=3 width=4) (actual time=0.618..34.517 rows=2 loops=3)
                                                                                 Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                                 Rows Removed by Filter: 44721
                                                                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1068.74 rows=300 width=8) (actual time=5.004..159.516 rows=10959 loops=7)
                                                                                 Recheck Cond: (keyword_id = k.id)
                                                                                 Heap Blocks: exact=12389
                                                                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.878..3.878 rows=10959 loops=7)
                                                                                       Index Cond: (keyword_id = k.id)
                                                                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.78 rows=3 width=13) (actual time=0.011..0.012 rows=2 loops=76714)
                                                                           Index Cond: (movie_id = mk.movie_id)
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.083..0.083 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.053..0.056 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'votes'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.81 rows=2 width=12) (actual time=0.004..0.005 rows=1 loops=63701)
                                                               Index Cond: (movie_id = mi_idx.movie_id)
                                                   ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..18.03 rows=1 width=51) (actual time=0.155..0.158 rows=1 loops=35346)
                                                         Index Cond: (movie_id = mk.movie_id)
                                                         Filter: ((info)::text = ANY ('{Horror,Thriller}'::text[]))
                                                         Rows Removed by Filter: 101
                                       ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..29.07 rows=1 width=8) (actual time=0.397..0.532 rows=1 loops=19944)
                                             Index Cond: (movie_id = mk.movie_id)
                                             Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                             Rows Removed by Filter: 73
                                 ->  Index Scan using name_pkey on name n  (cost=0.43..1.04 rows=1 width=19) (actual time=0.018..0.018 rows=1 loops=15093)
                                       Index Cond: (id = ci.person_id)
                                       Filter: ((gender)::text = 'm'::text)
                                       Rows Removed by Filter: 0
                           ->  Index Scan using title_pkey on title t  (cost=0.43..0.82 rows=1 width=21) (actual time=0.013..0.013 rows=0 loops=9940)
                                 Index Cond: (id = mk.movie_id)
                                 Filter: (production_year > 2000)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=2492)
                           Index Cond: (id = mi.info_type_id)
                           Filter: ((info)::text = 'genres'::text)
               ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=2492)
                     Index Cond: (id = cc.status_id)
                     Filter: ((kind)::text = 'complete+verified'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=757)
               Index Cond: (id = cc.subject_id)
               Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
 Planning Time: 93.548 ms
 Execution Time: 12785.671 ms
(64 rows)

SET
                                                                                                           QUERY PLAN                                                                                                            
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8700.30..8700.31 rows=1 width=128) (actual time=1102.812..1102.812 rows=1 loops=1)
   ->  Nested Loop  (cost=1010.43..8700.29 rows=1 width=80) (actual time=197.981..1102.743 rows=28 loops=1)
         ->  Nested Loop  (cost=1010.30..8700.12 rows=1 width=84) (actual time=197.956..1102.657 rows=28 loops=1)
               ->  Nested Loop  (cost=1010.17..8699.95 rows=1 width=88) (actual time=197.927..1102.409 rows=108 loops=1)
                     Join Filter: (t.id = cc.movie_id)
                     ->  Nested Loop  (cost=1009.75..8699.12 rows=1 width=100) (actual time=197.860..1101.845 rows=108 loops=1)
                           ->  Nested Loop  (cost=1009.61..8698.94 rows=1 width=104) (actual time=197.835..1101.625 rows=108 loops=1)
                                 ->  Nested Loop  (cost=1009.46..8698.75 rows=1 width=108) (actual time=197.795..1100.979 rows=324 loops=1)
                                       Join Filter: (t.id = mi_idx.movie_id)
                                       ->  Nested Loop  (cost=1009.04..8697.94 rows=1 width=95) (actual time=197.712..1100.150 rows=108 loops=1)
                                             ->  Nested Loop  (cost=1008.61..8696.90 rows=1 width=84) (actual time=197.629..1099.002 rows=108 loops=1)
                                                   Join Filter: (t.id = ci.movie_id)
                                                   ->  Nested Loop  (cost=1008.04..8667.81 rows=1 width=76) (actual time=196.715..1077.713 rows=65 loops=1)
                                                         Join Filter: (t.id = mi.movie_id)
                                                         ->  Gather  (cost=1007.61..8649.77 rows=1 width=25) (actual time=150.698..1073.313 rows=49 loops=1)
                                                               Workers Planned: 2
                                                               Workers Launched: 2
                                                               ->  Nested Loop  (cost=7.61..7649.67 rows=1 width=25) (actual time=172.075..748.034 rows=16 loops=3)
                                                                     ->  Nested Loop  (cost=7.18..7568.64 rows=98 width=4) (actual time=7.010..354.946 rows=25571 loops=3)
                                                                           ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4353.41 rows=3 width=4) (actual time=0.452..35.662 rows=2 loops=3)
                                                                                 Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                                 Rows Removed by Filter: 44721
                                                                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1068.74 rows=300 width=8) (actual time=4.944..132.315 rows=10959 loops=7)
                                                                                 Recheck Cond: (keyword_id = k.id)
                                                                                 Heap Blocks: exact=12389
                                                                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.814..3.814 rows=10959 loops=7)
                                                                                       Index Cond: (keyword_id = k.id)
                                                                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.83 rows=1 width=21) (actual time=0.014..0.014 rows=0 loops=76714)
                                                                           Index Cond: (id = mk.movie_id)
                                                                           Filter: ((production_year > 2000) AND (((title)::text ~~ '%Freddy%'::text) OR ((title)::text ~~ '%Jason%'::text) OR ((title)::text ~~ 'Saw%'::text)))
                                                                           Rows Removed by Filter: 1
                                                         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..18.03 rows=1 width=51) (actual time=0.209..0.209 rows=1 loops=49)
                                                               Index Cond: (movie_id = mk.movie_id)
                                                               Filter: ((info)::text = ANY ('{Horror,Thriller}'::text[]))
                                                               Rows Removed by Filter: 230
                                                   ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..29.07 rows=1 width=8) (actual time=0.203..0.326 rows=2 loops=65)
                                                         Index Cond: (movie_id = mk.movie_id)
                                                         Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                                         Rows Removed by Filter: 85
                                             ->  Index Scan using name_pkey on name n  (cost=0.43..1.04 rows=1 width=19) (actual time=0.010..0.010 rows=1 loops=108)
                                                   Index Cond: (id = ci.person_id)
                                                   Filter: ((gender)::text = 'm'::text)
                                       ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.78 rows=3 width=13) (actual time=0.005..0.006 rows=3 loops=108)
                                             Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=324)
                                       Index Cond: (id = mi_idx.info_type_id)
                                       Filter: ((info)::text = 'votes'::text)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=108)
                                 Index Cond: (id = mi.info_type_id)
                                 Filter: ((info)::text = 'genres'::text)
                     ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.81 rows=2 width=12) (actual time=0.004..0.004 rows=1 loops=108)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=108)
                     Index Cond: (id = cc.status_id)
                     Filter: ((kind)::text = 'complete+verified'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=28)
               Index Cond: (id = cc.subject_id)
               Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
 Planning Time: 93.108 ms
 Execution Time: 1109.685 ms
(62 rows)

SET
                                                                                                         QUERY PLAN                                                                                                         
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8720.29..8720.30 rows=1 width=128) (actual time=11305.894..11305.894 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.71..8720.28 rows=1 width=80) (actual time=38.523..11293.782 rows=8024 loops=1)
         Join Filter: (mi.movie_id = t.id)
         ->  Nested Loop  (cost=1012.28..8719.45 rows=1 width=83) (actual time=38.421..11184.297 rows=8024 loops=1)
               ->  Nested Loop  (cost=1011.85..8718.42 rows=1 width=72) (actual time=36.397..10968.413 rows=11863 loops=1)
                     Join Filter: (mi.movie_id = ci.movie_id)
                     ->  Nested Loop  (cost=1011.29..8689.33 rows=1 width=64) (actual time=17.609..2426.571 rows=14655 loops=1)
                           ->  Nested Loop  (cost=1011.14..8689.15 rows=1 width=68) (actual time=17.584..2389.881 rows=18333 loops=1)
                                 ->  Nested Loop  (cost=1011.01..8688.98 rows=1 width=72) (actual time=17.554..2349.280 rows=23704 loops=1)
                                       ->  Gather  (cost=1010.88..8688.81 rows=1 width=76) (actual time=12.926..2246.423 rows=43984 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Nested Loop  (cost=10.88..7688.71 rows=1 width=76) (actual time=12.174..3672.006 rows=14661 loops=3)
                                                   Join Filter: (mi.movie_id = cc.movie_id)
                                                   ->  Nested Loop  (cost=10.46..7687.87 rows=1 width=64) (actual time=7.528..3543.107 rows=22577 loops=3)
                                                         Join Filter: (mi_idx.movie_id = mi.movie_id)
                                                         ->  Hash Join  (cost=10.03..7651.37 rows=2 width=13) (actual time=7.295..765.861 rows=21234 loops=3)
                                                               Hash Cond: (mi_idx.info_type_id = it2.id)
                                                               ->  Nested Loop  (cost=7.61..7648.12 rows=298 width=17) (actual time=7.066..733.168 rows=63896 loops=3)
                                                                     ->  Nested Loop  (cost=7.18..7568.64 rows=98 width=4) (actual time=6.991..391.945 rows=25571 loops=3)
                                                                           ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4353.41 rows=3 width=4) (actual time=0.492..34.183 rows=2 loops=3)
                                                                                 Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                                 Rows Removed by Filter: 44721
                                                                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1068.74 rows=300 width=8) (actual time=4.937..148.685 rows=10959 loops=7)
                                                                                 Recheck Cond: (keyword_id = k.id)
                                                                                 Heap Blocks: exact=12389
                                                                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.816..3.816 rows=10959 loops=7)
                                                                                       Index Cond: (keyword_id = k.id)
                                                                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.78 rows=3 width=13) (actual time=0.011..0.012 rows=2 loops=76714)
                                                                           Index Cond: (movie_id = mk.movie_id)
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.079..0.079 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.051..0.053 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'votes'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..18.24 rows=1 width=51) (actual time=0.126..0.130 rows=1 loops=63701)
                                                               Index Cond: (movie_id = mk.movie_id)
                                                               Filter: ((info)::text = ANY ('{Horror,Action,Sci-Fi,Thriller,Crime,War}'::text[]))
                                                               Rows Removed by Filter: 58
                                                   ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.81 rows=2 width=12) (actual time=0.004..0.005 rows=1 loops=67732)
                                                         Index Cond: (movie_id = mk.movie_id)
                                       ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=43984)
                                             Index Cond: (id = cc.status_id)
                                             Filter: ((kind)::text = 'complete+verified'::text)
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=23704)
                                       Index Cond: (id = cc.subject_id)
                                       Filter: ((kind)::text = 'cast'::text)
                                       Rows Removed by Filter: 0
                           ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=18333)
                                 Index Cond: (id = mi.info_type_id)
                                 Filter: ((info)::text = 'genres'::text)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..29.07 rows=1 width=8) (actual time=0.439..0.582 rows=1 loops=14655)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                           Rows Removed by Filter: 83
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.04 rows=1 width=19) (actual time=0.017..0.017 rows=1 loops=11863)
                     Index Cond: (id = ci.person_id)
                     Filter: ((gender)::text = 'm'::text)
                     Rows Removed by Filter: 0
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.82 rows=1 width=21) (actual time=0.012..0.012 rows=1 loops=8024)
               Index Cond: (id = mk.movie_id)
 Planning Time: 94.231 ms
 Execution Time: 11307.101 ms
(65 rows)

SET
                                                                                                      QUERY PLAN                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8966.22..8966.23 rows=1 width=128) (actual time=3489.493..3489.493 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.88..8966.21 rows=1 width=80) (actual time=140.426..3487.783 rows=1273 loops=1)
         Join Filter: (mi.movie_id = t.id)
         ->  Nested Loop  (cost=1012.45..8965.10 rows=1 width=83) (actual time=140.363..3474.293 rows=1273 loops=1)
               ->  Nested Loop  (cost=1012.02..8963.80 rows=1 width=72) (actual time=140.280..3452.296 rows=1556 loops=1)
                     ->  Nested Loop  (cost=1011.88..8963.62 rows=1 width=76) (actual time=140.245..3447.244 rows=1616 loops=1)
                           Join Filter: (mi_idx.movie_id = mi.movie_id)
                           ->  Nested Loop  (cost=1011.45..8940.22 rows=1 width=25) (actual time=65.891..3230.756 rows=1471 loops=1)
                                 Join Filter: (mi_idx.movie_id = ci.movie_id)
                                 ->  Gather  (cost=1010.88..8907.19 rows=1 width=17) (actual time=65.240..2119.531 rows=1547 loops=1)
                                       Workers Planned: 2
                                       Workers Launched: 2
                                       ->  Nested Loop  (cost=10.88..7907.09 rows=1 width=17) (actual time=38.332..2296.916 rows=516 loops=3)
                                             ->  Nested Loop  (cost=10.46..7893.34 rows=14 width=21) (actual time=7.794..1293.690 rows=199419 loops=3)
                                                   Join Filter: (mi_idx.movie_id = mc.movie_id)
                                                   ->  Hash Join  (cost=10.03..7888.91 rows=2 width=13) (actual time=7.720..762.560 rows=21234 loops=3)
                                                         Hash Cond: (mi_idx.info_type_id = it2.id)
                                                         ->  Nested Loop  (cost=7.61..7885.67 rows=298 width=17) (actual time=7.485..733.684 rows=63896 loops=3)
                                                               ->  Nested Loop  (cost=7.18..7778.10 rows=98 width=4) (actual time=7.408..403.301 rows=25571 loops=3)
                                                                     ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4562.87 rows=3 width=4) (actual time=0.493..36.003 rows=2 loops=3)
                                                                           Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                           Rows Removed by Filter: 44721
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1068.74 rows=300 width=8) (actual time=5.113..153.111 rows=10959 loops=7)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=12389
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.991..3.991 rows=10959 loops=7)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..1.07 rows=3 width=13) (actual time=0.011..0.011 rows=2 loops=76714)
                                                                     Index Cond: (movie_id = mk.movie_id)
                                                         ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.084..0.084 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.061..0.064 rows=1 loops=3)
                                                                     Filter: ((info)::text = 'votes'::text)
                                                                     Rows Removed by Filter: 112
                                                   ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.15 rows=5 width=8) (actual time=0.014..0.021 rows=9 loops=63701)
                                                         Index Cond: (movie_id = mk.movie_id)
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.98 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=598256)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((name)::text ~~ 'Lionsgate%'::text)
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..33.03 rows=1 width=8) (actual time=0.523..0.721 rows=1 loops=1547)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                       Rows Removed by Filter: 119
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..23.38 rows=1 width=51) (actual time=0.144..0.146 rows=1 loops=1471)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((info)::text = ANY ('{Horror,Thriller}'::text[]))
                                 Rows Removed by Filter: 173
                     ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1616)
                           Index Cond: (id = mi.info_type_id)
                           Filter: ((info)::text = 'genres'::text)
                           Rows Removed by Filter: 0
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.30 rows=1 width=19) (actual time=0.013..0.013 rows=1 loops=1556)
                     Index Cond: (id = ci.person_id)
                     Filter: ((gender)::text = 'm'::text)
                     Rows Removed by Filter: 0
         ->  Index Scan using title_pkey on title t  (cost=0.43..1.10 rows=1 width=21) (actual time=0.009..0.009 rows=1 loops=1273)
               Index Cond: (id = mk.movie_id)
 Planning Time: 108.231 ms
 Execution Time: 3496.546 ms
(60 rows)

SET
                                                                                                        QUERY PLAN                                                                                                         
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8956.88..8956.89 rows=1 width=128) (actual time=996.820..996.821 rows=1 loops=1)
   ->  Nested Loop  (cost=1010.60..8956.87 rows=1 width=80) (actual time=308.022..996.692 rows=84 loops=1)
         ->  Nested Loop  (cost=1010.17..8955.57 rows=1 width=69) (actual time=307.942..995.923 rows=84 loops=1)
               ->  Nested Loop  (cost=1010.03..8955.39 rows=1 width=73) (actual time=307.904..995.431 rows=252 loops=1)
                     Join Filter: (t.id = mi_idx.movie_id)
                     ->  Nested Loop  (cost=1009.60..8954.29 rows=1 width=84) (actual time=307.820..994.969 rows=84 loops=1)
                           ->  Nested Loop  (cost=1009.46..8954.10 rows=1 width=88) (actual time=307.764..994.717 rows=84 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=1009.02..8930.71 rows=1 width=37) (actual time=307.066..988.274 rows=53 loops=1)
                                       ->  Nested Loop  (cost=1008.60..8921.93 rows=1 width=41) (actual time=306.912..987.619 rows=119 loops=1)
                                             Join Filter: (t.id = mc.movie_id)
                                             ->  Nested Loop  (cost=1008.17..8919.75 rows=1 width=33) (actual time=184.902..985.822 rows=77 loops=1)
                                                   Join Filter: (t.id = ci.movie_id)
                                                   ->  Gather  (cost=1007.61..8886.71 rows=1 width=25) (actual time=144.964..959.867 rows=49 loops=1)
                                                         Workers Planned: 2
                                                         Workers Launched: 2
                                                         ->  Nested Loop  (cost=7.61..7886.61 rows=1 width=25) (actual time=159.514..685.259 rows=16 loops=3)
                                                               ->  Nested Loop  (cost=7.18..7778.10 rows=98 width=4) (actual time=6.991..329.873 rows=25571 loops=3)
                                                                     ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4562.87 rows=3 width=4) (actual time=0.391..34.803 rows=2 loops=3)
                                                                           Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                           Rows Removed by Filter: 44721
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1068.74 rows=300 width=8) (actual time=4.957..121.921 rows=10959 loops=7)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=12389
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.828..3.828 rows=10959 loops=7)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using title_pkey on title t  (cost=0.43..1.11 rows=1 width=21) (actual time=0.013..0.013 rows=0 loops=76714)
                                                                     Index Cond: (id = mk.movie_id)
                                                                     Filter: ((production_year > 2000) AND (((title)::text ~~ '%Freddy%'::text) OR ((title)::text ~~ '%Jason%'::text) OR ((title)::text ~~ 'Saw%'::text)))
                                                                     Rows Removed by Filter: 1
                                                   ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..33.03 rows=1 width=8) (actual time=0.419..0.622 rows=2 loops=49)
                                                         Index Cond: (movie_id = mk.movie_id)
                                                         Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                                         Rows Removed by Filter: 82
                                             ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.16 rows=1 width=8) (actual time=0.016..0.022 rows=2 loops=77)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((note)::text ~~ '%(Blu-ray)%'::text)
                                                   Rows Removed by Filter: 24
                                       ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..8.14 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=119)
                                             Index Cond: (id = mc.company_id)
                                             Filter: ((name)::text ~~ 'Lionsgate%'::text)
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..23.38 rows=1 width=51) (actual time=0.120..0.121 rows=2 loops=53)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Horror,Thriller}'::text[]))
                                       Rows Removed by Filter: 292
                           ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=84)
                                 Index Cond: (id = mi.info_type_id)
                                 Filter: ((info)::text = 'genres'::text)
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..1.07 rows=3 width=13) (actual time=0.004..0.004 rows=3 loops=84)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=252)
                     Index Cond: (id = mi_idx.info_type_id)
                     Filter: ((info)::text = 'votes'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using name_pkey on name n  (cost=0.43..1.30 rows=1 width=19) (actual time=0.009..0.009 rows=1 loops=84)
               Index Cond: (id = ci.person_id)
               Filter: ((gender)::text = 'm'::text)
 Planning Time: 105.719 ms
 Execution Time: 1002.478 ms
(60 rows)

SET
                                                                                                      QUERY PLAN                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8966.43..8966.44 rows=1 width=128) (actual time=3452.202..3452.202 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.88..8966.42 rows=1 width=80) (actual time=134.535..3449.358 rows=2825 loops=1)
         Join Filter: (mi.movie_id = t.id)
         ->  Nested Loop  (cost=1012.45..8965.31 rows=1 width=83) (actual time=134.458..3429.066 rows=2825 loops=1)
               ->  Nested Loop  (cost=1012.02..8964.01 rows=1 width=72) (actual time=134.391..3402.292 rows=2825 loops=1)
                     ->  Nested Loop  (cost=1011.88..8963.83 rows=1 width=76) (actual time=134.356..3393.960 rows=3007 loops=1)
                           Join Filter: (mi_idx.movie_id = mi.movie_id)
                           ->  Nested Loop  (cost=1011.45..8940.22 rows=1 width=25) (actual time=63.528..3155.370 rows=1471 loops=1)
                                 Join Filter: (mi_idx.movie_id = ci.movie_id)
                                 ->  Gather  (cost=1010.88..8907.19 rows=1 width=17) (actual time=62.899..2052.110 rows=1547 loops=1)
                                       Workers Planned: 2
                                       Workers Launched: 2
                                       ->  Nested Loop  (cost=10.88..7907.09 rows=1 width=17) (actual time=37.530..2280.326 rows=516 loops=3)
                                             ->  Nested Loop  (cost=10.46..7893.34 rows=14 width=21) (actual time=7.517..1285.338 rows=199419 loops=3)
                                                   Join Filter: (mi_idx.movie_id = mc.movie_id)
                                                   ->  Hash Join  (cost=10.03..7888.91 rows=2 width=13) (actual time=7.433..759.331 rows=21234 loops=3)
                                                         Hash Cond: (mi_idx.info_type_id = it2.id)
                                                         ->  Nested Loop  (cost=7.61..7885.67 rows=298 width=17) (actual time=7.165..730.412 rows=63896 loops=3)
                                                               ->  Nested Loop  (cost=7.18..7778.10 rows=98 width=4) (actual time=7.100..402.249 rows=25571 loops=3)
                                                                     ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4562.87 rows=3 width=4) (actual time=0.551..36.387 rows=2 loops=3)
                                                                           Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                           Rows Removed by Filter: 44721
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1068.74 rows=300 width=8) (actual time=4.953..152.513 rows=10959 loops=7)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=12389
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.817..3.817 rows=10959 loops=7)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..1.07 rows=3 width=13) (actual time=0.010..0.011 rows=2 loops=76714)
                                                                     Index Cond: (movie_id = mk.movie_id)
                                                         ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.083..0.084 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.060..0.063 rows=1 loops=3)
                                                                     Filter: ((info)::text = 'votes'::text)
                                                                     Rows Removed by Filter: 112
                                                   ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.15 rows=5 width=8) (actual time=0.014..0.021 rows=9 loops=63701)
                                                         Index Cond: (movie_id = mk.movie_id)
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.98 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=598256)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((name)::text ~~ 'Lionsgate%'::text)
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..33.03 rows=1 width=8) (actual time=0.517..0.716 rows=1 loops=1547)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                       Rows Removed by Filter: 119
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..23.59 rows=1 width=51) (actual time=0.155..0.161 rows=2 loops=1471)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((info)::text = ANY ('{Horror,Action,Sci-Fi,Thriller,Crime,War}'::text[]))
                                 Rows Removed by Filter: 172
                     ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=3007)
                           Index Cond: (id = mi.info_type_id)
                           Filter: ((info)::text = 'genres'::text)
                           Rows Removed by Filter: 0
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.29 rows=1 width=19) (actual time=0.009..0.009 rows=1 loops=2825)
                     Index Cond: (id = ci.person_id)
         ->  Index Scan using title_pkey on title t  (cost=0.43..1.10 rows=1 width=21) (actual time=0.006..0.006 rows=1 loops=2825)
               Index Cond: (id = mk.movie_id)
 Planning Time: 108.652 ms
 Execution Time: 3459.294 ms
(58 rows)

SET
                                                                              QUERY PLAN                                                                               
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3801.48..3801.49 rows=1 width=96) (actual time=30.979..30.980 rows=1 loops=1)
   ->  Nested Loop  (cost=7.90..3801.40 rows=10 width=116) (actual time=30.974..30.974 rows=0 loops=1)
         ->  Nested Loop  (cost=7.47..3759.44 rows=10 width=103) (actual time=30.973..30.973 rows=0 loops=1)
               ->  Nested Loop  (cost=7.04..3754.59 rows=10 width=94) (actual time=30.973..30.973 rows=0 loops=1)
                     Join Filter: (ml.link_type_id = lt.id)
                     ->  Nested Loop  (cost=7.04..3750.90 rows=10 width=16) (actual time=30.972..30.972 rows=0 loops=1)
                           ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=30.263..30.944 rows=1 loops=1)
                                 ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=30.179..30.858 rows=1 loops=1)
                                       Filter: ((keyword)::text = '10,000-mile-club'::text)
                                       Rows Removed by Filter: 134169
                                 ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=0.071..0.072 rows=1 loops=1)
                                       Recheck Cond: (keyword_id = k.id)
                                       Heap Blocks: exact=1
                                       ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.032..0.032 rows=1 loops=1)
                                             Index Cond: (keyword_id = k.id)
                           ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=12) (actual time=0.026..0.026 rows=0 loops=1)
                                 Index Cond: (movie_id = mk.movie_id)
                     ->  Materialize  (cost=0.00..1.27 rows=18 width=86) (never executed)
                           ->  Seq Scan on link_type lt  (cost=0.00..1.18 rows=18 width=86) (never executed)
               ->  Index Scan using title_pkey on title t1  (cost=0.43..0.49 rows=1 width=21) (never executed)
                     Index Cond: (id = mk.movie_id)
         ->  Index Scan using title_pkey on title t2  (cost=0.43..4.20 rows=1 width=21) (never executed)
               Index Cond: (id = ml.linked_movie_id)
 Planning Time: 6.117 ms
 Execution Time: 31.503 ms
(25 rows)

SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3801.48..3801.49 rows=1 width=96) (actual time=502.287..502.288 rows=1 loops=1)
   ->  Nested Loop  (cost=7.90..3801.40 rows=10 width=116) (actual time=11.091..497.335 rows=4388 loops=1)
         ->  Nested Loop  (cost=7.47..3759.44 rows=10 width=103) (actual time=11.011..402.274 rows=4388 loops=1)
               ->  Nested Loop  (cost=7.04..3754.59 rows=10 width=94) (actual time=10.952..374.531 rows=4388 loops=1)
                     Join Filter: (ml.link_type_id = lt.id)
                     Rows Removed by Join Filter: 30206
                     ->  Nested Loop  (cost=7.04..3750.90 rows=10 width=16) (actual time=10.905..365.152 rows=4388 loops=1)
                           ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.643..274.667 rows=41840 loops=1)
                                 ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.939..26.634 rows=1 loops=1)
                                       Filter: ((keyword)::text = 'character-name-in-title'::text)
                                       Rows Removed by Filter: 134169
                                 ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.696..237.698 rows=41840 loops=1)
                                       Recheck Cond: (keyword_id = k.id)
                                       Heap Blocks: exact=11541
                                       ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.956..7.956 rows=41840 loops=1)
                                             Index Cond: (keyword_id = k.id)
                           ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=12) (actual time=0.002..0.002 rows=0 loops=41840)
                                 Index Cond: (movie_id = mk.movie_id)
                     ->  Materialize  (cost=0.00..1.27 rows=18 width=86) (actual time=0.000..0.001 rows=8 loops=4388)
                           ->  Seq Scan on link_type lt  (cost=0.00..1.18 rows=18 width=86) (actual time=0.026..0.035 rows=17 loops=1)
               ->  Index Scan using title_pkey on title t1  (cost=0.43..0.49 rows=1 width=21) (actual time=0.005..0.005 rows=1 loops=4388)
                     Index Cond: (id = mk.movie_id)
         ->  Index Scan using title_pkey on title t2  (cost=0.43..4.20 rows=1 width=21) (actual time=0.021..0.021 rows=1 loops=4388)
               Index Cond: (id = ml.linked_movie_id)
 Planning Time: 4.992 ms
 Execution Time: 502.823 ms
(26 rows)

SET
                                                                                                               QUERY PLAN                                                                                                               
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3985.44..3985.45 rows=1 width=192) (actual time=280.841..280.842 rows=1 loops=1)
   ->  Nested Loop  (cost=874.71..3985.43 rows=1 width=82) (actual time=67.741..280.817 rows=8 loops=1)
         Join Filter: ((ml.linked_movie_id = t2.id) AND (kt2.id = t2.kind_id))
         ->  Nested Loop  (cost=874.28..3984.89 rows=1 width=81) (actual time=67.702..280.555 rows=35 loops=1)
               Join Filter: (mi_idx2.info_type_id = it2.id)
               Rows Removed by Join Filter: 16250
               ->  Nested Loop  (cost=874.28..3981.65 rows=55 width=85) (actual time=11.695..273.422 rows=16285 loops=1)
                     ->  Nested Loop  (cost=873.86..3913.92 rows=152 width=70) (actual time=11.546..171.082 rows=39869 loops=1)
                           ->  Nested Loop  (cost=873.43..3824.47 rows=147 width=78) (actual time=11.527..131.171 rows=6175 loops=1)
                                 ->  Nested Loop  (cost=873.01..3759.33 rows=147 width=63) (actual time=11.507..105.677 rows=6175 loops=1)
                                       Join Filter: (ml.linked_movie_id = mc2.movie_id)
                                       ->  Nested Loop  (cost=872.58..3738.66 rows=28 width=55) (actual time=11.450..80.684 rows=1602 loops=1)
                                             Join Filter: (kt1.id = t1.kind_id)
                                             Rows Removed by Join Filter: 1143
                                             ->  Nested Loop  (cost=0.13..13.35 rows=1 width=8) (actual time=0.055..0.064 rows=1 loops=1)
                                                   ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.13..12.26 rows=1 width=4) (actual time=0.045..0.047 rows=1 loops=1)
                                                         Filter: ((kind)::text = 'tv series'::text)
                                                         Rows Removed by Filter: 6
                                                   ->  Seq Scan on kind_type kt1  (cost=0.00..1.09 rows=1 width=4) (actual time=0.009..0.014 rows=1 loops=1)
                                                         Filter: ((kind)::text = 'tv series'::text)
                                                         Rows Removed by Filter: 6
                                             ->  Nested Loop  (cost=872.44..3722.90 rows=193 width=55) (actual time=11.392..80.006 rows=2745 loops=1)
                                                   Join Filter: (ml.movie_id = t1.id)
                                                   ->  Nested Loop  (cost=872.01..3610.10 rows=193 width=30) (actual time=11.366..63.148 rows=2745 loops=1)
                                                         ->  Hash Join  (cost=871.59..3333.95 rows=134 width=17) (actual time=11.310..40.914 rows=2064 loops=1)
                                                               Hash Cond: (mi_idx1.info_type_id = it1.id)
                                                               ->  Merge Join  (cost=869.16..3290.24 rows=15158 width=21) (actual time=11.205..39.372 rows=6192 loops=1)
                                                                     Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43826.36 rows=1380035 width=13) (actual time=0.025..18.534 rows=63901 loops=1)
                                                                     ->  Sort  (cost=868.72..881.22 rows=5000 width=8) (actual time=11.149..11.735 rows=6443 loops=1)
                                                                           Sort Key: ml.movie_id
                                                                           Sort Method: quicksort  Memory: 205kB
                                                                           ->  Hash Join  (cost=1.29..561.53 rows=5000 width=8) (actual time=0.121..9.981 rows=2315 loops=1)
                                                                                 Hash Cond: (ml.link_type_id = lt.id)
                                                                                 ->  Seq Scan on movie_link ml  (cost=0.00..462.97 rows=29997 width=12) (actual time=0.010..5.661 rows=29997 loops=1)
                                                                                 ->  Hash  (cost=1.25..1.25 rows=3 width=4) (actual time=0.049..0.049 rows=2 loops=1)
                                                                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                       ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=3 width=4) (actual time=0.031..0.036 rows=2 loops=1)
                                                                                             Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                             Rows Removed by Filter: 16
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.036..0.036 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.020..0.023 rows=1 loops=1)
                                                                           Filter: ((info)::text = 'rating'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=1 width=13) (actual time=0.009..0.010 rows=1 loops=2064)
                                                               Index Cond: (movie_id = ml.linked_movie_id)
                                                               Filter: ((info)::text < '3.0'::text)
                                                               Rows Removed by Filter: 2
                                                   ->  Index Scan using title_pkey on title t1  (cost=0.43..0.57 rows=1 width=25) (actual time=0.005..0.005 rows=1 loops=2745)
                                                         Index Cond: (id = mi_idx1.movie_id)
                                       ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.68 rows=5 width=8) (actual time=0.010..0.014 rows=4 loops=1602)
                                             Index Cond: (movie_id = mi_idx2.movie_id)
                                 ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.003..0.003 rows=1 loops=6175)
                                       Index Cond: (id = mc2.company_id)
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.003..0.005 rows=6 loops=6175)
                                 Index Cond: (movie_id = t1.id)
                     ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=39869)
                           Index Cond: (id = mc1.company_id)
                           Filter: ((country_code)::text = '[us]'::text)
                           Rows Removed by Filter: 1
               ->  Materialize  (cost=0.00..2.42 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=16285)
                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.021..0.023 rows=1 loops=1)
                           Filter: ((info)::text = 'rating'::text)
                           Rows Removed by Filter: 112
         ->  Index Scan using title_pkey on title t2  (cost=0.43..0.52 rows=1 width=25) (actual time=0.007..0.007 rows=0 loops=35)
               Index Cond: (id = mc2.movie_id)
               Filter: ((production_year >= 2005) AND (production_year <= 2008))
               Rows Removed by Filter: 1
 Planning Time: 111.657 ms
 Execution Time: 281.796 ms
(71 rows)

SET
                                                                                                                  QUERY PLAN                                                                                                                  
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=2780.95..2780.96 rows=1 width=192) (actual time=78.403..78.403 rows=1 loops=1)
   ->  Nested Loop  (cost=340.63..2780.94 rows=1 width=82) (actual time=15.338..78.386 rows=4 loops=1)
         Join Filter: ((t2.id = mi_idx2.movie_id) AND (it2.id = mi_idx2.info_type_id))
         Rows Removed by Join Filter: 4
         ->  Nested Loop  (cost=340.20..2780.42 rows=1 width=93) (actual time=15.303..78.337 rows=4 loops=1)
               ->  Nested Loop  (cost=340.07..2780.25 rows=1 width=97) (actual time=15.280..78.308 rows=4 loops=1)
                     Join Filter: (ml.movie_id = t1.id)
                     ->  Nested Loop  (cost=339.64..2779.72 rows=1 width=88) (actual time=15.260..78.279 rows=4 loops=1)
                           ->  Nested Loop  (cost=339.22..2779.28 rows=1 width=73) (actual time=15.253..78.263 rows=4 loops=1)
                                 ->  Nested Loop  (cost=338.79..2777.83 rows=1 width=65) (actual time=15.234..78.240 rows=1 loops=1)
                                       ->  Nested Loop  (cost=338.66..2777.66 rows=1 width=69) (actual time=4.023..78.204 rows=6 loops=1)
                                             ->  Nested Loop  (cost=338.23..2769.26 rows=2 width=44) (actual time=3.962..73.473 rows=477 loops=1)
                                                   ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..14.12 rows=1 width=4) (actual time=0.027..0.032 rows=1 loops=1)
                                                         Filter: ((info)::text = 'rating'::text)
                                                         Rows Removed by Filter: 112
                                                   ->  Nested Loop  (cost=338.08..2755.12 rows=2 width=40) (actual time=3.932..73.333 rows=477 loops=1)
                                                         ->  Nested Loop  (cost=337.66..2649.97 rows=236 width=25) (actual time=3.826..42.600 rows=9674 loops=1)
                                                               Join Filter: (ml.movie_id = mc1.movie_id)
                                                               ->  Hash Join  (cost=337.23..2620.48 rows=45 width=17) (actual time=3.816..28.058 rows=2064 loops=1)
                                                                     Hash Cond: (mi_idx1.info_type_id = it1.id)
                                                                     ->  Merge Join  (cost=334.81..2604.30 rows=5051 width=21) (actual time=3.712..26.713 rows=6192 loops=1)
                                                                           Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43826.36 rows=1380035 width=13) (actual time=0.030..13.873 rows=63901 loops=1)
                                                                           ->  Sort  (cost=334.38..338.55 rows=1666 width=8) (actual time=3.649..4.176 rows=6443 loops=1)
                                                                                 Sort Key: ml.movie_id
                                                                                 Sort Method: quicksort  Memory: 205kB
                                                                                 ->  Nested Loop  (cost=38.82..245.23 rows=1666 width=8) (actual time=0.220..2.497 rows=2315 loops=1)
                                                                                       ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=4) (actual time=0.022..0.028 rows=2 loops=1)
                                                                                             Filter: ((link)::text ~~ '%follow%'::text)
                                                                                             Rows Removed by Filter: 16
                                                                                       ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..225.26 rows=1875 width=12) (actual time=0.154..1.031 rows=1158 loops=2)
                                                                                             Recheck Cond: (link_type_id = lt.id)
                                                                                             Heap Blocks: exact=191
                                                                                             ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.134..0.134 rows=1158 loops=2)
                                                                                                   Index Cond: (link_type_id = lt.id)
                                                                     ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.036..0.036 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.022..0.024 rows=1 loops=1)
                                                                                 Filter: ((info)::text = 'rating'::text)
                                                                                 Rows Removed by Filter: 112
                                                               ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.59 rows=5 width=8) (actual time=0.004..0.005 rows=5 loops=2064)
                                                                     Index Cond: (movie_id = mi_idx1.movie_id)
                                                         ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=9674)
                                                               Index Cond: (id = mc1.company_id)
                                                               Filter: ((country_code)::text = '[nl]'::text)
                                                               Rows Removed by Filter: 1
                                             ->  Index Scan using title_pkey on title t2  (cost=0.43..4.20 rows=1 width=25) (actual time=0.010..0.010 rows=0 loops=477)
                                                   Index Cond: (id = ml.linked_movie_id)
                                                   Filter: (production_year = 2007)
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=6)
                                             Index Cond: (id = t2.kind_id)
                                             Filter: ((kind)::text = 'tv series'::text)
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..1.39 rows=5 width=8) (actual time=0.017..0.020 rows=4 loops=1)
                                       Index Cond: (movie_id = t2.id)
                           ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.003..0.003 rows=1 loops=4)
                                 Index Cond: (id = mc2.company_id)
                     ->  Index Scan using title_pkey on title t1  (cost=0.43..0.51 rows=1 width=25) (actual time=0.006..0.006 rows=1 loops=4)
                           Index Cond: (id = mc1.movie_id)
               ->  Index Scan using kind_type_pkey on kind_type kt1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=4)
                     Index Cond: (id = t1.kind_id)
                     Filter: ((kind)::text = 'tv series'::text)
         ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..0.51 rows=1 width=13) (actual time=0.010..0.011 rows=2 loops=4)
               Index Cond: (movie_id = mc2.movie_id)
               Filter: ((info)::text < '3.0'::text)
               Rows Removed by Filter: 1
 Planning Time: 111.218 ms
 Execution Time: 79.466 ms
(69 rows)

SET
                                                                                                                  QUERY PLAN                                                                                                                  
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4007.21..4007.22 rows=1 width=192) (actual time=82.740..82.740 rows=1 loops=1)
   ->  Nested Loop  (cost=874.85..4007.20 rows=1 width=82) (actual time=20.120..82.581 rows=114 loops=1)
         ->  Nested Loop  (cost=874.43..4006.75 rows=1 width=67) (actual time=20.096..81.978 rows=131 loops=1)
               ->  Nested Loop  (cost=874.30..4006.58 rows=1 width=71) (actual time=20.071..81.709 rows=131 loops=1)
                     Join Filter: (ml.movie_id = t1.id)
                     ->  Nested Loop  (cost=873.87..4006.06 rows=1 width=62) (actual time=20.032..81.217 rows=131 loops=1)
                           ->  Nested Loop  (cost=873.45..4005.62 rows=1 width=47) (actual time=19.980..80.564 rows=131 loops=1)
                                 ->  Nested Loop  (cost=873.02..4004.95 rows=1 width=55) (actual time=19.970..80.183 rows=51 loops=1)
                                       Join Filter: (it2.id = mi_idx2.info_type_id)
                                       Rows Removed by Join Filter: 4467
                                       ->  Nested Loop  (cost=872.59..3959.22 rows=82 width=50) (actual time=11.361..67.734 rows=3300 loops=1)
                                             Join Filter: (t2.kind_id = kt2.id)
                                             Rows Removed by Join Filter: 4017
                                             ->  Nested Loop  (cost=872.59..3949.90 rows=288 width=54) (actual time=10.510..65.315 rows=4087 loops=1)
                                                   ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..14.12 rows=1 width=4) (actual time=0.025..0.030 rows=1 loops=1)
                                                         Filter: ((info)::text = 'rating'::text)
                                                         Rows Removed by Filter: 112
                                                   ->  Nested Loop  (cost=872.45..3932.90 rows=288 width=50) (actual time=10.482..64.497 rows=4087 loops=1)
                                                         Join Filter: (ml.movie_id = mc1.movie_id)
                                                         ->  Nested Loop  (cost=872.02..3896.86 rows=55 width=42) (actual time=10.472..57.846 rows=851 loops=1)
                                                               ->  Hash Join  (cost=871.59..3333.95 rows=134 width=17) (actual time=10.401..34.870 rows=2064 loops=1)
                                                                     Hash Cond: (mi_idx1.info_type_id = it1.id)
                                                                     ->  Merge Join  (cost=869.16..3290.24 rows=15158 width=21) (actual time=10.288..33.401 rows=6192 loops=1)
                                                                           Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43826.36 rows=1380035 width=13) (actual time=0.023..13.844 rows=63901 loops=1)
                                                                           ->  Sort  (cost=868.72..881.22 rows=5000 width=8) (actual time=10.220..10.784 rows=6443 loops=1)
                                                                                 Sort Key: ml.movie_id
                                                                                 Sort Method: quicksort  Memory: 205kB
                                                                                 ->  Hash Join  (cost=1.29..561.53 rows=5000 width=8) (actual time=0.119..9.076 rows=2315 loops=1)
                                                                                       Hash Cond: (ml.link_type_id = lt.id)
                                                                                       ->  Seq Scan on movie_link ml  (cost=0.00..462.97 rows=29997 width=12) (actual time=0.010..4.893 rows=29997 loops=1)
                                                                                       ->  Hash  (cost=1.25..1.25 rows=3 width=4) (actual time=0.062..0.063 rows=2 loops=1)
                                                                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                             ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=3 width=4) (actual time=0.039..0.044 rows=2 loops=1)
                                                                                                   Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                                   Rows Removed by Filter: 16
                                                                     ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.035..0.035 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.021..0.023 rows=1 loops=1)
                                                                                 Filter: ((info)::text = 'rating'::text)
                                                                                 Rows Removed by Filter: 112
                                                               ->  Index Scan using title_pkey on title t2  (cost=0.43..4.20 rows=1 width=25) (actual time=0.011..0.011 rows=0 loops=2064)
                                                                     Index Cond: (id = ml.linked_movie_id)
                                                                     Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                                                     Rows Removed by Filter: 1
                                                         ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.59 rows=5 width=8) (actual time=0.004..0.006 rows=5 loops=851)
                                                               Index Cond: (movie_id = mi_idx1.movie_id)
                                             ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=2 loops=4087)
                                                   ->  Seq Scan on kind_type kt2  (cost=0.00..1.09 rows=2 width=4) (actual time=0.011..0.012 rows=2 loops=1)
                                                         Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                                                         Rows Removed by Filter: 5
                                       ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..0.53 rows=2 width=13) (actual time=0.003..0.003 rows=1 loops=3300)
                                             Index Cond: (movie_id = t2.id)
                                             Filter: ((info)::text < '3.5'::text)
                                             Rows Removed by Filter: 2
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.62 rows=5 width=8) (actual time=0.005..0.006 rows=3 loops=51)
                                       Index Cond: (movie_id = t2.id)
                           ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.004..0.004 rows=1 loops=131)
                                 Index Cond: (id = mc2.company_id)
                     ->  Index Scan using title_pkey on title t1  (cost=0.43..0.51 rows=1 width=25) (actual time=0.003..0.003 rows=1 loops=131)
                           Index Cond: (id = mc1.movie_id)
               ->  Index Scan using kind_type_pkey on kind_type kt1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=131)
                     Index Cond: (id = t1.kind_id)
                     Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
         ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.004..0.004 rows=1 loops=131)
               Index Cond: (id = mc1.company_id)
               Filter: ((country_code)::text <> '[us]'::text)
               Rows Removed by Filter: 0
 Planning Time: 108.653 ms
 Execution Time: 83.697 ms
(70 rows)

SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16631.00..16631.01 rows=1 width=32) (actual time=640.615..640.616 rows=1 loops=1)
   ->  Nested Loop  (cost=7.62..16630.82 rows=72 width=17) (actual time=14.431..640.362 rows=206 loops=1)
         Join Filter: (t.id = mi.movie_id)
         ->  Nested Loop  (cost=7.19..16315.45 rows=177 width=25) (actual time=9.878..380.911 rows=2235 loops=1)
               ->  Nested Loop  (cost=6.76..16101.73 rows=438 width=4) (actual time=5.708..175.459 rows=12951 loops=1)
                     ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=1.850..39.941 rows=30 loops=1)
                           Filter: ((keyword)::text ~~ '%sequel%'::text)
                           Rows Removed by Filter: 134140
                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1033.58 rows=300 width=8) (actual time=0.173..4.324 rows=432 loops=30)
                           Recheck Cond: (keyword_id = k.id)
                           Heap Blocks: exact=6979
                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.131..0.131 rows=432 loops=30)
                                 Index Cond: (keyword_id = k.id)
               ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.015..0.015 rows=0 loops=12951)
                     Index Cond: (id = mk.movie_id)
                     Filter: (production_year > 2005)
                     Rows Removed by Filter: 1
         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.77 rows=1 width=4) (actual time=0.109..0.115 rows=0 loops=2235)
               Index Cond: (movie_id = mk.movie_id)
               Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German}'::text[]))
               Rows Removed by Filter: 45
 Planning Time: 3.967 ms
 Execution Time: 640.933 ms
(23 rows)

SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16416.66..16416.67 rows=1 width=32) (actual time=399.045..399.045 rows=1 loops=1)
   ->  Nested Loop  (cost=7.62..16416.66 rows=1 width=17) (actual time=24.575..399.001 rows=5 loops=1)
         Join Filter: (t.id = mi.movie_id)
         ->  Nested Loop  (cost=7.19..16315.45 rows=69 width=25) (actual time=10.644..344.998 rows=405 loops=1)
               ->  Nested Loop  (cost=6.76..16101.73 rows=438 width=4) (actual time=6.107..160.903 rows=12951 loops=1)
                     ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=2.329..39.146 rows=30 loops=1)
                           Filter: ((keyword)::text ~~ '%sequel%'::text)
                           Rows Removed by Filter: 134140
                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1033.58 rows=300 width=8) (actual time=0.164..3.877 rows=432 loops=30)
                           Recheck Cond: (keyword_id = k.id)
                           Heap Blocks: exact=6979
                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.125..0.125 rows=432 loops=30)
                                 Index Cond: (keyword_id = k.id)
               ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.013..0.013 rows=0 loops=12951)
                     Index Cond: (id = mk.movie_id)
                     Filter: (production_year > 2010)
                     Rows Removed by Filter: 1
         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.45 rows=1 width=4) (actual time=0.132..0.132 rows=0 loops=405)
               Index Cond: (movie_id = mk.movie_id)
               Filter: ((info)::text = 'Bulgaria'::text)
               Rows Removed by Filter: 63
 Planning Time: 4.179 ms
 Execution Time: 399.387 ms
(23 rows)

SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16894.26..16894.27 rows=1 width=32) (actual time=1057.922..1057.922 rows=1 loops=1)
   ->  Nested Loop  (cost=7.62..16892.82 rows=578 width=17) (actual time=6.734..1052.518 rows=7250 loops=1)
         Join Filter: (t.id = mi.movie_id)
         ->  Nested Loop  (cost=7.19..16315.45 rows=304 width=25) (actual time=6.057..361.477 rows=7874 loops=1)
               ->  Nested Loop  (cost=6.76..16101.73 rows=438 width=4) (actual time=6.005..167.068 rows=12951 loops=1)
                     ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=2.253..38.766 rows=30 loops=1)
                           Filter: ((keyword)::text ~~ '%sequel%'::text)
                           Rows Removed by Filter: 134140
                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1033.58 rows=300 width=8) (actual time=0.168..4.090 rows=432 loops=30)
                           Recheck Cond: (keyword_id = k.id)
                           Heap Blocks: exact=6979
                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.126..0.126 rows=432 loops=30)
                                 Index Cond: (keyword_id = k.id)
               ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.014..0.014 rows=1 loops=12951)
                     Index Cond: (id = mk.movie_id)
                     Filter: (production_year > 1990)
                     Rows Removed by Filter: 0
         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=4) (actual time=0.075..0.086 rows=1 loops=7874)
               Index Cond: (movie_id = mk.movie_id)
               Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,USA,American}'::text[]))
               Rows Removed by Filter: 35
 Planning Time: 4.372 ms
 Execution Time: 1058.235 ms
(23 rows)

SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16334.91..16334.92 rows=1 width=64) (actual time=419.841..419.842 rows=1 loops=1)
   ->  Nested Loop  (cost=7.62..16334.90 rows=2 width=22) (actual time=11.863..419.019 rows=740 loops=1)
         Join Filter: (mi_idx.movie_id = t.id)
         ->  Nested Loop  (cost=7.19..16332.90 rows=4 width=13) (actual time=6.097..313.034 rows=5820 loops=1)
               Join Filter: (mi_idx.info_type_id = it.id)
               Rows Removed by Join Filter: 2643
               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.032..0.035 rows=1 loops=1)
                     Filter: ((info)::text = 'rating'::text)
                     Rows Removed by Filter: 112
               ->  Nested Loop  (cost=7.19..16324.17 rows=505 width=17) (actual time=6.062..310.631 rows=8463 loops=1)
                     ->  Nested Loop  (cost=6.76..16101.73 rows=438 width=4) (actual time=6.010..168.183 rows=12951 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=2.218..39.626 rows=30 loops=1)
                                 Filter: ((keyword)::text ~~ '%sequel%'::text)
                                 Rows Removed by Filter: 134140
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1033.58 rows=300 width=8) (actual time=0.165..4.121 rows=432 loops=30)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=6979
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.126..0.126 rows=432 loops=30)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=13) (actual time=0.010..0.010 rows=1 loops=12951)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((info)::text > '5.0'::text)
                           Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.017..0.017 rows=0 loops=5820)
               Index Cond: (id = mk.movie_id)
               Filter: (production_year > 2005)
               Rows Removed by Filter: 1
 Planning Time: 5.036 ms
 Execution Time: 420.284 ms
(29 rows)

SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16327.16..16327.17 rows=1 width=64) (actual time=206.730..206.730 rows=1 loops=1)
   ->  Nested Loop  (cost=7.62..16327.16 rows=1 width=22) (actual time=36.064..206.702 rows=6 loops=1)
         Join Filter: (mi_idx.movie_id = t.id)
         ->  Nested Loop  (cost=7.19..16326.66 rows=1 width=13) (actual time=31.401..206.314 rows=21 loops=1)
               Join Filter: (mi_idx.info_type_id = it.id)
               Rows Removed by Join Filter: 285
               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.025..0.029 rows=1 loops=1)
                     Filter: ((info)::text = 'rating'::text)
                     Rows Removed by Filter: 112
               ->  Nested Loop  (cost=7.19..16324.17 rows=6 width=17) (actual time=6.974..206.216 rows=306 loops=1)
                     ->  Nested Loop  (cost=6.76..16101.73 rows=438 width=4) (actual time=6.044..112.930 rows=12951 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=2.260..30.062 rows=30 loops=1)
                                 Filter: ((keyword)::text ~~ '%sequel%'::text)
                                 Rows Removed by Filter: 134140
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1033.58 rows=300 width=8) (actual time=0.153..2.635 rows=432 loops=30)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=6979
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.115..0.115 rows=432 loops=30)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=13) (actual time=0.007..0.007 rows=0 loops=12951)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((info)::text > '9.0'::text)
                           Rows Removed by Filter: 2
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.017..0.017 rows=0 loops=21)
               Index Cond: (id = mk.movie_id)
               Filter: (production_year > 2010)
               Rows Removed by Filter: 1
 Planning Time: 4.443 ms
 Execution Time: 207.125 ms
(29 rows)

SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16344.82..16344.83 rows=1 width=64) (actual time=310.609..310.609 rows=1 loops=1)
   ->  Nested Loop  (cost=7.62..16344.79 rows=5 width=22) (actual time=5.279..306.202 rows=4700 loops=1)
         Join Filter: (mi_idx.movie_id = t.id)
         ->  Nested Loop  (cost=7.19..16341.29 rows=7 width=13) (actual time=5.205..194.892 rows=8092 loops=1)
               Join Filter: (mi_idx.info_type_id = it.id)
               Rows Removed by Join Filter: 6865
               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.034..0.037 rows=1 loops=1)
                     Filter: ((info)::text = 'rating'::text)
                     Rows Removed by Filter: 112
               ->  Nested Loop  (cost=7.19..16328.55 rows=826 width=17) (actual time=5.169..191.506 rows=14957 loops=1)
                     ->  Nested Loop  (cost=6.76..16101.73 rows=438 width=4) (actual time=5.133..98.293 rows=12951 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=1.740..38.615 rows=30 loops=1)
                                 Filter: ((keyword)::text ~~ '%sequel%'::text)
                                 Rows Removed by Filter: 134140
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1033.58 rows=300 width=8) (actual time=0.150..1.857 rows=432 loops=30)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=6979
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.113..0.113 rows=432 loops=30)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=2 width=13) (actual time=0.006..0.006 rows=1 loops=12951)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((info)::text > '2.0'::text)
                           Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.013..0.013 rows=1 loops=8092)
               Index Cond: (id = mk.movie_id)
               Filter: (production_year > 1990)
               Rows Removed by Filter: 0
 Planning Time: 3.885 ms
 Execution Time: 310.995 ms
(29 rows)

SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=39503.41..39503.42 rows=1 width=32) (actual time=269.337..269.337 rows=1 loops=1)
   ->  Gather  (cost=39503.19..39503.40 rows=2 width=32) (actual time=269.228..270.556 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=38503.19..38503.20 rows=1 width=32) (actual time=262.277..262.278 rows=1 loops=3)
               ->  Hash Join  (cost=5.47..38503.07 rows=48 width=17) (actual time=262.274..262.274 rows=0 loops=3)
                     Hash Cond: (mi.info_type_id = it.id)
                     ->  Nested Loop  (cost=1.93..38499.40 rows=48 width=21) (actual time=262.273..262.273 rows=0 loops=3)
                           ->  Nested Loop  (cost=1.49..38104.61 rows=165 width=25) (actual time=262.272..262.272 rows=0 loops=3)
                                 ->  Hash Join  (cost=1.06..35106.92 rows=407 width=4) (actual time=262.272..262.272 rows=0 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..35097.06 rows=1629 width=8) (actual time=13.971..260.419 rows=8008 loops=3)
                                             Filter: (((note)::text ~~ '%(theatrical)%'::text) AND ((note)::text ~~ '%(France)%'::text))
                                             Rows Removed by Filter: 861701
                                       ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.073..0.074 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.042..0.044 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..7.37 rows=1 width=21) (never executed)
                                       Index Cond: (id = mc.movie_id)
                                       Filter: (production_year > 2005)
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.38 rows=1 width=8) (never executed)
                                 Index Cond: (movie_id = t.id)
                                 Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German}'::text[]))
                     ->  Hash  (cost=2.13..2.13 rows=113 width=4) (never executed)
                           ->  Seq Scan on info_type it  (cost=0.00..2.13 rows=113 width=4) (never executed)
 Planning Time: 5.047 ms
 Execution Time: 270.998 ms
(29 rows)

SET
                                                                               QUERY PLAN                                                                               
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=38870.49..38870.50 rows=1 width=32) (actual time=252.513..252.513 rows=1 loops=1)
   ->  Gather  (cost=38870.28..38870.49 rows=2 width=32) (actual time=252.409..253.787 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=37870.28..37870.29 rows=1 width=32) (actual time=245.592..245.592 rows=1 loops=3)
               ->  Nested Loop  (cost=2.07..37870.28 rows=1 width=17) (actual time=245.588..245.588 rows=0 loops=3)
                     ->  Nested Loop  (cost=1.93..37870.12 rows=1 width=21) (actual time=245.587..245.587 rows=0 loops=3)
                           ->  Nested Loop  (cost=1.49..37866.79 rows=1 width=25) (actual time=245.587..245.587 rows=0 loops=3)
                                 ->  Hash Join  (cost=1.06..37816.09 rows=6 width=4) (actual time=245.587..245.587 rows=0 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..37814.90 rows=25 width=8) (actual time=5.860..245.158 rows=473 loops=3)
                                             Filter: (((note)::text ~~ '%(VHS)%'::text) AND ((note)::text ~~ '%(USA)%'::text) AND ((note)::text ~~ '%(1994)%'::text))
                                             Rows Removed by Filter: 869237
                                       ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.060..0.060 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.038..0.039 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..8.45 rows=1 width=21) (never executed)
                                       Index Cond: (id = mc.movie_id)
                                       Filter: (production_year > 2010)
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..3.31 rows=1 width=8) (never executed)
                                 Index Cond: (movie_id = t.id)
                                 Filter: ((info)::text = ANY ('{USA,America}'::text[]))
                     ->  Index Only Scan using info_type_pkey on info_type it  (cost=0.14..0.16 rows=1 width=4) (never executed)
                           Index Cond: (id = mi.info_type_id)
                           Heap Fetches: 0
 Planning Time: 4.243 ms
 Execution Time: 254.250 ms
(29 rows)

SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=91609.00..91609.01 rows=1 width=32) (actual time=357.573..357.573 rows=1 loops=1)
   ->  Gather  (cost=91608.78..91608.99 rows=2 width=32) (actual time=357.357..361.041 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=90608.78..90608.79 rows=1 width=32) (actual time=350.794..350.794 rows=1 loops=3)
               ->  Hash Join  (cost=5.47..90564.24 rows=17818 width=17) (actual time=210.574..350.529 rows=223 loops=3)
                     Hash Cond: (mi.info_type_id = it.id)
                     ->  Nested Loop  (cost=1.93..90512.17 rows=17818 width=21) (actual time=210.431..350.151 rows=223 loops=3)
                           ->  Nested Loop  (cost=1.49..61913.67 rows=13136 width=25) (actual time=210.268..305.218 rows=256 loops=3)
                                 ->  Hash Join  (cost=1.06..35507.44 rows=18928 width=4) (actual time=210.145..295.344 rows=266 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..35097.06 rows=75712 width=8) (actual time=0.064..284.982 rows=98543 loops=3)
                                             Filter: (((note)::text !~~ '%(TV)%'::text) AND ((note)::text ~~ '%(USA)%'::text))
                                             Rows Removed by Filter: 771167
                                       ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.061..0.061 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.031..0.033 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..1.40 rows=1 width=21) (actual time=0.036..0.036 rows=1 loops=798)
                                       Index Cond: (id = mc.movie_id)
                                       Filter: (production_year > 1990)
                                       Rows Removed by Filter: 0
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.16 rows=2 width=8) (actual time=0.155..0.174 rows=1 loops=767)
                                 Index Cond: (movie_id = t.id)
                                 Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,USA,American}'::text[]))
                                 Rows Removed by Filter: 10
                     ->  Hash  (cost=2.13..2.13 rows=113 width=4) (actual time=0.080..0.080 rows=113 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 12kB
                           ->  Seq Scan on info_type it  (cost=0.00..2.13 rows=113 width=4) (actual time=0.026..0.040 rows=113 loops=3)
 Planning Time: 4.160 ms
 Execution Time: 361.492 ms
(32 rows)

SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3852.63..3852.64 rows=1 width=96) (actual time=87.724..87.725 rows=1 loops=1)
   ->  Nested Loop  (cost=8.18..3852.62 rows=1 width=48) (actual time=11.427..87.690 rows=6 loops=1)
         ->  Nested Loop  (cost=7.75..3762.97 rows=196 width=37) (actual time=0.945..50.488 rows=1224 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.19..3753.04 rows=5 width=41) (actual time=0.882..31.704 rows=11 loops=1)
                     ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=20) (actual time=0.829..31.063 rows=14 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=20) (actual time=0.749..30.689 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'marvel-cinematic-universe'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=0.072..0.356 rows=14 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=12
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.043..0.043 rows=14 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.044..0.044 rows=1 loops=14)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2010)
                           Rows Removed by Filter: 0
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.045..1.624 rows=111 loops=11)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.029..0.029 rows=0 loops=1224)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ '%Downey%Robert%'::text)
               Rows Removed by Filter: 1
 Planning Time: 4.668 ms
 Execution Time: 88.126 ms
(26 rows)

SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=12284.35..12284.36 rows=1 width=96) (actual time=931.802..931.803 rows=1 loops=1)
   ->  Nested Loop  (cost=8.18..12284.35 rows=1 width=48) (actual time=82.082..931.742 rows=12 loops=1)
         ->  Nested Loop  (cost=7.75..12283.89 rows=1 width=37) (actual time=24.394..925.292 rows=383 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.19..12281.90 rows=1 width=41) (actual time=24.363..921.465 rows=36 loops=1)
                     ->  Nested Loop  (cost=6.76..12150.15 rows=270 width=20) (actual time=1.084..430.186 rows=35548 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..3632.40 rows=8 width=20) (actual time=0.150..49.781 rows=8 loops=1)
                                 Filter: ((keyword)::text = ANY ('{superhero,sequel,second-part,marvel-comics,based-on-comic,tv-special,fight,violence}'::text[]))
                                 Rows Removed by Filter: 134162
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1061.72 rows=300 width=8) (actual time=1.785..45.223 rows=4444 loops=8)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=23488
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=1.356..1.356 rows=4444 loops=8)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.013..0.013 rows=0 loops=35548)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2014)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.031..0.099 rows=11 loops=36)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.016..0.016 rows=0 loops=383)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ '%Downey%Robert%'::text)
               Rows Removed by Filter: 1
 Planning Time: 4.399 ms
 Execution Time: 932.191 ms
(26 rows)

SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3755.49..3755.50 rows=1 width=96) (actual time=21.441..21.441 rows=1 loops=1)
   ->  Nested Loop  (cost=8.18..3755.48 rows=1 width=48) (actual time=1.827..21.430 rows=2 loops=1)
         ->  Nested Loop  (cost=7.75..3755.03 rows=1 width=37) (actual time=0.980..20.903 rows=33 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.19..3753.04 rows=1 width=41) (actual time=0.920..20.564 rows=2 loops=1)
                     ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=20) (actual time=0.814..19.987 rows=14 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=20) (actual time=0.761..19.761 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'marvel-cinematic-universe'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=0.044..0.208 rows=14 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=12
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.035..0.035 rows=14 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.040..0.040 rows=0 loops=14)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2014)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.053..0.158 rows=16 loops=2)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.015..0.015 rows=0 loops=33)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ '%Downey%Robert%'::text)
               Rows Removed by Filter: 1
 Planning Time: 5.393 ms
 Execution Time: 21.918 ms
(26 rows)

SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=15065.52..15065.53 rows=1 width=96) (actual time=26297.060..26297.060 rows=1 loops=1)
   ->  Nested Loop  (cost=8.18..15065.51 rows=1 width=48) (actual time=623.807..26296.536 rows=88 loops=1)
         ->  Nested Loop  (cost=7.75..12575.89 rows=5443 width=37) (actual time=1.174..9907.907 rows=785477 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.19..12281.90 rows=148 width=41) (actual time=1.121..1249.671 rows=14165 loops=1)
                     ->  Nested Loop  (cost=6.76..12150.15 rows=270 width=20) (actual time=1.070..529.093 rows=35548 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..3632.40 rows=8 width=20) (actual time=0.146..49.340 rows=8 loops=1)
                                 Filter: ((keyword)::text = ANY ('{superhero,sequel,second-part,marvel-comics,based-on-comic,tv-special,fight,violence}'::text[]))
                                 Rows Removed by Filter: 134162
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1061.72 rows=300 width=8) (actual time=1.804..57.363 rows=4444 loops=8)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=23488
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=1.381..1.381 rows=4444 loops=8)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.019..0.019 rows=0 loops=35548)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2000)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.025..0.570 rows=55 loops=14165)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.020..0.020 rows=0 loops=785477)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ '%Downey%Robert%'::text)
               Rows Removed by Filter: 1
 Planning Time: 4.571 ms
 Execution Time: 26297.441 ms
(26 rows)

SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4102.27..4102.28 rows=1 width=96) (actual time=54.989..54.990 rows=1 loops=1)
   ->  Nested Loop  (cost=8.18..4102.27 rows=1 width=48) (actual time=10.423..54.963 rows=6 loops=1)
         ->  Nested Loop  (cost=7.75..3790.78 rows=681 width=37) (actual time=0.993..30.377 rows=1224 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.19..3753.04 rows=19 width=41) (actual time=0.912..18.704 rows=11 loops=1)
                     ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=20) (actual time=0.844..18.177 rows=14 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=20) (actual time=0.773..17.879 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'marvel-cinematic-universe'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=0.063..0.281 rows=14 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=12
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.042..0.042 rows=14 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.036..0.036 rows=1 loops=14)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2000)
                           Rows Removed by Filter: 0
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.038..0.989 rows=111 loops=11)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.019..0.019 rows=0 loops=1224)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ '%Downey%Robert%'::text)
               Rows Removed by Filter: 1
 Planning Time: 5.559 ms
 Execution Time: 55.544 ms
(26 rows)

SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=15092.73..15092.74 rows=1 width=96) (actual time=24380.956..24380.957 rows=1 loops=1)
   ->  Nested Loop  (cost=8.18..15051.90 rows=5443 width=48) (actual time=1.220..23545.794 rows=785477 loops=1)
         ->  Nested Loop  (cost=7.75..12575.89 rows=5443 width=37) (actual time=1.153..9857.391 rows=785477 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.19..12281.90 rows=148 width=41) (actual time=1.103..1133.045 rows=14165 loops=1)
                     ->  Nested Loop  (cost=6.76..12150.15 rows=270 width=20) (actual time=1.056..491.028 rows=35548 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..3632.40 rows=8 width=20) (actual time=0.161..50.252 rows=8 loops=1)
                                 Filter: ((keyword)::text = ANY ('{superhero,sequel,second-part,marvel-comics,based-on-comic,tv-special,fight,violence}'::text[]))
                                 Rows Removed by Filter: 134162
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1061.72 rows=300 width=8) (actual time=1.761..52.633 rows=4444 loops=8)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=23488
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=1.342..1.342 rows=4444 loops=8)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.017..0.017 rows=0 loops=35548)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2000)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.023..0.577 rows=55 loops=14165)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=19) (actual time=0.016..0.016 rows=1 loops=785477)
               Index Cond: (id = ci.person_id)
 Planning Time: 4.615 ms
 Execution Time: 24381.339 ms
(24 rows)

SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=13380.61..13380.62 rows=1 width=64) (actual time=3168.114..3168.114 rows=1 loops=1)
   ->  Nested Loop  (cost=41.24..13380.61 rows=1 width=32) (actual time=148.162..3168.041 rows=32 loops=1)
         ->  Nested Loop  (cost=41.10..13379.60 rows=1 width=36) (actual time=148.097..3167.815 rows=32 loops=1)
               Join Filter: (n.id = an.person_id)
               ->  Nested Loop  (cost=40.67..13379.10 rows=1 width=48) (actual time=148.029..3167.246 rows=14 loops=1)
                     Join Filter: (n.id = pi.person_id)
                     ->  Nested Loop  (cost=40.24..12435.27 rows=974 width=40) (actual time=0.824..2809.208 rows=17559 loops=1)
                           ->  Nested Loop  (cost=39.81..8528.28 rows=8359 width=21) (actual time=0.764..1073.580 rows=105262 loops=1)
                                 ->  Nested Loop  (cost=39.25..7243.89 rows=226 width=25) (actual time=0.679..120.471 rows=1467 loops=1)
                                       ->  Nested Loop  (cost=38.82..245.23 rows=1666 width=4) (actual time=0.592..7.013 rows=5186 loops=1)
                                             ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=4) (actual time=0.032..0.038 rows=1 loops=1)
                                                   Filter: ((link)::text = 'features'::text)
                                                   Rows Removed by Filter: 17
                                             ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..225.26 rows=1875 width=8) (actual time=0.553..4.797 rows=5186 loops=1)
                                                   Recheck Cond: (link_type_id = lt.id)
                                                   Heap Blocks: exact=132
                                                   ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.511..0.511 rows=5186 loops=1)
                                                         Index Cond: (link_type_id = lt.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..4.20 rows=1 width=21) (actual time=0.021..0.021 rows=0 loops=5186)
                                             Index Cond: (id = ml.linked_movie_id)
                                             Filter: ((production_year >= 1980) AND (production_year <= 1995))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..5.31 rows=37 width=8) (actual time=0.028..0.615 rows=72 loops=1467)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Scan using name_pkey on name n  (cost=0.43..0.47 rows=1 width=19) (actual time=0.016..0.016 rows=0 loops=105262)
                                 Index Cond: (id = ci.person_id)
                                 Filter: (((name_pcode_cf)::text >= 'A'::text) AND ((name_pcode_cf)::text <= 'F'::text) AND (((gender)::text = 'm'::text) OR (((gender)::text = 'f'::text) AND ((name)::text ~~ 'B%'::text))))
                                 Rows Removed by Filter: 1
                     ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..0.96 rows=1 width=8) (actual time=0.020..0.020 rows=0 loops=17559)
                           Index Cond: (person_id = ci.person_id)
                           Filter: ((note)::text = 'Volker Boehm'::text)
                           Rows Removed by Filter: 20
               ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.47 rows=2 width=4) (actual time=0.029..0.038 rows=2 loops=14)
                     Index Cond: (person_id = ci.person_id)
                     Filter: ((name)::text ~~ '%a%'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using info_type_pkey on info_type it  (cost=0.14..0.58 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=32)
               Index Cond: (id = pi.info_type_id)
               Filter: ((info)::text = 'mini biography'::text)
 Planning Time: 15.020 ms
 Execution Time: 3168.721 ms
(41 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=9090.16..9090.17 rows=1 width=64) (actual time=799.561..799.561 rows=1 loops=1)
   ->  Nested Loop  (cost=41.24..9090.16 rows=1 width=32) (actual time=30.312..799.507 rows=16 loops=1)
         ->  Nested Loop  (cost=41.10..9089.15 rows=1 width=36) (actual time=30.268..799.396 rows=16 loops=1)
               Join Filter: (n.id = an.person_id)
               ->  Nested Loop  (cost=40.67..9088.65 rows=1 width=48) (actual time=30.228..799.209 rows=8 loops=1)
                     Join Filter: (n.id = pi.person_id)
                     ->  Nested Loop  (cost=40.24..9045.05 rows=45 width=40) (actual time=1.225..781.256 rows=1076 loops=1)
                           ->  Nested Loop  (cost=39.81..8143.65 rows=1960 width=21) (actual time=0.728..340.320 rows=33415 loops=1)
                                 ->  Nested Loop  (cost=39.25..7243.89 rows=53 width=25) (actual time=0.642..104.829 rows=435 loops=1)
                                       ->  Nested Loop  (cost=38.82..245.23 rows=1666 width=4) (actual time=0.571..6.294 rows=5186 loops=1)
                                             ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=4) (actual time=0.028..0.033 rows=1 loops=1)
                                                   Filter: ((link)::text = 'features'::text)
                                                   Rows Removed by Filter: 17
                                             ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..225.26 rows=1875 width=8) (actual time=0.535..4.402 rows=5186 loops=1)
                                                   Recheck Cond: (link_type_id = lt.id)
                                                   Heap Blocks: exact=132
                                                   ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.492..0.492 rows=5186 loops=1)
                                                         Index Cond: (link_type_id = lt.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..4.20 rows=1 width=21) (actual time=0.018..0.018 rows=0 loops=5186)
                                             Index Cond: (id = ml.linked_movie_id)
                                             Filter: ((production_year >= 1980) AND (production_year <= 1984))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..16.61 rows=37 width=8) (actual time=0.026..0.511 rows=77 loops=435)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.012..0.012 rows=0 loops=33415)
                                 Index Cond: (id = ci.person_id)
                                 Filter: (((name_pcode_cf)::text ~~ 'D%'::text) AND ((gender)::text = 'm'::text))
                                 Rows Removed by Filter: 1
                     ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..0.96 rows=1 width=8) (actual time=0.016..0.016 rows=0 loops=1076)
                           Index Cond: (person_id = ci.person_id)
                           Filter: ((note)::text = 'Volker Boehm'::text)
                           Rows Removed by Filter: 16
               ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.47 rows=2 width=4) (actual time=0.015..0.019 rows=2 loops=8)
                     Index Cond: (person_id = ci.person_id)
                     Filter: ((name)::text ~~ '%a%'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using info_type_pkey on info_type it  (cost=0.14..0.58 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=16)
               Index Cond: (id = pi.info_type_id)
               Filter: ((info)::text = 'mini biography'::text)
 Planning Time: 14.619 ms
 Execution Time: 800.166 ms
(41 rows)

SET
                                                                                                             QUERY PLAN                                                                                                              
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=57980.82..57980.83 rows=1 width=64) (actual time=6464.362..6464.363 rows=1 loops=1)
   ->  Nested Loop  (cost=2495.17..57980.79 rows=6 width=109) (actual time=27.501..6069.937 rows=68185 loops=1)
         ->  Hash Join  (cost=2494.74..57976.67 rows=9 width=117) (actual time=27.417..5603.821 rows=109842 loops=1)
               Hash Cond: (ml.link_type_id = lt.id)
               ->  Nested Loop  (cost=2493.42..57975.22 rows=42 width=121) (actual time=27.277..5558.386 rows=127027 loops=1)
                     ->  Nested Loop  (cost=2493.13..57509.04 rows=1361 width=113) (actual time=27.197..3031.489 rows=1618304 loops=1)
                           ->  Nested Loop  (cost=2492.57..57244.88 rows=15 width=121) (actual time=27.131..2061.606 rows=12595 loops=1)
                                 ->  Nested Loop  (cost=2492.14..56116.79 rows=1360 width=102) (actual time=26.866..1364.434 rows=72979 loops=1)
                                       ->  Nested Loop  (cost=2491.71..55265.79 rows=735 width=98) (actual time=26.727..770.846 rows=84183 loops=1)
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.037..0.052 rows=1 loops=1)
                                                   Filter: ((info)::text = 'mini biography'::text)
                                                   Rows Removed by Filter: 112
                                             ->  Bitmap Heap Scan on person_info pi  (cost=2491.71..55225.61 rows=3776 width=102) (actual time=26.680..748.365 rows=84183 loops=1)
                                                   Recheck Cond: (info_type_id = it.id)
                                                   Filter: (note IS NOT NULL)
                                                   Rows Removed by Filter: 1
                                                   Heap Blocks: exact=40537
                                                   ->  Bitmap Index Scan on info_type_id_person_info  (cost=0.00..2490.77 rows=134712 width=0) (actual time=19.479..19.479 rows=84184 loops=1)
                                                         Index Cond: (info_type_id = it.id)
                                       ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..1.14 rows=2 width=4) (actual time=0.005..0.006 rows=1 loops=84183)
                                             Index Cond: (person_id = pi.person_id)
                                             Filter: ((name IS NOT NULL) AND (((name)::text ~~ '%a%'::text) OR ((name)::text ~~ 'A%'::text)))
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using name_pkey on name n  (cost=0.43..0.83 rows=1 width=19) (actual time=0.009..0.009 rows=0 loops=72979)
                                       Index Cond: (id = an.person_id)
                                       Filter: (((name_pcode_cf)::text >= 'A'::text) AND ((name_pcode_cf)::text <= 'F'::text) AND (((gender)::text = 'm'::text) OR (((gender)::text = 'f'::text) AND ((name)::text ~~ 'A%'::text))))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using person_id_cast_info on cast_info ci  (cost=0.56..12.48 rows=513 width=8) (actual time=0.014..0.054 rows=128 loops=12595)
                                 Index Cond: (person_id = n.id)
                     ->  Index Scan using linked_movie_id_movie_link on movie_link ml  (cost=0.29..0.32 rows=2 width=8) (actual time=0.001..0.001 rows=0 loops=1618304)
                           Index Cond: (linked_movie_id = ci.movie_id)
               ->  Hash  (cost=1.27..1.27 rows=4 width=4) (actual time=0.064..0.065 rows=4 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                     ->  Seq Scan on link_type lt  (cost=0.00..1.27 rows=4 width=4) (actual time=0.046..0.050 rows=4 loops=1)
                           Filter: ((link)::text = ANY ('{references,"referenced in",features,"featured in"}'::text[]))
                           Rows Removed by Filter: 14
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.46 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=109842)
               Index Cond: (id = ci.movie_id)
               Filter: ((production_year >= 1980) AND (production_year <= 2010))
               Rows Removed by Filter: 0
 Planning Time: 15.143 ms
 Execution Time: 6465.257 ms
(42 rows)

SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=42573.42..42573.43 rows=1 width=64) (actual time=4089.303..4089.304 rows=1 loops=1)
   ->  Gather  (cost=5776.21..42573.41 rows=1 width=33) (actual time=280.930..4097.677 rows=62 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Nested Loop  (cost=4776.21..41573.31 rows=1 width=33) (actual time=315.683..4081.960 rows=21 loops=3)
               ->  Nested Loop  (cost=4775.78..41569.56 rows=5 width=41) (actual time=34.313..4051.425 rows=5793 loops=3)
                     ->  Hash Join  (cost=4775.35..41567.47 rows=2 width=21) (actual time=34.224..4022.000 rows=2479 loops=3)
                           Hash Cond: (ci.role_id = rt.id)
                           ->  Nested Loop  (cost=4774.19..41566.22 rows=25 width=25) (actual time=33.960..4019.103 rows=6533 loops=3)
                                 ->  Nested Loop  (cost=4773.62..41105.65 rows=246 width=25) (actual time=33.454..518.997 rows=16109 loops=3)
                                       ->  Parallel Hash Join  (cost=4773.19..39892.48 rows=246 width=4) (actual time=33.323..303.304 rows=16109 loops=3)
                                             Hash Cond: (mc.company_id = cn.id)
                                             ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..35097.06 rows=8470 width=8) (actual time=0.111..253.818 rows=16299 loops=3)
                                                   Filter: (((note)::text ~~ '%(Japan)%'::text) AND ((note)::text !~~ '%(USA)%'::text))
                                                   Rows Removed by Filter: 853411
                                             ->  Parallel Hash  (cost=4722.92..4722.92 rows=4022 width=4) (actual time=32.724..32.724 rows=2251 loops=3)
                                                   Buckets: 8192  Batches: 1  Memory Usage: 384kB
                                                   ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=4022 width=4) (actual time=0.043..31.060 rows=2251 loops=3)
                                                         Filter: ((country_code)::text = '[jp]'::text)
                                                         Rows Removed by Filter: 76082
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..4.93 rows=1 width=21) (actual time=0.012..0.012 rows=1 loops=48328)
                                             Index Cond: (id = mc.movie_id)
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.86 rows=1 width=12) (actual time=0.209..0.216 rows=0 loops=48328)
                                       Index Cond: (movie_id = t.id)
                                       Filter: ((note)::text = '(voice: English version)'::text)
                                       Rows Removed by Filter: 32
                           ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.072..0.072 rows=1 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                 ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.047..0.049 rows=1 loops=3)
                                       Filter: ((role)::text = 'actress'::text)
                                       Rows Removed by Filter: 11
                     ->  Index Scan using person_id_aka_name on aka_name an1  (cost=0.42..1.03 rows=2 width=20) (actual time=0.009..0.011 rows=2 loops=7438)
                           Index Cond: (person_id = ci.person_id)
               ->  Index Scan using name_pkey on name n1  (cost=0.43..0.75 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=17379)
                     Index Cond: (id = an1.person_id)
                     Filter: (((name)::text ~~ '%Yo%'::text) AND ((name)::text !~~ '%Yu%'::text))
                     Rows Removed by Filter: 1
 Planning Time: 10.101 ms
 Execution Time: 4098.313 ms
(39 rows)

SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=43935.52..43935.53 rows=1 width=64) (actual time=358.396..358.396 rows=1 loops=1)
   ->  Nested Loop  (cost=1002.40..43935.52 rows=1 width=33) (actual time=152.503..358.346 rows=6 loops=1)
         ->  Nested Loop  (cost=1002.27..43935.34 rows=1 width=37) (actual time=152.417..358.245 rows=6 loops=1)
               ->  Nested Loop  (cost=1001.84..43934.59 rows=1 width=45) (actual time=150.720..356.282 rows=171 loops=1)
                     ->  Nested Loop  (cost=1001.42..43933.55 rows=1 width=25) (actual time=150.650..354.033 rows=104 loops=1)
                           Join Filter: (t.id = ci.movie_id)
                           ->  Gather  (cost=1000.85..43788.54 rows=1 width=25) (actual time=150.509..353.201 rows=4 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Nested Loop  (cost=0.85..42788.44 rows=1 width=25) (actual time=231.591..347.290 rows=1 loops=3)
                                       ->  Nested Loop  (cost=0.42..42706.13 rows=10 width=4) (actual time=0.214..277.235 rows=2832 loops=3)
                                             ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..40532.74 rows=338 width=8) (actual time=0.118..251.673 rows=2856 loops=3)
                                                   Filter: (((note)::text ~~ '%(Japan)%'::text) AND ((note)::text !~~ '%(USA)%'::text) AND (((note)::text ~~ '%(2006)%'::text) OR ((note)::text ~~ '%(2007)%'::text)))
                                                   Rows Removed by Filter: 866853
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..6.43 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=8569)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((country_code)::text = '[jp]'::text)
                                                   Rows Removed by Filter: 0
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..8.20 rows=1 width=21) (actual time=0.024..0.024 rows=0 loops=8495)
                                             Index Cond: (id = mc.movie_id)
                                             Filter: ((production_year >= 2006) AND (production_year <= 2007) AND (((title)::text ~~ 'One Piece%'::text) OR ((title)::text ~~ 'Dragon Ball Z%'::text)))
                                             Rows Removed by Filter: 1
                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..145.00 rows=1 width=12) (actual time=0.169..0.500 rows=26 loops=4)
                                 Index Cond: (movie_id = mc.movie_id)
                                 Filter: ((note)::text = '(voice: English version)'::text)
                                 Rows Removed by Filter: 17
                     ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..1.03 rows=2 width=20) (actual time=0.018..0.020 rows=2 loops=104)
                           Index Cond: (person_id = ci.person_id)
               ->  Index Scan using name_pkey on name n  (cost=0.43..0.75 rows=1 width=4) (actual time=0.011..0.011 rows=0 loops=171)
                     Index Cond: (id = an.person_id)
                     Filter: (((name)::text ~~ '%Yo%'::text) AND ((name)::text !~~ '%Yu%'::text))
                     Rows Removed by Filter: 1
         ->  Index Scan using role_type_pkey on role_type rt  (cost=0.14..0.16 rows=1 width=4) (actual time=0.016..0.016 rows=1 loops=6)
               Index Cond: (id = ci.role_id)
               Filter: ((role)::text = 'actress'::text)
 Planning Time: 10.388 ms
 Execution Time: 360.166 ms
(37 rows)

SET
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=507448.30..507448.31 rows=1 width=64) (actual time=7355.701..7355.702 rows=1 loops=1)
   ->  Gather  (cost=507448.08..507448.29 rows=2 width=64) (actual time=7351.492..7479.768 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=506448.08..506448.09 rows=1 width=64) (actual time=7344.519..7344.519 rows=1 loops=3)
               ->  Parallel Hash Join  (cost=369446.57..492488.07 rows=2792002 width=33) (actual time=6818.632..7109.117 rows=829204 loops=3)
                     Hash Cond: (ci.person_id = a1.person_id)
                     ->  Hash Join  (cost=243680.90..334088.98 rows=1215217 width=21) (actual time=4565.755..5023.355 rows=656886 loops=3)
                           Hash Cond: (t.id = ci.movie_id)
                           ->  Parallel Hash Join  (cost=44347.81..110366.87 rows=395029 width=25) (actual time=1141.429..1438.960 rows=384599 loops=3)
                                 Hash Cond: (t.id = mc.movie_id)
                                 ->  Parallel Seq Scan on title t  (cost=0.00..46532.63 rows=1053463 width=21) (actual time=0.049..277.948 rows=842771 loops=3)
                                 ->  Parallel Hash  (cost=37865.94..37865.94 rows=395029 width=4) (actual time=551.001..551.001 rows=384599 loops=3)
                                       Buckets: 131072  Batches: 16  Memory Usage: 3872kB
                                       ->  Parallel Hash Join  (cost=5350.78..37865.94 rows=395029 width=4) (actual time=52.232..425.477 rows=384599 loops=3)
                                             Hash Cond: (mc.company_id = cn.id)
                                             ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=8) (actual time=0.033..172.789 rows=869710 loops=3)
                                             ->  Parallel Hash  (cost=4722.92..4722.92 rows=50229 width=4) (actual time=51.479..51.479 rows=28281 loops=3)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 4384kB
                                                   ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=50229 width=4) (actual time=0.045..34.097 rows=28281 loops=3)
                                                         Filter: ((country_code)::text = '[us]'::text)
                                                         Rows Removed by Filter: 50051
                           ->  Hash  (cost=149779.57..149779.57 rows=3020362 width=8) (actual time=3120.450..3120.450 rows=2728943 loops=3)
                                 Buckets: 131072  Batches: 64  Memory Usage: 2675kB
                                 ->  Nested Loop  (cost=0.56..149779.57 rows=3020362 width=8) (actual time=0.114..2301.117 rows=2728943 loops=3)
                                       ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.032..0.038 rows=1 loops=3)
                                             Filter: ((role)::text = 'writer'::text)
                                             Rows Removed by Filter: 11
                                       ->  Index Scan using role_id_cast_info on cast_info ci  (cost=0.56..116829.02 rows=3294940 width=12) (actual time=0.071..1891.177 rows=2728943 loops=3)
                                             Index Cond: (role_id = rt.id)
                     ->  Parallel Hash  (cost=118870.18..118870.18 rows=375560 width=24) (actual time=1531.747..1531.747 rows=300448 loops=3)
                           Buckets: 65536  Batches: 16  Memory Usage: 3872kB
                           ->  Parallel Hash Join  (cost=22047.10..118870.18 rows=375560 width=24) (actual time=1049.834..1413.821 rows=300448 loops=3)
                                 Hash Cond: (n1.id = a1.person_id)
                                 ->  Parallel Seq Scan on name n1  (cost=0.00..72977.55 rows=1736455 width=4) (actual time=0.053..423.804 rows=1389164 loops=3)
                                 ->  Parallel Hash  (cost=15151.60..15151.60 rows=375560 width=20) (actual time=210.807..210.807 rows=300448 loops=3)
                                       Buckets: 65536  Batches: 16  Memory Usage: 3712kB
                                       ->  Parallel Seq Scan on aka_name a1  (cost=0.00..15151.60 rows=375560 width=20) (actual time=0.037..96.364 rows=300448 loops=3)
 Planning Time: 8.723 ms
 Execution Time: 7480.418 ms
(40 rows)

SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=507448.30..507448.31 rows=1 width=64) (actual time=3524.267..3524.268 rows=1 loops=1)
   ->  Gather  (cost=507448.08..507448.29 rows=2 width=64) (actual time=3520.649..3622.579 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=506448.08..506448.09 rows=1 width=64) (actual time=3513.859..3513.859 rows=1 loops=3)
               ->  Parallel Hash Join  (cost=369446.57..492488.07 rows=2792002 width=33) (actual time=3411.017..3483.213 rows=107668 loops=3)
                     Hash Cond: (ci.person_id = an1.person_id)
                     ->  Hash Join  (cost=243680.90..334088.98 rows=1215217 width=21) (actual time=1624.676..1889.837 rows=95179 loops=3)
                           Hash Cond: (t.id = ci.movie_id)
                           ->  Parallel Hash Join  (cost=44347.81..110366.87 rows=395029 width=25) (actual time=1109.876..1408.985 rows=384599 loops=3)
                                 Hash Cond: (t.id = mc.movie_id)
                                 ->  Parallel Seq Scan on title t  (cost=0.00..46532.63 rows=1053463 width=21) (actual time=0.060..262.756 rows=842771 loops=3)
                                 ->  Parallel Hash  (cost=37865.94..37865.94 rows=395029 width=4) (actual time=535.587..535.587 rows=384599 loops=3)
                                       Buckets: 131072  Batches: 16  Memory Usage: 3904kB
                                       ->  Parallel Hash Join  (cost=5350.78..37865.94 rows=395029 width=4) (actual time=50.230..412.449 rows=384599 loops=3)
                                             Hash Cond: (mc.company_id = cn.id)
                                             ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=8) (actual time=0.054..166.349 rows=869710 loops=3)
                                             ->  Parallel Hash  (cost=4722.92..4722.92 rows=50229 width=4) (actual time=49.816..49.817 rows=28281 loops=3)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 4384kB
                                                   ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=50229 width=4) (actual time=0.080..36.866 rows=28281 loops=3)
                                                         Filter: ((country_code)::text = '[us]'::text)
                                                         Rows Removed by Filter: 50051
                           ->  Hash  (cost=149779.57..149779.57 rows=3020362 width=8) (actual time=211.588..211.588 rows=276403 loops=3)
                                 Buckets: 131072  Batches: 64  Memory Usage: 1193kB
                                 ->  Nested Loop  (cost=0.56..149779.57 rows=3020362 width=8) (actual time=0.165..129.454 rows=276403 loops=3)
                                       ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.038..0.045 rows=1 loops=3)
                                             Filter: ((role)::text = 'costume designer'::text)
                                             Rows Removed by Filter: 11
                                       ->  Index Scan using role_id_cast_info on cast_info ci  (cost=0.56..116829.02 rows=3294940 width=12) (actual time=0.118..88.651 rows=276403 loops=3)
                                             Index Cond: (role_id = rt.id)
                     ->  Parallel Hash  (cost=118870.18..118870.18 rows=375560 width=24) (actual time=1472.812..1472.812 rows=300448 loops=3)
                           Buckets: 65536  Batches: 16  Memory Usage: 3872kB
                           ->  Parallel Hash Join  (cost=22047.10..118870.18 rows=375560 width=24) (actual time=1003.056..1355.514 rows=300448 loops=3)
                                 Hash Cond: (n1.id = an1.person_id)
                                 ->  Parallel Seq Scan on name n1  (cost=0.00..72977.55 rows=1736455 width=4) (actual time=0.069..401.363 rows=1389164 loops=3)
                                 ->  Parallel Hash  (cost=15151.60..15151.60 rows=375560 width=20) (actual time=208.319..208.319 rows=300448 loops=3)
                                       Buckets: 65536  Batches: 16  Memory Usage: 3712kB
                                       ->  Parallel Seq Scan on aka_name an1  (cost=0.00..15151.60 rows=375560 width=20) (actual time=0.037..95.262 rows=300448 loops=3)
 Planning Time: 10.779 ms
 Execution Time: 3623.230 ms
(40 rows)

SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=83284.29..83284.30 rows=1 width=96) (actual time=558.458..558.458 rows=1 loops=1)
   ->  Nested Loop  (cost=1003.86..83284.28 rows=1 width=49) (actual time=224.369..558.319 rows=121 loops=1)
         ->  Nested Loop  (cost=1003.44..83283.79 rows=1 width=53) (actual time=224.294..556.659 rows=123 loops=1)
               Join Filter: (ci.movie_id = mc.movie_id)
               ->  Gather  (cost=1003.01..83283.14 rows=1 width=57) (actual time=223.577..555.834 rows=139 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Nested Loop  (cost=3.01..82283.04 rows=1 width=57) (actual time=219.273..549.612 rows=46 loops=3)
                           ->  Nested Loop  (cost=2.58..82282.39 rows=1 width=45) (actual time=218.895..548.631 rows=52 loops=3)
                                 ->  Hash Join  (cost=2.15..82281.10 rows=2 width=24) (actual time=214.733..545.380 rows=142 loops=3)
                                       Hash Cond: (ci.role_id = rt.id)
                                       ->  Nested Loop  (cost=0.99..82279.86 rows=19 width=28) (actual time=214.524..545.077 rows=142 loops=3)
                                             Join Filter: (n.id = ci.person_id)
                                             ->  Nested Loop  (cost=0.42..82155.48 rows=9 width=24) (actual time=208.352..522.025 rows=519 loops=3)
                                                   ->  Parallel Seq Scan on name n  (cost=0.00..81659.82 rows=40 width=4) (actual time=207.631..495.703 rows=2256 loops=3)
                                                         Filter: (((name)::text ~~ '%Ang%'::text) AND ((gender)::text = 'f'::text))
                                                         Rows Removed by Filter: 1386908
                                                   ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..12.37 rows=2 width=20) (actual time=0.010..0.011 rows=0 loops=6768)
                                                         Index Cond: (person_id = n.id)
                                             ->  Index Scan using person_id_cast_info on cast_info ci  (cost=0.56..13.67 rows=12 width=16) (actual time=0.041..0.043 rows=0 loops=1558)
                                                   Index Cond: (person_id = an.person_id)
                                                   Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                   Rows Removed by Filter: 44
                                       ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.060..0.060 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.030..0.032 rows=1 loops=3)
                                                   Filter: ((role)::text = 'actress'::text)
                                                   Rows Removed by Filter: 11
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.65 rows=1 width=21) (actual time=0.022..0.022 rows=0 loops=425)
                                       Index Cond: (id = ci.movie_id)
                                       Filter: ((production_year >= 2005) AND (production_year <= 2015))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.65 rows=1 width=20) (actual time=0.018..0.018 rows=1 loops=155)
                                 Index Cond: (id = ci.person_role_id)
               ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.64 rows=1 width=8) (actual time=0.020..0.026 rows=1 loops=139)
                     Index Cond: (movie_id = t.id)
                     Filter: ((note IS NOT NULL) AND (((note)::text ~~ '%(USA)%'::text) OR ((note)::text ~~ '%(worldwide)%'::text)))
                     Rows Removed by Filter: 5
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.49 rows=1 width=4) (actual time=0.013..0.013 rows=1 loops=123)
               Index Cond: (id = mc.company_id)
               Filter: ((country_code)::text = '[us]'::text)
               Rows Removed by Filter: 0
 Planning Time: 15.214 ms
 Execution Time: 561.985 ms
(44 rows)

SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=83272.11..83272.12 rows=1 width=128) (actual time=563.340..563.341 rows=1 loops=1)
   ->  Nested Loop  (cost=1003.86..83272.10 rows=1 width=64) (actual time=241.990..563.269 rows=40 loops=1)
         ->  Nested Loop  (cost=1003.43..83271.40 rows=1 width=55) (actual time=233.248..562.423 rows=94 loops=1)
               ->  Nested Loop  (cost=1003.01..83270.82 rows=1 width=59) (actual time=233.189..561.551 rows=94 loops=1)
                     ->  Gather  (cost=1002.58..83270.12 rows=1 width=47) (actual time=233.086..565.016 rows=103 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop  (cost=2.58..82270.02 rows=1 width=47) (actual time=225.947..555.438 rows=34 loops=3)
                                 ->  Hash Join  (cost=2.15..82269.31 rows=1 width=39) (actual time=225.574..553.090 rows=88 loops=3)
                                       Hash Cond: (ci.role_id = rt.id)
                                       ->  Nested Loop  (cost=0.99..82268.09 rows=15 width=43) (actual time=225.349..552.813 rows=88 loops=3)
                                             Join Filter: (n.id = ci.person_id)
                                             ->  Nested Loop  (cost=0.42..82155.48 rows=9 width=39) (actual time=220.769..541.788 rows=432 loops=3)
                                                   ->  Parallel Seq Scan on name n  (cost=0.00..81659.82 rows=40 width=19) (actual time=219.459..524.127 rows=1803 loops=3)
                                                         Filter: (((name)::text ~~ '%Angel%'::text) AND ((gender)::text = 'f'::text))
                                                         Rows Removed by Filter: 1387361
                                                   ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..12.37 rows=2 width=20) (actual time=0.009..0.009 rows=0 loops=5409)
                                                         Index Cond: (person_id = n.id)
                                             ->  Index Scan using person_id_cast_info on cast_info ci  (cost=0.56..12.39 rows=10 width=16) (actual time=0.023..0.025 rows=0 loops=1296)
                                                   Index Cond: (person_id = an.person_id)
                                                   Filter: ((note)::text = '(voice)'::text)
                                                   Rows Removed by Filter: 43
                                       ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.056..0.056 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.034..0.036 rows=1 loops=3)
                                                   Filter: ((role)::text = 'actress'::text)
                                                   Rows Removed by Filter: 11
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.70 rows=1 width=8) (actual time=0.023..0.026 rows=0 loops=265)
                                       Index Cond: (movie_id = ci.movie_id)
                                       Filter: (((note)::text ~~ '%(200%)%'::text) AND (((note)::text ~~ '%(USA)%'::text) OR ((note)::text ~~ '%(worldwide)%'::text)))
                                       Rows Removed by Filter: 4
                     ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.70 rows=1 width=20) (actual time=0.011..0.011 rows=1 loops=103)
                           Index Cond: (id = ci.person_role_id)
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.59 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=94)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text = '[us]'::text)
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.69 rows=1 width=21) (actual time=0.008..0.008 rows=0 loops=94)
               Index Cond: (id = ci.movie_id)
               Filter: ((production_year >= 2007) AND (production_year <= 2010))
               Rows Removed by Filter: 1
 Planning Time: 14.233 ms
 Execution Time: 568.681 ms
(42 rows)

SET
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=160431.48..160431.49 rows=1 width=128) (actual time=918.355..918.355 rows=1 loops=1)
   ->  Gather  (cost=160431.25..160431.46 rows=2 width=128) (actual time=917.449..923.190 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=159431.25..159431.26 rows=1 width=128) (actual time=910.371..910.372 rows=1 loops=3)
               ->  Nested Loop  (cost=81913.67..159427.47 rows=378 width=64) (actual time=517.251..908.081 rows=2715 loops=3)
                     Join Filter: (ci.movie_id = t.id)
                     ->  Nested Loop  (cost=81913.24..159228.71 rows=378 width=55) (actual time=517.126..890.261 rows=2715 loops=3)
                           ->  Nested Loop  (cost=81912.82..158764.41 rows=1042 width=59) (actual time=515.439..852.885 rows=6115 loops=3)
                                 ->  Nested Loop  (cost=81912.39..158495.75 rows=392 width=51) (actual time=515.306..826.466 rows=2575 loops=3)
                                       ->  Hash Join  (cost=81911.96..157967.51 rows=810 width=39) (actual time=515.172..805.130 rows=2735 loops=3)
                                             Hash Cond: (ci.role_id = rt.id)
                                             ->  Nested Loop  (cost=81910.80..157931.79 rows=9727 width=43) (actual time=514.974..803.659 rows=2735 loops=3)
                                                   Join Filter: (n.id = ci.person_id)
                                                   ->  Parallel Hash Join  (cost=81910.23..98047.67 rows=4333 width=39) (actual time=511.799..654.369 rows=3508 loops=3)
                                                         Hash Cond: (an.person_id = n.id)
                                                         ->  Parallel Seq Scan on aka_name an  (cost=0.00..15151.60 rows=375560 width=20) (actual time=0.029..77.819 rows=300448 loops=3)
                                                         ->  Parallel Hash  (cost=81659.82..81659.82 rows=20033 width=19) (actual time=510.813..510.814 rows=16670 loops=3)
                                                               Buckets: 65536  Batches: 1  Memory Usage: 3296kB
                                                               ->  Parallel Seq Scan on name n  (cost=0.00..81659.82 rows=20033 width=19) (actual time=208.467..497.756 rows=16670 loops=3)
                                                                     Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                                                     Rows Removed by Filter: 1372493
                                                   ->  Index Scan using person_id_cast_info on cast_info ci  (cost=0.56..13.67 rows=12 width=16) (actual time=0.038..0.041 rows=1 loops=10525)
                                                         Index Cond: (person_id = an.person_id)
                                                         Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                         Rows Removed by Filter: 44
                                             ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.068..0.068 rows=1 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.041..0.043 rows=1 loops=3)
                                                         Filter: ((role)::text = 'actress'::text)
                                                         Rows Removed by Filter: 11
                                       ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.65 rows=1 width=20) (actual time=0.007..0.007 rows=1 loops=8204)
                                             Index Cond: (id = ci.person_role_id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.64 rows=5 width=8) (actual time=0.007..0.009 rows=2 loops=7726)
                                       Index Cond: (movie_id = ci.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.006..0.006 rows=0 loops=18345)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.51 rows=1 width=21) (actual time=0.006..0.006 rows=1 loops=8144)
                           Index Cond: (id = mc.movie_id)
 Planning Time: 14.459 ms
 Execution Time: 923.890 ms
(43 rows)

SET
                                                                                                  QUERY PLAN                                                                                                  
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=210684.16..210684.17 rows=1 width=128) (actual time=5589.626..5589.626 rows=1 loops=1)
   ->  Gather  (cost=210683.93..210684.14 rows=2 width=128) (actual time=5589.608..5590.968 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=209683.93..209683.94 rows=1 width=128) (actual time=5571.306..5571.307 rows=1 loops=3)
               ->  Nested Loop  (cost=140734.47..209608.99 rows=7494 width=64) (actual time=2955.675..5474.112 rows=161027 loops=3)
                     ->  Nested Loop  (cost=140734.04..207853.12 rows=3262 width=56) (actual time=2955.429..5066.316 rows=57856 loops=3)
                           Join Filter: (ci.movie_id = t.id)
                           ->  Nested Loop  (cost=140733.61..206137.89 rows=3262 width=47) (actual time=2955.352..4648.692 rows=57856 loops=3)
                                 ->  Nested Loop  (cost=140733.18..201739.10 rows=6745 width=35) (actual time=2955.266..4091.341 rows=63155 loops=3)
                                       ->  Hash Join  (cost=140732.75..179459.15 rows=29530 width=16) (actual time=2955.170..3595.458 rows=63185 loops=3)
                                             Hash Cond: (mc.movie_id = ci.movie_id)
                                             ->  Parallel Hash Join  (cost=5350.78..37865.94 rows=395029 width=4) (actual time=50.724..458.896 rows=384599 loops=3)
                                                   Hash Cond: (mc.company_id = cn.id)
                                                   ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=8) (actual time=0.048..171.059 rows=869710 loops=3)
                                                   ->  Parallel Hash  (cost=4722.92..4722.92 rows=50229 width=4) (actual time=49.329..49.329 rows=28281 loops=3)
                                                         Buckets: 131072  Batches: 1  Memory Usage: 4384kB
                                                         ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=50229 width=4) (actual time=0.056..32.833 rows=28281 loops=3)
                                                               Filter: ((country_code)::text = '[us]'::text)
                                                               Rows Removed by Filter: 50051
                                             ->  Hash  (cost=134105.54..134105.54 rows=73395 width=12) (actual time=2901.692..2901.692 rows=276166 loops=3)
                                                   Buckets: 131072 (originally 131072)  Batches: 4 (originally 2)  Memory Usage: 3984kB
                                                   ->  Nested Loop  (cost=0.56..134105.54 rows=73395 width=12) (actual time=0.303..2767.312 rows=276166 loops=3)
                                                         ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.030..0.035 rows=1 loops=3)
                                                               Filter: ((role)::text = 'actress'::text)
                                                               Rows Removed by Filter: 11
                                                         ->  Index Scan using role_id_cast_info on cast_info ci  (cost=0.56..133303.71 rows=80067 width=16) (actual time=0.267..2729.369 rows=276166 loops=3)
                                                               Index Cond: (role_id = rt.id)
                                                               Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                               Rows Removed by Filter: 7175807
                                       ->  Index Scan using name_pkey on name n  (cost=0.43..0.75 rows=1 width=19) (actual time=0.007..0.007 rows=1 loops=189554)
                                             Index Cond: (id = ci.person_id)
                                             Filter: ((gender)::text = 'f'::text)
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.65 rows=1 width=20) (actual time=0.008..0.008 rows=1 loops=189464)
                                       Index Cond: (id = ci.person_role_id)
                           ->  Index Scan using title_pkey on title t  (cost=0.43..0.51 rows=1 width=21) (actual time=0.006..0.006 rows=1 loops=173567)
                                 Index Cond: (id = mc.movie_id)
                     ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.52 rows=2 width=20) (actual time=0.005..0.006 rows=3 loops=173567)
                           Index Cond: (person_id = n.id)
 Planning Time: 15.041 ms
 Execution Time: 5591.687 ms
(42 rows)

