SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=46738.99..46739.00 rows=1 width=64) (actual time=1204.710..1204.711 rows=1 loops=1)
   ->  Gather  (cost=46738.77..46738.98 rows=2 width=64) (actual time=1204.071..1210.908 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=45738.77..45738.78 rows=1 width=64) (actual time=1196.677..1196.678 rows=1 loops=3)
               ->  Nested Loop  (cost=4735.95..45738.76 rows=2 width=33) (actual time=181.510..1196.539 rows=35 loops=3)
                     ->  Nested Loop  (cost=4735.82..45738.46 rows=2 width=37) (actual time=181.408..1196.221 rows=35 loops=3)
                           ->  Hash Join  (cost=4735.39..45712.02 rows=5 width=25) (actual time=181.271..1194.831 rows=37 loops=3)
                                 Hash Cond: (ci.role_id = rt.id)
                                 ->  Nested Loop  (cost=4734.23..45710.67 rows=54 width=29) (actual time=181.041..1194.524 rows=50 loops=3)
                                       Join Filter: (t.id = ci.movie_id)
                                       ->  Nested Loop  (cost=4733.66..40594.00 rows=2624 width=29) (actual time=35.912..405.694 rows=1513 loops=3)
                                             ->  Parallel Hash Join  (cost=4733.23..37248.39 rows=6486 width=8) (actual time=35.689..329.668 rows=2930 loops=3)
                                                   Hash Cond: (mc.company_id = cn.id)
                                                   ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=12) (actual time=0.056..167.258 rows=869710 loops=3)
                                                   ->  Parallel Hash  (cost=4722.92..4722.92 rows=825 width=4) (actual time=34.773..34.774 rows=454 loops=3)
                                                         Buckets: 2048  Batches: 1  Memory Usage: 112kB
                                                         ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=825 width=4) (actual time=0.094..34.229 rows=454 loops=3)
                                                               Filter: ((country_code)::text = '[ru]'::text)
                                                               Rows Removed by Filter: 77879
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..0.52 rows=1 width=21) (actual time=0.025..0.025 rows=1 loops=8790)
                                                   Index Cond: (id = mc.movie_id)
                                                   Filter: (production_year > 2005)
                                                   Rows Removed by Filter: 0
                                       ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.94 rows=1 width=12) (actual time=0.488..0.520 rows=0 loops=4539)
                                             Index Cond: (movie_id = mc.movie_id)
                                             Filter: (((note)::text ~~ '%(voice)%'::text) AND ((note)::text ~~ '%(uncredited)%'::text))
                                             Rows Removed by Filter: 50
                                 ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.070..0.070 rows=1 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.046..0.049 rows=1 loops=3)
                                             Filter: ((role)::text = 'actor'::text)
                                             Rows Removed by Filter: 11
                           ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..5.29 rows=1 width=20) (actual time=0.035..0.035 rows=1 loops=112)
                                 Index Cond: (id = ci.person_role_id)
                     ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=104)
                           Index Cond: (id = mc.company_type_id)
                           Heap Fetches: 104
 Planning Time: 9.334 ms
 Execution Time: 1211.575 ms
(40 rows)

SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=43565.51..43565.52 rows=1 width=64) (actual time=565.260..565.260 rows=1 loops=1)
   ->  Gather  (cost=43565.29..43565.50 rows=2 width=64) (actual time=564.982..570.587 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=42565.29..42565.30 rows=1 width=64) (actual time=557.977..557.978 rows=1 loops=3)
               ->  Hash Join  (cost=4736.91..42565.02 rows=55 width=33) (actual time=557.971..557.971 rows=0 loops=3)
                     Hash Cond: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=4735.82..42563.63 rows=55 width=37) (actual time=557.777..557.777 rows=0 loops=3)
                           ->  Hash Join  (cost=4735.39..42496.51 rows=115 width=25) (actual time=557.776..557.776 rows=0 loops=3)
                                 Hash Cond: (ci.role_id = rt.id)
                                 ->  Nested Loop  (cost=4734.23..42490.46 rows=1377 width=29) (actual time=36.685..557.341 rows=871 loops=3)
                                       Join Filter: (t.id = ci.movie_id)
                                       ->  Nested Loop  (cost=4733.66..40594.00 rows=1021 width=29) (actual time=34.735..387.486 rows=420 loops=3)
                                             ->  Parallel Hash Join  (cost=4733.23..37248.39 rows=6486 width=8) (actual time=32.732..321.845 rows=2930 loops=3)
                                                   Hash Cond: (mc.company_id = cn.id)
                                                   ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=12) (actual time=0.045..162.846 rows=869710 loops=3)
                                                   ->  Parallel Hash  (cost=4722.92..4722.92 rows=825 width=4) (actual time=31.639..31.639 rows=454 loops=3)
                                                         Buckets: 2048  Batches: 1  Memory Usage: 112kB
                                                         ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=825 width=4) (actual time=0.088..31.098 rows=454 loops=3)
                                                               Filter: ((country_code)::text = '[ru]'::text)
                                                               Rows Removed by Filter: 77879
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..0.52 rows=1 width=21) (actual time=0.021..0.021 rows=0 loops=8790)
                                                   Index Cond: (id = mc.movie_id)
                                                   Filter: (production_year > 2010)
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.84 rows=1 width=12) (actual time=0.210..0.403 rows=2 loops=1259)
                                             Index Cond: (movie_id = mc.movie_id)
                                             Filter: ((note)::text ~~ '%(producer)%'::text)
                                             Rows Removed by Filter: 44
                                 ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.052..0.053 rows=1 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.040..0.043 rows=1 loops=3)
                                             Filter: ((role)::text = 'actor'::text)
                                             Rows Removed by Filter: 11
                           ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.58 rows=1 width=20) (never executed)
                                 Index Cond: (id = ci.person_role_id)
                     ->  Hash  (cost=1.04..1.04 rows=4 width=4) (actual time=0.065..0.065 rows=4 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.042..0.044 rows=4 loops=3)
 Planning Time: 9.125 ms
 Execution Time: 571.211 ms
(41 rows)

SET
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=652016.30..652016.31 rows=1 width=64) (actual time=5202.722..5202.722 rows=1 loops=1)
   ->  Gather  (cost=652016.08..652016.29 rows=2 width=64) (actual time=5199.368..5404.877 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=651016.08..651016.09 rows=1 width=64) (actual time=5192.553..5192.553 rows=1 loops=3)
               ->  Hash Join  (cost=609518.31..650122.02 rows=178812 width=33) (actual time=5148.951..5192.529 rows=3 loops=3)
                     Hash Cond: (ci.role_id = rt.id)
                     ->  Hash Join  (cost=609517.04..649485.59 rows=178812 width=37) (actual time=5148.665..5192.242 rows=3 loops=3)
                           Hash Cond: (mc.company_type_id = ct.id)
                           ->  Parallel Hash Join  (cost=609515.95..648517.80 rows=178812 width=41) (actual time=5148.558..5192.132 rows=3 loops=3)
                                 Hash Cond: (mc.movie_id = t.id)
                                 ->  Parallel Hash Join  (cost=5350.78..37865.94 rows=395029 width=8) (actual time=41.173..417.318 rows=384599 loops=3)
                                       Hash Cond: (mc.company_id = cn.id)
                                       ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=12) (actual time=0.032..169.614 rows=869710 loops=3)
                                       ->  Parallel Hash  (cost=4722.92..4722.92 rows=50229 width=4) (actual time=41.006..41.006 rows=28281 loops=3)
                                             Buckets: 131072  Batches: 1  Memory Usage: 4384kB
                                             ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=50229 width=4) (actual time=0.068..29.547 rows=28281 loops=3)
                                                   Filter: ((country_code)::text = '[us]'::text)
                                                   Rows Removed by Filter: 50051
                                 ->  Parallel Hash  (cost=600222.44..600222.44 rows=185178 width=45) (actual time=4576.084..4576.084 rows=4 loops=3)
                                       Buckets: 65536  Batches: 16  Memory Usage: 544kB
                                       ->  Parallel Hash Join  (cost=136144.88..600222.44 rows=185178 width=45) (actual time=4471.102..4574.734 rows=4 loops=3)
                                             Hash Cond: (ci.movie_id = t.id)
                                             ->  Parallel Hash Join  (cost=73555.68..529520.84 rows=266824 width=24) (actual time=3811.483..3939.147 rows=5 loops=3)
                                                   Hash Cond: (ci.person_role_id = chn.id)
                                                   ->  Parallel Seq Scan on cast_info ci  (cost=0.00..441459.62 rows=551821 width=12) (actual time=319.535..2847.451 rows=478480 loops=3)
                                                         Filter: ((note)::text ~~ '%(producer)%'::text)
                                                         Rows Removed by Filter: 11602968
                                                   ->  Parallel Hash  (cost=49532.75..49532.75 rows=1308475 width=20) (actual time=697.869..697.869 rows=1046780 loops=3)
                                                         Buckets: 65536  Batches: 64  Memory Usage: 3232kB
                                                         ->  Parallel Seq Scan on char_name chn  (cost=0.00..49532.75 rows=1308475 width=20) (actual time=0.054..306.548 rows=1046780 loops=3)
                                             ->  Parallel Hash  (cost=49166.29..49166.29 rows=731112 width=21) (actual time=509.749..509.749 rows=583011 loops=3)
                                                   Buckets: 65536  Batches: 32  Memory Usage: 3616kB
                                                   ->  Parallel Seq Scan on title t  (cost=0.00..49166.29 rows=731112 width=21) (actual time=0.042..285.083 rows=583011 loops=3)
                                                         Filter: (production_year > 1990)
                                                         Rows Removed by Filter: 259760
                           ->  Hash  (cost=1.04..1.04 rows=4 width=4) (actual time=0.044..0.044 rows=4 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                 ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.027..0.029 rows=4 loops=3)
                     ->  Hash  (cost=1.12..1.12 rows=12 width=4) (actual time=0.058..0.058 rows=12 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on role_type rt  (cost=0.00..1.12 rows=12 width=4) (actual time=0.031..0.034 rows=12 loops=3)
 Planning Time: 9.130 ms
 Execution Time: 5405.565 ms
(44 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3754.86..3754.87 rows=1 width=96) (actual time=243.844..243.844 rows=1 loops=1)
   ->  Nested Loop  (cost=8.32..3754.85 rows=1 width=118) (actual time=6.465..243.400 rows=310 loops=1)
         Join Filter: (mc.company_type_id = ct.id)
         Rows Removed by Join Filter: 20
         ->  Nested Loop  (cost=8.32..3753.79 rows=1 width=122) (actual time=6.442..240.642 rows=330 loops=1)
               ->  Nested Loop  (cost=7.90..3753.33 rows=1 width=107) (actual time=5.727..236.919 rows=705 loops=1)
                     Join Filter: (ml.movie_id = mc.movie_id)
                     ->  Nested Loop  (cost=7.47..3752.76 rows=1 width=111) (actual time=5.684..234.986 rows=152 loops=1)
                           Join Filter: (ml.movie_id = t.id)
                           ->  Nested Loop  (cost=7.04..3752.25 rows=1 width=90) (actual time=5.504..233.403 rows=199 loops=1)
                                 Join Filter: (ml.link_type_id = lt.id)
                                 Rows Removed by Join Filter: 303
                                 ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.049..0.059 rows=2 loops=1)
                                       Filter: ((link)::text ~~ '%follow%'::text)
                                       Rows Removed by Filter: 16
                                 ->  Nested Loop  (cost=7.04..3750.90 rows=10 width=12) (actual time=4.767..116.624 rows=251 loops=2)
                                       ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=4.756..94.280 rows=10544 loops=2)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.269..23.440 rows=1 loops=2)
                                                   Filter: ((keyword)::text = 'sequel'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=3.433..68.197 rows=10544 loops=2)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=11140
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=2.662..2.662 rows=10544 loops=2)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.002..0.002 rows=0 loops=21088)
                                             Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.007..0.007 rows=1 loops=199)
                                 Index Cond: (id = mk.movie_id)
                                 Filter: ((production_year >= 1950) AND (production_year <= 2000))
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=12) (actual time=0.008..0.011 rows=5 loops=152)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: (note IS NULL)
                           Rows Removed by Filter: 1
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.005..0.005 rows=0 loops=705)
                     Index Cond: (id = mc.company_id)
                     Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                     Rows Removed by Filter: 1
         ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=330)
               Filter: ((kind)::text = 'production companies'::text)
               Rows Removed by Filter: 1
 Planning Time: 13.268 ms
 Execution Time: 244.418 ms
(44 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3754.86..3754.87 rows=1 width=96) (actual time=61.896..61.897 rows=1 loops=1)
   ->  Nested Loop  (cost=8.32..3754.85 rows=1 width=118) (actual time=5.351..61.863 rows=14 loops=1)
         Join Filter: (mc.company_type_id = ct.id)
         ->  Nested Loop  (cost=8.32..3753.79 rows=1 width=122) (actual time=5.328..61.734 rows=14 loops=1)
               ->  Nested Loop  (cost=7.90..3753.33 rows=1 width=107) (actual time=5.306..61.585 rows=21 loops=1)
                     Join Filter: (ml.movie_id = mc.movie_id)
                     ->  Nested Loop  (cost=7.47..3752.76 rows=1 width=111) (actual time=5.279..61.519 rows=7 loops=1)
                           Join Filter: (ml.movie_id = t.id)
                           ->  Nested Loop  (cost=7.04..3752.25 rows=1 width=90) (actual time=4.448..61.044 rows=64 loops=1)
                                 Join Filter: (ml.link_type_id = lt.id)
                                 Rows Removed by Join Filter: 187
                                 ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.013..0.019 rows=1 loops=1)
                                       Filter: ((link)::text ~~ '%follows%'::text)
                                       Rows Removed by Filter: 17
                                 ->  Nested Loop  (cost=7.04..3750.90 rows=10 width=12) (actual time=4.430..60.988 rows=251 loops=1)
                                       ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=4.421..45.051 rows=10544 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.032..18.608 rows=1 loops=1)
                                                   Filter: ((keyword)::text = 'sequel'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=3.380..24.470 rows=10544 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=5570
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=2.601..2.601 rows=10544 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.001..0.001 rows=0 loops=10544)
                                             Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.007..0.007 rows=0 loops=64)
                                 Index Cond: (id = mk.movie_id)
                                 Filter: (((title)::text ~~ '%Money%'::text) AND (production_year = 1998))
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=12) (actual time=0.006..0.008 rows=3 loops=7)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: (note IS NULL)
                           Rows Removed by Filter: 1
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.006..0.006 rows=1 loops=21)
                     Index Cond: (id = mc.company_id)
                     Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                     Rows Removed by Filter: 0
         ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=14)
               Filter: ((kind)::text = 'production companies'::text)
               Rows Removed by Filter: 1
 Planning Time: 12.769 ms
 Execution Time: 62.540 ms
(43 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=6178.62..6178.63 rows=1 width=96) (actual time=606.591..606.591 rows=1 loops=1)
   ->  Nested Loop  (cost=8.32..6178.61 rows=1 width=60) (actual time=5.541..596.250 rows=6946 loops=1)
         Join Filter: (ml.movie_id = t.id)
         ->  Nested Loop  (cost=7.89..6178.11 rows=1 width=55) (actual time=5.494..560.447 rows=6946 loops=1)
               Join Filter: (ml.link_type_id = lt.id)
               Rows Removed by Join Filter: 42158
               ->  Nested Loop  (cost=7.89..6176.70 rows=1 width=59) (actual time=5.480..499.380 rows=6946 loops=1)
                     ->  Nested Loop  (cost=7.47..6147.98 rows=63 width=44) (actual time=4.794..453.315 rows=14916 loops=1)
                           Join Filter: (mc.company_type_id = ct.id)
                           Rows Removed by Join Filter: 1782
                           ->  Nested Loop  (cost=7.47..6143.61 rows=84 width=48) (actual time=4.767..444.466 rows=15510 loops=1)
                                 Join Filter: (ml.movie_id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.04..6125.70 rows=31 width=12) (actual time=4.722..426.552 rows=1460 loops=1)
                                       ->  Nested Loop  (cost=6.76..6082.75 rows=101 width=4) (actual time=4.713..323.131 rows=47403 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2793.84 rows=3 width=4) (actual time=1.103..27.846 rows=3 loops=1)
                                                   Filter: ((keyword)::text = ANY ('{sequel,revenge,based-on-novel}'::text[]))
                                                   Rows Removed by Filter: 134167
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1093.30 rows=300 width=8) (actual time=4.926..94.096 rows=15801 loops=3)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=23953
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.765..3.765 rows=15801 loops=3)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.002..0.002 rows=0 loops=47403)
                                             Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=36) (actual time=0.004..0.009 rows=11 loops=1460)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: (note IS NOT NULL)
                                       Rows Removed by Filter: 2
                           ->  Materialize  (cost=0.00..1.06 rows=3 width=4) (actual time=0.000..0.000 rows=1 loops=15510)
                                 ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=3 width=4) (actual time=0.021..0.022 rows=3 loops=1)
                                       Filter: ((kind IS NOT NULL) AND ((kind)::text <> 'production companies'::text))
                                       Rows Removed by Filter: 1
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=14916)
                           Index Cond: (id = mc.company_id)
                           Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '20th Century Fox%'::text) OR ((name)::text ~~ 'Twentieth Century Fox%'::text)))
                           Rows Removed by Filter: 1
               ->  Seq Scan on link_type lt  (cost=0.00..1.18 rows=18 width=4) (actual time=0.002..0.002 rows=7 loops=6946)
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.004..0.004 rows=1 loops=6946)
               Index Cond: (id = mk.movie_id)
               Filter: (production_year > 1950)
 Planning Time: 12.941 ms
 Execution Time: 607.152 ms
(42 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=6195.83..6195.84 rows=1 width=96) (actual time=505.505..505.506 rows=1 loops=1)
   ->  Nested Loop  (cost=8.32..6195.45 rows=51 width=60) (actual time=4.907..496.545 rows=14899 loops=1)
         ->  Nested Loop  (cost=7.90..6169.75 rows=57 width=45) (actual time=4.877..458.100 rows=14916 loops=1)
               Join Filter: (mc.company_type_id = ct.id)
               Rows Removed by Join Filter: 1782
               ->  Nested Loop  (cost=7.90..6165.70 rows=76 width=49) (actual time=4.852..452.301 rows=15510 loops=1)
                     Join Filter: (ml.movie_id = mc.movie_id)
                     ->  Nested Loop  (cost=7.47..6149.51 rows=28 width=29) (actual time=4.827..438.145 rows=1460 loops=1)
                           Join Filter: (ml.link_type_id = lt.id)
                           Rows Removed by Join Filter: 10576
                           ->  Nested Loop  (cost=7.47..6141.21 rows=28 width=33) (actual time=4.810..435.759 rows=1460 loops=1)
                                 Join Filter: (ml.movie_id = t.id)
                                 ->  Nested Loop  (cost=7.04..6125.70 rows=31 width=12) (actual time=4.768..428.406 rows=1460 loops=1)
                                       ->  Nested Loop  (cost=6.76..6082.75 rows=101 width=4) (actual time=4.750..323.281 rows=47403 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2793.84 rows=3 width=4) (actual time=1.134..36.244 rows=3 loops=1)
                                                   Filter: ((keyword)::text = ANY ('{sequel,revenge,based-on-novel}'::text[]))
                                                   Rows Removed by Filter: 134167
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1093.30 rows=300 width=8) (actual time=5.034..91.231 rows=15801 loops=3)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=23953
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.873..3.873 rows=15801 loops=3)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.002..0.002 rows=0 loops=47403)
                                             Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.004..0.004 rows=1 loops=1460)
                                       Index Cond: (id = mk.movie_id)
                                       Filter: (production_year > 1950)
                           ->  Materialize  (cost=0.00..1.27 rows=18 width=4) (actual time=0.000..0.001 rows=8 loops=1460)
                                 ->  Seq Scan on link_type lt  (cost=0.00..1.18 rows=18 width=4) (actual time=0.009..0.013 rows=16 loops=1)
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=36) (actual time=0.003..0.007 rows=11 loops=1460)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: (note IS NOT NULL)
                           Rows Removed by Filter: 2
               ->  Materialize  (cost=0.00..1.06 rows=3 width=4) (actual time=0.000..0.000 rows=1 loops=15510)
                     ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=3 width=4) (actual time=0.021..0.023 rows=3 loops=1)
                           Filter: ((kind IS NOT NULL) AND ((kind)::text <> 'production companies'::text))
                           Rows Removed by Filter: 1
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=14916)
               Index Cond: (id = mc.company_id)
               Filter: ((country_code)::text <> '[pl]'::text)
               Rows Removed by Filter: 0
 Planning Time: 13.807 ms
 Execution Time: 506.073 ms
(43 rows)

SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16837.50..16837.51 rows=1 width=96) (actual time=513.467..513.467 rows=1 loops=1)
   ->  Gather  (cost=1005.35..16837.49 rows=1 width=41) (actual time=58.155..519.663 rows=397 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Nested Loop  (cost=5.34..15837.39 rows=1 width=41) (actual time=33.632..505.704 rows=132 loops=3)
               ->  Nested Loop  (cost=5.20..15835.91 rows=9 width=45) (actual time=33.590..505.069 rows=132 loops=3)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=4.77..15811.93 rows=15 width=53) (actual time=2.436..396.448 rows=1891 loops=3)
                           ->  Nested Loop  (cost=4.35..15793.67 rows=41 width=38) (actual time=2.354..370.858 rows=2203 loops=3)
                                 Join Filter: (mi_idx.movie_id = t.id)
                                 ->  Hash Join  (cost=3.92..15669.98 rows=233 width=17) (actual time=0.542..248.825 rows=8078 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Nested Loop  (cost=2.86..15663.88 rows=932 width=21) (actual time=0.276..241.733 rows=21569 loops=3)
                                             ->  Hash Join  (cost=2.43..15179.85 rows=178 width=9) (actual time=0.169..142.761 rows=5283 loops=3)
                                                   Hash Cond: (mi_idx.info_type_id = it2.id)
                                                   ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..15122.68 rows=20101 width=13) (actual time=0.051..137.462 rows=17883 loops=3)
                                                         Filter: ((info)::text > '8.0'::text)
                                                         Rows Removed by Filter: 442129
                                                   ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.061..0.061 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.041..0.043 rows=1 loops=3)
                                                               Filter: ((info)::text = 'rating'::text)
                                                               Rows Removed by Filter: 112
                                             ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.67 rows=5 width=12) (actual time=0.013..0.017 rows=4 loops=15849)
                                                   Index Cond: (movie_id = mi_idx.movie_id)
                                       ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.072..0.072 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.048..0.049 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.52 rows=1 width=21) (actual time=0.014..0.014 rows=0 loops=24233)
                                       Index Cond: (id = mc.movie_id)
                                       Filter: ((production_year >= 2005) AND (production_year <= 2008))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.011..0.011 rows=1 loops=6610)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.59 rows=1 width=8) (actual time=0.057..0.057 rows=0 loops=5674)
                           Index Cond: (movie_id = mc.movie_id)
                           Filter: ((info)::text = ANY ('{Drama,Horror}'::text[]))
                           Rows Removed by Filter: 28
               ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=397)
                     Index Cond: (id = mi.info_type_id)
                     Filter: ((info)::text = 'genres'::text)
 Planning Time: 14.674 ms
 Execution Time: 520.698 ms
(47 rows)

SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=19208.43..19208.44 rows=1 width=64) (actual time=145.727..145.727 rows=1 loops=1)
   ->  Nested Loop  (cost=1006.70..19208.43 rows=1 width=60) (actual time=143.932..145.704 rows=10 loops=1)
         ->  Gather  (cost=1006.57..19208.26 rows=1 width=64) (actual time=143.871..145.757 rows=10 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Nested Loop  (cost=6.57..18208.16 rows=1 width=64) (actual time=136.534..137.113 rows=3 loops=3)
                     ->  Nested Loop  (cost=6.15..18207.71 rows=1 width=68) (actual time=136.511..136.828 rows=11 loops=3)
                           Join Filter: (t.id = mc.movie_id)
                           ->  Hash Join  (cost=5.72..18207.13 rows=1 width=72) (actual time=136.486..136.761 rows=1 loops=3)
                                 Hash Cond: (mi.info_type_id = it1.id)
                                 ->  Nested Loop  (cost=3.29..18204.66 rows=17 width=76) (actual time=136.185..136.525 rows=74 loops=3)
                                       Join Filter: (t.id = mi.movie_id)
                                       ->  Nested Loop  (cost=2.86..18202.37 rows=1 width=25) (actual time=136.156..136.200 rows=1 loops=3)
                                             ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=4) (actual time=135.981..135.986 rows=3 loops=3)
                                                   Hash Cond: (mi_idx.info_type_id = it2.id)
                                                   ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=8) (actual time=0.038..80.055 rows=460012 loops=3)
                                                   ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.032..0.033 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.021..0.022 rows=1 loops=3)
                                                               Filter: ((info)::text = 'bottom 10 rank'::text)
                                                               Rows Removed by Filter: 112
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..0.58 rows=1 width=21) (actual time=0.063..0.063 rows=0 loops=10)
                                                   Index Cond: (id = mi_idx.movie_id)
                                                   Filter: ((production_year > 2000) AND (((title)::text ~~ 'Birdemic%'::text) OR ((title)::text ~~ '%Movie%'::text)))
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.76 rows=42 width=51) (actual time=0.070..0.446 rows=110 loops=2)
                                             Index Cond: (movie_id = mi_idx.movie_id)
                                 ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.083..0.083 rows=1 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.062..0.064 rows=1 loops=3)
                                             Filter: ((info)::text = 'budget'::text)
                                             Rows Removed by Filter: 112
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.52 rows=5 width=12) (actual time=0.064..0.090 rows=16 loops=2)
                                 Index Cond: (movie_id = mi.movie_id)
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.025..0.025 rows=0 loops=33)
                           Index Cond: (id = mc.company_id)
                           Filter: ((country_code)::text = '[us]'::text)
                           Rows Removed by Filter: 1
         ->  Index Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=10)
               Index Cond: (id = mc.company_type_id)
               Filter: ((kind IS NOT NULL) AND (((kind)::text = 'production companies'::text) OR ((kind)::text = 'distributors'::text)))
 Planning Time: 14.618 ms
 Execution Time: 146.598 ms
(43 rows)

SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=17908.15..17908.16 rows=1 width=96) (actual time=1558.351..1558.352 rows=1 loops=1)
   ->  Gather  (cost=1007.63..17908.14 rows=2 width=41) (actual time=7.253..1559.628 rows=4711 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Hash Join  (cost=7.63..16907.94 rows=1 width=41) (actual time=7.769..1547.713 rows=1570 loops=3)
               Hash Cond: (mi.info_type_id = it1.id)
               ->  Nested Loop  (cost=5.20..16905.24 rows=98 width=45) (actual time=7.551..1546.221 rows=1570 loops=3)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=4.77..16670.19 rows=138 width=53) (actual time=0.851..978.306 rows=14111 loops=3)
                           ->  Hash Join  (cost=4.35..16500.42 rows=381 width=38) (actual time=0.470..809.973 rows=22822 loops=3)
                                 Hash Cond: (mc.company_type_id = ct.id)
                                 ->  Nested Loop  (cost=3.29..16491.13 rows=1523 width=42) (actual time=0.344..791.715 rows=56386 loops=3)
                                       ->  Nested Loop  (cost=2.86..16296.91 rows=291 width=30) (actual time=0.254..588.454 rows=17435 loops=3)
                                             ->  Hash Join  (cost=2.43..15342.82 rows=708 width=9) (actual time=0.146..183.133 rows=40524 loops=3)
                                                   Hash Cond: (mi_idx.info_type_id = it2.id)
                                                   ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..15122.68 rows=79942 width=13) (actual time=0.059..158.416 rows=64632 loops=3)
                                                         Filter: ((info)::text > '7.0'::text)
                                                         Rows Removed by Filter: 395380
                                                   ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.033..0.033 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.020..0.023 rows=1 loops=3)
                                                               Filter: ((info)::text = 'rating'::text)
                                                               Rows Removed by Filter: 112
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..1.35 rows=1 width=21) (actual time=0.009..0.009 rows=0 loops=121572)
                                                   Index Cond: (id = mi_idx.movie_id)
                                                   Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.62 rows=5 width=12) (actual time=0.008..0.010 rows=3 loops=52304)
                                             Index Cond: (movie_id = t.id)
                                 ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.047..0.047 rows=1 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.031..0.033 rows=1 loops=3)
                                             Filter: ((kind)::text = 'production companies'::text)
                                             Rows Removed by Filter: 3
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.007..0.007 rows=1 loops=68466)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.69 rows=1 width=8) (actual time=0.040..0.040 rows=0 loops=42332)
                           Index Cond: (movie_id = mc.movie_id)
                           Filter: ((info)::text = ANY ('{Drama,Horror,Western,Family}'::text[]))
                           Rows Removed by Filter: 29
               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.077..0.077 rows=1 loops=3)
                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                     ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.047..0.059 rows=1 loops=3)
                           Filter: ((info)::text = 'genres'::text)
                           Rows Removed by Filter: 112
 Planning Time: 13.499 ms
 Execution Time: 1564.001 ms
(49 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=20155.74..20155.75 rows=1 width=96) (actual time=2813.592..2813.592 rows=1 loops=1)
   ->  Gather  (cost=20155.52..20155.73 rows=2 width=96) (actual time=2813.554..2819.323 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=19155.52..19155.53 rows=1 width=96) (actual time=2805.322..2805.323 rows=1 loops=3)
               ->  Hash Join  (cost=8.73..19155.43 rows=11 width=65) (actual time=600.876..2786.257 rows=37034 loops=3)
                     Hash Cond: (mi.info_type_id = it2.id)
                     ->  Nested Loop  (cost=6.30..19149.54 rows=1275 width=69) (actual time=600.609..2756.470 rows=172109 loops=3)
                           ->  Nested Loop  (cost=5.87..19075.02 rows=39 width=34) (actual time=600.507..2365.880 rows=5490 loops=3)
                                 ->  Hash Join  (cost=5.45..18650.83 rows=952 width=38) (actual time=597.646..1805.060 rows=100870 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Nested Loop  (cost=4.39..18629.17 rows=3809 width=42) (actual time=597.539..1751.463 rows=257695 loops=3)
                                             ->  Hash Join  (cost=3.96..18186.75 rows=727 width=30) (actual time=597.401..1256.138 rows=69960 loops=3)
                                                   Hash Cond: (t.kind_id = kt.id)
                                                   ->  Nested Loop  (cost=2.86..18164.20 rows=5089 width=34) (actual time=0.242..1214.541 rows=153308 loops=3)
                                                         ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=9) (actual time=0.145..192.736 rows=153308 loops=3)
                                                               Hash Cond: (miidx.info_type_id = it.id)
                                                               ->  Parallel Seq Scan on movie_info_idx miidx  (cost=0.00..13685.15 rows=575015 width=13) (actual time=0.036..90.621 rows=460012 loops=3)
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.047..0.047 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.025..0.028 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'rating'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=25) (actual time=0.006..0.006 rows=1 loops=459925)
                                                               Index Cond: (id = miidx.movie_id)
                                                   ->  Hash  (cost=1.09..1.09 rows=1 width=4) (actual time=0.036..0.036 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.024..0.026 rows=1 loops=3)
                                                               Filter: ((kind)::text = 'movie'::text)
                                                               Rows Removed by Filter: 6
                                             ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.56 rows=5 width=12) (actual time=0.004..0.006 rows=4 loops=209880)
                                                   Index Cond: (movie_id = t.id)
                                       ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.046..0.046 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.033..0.035 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                 ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=302610)
                                       Index Cond: (id = mc.company_id)
                                       Filter: ((country_code)::text = '[de]'::text)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.49 rows=42 width=51) (actual time=0.013..0.064 rows=31 loops=16470)
                                 Index Cond: (movie_id = t.id)
                     ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.075..0.075 rows=1 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.041..0.051 rows=1 loops=3)
                                 Filter: ((info)::text = 'release dates'::text)
                                 Rows Removed by Filter: 112
 Planning Time: 21.098 ms
 Execution Time: 2820.208 ms
(50 rows)

SET
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=19206.33..19206.34 rows=1 width=96) (actual time=1202.835..1202.835 rows=1 loops=1)
   ->  Gather  (cost=1004.54..19206.32 rows=1 width=41) (actual time=572.723..1210.919 rows=372 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Nested Loop  (cost=4.54..18206.22 rows=1 width=41) (actual time=605.871..1194.946 rows=124 loops=3)
               ->  Nested Loop  (cost=4.40..18205.87 rows=2 width=45) (actual time=605.770..1193.401 rows=707 loops=3)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=3.97..18203.87 rows=1 width=53) (actual time=605.652..1190.879 rows=20 loops=3)
                           ->  Nested Loop  (cost=3.84..18203.70 rows=1 width=57) (actual time=605.564..1190.594 rows=54 loops=3)
                                 ->  Nested Loop  (cost=3.42..18203.25 rows=1 width=42) (actual time=567.170..1188.301 rows=104 loops=3)
                                       Join Filter: (t.id = mc.movie_id)
                                       ->  Nested Loop  (cost=2.99..18202.60 rows=1 width=30) (actual time=567.012..1187.244 rows=30 loops=3)
                                             ->  Nested Loop  (cost=2.86..18202.37 rows=1 width=34) (actual time=5.442..1186.854 rows=117 loops=3)
                                                   ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=9) (actual time=0.273..194.132 rows=153308 loops=3)
                                                         Hash Cond: (miidx.info_type_id = it.id)
                                                         ->  Parallel Seq Scan on movie_info_idx miidx  (cost=0.00..13685.15 rows=575015 width=13) (actual time=0.041..86.241 rows=460012 loops=3)
                                                         ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.072..0.073 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.050..0.052 rows=1 loops=3)
                                                                     Filter: ((info)::text = 'rating'::text)
                                                                     Rows Removed by Filter: 112
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.58 rows=1 width=25) (actual time=0.006..0.006 rows=0 loops=459925)
                                                         Index Cond: (id = miidx.movie_id)
                                                         Filter: (((title)::text <> ''::text) AND (((title)::text ~~ '%Champion%'::text) OR ((title)::text ~~ '%Loser%'::text)))
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using kind_type_pkey on kind_type kt  (cost=0.13..0.18 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=352)
                                                   Index Cond: (id = t.kind_id)
                                                   Filter: ((kind)::text = 'movie'::text)
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.59 rows=5 width=12) (actual time=0.026..0.032 rows=3 loops=90)
                                             Index Cond: (movie_id = miidx.movie_id)
                                 ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.021..0.021 rows=1 loops=313)
                                       Index Cond: (id = mc.company_id)
                                       Filter: ((country_code)::text = '[us]'::text)
                                       Rows Removed by Filter: 0
                           ->  Index Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=161)
                                 Index Cond: (id = mc.company_type_id)
                                 Filter: ((kind)::text = 'production companies'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.48 rows=42 width=8) (actual time=0.027..0.111 rows=35 loops=61)
                           Index Cond: (movie_id = mc.movie_id)
               ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=2122)
                     Index Cond: (id = mi.info_type_id)
                     Filter: ((info)::text = 'release dates'::text)
                     Rows Removed by Filter: 1
 Planning Time: 22.080 ms
 Execution Time: 1212.043 ms
(47 rows)

SET
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=19206.33..19206.34 rows=1 width=96) (actual time=1202.989..1202.989 rows=1 loops=1)
   ->  Gather  (cost=1004.54..19206.32 rows=1 width=41) (actual time=1202.795..1208.802 rows=53 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Nested Loop  (cost=4.54..18206.22 rows=1 width=41) (actual time=910.023..1195.262 rows=18 loops=3)
               ->  Nested Loop  (cost=4.40..18205.87 rows=2 width=45) (actual time=909.938..1195.055 rows=73 loops=3)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=3.97..18203.87 rows=1 width=53) (actual time=909.846..1194.685 rows=5 loops=3)
                           ->  Nested Loop  (cost=3.84..18203.70 rows=1 width=57) (actual time=909.638..1194.572 rows=16 loops=3)
                                 ->  Nested Loop  (cost=3.42..18203.25 rows=1 width=42) (actual time=909.554..1193.805 rows=32 loops=3)
                                       Join Filter: (t.id = mc.movie_id)
                                       ->  Nested Loop  (cost=2.99..18202.60 rows=1 width=30) (actual time=909.425..1193.591 rows=10 loops=3)
                                             ->  Nested Loop  (cost=2.86..18202.37 rows=1 width=34) (actual time=82.500..1193.485 rows=22 loops=3)
                                                   ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=9) (actual time=0.311..195.004 rows=153308 loops=3)
                                                         Hash Cond: (miidx.info_type_id = it.id)
                                                         ->  Parallel Seq Scan on movie_info_idx miidx  (cost=0.00..13685.15 rows=575015 width=13) (actual time=0.040..86.851 rows=460012 loops=3)
                                                         ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.082..0.082 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.057..0.059 rows=1 loops=3)
                                                                     Filter: ((info)::text = 'rating'::text)
                                                                     Rows Removed by Filter: 112
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.58 rows=1 width=25) (actual time=0.006..0.006 rows=0 loops=459925)
                                                         Index Cond: (id = miidx.movie_id)
                                                         Filter: (((title)::text <> ''::text) AND (((title)::text ~~ 'Champion%'::text) OR ((title)::text ~~ 'Loser%'::text)))
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using kind_type_pkey on kind_type kt  (cost=0.13..0.18 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=66)
                                                   Index Cond: (id = t.kind_id)
                                                   Filter: ((kind)::text = 'movie'::text)
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.59 rows=5 width=12) (actual time=0.017..0.020 rows=3 loops=29)
                                             Index Cond: (movie_id = miidx.movie_id)
                                 ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.023..0.023 rows=0 loops=95)
                                       Index Cond: (id = mc.company_id)
                                       Filter: ((country_code)::text = '[us]'::text)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.006..0.006 rows=0 loops=47)
                                 Index Cond: (id = mc.company_type_id)
                                 Filter: ((kind)::text = 'production companies'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.48 rows=42 width=8) (actual time=0.026..0.073 rows=16 loops=14)
                           Index Cond: (movie_id = mc.movie_id)
               ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=218)
                     Index Cond: (id = mi.info_type_id)
                     Filter: ((info)::text = 'release dates'::text)
                     Rows Removed by Filter: 1
 Planning Time: 21.806 ms
 Execution Time: 1209.690 ms
(47 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=20770.24..20770.25 rows=1 width=96) (actual time=4388.655..4388.655 rows=1 loops=1)
   ->  Gather  (cost=20770.01..20770.22 rows=2 width=96) (actual time=4388.617..4396.236 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=19770.01..19770.02 rows=1 width=96) (actual time=4380.467..4380.467 rows=1 loops=3)
               ->  Hash Join  (cost=8.73..19769.26 rows=100 width=41) (actual time=617.551..4270.248 rows=223463 loops=3)
                     Hash Cond: (mi.info_type_id = it2.id)
                     ->  Nested Loop  (cost=6.30..19736.13 rows=11276 width=45) (actual time=617.239..4080.795 rows=1438861 loops=3)
                           ->  Nested Loop  (cost=5.87..19075.02 rows=346 width=53) (actual time=617.139..2509.546 rows=29098 loops=3)
                                 ->  Hash Join  (cost=5.45..18650.83 rows=952 width=38) (actual time=616.966..1856.997 rows=100870 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Nested Loop  (cost=4.39..18629.17 rows=3809 width=42) (actual time=616.865..1801.754 rows=257695 loops=3)
                                             ->  Hash Join  (cost=3.96..18186.75 rows=727 width=30) (actual time=616.710..1305.340 rows=69960 loops=3)
                                                   Hash Cond: (t.kind_id = kt.id)
                                                   ->  Nested Loop  (cost=2.86..18164.20 rows=5089 width=34) (actual time=0.252..1262.502 rows=153308 loops=3)
                                                         ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=9) (actual time=0.143..199.884 rows=153308 loops=3)
                                                               Hash Cond: (miidx.info_type_id = it.id)
                                                               ->  Parallel Seq Scan on movie_info_idx miidx  (cost=0.00..13685.15 rows=575015 width=13) (actual time=0.040..92.924 rows=460012 loops=3)
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.044..0.044 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.025..0.028 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'rating'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=25) (actual time=0.006..0.006 rows=1 loops=459925)
                                                               Index Cond: (id = miidx.movie_id)
                                                   ->  Hash  (cost=1.09..1.09 rows=1 width=4) (actual time=0.046..0.046 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.035..0.037 rows=1 loops=3)
                                                               Filter: ((kind)::text = 'movie'::text)
                                                               Rows Removed by Filter: 6
                                             ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.56 rows=5 width=12) (actual time=0.004..0.006 rows=4 loops=209880)
                                                   Index Cond: (movie_id = t.id)
                                       ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.043..0.043 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.030..0.032 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                 ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.006..0.006 rows=0 loops=302610)
                                       Index Cond: (id = mc.company_id)
                                       Filter: ((country_code)::text = '[us]'::text)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.49 rows=42 width=8) (actual time=0.009..0.045 rows=49 loops=87293)
                                 Index Cond: (movie_id = t.id)
                     ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.086..0.086 rows=1 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.050..0.060 rows=1 loops=3)
                                 Filter: ((info)::text = 'release dates'::text)
                                 Rows Removed by Filter: 112
 Planning Time: 21.739 ms
 Execution Time: 4397.008 ms
(50 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7394.40..7394.41 rows=1 width=64) (actual time=1436.323..1436.323 rows=1 loops=1)
   ->  Nested Loop  (cost=8.05..7394.40 rows=1 width=22) (actual time=38.661..1435.396 rows=761 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         Rows Removed by Join Filter: 117
         ->  Nested Loop  (cost=8.05..7391.97 rows=1 width=26) (actual time=38.640..1424.827 rows=878 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=7.62..7390.07 rows=1 width=34) (actual time=37.178..1167.978 rows=1147 loops=1)
                     Join Filter: (mi_idx.info_type_id = it2.id)
                     Rows Removed by Join Filter: 2256
                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.024..0.026 rows=1 loops=1)
                           Filter: ((info)::text = 'rating'::text)
                           Rows Removed by Filter: 112
                     ->  Nested Loop  (cost=7.62..7387.55 rows=9 width=38) (actual time=36.151..1167.187 rows=3403 loops=1)
                           Join Filter: (t.id = mi_idx.movie_id)
                           ->  Nested Loop  (cost=7.19..7385.94 rows=3 width=25) (actual time=36.072..1123.590 rows=1966 loops=1)
                                 Join Filter: (t.kind_id = kt.id)
                                 Rows Removed by Join Filter: 616
                                 ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.026..0.028 rows=1 loops=1)
                                       Filter: ((kind)::text = 'movie'::text)
                                       Rows Removed by Filter: 6
                                 ->  Nested Loop  (cost=7.19..7384.59 rows=21 width=29) (actual time=8.466..1122.632 rows=2582 loops=1)
                                       ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=7.810..548.647 rows=37091 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=2.000..38.468 rows=3 loops=1)
                                                   Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                   Rows Removed by Filter: 134167
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=5.024..164.313 rows=12364 loops=3)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=26312
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.719..3.719 rows=12364 loops=3)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.014..0.014 rows=0 loops=37091)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: (production_year > 2010)
                                             Rows Removed by Filter: 1
                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=13) (actual time=0.020..0.021 rows=2 loops=1966)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((info)::text < '8.5'::text)
                                 Rows Removed by Filter: 0
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.191..0.222 rows=1 loops=1147)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,USA,American}'::text[]))
                     Rows Removed by Filter: 69
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=878)
               Filter: ((info)::text = 'countries'::text)
               Rows Removed by Filter: 21
 Planning Time: 13.822 ms
 Execution Time: 1436.855 ms
(47 rows)

SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4874.32..4874.33 rows=1 width=64) (actual time=632.917..632.917 rows=1 loops=1)
   ->  Nested Loop  (cost=8.05..4874.31 rows=1 width=22) (actual time=404.125..632.902 rows=1 loops=1)
         Join Filter: (t.kind_id = kt.id)
         Rows Removed by Join Filter: 1
         ->  Nested Loop  (cost=8.05..4873.21 rows=1 width=26) (actual time=16.179..632.854 rows=2 loops=1)
               Join Filter: (mi_idx.info_type_id = it2.id)
               Rows Removed by Join Filter: 1
               ->  Nested Loop  (cost=8.05..4870.79 rows=1 width=30) (actual time=16.136..632.791 rows=3 loops=1)
                     Join Filter: (t.id = mi_idx.movie_id)
                     ->  Nested Loop  (cost=7.62..4870.28 rows=1 width=33) (actual time=16.083..632.500 rows=8 loops=1)
                           Join Filter: (mi.info_type_id = it1.id)
                           ->  Nested Loop  (cost=7.62..4867.85 rows=1 width=37) (actual time=16.066..632.360 rows=8 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=7.19..4865.95 rows=1 width=29) (actual time=15.716..630.130 rows=15 loops=1)
                                       ->  Nested Loop  (cost=6.76..4832.75 rows=67 width=4) (actual time=10.051..300.702 rows=19528 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=2 width=4) (actual time=2.175..32.355 rows=1 loops=1)
                                                   Filter: ((keyword)::text = ANY ('{murder,murder-in-title}'::text[]))
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1100.31 rows=300 width=8) (actual time=7.868..259.478 rows=19528 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=12389
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=6.028..6.028 rows=19528 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.50 rows=1 width=25) (actual time=0.016..0.016 rows=0 loops=19528)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: ((production_year > 2010) AND (((title)::text ~~ '%murder%'::text) OR ((title)::text ~~ '%Murder%'::text) OR ((title)::text ~~ '%Mord%'::text)))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.137..0.145 rows=1 loops=15)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,USA,American}'::text[]))
                                       Rows Removed by Filter: 12
                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=8)
                                 Filter: ((info)::text = 'countries'::text)
                                 Rows Removed by Filter: 7
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=13) (actual time=0.034..0.034 rows=0 loops=8)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((info)::text > '6.0'::text)
                           Rows Removed by Filter: 1
               ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.015..0.016 rows=1 loops=3)
                     Filter: ((info)::text = 'rating'::text)
                     Rows Removed by Filter: 104
         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.018..0.019 rows=1 loops=2)
               Filter: ((kind)::text = 'movie'::text)
               Rows Removed by Filter: 3
 Planning Time: 13.674 ms
 Execution Time: 633.583 ms
(46 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7403.14..7403.15 rows=1 width=64) (actual time=2455.873..2455.873 rows=1 loops=1)
   ->  Nested Loop  (cost=8.05..7403.13 rows=1 width=22) (actual time=8.289..2451.003 rows=4115 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         Rows Removed by Join Filter: 594
         ->  Nested Loop  (cost=8.05..7400.71 rows=1 width=26) (actual time=8.269..2395.054 rows=4709 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=7.62..7398.81 rows=1 width=34) (actual time=8.120..1273.074 rows=5949 loops=1)
                     Join Filter: (mi_idx.info_type_id = it2.id)
                     Rows Removed by Join Filter: 11942
                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.023..0.026 rows=1 loops=1)
                           Filter: ((info)::text = 'rating'::text)
                           Rows Removed by Filter: 112
                     ->  Nested Loop  (cost=7.62..7395.82 rows=46 width=38) (actual time=8.092..1269.263 rows=17891 loops=1)
                           Join Filter: (t.id = mi_idx.movie_id)
                           ->  Nested Loop  (cost=7.19..7387.25 rows=16 width=25) (actual time=8.048..1116.430 rows=8073 loops=1)
                                 Join Filter: (t.kind_id = kt.id)
                                 Rows Removed by Join Filter: 4332
                                 ->  Nested Loop  (cost=7.19..7384.59 rows=55 width=29) (actual time=7.878..1105.725 rows=9739 loops=1)
                                       ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=7.824..533.796 rows=37091 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.975..39.580 rows=3 loops=1)
                                                   Filter: ((keyword IS NOT NULL) AND ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[])))
                                                   Rows Removed by Filter: 134167
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=5.065..158.916 rows=12364 loops=3)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=26312
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.761..3.761 rows=12364 loops=3)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.014..0.014 rows=0 loops=37091)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: (production_year > 2005)
                                             Rows Removed by Filter: 1
                                 ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=9739)
                                       ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.040..0.041 rows=2 loops=1)
                                             Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                             Rows Removed by Filter: 5
                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=13) (actual time=0.016..0.017 rows=2 loops=8073)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((info)::text < '8.5'::text)
                                 Rows Removed by Filter: 0
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.162..0.187 rows=1 loops=5949)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                     Rows Removed by Filter: 71
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=4709)
               Filter: ((info)::text = 'countries'::text)
               Rows Removed by Filter: 20
 Planning Time: 13.297 ms
 Execution Time: 2456.464 ms
(48 rows)

SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=51296.76..51296.77 rows=1 width=64) (actual time=694.789..694.789 rows=1 loops=1)
   ->  Gather  (cost=51296.54..51296.75 rows=2 width=64) (actual time=693.884..699.755 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=50296.54..50296.55 rows=1 width=64) (actual time=686.412..686.413 rows=1 loops=3)
               ->  Nested Loop  (cost=5353.19..50296.50 rows=8 width=60) (actual time=205.349..686.268 rows=109 loops=3)
                     ->  Nested Loop  (cost=5352.77..50292.99 rows=8 width=64) (actual time=205.230..684.662 rows=109 loops=3)
                           ->  Nested Loop  (cost=5352.34..50291.15 rows=1 width=76) (actual time=159.061..684.082 rows=19 loops=3)
                                 ->  Nested Loop  (cost=5352.20..50290.92 rows=1 width=80) (actual time=158.972..683.918 rows=19 loops=3)
                                       ->  Nested Loop  (cost=5352.07..50290.76 rows=1 width=84) (actual time=158.864..683.727 rows=19 loops=3)
                                             ->  Nested Loop  (cost=5351.63..48102.52 rows=1107 width=33) (actual time=51.019..477.386 rows=1711 loops=3)
                                                   ->  Nested Loop  (cost=5351.20..46229.21 rows=2025 width=12) (actual time=50.911..417.188 rows=4566 loops=3)
                                                         ->  Parallel Hash Join  (cost=5350.78..40467.98 rows=2789 width=8) (actual time=50.178..320.833 rows=14612 loops=3)
                                                               Hash Cond: (mc.company_id = cn.id)
                                                               ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..35097.06 rows=7675 width=12) (actual time=0.070..258.458 rows=20555 loops=3)
                                                                     Filter: (((note)::text ~~ '%(200%)%'::text) AND ((note)::text ~~ '%(worldwide)%'::text))
                                                                     Rows Removed by Filter: 849155
                                                               ->  Parallel Hash  (cost=4722.92..4722.92 rows=50229 width=4) (actual time=48.723..48.723 rows=28281 loops=3)
                                                                     Buckets: 131072  Batches: 1  Memory Usage: 4384kB
                                                                     ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=50229 width=4) (actual time=0.055..34.184 rows=28281 loops=3)
                                                                           Filter: ((country_code)::text = '[us]'::text)
                                                                           Rows Removed by Filter: 50051
                                                         ->  Index Only Scan using movie_id_aka_title on aka_title at  (cost=0.42..2.04 rows=3 width=4) (actual time=0.005..0.006 rows=0 loops=43837)
                                                               Index Cond: (movie_id = mc.movie_id)
                                                               Heap Fetches: 13699
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.93 rows=1 width=21) (actual time=0.012..0.012 rows=0 loops=13699)
                                                         Index Cond: (id = at.movie_id)
                                                         Filter: (production_year > 2000)
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.97 rows=1 width=51) (actual time=0.119..0.120 rows=0 loops=5134)
                                                   Index Cond: (movie_id = t.id)
                                                   Filter: (((note)::text ~~ '%internet%'::text) AND ((info)::text ~~ 'USA:% 200%'::text))
                                                   Rows Removed by Filter: 72
                                       ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=57)
                                             Index Cond: (id = mc.company_type_id)
                                             Heap Fetches: 57
                                 ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.19 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=57)
                                       Index Cond: (id = mi.info_type_id)
                                       Filter: ((info)::text = 'release dates'::text)
                           ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.36 rows=47 width=8) (actual time=0.025..0.028 rows=6 loops=57)
                                 Index Cond: (movie_id = t.id)
                     ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=328)
                           Index Cond: (id = mk.keyword_id)
                           Heap Fetches: 328
 Planning Time: 29.919 ms
 Execution Time: 700.479 ms
(46 rows)

SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=6434.72..6434.73 rows=1 width=64) (actual time=68.626..68.626 rows=1 loops=1)
   ->  Gather  (cost=6434.61..6434.72 rows=1 width=64) (actual time=68.435..71.232 rows=2 loops=1)
         Workers Planned: 1
         Workers Launched: 1
         ->  Partial Aggregate  (cost=5434.61..5434.62 rows=1 width=64) (actual time=62.511..62.511 rows=1 loops=2)
               ->  Nested Loop  (cost=2.84..5434.58 rows=5 width=60) (actual time=47.615..62.479 rows=18 loops=2)
                     ->  Nested Loop  (cost=2.42..5432.39 rows=5 width=64) (actual time=47.562..61.977 rows=18 loops=2)
                           ->  Nested Loop  (cost=1.99..5430.46 rows=1 width=76) (actual time=40.774..61.827 rows=2 loops=2)
                                 ->  Nested Loop  (cost=1.85..5430.22 rows=1 width=80) (actual time=40.743..61.790 rows=2 loops=2)
                                       ->  Nested Loop  (cost=1.41..5427.71 rows=1 width=29) (actual time=35.799..59.360 rows=13 loops=2)
                                             ->  Nested Loop  (cost=0.98..5426.78 rows=1 width=8) (actual time=35.731..58.772 rows=14 loops=2)
                                                   ->  Nested Loop  (cost=0.85..5426.62 rows=1 width=12) (actual time=35.691..58.669 rows=14 loops=2)
                                                         ->  Nested Loop  (cost=0.43..5424.56 rows=1 width=8) (actual time=34.776..56.441 rows=139 loops=2)
                                                               ->  Parallel Seq Scan on company_name cn  (cost=0.00..5068.50 rows=1 width=4) (actual time=34.666..46.079 rows=0 loops=2)
                                                                     Filter: (((country_code)::text = '[us]'::text) AND ((name)::text = 'YouTube'::text))
                                                                     Rows Removed by Filter: 117498
                                                               ->  Index Scan using company_id_movie_companies on movie_companies mc  (cost=0.43..356.04 rows=1 width=12) (actual time=0.216..20.619 rows=278 loops=1)
                                                                     Index Cond: (company_id = cn.id)
                                                                     Filter: (((note)::text ~~ '%(200%)%'::text) AND ((note)::text ~~ '%(worldwide)%'::text))
                                                                     Rows Removed by Filter: 1180
                                                         ->  Index Only Scan using movie_id_aka_title on aka_title at  (cost=0.42..2.04 rows=3 width=4) (actual time=0.015..0.015 rows=0 loops=278)
                                                               Index Cond: (movie_id = mc.movie_id)
                                                               Heap Fetches: 27
                                                   ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=27)
                                                         Index Cond: (id = mc.company_type_id)
                                                         Heap Fetches: 27
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..0.93 rows=1 width=21) (actual time=0.043..0.043 rows=1 loops=27)
                                                   Index Cond: (id = at.movie_id)
                                                   Filter: ((production_year >= 2005) AND (production_year <= 2010))
                                                   Rows Removed by Filter: 0
                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.51 rows=1 width=51) (actual time=0.176..0.186 rows=0 loops=26)
                                             Index Cond: (movie_id = t.id)
                                             Filter: (((note)::text ~~ '%internet%'::text) AND ((info)::text ~~ 'USA:% 200%'::text))
                                             Rows Removed by Filter: 19
                                 ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.19 rows=1 width=4) (actual time=0.023..0.023 rows=1 loops=3)
                                       Index Cond: (id = mi.info_type_id)
                                       Filter: ((info)::text = 'release dates'::text)
                           ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.46 rows=47 width=8) (actual time=0.087..0.094 rows=12 loops=3)
                                 Index Cond: (movie_id = t.id)
                     ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.026..0.026 rows=1 loops=37)
                           Index Cond: (id = mk.keyword_id)
                           Heap Fetches: 37
 Planning Time: 30.487 ms
 Execution Time: 71.956 ms
(44 rows)

SET
                                                                                                          QUERY PLAN                                                                                                          
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=271217.23..271217.24 rows=1 width=64) (actual time=1390.357..1390.357 rows=1 loops=1)
   ->  Gather  (cost=271217.01..271217.22 rows=2 width=64) (actual time=1390.148..1397.455 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=270217.01..270217.02 rows=1 width=64) (actual time=1382.418..1382.419 rows=1 loops=3)
               ->  Nested Loop  (cost=5.11..270216.63 rows=76 width=60) (actual time=319.723..1381.938 rows=757 loops=3)
                     Join Filter: (t.id = at.movie_id)
                     ->  Nested Loop  (cost=4.69..270201.06 rows=30 width=76) (actual time=312.659..1372.802 rows=2655 loops=3)
                           ->  Nested Loop  (cost=4.27..270187.90 rows=30 width=80) (actual time=312.575..1356.721 rows=2655 loops=3)
                                 ->  Nested Loop  (cost=3.84..270184.28 rows=2 width=72) (actual time=312.320..1341.427 rows=882 loops=3)
                                       ->  Nested Loop  (cost=3.71..270183.98 rows=2 width=76) (actual time=312.246..1338.138 rows=882 loops=3)
                                             ->  Nested Loop  (cost=3.29..270181.31 rows=6 width=80) (actual time=311.689..1322.773 rows=961 loops=3)
                                                   ->  Nested Loop  (cost=2.86..270180.68 rows=1 width=68) (actual time=311.593..1298.162 rows=594 loops=3)
                                                         ->  Hash Join  (cost=2.43..270164.10 rows=2 width=47) (actual time=311.481..1276.225 rows=594 loops=3)
                                                               Hash Cond: (mi.info_type_id = it1.id)
                                                               ->  Parallel Seq Scan on movie_info mi  (cost=0.00..270161.12 rows=200 width=51) (actual time=311.141..1275.217 rows=594 loops=3)
                                                                     Filter: ((info IS NOT NULL) AND ((note)::text ~~ '%internet%'::text) AND (((info)::text ~~ 'USA:% 199%'::text) OR ((info)::text ~~ 'USA:% 200%'::text)))
                                                                     Rows Removed by Filter: 4944646
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.099..0.100 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.063..0.074 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'release dates'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..8.29 rows=1 width=21) (actual time=0.035..0.035 rows=1 loops=1783)
                                                               Index Cond: (id = mi.movie_id)
                                                               Filter: (production_year > 1990)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.58 rows=5 width=12) (actual time=0.031..0.039 rows=2 loops=1782)
                                                         Index Cond: (movie_id = t.id)
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=2884)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((country_code)::text = '[us]'::text)
                                                   Rows Removed by Filter: 0
                                       ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=2647)
                                             Index Cond: (id = mc.company_type_id)
                                             Heap Fetches: 2647
                                 ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.34 rows=47 width=8) (actual time=0.015..0.016 rows=3 loops=2647)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=7964)
                                 Index Cond: (id = mk.keyword_id)
                                 Heap Fetches: 7964
                     ->  Index Only Scan using movie_id_aka_title on aka_title at  (cost=0.42..0.48 rows=3 width=4) (actual time=0.003..0.003 rows=0 loops=7964)
                           Index Cond: (movie_id = mk.movie_id)
                           Heap Fetches: 2271
 Planning Time: 30.249 ms
 Execution Time: 1398.220 ms
(46 rows)

SET
                                                                                               QUERY PLAN                                                                                               
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=241404.07..241404.08 rows=1 width=64) (actual time=1650.194..1650.194 rows=1 loops=1)
   ->  Gather  (cost=241403.85..241404.06 rows=2 width=64) (actual time=1649.994..1660.367 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=240403.85..240403.86 rows=1 width=64) (actual time=1642.290..1642.290 rows=1 loops=3)
               ->  Nested Loop  (cost=6.07..240394.49 rows=1873 width=38) (actual time=315.792..1640.746 rows=3782 loops=3)
                     Join Filter: (t.id = at.movie_id)
                     ->  Nested Loop  (cost=5.65..240025.58 rows=711 width=33) (actual time=304.573..1613.031 rows=8521 loops=3)
                           ->  Nested Loop  (cost=5.23..239713.69 rows=711 width=37) (actual time=304.476..1573.710 rows=8521 loops=3)
                                 ->  Hash Join  (cost=4.80..239612.38 rows=56 width=29) (actual time=304.308..1527.690 rows=3286 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Nested Loop  (cost=3.71..239610.99 rows=56 width=33) (actual time=304.064..1524.539 rows=3286 loops=3)
                                             ->  Nested Loop  (cost=3.29..239542.81 rows=153 width=37) (actual time=303.994..1468.667 rows=4792 loops=3)
                                                   ->  Nested Loop  (cost=2.86..239524.64 rows=29 width=25) (actual time=303.756..1369.349 rows=3554 loops=3)
                                                         ->  Hash Join  (cost=2.43..239268.80 rows=42 width=4) (actual time=303.647..1269.390 rows=3560 loops=3)
                                                               Hash Cond: (mi.info_type_id = it1.id)
                                                               ->  Parallel Seq Scan on movie_info mi  (cost=0.00..239253.38 rows=4774 width=8) (actual time=54.928..1266.073 rows=3603 loops=3)
                                                                     Filter: ((note)::text ~~ '%internet%'::text)
                                                                     Rows Removed by Filter: 4941637
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.077..0.078 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.057..0.068 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'release dates'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..6.09 rows=1 width=21) (actual time=0.027..0.027 rows=1 loops=10679)
                                                               Index Cond: (id = mi.movie_id)
                                                               Filter: (production_year > 1990)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.58 rows=5 width=12) (actual time=0.022..0.026 rows=1 loops=10662)
                                                         Index Cond: (movie_id = t.id)
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.011..0.011 rows=1 loops=14377)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((country_code)::text = '[us]'::text)
                                                   Rows Removed by Filter: 0
                                       ->  Hash  (cost=1.04..1.04 rows=4 width=4) (actual time=0.064..0.064 rows=4 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.040..0.041 rows=4 loops=3)
                                 ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.34 rows=47 width=8) (actual time=0.012..0.013 rows=3 loops=9857)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=25564)
                                 Index Cond: (id = mk.keyword_id)
                                 Heap Fetches: 25564
                     ->  Index Scan using movie_id_aka_title on aka_title at  (cost=0.42..0.48 rows=3 width=25) (actual time=0.003..0.003 rows=0 loops=25564)
                           Index Cond: (movie_id = mk.movie_id)
 Planning Time: 30.473 ms
 Execution Time: 1661.136 ms
(46 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3790.42..3790.43 rows=1 width=64) (actual time=833.729..833.730 rows=1 loops=1)
   ->  Nested Loop  (cost=9.46..3790.05 rows=74 width=33) (actual time=37.296..833.398 rows=385 loops=1)
         Join Filter: (n.id = an.person_id)
         ->  Nested Loop  (cost=9.03..3774.48 rows=32 width=25) (actual time=37.216..827.482 rows=323 loops=1)
               ->  Nested Loop  (cost=8.60..3759.93 rows=32 width=21) (actual time=37.113..820.483 rows=323 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=8.04..3755.95 rows=2 width=29) (actual time=37.035..816.668 rows=25 loops=1)
                           ->  Nested Loop  (cost=7.62..3753.72 rows=5 width=33) (actual time=36.585..815.781 rows=54 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.19..3753.12 rows=1 width=25) (actual time=29.359..814.024 rows=146 loops=1)
                                       ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.873..270.949 rows=41840 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.260..26.768 rows=1 loops=1)
                                                   Filter: ((keyword)::text = 'character-name-in-title'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.604..229.428 rows=41840 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=11541
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.887..7.887 rows=41840 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.012..0.012 rows=0 loops=41840)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: ((episode_nr >= 50) AND (episode_nr < 100))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.009..0.011 rows=0 loops=146)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.015..0.015 rows=0 loops=54)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.033..0.144 rows=13 loops=25)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.020..0.020 rows=1 loops=323)
                     Index Cond: (id = ci.person_id)
                     Heap Fetches: 323
         ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.46 rows=2 width=20) (actual time=0.015..0.017 rows=1 loops=323)
               Index Cond: (person_id = ci.person_id)
 Planning Time: 16.640 ms
 Execution Time: 834.408 ms
(38 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=5125.30..5125.31 rows=1 width=64) (actual time=51378.822..51378.822 rows=1 loops=1)
   ->  Nested Loop  (cost=9.46..5111.49 rows=2761 width=33) (actual time=12.285..49778.002 rows=3710592 loops=1)
         Join Filter: (n.id = an.person_id)
         ->  Nested Loop  (cost=9.03..4526.68 rows=1202 width=25) (actual time=12.214..33725.960 rows=2832555 loops=1)
               ->  Nested Loop  (cost=8.60..3979.90 rows=1202 width=21) (actual time=12.130..13551.197 rows=2832555 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=8.04..3852.77 rows=64 width=29) (actual time=11.209..3258.004 rows=68316 loops=1)
                           ->  Nested Loop  (cost=7.62..3773.45 rows=178 width=33) (actual time=11.078..1486.584 rows=148552 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.19..3752.95 rows=34 width=25) (actual time=10.953..908.253 rows=41840 loops=1)
                                       ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.915..271.517 rows=41840 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.329..26.401 rows=1 loops=1)
                                                   Filter: ((keyword)::text = 'character-name-in-title'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.578..229.873 rows=41840 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=11541
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.858..7.858 rows=41840 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.014..0.014 rows=1 loops=41840)
                                             Index Cond: (id = mk.movie_id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.008..0.011 rows=4 loops=41840)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.011..0.011 rows=0 loops=148552)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.010..0.136 rows=41 loops=68316)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=2832555)
                     Index Cond: (id = ci.person_id)
                     Heap Fetches: 2832555
         ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.46 rows=2 width=20) (actual time=0.004..0.005 rows=1 loops=2832555)
               Index Cond: (person_id = ci.person_id)
 Planning Time: 16.639 ms
 Execution Time: 51379.612 ms
(36 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4271.02..4271.03 rows=1 width=64) (actual time=4453.752..4453.753 rows=1 loops=1)
   ->  Nested Loop  (cost=9.46..4265.81 rows=1042 width=33) (actual time=12.237..4317.042 rows=319932 loops=1)
         Join Filter: (n.id = an.person_id)
         ->  Nested Loop  (cost=9.03..4044.93 rows=454 width=25) (actual time=12.166..3077.827 rows=221609 loops=1)
               ->  Nested Loop  (cost=8.60..3838.40 rows=454 width=21) (actual time=12.066..1629.613 rows=221609 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=8.04..3790.73 rows=24 width=29) (actual time=12.010..873.276 rows=8538 loops=1)
                           ->  Nested Loop  (cost=7.62..3760.87 rows=67 width=33) (actual time=11.119..806.536 rows=11406 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.19..3753.04 rows=13 width=25) (actual time=10.918..739.258 rows=6926 loops=1)
                                       ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.884..255.930 rows=41840 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.316..26.604 rows=1 loops=1)
                                                   Filter: ((keyword)::text = 'character-name-in-title'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.560..214.767 rows=41840 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=11541
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.841..7.841 rows=41840 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.011..0.011 rows=0 loops=41840)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: (episode_nr < 100)
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.006..0.008 rows=2 loops=6926)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=11406)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.008..0.080 rows=26 loops=8538)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=221609)
                     Index Cond: (id = ci.person_id)
                     Heap Fetches: 221609
         ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.46 rows=2 width=20) (actual time=0.004..0.005 rows=1 loops=221609)
               Index Cond: (person_id = ci.person_id)
 Planning Time: 16.719 ms
 Execution Time: 4454.491 ms
(38 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4132.51..4132.52 rows=1 width=64) (actual time=3653.897..3653.898 rows=1 loops=1)
   ->  Nested Loop  (cost=9.46..4128.69 rows=764 width=33) (actual time=12.298..3546.146 rows=249455 loops=1)
         Join Filter: (n.id = an.person_id)
         ->  Nested Loop  (cost=9.03..3967.16 rows=332 width=25) (actual time=12.226..2572.673 rows=169273 loops=1)
               ->  Nested Loop  (cost=8.60..3816.14 rows=332 width=21) (actual time=12.144..1443.861 rows=169273 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=8.04..3780.38 rows=18 width=29) (actual time=12.076..853.258 rows=6766 loops=1)
                           ->  Nested Loop  (cost=7.62..3758.55 rows=49 width=33) (actual time=11.221..801.617 rows=8661 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.19..3753.12 rows=9 width=25) (actual time=11.023..747.511 rows=5385 loops=1)
                                       ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.993..257.532 rows=41840 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.332..26.492 rows=1 loops=1)
                                                   Filter: ((keyword)::text = 'character-name-in-title'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.652..216.392 rows=41840 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=11541
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.929..7.929 rows=41840 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.011..0.011 rows=0 loops=41840)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: ((episode_nr >= 5) AND (episode_nr < 100))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.007..0.008 rows=2 loops=5385)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=8661)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.009..0.078 rows=25 loops=6766)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=169273)
                     Index Cond: (id = ci.person_id)
                     Heap Fetches: 169273
         ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.46 rows=2 width=20) (actual time=0.004..0.005 rows=1 loops=169273)
               Index Cond: (person_id = ci.person_id)
 Planning Time: 16.832 ms
 Execution Time: 3654.663 ms
(38 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4530.17..4530.18 rows=1 width=64) (actual time=33235.308..33235.308 rows=1 loops=1)
   ->  Nested Loop  (cost=9.03..4529.69 rows=97 width=15) (actual time=12.194..33078.647 rows=258289 loops=1)
         ->  Nested Loop  (cost=8.60..3979.90 rows=1202 width=4) (actual time=12.037..13190.729 rows=2832555 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=8.04..3852.77 rows=64 width=12) (actual time=11.107..3086.546 rows=68316 loops=1)
                     ->  Nested Loop  (cost=7.62..3773.45 rows=178 width=16) (actual time=10.973..1455.669 rows=148552 loops=1)
                           Join Filter: (t.id = mc.movie_id)
                           ->  Nested Loop  (cost=7.19..3752.95 rows=34 width=8) (actual time=10.846..893.449 rows=41840 loops=1)
                                 ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.816..266.657 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.318..26.726 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.489..225.281 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.768..7.768 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=41840)
                                       Index Cond: (id = mk.movie_id)
                                       Heap Fetches: 41840
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.008..0.011 rows=4 loops=41840)
                                 Index Cond: (movie_id = mk.movie_id)
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.010..0.010 rows=0 loops=148552)
                           Index Cond: (id = mc.company_id)
                           Filter: ((country_code)::text = '[us]'::text)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.009..0.134 rows=41 loops=68316)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.007..0.007 rows=0 loops=2832555)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ 'B%'::text)
               Rows Removed by Filter: 1
 Planning Time: 10.645 ms
 Execution Time: 33236.075 ms
(34 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4371.77..4371.78 rows=1 width=64) (actual time=32241.445..32241.446 rows=1 loops=1)
   ->  Nested Loop  (cost=9.03..4371.77 rows=1 width=15) (actual time=27.007..32202.805 rows=52306 loops=1)
         ->  Nested Loop  (cost=8.60..4371.31 rows=1 width=27) (actual time=26.941..31938.852 rows=52306 loops=1)
               ->  Nested Loop  (cost=8.18..4370.87 rows=1 width=31) (actual time=26.885..31439.959 rows=52306 loops=1)
                     ->  Nested Loop  (cost=7.75..4370.30 rows=1 width=23) (actual time=26.846..31278.293 rows=6642 loops=1)
                           ->  Nested Loop  (cost=7.32..3800.84 rows=1245 width=12) (actual time=10.996..11840.133 rows=1038393 loops=1)
                                 ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.949..265.673 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.298..26.587 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.643..223.011 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.920..7.920 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.017..0.262 rows=25 loops=41840)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.018..0.018 rows=0 loops=1038393)
                                 Index Cond: (id = ci.person_id)
                                 Filter: ((name)::text ~~ 'Z%'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.52 rows=5 width=8) (actual time=0.014..0.021 rows=8 loops=6642)
                           Index Cond: (movie_id = ci.movie_id)
               ->  Index Only Scan using company_name_pkey on company_name cn  (cost=0.42..0.44 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=52306)
                     Index Cond: (id = mc.company_id)
                     Heap Fetches: 52306
         ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.45 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=52306)
               Index Cond: (id = ci.movie_id)
               Heap Fetches: 52306
 Planning Time: 10.725 ms
 Execution Time: 32242.129 ms
(31 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4371.77..4371.78 rows=1 width=64) (actual time=34059.759..34059.759 rows=1 loops=1)
   ->  Nested Loop  (cost=9.03..4371.77 rows=1 width=15) (actual time=243.145..34057.175 rows=1918 loops=1)
         ->  Nested Loop  (cost=8.60..4371.31 rows=1 width=27) (actual time=243.063..34041.767 rows=1918 loops=1)
               ->  Nested Loop  (cost=8.18..4370.87 rows=1 width=31) (actual time=242.990..34006.372 rows=1918 loops=1)
                     ->  Nested Loop  (cost=7.75..4370.30 rows=1 width=23) (actual time=242.936..33994.603 rows=250 loops=1)
                           ->  Nested Loop  (cost=7.32..3800.84 rows=1245 width=12) (actual time=11.252..11942.855 rows=1038393 loops=1)
                                 ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=11.201..282.282 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.366..26.652 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.827..238.944 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=8.112..8.112 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.018..0.264 rows=25 loops=41840)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.020..0.020 rows=0 loops=1038393)
                                 Index Cond: (id = ci.person_id)
                                 Filter: ((name)::text ~~ 'X%'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.52 rows=5 width=8) (actual time=0.030..0.041 rows=8 loops=250)
                           Index Cond: (movie_id = ci.movie_id)
               ->  Index Only Scan using company_name_pkey on company_name cn  (cost=0.42..0.44 rows=1 width=4) (actual time=0.017..0.017 rows=1 loops=1918)
                     Index Cond: (id = mc.company_id)
                     Heap Fetches: 1918
         ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.45 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=1918)
               Index Cond: (id = ci.movie_id)
               Heap Fetches: 1918
 Planning Time: 10.969 ms
 Execution Time: 34060.415 ms
(31 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4371.77..4371.78 rows=1 width=32) (actual time=31704.399..31704.399 rows=1 loops=1)
   ->  Nested Loop  (cost=9.03..4371.77 rows=1 width=15) (actual time=131.258..31690.718 rows=11538 loops=1)
         ->  Nested Loop  (cost=8.60..4371.31 rows=1 width=27) (actual time=131.189..31606.458 rows=11538 loops=1)
               ->  Nested Loop  (cost=8.18..4370.87 rows=1 width=31) (actual time=131.113..31430.034 rows=11538 loops=1)
                     ->  Nested Loop  (cost=7.75..4370.30 rows=1 width=23) (actual time=131.063..31367.366 rows=1972 loops=1)
                           ->  Nested Loop  (cost=7.32..3800.84 rows=1245 width=12) (actual time=10.943..11835.563 rows=1038393 loops=1)
                                 ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.897..266.052 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.298..26.429 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.591..223.635 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.860..7.860 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.017..0.262 rows=25 loops=41840)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.018..0.018 rows=0 loops=1038393)
                                 Index Cond: (id = ci.person_id)
                                 Filter: ((name)::text ~~ '%Bert%'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.52 rows=5 width=8) (actual time=0.019..0.028 rows=6 loops=1972)
                           Index Cond: (movie_id = ci.movie_id)
               ->  Index Only Scan using company_name_pkey on company_name cn  (cost=0.42..0.44 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=11538)
                     Index Cond: (id = mc.company_id)
                     Heap Fetches: 11538
         ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.45 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=11538)
               Index Cond: (id = ci.movie_id)
               Heap Fetches: 11538
 Planning Time: 10.892 ms
 Execution Time: 31705.020 ms
(31 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4529.69..4529.70 rows=1 width=32) (actual time=33626.339..33626.340 rows=1 loops=1)
   ->  Nested Loop  (cost=9.03..4526.68 rows=1202 width=15) (actual time=12.230..32443.553 rows=2832555 loops=1)
         ->  Nested Loop  (cost=8.60..3979.90 rows=1202 width=4) (actual time=12.141..13335.993 rows=2832555 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=8.04..3852.77 rows=64 width=12) (actual time=11.206..3076.745 rows=68316 loops=1)
                     ->  Nested Loop  (cost=7.62..3773.45 rows=178 width=16) (actual time=11.075..1456.546 rows=148552 loops=1)
                           Join Filter: (t.id = mc.movie_id)
                           ->  Nested Loop  (cost=7.19..3752.95 rows=34 width=8) (actual time=10.946..891.309 rows=41840 loops=1)
                                 ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.916..265.777 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.292..26.481 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.616..224.905 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.901..7.901 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=41840)
                                       Index Cond: (id = mk.movie_id)
                                       Heap Fetches: 41840
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.008..0.011 rows=4 loops=41840)
                                 Index Cond: (movie_id = mk.movie_id)
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.010..0.010 rows=0 loops=148552)
                           Index Cond: (id = mc.company_id)
                           Filter: ((country_code)::text = '[us]'::text)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.009..0.136 rows=41 loops=68316)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=19) (actual time=0.006..0.006 rows=1 loops=2832555)
               Index Cond: (id = ci.person_id)
 Planning Time: 10.570 ms
 Execution Time: 33626.992 ms
(32 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4654.76..4654.77 rows=1 width=32) (actual time=37895.895..37895.895 rows=1 loops=1)
   ->  Nested Loop  (cost=9.03..4653.75 rows=401 width=15) (actual time=15.234..37503.526 rows=1113120 loops=1)
         ->  Nested Loop  (cost=8.61..4476.08 rows=401 width=19) (actual time=15.173..34052.177 rows=1113120 loops=1)
               ->  Nested Loop  (cost=8.18..4389.95 rows=151 width=27) (actual time=11.121..32572.132 rows=149494 loops=1)
                     ->  Nested Loop  (cost=7.75..3820.49 rows=1245 width=16) (actual time=11.048..12791.474 rows=1038393 loops=1)
                           Join Filter: (t.id = ci.movie_id)
                           ->  Nested Loop  (cost=7.19..3752.95 rows=34 width=8) (actual time=10.999..899.869 rows=41840 loops=1)
                                 ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.961..269.017 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.328..26.641 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.625..226.057 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.916..7.916 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=41840)
                                       Index Cond: (id = mk.movie_id)
                                       Heap Fetches: 41840
                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.018..0.265 rows=25 loops=41840)
                                 Index Cond: (movie_id = mk.movie_id)
                     ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.018..0.018 rows=0 loops=1038393)
                           Index Cond: (id = ci.person_id)
                           Filter: ((name)::text ~~ '%B%'::text)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.52 rows=5 width=8) (actual time=0.005..0.008 rows=7 loops=149494)
                     Index Cond: (movie_id = ci.movie_id)
         ->  Index Only Scan using company_name_pkey on company_name cn  (cost=0.42..0.44 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1113120)
               Index Cond: (id = mc.company_id)
               Heap Fetches: 1113120
 Planning Time: 10.924 ms
 Execution Time: 37896.571 ms
(32 rows)

SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=111692.15..111692.16 rows=1 width=96) (actual time=13790.840..13790.841 rows=1 loops=1)
   ->  Nested Loop  (cost=1006.71..111692.14 rows=1 width=65) (actual time=1623.434..13789.430 rows=410 loops=1)
         ->  Gather  (cost=1006.28..111691.68 rows=1 width=60) (actual time=1623.322..13781.770 rows=410 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Nested Loop  (cost=6.28..110691.58 rows=1 width=60) (actual time=665.137..13778.000 rows=137 loops=3)
                     ->  Nested Loop  (cost=5.85..108696.70 rows=3377 width=64) (actual time=3.101..12625.229 rows=35780 loops=3)
                           ->  Hash Join  (cost=5.29..74146.13 rows=1468 width=56) (actual time=1.235..3926.403 rows=15144 loops=3)
                                 Hash Cond: (mi.info_type_id = it1.id)
                                 ->  Nested Loop  (cost=2.86..73692.04 rows=165842 width=60) (actual time=0.254..3652.822 rows=2310111 loops=3)
                                       ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=9) (actual time=0.135..212.218 rows=153308 loops=3)
                                             Hash Cond: (mi_idx.info_type_id = it2.id)
                                             ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=13) (actual time=0.037..93.228 rows=460012 loops=3)
                                             ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.043..0.043 rows=1 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.020..0.022 rows=1 loops=3)
                                                         Filter: ((info)::text = 'votes'::text)
                                                         Rows Removed by Filter: 112
                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..11.06 rows=42 width=51) (actual time=0.005..0.019 rows=15 loops=459925)
                                             Index Cond: (movie_id = mi_idx.movie_id)
                                 ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.075..0.075 rows=1 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.051..0.053 rows=1 loops=3)
                                             Filter: ((info)::text = 'budget'::text)
                                             Rows Removed by Filter: 112
                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..23.52 rows=2 width=8) (actual time=0.332..0.572 rows=2 loops=45431)
                                 Index Cond: (movie_id = mi.movie_id)
                                 Filter: ((note)::text = ANY ('{(producer),"(executive producer)"}'::text[]))
                                 Rows Removed by Filter: 38
                     ->  Index Scan using name_pkey on name n  (cost=0.43..0.59 rows=1 width=4) (actual time=0.031..0.031 rows=0 loops=107339)
                           Index Cond: (id = ci.person_id)
                           Filter: (((name)::text ~~ '%Tim%'::text) AND ((gender)::text = 'm'::text))
                           Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.46 rows=1 width=21) (actual time=0.031..0.031 rows=1 loops=410)
               Index Cond: (id = mi.movie_id)
 Planning Time: 10.386 ms
 Execution Time: 13797.387 ms
(37 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=17462.60..17462.61 rows=1 width=96) (actual time=494.641..494.641 rows=1 loops=1)
   ->  Nested Loop  (cost=1004.43..17462.59 rows=1 width=65) (actual time=251.238..494.575 rows=11 loops=1)
         ->  Nested Loop  (cost=1004.00..17461.90 rows=1 width=69) (actual time=81.085..486.450 rows=268 loops=1)
               ->  Gather  (cost=1003.43..17437.17 rows=1 width=77) (actual time=26.618..332.148 rows=358 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Nested Loop  (cost=3.43..16437.07 rows=1 width=77) (actual time=17.973..431.602 rows=119 loops=3)
                           ->  Nested Loop  (cost=3.29..16435.43 rows=10 width=81) (actual time=17.955..431.019 rows=119 loops=3)
                                 ->  Nested Loop  (cost=2.86..15789.08 rows=56 width=30) (actual time=2.008..268.333 rows=2051 loops=3)
                                       ->  Hash Join  (cost=2.43..15179.85 rows=178 width=9) (actual time=0.299..142.977 rows=5283 loops=3)
                                             Hash Cond: (mi_idx.info_type_id = it2.id)
                                             ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..15122.68 rows=20101 width=13) (actual time=0.060..135.524 rows=17883 loops=3)
                                                   Filter: ((info)::text > '8.0'::text)
                                                   Rows Removed by Filter: 442129
                                             ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.069..0.070 rows=1 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.044..0.046 rows=1 loops=3)
                                                         Filter: ((info)::text = 'rating'::text)
                                                         Rows Removed by Filter: 112
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..3.42 rows=1 width=21) (actual time=0.023..0.023 rows=0 loops=15849)
                                             Index Cond: (id = mi_idx.movie_id)
                                             Filter: ((production_year >= 2008) AND (production_year <= 2014))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..11.53 rows=1 width=51) (actual time=0.078..0.078 rows=0 loops=6152)
                                       Index Cond: (movie_id = t.id)
                                       Filter: ((note IS NULL) AND ((info)::text = ANY ('{Horror,Thriller}'::text[])))
                                       Rows Removed by Filter: 18
                           ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=358)
                                 Index Cond: (id = mi.info_type_id)
                                 Filter: ((info)::text = 'genres'::text)
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..24.72 rows=1 width=8) (actual time=0.341..0.443 rows=1 loops=358)
                     Index Cond: (movie_id = t.id)
                     Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                     Rows Removed by Filter: 34
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.69 rows=1 width=4) (actual time=0.029..0.029 rows=0 loops=268)
               Index Cond: (id = ci.person_id)
               Filter: ((gender IS NOT NULL) AND ((gender)::text = 'f'::text))
               Rows Removed by Filter: 1
 Planning Time: 10.239 ms
 Execution Time: 500.097 ms
(40 rows)

SET
                                                                                          QUERY PLAN                                                                                          
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=74751.79..74751.80 rows=1 width=96) (actual time=17569.220..17569.220 rows=1 loops=1)
   ->  Gather  (cost=74751.57..74751.78 rows=2 width=96) (actual time=17569.082..17575.338 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=73751.57..73751.58 rows=1 width=96) (actual time=17560.529..17560.530 rows=1 loops=3)
               ->  Nested Loop  (cost=6.71..73751.49 rows=11 width=65) (actual time=41.191..17546.958 rows=9358 loops=3)
                     ->  Nested Loop  (cost=6.28..73732.96 rows=27 width=69) (actual time=23.474..17077.753 rows=18052 loops=3)
                           ->  Nested Loop  (cost=5.72..73229.83 rows=21 width=77) (actual time=1.471..4334.077 rows=34172 loops=3)
                                 Join Filter: (mi.movie_id = t.id)
                                 ->  Hash Join  (cost=5.29..73217.55 rows=21 width=56) (actual time=1.370..3812.345 rows=34172 loops=3)
                                       Hash Cond: (mi.info_type_id = it1.id)
                                       ->  Nested Loop  (cost=2.86..73208.58 rows=2405 width=60) (actual time=1.148..3783.577 rows=34964 loops=3)
                                             ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=9) (actual time=0.133..253.367 rows=153308 loops=3)
                                                   Hash Cond: (mi_idx.info_type_id = it2.id)
                                                   ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=13) (actual time=0.039..99.202 rows=460012 loops=3)
                                                   ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.039..0.039 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.019..0.022 rows=1 loops=3)
                                                               Filter: ((info)::text = 'votes'::text)
                                                               Rows Removed by Filter: 112
                                             ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..11.38 rows=1 width=51) (actual time=0.022..0.022 rows=0 loops=459925)
                                                   Index Cond: (movie_id = mi_idx.movie_id)
                                                   Filter: ((info)::text = ANY ('{Horror,Action,Sci-Fi,Thriller,Crime,War}'::text[]))
                                                   Rows Removed by Filter: 15
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.084..0.084 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.050..0.062 rows=1 loops=3)
                                                   Filter: ((info)::text = 'genres'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=21) (actual time=0.014..0.014 rows=1 loops=102516)
                                       Index Cond: (id = mi_idx.movie_id)
                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..23.95 rows=1 width=8) (actual time=0.317..0.372 rows=1 loops=102516)
                                 Index Cond: (movie_id = t.id)
                                 Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                 Rows Removed by Filter: 39
                     ->  Index Scan using name_pkey on name n  (cost=0.43..0.69 rows=1 width=4) (actual time=0.025..0.025 rows=1 loops=54155)
                           Index Cond: (id = ci.person_id)
                           Filter: ((gender)::text = 'm'::text)
                           Rows Removed by Filter: 0
 Planning Time: 10.153 ms
 Execution Time: 17575.982 ms
(41 rows)

SET
                                                                                                QUERY PLAN                                                                                                 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=85507.29..85507.30 rows=1 width=64) (actual time=562.465..562.466 rows=1 loops=1)
   ->  Nested Loop  (cost=1004.44..85507.29 rows=1 width=32) (actual time=277.687..562.324 rows=184 loops=1)
         ->  Nested Loop  (cost=1004.30..85507.10 rows=1 width=36) (actual time=277.652..561.892 rows=184 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=1003.86..85479.65 rows=1 width=44) (actual time=277.507..550.448 rows=77 loops=1)
                     ->  Nested Loop  (cost=1003.44..85478.45 rows=1 width=48) (actual time=277.455..549.286 rows=79 loops=1)
                           Join Filter: (t.id = mc.movie_id)
                           ->  Nested Loop  (cost=1003.01..85475.72 rows=1 width=40) (actual time=277.366..546.684 rows=102 loops=1)
                                 ->  Gather  (cost=1002.58..85474.30 rows=1 width=44) (actual time=225.172..547.685 rows=115 loops=1)
                                       Workers Planned: 2
                                       Workers Launched: 2
                                       ->  Nested Loop  (cost=2.58..84474.20 rows=1 width=44) (actual time=218.490..549.421 rows=38 loops=3)
                                             ->  Hash Join  (cost=2.15..84471.40 rows=2 width=23) (actual time=216.705..546.337 rows=142 loops=3)
                                                   Hash Cond: (ci.role_id = rt.id)
                                                   ->  Nested Loop  (cost=0.99..84470.16 rows=19 width=27) (actual time=216.490..546.031 rows=142 loops=3)
                                                         Join Filter: (n.id = ci.person_id)
                                                         ->  Nested Loop  (cost=0.42..82155.48 rows=9 width=23) (actual time=210.403..524.297 rows=519 loops=3)
                                                               ->  Parallel Seq Scan on name n  (cost=0.00..81659.82 rows=40 width=19) (actual time=209.681..499.258 rows=2256 loops=3)
                                                                     Filter: (((name)::text ~~ '%Ang%'::text) AND ((gender)::text = 'f'::text))
                                                                     Rows Removed by Filter: 1386908
                                                               ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..12.37 rows=2 width=4) (actual time=0.010..0.010 rows=0 loops=6768)
                                                                     Index Cond: (person_id = n.id)
                                                                     Heap Fetches: 1558
                                                         ->  Index Scan using person_id_cast_info on cast_info ci  (cost=0.56..257.04 rows=12 width=16) (actual time=0.039..0.041 rows=0 loops=1558)
                                                               Index Cond: (person_id = an.person_id)
                                                               Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                               Rows Removed by Filter: 44
                                                   ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.074..0.074 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.039..0.041 rows=1 loops=3)
                                                               Filter: ((role)::text = 'actress'::text)
                                                               Rows Removed by Filter: 11
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..1.40 rows=1 width=21) (actual time=0.021..0.021 rows=0 loops=425)
                                                   Index Cond: (id = ci.movie_id)
                                                   Filter: ((production_year >= 2005) AND (production_year <= 2009))
                                                   Rows Removed by Filter: 1
                                 ->  Index Only Scan using char_name_pkey on char_name chn  (cost=0.43..1.42 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=115)
                                       Index Cond: (id = ci.person_role_id)
                                       Heap Fetches: 102
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.72 rows=1 width=8) (actual time=0.020..0.025 rows=1 loops=102)
                                 Index Cond: (movie_id = ci.movie_id)
                                 Filter: ((note IS NOT NULL) AND (((note)::text ~~ '%(USA)%'::text) OR ((note)::text ~~ '%(worldwide)%'::text)))
                                 Rows Removed by Filter: 6
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.20 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=79)
                           Index Cond: (id = mc.company_id)
                           Filter: ((country_code)::text = '[us]'::text)
                           Rows Removed by Filter: 0
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..27.43 rows=2 width=8) (actual time=0.042..0.147 rows=2 loops=77)
                     Index Cond: (movie_id = ci.movie_id)
                     Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%200%'::text) OR ((info)::text ~~ 'USA:%200%'::text)))
                     Rows Removed by Filter: 166
         ->  Index Scan using info_type_pkey on info_type it  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=184)
               Index Cond: (id = mi.info_type_id)
               Filter: ((info)::text = 'release dates'::text)
 Planning Time: 50.375 ms
 Execution Time: 566.071 ms
(56 rows)

SET
                                                                                                   QUERY PLAN                                                                                                   
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=55722.95..55722.96 rows=1 width=64) (actual time=282.070..282.070 rows=1 loops=1)
   ->  Nested Loop  (cost=1003.41..55722.94 rows=1 width=32) (actual time=232.339..282.051 rows=15 loops=1)
         ->  Nested Loop  (cost=1003.28..55722.77 rows=1 width=36) (actual time=232.275..281.959 rows=15 loops=1)
               Join Filter: (ci.person_id = n.id)
               ->  Nested Loop  (cost=1002.85..55721.23 rows=1 width=29) (actual time=220.649..279.904 rows=275 loops=1)
                     ->  Nested Loop  (cost=1002.70..55721.05 rows=1 width=33) (actual time=220.616..279.319 rows=275 loops=1)
                           Join Filter: (t.id = mi.movie_id)
                           ->  Nested Loop  (cost=1002.27..55693.47 rows=1 width=41) (actual time=220.524..252.483 rows=275 loops=1)
                                 ->  Nested Loop  (cost=1001.85..55692.20 rows=1 width=45) (actual time=220.472..251.403 rows=275 loops=1)
                                       ->  Nested Loop  (cost=1001.42..55690.54 rows=1 width=41) (actual time=220.381..249.353 rows=99 loops=1)
                                             ->  Nested Loop  (cost=1001.00..55689.08 rows=1 width=45) (actual time=220.274..247.036 rows=100 loops=1)
                                                   Join Filter: (t.id = ci.movie_id)
                                                   ->  Gather  (cost=1000.43..55647.01 rows=1 width=29) (actual time=220.180..243.964 rows=4 loops=1)
                                                         Workers Planned: 2
                                                         Workers Launched: 2
                                                         ->  Nested Loop  (cost=0.43..54646.91 rows=1 width=29) (actual time=235.387..262.421 rows=1 loops=3)
                                                               ->  Parallel Seq Scan on title t  (cost=0.00..54433.61 rows=10 width=21) (actual time=86.728..262.210 rows=2 loops=3)
                                                                     Filter: ((production_year >= 2007) AND (production_year <= 2008) AND ((title)::text ~~ '%Kung%Fu%Panda%'::text))
                                                                     Rows Removed by Filter: 842768
                                                               ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..21.32 rows=1 width=8) (actual time=0.081..0.087 rows=1 loops=7)
                                                                     Index Cond: (movie_id = t.id)
                                                                     Filter: (((note)::text ~~ '%(200%)%'::text) AND (((note)::text ~~ '%(USA)%'::text) OR ((note)::text ~~ '%(worldwide)%'::text)))
                                                                     Rows Removed by Filter: 6
                                                   ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..42.06 rows=1 width=16) (actual time=0.034..1.176 rows=25 loops=4)
                                                         Index Cond: (movie_id = mc.movie_id)
                                                         Filter: ((note)::text = '(voice)'::text)
                                                         Rows Removed by Filter: 127
                                             ->  Index Only Scan using char_name_pkey on char_name chn  (cost=0.43..1.46 rows=1 width=4) (actual time=0.022..0.022 rows=1 loops=100)
                                                   Index Cond: (id = ci.person_role_id)
                                                   Heap Fetches: 99
                                       ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..1.64 rows=2 width=4) (actual time=0.015..0.019 rows=3 loops=99)
                                             Index Cond: (person_id = ci.person_id)
                                             Heap Fetches: 275
                                 ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.27 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=275)
                                       Index Cond: (id = mc.company_id)
                                       Filter: ((country_code)::text = '[us]'::text)
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..27.56 rows=1 width=8) (actual time=0.016..0.097 rows=1 loops=275)
                                 Index Cond: (movie_id = ci.movie_id)
                                 Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%2007%'::text) OR ((info)::text ~~ 'USA:%2008%'::text)))
                                 Rows Removed by Filter: 295
                     ->  Index Scan using info_type_pkey on info_type it  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=275)
                           Index Cond: (id = mi.info_type_id)
                           Filter: ((info)::text = 'release dates'::text)
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.53 rows=1 width=19) (actual time=0.007..0.007 rows=0 loops=275)
                     Index Cond: (id = an.person_id)
                     Filter: (((name)::text ~~ '%Angel%'::text) AND ((gender)::text = 'f'::text))
                     Rows Removed by Filter: 1
         ->  Index Scan using role_type_pkey on role_type rt  (cost=0.14..0.16 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=15)
               Index Cond: (id = ci.role_id)
               Filter: ((role)::text = 'actress'::text)
 Planning Time: 48.068 ms
 Execution Time: 284.517 ms
(52 rows)

SET
                                                                                                           QUERY PLAN                                                                                                           
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=224820.56..224820.57 rows=1 width=64) (actual time=4032.005..4032.006 rows=1 loops=1)
   ->  Gather  (cost=224820.34..224820.55 rows=2 width=64) (actual time=4010.291..4038.658 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=223820.34..223820.35 rows=1 width=64) (actual time=4002.303..4002.303 rows=1 loops=3)
               ->  Nested Loop  (cost=135386.97..223820.33 rows=2 width=32) (actual time=3025.674..4001.614 rows=1192 loops=3)
                     Join Filter: (n.id = an.person_id)
                     ->  Nested Loop  (cost=135386.54..223818.68 rows=1 width=40) (actual time=3023.770..3995.985 rows=877 loops=3)
                           ->  Nested Loop  (cost=135386.12..223816.35 rows=2 width=44) (actual time=2933.190..3976.610 rows=2862 loops=3)
                                 ->  Hash Join  (cost=135385.69..223813.63 rows=1 width=52) (actual time=2874.877..3964.870 rows=710 loops=3)
                                       Hash Cond: (mi.info_type_id = it.id)
                                       ->  Nested Loop  (cost=135383.27..223811.07 rows=52 width=56) (actual time=2874.640..3964.040 rows=710 loops=3)
                                             ->  Nested Loop  (cost=135382.83..221277.71 rows=93 width=48) (actual time=2867.921..3884.964 rows=1116 loops=3)
                                                   ->  Nested Loop  (cost=135382.40..221003.48 rows=193 width=52) (actual time=2867.858..3864.798 rows=1229 loops=3)
                                                         ->  Hash Join  (cost=135381.97..195421.31 rows=16716 width=33) (actual time=2865.754..3454.004 rows=56136 loops=3)
                                                               Hash Cond: (t.id = ci.movie_id)
                                                               ->  Parallel Seq Scan on title t  (cost=0.00..49166.29 rows=575821 width=21) (actual time=0.050..292.288 rows=460484 loops=3)
                                                                     Filter: (production_year > 2000)
                                                                     Rows Removed by Filter: 382286
                                                               ->  Hash  (cost=134105.54..134105.54 rows=73395 width=12) (actual time=2863.143..2863.143 rows=276166 loops=3)
                                                                     Buckets: 131072 (originally 131072)  Batches: 4 (originally 2)  Memory Usage: 3984kB
                                                                     ->  Nested Loop  (cost=0.56..134105.54 rows=73395 width=12) (actual time=0.291..2752.217 rows=276166 loops=3)
                                                                           ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.043..0.048 rows=1 loops=3)
                                                                                 Filter: ((role)::text = 'actress'::text)
                                                                                 Rows Removed by Filter: 11
                                                                           ->  Index Scan using role_id_cast_info on cast_info ci  (cost=0.56..133303.71 rows=80067 width=16) (actual time=0.246..2714.471 rows=276166 loops=3)
                                                                                 Index Cond: (role_id = rt.id)
                                                                                 Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                                 Rows Removed by Filter: 7175807
                                                         ->  Index Scan using name_pkey on name n  (cost=0.43..1.53 rows=1 width=19) (actual time=0.007..0.007 rows=0 loops=168407)
                                                               Index Cond: (id = ci.person_id)
                                                               Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                                               Rows Removed by Filter: 1
                                                   ->  Index Only Scan using char_name_pkey on char_name chn  (cost=0.43..1.42 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=3686)
                                                         Index Cond: (id = ci.person_role_id)
                                                         Heap Fetches: 3349
                                             ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..27.22 rows=2 width=8) (actual time=0.050..0.070 rows=1 loops=3349)
                                                   Index Cond: (movie_id = t.id)
                                                   Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%200%'::text) OR ((info)::text ~~ 'USA:%200%'::text)))
                                                   Rows Removed by Filter: 15
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.081..0.081 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.047..0.058 rows=1 loops=3)
                                                   Filter: ((info)::text = 'release dates'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.67 rows=5 width=8) (actual time=0.011..0.015 rows=4 loops=2129)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.16 rows=1 width=4) (actual time=0.006..0.006 rows=0 loops=8585)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..1.63 rows=2 width=4) (actual time=0.005..0.006 rows=1 loops=2632)
                           Index Cond: (person_id = ci.person_id)
                           Heap Fetches: 3575
 Planning Time: 48.675 ms
 Execution Time: 4039.499 ms
(56 rows)

SET
                                                                                                           QUERY PLAN                                                                                                           
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=281048.09..281048.10 rows=1 width=64) (actual time=13707.537..13707.537 rows=1 loops=1)
   ->  Gather  (cost=281047.87..281048.08 rows=2 width=64) (actual time=11457.023..13714.129 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=280047.87..280047.88 rows=1 width=64) (actual time=12534.751..12534.751 rows=1 loops=3)
               ->  Nested Loop  (cost=135386.97..280042.47 rows=1080 width=32) (actual time=2888.689..12340.469 rows=586882 loops=3)
                     ->  Nested Loop  (cost=135386.54..279269.61 rows=470 width=40) (actual time=2888.595..11261.649 rows=262348 loops=3)
                           ->  Nested Loop  (cost=135386.12..277763.14 rows=1294 width=44) (actual time=2888.397..7168.619 rows=1076352 loops=3)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Hash Join  (cost=135385.69..277101.59 rows=247 width=52) (actual time=2886.974..6077.100 rows=113945 loops=3)
                                       Hash Cond: (mi.info_type_id = it.id)
                                       ->  Nested Loop  (cost=135383.27..277023.18 rows=27899 width=56) (actual time=2886.717..5961.751 rows=540998 loops=3)
                                             ->  Nested Loop  (cost=135382.83..226386.57 rows=1846 width=48) (actual time=2886.610..4834.718 rows=53102 loops=3)
                                                   ->  Nested Loop  (cost=135382.40..220961.69 rows=3818 width=52) (actual time=2886.480..4132.171 rows=56088 loops=3)
                                                         ->  Hash Join  (cost=135381.97..195421.31 rows=16716 width=33) (actual time=2886.378..3537.569 rows=56136 loops=3)
                                                               Hash Cond: (t.id = ci.movie_id)
                                                               ->  Parallel Seq Scan on title t  (cost=0.00..49166.29 rows=575821 width=21) (actual time=0.045..291.428 rows=460484 loops=3)
                                                                     Filter: (production_year > 2000)
                                                                     Rows Removed by Filter: 382286
                                                               ->  Hash  (cost=134105.54..134105.54 rows=73395 width=12) (actual time=2883.753..2883.753 rows=276166 loops=3)
                                                                     Buckets: 131072 (originally 131072)  Batches: 4 (originally 2)  Memory Usage: 3984kB
                                                                     ->  Nested Loop  (cost=0.56..134105.54 rows=73395 width=12) (actual time=0.295..2771.913 rows=276166 loops=3)
                                                                           ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.032..0.037 rows=1 loops=3)
                                                                                 Filter: ((role)::text = 'actress'::text)
                                                                                 Rows Removed by Filter: 11
                                                                           ->  Index Scan using role_id_cast_info on cast_info ci  (cost=0.56..133303.71 rows=80067 width=16) (actual time=0.254..2734.133 rows=276166 loops=3)
                                                                                 Index Cond: (role_id = rt.id)
                                                                                 Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                                 Rows Removed by Filter: 7175807
                                                         ->  Index Scan using name_pkey on name n  (cost=0.43..1.53 rows=1 width=19) (actual time=0.010..0.010 rows=1 loops=168407)
                                                               Index Cond: (id = ci.person_id)
                                                               Filter: ((gender)::text = 'f'::text)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Only Scan using char_name_pkey on char_name chn  (cost=0.43..1.42 rows=1 width=4) (actual time=0.012..0.012 rows=1 loops=168264)
                                                         Index Cond: (id = ci.person_role_id)
                                                         Heap Fetches: 159307
                                             ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..27.01 rows=42 width=8) (actual time=0.007..0.018 rows=10 loops=159307)
                                                   Index Cond: (movie_id = t.id)
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.077..0.077 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.047..0.058 rows=1 loops=3)
                                                   Filter: ((info)::text = 'release dates'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.62 rows=5 width=8) (actual time=0.004..0.007 rows=9 loops=341836)
                                       Index Cond: (movie_id = mi.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.16 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=3229056)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..1.62 rows=2 width=4) (actual time=0.003..0.004 rows=2 loops=787043)
                           Index Cond: (person_id = n.id)
                           Heap Fetches: 1760645
 Planning Time: 52.246 ms
 Execution Time: 13715.426 ms
(54 rows)

SET
                                                                                                 QUERY PLAN                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=19541.81..19541.82 rows=1 width=68) (actual time=161.516..161.516 rows=1 loops=1)
   ->  Gather  (cost=19541.58..19541.79 rows=2 width=68) (actual time=142.887..163.261 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=18541.58..18541.59 rows=1 width=68) (actual time=145.446..145.446 rows=1 loops=3)
               ->  Nested Loop  (cost=4.35..18541.23 rows=47 width=45) (actual time=136.118..145.362 rows=47 loops=3)
                     Join Filter: (mc.movie_id = t.id)
                     ->  Hash Join  (cost=3.92..18513.76 rows=47 width=32) (actual time=136.032..143.772 rows=47 loops=3)
                           Hash Cond: (mc.company_type_id = ct.id)
                           ->  Nested Loop  (cost=2.86..18511.69 rows=187 width=36) (actual time=135.839..143.538 rows=49 loops=3)
                                 ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=4) (actual time=135.690..135.790 rows=83 loops=3)
                                       Hash Cond: (mi_idx.info_type_id = it.id)
                                       ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=8) (actual time=0.033..79.347 rows=460012 loops=3)
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.054..0.054 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.043..0.044 rows=1 loops=3)
                                                   Filter: ((info)::text = 'top 250 rank'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.63 rows=1 width=32) (actual time=0.090..0.092 rows=1 loops=250)
                                       Index Cond: (movie_id = mi_idx.movie_id)
                                       Filter: (((note)::text !~~ '%(as Metro-Goldwyn-Mayer Pictures)%'::text) AND (((note)::text ~~ '%(co-production)%'::text) OR ((note)::text ~~ '%(presents)%'::text)))
                                       Rows Removed by Filter: 33
                           ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.073..0.073 rows=1 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                 ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.051..0.052 rows=1 loops=3)
                                       Filter: ((kind)::text = 'production companies'::text)
                                       Rows Removed by Filter: 3
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=25) (actual time=0.032..0.032 rows=1 loops=142)
                           Index Cond: (id = mi_idx.movie_id)
 Planning Time: 5.040 ms
 Execution Time: 163.722 ms
(31 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=20151.20..20151.21 rows=1 width=68) (actual time=144.877..144.878 rows=1 loops=1)
   ->  Gather  (cost=20150.97..20151.18 rows=2 width=68) (actual time=143.575..146.278 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=19150.97..19150.98 rows=1 width=68) (actual time=137.081..137.081 rows=1 loops=3)
               ->  Hash Join  (cost=4.35..19143.68 rows=972 width=45) (actual time=137.073..137.075 rows=1 loops=3)
                     Hash Cond: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=3.29..19121.60 rows=3890 width=49) (actual time=136.674..136.850 rows=22 loops=3)
                           Join Filter: (t.id = mc.movie_id)
                           ->  Nested Loop  (cost=2.86..18189.65 rows=1450 width=29) (actual time=136.622..136.690 rows=1 loops=3)
                                 ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=4) (actual time=136.466..136.471 rows=3 loops=3)
                                       Hash Cond: (mi_idx.info_type_id = it.id)
                                       ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=8) (actual time=0.051..80.271 rows=460012 loops=3)
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.047..0.048 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.037..0.038 rows=1 loops=3)
                                                   Filter: ((info)::text = 'bottom 10 rank'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.58 rows=1 width=25) (actual time=0.064..0.064 rows=0 loops=10)
                                       Index Cond: (id = mi_idx.movie_id)
                                       Filter: ((production_year >= 2005) AND (production_year <= 2010))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.61 rows=3 width=32) (actual time=0.088..0.116 rows=16 loops=4)
                                 Index Cond: (movie_id = mi_idx.movie_id)
                                 Filter: ((note)::text !~~ '%(as Metro-Goldwyn-Mayer Pictures)%'::text)
                                 Rows Removed by Filter: 2
                     ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.069..0.069 rows=1 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.049..0.050 rows=1 loops=3)
                                 Filter: ((kind)::text = 'production companies'::text)
                                 Rows Removed by Filter: 3
 Planning Time: 3.804 ms
 Execution Time: 146.867 ms
(33 rows)

SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=19470.70..19470.71 rows=1 width=68) (actual time=152.001..152.001 rows=1 loops=1)
   ->  Gather  (cost=19470.48..19470.69 rows=2 width=68) (actual time=151.990..152.143 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=18470.48..18470.49 rows=1 width=68) (actual time=140.973..140.973 rows=1 loops=3)
               ->  Nested Loop  (cost=4.35..18470.44 rows=5 width=45) (actual time=139.332..140.968 rows=1 loops=3)
                     Join Filter: (mc.movie_id = t.id)
                     ->  Hash Join  (cost=3.92..18449.90 rows=35 width=32) (actual time=137.451..140.863 rows=8 loops=3)
                           Hash Cond: (mc.company_type_id = ct.id)
                           ->  Nested Loop  (cost=2.86..18448.07 rows=141 width=36) (actual time=137.227..140.634 rows=8 loops=3)
                                 ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=4) (actual time=135.656..135.756 rows=83 loops=3)
                                       Hash Cond: (mi_idx.info_type_id = it.id)
                                       ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=8) (actual time=0.047..79.812 rows=460012 loops=3)
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.048..0.048 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.037..0.039 rows=1 loops=3)
                                                   Filter: ((info)::text = 'top 250 rank'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.62 rows=1 width=32) (actual time=0.057..0.058 rows=0 loops=250)
                                       Index Cond: (movie_id = mi_idx.movie_id)
                                       Filter: (((note)::text !~~ '%(as Metro-Goldwyn-Mayer Pictures)%'::text) AND ((note)::text ~~ '%(co-production)%'::text))
                                       Rows Removed by Filter: 33
                           ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.068..0.068 rows=1 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                 ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.048..0.049 rows=1 loops=3)
                                       Filter: ((kind)::text = 'production companies'::text)
                                       Rows Removed by Filter: 3
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=25) (actual time=0.013..0.013 rows=0 loops=23)
                           Index Cond: (id = mi_idx.movie_id)
                           Filter: (production_year > 2010)
                           Rows Removed by Filter: 1
 Planning Time: 3.816 ms
 Execution Time: 152.655 ms
(33 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=20999.43..20999.44 rows=1 width=68) (actual time=142.639..142.639 rows=1 loops=1)
   ->  Gather  (cost=20999.20..20999.41 rows=2 width=68) (actual time=141.729..143.969 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=19999.20..19999.21 rows=1 width=68) (actual time=135.444..135.444 rows=1 loops=3)
               ->  Hash Join  (cost=4.35..19985.21 rows=1865 width=45) (actual time=135.413..135.436 rows=1 loops=3)
                     Hash Cond: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=3.29..19943.82 rows=7460 width=49) (actual time=135.085..135.250 rows=26 loops=3)
                           ->  Nested Loop  (cost=2.86..18176.93 rows=2782 width=29) (actual time=135.033..135.093 rows=2 loops=3)
                                 ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=4) (actual time=134.989..134.993 rows=3 loops=3)
                                       Hash Cond: (mi_idx.info_type_id = it.id)
                                       ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=8) (actual time=0.045..78.958 rows=460012 loops=3)
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.052..0.052 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.041..0.042 rows=1 loops=3)
                                                   Filter: ((info)::text = 'bottom 10 rank'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=25) (actual time=0.029..0.029 rows=1 loops=10)
                                       Index Cond: (id = mi_idx.movie_id)
                                       Filter: (production_year > 2000)
                                       Rows Removed by Filter: 0
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.61 rows=3 width=32) (actual time=0.061..0.075 rows=13 loops=6)
                                 Index Cond: (movie_id = t.id)
                                 Filter: ((note)::text !~~ '%(as Metro-Goldwyn-Mayer Pictures)%'::text)
                                 Rows Removed by Filter: 2
                     ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.067..0.067 rows=1 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.047..0.048 rows=1 loops=3)
                                 Filter: ((kind)::text = 'production companies'::text)
                                 Rows Removed by Filter: 3
 Planning Time: 3.805 ms
 Execution Time: 144.422 ms
(32 rows)

SET
                                                                                             QUERY PLAN                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=12310.68..12310.69 rows=1 width=32) (actual time=12385.926..12385.926 rows=1 loops=1)
   ->  Nested Loop  (cost=9.03..12310.67 rows=1 width=17) (actual time=123.720..12385.800 rows=33 loops=1)
         ->  Nested Loop  (cost=8.60..12310.22 rows=1 width=21) (actual time=123.668..12384.778 rows=33 loops=1)
               ->  Nested Loop  (cost=8.17..12305.16 rows=11 width=25) (actual time=13.157..7464.860 rows=532809 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=7.61..12299.20 rows=3 width=29) (actual time=13.079..1565.382 rows=6016 loops=1)
                           Join Filter: (t.kind_id = kt.id)
                           Rows Removed by Join Filter: 1347
                           ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.047..0.049 rows=1 loops=1)
                                 Filter: ((kind)::text = 'movie'::text)
                                 Rows Removed by Filter: 6
                           ->  Nested Loop  (cost=7.61..12297.85 rows=21 width=33) (actual time=2.107..1562.425 rows=7363 loops=1)
                                 ->  Nested Loop  (cost=7.18..12286.63 rows=23 width=8) (actual time=2.049..1375.001 rows=8765 loops=1)
                                       Join Filter: (cc.status_id = cct2.id)
                                       Rows Removed by Join Filter: 8765
                                       ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.027..0.029 rows=2 loops=1)
                                             Filter: ((kind)::text ~~ '%complete%'::text)
                                             Rows Removed by Filter: 2
                                       ->  Nested Loop  (cost=7.18..12284.40 rows=94 width=12) (actual time=1.619..685.631 rows=8765 loops=2)
                                             Join Filter: (cc.subject_id = cct1.id)
                                             Rows Removed by Join Filter: 4045
                                             ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.005..0.008 rows=1 loops=2)
                                                   Filter: ((kind)::text = 'cast'::text)
                                                   Rows Removed by Filter: 3
                                             ->  Nested Loop  (cost=7.18..12278.66 rows=375 width=16) (actual time=1.609..681.416 rows=12810 loops=2)
                                                   ->  Nested Loop  (cost=6.76..12150.15 rows=270 width=4) (actual time=0.893..473.381 rows=35548 loops=2)
                                                         ->  Seq Scan on keyword k  (cost=0.00..3632.40 rows=8 width=4) (actual time=0.176..49.246 rows=8 loops=2)
                                                               Filter: ((keyword)::text = ANY ('{superhero,sequel,second-part,marvel-comics,based-on-comic,tv-special,fight,violence}'::text[]))
                                                               Rows Removed by Filter: 134162
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1061.72 rows=300 width=8) (actual time=1.566..51.234 rows=4444 loops=16)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=46976
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=1.144..1.144 rows=4444 loops=16)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.004..0.005 rows=0 loops=71096)
                                                         Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.020..0.020 rows=1 loops=8765)
                                       Index Cond: (id = mk.movie_id)
                                       Filter: (production_year > 1950)
                                       Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.028..0.916 rows=89 loops=6016)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=4) (actual time=0.008..0.008 rows=0 loops=532809)
                     Index Cond: (id = ci.person_role_id)
                     Filter: (((name)::text !~~ '%Sherlock%'::text) AND (((name)::text ~~ '%Tony%Stark%'::text) OR ((name)::text ~~ '%Iron%Man%'::text)))
                     Rows Removed by Filter: 0
         ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.028..0.028 rows=1 loops=33)
               Index Cond: (id = ci.person_id)
               Heap Fetches: 33
 Planning Time: 32.832 ms
 Execution Time: 12386.547 ms
(51 rows)

SET
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=12305.07..12305.08 rows=1 width=32) (actual time=9387.362..9387.362 rows=1 loops=1)
   ->  Nested Loop  (cost=9.03..12305.06 rows=1 width=17) (actual time=148.927..9387.266 rows=17 loops=1)
         ->  Nested Loop  (cost=8.60..12304.60 rows=1 width=21) (actual time=148.895..9386.268 rows=27 loops=1)
               ->  Nested Loop  (cost=8.17..12301.40 rows=7 width=25) (actual time=19.733..4858.787 rows=222518 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=7.61..12297.43 rows=2 width=29) (actual time=19.649..2268.948 rows=1472 loops=1)
                           Join Filter: (cc.status_id = cct2.id)
                           Rows Removed by Join Filter: 1472
                           ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.037..0.039 rows=2 loops=1)
                                 Filter: ((kind)::text ~~ '%complete%'::text)
                                 Rows Removed by Filter: 2
                           ->  Nested Loop  (cost=7.61..12296.29 rows=7 width=33) (actual time=16.352..1134.086 rows=1472 loops=2)
                                 Join Filter: (cc.subject_id = cct1.id)
                                 Rows Removed by Join Filter: 243
                                 ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.006..0.008 rows=1 loops=2)
                                       Filter: ((kind)::text = 'cast'::text)
                                       Rows Removed by Filter: 3
                                 ->  Nested Loop  (cost=7.61..12294.88 rows=29 width=37) (actual time=16.341..1133.382 rows=1715 loops=2)
                                       ->  Nested Loop  (cost=7.19..12284.84 rows=21 width=25) (actual time=16.099..1082.945 rows=6043 loops=2)
                                             Join Filter: (t.kind_id = kt.id)
                                             Rows Removed by Join Filter: 8122
                                             ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.006..0.008 rows=1 loops=2)
                                                   Filter: ((kind)::text = 'movie'::text)
                                                   Rows Removed by Filter: 6
                                             ->  Nested Loop  (cost=7.19..12281.90 rows=148 width=29) (actual time=0.987..1078.467 rows=14165 loops=2)
                                                   ->  Nested Loop  (cost=6.76..12150.15 rows=270 width=4) (actual time=0.949..477.477 rows=35548 loops=2)
                                                         ->  Seq Scan on keyword k  (cost=0.00..3632.40 rows=8 width=4) (actual time=0.173..48.935 rows=8 loops=2)
                                                               Filter: ((keyword)::text = ANY ('{superhero,sequel,second-part,marvel-comics,based-on-comic,tv-special,fight,violence}'::text[]))
                                                               Rows Removed by Filter: 134162
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1061.72 rows=300 width=8) (actual time=1.572..51.528 rows=4444 loops=16)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=46976
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=1.155..1.155 rows=4444 loops=16)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.016..0.016 rows=0 loops=71096)
                                                         Index Cond: (id = mk.movie_id)
                                                         Filter: (production_year > 2000)
                                                         Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.007..0.007 rows=0 loops=12086)
                                             Index Cond: (movie_id = t.id)
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.034..1.642 rows=151 loops=1472)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=4) (actual time=0.019..0.019 rows=0 loops=222518)
                     Index Cond: (id = ci.person_id)
                     Filter: ((name)::text ~~ '%Downey%Robert%'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=4) (actual time=0.035..0.035 rows=1 loops=27)
               Index Cond: (id = ci.person_role_id)
               Filter: (((name)::text !~~ '%Sherlock%'::text) AND (((name)::text ~~ '%Tony%Stark%'::text) OR ((name)::text ~~ '%Iron%Man%'::text)))
               Rows Removed by Filter: 0
 Planning Time: 33.739 ms
 Execution Time: 9387.993 ms
(52 rows)

SET
                                                                                             QUERY PLAN                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=14700.60..14700.61 rows=1 width=64) (actual time=5311.655..5311.655 rows=1 loops=1)
   ->  Nested Loop  (cost=9.03..14700.60 rows=1 width=32) (actual time=19.528..5304.924 rows=5406 loops=1)
         ->  Nested Loop  (cost=8.60..14700.14 rows=1 width=21) (actual time=19.462..5164.342 rows=5406 loops=1)
               ->  Nested Loop  (cost=8.17..14696.48 rows=8 width=25) (actual time=18.727..3648.913 rows=189844 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=7.61..14692.51 rows=2 width=29) (actual time=18.654..1647.619 rows=1267 loops=1)
                           Join Filter: (cc.status_id = cct2.id)
                           Rows Removed by Join Filter: 1267
                           ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.033..0.035 rows=2 loops=1)
                                 Filter: ((kind)::text ~~ '%complete%'::text)
                                 Rows Removed by Filter: 2
                           ->  Nested Loop  (cost=7.61..14691.35 rows=9 width=33) (actual time=15.732..823.487 rows=1267 loops=2)
                                 Join Filter: (cc.subject_id = cct1.id)
                                 Rows Removed by Join Filter: 218
                                 ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=2)
                                       Filter: ((kind)::text = 'cast'::text)
                                       Rows Removed by Filter: 3
                                 ->  Nested Loop  (cost=7.61..14689.84 rows=37 width=37) (actual time=15.718..822.939 rows=1485 loops=2)
                                       ->  Nested Loop  (cost=7.19..14677.40 rows=26 width=25) (actual time=15.491..782.727 rows=5032 loops=2)
                                             Join Filter: (t.kind_id = kt.id)
                                             Rows Removed by Join Filter: 5581
                                             ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.006..0.009 rows=1 loops=2)
                                                   Filter: ((kind)::text = 'movie'::text)
                                                   Rows Removed by Filter: 6
                                             ->  Nested Loop  (cost=7.19..14674.02 rows=184 width=29) (actual time=0.931..779.323 rows=10613 loops=2)
                                                   ->  Nested Loop  (cost=6.76..14509.57 rows=337 width=4) (actual time=0.892..361.281 rows=24091 loops=2)
                                                         ->  Seq Scan on keyword k  (cost=0.00..3967.82 rows=10 width=4) (actual time=0.190..53.796 rows=10 loops=2)
                                                               Filter: ((keyword)::text = ANY ('{superhero,marvel-comics,based-on-comic,tv-special,fight,violence,magnet,web,claw,laser}'::text[]))
                                                               Rows Removed by Filter: 134160
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1051.17 rows=300 width=8) (actual time=0.976..29.631 rows=2409 loops=20)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=34254
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.725..0.725 rows=2409 loops=20)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.016..0.016 rows=0 loops=48182)
                                                         Index Cond: (id = mk.movie_id)
                                                         Filter: (production_year > 2000)
                                                         Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.006..0.007 rows=0 loops=10064)
                                             Index Cond: (movie_id = t.id)
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.032..1.476 rows=150 loops=1267)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=4) (actual time=0.007..0.007 rows=0 loops=189844)
                     Index Cond: (id = ci.person_role_id)
                     Filter: ((name IS NOT NULL) AND (((name)::text ~~ '%man%'::text) OR ((name)::text ~~ '%Man%'::text)))
                     Rows Removed by Filter: 0
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=19) (actual time=0.024..0.024 rows=1 loops=5406)
               Index Cond: (id = ci.person_id)
 Planning Time: 33.780 ms
 Execution Time: 5312.289 ms
(50 rows)

SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3756.64..3756.65 rows=1 width=96) (actual time=271.362..271.362 rows=1 loops=1)
   ->  Nested Loop  (cost=8.76..3756.63 rows=1 width=118) (actual time=7.065..269.616 rows=1410 loops=1)
         Join Filter: (ml.movie_id = t.id)
         ->  Nested Loop  (cost=8.33..3756.13 rows=1 width=117) (actual time=7.020..259.882 rows=1816 loops=1)
               Join Filter: (mc.company_type_id = ct.id)
               Rows Removed by Join Filter: 95
               ->  Nested Loop  (cost=8.33..3755.07 rows=1 width=121) (actual time=6.993..244.295 rows=1911 loops=1)
                     ->  Nested Loop  (cost=7.91..3754.61 rows=1 width=106) (actual time=6.935..230.085 rows=4365 loops=1)
                           Join Filter: (ml.movie_id = mc.movie_id)
                           ->  Nested Loop  (cost=7.48..3754.04 rows=1 width=94) (actual time=6.890..224.707 rows=684 loops=1)
                                 Join Filter: (ml.movie_id = mi.movie_id)
                                 ->  Nested Loop  (cost=7.04..3752.25 rows=1 width=90) (actual time=5.627..217.492 rows=199 loops=1)
                                       Join Filter: (ml.link_type_id = lt.id)
                                       Rows Removed by Join Filter: 303
                                       ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.036..0.045 rows=2 loops=1)
                                             Filter: ((link)::text ~~ '%follow%'::text)
                                             Rows Removed by Filter: 16
                                       ->  Nested Loop  (cost=7.04..3750.90 rows=10 width=12) (actual time=4.842..108.673 rows=251 loops=2)
                                             ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=4.830..86.735 rows=10544 loops=2)
                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.245..18.008 rows=1 loops=2)
                                                         Filter: ((keyword)::text = 'sequel'::text)
                                                         Rows Removed by Filter: 134169
                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=3.534..66.035 rows=10544 loops=2)
                                                         Recheck Cond: (keyword_id = k.id)
                                                         Heap Blocks: exact=11140
                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=2.748..2.748 rows=10544 loops=2)
                                                               Index Cond: (keyword_id = k.id)
                                             ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.002..0.002 rows=0 loops=21088)
                                                   Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.77 rows=1 width=4) (actual time=0.031..0.035 rows=3 loops=199)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German}'::text[]))
                                       Rows Removed by Filter: 17
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=12) (actual time=0.003..0.006 rows=6 loops=684)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: (note IS NULL)
                                 Rows Removed by Filter: 2
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=4365)
                           Index Cond: (id = mc.company_id)
                           Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                           Rows Removed by Filter: 1
               ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1911)
                     Filter: ((kind)::text = 'production companies'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.004..0.004 rows=1 loops=1816)
               Index Cond: (id = mk.movie_id)
               Filter: ((production_year >= 1950) AND (production_year <= 2000))
               Rows Removed by Filter: 0
 Planning Time: 30.722 ms
 Execution Time: 271.980 ms
(50 rows)

SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3756.33..3756.34 rows=1 width=96) (actual time=128.904..128.905 rows=1 loops=1)
   ->  Nested Loop  (cost=8.76..3756.32 rows=1 width=118) (actual time=6.379..128.824 rows=38 loops=1)
         Join Filter: (ml.movie_id = t.id)
         ->  Nested Loop  (cost=8.33..3755.82 rows=1 width=117) (actual time=5.304..127.091 rows=308 loops=1)
               Join Filter: (mc.company_type_id = ct.id)
               Rows Removed by Join Filter: 19
               ->  Nested Loop  (cost=8.33..3754.75 rows=1 width=121) (actual time=5.292..124.426 rows=327 loops=1)
                     ->  Nested Loop  (cost=7.91..3754.30 rows=1 width=106) (actual time=5.266..121.851 rows=749 loops=1)
                           Join Filter: (ml.movie_id = mc.movie_id)
                           ->  Nested Loop  (cost=7.48..3753.72 rows=1 width=94) (actual time=5.240..120.906 rows=118 loops=1)
                                 Join Filter: (ml.movie_id = mi.movie_id)
                                 ->  Nested Loop  (cost=7.04..3752.25 rows=1 width=90) (actual time=4.751..117.349 rows=199 loops=1)
                                       Join Filter: (ml.link_type_id = lt.id)
                                       Rows Removed by Join Filter: 303
                                       ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.015..0.024 rows=2 loops=1)
                                             Filter: ((link)::text ~~ '%follow%'::text)
                                             Rows Removed by Filter: 16
                                       ->  Nested Loop  (cost=7.04..3750.90 rows=10 width=12) (actual time=4.414..58.615 rows=251 loops=2)
                                             ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=4.396..42.859 rows=10544 loops=2)
                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.038..17.847 rows=1 loops=2)
                                                         Filter: ((keyword)::text = 'sequel'::text)
                                                         Rows Removed by Filter: 134169
                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=3.312..23.078 rows=10544 loops=2)
                                                         Recheck Cond: (keyword_id = k.id)
                                                         Heap Blocks: exact=11140
                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=2.537..2.537 rows=10544 loops=2)
                                                               Index Cond: (keyword_id = k.id)
                                             ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.001..0.001 rows=0 loops=21088)
                                                   Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.45 rows=1 width=4) (actual time=0.016..0.017 rows=1 loops=199)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Germany,German}'::text[]))
                                       Rows Removed by Filter: 20
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=12) (actual time=0.004..0.006 rows=6 loops=118)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: (note IS NULL)
                                 Rows Removed by Filter: 2
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=749)
                           Index Cond: (id = mc.company_id)
                           Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                           Rows Removed by Filter: 1
               ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=327)
                     Filter: ((kind)::text = 'production companies'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.005..0.005 rows=0 loops=308)
               Index Cond: (id = mk.movie_id)
               Filter: ((production_year >= 2000) AND (production_year <= 2010))
               Rows Removed by Filter: 1
 Planning Time: 28.657 ms
 Execution Time: 129.512 ms
(50 rows)

SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3756.72..3756.73 rows=1 width=96) (actual time=135.405..135.405 rows=1 loops=1)
   ->  Nested Loop  (cost=8.76..3756.71 rows=1 width=118) (actual time=5.682..134.331 rows=1874 loops=1)
         Join Filter: (ml.movie_id = mi.movie_id)
         ->  Nested Loop  (cost=8.32..3754.85 rows=1 width=134) (actual time=5.644..126.572 rows=402 loops=1)
               Join Filter: (mc.company_type_id = ct.id)
               Rows Removed by Join Filter: 20
               ->  Nested Loop  (cost=8.32..3753.79 rows=1 width=138) (actual time=5.632..123.126 rows=422 loops=1)
                     ->  Nested Loop  (cost=7.90..3753.33 rows=1 width=123) (actual time=4.788..118.856 rows=1021 loops=1)
                           Join Filter: (ml.movie_id = mc.movie_id)
                           ->  Nested Loop  (cost=7.47..3752.76 rows=1 width=111) (actual time=4.711..116.652 rows=199 loops=1)
                                 Join Filter: (ml.movie_id = t.id)
                                 ->  Nested Loop  (cost=7.04..3752.25 rows=1 width=90) (actual time=4.626..115.199 rows=199 loops=1)
                                       Join Filter: (ml.link_type_id = lt.id)
                                       Rows Removed by Join Filter: 303
                                       ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.014..0.024 rows=2 loops=1)
                                             Filter: ((link)::text ~~ '%follow%'::text)
                                             Rows Removed by Filter: 16
                                       ->  Nested Loop  (cost=7.04..3750.90 rows=10 width=12) (actual time=4.356..57.537 rows=251 loops=2)
                                             ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=4.345..41.720 rows=10544 loops=2)
                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.032..17.902 rows=1 loops=2)
                                                         Filter: ((keyword)::text = 'sequel'::text)
                                                         Rows Removed by Filter: 134169
                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=3.263..21.863 rows=10544 loops=2)
                                                         Recheck Cond: (keyword_id = k.id)
                                                         Heap Blocks: exact=11140
                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=2.497..2.497 rows=10544 loops=2)
                                                               Index Cond: (keyword_id = k.id)
                                             ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.001..0.001 rows=0 loops=21088)
                                                   Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.007..0.007 rows=1 loops=199)
                                       Index Cond: (id = mk.movie_id)
                                       Filter: ((production_year >= 1950) AND (production_year <= 2010))
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=12) (actual time=0.007..0.009 rows=5 loops=199)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: (note IS NULL)
                                 Rows Removed by Filter: 2
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.004..0.004 rows=0 loops=1021)
                           Index Cond: (id = mc.company_id)
                           Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                           Rows Removed by Filter: 1
               ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=422)
                     Filter: ((kind)::text = 'production companies'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.82 rows=3 width=4) (actual time=0.013..0.017 rows=5 loops=402)
               Index Cond: (movie_id = mk.movie_id)
               Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,English}'::text[]))
               Rows Removed by Filter: 16
 Planning Time: 29.225 ms
 Execution Time: 136.039 ms
(49 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7401.04..7401.05 rows=1 width=96) (actual time=1635.790..1635.790 rows=1 loops=1)
   ->  Nested Loop  (cost=8.90..7401.03 rows=1 width=41) (actual time=35.680..1632.379 rows=2851 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         Rows Removed by Join Filter: 191
         ->  Nested Loop  (cost=8.90..7398.61 rows=1 width=45) (actual time=35.663..1598.879 rows=3042 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=8.46..7397.02 rows=1 width=57) (actual time=13.509..1343.108 rows=2958 loops=1)
                     Join Filter: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=8.46..7395.93 rows=1 width=61) (actual time=13.487..1319.974 rows=2958 loops=1)
                           ->  Nested Loop  (cost=8.04..7395.38 rows=1 width=46) (actual time=13.454..1281.037 rows=3374 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.62..7394.80 rows=1 width=34) (actual time=13.389..1177.382 rows=2378 loops=1)
                                       Join Filter: (mi_idx.info_type_id = it2.id)
                                       Rows Removed by Join Filter: 6321
                                       ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.033..0.035 rows=1 loops=1)
                                             Filter: ((info)::text = 'rating'::text)
                                             Rows Removed by Filter: 112
                                       ->  Nested Loop  (cost=7.62..7392.07 rows=26 width=38) (actual time=7.855..1175.529 rows=8699 loops=1)
                                             Join Filter: (t.id = mi_idx.movie_id)
                                             ->  Nested Loop  (cost=7.19..7386.71 rows=10 width=25) (actual time=7.802..1079.401 rows=4832 loops=1)
                                                   Join Filter: (t.kind_id = kt.id)
                                                   Rows Removed by Join Filter: 2286
                                                   ->  Nested Loop  (cost=7.19..7384.59 rows=36 width=29) (actual time=7.751..1073.222 rows=5606 loops=1)
                                                         ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=7.578..503.671 rows=37091 loops=1)
                                                               ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.507..38.130 rows=3 loops=1)
                                                                     Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                     Rows Removed by Filter: 134167
                                                               ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=5.169..149.452 rows=12364 loops=3)
                                                                     Recheck Cond: (keyword_id = k.id)
                                                                     Heap Blocks: exact=26312
                                                                     ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.865..3.865 rows=12364 loops=3)
                                                                           Index Cond: (keyword_id = k.id)
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.014..0.014 rows=0 loops=37091)
                                                               Index Cond: (id = mk.movie_id)
                                                               Filter: (production_year > 2008)
                                                               Rows Removed by Filter: 1
                                                   ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=5606)
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.033..0.035 rows=2 loops=1)
                                                               Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                               Rows Removed by Filter: 5
                                             ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=13) (actual time=0.017..0.018 rows=2 loops=4832)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((info)::text < '7.0'::text)
                                                   Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.036..0.042 rows=1 loops=2378)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                                       Rows Removed by Filter: 10
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.010..0.010 rows=1 loops=3374)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text <> '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.002..0.002 rows=1 loops=2958)
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.56 rows=2 width=8) (actual time=0.077..0.085 rows=1 loops=2958)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Germany,German,USA,American}'::text[]))
                     Rows Removed by Filter: 155
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=3042)
               Filter: ((info)::text = 'countries'::text)
               Rows Removed by Filter: 14
 Planning Time: 77.384 ms
 Execution Time: 1636.550 ms
(62 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7399.71..7399.72 rows=1 width=96) (actual time=1237.114..1237.114 rows=1 loops=1)
   ->  Nested Loop  (cost=8.90..7399.70 rows=1 width=41) (actual time=43.923..1237.011 rows=31 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         Rows Removed by Join Filter: 3
         ->  Nested Loop  (cost=8.90..7397.27 rows=1 width=45) (actual time=43.908..1236.575 rows=34 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=8.46..7395.69 rows=1 width=57) (actual time=43.690..1227.087 rows=50 loops=1)
                     Join Filter: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=8.46..7394.60 rows=1 width=61) (actual time=43.663..1226.509 rows=50 loops=1)
                           ->  Nested Loop  (cost=8.04..7394.05 rows=1 width=46) (actual time=43.624..1224.557 rows=78 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.62..7393.47 rows=1 width=34) (actual time=17.391..1155.636 rows=1615 loops=1)
                                       Join Filter: (mi_idx.info_type_id = it2.id)
                                       Rows Removed by Join Filter: 4362
                                       ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.031..0.035 rows=1 loops=1)
                                             Filter: ((info)::text = 'rating'::text)
                                             Rows Removed by Filter: 112
                                       ->  Nested Loop  (cost=7.62..7390.80 rows=21 width=38) (actual time=8.105..1154.366 rows=5977 loops=1)
                                             Join Filter: (t.id = mi_idx.movie_id)
                                             ->  Nested Loop  (cost=7.19..7386.51 rows=8 width=25) (actual time=8.054..1085.071 rows=3517 loops=1)
                                                   Join Filter: (t.kind_id = kt.id)
                                                   Rows Removed by Join Filter: 1618
                                                   ->  Nested Loop  (cost=7.19..7384.59 rows=29 width=29) (actual time=8.013..1080.713 rows=4040 loops=1)
                                                         ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=7.839..536.844 rows=37091 loops=1)
                                                               ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.981..38.680 rows=3 loops=1)
                                                                     Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                     Rows Removed by Filter: 134167
                                                               ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=5.018..160.368 rows=12364 loops=3)
                                                                     Recheck Cond: (keyword_id = k.id)
                                                                     Heap Blocks: exact=26312
                                                                     ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.729..3.729 rows=12364 loops=3)
                                                                           Index Cond: (keyword_id = k.id)
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.014..0.014 rows=0 loops=37091)
                                                               Index Cond: (id = mk.movie_id)
                                                               Filter: (production_year > 2009)
                                                               Rows Removed by Filter: 1
                                                   ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=4040)
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.029..0.031 rows=2 loops=1)
                                                               Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                               Rows Removed by Filter: 5
                                             ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=13) (actual time=0.017..0.018 rows=2 loops=3517)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((info)::text < '7.0'::text)
                                                   Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.041..0.042 rows=0 loops=1615)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                                       Rows Removed by Filter: 12
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.023..0.023 rows=1 loops=78)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text <> '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.003..0.003 rows=1 loops=50)
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.56 rows=2 width=8) (actual time=0.173..0.188 rows=1 loops=50)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Germany,German,USA,American}'::text[]))
                     Rows Removed by Filter: 53
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=34)
               Filter: ((info)::text = 'countries'::text)
               Rows Removed by Filter: 16
 Planning Time: 78.315 ms
 Execution Time: 1237.980 ms
(62 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7405.36..7405.37 rows=1 width=96) (actual time=4743.901..4743.902 rows=1 loops=1)
   ->  Nested Loop  (cost=8.90..7405.35 rows=1 width=41) (actual time=12.101..4719.482 rows=21489 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         Rows Removed by Join Filter: 3123
         ->  Nested Loop  (cost=8.90..7402.92 rows=1 width=45) (actual time=12.087..4432.427 rows=24612 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=8.46..7401.02 rows=1 width=57) (actual time=11.947..1903.202 rows=23425 loops=1)
                     Join Filter: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=8.46..7399.93 rows=1 width=61) (actual time=11.924..1722.143 rows=23425 loops=1)
                           ->  Nested Loop  (cost=8.04..7399.38 rows=1 width=46) (actual time=11.890..1535.234 rows=25316 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.62..7398.81 rows=1 width=34) (actual time=8.127..1285.486 rows=5949 loops=1)
                                       Join Filter: (mi_idx.info_type_id = it2.id)
                                       Rows Removed by Join Filter: 11942
                                       ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.031..0.033 rows=1 loops=1)
                                             Filter: ((info)::text = 'rating'::text)
                                             Rows Removed by Filter: 112
                                       ->  Nested Loop  (cost=7.62..7395.82 rows=46 width=38) (actual time=8.092..1281.790 rows=17891 loops=1)
                                             Join Filter: (t.id = mi_idx.movie_id)
                                             ->  Nested Loop  (cost=7.19..7387.25 rows=16 width=25) (actual time=8.038..1126.629 rows=8073 loops=1)
                                                   Join Filter: (t.kind_id = kt.id)
                                                   Rows Removed by Join Filter: 4332
                                                   ->  Nested Loop  (cost=7.19..7384.59 rows=55 width=29) (actual time=7.876..1115.904 rows=9739 loops=1)
                                                         ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=7.828..534.632 rows=37091 loops=1)
                                                               ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.972..38.909 rows=3 loops=1)
                                                                     Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                     Rows Removed by Filter: 134167
                                                               ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=5.060..159.474 rows=12364 loops=3)
                                                                     Recheck Cond: (keyword_id = k.id)
                                                                     Heap Blocks: exact=26312
                                                                     ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.756..3.756 rows=12364 loops=3)
                                                                           Index Cond: (keyword_id = k.id)
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.015..0.015 rows=0 loops=37091)
                                                               Index Cond: (id = mk.movie_id)
                                                               Filter: (production_year > 2005)
                                                               Rows Removed by Filter: 1
                                                   ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=9739)
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.027..0.029 rows=2 loops=1)
                                                               Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                               Rows Removed by Filter: 5
                                             ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=13) (actual time=0.016..0.018 rows=2 loops=8073)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((info)::text < '8.5'::text)
                                                   Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.028..0.039 rows=4 loops=5949)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                                       Rows Removed by Filter: 8
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.006..0.006 rows=1 loops=25316)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text <> '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.002..0.002 rows=1 loops=23425)
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.089..0.107 rows=1 loops=23425)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                     Rows Removed by Filter: 180
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=24612)
               Filter: ((info)::text = 'countries'::text)
               Rows Removed by Filter: 20
 Planning Time: 78.286 ms
 Execution Time: 4744.725 ms
(62 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7405.28..7405.29 rows=1 width=96) (actual time=3526.968..3526.968 rows=1 loops=1)
   ->  Nested Loop  (cost=8.90..7405.27 rows=1 width=41) (actual time=12.636..3471.225 rows=46281 loops=1)
         Join Filter: (mc.company_type_id = ct.id)
         Rows Removed by Join Filter: 4783
         ->  Nested Loop  (cost=8.90..7404.18 rows=1 width=45) (actual time=12.613..3117.164 rows=46281 loops=1)
               ->  Nested Loop  (cost=8.48..7403.73 rows=1 width=30) (actual time=8.319..2662.659 rows=64848 loops=1)
                     Join Filter: (t.id = mc.movie_id)
                     ->  Nested Loop  (cost=8.05..7403.13 rows=1 width=38) (actual time=8.281..2477.596 rows=4115 loops=1)
                           Join Filter: (mi.info_type_id = it1.id)
                           Rows Removed by Join Filter: 594
                           ->  Nested Loop  (cost=8.05..7400.71 rows=1 width=42) (actual time=8.269..2420.844 rows=4709 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=7.62..7398.81 rows=1 width=34) (actual time=8.149..1285.665 rows=5949 loops=1)
                                       Join Filter: (mi_idx.info_type_id = it2.id)
                                       Rows Removed by Join Filter: 11942
                                       ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.030..0.032 rows=1 loops=1)
                                             Filter: ((info)::text = 'rating'::text)
                                             Rows Removed by Filter: 112
                                       ->  Nested Loop  (cost=7.62..7395.82 rows=46 width=38) (actual time=8.114..1281.848 rows=17891 loops=1)
                                             Join Filter: (t.id = mi_idx.movie_id)
                                             ->  Nested Loop  (cost=7.19..7387.25 rows=16 width=25) (actual time=8.073..1126.866 rows=8073 loops=1)
                                                   Join Filter: (t.kind_id = kt.id)
                                                   Rows Removed by Join Filter: 4332
                                                   ->  Nested Loop  (cost=7.19..7384.59 rows=55 width=29) (actual time=7.907..1115.993 rows=9739 loops=1)
                                                         ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=7.870..532.755 rows=37091 loops=1)
                                                               ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=2.015..38.517 rows=3 loops=1)
                                                                     Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                     Rows Removed by Filter: 134167
                                                               ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=5.036..158.827 rows=12364 loops=3)
                                                                     Recheck Cond: (keyword_id = k.id)
                                                                     Heap Blocks: exact=26312
                                                                     ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.743..3.743 rows=12364 loops=3)
                                                                           Index Cond: (keyword_id = k.id)
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.015..0.015 rows=0 loops=37091)
                                                               Index Cond: (id = mk.movie_id)
                                                               Filter: (production_year > 2005)
                                                               Rows Removed by Filter: 1
                                                   ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=9739)
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.033..0.035 rows=2 loops=1)
                                                               Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                               Rows Removed by Filter: 5
                                             ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=13) (actual time=0.016..0.018 rows=2 loops=8073)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((info)::text < '8.5'::text)
                                                   Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.164..0.189 rows=1 loops=5949)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                                       Rows Removed by Filter: 71
                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=4709)
                                 Filter: ((info)::text = 'countries'::text)
                                 Rows Removed by Filter: 20
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=12) (actual time=0.020..0.037 rows=16 loops=4115)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.006..0.006 rows=1 loops=64848)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text <> '[us]'::text)
                     Rows Removed by Filter: 0
         ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.002..0.002 rows=1 loops=46281)
 Planning Time: 80.537 ms
 Execution Time: 3527.771 ms
(61 rows)

SET
                                                                                                    QUERY PLAN                                                                                                    
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=57963.27..57963.28 rows=1 width=64) (actual time=559.619..559.619 rows=1 loops=1)
   ->  Nested Loop  (cost=4238.90..57963.26 rows=1 width=65) (actual time=488.733..559.293 rows=618 loops=1)
         ->  Nested Loop  (cost=4238.48..57962.82 rows=1 width=69) (actual time=488.650..553.710 rows=618 loops=1)
               ->  Gather  (cost=4238.35..57962.67 rows=1 width=73) (actual time=488.554..558.851 rows=618 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Nested Loop  (cost=3238.35..56962.57 rows=1 width=73) (actual time=510.190..549.455 rows=206 loops=3)
                           ->  Nested Loop  (cost=3237.93..56962.12 rows=1 width=77) (actual time=510.105..548.782 rows=206 loops=3)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=3237.50..56961.52 rows=1 width=85) (actual time=510.026..547.950 rows=205 loops=3)
                                       ->  Nested Loop  (cost=3237.06..56959.69 rows=1 width=77) (actual time=509.938..547.729 rows=2 loops=3)
                                             ->  Nested Loop  (cost=3236.92..56959.27 rows=2 width=81) (actual time=509.886..547.674 rows=2 loops=3)
                                                   ->  Hash Join  (cost=3236.49..54671.45 rows=1099 width=73) (actual time=272.780..393.148 rows=344 loops=3)
                                                         Hash Cond: (t.kind_id = kt.id)
                                                         ->  Hash Join  (cost=3235.39..54637.93 rows=7692 width=29) (actual time=50.786..392.576 rows=694 loops=3)
                                                               Hash Cond: (t.id = cc.movie_id)
                                                               ->  Parallel Seq Scan on title t  (cost=0.00..49166.29 rows=575821 width=25) (actual time=0.044..285.230 rows=460484 loops=3)
                                                                     Filter: (production_year > 2000)
                                                                     Rows Removed by Filter: 382286
                                                               ->  Hash  (cost=2813.24..2813.24 rows=33772 width=4) (actual time=49.260..49.260 rows=24592 loops=3)
                                                                     Buckets: 65536  Batches: 1  Memory Usage: 1377kB
                                                                     ->  Hash Join  (cost=1.06..2813.24 rows=33772 width=4) (actual time=0.132..42.083 rows=24592 loops=3)
                                                                           Hash Cond: (cc.status_id = cct1.id)
                                                                           ->  Seq Scan on complete_cast cc  (cost=0.00..2081.86 rows=135086 width=8) (actual time=0.038..21.217 rows=135086 loops=3)
                                                                           ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.036..0.036 rows=1 loops=3)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.025..0.026 rows=1 loops=3)
                                                                                       Filter: ((kind)::text = 'complete+verified'::text)
                                                                                       Rows Removed by Filter: 3
                                                         ->  Hash  (cost=1.09..1.09 rows=1 width=52) (actual time=0.095..0.095 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=52) (actual time=0.069..0.071 rows=1 loops=3)
                                                                     Filter: ((kind)::text = 'movie'::text)
                                                                     Rows Removed by Filter: 6
                                                   ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.07 rows=1 width=8) (actual time=0.447..0.447 rows=0 loops=1033)
                                                         Index Cond: (movie_id = t.id)
                                                         Filter: ((info IS NOT NULL) AND ((note)::text ~~ '%internet%'::text) AND (((info)::text ~~ 'USA:% 199%'::text) OR ((info)::text ~~ 'USA:% 200%'::text)))
                                                         Rows Removed by Filter: 211
                                             ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.19 rows=1 width=4) (actual time=0.031..0.031 rows=1 loops=5)
                                                   Index Cond: (id = mi.info_type_id)
                                                   Filter: ((info)::text = 'release dates'::text)
                                       ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.36 rows=47 width=8) (actual time=0.053..0.095 rows=123 loops=5)
                                             Index Cond: (movie_id = t.id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=12) (actual time=0.003..0.003 rows=1 loops=615)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=618)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
               ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=618)
                     Index Cond: (id = mc.company_type_id)
                     Heap Fetches: 618
         ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=618)
               Index Cond: (id = mk.keyword_id)
               Heap Fetches: 618
 Planning Time: 76.583 ms
 Execution Time: 566.848 ms
(56 rows)

SET
                                                                                              QUERY PLAN                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7402.39..7402.40 rows=1 width=64) (actual time=163.587..163.587 rows=1 loops=1)
   ->  Nested Loop  (cost=8.89..7402.38 rows=1 width=65) (actual time=47.877..163.550 rows=16 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         ->  Nested Loop  (cost=8.89..7399.96 rows=1 width=69) (actual time=47.860..163.356 rows=16 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=8.46..7398.38 rows=1 width=81) (actual time=9.992..129.753 rows=315 loops=1)
                     Join Filter: (mc.company_type_id = ct.id)
                     Rows Removed by Join Filter: 140
                     ->  Nested Loop  (cost=8.46..7397.29 rows=1 width=85) (actual time=9.968..127.236 rows=315 loops=1)
                           ->  Nested Loop  (cost=8.04..7395.51 rows=4 width=89) (actual time=9.807..114.443 rows=1218 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.61..7393.10 rows=4 width=77) (actual time=9.747..110.723 rows=60 loops=1)
                                       Join Filter: (cc.status_id = cct1.id)
                                       Rows Removed by Join Filter: 81
                                       ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.047..0.048 rows=1 loops=1)
                                             Filter: ((kind)::text = 'complete+verified'::text)
                                             Rows Removed by Filter: 3
                                       ->  Nested Loop  (cost=7.61..7391.86 rows=15 width=81) (actual time=9.672..110.626 rows=141 loops=1)
                                             ->  Nested Loop  (cost=7.19..7386.60 rows=11 width=73) (actual time=9.122..104.743 rows=401 loops=1)
                                                   Join Filter: (t.kind_id = kt.id)
                                                   Rows Removed by Join Filter: 156
                                                   ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=52) (actual time=0.033..0.037 rows=1 loops=1)
                                                         Filter: ((kind)::text = 'movie'::text)
                                                         Rows Removed by Filter: 6
                                                   ->  Nested Loop  (cost=7.19..7384.59 rows=74 width=29) (actual time=1.632..104.494 rows=557 loops=1)
                                                         ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=1.583..67.799 rows=1133 loops=1)
                                                               ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.180..43.403 rows=4 loops=1)
                                                                     Filter: ((keyword)::text = ANY ('{nerd,loner,alienation,dignity}'::text[]))
                                                                     Rows Removed by Filter: 134166
                                                               ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=0.167..5.948 rows=283 loops=4)
                                                                     Recheck Cond: (keyword_id = k.id)
                                                                     Heap Blocks: exact=1083
                                                                     ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.113..0.113 rows=283 loops=4)
                                                                           Index Cond: (keyword_id = k.id)
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.031..0.031 rows=0 loops=1133)
                                                               Index Cond: (id = mk.movie_id)
                                                               Filter: (production_year > 2000)
                                                               Rows Removed by Filter: 1
                                             ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=8) (actual time=0.013..0.013 rows=0 loops=401)
                                                   Index Cond: (movie_id = t.id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=12) (actual time=0.032..0.052 rows=20 loops=60)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.010..0.010 rows=0 loops=1218)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.002..0.002 rows=1 loops=315)
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.56 rows=1 width=8) (actual time=0.105..0.106 rows=0 loops=315)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: (((note)::text ~~ '%internet%'::text) AND ((info)::text ~~ 'USA:% 200%'::text))
                     Rows Removed by Filter: 268
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=16)
               Filter: ((info)::text = 'release dates'::text)
               Rows Removed by Filter: 15
 Planning Time: 74.867 ms
 Execution Time: 164.305 ms
(56 rows)

SET
                                                                                                       QUERY PLAN                                                                                                       
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=67209.67..67209.68 rows=1 width=64) (actual time=783.908..783.909 rows=1 loops=1)
   ->  Gather  (cost=67209.45..67209.66 rows=2 width=64) (actual time=783.531..791.556 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=66209.45..66209.46 rows=1 width=64) (actual time=775.687..775.687 rows=1 loops=3)
               ->  Nested Loop  (cost=3238.95..66209.44 rows=2 width=65) (actual time=619.929..775.567 rows=209 loops=3)
                     ->  Nested Loop  (cost=3238.53..66208.57 rows=2 width=69) (actual time=619.868..773.775 rows=209 loops=3)
                           ->  Nested Loop  (cost=3238.10..66206.76 rows=1 width=81) (actual time=619.798..773.566 rows=2 loops=3)
                                 ->  Nested Loop  (cost=3237.97..66206.60 rows=1 width=85) (actual time=619.748..773.509 rows=2 loops=3)
                                       ->  Nested Loop  (cost=3237.55..66206.16 rows=1 width=89) (actual time=619.686..773.409 rows=2 loops=3)
                                             ->  Nested Loop  (cost=3237.12..66205.53 rows=1 width=77) (actual time=619.617..773.318 rows=2 loops=3)
                                                   ->  Nested Loop  (cost=3236.98..66203.98 rows=8 width=81) (actual time=619.565..773.261 rows=2 loops=3)
                                                         ->  Hash Join  (cost=3236.54..55283.32 rows=5580 width=73) (actual time=266.566..405.320 rows=1684 loops=3)
                                                               Hash Cond: (t.kind_id = kt.id)
                                                               ->  Hash Join  (cost=3235.39..55241.01 rows=9766 width=29) (actual time=50.878..403.857 rows=2141 loops=3)
                                                                     Hash Cond: (t.id = cc.movie_id)
                                                                     ->  Parallel Seq Scan on title t  (cost=0.00..49166.29 rows=731112 width=25) (actual time=0.055..276.995 rows=583011 loops=3)
                                                                           Filter: (production_year > 1990)
                                                                           Rows Removed by Filter: 259760
                                                                     ->  Hash  (cost=2813.24..2813.24 rows=33772 width=4) (actual time=49.264..49.264 rows=24592 loops=3)
                                                                           Buckets: 65536  Batches: 1  Memory Usage: 1377kB
                                                                           ->  Hash Join  (cost=1.06..2813.24 rows=33772 width=4) (actual time=0.124..42.079 rows=24592 loops=3)
                                                                                 Hash Cond: (cc.status_id = cct1.id)
                                                                                 ->  Seq Scan on complete_cast cc  (cost=0.00..2081.86 rows=135086 width=8) (actual time=0.033..21.302 rows=135086 loops=3)
                                                                                 ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.030..0.031 rows=1 loops=3)
                                                                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                       ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.020..0.021 rows=1 loops=3)
                                                                                             Filter: ((kind)::text = 'complete+verified'::text)
                                                                                             Rows Removed by Filter: 3
                                                               ->  Hash  (cost=1.10..1.10 rows=4 width=52) (actual time=0.088..0.088 rows=4 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on kind_type kt  (cost=0.00..1.10 rows=4 width=52) (actual time=0.057..0.060 rows=4 loops=3)
                                                                           Filter: ((kind)::text = ANY ('{movie,"tv movie","video movie","video game"}'::text[]))
                                                                           Rows Removed by Filter: 3
                                                         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.95 rows=1 width=8) (actual time=0.217..0.217 rows=0 loops=5053)
                                                               Index Cond: (movie_id = t.id)
                                                               Filter: ((info IS NOT NULL) AND ((note)::text ~~ '%internet%'::text) AND (((info)::text ~~ 'USA:% 199%'::text) OR ((info)::text ~~ 'USA:% 200%'::text)))
                                                               Rows Removed by Filter: 123
                                                   ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.19 rows=1 width=4) (actual time=0.027..0.027 rows=1 loops=6)
                                                         Index Cond: (id = mi.info_type_id)
                                                         Filter: ((info)::text = 'release dates'::text)
                                             ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.58 rows=5 width=12) (actual time=0.040..0.043 rows=1 loops=6)
                                                   Index Cond: (movie_id = t.id)
                                       ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.041..0.041 rows=1 loops=7)
                                             Index Cond: (id = mc.company_id)
                                             Filter: ((country_code)::text = '[us]'::text)
                                 ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.023..0.023 rows=1 loops=7)
                                       Index Cond: (id = mc.company_type_id)
                                       Heap Fetches: 7
                           ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.34 rows=47 width=8) (actual time=0.038..0.068 rows=90 loops=7)
                                 Index Cond: (movie_id = t.id)
                     ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=628)
                           Index Cond: (id = mk.keyword_id)
                           Heap Fetches: 628
 Planning Time: 73.210 ms
 Execution Time: 792.520 ms
(56 rows)

SET
                                                                                                  QUERY PLAN                                                                                                  
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=6567.88..6567.89 rows=1 width=96) (actual time=1513.577..1513.578 rows=1 loops=1)
   ->  Nested Loop  (cost=10.32..6567.87 rows=1 width=48) (actual time=229.019..1513.319 rows=275 loops=1)
         ->  Nested Loop  (cost=9.89..6566.07 rows=1 width=41) (actual time=5.220..1488.911 rows=6518 loops=1)
               Join Filter: (rt.id = ci.role_id)
               Rows Removed by Join Filter: 30060
               ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.030..0.032 rows=1 loops=1)
                     Filter: ((role)::text = 'actress'::text)
                     Rows Removed by Filter: 11
               ->  Nested Loop  (cost=9.89..6564.90 rows=2 width=45) (actual time=4.723..1484.639 rows=36578 loops=1)
                     ->  Nested Loop  (cost=9.47..6562.80 rows=1 width=41) (actual time=4.679..1401.585 rows=13608 loops=1)
                           ->  Nested Loop  (cost=9.04..6561.09 rows=1 width=29) (actual time=4.609..1323.318 rows=13758 loops=1)
                                 Join Filter: (t.id = ci.movie_id)
                                 ->  Nested Loop  (cost=8.47..6521.26 rows=1 width=33) (actual time=2.265..625.431 rows=3406 loops=1)
                                       Join Filter: (it.id = mi.info_type_id)
                                       ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.012..0.024 rows=1 loops=1)
                                             Filter: ((info)::text = 'release dates'::text)
                                             Rows Removed by Filter: 112
                                       ->  Nested Loop  (cost=8.47..6518.83 rows=1 width=37) (actual time=2.252..624.561 rows=3406 loops=1)
                                             Join Filter: (t.id = mi.movie_id)
                                             ->  Nested Loop  (cost=8.04..6322.71 rows=6 width=29) (actual time=2.193..475.729 rows=1576 loops=1)
                                                   ->  Nested Loop  (cost=7.62..6297.69 rows=17 width=33) (actual time=2.152..414.709 rows=5566 loops=1)
                                                         Join Filter: (t.id = mc.movie_id)
                                                         ->  Nested Loop  (cost=7.19..6242.22 rows=16 width=25) (actual time=2.110..392.336 rows=495 loops=1)
                                                               ->  Nested Loop  (cost=6.76..6082.75 rows=101 width=4) (actual time=1.680..182.997 rows=9696 loops=1)
                                                                     ->  Seq Scan on keyword k  (cost=0.00..2793.84 rows=3 width=4) (actual time=0.044..35.681 rows=3 loops=1)
                                                                           Filter: ((keyword)::text = ANY ('{hero,martial-arts,hand-to-hand-combat}'::text[]))
                                                                           Rows Removed by Filter: 134167
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1093.30 rows=300 width=8) (actual time=1.461..47.449 rows=3232 loops=3)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=7446
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=1.119..1.119 rows=3232 loops=3)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using title_pkey on title t  (cost=0.43..1.58 rows=1 width=21) (actual time=0.020..0.020 rows=0 loops=9696)
                                                                     Index Cond: (id = mk.movie_id)
                                                                     Filter: (production_year > 2010)
                                                                     Rows Removed by Filter: 1
                                                         ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..3.40 rows=5 width=8) (actual time=0.026..0.039 rows=11 loops=495)
                                                               Index Cond: (movie_id = mk.movie_id)
                                                   ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.47 rows=1 width=4) (actual time=0.010..0.010 rows=0 loops=5566)
                                                         Index Cond: (id = mc.company_id)
                                                         Filter: ((country_code)::text = '[us]'::text)
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..32.67 rows=1 width=8) (actual time=0.031..0.093 rows=2 loops=1576)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%201%'::text) OR ((info)::text ~~ 'USA:%201%'::text)))
                                                   Rows Removed by Filter: 131
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..39.82 rows=1 width=16) (actual time=0.134..0.203 rows=4 loops=3406)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                       Rows Removed by Filter: 169
                           ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..1.70 rows=1 width=20) (actual time=0.005..0.005 rows=1 loops=13758)
                                 Index Cond: (id = ci.person_role_id)
                     ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.08 rows=2 width=4) (actual time=0.004..0.005 rows=3 loops=13608)
                           Index Cond: (person_id = ci.person_id)
                           Heap Fetches: 36578
         ->  Index Scan using name_pkey on name n  (cost=0.43..1.80 rows=1 width=19) (actual time=0.003..0.003 rows=0 loops=6518)
               Index Cond: (id = ci.person_id)
               Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
               Rows Removed by Filter: 1
 Planning Time: 101.876 ms
 Execution Time: 1514.464 ms
(61 rows)

SET
                                                                                                            QUERY PLAN                                                                                                            
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=6518.41..6518.42 rows=1 width=96) (actual time=111.169..111.169 rows=1 loops=1)
   ->  Nested Loop  (cost=1004.27..6518.40 rows=1 width=48) (actual time=62.902..111.115 rows=45 loops=1)
         ->  Nested Loop  (cost=1003.85..6516.52 rows=1 width=52) (actual time=21.408..107.638 rows=810 loops=1)
               ->  Nested Loop  (cost=1003.42..6514.72 rows=1 width=45) (actual time=21.352..101.700 rows=1986 loops=1)
                     ->  Nested Loop  (cost=1003.28..6514.53 rows=1 width=49) (actual time=21.327..98.128 rows=1986 loops=1)
                           Join Filter: (t.id = mi.movie_id)
                           ->  Nested Loop  (cost=1002.85..6481.85 rows=1 width=61) (actual time=21.268..49.013 rows=842 loops=1)
                                 ->  Gather  (cost=1002.42..6480.14 rows=1 width=49) (actual time=21.225..46.519 rows=857 loops=1)
                                       Workers Planned: 1
                                       Workers Launched: 1
                                       ->  Nested Loop  (cost=2.42..5480.04 rows=1 width=49) (actual time=44.508..56.969 rows=428 loops=2)
                                             ->  Nested Loop  (cost=2.28..5479.87 rows=1 width=53) (actual time=44.081..53.152 rows=2428 loops=2)
                                                   ->  Nested Loop  (cost=1.86..5477.77 rows=1 width=49) (actual time=44.005..48.989 rows=920 loops=2)
                                                         Join Filter: (t.id = ci.movie_id)
                                                         ->  Nested Loop  (cost=1.29..5437.93 rows=1 width=33) (actual time=42.969..44.872 rows=42 loops=2)
                                                               Join Filter: (t.id = mk.movie_id)
                                                               ->  Nested Loop  (cost=0.86..5434.87 rows=1 width=25) (actual time=42.928..44.760 rows=2 loops=2)
                                                                     ->  Nested Loop  (cost=0.43..5425.21 rows=6 width=4) (actual time=42.464..43.137 rows=50 loops=2)
                                                                           ->  Parallel Seq Scan on company_name cn  (cost=0.00..5068.50 rows=1 width=4) (actual time=42.420..42.426 rows=0 loops=2)
                                                                                 Filter: (((country_code)::text = '[us]'::text) AND ((name)::text = 'DreamWorks Animation'::text))
                                                                                 Rows Removed by Filter: 117498
                                                                           ->  Index Scan using company_id_movie_companies on movie_companies mc  (cost=0.43..355.38 rows=133 width=8) (actual time=0.081..1.367 rows=99 loops=1)
                                                                                 Index Cond: (company_id = cn.id)
                                                                     ->  Index Scan using title_pkey on title t  (cost=0.43..1.60 rows=1 width=21) (actual time=0.032..0.032 rows=0 loops=99)
                                                                           Index Cond: (id = mc.movie_id)
                                                                           Filter: ((production_year > 2010) AND ((title)::text ~~ 'Kung Fu Panda%'::text))
                                                                           Rows Removed by Filter: 1
                                                               ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..2.47 rows=47 width=8) (actual time=0.037..0.046 rows=21 loops=4)
                                                                     Index Cond: (movie_id = mc.movie_id)
                                                         ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..39.82 rows=1 width=16) (actual time=0.012..0.093 rows=22 loops=83)
                                                               Index Cond: (movie_id = mk.movie_id)
                                                               Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                               Rows Removed by Filter: 75
                                                   ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.08 rows=2 width=4) (actual time=0.003..0.004 rows=3 loops=1841)
                                                         Index Cond: (person_id = ci.person_id)
                                                         Heap Fetches: 4855
                                             ->  Index Scan using role_type_pkey on role_type rt  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=4855)
                                                   Index Cond: (id = ci.role_id)
                                                   Filter: ((role)::text = 'actress'::text)
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..1.70 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=857)
                                       Index Cond: (id = ci.person_role_id)
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..32.67 rows=1 width=8) (actual time=0.010..0.057 rows=2 loops=842)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%201%'::text) OR ((info)::text ~~ 'USA:%201%'::text)))
                                 Rows Removed by Filter: 166
                     ->  Index Scan using info_type_pkey on info_type it  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1986)
                           Index Cond: (id = mi.info_type_id)
                           Filter: ((info)::text = 'release dates'::text)
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.80 rows=1 width=19) (actual time=0.003..0.003 rows=0 loops=1986)
                     Index Cond: (id = ci.person_id)
                     Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                     Rows Removed by Filter: 1
         ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..1.46 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=810)
               Index Cond: (id = mk.keyword_id)
               Filter: ((keyword)::text = ANY ('{hero,martial-arts,hand-to-hand-combat,computer-animated-movie}'::text[]))
               Rows Removed by Filter: 1
 Planning Time: 99.992 ms
 Execution Time: 112.215 ms
(59 rows)

SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7505.11..7505.12 rows=1 width=128) (actual time=9147.908..9147.908 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.03..7505.10 rows=1 width=80) (actual time=64.911..9139.553 rows=4407 loops=1)
         Join Filter: (mi.movie_id = t.id)
         ->  Nested Loop  (cost=1011.60..7504.28 rows=1 width=79) (actual time=64.833..9040.316 rows=4407 loops=1)
               ->  Nested Loop  (cost=1011.17..7503.25 rows=1 width=68) (actual time=33.752..8833.038 rows=7112 loops=1)
                     ->  Nested Loop  (cost=1011.03..7503.07 rows=1 width=72) (actual time=33.700..8796.050 rows=7740 loops=1)
                           Join Filter: (mi.movie_id = ci.movie_id)
                           ->  Gather  (cost=1010.47..7474.12 rows=1 width=64) (actual time=9.960..1999.869 rows=12260 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Nested Loop  (cost=10.46..6474.02 rows=1 width=64) (actual time=10.745..2667.636 rows=4087 loops=3)
                                       Join Filter: (mi_idx.movie_id = mi.movie_id)
                                       ->  Hash Join  (cost=10.03..6438.32 rows=2 width=13) (actual time=7.225..632.687 rows=16920 loops=3)
                                             Hash Cond: (mi_idx.info_type_id = it2.id)
                                             ->  Nested Loop  (cost=7.61..6435.32 rows=213 width=17) (actual time=6.995..606.552 rows=50907 loops=3)
                                                   ->  Nested Loop  (cost=7.18..6379.27 rows=70 width=4) (actual time=6.917..324.923 rows=20699 loops=3)
                                                         ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4207.70 rows=2 width=4) (actual time=0.377..32.202 rows=2 loops=3)
                                                               Filter: ((keyword)::text = ANY ('{murder,blood,gore,death,female-nudity}'::text[]))
                                                               Rows Removed by Filter: 44722
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1082.78 rows=300 width=8) (actual time=5.366..170.580 rows=12419 loops=5)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=12389
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=4.143..4.143 rows=12419 loops=5)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.77 rows=3 width=13) (actual time=0.011..0.012 rows=2 loops=62096)
                                                         Index Cond: (movie_id = mk.movie_id)
                                             ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.090..0.090 rows=1 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.067..0.070 rows=1 loops=3)
                                                         Filter: ((info)::text = 'votes'::text)
                                                         Rows Removed by Filter: 112
                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..17.84 rows=1 width=51) (actual time=0.119..0.119 rows=0 loops=50760)
                                             Index Cond: (movie_id = mk.movie_id)
                                             Filter: ((info)::text = 'Horror'::text)
                                             Rows Removed by Filter: 56
                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..28.93 rows=1 width=8) (actual time=0.452..0.553 rows=1 loops=12260)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                 Rows Removed by Filter: 47
                     ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=7740)
                           Index Cond: (id = mi.info_type_id)
                           Filter: ((info)::text = 'genres'::text)
                           Rows Removed by Filter: 0
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.03 rows=1 width=19) (actual time=0.028..0.028 rows=1 loops=7112)
                     Index Cond: (id = ci.person_id)
                     Filter: ((gender)::text = 'm'::text)
                     Rows Removed by Filter: 0
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.81 rows=1 width=21) (actual time=0.020..0.020 rows=1 loops=4407)
               Index Cond: (id = mk.movie_id)
 Planning Time: 26.818 ms
 Execution Time: 9149.218 ms
(51 rows)

SET
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7485.20..7485.21 rows=1 width=128) (actual time=755.700..755.700 rows=1 loops=1)
   ->  Nested Loop  (cost=1009.75..7485.19 rows=1 width=80) (actual time=375.386..755.640 rows=6 loops=1)
         ->  Nested Loop  (cost=1009.32..7484.17 rows=1 width=69) (actual time=375.308..755.434 rows=6 loops=1)
               ->  Nested Loop  (cost=1009.18..7483.98 rows=1 width=73) (actual time=375.279..755.353 rows=18 loops=1)
                     Join Filter: (t.id = mi_idx.movie_id)
                     ->  Nested Loop  (cost=1008.75..7483.18 rows=1 width=80) (actual time=375.196..755.188 rows=6 loops=1)
                           ->  Nested Loop  (cost=1008.61..7482.99 rows=1 width=84) (actual time=375.102..755.068 rows=6 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=1008.17..7465.14 rows=1 width=33) (actual time=374.822..754.125 rows=6 loops=1)
                                       Join Filter: (t.id = ci.movie_id)
                                       ->  Gather  (cost=1007.61..7436.20 rows=1 width=25) (actual time=374.034..756.593 rows=9 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Nested Loop  (cost=7.61..6436.10 rows=1 width=25) (actual time=385.967..548.088 rows=3 loops=3)
                                                   ->  Nested Loop  (cost=7.18..6379.27 rows=70 width=4) (actual time=6.832..272.949 rows=20699 loops=3)
                                                         ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4207.70 rows=2 width=4) (actual time=0.343..46.036 rows=2 loops=3)
                                                               Filter: ((keyword)::text = ANY ('{murder,blood,gore,death,female-nudity}'::text[]))
                                                               Rows Removed by Filter: 44722
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1082.78 rows=300 width=8) (actual time=5.313..131.207 rows=12419 loops=5)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=12389
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=4.096..4.096 rows=12419 loops=5)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.81 rows=1 width=21) (actual time=0.012..0.012 rows=0 loops=62096)
                                                         Index Cond: (id = mk.movie_id)
                                                         Filter: ((production_year > 2010) AND ((title)::text ~~ 'Vampire%'::text))
                                                         Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..28.93 rows=1 width=8) (actual time=0.185..0.227 rows=1 loops=9)
                                             Index Cond: (movie_id = mk.movie_id)
                                             Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                             Rows Removed by Filter: 21
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..17.84 rows=1 width=51) (actual time=0.155..0.155 rows=1 loops=6)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = 'Horror'::text)
                                       Rows Removed by Filter: 20
                           ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.016..0.016 rows=1 loops=6)
                                 Index Cond: (id = mi.info_type_id)
                                 Filter: ((info)::text = 'genres'::text)
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.77 rows=3 width=13) (actual time=0.023..0.025 rows=3 loops=6)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=18)
                     Index Cond: (id = mi_idx.info_type_id)
                     Filter: ((info)::text = 'votes'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using name_pkey on name n  (cost=0.43..1.03 rows=1 width=19) (actual time=0.033..0.033 rows=1 loops=6)
               Index Cond: (id = ci.person_id)
               Filter: ((gender)::text = 'm'::text)
 Planning Time: 28.146 ms
 Execution Time: 760.992 ms
(49 rows)

SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8711.77..8711.78 rows=1 width=128) (actual time=29867.898..29867.899 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.03..8711.76 rows=1 width=80) (actual time=14.033..29828.855 rows=26153 loops=1)
         Join Filter: (mi.movie_id = t.id)
         ->  Nested Loop  (cost=1011.60..8710.94 rows=1 width=79) (actual time=13.973..29512.818 rows=26153 loops=1)
               ->  Nested Loop  (cost=1011.17..8709.91 rows=1 width=68) (actual time=13.894..28773.992 rows=42900 loops=1)
                     Join Filter: (mi.movie_id = ci.movie_id)
                     ->  Gather  (cost=1010.61..8680.97 rows=1 width=60) (actual time=10.028..2229.315 rows=63386 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop  (cost=10.61..7680.87 rows=1 width=60) (actual time=7.671..3570.532 rows=21129 loops=3)
                                 ->  Nested Loop  (cost=10.46..7680.52 rows=2 width=64) (actual time=7.654..3491.623 rows=22577 loops=3)
                                       Join Filter: (mi_idx.movie_id = mi.movie_id)
                                       ->  Hash Join  (cost=10.03..7644.40 rows=2 width=13) (actual time=7.424..755.831 rows=21234 loops=3)
                                             Hash Cond: (mi_idx.info_type_id = it2.id)
                                             ->  Nested Loop  (cost=7.61..7641.16 rows=298 width=17) (actual time=7.199..722.079 rows=63896 loops=3)
                                                   ->  Nested Loop  (cost=7.18..7562.69 rows=98 width=4) (actual time=7.139..383.481 rows=25571 loops=3)
                                                         ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4347.46 rows=3 width=4) (actual time=0.656..34.294 rows=2 loops=3)
                                                               Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                               Rows Removed by Filter: 44721
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1068.74 rows=300 width=8) (actual time=4.899..145.040 rows=10959 loops=7)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=12389
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.781..3.781 rows=10959 loops=7)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.77 rows=3 width=13) (actual time=0.011..0.011 rows=2 loops=76714)
                                                         Index Cond: (movie_id = mk.movie_id)
                                             ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.089..0.089 rows=1 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.060..0.063 rows=1 loops=3)
                                                         Filter: ((info)::text = 'votes'::text)
                                                         Rows Removed by Filter: 112
                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..18.05 rows=1 width=51) (actual time=0.124..0.128 rows=1 loops=63701)
                                             Index Cond: (movie_id = mk.movie_id)
                                             Filter: ((info)::text = ANY ('{Horror,Action,Sci-Fi,Thriller,Crime,War}'::text[]))
                                             Rows Removed by Filter: 58
                                 ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=67732)
                                       Index Cond: (id = mi.info_type_id)
                                       Filter: ((info)::text = 'genres'::text)
                                       Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..28.93 rows=1 width=8) (actual time=0.333..0.418 rows=1 loops=63386)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                           Rows Removed by Filter: 63
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.03 rows=1 width=19) (actual time=0.016..0.016 rows=1 loops=42900)
                     Index Cond: (id = ci.person_id)
                     Filter: ((gender)::text = 'm'::text)
                     Rows Removed by Filter: 0
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.81 rows=1 width=21) (actual time=0.011..0.011 rows=1 loops=26153)
               Index Cond: (id = mk.movie_id)
 Planning Time: 28.497 ms
 Execution Time: 29868.973 ms
(51 rows)

SET
                                                                                                      QUERY PLAN                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=14697.96..14697.97 rows=1 width=128) (actual time=5678.456..5678.456 rows=1 loops=1)
   ->  Nested Loop  (cost=9.46..14697.95 rows=1 width=53) (actual time=34.519..5675.180 rows=1728 loops=1)
         Join Filter: (cct1.id = cc.subject_id)
         Rows Removed by Join Filter: 471
         ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.029..0.030 rows=1 loops=1)
               Filter: ((kind)::text = 'cast'::text)
               Rows Removed by Filter: 3
         ->  Nested Loop  (cost=9.46..14696.89 rows=1 width=57) (actual time=34.487..5674.552 rows=2199 loops=1)
               Join Filter: (cct2.id = cc.status_id)
               Rows Removed by Join Filter: 2199
               ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.008..0.011 rows=2 loops=1)
                     Filter: ((kind)::text ~~ '%complete%'::text)
                     Rows Removed by Filter: 2
               ->  Nested Loop  (cost=9.46..14695.82 rows=1 width=61) (actual time=28.711..2836.539 rows=2199 loops=2)
                     ->  Nested Loop  (cost=9.04..14695.35 rows=1 width=69) (actual time=20.848..2812.964 rows=2929 loops=2)
                           ->  Nested Loop  (cost=8.61..14694.89 rows=1 width=58) (actual time=20.804..2738.401 rows=2929 loops=2)
                                 ->  Nested Loop  (cost=8.18..14688.49 rows=14 width=46) (actual time=20.358..1888.422 rows=105632 loops=2)
                                       Join Filter: (t.id = ci.movie_id)
                                       ->  Nested Loop  (cost=7.62..14686.50 rows=1 width=34) (actual time=20.291..797.625 rows=884 loops=2)
                                             Join Filter: (kt.id = t.kind_id)
                                             Rows Removed by Join Filter: 1016
                                             ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.017..0.020 rows=1 loops=2)
                                                   Filter: ((kind)::text = 'movie'::text)
                                                   Rows Removed by Filter: 6
                                             ->  Nested Loop  (cost=7.62..14685.40 rows=1 width=38) (actual time=1.215..796.914 rows=1900 loops=2)
                                                   ->  Nested Loop  (cost=7.19..14684.91 rows=1 width=13) (actual time=1.180..708.612 rows=3908 loops=2)
                                                         Join Filter: (mi_idx.info_type_id = it2.id)
                                                         Rows Removed by Join Filter: 2713
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.023..0.026 rows=1 loops=2)
                                                               Filter: ((info)::text = 'rating'::text)
                                                               Rows Removed by Filter: 112
                                                         ->  Nested Loop  (cost=7.19..14680.72 rows=142 width=17) (actual time=1.153..706.506 rows=6621 loops=2)
                                                               ->  Nested Loop  (cost=6.76..14509.57 rows=337 width=4) (actual time=0.927..365.223 rows=24091 loops=2)
                                                                     ->  Seq Scan on keyword k  (cost=0.00..3967.82 rows=10 width=4) (actual time=0.180..53.766 rows=10 loops=2)
                                                                           Filter: ((keyword)::text = ANY ('{superhero,marvel-comics,based-on-comic,tv-special,fight,violence,magnet,web,claw,laser}'::text[]))
                                                                           Rows Removed by Filter: 134160
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1051.17 rows=300 width=8) (actual time=1.013..30.086 rows=2409 loops=20)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=34254
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.754..0.754 rows=2409 loops=20)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=13) (actual time=0.013..0.013 rows=0 loops=48182)
                                                                     Index Cond: (movie_id = mk.movie_id)
                                                                     Filter: ((info)::text > '7.0'::text)
                                                                     Rows Removed by Filter: 2
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.021..0.021 rows=0 loops=7816)
                                                         Index Cond: (id = mk.movie_id)
                                                         Filter: (production_year > 2000)
                                                         Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.032..1.146 rows=119 loops=1768)
                                             Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=20) (actual time=0.007..0.007 rows=0 loops=211264)
                                       Index Cond: (id = ci.person_role_id)
                                       Filter: ((name IS NOT NULL) AND (((name)::text ~~ '%man%'::text) OR ((name)::text ~~ '%Man%'::text)))
                                       Rows Removed by Filter: 0
                           ->  Index Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=19) (actual time=0.024..0.024 rows=1 loops=5858)
                                 Index Cond: (id = ci.person_id)
                     ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.006..0.007 rows=1 loops=5858)
                           Index Cond: (movie_id = t.id)
 Planning Time: 89.030 ms
 Execution Time: 5679.222 ms
(61 rows)

SET
                                                                                                      QUERY PLAN                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7402.91..7402.92 rows=1 width=96) (actual time=775.831..775.831 rows=1 loops=1)
   ->  Nested Loop  (cost=9.46..7402.90 rows=1 width=38) (actual time=67.945..775.676 rows=93 loops=1)
         Join Filter: (cct1.id = cc.subject_id)
         Rows Removed by Join Filter: 87
         ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.023..0.025 rows=1 loops=1)
               Filter: ((kind)::text = 'cast'::text)
               Rows Removed by Filter: 3
         ->  Nested Loop  (cost=9.46..7401.84 rows=1 width=42) (actual time=67.919..775.614 rows=180 loops=1)
               Join Filter: (cct2.id = cc.status_id)
               Rows Removed by Join Filter: 180
               ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.008..0.011 rows=2 loops=1)
                     Filter: ((kind)::text ~~ '%complete%'::text)
                     Rows Removed by Filter: 2
               ->  Nested Loop  (cost=9.46..7400.78 rows=1 width=46) (actual time=56.370..387.759 rows=180 loops=2)
                     ->  Nested Loop  (cost=9.04..7400.30 rows=1 width=54) (actual time=52.961..386.837 rows=191 loops=2)
                           ->  Nested Loop  (cost=8.61..7399.84 rows=1 width=58) (actual time=52.941..383.895 rows=191 loops=2)
                                 ->  Nested Loop  (cost=8.18..7393.44 rows=14 width=46) (actual time=52.853..348.434 rows=7981 loops=2)
                                       Join Filter: (t.id = ci.movie_id)
                                       ->  Nested Loop  (cost=7.62..7391.45 rows=1 width=34) (actual time=52.819..303.518 rows=31 loops=2)
                                             Join Filter: (kt.id = t.kind_id)
                                             Rows Removed by Join Filter: 167
                                             ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.010..0.012 rows=1 loops=2)
                                                   Filter: ((kind)::text = 'movie'::text)
                                                   Rows Removed by Filter: 6
                                             ->  Nested Loop  (cost=7.62..7390.35 rows=1 width=38) (actual time=1.522..303.436 rows=198 loops=2)
                                                   ->  Nested Loop  (cost=7.19..7389.87 rows=1 width=13) (actual time=1.485..296.556 rows=313 loops=2)
                                                         Join Filter: (mi_idx.info_type_id = it2.id)
                                                         Rows Removed by Join Filter: 613
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.022..0.025 rows=1 loops=2)
                                                               Filter: ((info)::text = 'rating'::text)
                                                               Rows Removed by Filter: 112
                                                         ->  Nested Loop  (cost=7.19..7387.28 rows=14 width=17) (actual time=1.148..296.276 rows=926 loops=2)
                                                               ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=0.881..166.958 rows=9984 loops=2)
                                                                     ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=0.136..38.561 rows=4 loops=2)
                                                                           Filter: ((keyword)::text = ANY ('{superhero,marvel-comics,based-on-comic,fight}'::text[]))
                                                                           Rows Removed by Filter: 134166
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=1.024..31.006 rows=2496 loops=8)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=15372
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.759..0.759 rows=2496 loops=8)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=13) (actual time=0.012..0.012 rows=0 loops=19968)
                                                                     Index Cond: (movie_id = mk.movie_id)
                                                                     Filter: ((info)::text > '8.0'::text)
                                                                     Rows Removed by Filter: 2
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.021..0.021 rows=1 loops=626)
                                                         Index Cond: (id = mk.movie_id)
                                                         Filter: (production_year > 2005)
                                                         Rows Removed by Filter: 0
                                       ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.031..1.326 rows=257 loops=62)
                                             Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=20) (actual time=0.004..0.004 rows=0 loops=15962)
                                       Index Cond: (id = ci.person_role_id)
                                       Filter: ((name IS NOT NULL) AND (((name)::text ~~ '%man%'::text) OR ((name)::text ~~ '%Man%'::text)))
                                       Rows Removed by Filter: 0
                           ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=382)
                                 Index Cond: (id = ci.person_id)
                                 Heap Fetches: 382
                     ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.003..0.004 rows=1 loops=382)
                           Index Cond: (movie_id = t.id)
 Planning Time: 88.126 ms
 Execution Time: 776.541 ms
(62 rows)

SET
                                                                                                   QUERY PLAN                                                                                                   
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=14709.67..14709.68 rows=1 width=96) (actual time=9598.647..9598.648 rows=1 loops=1)
   ->  Nested Loop  (cost=9.46..14709.67 rows=1 width=38) (actual time=19.370..9590.291 rows=5400 loops=1)
         Join Filter: (it2.id = mi_idx.info_type_id)
         Rows Removed by Join Filter: 11196
         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.037..0.040 rows=1 loops=1)
               Filter: ((info)::text = 'rating'::text)
               Rows Removed by Filter: 112
         ->  Nested Loop  (cost=9.46..14707.24 rows=1 width=42) (actual time=19.328..9587.217 rows=16596 loops=1)
               Join Filter: (t.id = mi_idx.movie_id)
               ->  Nested Loop  (cost=9.03..14706.72 rows=1 width=49) (actual time=19.278..9525.415 rows=5406 loops=1)
                     ->  Nested Loop  (cost=8.60..14700.32 rows=14 width=37) (actual time=18.225..7810.111 rows=189844 loops=1)
                           ->  Nested Loop  (cost=8.17..14693.95 rows=14 width=41) (actual time=18.195..3970.126 rows=189844 loops=1)
                                 Join Filter: (t.id = ci.movie_id)
                                 ->  Nested Loop  (cost=7.61..14691.96 rows=1 width=29) (actual time=18.116..1701.716 rows=1267 loops=1)
                                       Join Filter: (cct2.id = cc.status_id)
                                       Rows Removed by Join Filter: 1267
                                       ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.019..0.022 rows=2 loops=1)
                                             Filter: ((kind)::text ~~ '%complete%'::text)
                                             Rows Removed by Filter: 2
                                       ->  Nested Loop  (cost=7.61..14690.90 rows=1 width=33) (actual time=15.580..850.474 rows=1267 loops=2)
                                             Join Filter: (cct1.id = cc.subject_id)
                                             Rows Removed by Join Filter: 218
                                             ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=2)
                                                   Filter: ((kind)::text = 'cast'::text)
                                                   Rows Removed by Filter: 3
                                             ->  Nested Loop  (cost=7.61..14689.84 rows=1 width=37) (actual time=15.571..849.801 rows=1485 loops=2)
                                                   ->  Nested Loop  (cost=7.19..14677.40 rows=26 width=25) (actual time=15.317..806.702 rows=5032 loops=2)
                                                         Join Filter: (kt.id = t.kind_id)
                                                         Rows Removed by Join Filter: 5581
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.006..0.008 rows=1 loops=2)
                                                               Filter: ((kind)::text = 'movie'::text)
                                                               Rows Removed by Filter: 6
                                                         ->  Nested Loop  (cost=7.19..14674.02 rows=184 width=29) (actual time=0.947..803.200 rows=10613 loops=2)
                                                               ->  Nested Loop  (cost=6.76..14509.57 rows=337 width=4) (actual time=0.910..368.504 rows=24091 loops=2)
                                                                     ->  Seq Scan on keyword k  (cost=0.00..3967.82 rows=10 width=4) (actual time=0.195..54.132 rows=10 loops=2)
                                                                           Filter: ((keyword)::text = ANY ('{superhero,marvel-comics,based-on-comic,tv-special,fight,violence,magnet,web,claw,laser}'::text[]))
                                                                           Rows Removed by Filter: 134160
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1051.17 rows=300 width=8) (actual time=0.987..30.300 rows=2409 loops=20)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=34254
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.736..0.736 rows=2409 loops=20)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.017..0.017 rows=0 loops=48182)
                                                                     Index Cond: (id = mk.movie_id)
                                                                     Filter: (production_year > 2000)
                                                                     Rows Removed by Filter: 1
                                                   ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.007..0.007 rows=0 loops=10064)
                                                         Index Cond: (movie_id = t.id)
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.034..1.669 rows=150 loops=1267)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.019..0.019 rows=1 loops=189844)
                                 Index Cond: (id = ci.person_id)
                                 Heap Fetches: 189844
                     ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=20) (actual time=0.008..0.008 rows=0 loops=189844)
                           Index Cond: (id = ci.person_role_id)
                           Filter: ((name IS NOT NULL) AND (((name)::text ~~ '%man%'::text) OR ((name)::text ~~ '%Man%'::text)))
                           Rows Removed by Filter: 0
               ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.48 rows=3 width=13) (actual time=0.008..0.009 rows=3 loops=5406)
                     Index Cond: (movie_id = ci.movie_id)
 Planning Time: 88.150 ms
 Execution Time: 9599.449 ms
(61 rows)

SET
                                                                                                  QUERY PLAN                                                                                                   
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3759.09..3759.10 rows=1 width=96) (actual time=230.249..230.250 rows=1 loops=1)
   ->  Nested Loop  (cost=9.18..3759.08 rows=1 width=118) (actual time=10.311..229.870 rows=477 loops=1)
         Join Filter: (ml.movie_id = mi.movie_id)
         ->  Nested Loop  (cost=8.74..3757.51 rows=1 width=138) (actual time=10.024..226.613 rows=172 loops=1)
               Join Filter: (cc.subject_id = cct1.id)
               Rows Removed by Join Filter: 57
               ->  Nested Loop  (cost=8.74..3756.43 rows=1 width=142) (actual time=10.012..225.208 rows=172 loops=1)
                     Join Filter: (cct2.id = cc.status_id)
                     Rows Removed by Join Filter: 57
                     ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.023..0.024 rows=1 loops=1)
                           Filter: ((kind)::text = 'complete'::text)
                           Rows Removed by Filter: 3
                     ->  Nested Loop  (cost=8.74..3755.36 rows=2 width=146) (actual time=9.987..225.131 rows=229 loops=1)
                           Join Filter: (ml.movie_id = cc.movie_id)
                           ->  Nested Loop  (cost=8.32..3754.88 rows=1 width=134) (actual time=6.621..224.157 rows=310 loops=1)
                                 Join Filter: (ml.movie_id = t.id)
                                 ->  Nested Loop  (cost=7.89..3754.38 rows=1 width=113) (actual time=6.555..222.616 rows=402 loops=1)
                                       ->  Nested Loop  (cost=7.47..3753.92 rows=1 width=98) (actual time=5.662..218.535 rows=962 loops=1)
                                             Join Filter: (ct.id = mc.company_type_id)
                                             Rows Removed by Join Filter: 59
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.024..0.026 rows=1 loops=1)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                             ->  Nested Loop  (cost=7.47..3752.83 rows=3 width=102) (actual time=5.636..218.305 rows=1021 loops=1)
                                                   Join Filter: (ml.movie_id = mc.movie_id)
                                                   ->  Nested Loop  (cost=7.04..3752.25 rows=1 width=90) (actual time=5.558..216.074 rows=199 loops=1)
                                                         Join Filter: (lt.id = ml.link_type_id)
                                                         Rows Removed by Join Filter: 303
                                                         ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.025..0.034 rows=2 loops=1)
                                                               Filter: ((link)::text ~~ '%follow%'::text)
                                                               Rows Removed by Filter: 16
                                                         ->  Nested Loop  (cost=7.04..3750.90 rows=10 width=12) (actual time=4.854..107.972 rows=251 loops=2)
                                                               ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=4.836..85.804 rows=10544 loops=2)
                                                                     ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.247..17.826 rows=1 loops=2)
                                                                           Filter: ((keyword)::text = 'sequel'::text)
                                                                           Rows Removed by Filter: 134169
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=3.543..65.347 rows=10544 loops=2)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=11140
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=2.718..2.718 rows=10544 loops=2)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.002..0.002 rows=0 loops=21088)
                                                                     Index Cond: (movie_id = mk.movie_id)
                                                   ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=12) (actual time=0.007..0.010 rows=5 loops=199)
                                                         Index Cond: (movie_id = mk.movie_id)
                                                         Filter: (note IS NULL)
                                                         Rows Removed by Filter: 2
                                       ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.004..0.004 rows=0 loops=962)
                                             Index Cond: (id = mc.company_id)
                                             Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.003..0.003 rows=1 loops=402)
                                       Index Cond: (id = mk.movie_id)
                                       Filter: ((production_year >= 1950) AND (production_year <= 2000))
                                       Rows Removed by Filter: 0
                           ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.002..0.003 rows=1 loops=310)
                                 Index Cond: (movie_id = mk.movie_id)
               ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=2 width=4) (actual time=0.002..0.002 rows=1 loops=172)
                     Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.56 rows=1 width=4) (actual time=0.014..0.017 rows=3 loops=172)
               Index Cond: (movie_id = mk.movie_id)
               Filter: ((info)::text = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
               Rows Removed by Filter: 17
 Planning Time: 88.014 ms
 Execution Time: 231.003 ms
(65 rows)

SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=2479.14..2479.15 rows=1 width=96) (actual time=68.935..68.936 rows=1 loops=1)
   ->  Nested Loop  (cost=4.75..2479.13 rows=1 width=118) (actual time=44.936..68.593 rows=247 loops=1)
         Join Filter: (mc.company_type_id = ct.id)
         ->  Nested Loop  (cost=4.75..2478.07 rows=1 width=122) (actual time=44.920..66.556 rows=247 loops=1)
               ->  Nested Loop  (cost=4.33..2457.31 rows=47 width=126) (actual time=44.781..61.049 rows=1919 loops=1)
                     Join Filter: (ml.movie_id = mk.movie_id)
                     ->  Nested Loop  (cost=3.90..2455.35 rows=1 width=142) (actual time=44.715..59.282 rows=247 loops=1)
                           Join Filter: (ml.movie_id = mi.movie_id)
                           ->  Nested Loop  (cost=3.47..2453.33 rows=1 width=138) (actual time=44.602..58.108 rows=95 loops=1)
                                 ->  Nested Loop  (cost=3.05..2451.96 rows=3 width=123) (actual time=44.553..57.423 rows=190 loops=1)
                                       Join Filter: (ml.movie_id = t.id)
                                       ->  Hash Join  (cost=2.62..2365.94 rows=144 width=102) (actual time=3.497..54.045 rows=794 loops=1)
                                             Hash Cond: (ml.link_type_id = lt.id)
                                             ->  Merge Join  (cost=1.38..2356.27 rows=2601 width=24) (actual time=0.808..52.922 rows=7314 loops=1)
                                                   Merge Cond: (mc.movie_id = ml.movie_id)
                                                   ->  Nested Loop  (cost=0.85..33295.88 rows=43182 width=16) (actual time=0.743..37.801 rows=4811 loops=1)
                                                         ->  Nested Loop  (cost=0.42..11074.61 rows=16886 width=4) (actual time=0.085..9.600 rows=5561 loops=1)
                                                               Join Filter: (cct2.id = cc.status_id)
                                                               Rows Removed by Join Filter: 432
                                                               ->  Nested Loop  (cost=0.42..10060.41 rows=67543 width=8) (actual time=0.059..7.564 rows=5993 loops=1)
                                                                     Join Filter: (cct1.id = cc.subject_id)
                                                                     Rows Removed by Join Filter: 2305
                                                                     ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..6344.49 rows=135086 width=12) (actual time=0.024..4.143 rows=5993 loops=1)
                                                                     ->  Materialize  (cost=0.00..1.06 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=5993)
                                                                           ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=2 width=4) (actual time=0.021..0.023 rows=2 loops=1)
                                                                                 Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
                                                               ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=5993)
                                                                     ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.016..0.017 rows=1 loops=1)
                                                                           Filter: ((kind)::text = 'complete'::text)
                                                                           Rows Removed by Filter: 3
                                                         ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..1.29 rows=3 width=12) (actual time=0.004..0.005 rows=1 loops=5561)
                                                               Index Cond: (movie_id = cc.movie_id)
                                                               Filter: (note IS NULL)
                                                               Rows Removed by Filter: 2
                                                   ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..959.51 rows=29997 width=8) (actual time=0.023..9.709 rows=35147 loops=1)
                                             ->  Hash  (cost=1.23..1.23 rows=1 width=86) (actual time=0.038..0.038 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.013..0.018 rows=2 loops=1)
                                                         Filter: ((link)::text ~~ '%follow%'::text)
                                                         Rows Removed by Filter: 16
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.58 rows=1 width=21) (actual time=0.004..0.004 rows=0 loops=794)
                                             Index Cond: (id = mc.movie_id)
                                             Filter: (production_year = 1998)
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=190)
                                       Index Cond: (id = mc.company_id)
                                       Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                                       Rows Removed by Filter: 0
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.02 rows=1 width=4) (actual time=0.008..0.011 rows=3 loops=95)
                                 Index Cond: (movie_id = mc.movie_id)
                                 Filter: ((info)::text = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
                                 Rows Removed by Filter: 10
                     ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.37 rows=47 width=8) (actual time=0.003..0.005 rows=8 loops=247)
                           Index Cond: (movie_id = mc.movie_id)
               ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=1919)
                     Index Cond: (id = mk.keyword_id)
                     Filter: ((keyword)::text = 'sequel'::text)
                     Rows Removed by Filter: 1
         ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=247)
               Filter: ((kind)::text = 'production companies'::text)
               Rows Removed by Filter: 1
 Planning Time: 85.321 ms
 Execution Time: 69.715 ms
(63 rows)

SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=2071.28..2071.29 rows=1 width=96) (actual time=120.172..120.173 rows=1 loops=1)
   ->  Nested Loop  (cost=3.52..2071.27 rows=1 width=118) (actual time=10.507..119.736 rows=743 loops=1)
         ->  Nested Loop  (cost=3.10..1948.16 rows=279 width=122) (actual time=5.574..90.866 rows=11620 loops=1)
               Join Filter: (ml.movie_id = mk.movie_id)
               ->  Nested Loop  (cost=2.66..1936.64 rows=6 width=138) (actual time=5.521..82.427 rows=1150 loops=1)
                     ->  Nested Loop  (cost=2.24..1920.67 rows=35 width=123) (actual time=2.677..73.084 rows=2871 loops=1)
                           Join Filter: (ml.movie_id = mi.movie_id)
                           ->  Nested Loop  (cost=1.81..1891.16 rows=14 width=119) (actual time=2.360..45.603 rows=763 loops=1)
                                 Join Filter: (mc.company_type_id = ct.id)
                                 Rows Removed by Join Filter: 101
                                 ->  Nested Loop  (cost=1.81..1889.30 rows=54 width=123) (actual time=2.339..45.175 rows=864 loops=1)
                                       Join Filter: (ml.movie_id = t.id)
                                       ->  Nested Loop  (cost=1.38..1846.11 rows=72 width=102) (actual time=2.296..41.456 rows=864 loops=1)
                                             Join Filter: (lt.id = ml.link_type_id)
                                             Rows Removed by Join Filter: 12659
                                             ->  Merge Join  (cost=1.38..1825.36 rows=1301 width=24) (actual time=0.569..37.309 rows=6843 loops=1)
                                                   Merge Cond: (mc.movie_id = ml.movie_id)
                                                   ->  Nested Loop  (cost=0.85..19990.11 rows=21591 width=16) (actual time=0.495..24.660 rows=3202 loops=1)
                                                         ->  Nested Loop  (cost=0.42..8879.47 rows=8443 width=4) (actual time=0.069..8.283 rows=3688 loops=1)
                                                               Join Filter: (cc.subject_id = cct1.id)
                                                               Rows Removed by Join Filter: 2305
                                                               ->  Nested Loop  (cost=0.42..8371.84 rows=33772 width=8) (actual time=0.050..6.122 rows=5993 loops=1)
                                                                     Join Filter: (cct2.id = cc.status_id)
                                                                     Rows Removed by Join Filter: 432
                                                                     ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..6344.49 rows=135086 width=12) (actual time=0.009..3.415 rows=5993 loops=1)
                                                                     ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=5993)
                                                                           ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.024..0.025 rows=2 loops=1)
                                                                                 Filter: ((kind)::text ~~ 'complete%'::text)
                                                                                 Rows Removed by Filter: 2
                                                               ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=5993)
                                                                     ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=1)
                                                                           Filter: ((kind)::text = 'cast'::text)
                                                                           Rows Removed by Filter: 3
                                                         ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..1.29 rows=3 width=12) (actual time=0.004..0.004 rows=1 loops=3688)
                                                               Index Cond: (movie_id = cc.movie_id)
                                                               Filter: (note IS NULL)
                                                               Rows Removed by Filter: 2
                                                   ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..959.51 rows=29997 width=8) (actual time=0.024..7.520 rows=33905 loops=1)
                                             ->  Materialize  (cost=0.00..1.23 rows=1 width=86) (actual time=0.000..0.000 rows=2 loops=6843)
                                                   ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.018..0.023 rows=2 loops=1)
                                                         Filter: ((link)::text ~~ '%follow%'::text)
                                                         Rows Removed by Filter: 16
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.59 rows=1 width=21) (actual time=0.004..0.004 rows=1 loops=864)
                                             Index Cond: (id = mc.movie_id)
                                             Filter: ((production_year >= 1950) AND (production_year <= 2010))
                                 ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=864)
                                       ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=1)
                                             Filter: ((kind)::text = 'production companies'::text)
                                             Rows Removed by Filter: 3
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.07 rows=3 width=4) (actual time=0.031..0.035 rows=4 loops=763)
                                 Index Cond: (movie_id = t.id)
                                 Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,English}'::text[]))
                                 Rows Removed by Filter: 31
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=2871)
                           Index Cond: (id = mc.company_id)
                           Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.33 rows=47 width=8) (actual time=0.002..0.004 rows=10 loops=1150)
                     Index Cond: (movie_id = t.id)
         ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=11620)
               Index Cond: (id = mk.keyword_id)
               Filter: ((keyword)::text = 'sequel'::text)
               Rows Removed by Filter: 1
 Planning Time: 85.848 ms
 Execution Time: 120.984 ms
(65 rows)

SET
                                                                                                        QUERY PLAN                                                                                                         
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7410.76..7410.77 rows=1 width=96) (actual time=1689.956..1689.956 rows=1 loops=1)
   ->  Nested Loop  (cost=9.32..7410.76 rows=1 width=41) (actual time=11.661..1684.181 rows=4803 loops=1)
         ->  Nested Loop  (cost=8.90..7410.21 rows=1 width=26) (actual time=11.631..1637.576 rows=4955 loops=1)
               Join Filter: (ct.id = mc.company_type_id)
               ->  Nested Loop  (cost=8.90..7409.12 rows=1 width=30) (actual time=11.612..1599.749 rows=4955 loops=1)
                     Join Filter: (t.id = mc.movie_id)
                     ->  Nested Loop  (cost=8.47..7408.54 rows=1 width=42) (actual time=11.564..1573.711 rows=432 loops=1)
                           Join Filter: (it1.id = mi.info_type_id)
                           Rows Removed by Join Filter: 49
                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.014..0.026 rows=1 loops=1)
                                 Filter: ((info)::text = 'countries'::text)
                                 Rows Removed by Filter: 112
                           ->  Nested Loop  (cost=8.47..7406.11 rows=1 width=46) (actual time=11.547..1573.522 rows=481 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=8.04..7404.21 rows=1 width=38) (actual time=11.401..1430.979 rows=473 loops=1)
                                       Join Filter: (cc.subject_id = cct1.id)
                                       Rows Removed by Join Filter: 1570
                                       ->  Nested Loop  (cost=8.04..7403.15 rows=1 width=42) (actual time=11.356..1414.135 rows=2043 loops=1)
                                             Join Filter: (cct2.id = cc.status_id)
                                             Rows Removed by Join Filter: 6987
                                             ->  Nested Loop  (cost=8.04..7402.06 rows=1 width=46) (actual time=11.343..1387.288 rows=3010 loops=1)
                                                   ->  Nested Loop  (cost=7.62..7401.59 rows=1 width=34) (actual time=7.508..1323.520 rows=9301 loops=1)
                                                         Join Filter: (it2.id = mi_idx.info_type_id)
                                                         Rows Removed by Join Filter: 18529
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.019..0.023 rows=1 loops=1)
                                                               Filter: ((info)::text = 'rating'::text)
                                                               Rows Removed by Filter: 112
                                                         ->  Nested Loop  (cost=7.62..7399.04 rows=11 width=38) (actual time=7.485..1318.629 rows=27830 loops=1)
                                                               Join Filter: (t.id = mi_idx.movie_id)
                                                               ->  Nested Loop  (cost=7.19..7387.79 rows=21 width=25) (actual time=7.430..1107.700 rows=11686 loops=1)
                                                                     Join Filter: (kt.id = t.kind_id)
                                                                     Rows Removed by Join Filter: 7484
                                                                     ->  Nested Loop  (cost=7.19..7384.59 rows=74 width=29) (actual time=7.278..1092.103 rows=14771 loops=1)
                                                                           ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=7.230..526.586 rows=37091 loops=1)
                                                                                 ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.464..38.215 rows=3 loops=1)
                                                                                       Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                       Rows Removed by Filter: 134167
                                                                                 ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=5.038..157.164 rows=12364 loops=3)
                                                                                       Recheck Cond: (keyword_id = k.id)
                                                                                       Heap Blocks: exact=26312
                                                                                       ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.747..3.747 rows=12364 loops=3)
                                                                                             Index Cond: (keyword_id = k.id)
                                                                           ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.014..0.014 rows=0 loops=37091)
                                                                                 Index Cond: (id = mk.movie_id)
                                                                                 Filter: (production_year > 2000)
                                                                                 Rows Removed by Filter: 1
                                                                     ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=14771)
                                                                           ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.022..0.024 rows=2 loops=1)
                                                                                 Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                                                 Rows Removed by Filter: 5
                                                               ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=13) (actual time=0.015..0.017 rows=2 loops=11686)
                                                                     Index Cond: (movie_id = mk.movie_id)
                                                                     Filter: ((info)::text < '8.5'::text)
                                                                     Rows Removed by Filter: 0
                                                   ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.005..0.006 rows=0 loops=9301)
                                                         Index Cond: (movie_id = t.id)
                                             ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=3 width=4) (actual time=0.002..0.003 rows=3 loops=3010)
                                                   Filter: ((kind)::text <> 'complete+verified'::text)
                                                   Rows Removed by Filter: 0
                                       ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=2043)
                                             Filter: ((kind)::text = 'crew'::text)
                                             Rows Removed by Filter: 3
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.258..0.300 rows=1 loops=473)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                                       Rows Removed by Filter: 139
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.027..0.055 rows=11 loops=432)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                           Rows Removed by Filter: 10
               ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.002..0.002 rows=1 loops=4955)
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.008..0.008 rows=1 loops=4955)
               Index Cond: (id = mc.company_id)
               Filter: ((country_code)::text <> '[us]'::text)
               Rows Removed by Filter: 0
 Planning Time: 109.475 ms
 Execution Time: 1690.793 ms
(77 rows)

SET
                                                                                                            QUERY PLAN                                                                                                            
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7401.26..7401.27 rows=1 width=96) (actual time=1307.083..1307.083 rows=1 loops=1)
   ->  Nested Loop  (cost=9.32..7401.25 rows=1 width=41) (actual time=17.289..1306.826 rows=148 loops=1)
         ->  Nested Loop  (cost=8.90..7400.70 rows=1 width=26) (actual time=17.233..1304.094 rows=150 loops=1)
               Join Filter: (ct.id = mc.company_type_id)
               ->  Nested Loop  (cost=8.90..7399.61 rows=1 width=30) (actual time=17.204..1302.895 rows=150 loops=1)
                     Join Filter: (t.id = mc.movie_id)
                     ->  Nested Loop  (cost=8.47..7399.03 rows=1 width=42) (actual time=17.143..1301.655 rows=13 loops=1)
                           Join Filter: (it1.id = mi.info_type_id)
                           Rows Removed by Join Filter: 7
                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.015..0.027 rows=1 loops=1)
                                 Filter: ((info)::text = 'countries'::text)
                                 Rows Removed by Filter: 112
                           ->  Nested Loop  (cost=8.47..7396.60 rows=1 width=46) (actual time=17.124..1301.608 rows=20 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=8.04..7395.03 rows=1 width=38) (actual time=12.455..1259.394 rows=179 loops=1)
                                       Join Filter: (cct2.id = cc.status_id)
                                       Rows Removed by Join Filter: 394
                                       ->  Nested Loop  (cost=8.04..7393.94 rows=1 width=42) (actual time=12.444..1257.635 rows=191 loops=1)
                                             Join Filter: (cct1.id = cc.subject_id)
                                             Rows Removed by Join Filter: 689
                                             ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.019..0.021 rows=1 loops=1)
                                                   Filter: ((kind)::text = 'crew'::text)
                                                   Rows Removed by Filter: 3
                                             ->  Nested Loop  (cost=8.04..7392.88 rows=1 width=46) (actual time=12.403..1257.337 rows=880 loops=1)
                                                   ->  Nested Loop  (cost=7.62..7392.40 rows=1 width=34) (actual time=8.058..1234.944 rows=2312 loops=1)
                                                         Join Filter: (kt.id = t.kind_id)
                                                         Rows Removed by Join Filter: 1695
                                                         ->  Nested Loop  (cost=7.62..7391.29 rows=1 width=38) (actual time=7.814..1208.749 rows=2835 loops=1)
                                                               ->  Nested Loop  (cost=7.19..7390.80 rows=1 width=13) (actual time=7.772..992.405 rows=11708 loops=1)
                                                                     Join Filter: (it2.id = mi_idx.info_type_id)
                                                                     Rows Removed by Join Filter: 5912
                                                                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.019..0.023 rows=1 loops=1)
                                                                           Filter: ((info)::text = 'rating'::text)
                                                                           Rows Removed by Filter: 112
                                                                     ->  Nested Loop  (cost=7.19..7387.28 rows=89 width=17) (actual time=7.751..987.159 rows=17620 loops=1)
                                                                           ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=7.703..539.031 rows=37091 loops=1)
                                                                                 ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.949..38.850 rows=3 loops=1)
                                                                                       Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                       Rows Removed by Filter: 134167
                                                                                 ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=5.004..161.368 rows=12364 loops=3)
                                                                                       Recheck Cond: (keyword_id = k.id)
                                                                                       Heap Blocks: exact=26312
                                                                                       ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.708..3.708 rows=12364 loops=3)
                                                                                             Index Cond: (keyword_id = k.id)
                                                                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=13) (actual time=0.011..0.011 rows=0 loops=37091)
                                                                                 Index Cond: (movie_id = mk.movie_id)
                                                                                 Filter: ((info)::text > '6.5'::text)
                                                                                 Rows Removed by Filter: 2
                                                               ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.018..0.018 rows=0 loops=11708)
                                                                     Index Cond: (id = mk.movie_id)
                                                                     Filter: (production_year > 2005)
                                                                     Rows Removed by Filter: 1
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.003..0.003 rows=1 loops=2835)
                                                               Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                               Rows Removed by Filter: 2
                                                   ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.008..0.008 rows=0 loops=2312)
                                                         Index Cond: (movie_id = t.id)
                                       ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=3 width=4) (actual time=0.002..0.003 rows=3 loops=191)
                                             Filter: ((kind)::text <> 'complete+verified'::text)
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.56 rows=1 width=8) (actual time=0.226..0.235 rows=0 loops=179)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
                                       Rows Removed by Filter: 130
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.049..0.088 rows=12 loops=13)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                           Rows Removed by Filter: 17
               ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.002..0.002 rows=1 loops=150)
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.017..0.017 rows=1 loops=150)
               Index Cond: (id = mc.company_id)
               Filter: ((country_code)::text <> '[us]'::text)
               Rows Removed by Filter: 0
 Planning Time: 111.014 ms
 Execution Time: 1307.918 ms
(75 rows)

SET
                                                                                                        QUERY PLAN                                                                                                         
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7408.04..7408.05 rows=1 width=96) (actual time=4451.418..4451.418 rows=1 loops=1)
   ->  Nested Loop  (cost=9.32..7408.03 rows=1 width=41) (actual time=12.490..4440.144 rows=8373 loops=1)
         Join Filter: (mc.company_type_id = ct.id)
         ->  Nested Loop  (cost=9.32..7406.94 rows=1 width=45) (actual time=12.468..4375.235 rows=8373 loops=1)
               Join Filter: (it1.id = mi.info_type_id)
               Rows Removed by Join Filter: 1116
               ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.015..0.026 rows=1 loops=1)
                     Filter: ((info)::text = 'countries'::text)
                     Rows Removed by Filter: 112
               ->  Nested Loop  (cost=9.32..7404.51 rows=1 width=49) (actual time=12.451..4372.917 rows=9489 loops=1)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=8.88..7402.62 rows=1 width=65) (actual time=12.312..3439.533 rows=8156 loops=1)
                           Join Filter: (cc.subject_id = cct1.id)
                           Rows Removed by Join Filter: 1453
                           ->  Nested Loop  (cost=8.88..7401.55 rows=1 width=69) (actual time=12.301..3362.580 rows=9609 loops=1)
                                 Join Filter: (cct2.id = cc.status_id)
                                 Rows Removed by Join Filter: 5617
                                 ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.019..0.021 rows=1 loops=1)
                                       Filter: ((kind)::text = 'complete'::text)
                                       Rows Removed by Filter: 3
                                 ->  Nested Loop  (cost=8.88..7400.49 rows=1 width=73) (actual time=12.280..3358.583 rows=15226 loops=1)
                                       ->  Nested Loop  (cost=8.46..7400.01 rows=1 width=61) (actual time=12.237..3222.211 rows=23425 loops=1)
                                             Join Filter: (mi_idx.info_type_id = it2.id)
                                             Rows Removed by Join Filter: 46773
                                             ->  Nested Loop  (cost=8.46..7397.59 rows=1 width=65) (actual time=11.032..1809.605 rows=70198 loops=1)
                                                   Join Filter: (t.id = mi_idx.movie_id)
                                                   ->  Nested Loop  (cost=8.04..7397.05 rows=1 width=52) (actual time=10.986..1593.680 rows=23902 loops=1)
                                                         ->  Nested Loop  (cost=7.62..7396.50 rows=1 width=37) (actual time=10.946..1428.528 rows=25853 loops=1)
                                                               Join Filter: (t.id = mc.movie_id)
                                                               ->  Nested Loop  (cost=7.19..7387.25 rows=16 width=25) (actual time=7.939..1133.234 rows=8073 loops=1)
                                                                     Join Filter: (t.kind_id = kt.id)
                                                                     Rows Removed by Join Filter: 4332
                                                                     ->  Nested Loop  (cost=7.19..7384.59 rows=55 width=29) (actual time=7.791..1122.559 rows=9739 loops=1)
                                                                           ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=7.747..539.565 rows=37091 loops=1)
                                                                                 ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.910..38.358 rows=3 loops=1)
                                                                                       Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                       Rows Removed by Filter: 134167
                                                                                 ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=5.062..161.205 rows=12364 loops=3)
                                                                                       Recheck Cond: (keyword_id = k.id)
                                                                                       Heap Blocks: exact=26312
                                                                                       ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.755..3.755 rows=12364 loops=3)
                                                                                             Index Cond: (keyword_id = k.id)
                                                                           ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.015..0.015 rows=0 loops=37091)
                                                                                 Index Cond: (id = mk.movie_id)
                                                                                 Filter: (production_year > 2005)
                                                                                 Rows Removed by Filter: 1
                                                                     ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=9739)
                                                                           ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.010..0.012 rows=2 loops=1)
                                                                                 Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                                                 Rows Removed by Filter: 5
                                                               ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.025..0.035 rows=3 loops=8073)
                                                                     Index Cond: (movie_id = mk.movie_id)
                                                                     Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                                                                     Rows Removed by Filter: 7
                                                         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.005..0.005 rows=1 loops=25853)
                                                               Index Cond: (id = mc.company_id)
                                                               Filter: ((country_code)::text <> '[us]'::text)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=13) (actual time=0.005..0.008 rows=3 loops=23902)
                                                         Index Cond: (movie_id = mk.movie_id)
                                                         Filter: ((info)::text < '8.5'::text)
                                                         Rows Removed by Filter: 0
                                             ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.014..0.015 rows=1 loops=70198)
                                                   Filter: ((info)::text = 'rating'::text)
                                                   Rows Removed by Filter: 108
                                       ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.004..0.005 rows=1 loops=23425)
                                             Index Cond: (movie_id = t.id)
                           ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=9609)
                                 Filter: ((kind)::text = 'cast'::text)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.094..0.113 rows=1 loops=8156)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                           Rows Removed by Filter: 206
         ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.002..0.002 rows=1 loops=8373)
 Planning Time: 111.889 ms
 Execution Time: 4452.297 ms
(77 rows)

SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3946.87..3946.88 rows=1 width=96) (actual time=61.901..61.901 rows=1 loops=1)
   ->  Nested Loop  (cost=11.17..3946.87 rows=1 width=48) (actual time=19.167..61.381 rows=1620 loops=1)
         Join Filter: (it3.id = pi.info_type_id)
         Rows Removed by Join Filter: 3270
         ->  Seq Scan on info_type it3  (cost=0.00..2.41 rows=1 width=4) (actual time=0.016..0.026 rows=1 loops=1)
               Filter: ((info)::text = 'trivia'::text)
               Rows Removed by Filter: 112
         ->  Nested Loop  (cost=11.17..3944.44 rows=1 width=52) (actual time=19.113..60.830 rows=4890 loops=1)
               Join Filter: (n.id = pi.person_id)
               ->  Nested Loop  (cost=10.74..3924.23 rows=1 width=60) (actual time=19.038..58.432 rows=30 loops=1)
                     Join Filter: (it.id = mi.info_type_id)
                     ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.011..0.022 rows=1 loops=1)
                           Filter: ((info)::text = 'release dates'::text)
                           Rows Removed by Filter: 112
                     ->  Nested Loop  (cost=10.74..3921.81 rows=1 width=64) (actual time=19.025..58.400 rows=30 loops=1)
                           Join Filter: (t.id = mi.movie_id)
                           ->  Nested Loop  (cost=10.31..3878.76 rows=1 width=80) (actual time=18.853..55.593 rows=15 loops=1)
                                 Join Filter: (cct2.id = cc.status_id)
                                 ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.021..0.021 rows=1 loops=1)
                                       Filter: ((kind)::text = 'complete+verified'::text)
                                       Rows Removed by Filter: 3
                                 ->  Nested Loop  (cost=10.31..3877.70 rows=1 width=84) (actual time=18.831..55.565 rows=15 loops=1)
                                       Join Filter: (cct1.id = cc.subject_id)
                                       ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.007..0.009 rows=1 loops=1)
                                             Filter: ((kind)::text = 'cast'::text)
                                             Rows Removed by Filter: 3
                                       ->  Nested Loop  (cost=10.31..3876.64 rows=1 width=88) (actual time=18.821..55.549 rows=15 loops=1)
                                             Join Filter: (t.id = cc.movie_id)
                                             ->  Nested Loop  (cost=9.89..3873.84 rows=1 width=76) (actual time=18.765..55.445 rows=15 loops=1)
                                                   ->  Nested Loop  (cost=9.46..3871.53 rows=1 width=57) (actual time=18.689..55.305 rows=15 loops=1)
                                                         ->  Nested Loop  (cost=9.04..3869.51 rows=1 width=61) (actual time=18.641..54.622 rows=66 loops=1)
                                                               ->  Nested Loop  (cost=8.61..3865.49 rows=1 width=49) (actual time=18.560..53.345 rows=352 loops=1)
                                                                     Join Filter: (rt.id = ci.role_id)
                                                                     Rows Removed by Join Filter: 1100
                                                                     ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.025..0.027 rows=1 loops=1)
                                                                           Filter: ((role)::text = 'actress'::text)
                                                                           Rows Removed by Filter: 11
                                                                     ->  Nested Loop  (cost=8.61..3864.32 rows=2 width=53) (actual time=17.527..53.127 rows=1452 loops=1)
                                                                           ->  Nested Loop  (cost=8.18..3861.40 rows=1 width=49) (actual time=17.379..49.367 rows=836 loops=1)
                                                                                 Join Filter: (t.id = ci.movie_id)
                                                                                 ->  Nested Loop  (cost=7.62..3813.81 rows=1 width=33) (actual time=17.300..42.396 rows=22 loops=1)
                                                                                       Join Filter: (t.id = mc.movie_id)
                                                                                       ->  Nested Loop  (cost=7.19..3808.95 rows=1 width=25) (actual time=17.198..42.256 rows=1 loops=1)
                                                                                             ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=0.352..28.694 rows=414 loops=1)
                                                                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.105..20.541 rows=1 loops=1)
                                                                                                         Filter: ((keyword)::text = 'computer-animation'::text)
                                                                                                         Rows Removed by Filter: 134169
                                                                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=0.239..7.924 rows=414 loops=1)
                                                                                                         Recheck Cond: (keyword_id = k.id)
                                                                                                         Heap Blocks: exact=358
                                                                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.169..0.169 rows=414 loops=1)
                                                                                                               Index Cond: (keyword_id = k.id)
                                                                                             ->  Index Scan using title_pkey on title t  (cost=0.43..2.12 rows=1 width=21) (actual time=0.032..0.032 rows=0 loops=414)
                                                                                                   Index Cond: (id = mk.movie_id)
                                                                                                   Filter: ((production_year >= 2000) AND (production_year <= 2010) AND ((title)::text = 'Shrek 2'::text))
                                                                                                   Rows Removed by Filter: 1
                                                                                       ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..4.80 rows=5 width=8) (actual time=0.098..0.127 rows=22 loops=1)
                                                                                             Index Cond: (movie_id = mk.movie_id)
                                                                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..47.58 rows=1 width=16) (actual time=0.007..0.306 rows=38 loops=22)
                                                                                       Index Cond: (movie_id = mk.movie_id)
                                                                                       Filter: ((note)::text = ANY ('{(voice),"(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                                       Rows Removed by Filter: 191
                                                                           ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.90 rows=2 width=4) (actual time=0.003..0.004 rows=2 loops=836)
                                                                                 Index Cond: (person_id = ci.person_id)
                                                                                 Heap Fetches: 1452
                                                               ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..2.22 rows=1 width=20) (actual time=0.003..0.003 rows=0 loops=352)
                                                                     Index Cond: (id = ci.person_role_id)
                                                                     Filter: ((name)::text = 'Queen'::text)
                                                                     Rows Removed by Filter: 1
                                                         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..2.03 rows=1 width=4) (actual time=0.010..0.010 rows=0 loops=66)
                                                               Index Cond: (id = mc.company_id)
                                                               Filter: ((country_code)::text = '[us]'::text)
                                                               Rows Removed by Filter: 1
                                                   ->  Index Scan using name_pkey on name n  (cost=0.43..2.30 rows=1 width=19) (actual time=0.008..0.008 rows=1 loops=15)
                                                         Index Cond: (id = ci.person_id)
                                                         Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                             ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..2.78 rows=2 width=12) (actual time=0.006..0.006 rows=1 loops=15)
                                                   Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..43.02 rows=2 width=8) (actual time=0.026..0.186 rows=2 loops=15)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%200%'::text) OR ((info)::text ~~ 'USA:%200%'::text)))
                                 Rows Removed by Filter: 455
               ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..19.88 rows=26 width=8) (actual time=0.005..0.043 rows=163 loops=30)
                     Index Cond: (person_id = an.person_id)
 Planning Time: 146.395 ms
 Execution Time: 63.093 ms
(86 rows)

SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3950.13..3950.14 rows=1 width=96) (actual time=34.986..34.986 rows=1 loops=1)
   ->  Nested Loop  (cost=11.17..3950.12 rows=1 width=48) (actual time=8.469..34.964 rows=15 loops=1)
         Join Filter: (ci.person_id = n.id)
         ->  Nested Loop  (cost=10.74..3947.92 rows=1 width=45) (actual time=8.437..34.883 rows=15 loops=1)
               Join Filter: (it3.id = pi.info_type_id)
               Rows Removed by Join Filter: 2430
               ->  Seq Scan on info_type it3  (cost=0.00..2.41 rows=1 width=4) (actual time=0.017..0.027 rows=1 loops=1)
                     Filter: ((info)::text = 'height'::text)
                     Rows Removed by Filter: 112
               ->  Nested Loop  (cost=10.74..3945.19 rows=26 width=49) (actual time=8.334..34.626 rows=2445 loops=1)
                     ->  Nested Loop  (cost=10.31..3925.03 rows=1 width=41) (actual time=8.292..33.585 rows=15 loops=1)
                           ->  Nested Loop  (cost=9.89..3923.01 rows=1 width=45) (actual time=8.256..33.033 rows=66 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=9.46..3918.14 rows=1 width=61) (actual time=8.211..32.922 rows=3 loops=1)
                                       Join Filter: (mi.info_type_id = it.id)
                                       ->  Nested Loop  (cost=9.46..3915.72 rows=1 width=65) (actual time=8.198..32.886 rows=3 loops=1)
                                             Join Filter: (cc.status_id = cct2.id)
                                             ->  Nested Loop  (cost=9.46..3914.65 rows=1 width=69) (actual time=8.187..32.856 rows=3 loops=1)
                                                   Join Filter: (cct1.id = cc.subject_id)
                                                   ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.021..0.023 rows=1 loops=1)
                                                         Filter: ((kind)::text = 'cast'::text)
                                                         Rows Removed by Filter: 3
                                                   ->  Nested Loop  (cost=9.46..3913.59 rows=1 width=73) (actual time=8.164..32.830 rows=3 loops=1)
                                                         Join Filter: (t.id = cc.movie_id)
                                                         ->  Nested Loop  (cost=9.04..3907.99 rows=2 width=61) (actual time=8.112..32.767 rows=3 loops=1)
                                                               ->  Nested Loop  (cost=8.62..3905.08 rows=1 width=57) (actual time=8.064..32.704 rows=1 loops=1)
                                                                     Join Filter: (t.id = mi.movie_id)
                                                                     ->  Nested Loop  (cost=8.18..3862.13 rows=1 width=49) (actual time=7.980..32.419 rows=1 loops=1)
                                                                           ->  Nested Loop  (cost=7.75..3858.12 rows=1 width=37) (actual time=7.930..31.924 rows=11 loops=1)
                                                                                 Join Filter: (rt.id = ci.role_id)
                                                                                 Rows Removed by Join Filter: 27
                                                                                 ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.009..0.011 rows=1 loops=1)
                                                                                       Filter: ((role)::text = 'actress'::text)
                                                                                       Rows Removed by Filter: 11
                                                                                 ->  Nested Loop  (cost=7.75..3856.96 rows=1 width=41) (actual time=7.744..31.903 rows=38 loops=1)
                                                                                       Join Filter: (t.id = ci.movie_id)
                                                                                       ->  Nested Loop  (cost=7.19..3809.37 rows=1 width=25) (actual time=7.698..30.636 rows=1 loops=1)
                                                                                             ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=0.271..22.742 rows=414 loops=1)
                                                                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.066..20.193 rows=1 loops=1)
                                                                                                         Filter: ((keyword)::text = 'computer-animation'::text)
                                                                                                         Rows Removed by Filter: 134169
                                                                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=0.198..2.377 rows=414 loops=1)
                                                                                                         Recheck Cond: (keyword_id = k.id)
                                                                                                         Heap Blocks: exact=358
                                                                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.137..0.137 rows=414 loops=1)
                                                                                                               Index Cond: (keyword_id = k.id)
                                                                                             ->  Index Scan using title_pkey on title t  (cost=0.43..2.12 rows=1 width=21) (actual time=0.018..0.018 rows=0 loops=414)
                                                                                                   Index Cond: (id = mk.movie_id)
                                                                                                   Filter: ((production_year >= 2000) AND (production_year <= 2005) AND ((title)::text = 'Shrek 2'::text))
                                                                                                   Rows Removed by Filter: 1
                                                                                       ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..47.58 rows=1 width=16) (actual time=0.043..1.245 rows=38 loops=1)
                                                                                             Index Cond: (movie_id = mk.movie_id)
                                                                                             Filter: ((note)::text = ANY ('{(voice),"(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                                             Rows Removed by Filter: 191
                                                                           ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..2.22 rows=1 width=20) (actual time=0.044..0.044 rows=0 loops=11)
                                                                                 Index Cond: (id = ci.person_role_id)
                                                                                 Filter: ((name)::text = 'Queen'::text)
                                                                                 Rows Removed by Filter: 1
                                                                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..42.92 rows=2 width=8) (actual time=0.081..0.282 rows=1 loops=1)
                                                                           Index Cond: (movie_id = mk.movie_id)
                                                                           Filter: ((info)::text ~~ 'USA:%200%'::text)
                                                                           Rows Removed by Filter: 456
                                                               ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.90 rows=2 width=4) (actual time=0.045..0.060 rows=3 loops=1)
                                                                     Index Cond: (person_id = ci.person_id)
                                                                     Heap Fetches: 3
                                                         ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..2.78 rows=2 width=12) (actual time=0.019..0.019 rows=1 loops=3)
                                                               Index Cond: (movie_id = mk.movie_id)
                                             ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'complete+verified'::text)
                                                   Rows Removed by Filter: 3
                                       ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=3)
                                             Filter: ((info)::text = 'release dates'::text)
                                             Rows Removed by Filter: 15
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..4.80 rows=5 width=8) (actual time=0.017..0.028 rows=22 loops=3)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..2.03 rows=1 width=4) (actual time=0.008..0.008 rows=0 loops=66)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..19.89 rows=26 width=8) (actual time=0.005..0.043 rows=163 loops=15)
                           Index Cond: (person_id = ci.person_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..2.19 rows=1 width=19) (actual time=0.005..0.005 rows=1 loops=15)
               Index Cond: (id = pi.person_id)
               Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
 Planning Time: 145.282 ms
 Execution Time: 36.175 ms
(86 rows)

SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=5517.26..5517.27 rows=1 width=96) (actual time=5786.406..5786.407 rows=1 loops=1)
   ->  Nested Loop  (cost=11.17..5517.25 rows=1 width=48) (actual time=847.881..5768.724 rows=16308 loops=1)
         Join Filter: (pi.info_type_id = it3.id)
         Rows Removed by Join Filter: 51519
         ->  Nested Loop  (cost=11.17..5514.83 rows=1 width=52) (actual time=299.568..4525.108 rows=67827 loops=1)
               Join Filter: (cc.subject_id = cct1.id)
               ->  Nested Loop  (cost=11.17..5513.77 rows=1 width=56) (actual time=299.555..3996.656 rows=67827 loops=1)
                     Join Filter: (ci.role_id = rt.id)
                     ->  Nested Loop  (cost=11.17..5512.60 rows=1 width=60) (actual time=299.537..3432.205 rows=67827 loops=1)
                           Join Filter: (it.id = mi.info_type_id)
                           ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.016..0.029 rows=1 loops=1)
                                 Filter: ((info)::text = 'release dates'::text)
                                 Rows Removed by Filter: 112
                           ->  Nested Loop  (cost=11.17..5510.18 rows=1 width=64) (actual time=299.518..3416.156 rows=67827 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=10.74..5467.13 rows=1 width=80) (actual time=299.374..1092.202 rows=23424 loops=1)
                                       Join Filter: (mc.movie_id = t.id)
                                       ->  Nested Loop  (cost=10.31..5465.00 rows=1 width=59) (actual time=32.197..1008.492 rows=27549 loops=1)
                                             Join Filter: (cct2.id = cc.status_id)
                                             Rows Removed by Join Filter: 19742
                                             ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.020..0.021 rows=1 loops=1)
                                                   Filter: ((kind)::text = 'complete+verified'::text)
                                                   Rows Removed by Filter: 3
                                             ->  Nested Loop  (cost=10.31..5463.94 rows=1 width=63) (actual time=32.174..999.030 rows=47291 loops=1)
                                                   ->  Nested Loop  (cost=9.89..5461.14 rows=1 width=51) (actual time=32.110..848.914 rows=56941 loops=1)
                                                         ->  Nested Loop  (cost=9.46..5458.93 rows=1 width=39) (actual time=32.070..662.367 rows=58777 loops=1)
                                                               Join Filter: (n.id = an.person_id)
                                                               ->  Nested Loop  (cost=9.03..5456.03 rows=1 width=51) (actual time=31.969..577.286 rows=15702 loops=1)
                                                                     ->  Nested Loop  (cost=8.61..5449.96 rows=3 width=55) (actual time=31.813..369.691 rows=75939 loops=1)
                                                                           Join Filter: (ci.movie_id = mc.movie_id)
                                                                           ->  Nested Loop  (cost=8.18..5445.09 rows=1 width=47) (actual time=31.739..315.019 rows=2996 loops=1)
                                                                                 Join Filter: (n.id = pi.person_id)
                                                                                 ->  Nested Loop  (cost=7.75..5424.88 rows=1 width=39) (actual time=31.651..310.886 rows=45 loops=1)
                                                                                       ->  Nested Loop  (cost=7.32..5355.96 rows=30 width=20) (actual time=0.348..223.646 rows=4395 loops=1)
                                                                                             ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=0.260..26.697 rows=414 loops=1)
                                                                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.066..22.373 rows=1 loops=1)
                                                                                                         Filter: ((keyword)::text = 'computer-animation'::text)
                                                                                                         Rows Removed by Filter: 134169
                                                                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=0.187..4.107 rows=414 loops=1)
                                                                                                         Recheck Cond: (keyword_id = k.id)
                                                                                                         Heap Blocks: exact=358
                                                                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.126..0.126 rows=414 loops=1)
                                                                                                               Index Cond: (keyword_id = k.id)
                                                                                             ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..47.62 rows=1 width=16) (actual time=0.121..0.470 rows=11 loops=414)
                                                                                                   Index Cond: (movie_id = mk.movie_id)
                                                                                                   Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                                                   Rows Removed by Filter: 33
                                                                                       ->  Index Scan using name_pkey on name n  (cost=0.43..2.30 rows=1 width=19) (actual time=0.019..0.019 rows=0 loops=4395)
                                                                                             Index Cond: (id = ci.person_id)
                                                                                             Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                                                                             Rows Removed by Filter: 1
                                                                                 ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..19.89 rows=26 width=8) (actual time=0.027..0.064 rows=67 loops=45)
                                                                                       Index Cond: (person_id = ci.person_id)
                                                                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..4.80 rows=5 width=8) (actual time=0.004..0.010 rows=25 loops=2996)
                                                                                 Index Cond: (movie_id = mk.movie_id)
                                                                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..2.03 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=75939)
                                                                           Index Cond: (id = mc.company_id)
                                                                           Filter: ((country_code)::text = '[us]'::text)
                                                                           Rows Removed by Filter: 1
                                                               ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.87 rows=2 width=4) (actual time=0.002..0.004 rows=4 loops=15702)
                                                                     Index Cond: (person_id = pi.person_id)
                                                                     Heap Fetches: 58777
                                                         ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..2.21 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=58777)
                                                               Index Cond: (id = ci.person_role_id)
                                                   ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..2.78 rows=2 width=12) (actual time=0.002..0.002 rows=1 loops=56941)
                                                         Index Cond: (movie_id = mc.movie_id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..2.12 rows=1 width=21) (actual time=0.002..0.002 rows=1 loops=27549)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..43.02 rows=2 width=8) (actual time=0.015..0.098 rows=3 loops=23424)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%200%'::text) OR ((info)::text ~~ 'USA:%200%'::text)))
                                       Rows Removed by Filter: 298
                     ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=67827)
                           Filter: ((role)::text = 'actress'::text)
                           Rows Removed by Filter: 1
               ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=67827)
                     Filter: ((kind)::text = 'cast'::text)
         ->  Seq Scan on info_type it3  (cost=0.00..2.41 rows=1 width=4) (actual time=0.005..0.013 rows=1 loops=67827)
               Filter: ((info)::text = 'trivia'::text)
               Rows Removed by Filter: 89
 Planning Time: 146.089 ms
 Execution Time: 5787.473 ms
(84 rows)

SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3839.34..3839.35 rows=1 width=32) (actual time=1352.226..1352.226 rows=1 loops=1)
   ->  Nested Loop  (cost=8.04..3839.32 rows=7 width=17) (actual time=12.520..1346.620 rows=7834 loops=1)
         Join Filter: (mc.movie_id = t.id)
         ->  Nested Loop  (cost=7.61..3835.84 rows=7 width=8) (actual time=12.478..1257.282 rows=7834 loops=1)
               ->  Nested Loop  (cost=7.19..3756.52 rows=178 width=12) (actual time=10.695..703.458 rows=148552 loops=1)
                     ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.595..262.906 rows=41840 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.903..26.226 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'character-name-in-title'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.684..225.628 rows=41840 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=11541
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.951..7.951 rows=41840 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.007..0.009 rows=4 loops=41840)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=148552)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text = '[de]'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.010..0.010 rows=1 loops=7834)
               Index Cond: (id = mk.movie_id)
 Planning Time: 4.087 ms
 Execution Time: 1352.721 ms
(24 rows)

SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3836.84..3836.85 rows=1 width=32) (actual time=1299.775..1299.776 rows=1 loops=1)
   ->  Nested Loop  (cost=8.04..3836.83 rows=2 width=17) (actual time=16.787..1296.185 rows=5228 loops=1)
         Join Filter: (mc.movie_id = t.id)
         ->  Nested Loop  (cost=7.61..3835.84 rows=2 width=8) (actual time=16.744..1236.537 rows=5228 loops=1)
               ->  Nested Loop  (cost=7.19..3756.52 rows=178 width=12) (actual time=11.081..697.384 rows=148552 loops=1)
                     ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.997..263.030 rows=41840 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.301..26.600 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'character-name-in-title'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.688..225.275 rows=41840 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=11541
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.952..7.952 rows=41840 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.006..0.009 rows=4 loops=41840)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=148552)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text = '[nl]'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.010..0.010 rows=1 loops=5228)
               Index Cond: (id = mk.movie_id)
 Planning Time: 5.368 ms
 Execution Time: 1300.267 ms
(24 rows)

SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3836.34..3836.35 rows=1 width=32) (actual time=1213.296..1213.296 rows=1 loops=1)
   ->  Nested Loop  (cost=8.04..3836.34 rows=1 width=17) (actual time=1213.288..1213.288 rows=0 loops=1)
         Join Filter: (mc.movie_id = t.id)
         ->  Nested Loop  (cost=7.61..3835.84 rows=1 width=8) (actual time=1213.287..1213.288 rows=0 loops=1)
               ->  Nested Loop  (cost=7.19..3756.52 rows=178 width=12) (actual time=10.949..693.474 rows=148552 loops=1)
                     ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.864..261.148 rows=41840 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.289..26.527 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'character-name-in-title'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.567..223.502 rows=41840 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=11541
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.854..7.854 rows=41840 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.006..0.009 rows=4 loops=41840)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=148552)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text = '[sm]'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (never executed)
               Index Cond: (id = mk.movie_id)
 Planning Time: 5.252 ms
 Execution Time: 1213.771 ms
(24 rows)

SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3852.93..3852.94 rows=1 width=32) (actual time=1774.004..1774.004 rows=1 loops=1)
   ->  Nested Loop  (cost=8.04..3852.77 rows=64 width=17) (actual time=11.153..1742.994 rows=68316 loops=1)
         ->  Nested Loop  (cost=7.62..3773.45 rows=178 width=21) (actual time=11.007..1187.214 rows=148552 loops=1)
               Join Filter: (t.id = mc.movie_id)
               ->  Nested Loop  (cost=7.19..3752.95 rows=34 width=25) (actual time=10.877..714.695 rows=41840 loops=1)
                     ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.849..259.107 rows=41840 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.295..26.502 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'character-name-in-title'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.545..220.570 rows=41840 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=11541
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.836..7.836 rows=41840 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.010..0.010 rows=1 loops=41840)
                           Index Cond: (id = mk.movie_id)
               ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.007..0.009 rows=4 loops=41840)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=148552)
               Index Cond: (id = mc.company_id)
               Filter: ((country_code)::text = '[us]'::text)
               Rows Removed by Filter: 1
 Planning Time: 5.284 ms
 Execution Time: 1774.478 ms
(24 rows)

SET
                                                                                                         QUERY PLAN                                                                                                         
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8702.65..8702.66 rows=1 width=128) (actual time=12770.416..12770.417 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.71..8702.64 rows=1 width=80) (actual time=93.255..12767.437 rows=757 loops=1)
         ->  Nested Loop  (cost=1012.58..8702.48 rows=1 width=84) (actual time=93.227..12765.554 rows=757 loops=1)
               ->  Nested Loop  (cost=1012.45..8702.31 rows=1 width=88) (actual time=87.996..12758.713 rows=2492 loops=1)
                     ->  Nested Loop  (cost=1012.31..8702.12 rows=1 width=92) (actual time=87.958..12748.280 rows=2492 loops=1)
                           Join Filter: (mi.movie_id = t.id)
                           ->  Nested Loop  (cost=1011.88..8701.29 rows=1 width=95) (actual time=33.565..12605.437 rows=9940 loops=1)
                                 ->  Nested Loop  (cost=1011.45..8700.26 rows=1 width=84) (actual time=30.979..12316.251 rows=15093 loops=1)
                                       Join Filter: (mi.movie_id = ci.movie_id)
                                       ->  Gather  (cost=1010.88..8671.17 rows=1 width=76) (actual time=14.056..1702.470 rows=19944 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Nested Loop  (cost=10.88..7671.07 rows=1 width=76) (actual time=10.654..2795.660 rows=6648 loops=3)
                                                   Join Filter: (mi_idx.movie_id = mi.movie_id)
                                                   ->  Nested Loop  (cost=10.45..7653.03 rows=1 width=25) (actual time=8.251..922.533 rows=11782 loops=3)
                                                         ->  Hash Join  (cost=10.03..7651.37 rows=2 width=13) (actual time=7.497..801.658 rows=21234 loops=3)
                                                               Hash Cond: (mi_idx.info_type_id = it2.id)
                                                               ->  Nested Loop  (cost=7.61..7648.12 rows=298 width=17) (actual time=7.276..773.528 rows=63896 loops=3)
                                                                     ->  Nested Loop  (cost=7.18..7568.64 rows=98 width=4) (actual time=7.205..418.062 rows=25571 loops=3)
                                                                           ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4353.41 rows=3 width=4) (actual time=0.632..36.295 rows=2 loops=3)
                                                                                 Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                                 Rows Removed by Filter: 44721
                                                                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1068.74 rows=300 width=8) (actual time=4.977..159.137 rows=10959 loops=7)
                                                                                 Recheck Cond: (keyword_id = k.id)
                                                                                 Heap Blocks: exact=12389
                                                                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.851..3.851 rows=10959 loops=7)
                                                                                       Index Cond: (keyword_id = k.id)
                                                                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.78 rows=3 width=13) (actual time=0.011..0.012 rows=2 loops=76714)
                                                                           Index Cond: (movie_id = mk.movie_id)
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.080..0.081 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.050..0.053 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'votes'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.81 rows=2 width=12) (actual time=0.004..0.005 rows=1 loops=63701)
                                                               Index Cond: (movie_id = mi_idx.movie_id)
                                                   ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..18.03 rows=1 width=51) (actual time=0.155..0.158 rows=1 loops=35346)
                                                         Index Cond: (movie_id = mk.movie_id)
                                                         Filter: ((info)::text = ANY ('{Horror,Thriller}'::text[]))
                                                         Rows Removed by Filter: 101
                                       ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..29.07 rows=1 width=8) (actual time=0.396..0.531 rows=1 loops=19944)
                                             Index Cond: (movie_id = mk.movie_id)
                                             Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                             Rows Removed by Filter: 73
                                 ->  Index Scan using name_pkey on name n  (cost=0.43..1.04 rows=1 width=19) (actual time=0.018..0.018 rows=1 loops=15093)
                                       Index Cond: (id = ci.person_id)
                                       Filter: ((gender)::text = 'm'::text)
                                       Rows Removed by Filter: 0
                           ->  Index Scan using title_pkey on title t  (cost=0.43..0.82 rows=1 width=21) (actual time=0.013..0.013 rows=0 loops=9940)
                                 Index Cond: (id = mk.movie_id)
                                 Filter: (production_year > 2000)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=2492)
                           Index Cond: (id = mi.info_type_id)
                           Filter: ((info)::text = 'genres'::text)
               ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=2492)
                     Index Cond: (id = cc.status_id)
                     Filter: ((kind)::text = 'complete+verified'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=757)
               Index Cond: (id = cc.subject_id)
               Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
 Planning Time: 93.236 ms
 Execution Time: 12771.750 ms
(64 rows)

SET
                                                                                                           QUERY PLAN                                                                                                            
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8700.30..8700.31 rows=1 width=128) (actual time=1105.975..1105.975 rows=1 loops=1)
   ->  Nested Loop  (cost=1010.43..8700.29 rows=1 width=80) (actual time=198.298..1105.905 rows=28 loops=1)
         ->  Nested Loop  (cost=1010.30..8700.12 rows=1 width=84) (actual time=198.273..1105.829 rows=28 loops=1)
               ->  Nested Loop  (cost=1010.17..8699.95 rows=1 width=88) (actual time=198.222..1105.515 rows=108 loops=1)
                     Join Filter: (t.id = cc.movie_id)
                     ->  Nested Loop  (cost=1009.75..8699.12 rows=1 width=100) (actual time=198.153..1104.946 rows=108 loops=1)
                           ->  Nested Loop  (cost=1009.61..8698.94 rows=1 width=104) (actual time=198.128..1104.715 rows=108 loops=1)
                                 ->  Nested Loop  (cost=1009.46..8698.75 rows=1 width=108) (actual time=198.087..1104.083 rows=324 loops=1)
                                       Join Filter: (t.id = mi_idx.movie_id)
                                       ->  Nested Loop  (cost=1009.04..8697.94 rows=1 width=95) (actual time=198.001..1103.281 rows=108 loops=1)
                                             ->  Nested Loop  (cost=1008.61..8696.90 rows=1 width=84) (actual time=197.908..1102.100 rows=108 loops=1)
                                                   Join Filter: (t.id = ci.movie_id)
                                                   ->  Nested Loop  (cost=1008.04..8667.81 rows=1 width=76) (actual time=196.970..1080.999 rows=65 loops=1)
                                                         Join Filter: (t.id = mi.movie_id)
                                                         ->  Gather  (cost=1007.61..8649.77 rows=1 width=25) (actual time=150.896..1076.610 rows=49 loops=1)
                                                               Workers Planned: 2
                                                               Workers Launched: 2
                                                               ->  Nested Loop  (cost=7.61..7649.67 rows=1 width=25) (actual time=172.072..749.002 rows=16 loops=3)
                                                                     ->  Nested Loop  (cost=7.18..7568.64 rows=98 width=4) (actual time=7.085..355.590 rows=25571 loops=3)
                                                                           ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4353.41 rows=3 width=4) (actual time=0.487..35.731 rows=2 loops=3)
                                                                                 Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                                 Rows Removed by Filter: 44721
                                                                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1068.74 rows=300 width=8) (actual time=4.950..132.582 rows=10959 loops=7)
                                                                                 Recheck Cond: (keyword_id = k.id)
                                                                                 Heap Blocks: exact=12389
                                                                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.824..3.824 rows=10959 loops=7)
                                                                                       Index Cond: (keyword_id = k.id)
                                                                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.83 rows=1 width=21) (actual time=0.014..0.014 rows=0 loops=76714)
                                                                           Index Cond: (id = mk.movie_id)
                                                                           Filter: ((production_year > 2000) AND (((title)::text ~~ '%Freddy%'::text) OR ((title)::text ~~ '%Jason%'::text) OR ((title)::text ~~ 'Saw%'::text)))
                                                                           Rows Removed by Filter: 1
                                                         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..18.03 rows=1 width=51) (actual time=0.209..0.210 rows=1 loops=49)
                                                               Index Cond: (movie_id = mk.movie_id)
                                                               Filter: ((info)::text = ANY ('{Horror,Thriller}'::text[]))
                                                               Rows Removed by Filter: 230
                                                   ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..29.07 rows=1 width=8) (actual time=0.200..0.323 rows=2 loops=65)
                                                         Index Cond: (movie_id = mk.movie_id)
                                                         Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                                         Rows Removed by Filter: 85
                                             ->  Index Scan using name_pkey on name n  (cost=0.43..1.04 rows=1 width=19) (actual time=0.010..0.010 rows=1 loops=108)
                                                   Index Cond: (id = ci.person_id)
                                                   Filter: ((gender)::text = 'm'::text)
                                       ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.78 rows=3 width=13) (actual time=0.005..0.006 rows=3 loops=108)
                                             Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=324)
                                       Index Cond: (id = mi_idx.info_type_id)
                                       Filter: ((info)::text = 'votes'::text)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=108)
                                 Index Cond: (id = mi.info_type_id)
                                 Filter: ((info)::text = 'genres'::text)
                     ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.81 rows=2 width=12) (actual time=0.004..0.005 rows=1 loops=108)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=108)
                     Index Cond: (id = cc.status_id)
                     Filter: ((kind)::text = 'complete+verified'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=28)
               Index Cond: (id = cc.subject_id)
               Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
 Planning Time: 93.080 ms
 Execution Time: 1112.917 ms
(62 rows)

SET
                                                                                                         QUERY PLAN                                                                                                         
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8720.29..8720.30 rows=1 width=128) (actual time=11731.174..11731.175 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.71..8720.28 rows=1 width=80) (actual time=38.154..11719.030 rows=8024 loops=1)
         Join Filter: (mi.movie_id = t.id)
         ->  Nested Loop  (cost=1012.28..8719.45 rows=1 width=83) (actual time=38.071..11603.342 rows=8024 loops=1)
               ->  Nested Loop  (cost=1011.85..8718.42 rows=1 width=72) (actual time=37.994..11376.885 rows=11863 loops=1)
                     Join Filter: (mi.movie_id = ci.movie_id)
                     ->  Nested Loop  (cost=1011.29..8689.33 rows=1 width=64) (actual time=17.726..2432.584 rows=14655 loops=1)
                           ->  Nested Loop  (cost=1011.14..8689.15 rows=1 width=68) (actual time=17.702..2394.770 rows=18333 loops=1)
                                 ->  Nested Loop  (cost=1011.01..8688.98 rows=1 width=72) (actual time=17.672..2354.284 rows=23704 loops=1)
                                       ->  Gather  (cost=1010.88..8688.81 rows=1 width=76) (actual time=12.977..2249.784 rows=43984 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Nested Loop  (cost=10.88..7688.71 rows=1 width=76) (actual time=12.670..3930.753 rows=14661 loops=3)
                                                   Join Filter: (mi.movie_id = cc.movie_id)
                                                   ->  Nested Loop  (cost=10.46..7687.87 rows=1 width=64) (actual time=7.674..3796.245 rows=22577 loops=3)
                                                         Join Filter: (mi_idx.movie_id = mi.movie_id)
                                                         ->  Hash Join  (cost=10.03..7651.37 rows=2 width=13) (actual time=7.427..823.245 rows=21234 loops=3)
                                                               Hash Cond: (mi_idx.info_type_id = it2.id)
                                                               ->  Nested Loop  (cost=7.61..7648.12 rows=298 width=17) (actual time=7.208..790.025 rows=63896 loops=3)
                                                                     ->  Nested Loop  (cost=7.18..7568.64 rows=98 width=4) (actual time=7.116..424.669 rows=25571 loops=3)
                                                                           ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4353.41 rows=3 width=4) (actual time=0.546..35.133 rows=2 loops=3)
                                                                                 Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                                 Rows Removed by Filter: 44721
                                                                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1068.74 rows=300 width=8) (actual time=4.984..162.326 rows=10959 loops=7)
                                                                                 Recheck Cond: (keyword_id = k.id)
                                                                                 Heap Blocks: exact=12389
                                                                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.863..3.863 rows=10959 loops=7)
                                                                                       Index Cond: (keyword_id = k.id)
                                                                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.78 rows=3 width=13) (actual time=0.012..0.013 rows=2 loops=76714)
                                                                           Index Cond: (movie_id = mk.movie_id)
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.081..0.081 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.053..0.055 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'votes'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..18.24 rows=1 width=51) (actual time=0.135..0.139 rows=1 loops=63701)
                                                               Index Cond: (movie_id = mk.movie_id)
                                                               Filter: ((info)::text = ANY ('{Horror,Action,Sci-Fi,Thriller,Crime,War}'::text[]))
                                                               Rows Removed by Filter: 58
                                                   ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.81 rows=2 width=12) (actual time=0.004..0.005 rows=1 loops=67732)
                                                         Index Cond: (movie_id = mk.movie_id)
                                       ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=43984)
                                             Index Cond: (id = cc.status_id)
                                             Filter: ((kind)::text = 'complete+verified'::text)
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=23704)
                                       Index Cond: (id = cc.subject_id)
                                       Filter: ((kind)::text = 'cast'::text)
                                       Rows Removed by Filter: 0
                           ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=18333)
                                 Index Cond: (id = mi.info_type_id)
                                 Filter: ((info)::text = 'genres'::text)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..29.07 rows=1 width=8) (actual time=0.460..0.609 rows=1 loops=14655)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                           Rows Removed by Filter: 83
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.04 rows=1 width=19) (actual time=0.018..0.018 rows=1 loops=11863)
                     Index Cond: (id = ci.person_id)
                     Filter: ((gender)::text = 'm'::text)
                     Rows Removed by Filter: 0
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.82 rows=1 width=21) (actual time=0.013..0.013 rows=1 loops=8024)
               Index Cond: (id = mk.movie_id)
 Planning Time: 94.200 ms
 Execution Time: 11732.379 ms
(65 rows)

SET
                                                                                                      QUERY PLAN                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8966.22..8966.23 rows=1 width=128) (actual time=3473.026..3473.027 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.88..8966.21 rows=1 width=80) (actual time=138.521..3471.263 rows=1273 loops=1)
         Join Filter: (mi.movie_id = t.id)
         ->  Nested Loop  (cost=1012.45..8965.10 rows=1 width=83) (actual time=138.435..3457.796 rows=1273 loops=1)
               ->  Nested Loop  (cost=1012.02..8963.80 rows=1 width=72) (actual time=138.348..3435.744 rows=1556 loops=1)
                     ->  Nested Loop  (cost=1011.88..8963.62 rows=1 width=76) (actual time=138.314..3430.702 rows=1616 loops=1)
                           Join Filter: (mi_idx.movie_id = mi.movie_id)
                           ->  Nested Loop  (cost=1011.45..8940.22 rows=1 width=25) (actual time=64.324..3215.093 rows=1471 loops=1)
                                 Join Filter: (mi_idx.movie_id = ci.movie_id)
                                 ->  Gather  (cost=1010.88..8907.19 rows=1 width=17) (actual time=63.652..2106.642 rows=1547 loops=1)
                                       Workers Planned: 2
                                       Workers Launched: 2
                                       ->  Nested Loop  (cost=10.88..7907.09 rows=1 width=17) (actual time=37.994..2296.559 rows=516 loops=3)
                                             ->  Nested Loop  (cost=10.46..7893.34 rows=14 width=21) (actual time=7.519..1294.982 rows=199419 loops=3)
                                                   Join Filter: (mi_idx.movie_id = mc.movie_id)
                                                   ->  Hash Join  (cost=10.03..7888.91 rows=2 width=13) (actual time=7.434..764.375 rows=21234 loops=3)
                                                         Hash Cond: (mi_idx.info_type_id = it2.id)
                                                         ->  Nested Loop  (cost=7.61..7885.67 rows=298 width=17) (actual time=7.198..735.333 rows=63896 loops=3)
                                                               ->  Nested Loop  (cost=7.18..7778.10 rows=98 width=4) (actual time=7.122..404.239 rows=25571 loops=3)
                                                                     ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4562.87 rows=3 width=4) (actual time=0.533..36.486 rows=2 loops=3)
                                                                           Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                           Rows Removed by Filter: 44721
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1068.74 rows=300 width=8) (actual time=4.971..153.288 rows=10959 loops=7)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=12389
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.845..3.845 rows=10959 loops=7)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..1.07 rows=3 width=13) (actual time=0.011..0.011 rows=2 loops=76714)
                                                                     Index Cond: (movie_id = mk.movie_id)
                                                         ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.083..0.083 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.059..0.062 rows=1 loops=3)
                                                                     Filter: ((info)::text = 'votes'::text)
                                                                     Rows Removed by Filter: 112
                                                   ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.15 rows=5 width=8) (actual time=0.014..0.021 rows=9 loops=63701)
                                                         Index Cond: (movie_id = mk.movie_id)
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.98 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=598256)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((name)::text ~~ 'Lionsgate%'::text)
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..33.03 rows=1 width=8) (actual time=0.521..0.719 rows=1 loops=1547)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                       Rows Removed by Filter: 119
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..23.38 rows=1 width=51) (actual time=0.143..0.145 rows=1 loops=1471)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((info)::text = ANY ('{Horror,Thriller}'::text[]))
                                 Rows Removed by Filter: 173
                     ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1616)
                           Index Cond: (id = mi.info_type_id)
                           Filter: ((info)::text = 'genres'::text)
                           Rows Removed by Filter: 0
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.30 rows=1 width=19) (actual time=0.013..0.013 rows=1 loops=1556)
                     Index Cond: (id = ci.person_id)
                     Filter: ((gender)::text = 'm'::text)
                     Rows Removed by Filter: 0
         ->  Index Scan using title_pkey on title t  (cost=0.43..1.10 rows=1 width=21) (actual time=0.009..0.009 rows=1 loops=1273)
               Index Cond: (id = mk.movie_id)
 Planning Time: 107.516 ms
 Execution Time: 3480.110 ms
(60 rows)

SET
                                                                                                        QUERY PLAN                                                                                                         
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8956.88..8956.89 rows=1 width=128) (actual time=1103.400..1103.400 rows=1 loops=1)
   ->  Nested Loop  (cost=1010.60..8956.87 rows=1 width=80) (actual time=327.298..1103.274 rows=84 loops=1)
         ->  Nested Loop  (cost=1010.17..8955.57 rows=1 width=69) (actual time=327.206..1102.409 rows=84 loops=1)
               ->  Nested Loop  (cost=1010.03..8955.39 rows=1 width=73) (actual time=327.178..1101.914 rows=252 loops=1)
                     Join Filter: (t.id = mi_idx.movie_id)
                     ->  Nested Loop  (cost=1009.60..8954.29 rows=1 width=84) (actual time=327.094..1101.449 rows=84 loops=1)
                           ->  Nested Loop  (cost=1009.46..8954.10 rows=1 width=88) (actual time=327.040..1101.200 rows=84 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=1009.02..8930.71 rows=1 width=37) (actual time=326.346..1094.664 rows=53 loops=1)
                                       ->  Nested Loop  (cost=1008.60..8921.93 rows=1 width=41) (actual time=326.183..1093.948 rows=119 loops=1)
                                             Join Filter: (t.id = mc.movie_id)
                                             ->  Nested Loop  (cost=1008.17..8919.75 rows=1 width=33) (actual time=193.883..1092.088 rows=77 loops=1)
                                                   Join Filter: (t.id = ci.movie_id)
                                                   ->  Gather  (cost=1007.61..8886.71 rows=1 width=25) (actual time=151.070..1067.041 rows=49 loops=1)
                                                         Workers Planned: 2
                                                         Workers Launched: 2
                                                         ->  Nested Loop  (cost=7.61..7886.61 rows=1 width=25) (actual time=170.878..745.722 rows=16 loops=3)
                                                               ->  Nested Loop  (cost=7.18..7778.10 rows=98 width=4) (actual time=7.056..354.001 rows=25571 loops=3)
                                                                     ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4562.87 rows=3 width=4) (actual time=0.418..35.595 rows=2 loops=3)
                                                                           Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                           Rows Removed by Filter: 44721
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1068.74 rows=300 width=8) (actual time=4.957..131.975 rows=10959 loops=7)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=12389
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.830..3.831 rows=10959 loops=7)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using title_pkey on title t  (cost=0.43..1.11 rows=1 width=21) (actual time=0.014..0.014 rows=0 loops=76714)
                                                                     Index Cond: (id = mk.movie_id)
                                                                     Filter: ((production_year > 2000) AND (((title)::text ~~ '%Freddy%'::text) OR ((title)::text ~~ '%Jason%'::text) OR ((title)::text ~~ 'Saw%'::text)))
                                                                     Rows Removed by Filter: 1
                                                   ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..33.03 rows=1 width=8) (actual time=0.423..0.629 rows=2 loops=49)
                                                         Index Cond: (movie_id = mk.movie_id)
                                                         Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                                         Rows Removed by Filter: 82
                                             ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.16 rows=1 width=8) (actual time=0.016..0.023 rows=2 loops=77)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((note)::text ~~ '%(Blu-ray)%'::text)
                                                   Rows Removed by Filter: 24
                                       ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..8.14 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=119)
                                             Index Cond: (id = mc.company_id)
                                             Filter: ((name)::text ~~ 'Lionsgate%'::text)
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..23.38 rows=1 width=51) (actual time=0.122..0.122 rows=2 loops=53)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Horror,Thriller}'::text[]))
                                       Rows Removed by Filter: 292
                           ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=84)
                                 Index Cond: (id = mi.info_type_id)
                                 Filter: ((info)::text = 'genres'::text)
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..1.07 rows=3 width=13) (actual time=0.004..0.004 rows=3 loops=84)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=252)
                     Index Cond: (id = mi_idx.info_type_id)
                     Filter: ((info)::text = 'votes'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using name_pkey on name n  (cost=0.43..1.30 rows=1 width=19) (actual time=0.010..0.010 rows=1 loops=84)
               Index Cond: (id = ci.person_id)
               Filter: ((gender)::text = 'm'::text)
 Planning Time: 106.001 ms
 Execution Time: 1110.352 ms
(60 rows)

SET
                                                                                                      QUERY PLAN                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8966.43..8966.44 rows=1 width=128) (actual time=3488.302..3488.303 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.88..8966.42 rows=1 width=80) (actual time=135.752..3485.499 rows=2825 loops=1)
         Join Filter: (mi.movie_id = t.id)
         ->  Nested Loop  (cost=1012.45..8965.31 rows=1 width=83) (actual time=135.690..3465.347 rows=2825 loops=1)
               ->  Nested Loop  (cost=1012.02..8964.01 rows=1 width=72) (actual time=135.623..3438.548 rows=2825 loops=1)
                     ->  Nested Loop  (cost=1011.88..8963.83 rows=1 width=76) (actual time=135.588..3430.132 rows=3007 loops=1)
                           Join Filter: (mi_idx.movie_id = mi.movie_id)
                           ->  Nested Loop  (cost=1011.45..8940.22 rows=1 width=25) (actual time=63.468..3189.682 rows=1471 loops=1)
                                 Join Filter: (mi_idx.movie_id = ci.movie_id)
                                 ->  Gather  (cost=1010.88..8907.19 rows=1 width=17) (actual time=62.811..2070.821 rows=1547 loops=1)
                                       Workers Planned: 2
                                       Workers Launched: 2
                                       ->  Nested Loop  (cost=10.88..7907.09 rows=1 width=17) (actual time=37.547..2301.085 rows=516 loops=3)
                                             ->  Nested Loop  (cost=10.46..7893.34 rows=14 width=21) (actual time=7.469..1295.468 rows=199419 loops=3)
                                                   Join Filter: (mi_idx.movie_id = mc.movie_id)
                                                   ->  Hash Join  (cost=10.03..7888.91 rows=2 width=13) (actual time=7.383..763.687 rows=21234 loops=3)
                                                         Hash Cond: (mi_idx.info_type_id = it2.id)
                                                         ->  Nested Loop  (cost=7.61..7885.67 rows=298 width=17) (actual time=7.147..734.426 rows=63896 loops=3)
                                                               ->  Nested Loop  (cost=7.18..7778.10 rows=98 width=4) (actual time=7.071..403.530 rows=25571 loops=3)
                                                                     ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4562.87 rows=3 width=4) (actual time=0.535..36.254 rows=2 loops=3)
                                                                           Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                           Rows Removed by Filter: 44721
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1068.74 rows=300 width=8) (actual time=4.954..153.100 rows=10959 loops=7)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=12389
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.825..3.825 rows=10959 loops=7)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..1.07 rows=3 width=13) (actual time=0.011..0.011 rows=2 loops=76714)
                                                                     Index Cond: (movie_id = mk.movie_id)
                                                         ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.089..0.089 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.066..0.069 rows=1 loops=3)
                                                                     Filter: ((info)::text = 'votes'::text)
                                                                     Rows Removed by Filter: 112
                                                   ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.15 rows=5 width=8) (actual time=0.014..0.021 rows=9 loops=63701)
                                                         Index Cond: (movie_id = mk.movie_id)
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.98 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=598256)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((name)::text ~~ 'Lionsgate%'::text)
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..33.03 rows=1 width=8) (actual time=0.523..0.725 rows=1 loops=1547)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                       Rows Removed by Filter: 119
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..23.59 rows=1 width=51) (actual time=0.157..0.162 rows=2 loops=1471)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((info)::text = ANY ('{Horror,Action,Sci-Fi,Thriller,Crime,War}'::text[]))
                                 Rows Removed by Filter: 172
                     ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=3007)
                           Index Cond: (id = mi.info_type_id)
                           Filter: ((info)::text = 'genres'::text)
                           Rows Removed by Filter: 0
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.29 rows=1 width=19) (actual time=0.009..0.009 rows=1 loops=2825)
                     Index Cond: (id = ci.person_id)
         ->  Index Scan using title_pkey on title t  (cost=0.43..1.10 rows=1 width=21) (actual time=0.006..0.006 rows=1 loops=2825)
               Index Cond: (id = mk.movie_id)
 Planning Time: 108.135 ms
 Execution Time: 3494.852 ms
(58 rows)

SET
                                                                              QUERY PLAN                                                                               
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3801.48..3801.49 rows=1 width=96) (actual time=31.341..31.342 rows=1 loops=1)
   ->  Nested Loop  (cost=7.90..3801.40 rows=10 width=116) (actual time=31.335..31.335 rows=0 loops=1)
         ->  Nested Loop  (cost=7.47..3759.44 rows=10 width=103) (actual time=31.334..31.334 rows=0 loops=1)
               ->  Nested Loop  (cost=7.04..3754.59 rows=10 width=94) (actual time=31.334..31.334 rows=0 loops=1)
                     Join Filter: (ml.link_type_id = lt.id)
                     ->  Nested Loop  (cost=7.04..3750.90 rows=10 width=16) (actual time=31.333..31.333 rows=0 loops=1)
                           ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=30.621..31.306 rows=1 loops=1)
                                 ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=30.531..31.215 rows=1 loops=1)
                                       Filter: ((keyword)::text = '10,000-mile-club'::text)
                                       Rows Removed by Filter: 134169
                                 ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=0.076..0.076 rows=1 loops=1)
                                       Recheck Cond: (keyword_id = k.id)
                                       Heap Blocks: exact=1
                                       ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.032..0.032 rows=1 loops=1)
                                             Index Cond: (keyword_id = k.id)
                           ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=12) (actual time=0.026..0.026 rows=0 loops=1)
                                 Index Cond: (movie_id = mk.movie_id)
                     ->  Materialize  (cost=0.00..1.27 rows=18 width=86) (never executed)
                           ->  Seq Scan on link_type lt  (cost=0.00..1.18 rows=18 width=86) (never executed)
               ->  Index Scan using title_pkey on title t1  (cost=0.43..0.49 rows=1 width=21) (never executed)
                     Index Cond: (id = mk.movie_id)
         ->  Index Scan using title_pkey on title t2  (cost=0.43..4.20 rows=1 width=21) (never executed)
               Index Cond: (id = ml.linked_movie_id)
 Planning Time: 6.050 ms
 Execution Time: 31.906 ms
(25 rows)

SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3801.48..3801.49 rows=1 width=96) (actual time=504.473..504.473 rows=1 loops=1)
   ->  Nested Loop  (cost=7.90..3801.40 rows=10 width=116) (actual time=11.174..499.561 rows=4388 loops=1)
         ->  Nested Loop  (cost=7.47..3759.44 rows=10 width=103) (actual time=11.092..404.160 rows=4388 loops=1)
               ->  Nested Loop  (cost=7.04..3754.59 rows=10 width=94) (actual time=11.031..376.279 rows=4388 loops=1)
                     Join Filter: (ml.link_type_id = lt.id)
                     Rows Removed by Join Filter: 30206
                     ->  Nested Loop  (cost=7.04..3750.90 rows=10 width=16) (actual time=10.988..366.885 rows=4388 loops=1)
                           ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.720..275.971 rows=41840 loops=1)
                                 ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.913..26.674 rows=1 loops=1)
                                       Filter: ((keyword)::text = 'character-name-in-title'::text)
                                       Rows Removed by Filter: 134169
                                 ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.798..238.618 rows=41840 loops=1)
                                       Recheck Cond: (keyword_id = k.id)
                                       Heap Blocks: exact=11541
                                       ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=8.064..8.064 rows=41840 loops=1)
                                             Index Cond: (keyword_id = k.id)
                           ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=12) (actual time=0.002..0.002 rows=0 loops=41840)
                                 Index Cond: (movie_id = mk.movie_id)
                     ->  Materialize  (cost=0.00..1.27 rows=18 width=86) (actual time=0.000..0.001 rows=8 loops=4388)
                           ->  Seq Scan on link_type lt  (cost=0.00..1.18 rows=18 width=86) (actual time=0.022..0.031 rows=17 loops=1)
               ->  Index Scan using title_pkey on title t1  (cost=0.43..0.49 rows=1 width=21) (actual time=0.005..0.005 rows=1 loops=4388)
                     Index Cond: (id = mk.movie_id)
         ->  Index Scan using title_pkey on title t2  (cost=0.43..4.20 rows=1 width=21) (actual time=0.021..0.021 rows=1 loops=4388)
               Index Cond: (id = ml.linked_movie_id)
 Planning Time: 4.982 ms
 Execution Time: 505.020 ms
(26 rows)

SET
                                                                                                               QUERY PLAN                                                                                                               
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3985.44..3985.45 rows=1 width=192) (actual time=279.900..279.900 rows=1 loops=1)
   ->  Nested Loop  (cost=874.71..3985.43 rows=1 width=82) (actual time=67.589..279.876 rows=8 loops=1)
         Join Filter: ((ml.linked_movie_id = t2.id) AND (kt2.id = t2.kind_id))
         ->  Nested Loop  (cost=874.28..3984.89 rows=1 width=81) (actual time=67.549..279.618 rows=35 loops=1)
               Join Filter: (mi_idx2.info_type_id = it2.id)
               Rows Removed by Join Filter: 16250
               ->  Nested Loop  (cost=874.28..3981.65 rows=55 width=85) (actual time=11.781..272.541 rows=16285 loops=1)
                     ->  Nested Loop  (cost=873.86..3913.92 rows=152 width=70) (actual time=11.618..170.882 rows=39869 loops=1)
                           ->  Nested Loop  (cost=873.43..3824.47 rows=147 width=78) (actual time=11.598..131.183 rows=6175 loops=1)
                                 ->  Nested Loop  (cost=873.01..3759.33 rows=147 width=63) (actual time=11.562..105.382 rows=6175 loops=1)
                                       Join Filter: (ml.linked_movie_id = mc2.movie_id)
                                       ->  Nested Loop  (cost=872.58..3738.66 rows=28 width=55) (actual time=11.505..80.446 rows=1602 loops=1)
                                             Join Filter: (kt1.id = t1.kind_id)
                                             Rows Removed by Join Filter: 1143
                                             ->  Nested Loop  (cost=0.13..13.35 rows=1 width=8) (actual time=0.054..0.062 rows=1 loops=1)
                                                   ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.13..12.26 rows=1 width=4) (actual time=0.043..0.046 rows=1 loops=1)
                                                         Filter: ((kind)::text = 'tv series'::text)
                                                         Rows Removed by Filter: 6
                                                   ->  Seq Scan on kind_type kt1  (cost=0.00..1.09 rows=1 width=4) (actual time=0.009..0.014 rows=1 loops=1)
                                                         Filter: ((kind)::text = 'tv series'::text)
                                                         Rows Removed by Filter: 6
                                             ->  Nested Loop  (cost=872.44..3722.90 rows=193 width=55) (actual time=11.448..79.783 rows=2745 loops=1)
                                                   Join Filter: (ml.movie_id = t1.id)
                                                   ->  Nested Loop  (cost=872.01..3610.10 rows=193 width=30) (actual time=11.423..62.906 rows=2745 loops=1)
                                                         ->  Hash Join  (cost=871.59..3333.95 rows=134 width=17) (actual time=11.366..40.910 rows=2064 loops=1)
                                                               Hash Cond: (mi_idx1.info_type_id = it1.id)
                                                               ->  Merge Join  (cost=869.16..3290.24 rows=15158 width=21) (actual time=11.251..39.357 rows=6192 loops=1)
                                                                     Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43826.36 rows=1380035 width=13) (actual time=0.024..18.536 rows=63901 loops=1)
                                                                     ->  Sort  (cost=868.72..881.22 rows=5000 width=8) (actual time=11.196..11.774 rows=6443 loops=1)
                                                                           Sort Key: ml.movie_id
                                                                           Sort Method: quicksort  Memory: 205kB
                                                                           ->  Hash Join  (cost=1.29..561.53 rows=5000 width=8) (actual time=0.122..10.015 rows=2315 loops=1)
                                                                                 Hash Cond: (ml.link_type_id = lt.id)
                                                                                 ->  Seq Scan on movie_link ml  (cost=0.00..462.97 rows=29997 width=12) (actual time=0.010..5.747 rows=29997 loops=1)
                                                                                 ->  Hash  (cost=1.25..1.25 rows=3 width=4) (actual time=0.053..0.053 rows=2 loops=1)
                                                                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                       ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=3 width=4) (actual time=0.036..0.041 rows=2 loops=1)
                                                                                             Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                             Rows Removed by Filter: 16
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.047..0.047 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.031..0.033 rows=1 loops=1)
                                                                           Filter: ((info)::text = 'rating'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=1 width=13) (actual time=0.009..0.010 rows=1 loops=2064)
                                                               Index Cond: (movie_id = ml.linked_movie_id)
                                                               Filter: ((info)::text < '3.0'::text)
                                                               Rows Removed by Filter: 2
                                                   ->  Index Scan using title_pkey on title t1  (cost=0.43..0.57 rows=1 width=25) (actual time=0.005..0.005 rows=1 loops=2745)
                                                         Index Cond: (id = mi_idx1.movie_id)
                                       ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.68 rows=5 width=8) (actual time=0.010..0.014 rows=4 loops=1602)
                                             Index Cond: (movie_id = mi_idx2.movie_id)
                                 ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.003..0.003 rows=1 loops=6175)
                                       Index Cond: (id = mc2.company_id)
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.003..0.005 rows=6 loops=6175)
                                 Index Cond: (movie_id = t1.id)
                     ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=39869)
                           Index Cond: (id = mc1.company_id)
                           Filter: ((country_code)::text = '[us]'::text)
                           Rows Removed by Filter: 1
               ->  Materialize  (cost=0.00..2.42 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=16285)
                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.021..0.023 rows=1 loops=1)
                           Filter: ((info)::text = 'rating'::text)
                           Rows Removed by Filter: 112
         ->  Index Scan using title_pkey on title t2  (cost=0.43..0.52 rows=1 width=25) (actual time=0.007..0.007 rows=0 loops=35)
               Index Cond: (id = mc2.movie_id)
               Filter: ((production_year >= 2005) AND (production_year <= 2008))
               Rows Removed by Filter: 1
 Planning Time: 110.325 ms
 Execution Time: 280.869 ms
(71 rows)

SET
                                                                                                                  QUERY PLAN                                                                                                                  
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=2780.95..2780.96 rows=1 width=192) (actual time=79.175..79.175 rows=1 loops=1)
   ->  Nested Loop  (cost=340.63..2780.94 rows=1 width=82) (actual time=15.406..79.161 rows=4 loops=1)
         Join Filter: ((t2.id = mi_idx2.movie_id) AND (it2.id = mi_idx2.info_type_id))
         Rows Removed by Join Filter: 4
         ->  Nested Loop  (cost=340.20..2780.42 rows=1 width=93) (actual time=15.372..79.113 rows=4 loops=1)
               ->  Nested Loop  (cost=340.07..2780.25 rows=1 width=97) (actual time=15.348..79.083 rows=4 loops=1)
                     Join Filter: (ml.movie_id = t1.id)
                     ->  Nested Loop  (cost=339.64..2779.72 rows=1 width=88) (actual time=15.329..79.055 rows=4 loops=1)
                           ->  Nested Loop  (cost=339.22..2779.28 rows=1 width=73) (actual time=15.325..79.041 rows=4 loops=1)
                                 ->  Nested Loop  (cost=338.79..2777.83 rows=1 width=65) (actual time=15.317..79.030 rows=1 loops=1)
                                       ->  Nested Loop  (cost=338.66..2777.66 rows=1 width=69) (actual time=4.156..78.992 rows=6 loops=1)
                                             ->  Nested Loop  (cost=338.23..2769.26 rows=2 width=44) (actual time=4.096..74.034 rows=477 loops=1)
                                                   ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..14.12 rows=1 width=4) (actual time=0.036..0.042 rows=1 loops=1)
                                                         Filter: ((info)::text = 'rating'::text)
                                                         Rows Removed by Filter: 112
                                                   ->  Nested Loop  (cost=338.08..2755.12 rows=2 width=40) (actual time=4.057..73.884 rows=477 loops=1)
                                                         ->  Nested Loop  (cost=337.66..2649.97 rows=236 width=25) (actual time=3.926..43.012 rows=9674 loops=1)
                                                               Join Filter: (ml.movie_id = mc1.movie_id)
                                                               ->  Hash Join  (cost=337.23..2620.48 rows=45 width=17) (actual time=3.916..28.273 rows=2064 loops=1)
                                                                     Hash Cond: (mi_idx1.info_type_id = it1.id)
                                                                     ->  Merge Join  (cost=334.81..2604.30 rows=5051 width=21) (actual time=3.811..26.922 rows=6192 loops=1)
                                                                           Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43826.36 rows=1380035 width=13) (actual time=0.030..13.937 rows=63901 loops=1)
                                                                           ->  Sort  (cost=334.38..338.55 rows=1666 width=8) (actual time=3.749..4.275 rows=6443 loops=1)
                                                                                 Sort Key: ml.movie_id
                                                                                 Sort Method: quicksort  Memory: 205kB
                                                                                 ->  Nested Loop  (cost=38.82..245.23 rows=1666 width=8) (actual time=0.209..2.584 rows=2315 loops=1)
                                                                                       ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=4) (actual time=0.023..0.029 rows=2 loops=1)
                                                                                             Filter: ((link)::text ~~ '%follow%'::text)
                                                                                             Rows Removed by Filter: 16
                                                                                       ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..225.26 rows=1875 width=12) (actual time=0.150..1.069 rows=1158 loops=2)
                                                                                             Recheck Cond: (link_type_id = lt.id)
                                                                                             Heap Blocks: exact=191
                                                                                             ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.129..0.129 rows=1158 loops=2)
                                                                                                   Index Cond: (link_type_id = lt.id)
                                                                     ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.034..0.034 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.020..0.023 rows=1 loops=1)
                                                                                 Filter: ((info)::text = 'rating'::text)
                                                                                 Rows Removed by Filter: 112
                                                               ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.59 rows=5 width=8) (actual time=0.004..0.005 rows=5 loops=2064)
                                                                     Index Cond: (movie_id = mi_idx1.movie_id)
                                                         ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=9674)
                                                               Index Cond: (id = mc1.company_id)
                                                               Filter: ((country_code)::text = '[nl]'::text)
                                                               Rows Removed by Filter: 1
                                             ->  Index Scan using title_pkey on title t2  (cost=0.43..4.20 rows=1 width=25) (actual time=0.010..0.010 rows=0 loops=477)
                                                   Index Cond: (id = ml.linked_movie_id)
                                                   Filter: (production_year = 2007)
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=6)
                                             Index Cond: (id = t2.kind_id)
                                             Filter: ((kind)::text = 'tv series'::text)
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..1.39 rows=5 width=8) (actual time=0.006..0.008 rows=4 loops=1)
                                       Index Cond: (movie_id = t2.id)
                           ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.003..0.003 rows=1 loops=4)
                                 Index Cond: (id = mc2.company_id)
                     ->  Index Scan using title_pkey on title t1  (cost=0.43..0.51 rows=1 width=25) (actual time=0.006..0.006 rows=1 loops=4)
                           Index Cond: (id = mc1.movie_id)
               ->  Index Scan using kind_type_pkey on kind_type kt1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=4)
                     Index Cond: (id = t1.kind_id)
                     Filter: ((kind)::text = 'tv series'::text)
         ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..0.51 rows=1 width=13) (actual time=0.010..0.011 rows=2 loops=4)
               Index Cond: (movie_id = mc2.movie_id)
               Filter: ((info)::text < '3.0'::text)
               Rows Removed by Filter: 1
 Planning Time: 110.610 ms
 Execution Time: 80.260 ms
(69 rows)

SET
                                                                                                                  QUERY PLAN                                                                                                                  
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4007.21..4007.22 rows=1 width=192) (actual time=82.688..82.689 rows=1 loops=1)
   ->  Nested Loop  (cost=874.85..4007.20 rows=1 width=82) (actual time=19.986..82.542 rows=114 loops=1)
         ->  Nested Loop  (cost=874.43..4006.75 rows=1 width=67) (actual time=19.961..81.928 rows=131 loops=1)
               ->  Nested Loop  (cost=874.30..4006.58 rows=1 width=71) (actual time=19.936..81.663 rows=131 loops=1)
                     Join Filter: (ml.movie_id = t1.id)
                     ->  Nested Loop  (cost=873.87..4006.06 rows=1 width=62) (actual time=19.897..81.182 rows=131 loops=1)
                           ->  Nested Loop  (cost=873.45..4005.62 rows=1 width=47) (actual time=19.856..80.531 rows=131 loops=1)
                                 ->  Nested Loop  (cost=873.02..4004.95 rows=1 width=55) (actual time=19.837..80.115 rows=51 loops=1)
                                       Join Filter: (it2.id = mi_idx2.info_type_id)
                                       Rows Removed by Join Filter: 4467
                                       ->  Nested Loop  (cost=872.59..3959.22 rows=82 width=50) (actual time=11.347..67.676 rows=3300 loops=1)
                                             Join Filter: (t2.kind_id = kt2.id)
                                             Rows Removed by Join Filter: 4017
                                             ->  Nested Loop  (cost=872.59..3949.90 rows=288 width=54) (actual time=10.517..65.260 rows=4087 loops=1)
                                                   ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..14.12 rows=1 width=4) (actual time=0.035..0.041 rows=1 loops=1)
                                                         Filter: ((info)::text = 'rating'::text)
                                                         Rows Removed by Filter: 112
                                                   ->  Nested Loop  (cost=872.45..3932.90 rows=288 width=50) (actual time=10.479..64.424 rows=4087 loops=1)
                                                         Join Filter: (ml.movie_id = mc1.movie_id)
                                                         ->  Nested Loop  (cost=872.02..3896.86 rows=55 width=42) (actual time=10.469..57.698 rows=851 loops=1)
                                                               ->  Hash Join  (cost=871.59..3333.95 rows=134 width=17) (actual time=10.381..34.841 rows=2064 loops=1)
                                                                     Hash Cond: (mi_idx1.info_type_id = it1.id)
                                                                     ->  Merge Join  (cost=869.16..3290.24 rows=15158 width=21) (actual time=10.267..33.388 rows=6192 loops=1)
                                                                           Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43826.36 rows=1380035 width=13) (actual time=0.023..13.850 rows=63901 loops=1)
                                                                           ->  Sort  (cost=868.72..881.22 rows=5000 width=8) (actual time=10.213..10.773 rows=6443 loops=1)
                                                                                 Sort Key: ml.movie_id
                                                                                 Sort Method: quicksort  Memory: 205kB
                                                                                 ->  Hash Join  (cost=1.29..561.53 rows=5000 width=8) (actual time=0.118..9.063 rows=2315 loops=1)
                                                                                       Hash Cond: (ml.link_type_id = lt.id)
                                                                                       ->  Seq Scan on movie_link ml  (cost=0.00..462.97 rows=29997 width=12) (actual time=0.011..4.861 rows=29997 loops=1)
                                                                                       ->  Hash  (cost=1.25..1.25 rows=3 width=4) (actual time=0.058..0.059 rows=2 loops=1)
                                                                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                             ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=3 width=4) (actual time=0.035..0.040 rows=2 loops=1)
                                                                                                   Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                                   Rows Removed by Filter: 16
                                                                     ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.035..0.035 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.021..0.023 rows=1 loops=1)
                                                                                 Filter: ((info)::text = 'rating'::text)
                                                                                 Rows Removed by Filter: 112
                                                               ->  Index Scan using title_pkey on title t2  (cost=0.43..4.20 rows=1 width=25) (actual time=0.010..0.010 rows=0 loops=2064)
                                                                     Index Cond: (id = ml.linked_movie_id)
                                                                     Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                                                     Rows Removed by Filter: 1
                                                         ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.59 rows=5 width=8) (actual time=0.004..0.006 rows=5 loops=851)
                                                               Index Cond: (movie_id = mi_idx1.movie_id)
                                             ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=2 loops=4087)
                                                   ->  Seq Scan on kind_type kt2  (cost=0.00..1.09 rows=2 width=4) (actual time=0.011..0.013 rows=2 loops=1)
                                                         Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                                                         Rows Removed by Filter: 5
                                       ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..0.53 rows=2 width=13) (actual time=0.003..0.003 rows=1 loops=3300)
                                             Index Cond: (movie_id = t2.id)
                                             Filter: ((info)::text < '3.5'::text)
                                             Rows Removed by Filter: 2
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.62 rows=5 width=8) (actual time=0.005..0.007 rows=3 loops=51)
                                       Index Cond: (movie_id = t2.id)
                           ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.004..0.004 rows=1 loops=131)
                                 Index Cond: (id = mc2.company_id)
                     ->  Index Scan using title_pkey on title t1  (cost=0.43..0.51 rows=1 width=25) (actual time=0.003..0.003 rows=1 loops=131)
                           Index Cond: (id = mc1.movie_id)
               ->  Index Scan using kind_type_pkey on kind_type kt1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=131)
                     Index Cond: (id = t1.kind_id)
                     Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
         ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.004..0.004 rows=1 loops=131)
               Index Cond: (id = mc1.company_id)
               Filter: ((country_code)::text <> '[us]'::text)
               Rows Removed by Filter: 0
 Planning Time: 108.170 ms
 Execution Time: 83.647 ms
(70 rows)

SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16631.00..16631.01 rows=1 width=32) (actual time=638.094..638.094 rows=1 loops=1)
   ->  Nested Loop  (cost=7.62..16630.82 rows=72 width=17) (actual time=14.401..637.837 rows=206 loops=1)
         Join Filter: (t.id = mi.movie_id)
         ->  Nested Loop  (cost=7.19..16315.45 rows=177 width=25) (actual time=9.817..378.093 rows=2235 loops=1)
               ->  Nested Loop  (cost=6.76..16101.73 rows=438 width=4) (actual time=5.680..174.414 rows=12951 loops=1)
                     ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=1.852..39.640 rows=30 loops=1)
                           Filter: ((keyword)::text ~~ '%sequel%'::text)
                           Rows Removed by Filter: 134140
                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1033.58 rows=300 width=8) (actual time=0.171..4.301 rows=432 loops=30)
                           Recheck Cond: (keyword_id = k.id)
                           Heap Blocks: exact=6979
                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.130..0.130 rows=432 loops=30)
                                 Index Cond: (keyword_id = k.id)
               ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.015..0.015 rows=0 loops=12951)
                     Index Cond: (id = mk.movie_id)
                     Filter: (production_year > 2005)
                     Rows Removed by Filter: 1
         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.77 rows=1 width=4) (actual time=0.109..0.115 rows=0 loops=2235)
               Index Cond: (movie_id = mk.movie_id)
               Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German}'::text[]))
               Rows Removed by Filter: 45
 Planning Time: 3.982 ms
 Execution Time: 638.414 ms
(23 rows)

SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16416.66..16416.67 rows=1 width=32) (actual time=399.936..399.936 rows=1 loops=1)
   ->  Nested Loop  (cost=7.62..16416.66 rows=1 width=17) (actual time=24.434..399.891 rows=5 loops=1)
         Join Filter: (t.id = mi.movie_id)
         ->  Nested Loop  (cost=7.19..16315.45 rows=69 width=25) (actual time=10.528..345.376 rows=405 loops=1)
               ->  Nested Loop  (cost=6.76..16101.73 rows=438 width=4) (actual time=6.025..161.374 rows=12951 loops=1)
                     ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=2.241..39.140 rows=30 loops=1)
                           Filter: ((keyword)::text ~~ '%sequel%'::text)
                           Rows Removed by Filter: 134140
                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1033.58 rows=300 width=8) (actual time=0.165..3.891 rows=432 loops=30)
                           Recheck Cond: (keyword_id = k.id)
                           Heap Blocks: exact=6979
                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.126..0.126 rows=432 loops=30)
                                 Index Cond: (keyword_id = k.id)
               ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.013..0.013 rows=0 loops=12951)
                     Index Cond: (id = mk.movie_id)
                     Filter: (production_year > 2010)
                     Rows Removed by Filter: 1
         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.45 rows=1 width=4) (actual time=0.133..0.134 rows=0 loops=405)
               Index Cond: (movie_id = mk.movie_id)
               Filter: ((info)::text = 'Bulgaria'::text)
               Rows Removed by Filter: 63
 Planning Time: 4.217 ms
 Execution Time: 400.280 ms
(23 rows)

SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16894.26..16894.27 rows=1 width=32) (actual time=1059.353..1059.353 rows=1 loops=1)
   ->  Nested Loop  (cost=7.62..16892.82 rows=578 width=17) (actual time=6.782..1053.982 rows=7250 loops=1)
         Join Filter: (t.id = mi.movie_id)
         ->  Nested Loop  (cost=7.19..16315.45 rows=304 width=25) (actual time=6.111..363.764 rows=7874 loops=1)
               ->  Nested Loop  (cost=6.76..16101.73 rows=438 width=4) (actual time=6.057..168.364 rows=12951 loops=1)
                     ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=2.244..39.093 rows=30 loops=1)
                           Filter: ((keyword)::text ~~ '%sequel%'::text)
                           Rows Removed by Filter: 134140
                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1033.58 rows=300 width=8) (actual time=0.170..4.117 rows=432 loops=30)
                           Recheck Cond: (keyword_id = k.id)
                           Heap Blocks: exact=6979
                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.127..0.127 rows=432 loops=30)
                                 Index Cond: (keyword_id = k.id)
               ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.014..0.014 rows=1 loops=12951)
                     Index Cond: (id = mk.movie_id)
                     Filter: (production_year > 1990)
                     Rows Removed by Filter: 0
         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=4) (actual time=0.075..0.086 rows=1 loops=7874)
               Index Cond: (movie_id = mk.movie_id)
               Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,USA,American}'::text[]))
               Rows Removed by Filter: 35
 Planning Time: 4.518 ms
 Execution Time: 1059.673 ms
(23 rows)

SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16334.91..16334.92 rows=1 width=64) (actual time=420.265..420.265 rows=1 loops=1)
   ->  Nested Loop  (cost=7.62..16334.90 rows=2 width=22) (actual time=11.847..419.430 rows=740 loops=1)
         Join Filter: (mi_idx.movie_id = t.id)
         ->  Nested Loop  (cost=7.19..16332.90 rows=4 width=13) (actual time=6.084..313.150 rows=5820 loops=1)
               Join Filter: (mi_idx.info_type_id = it.id)
               Rows Removed by Join Filter: 2643
               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.031..0.035 rows=1 loops=1)
                     Filter: ((info)::text = 'rating'::text)
                     Rows Removed by Filter: 112
               ->  Nested Loop  (cost=7.19..16324.17 rows=505 width=17) (actual time=6.050..310.732 rows=8463 loops=1)
                     ->  Nested Loop  (cost=6.76..16101.73 rows=438 width=4) (actual time=5.998..168.351 rows=12951 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=2.234..39.467 rows=30 loops=1)
                                 Filter: ((keyword)::text ~~ '%sequel%'::text)
                                 Rows Removed by Filter: 134140
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1033.58 rows=300 width=8) (actual time=0.165..4.135 rows=432 loops=30)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=6979
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.126..0.126 rows=432 loops=30)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=13) (actual time=0.010..0.010 rows=1 loops=12951)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((info)::text > '5.0'::text)
                           Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.018..0.018 rows=0 loops=5820)
               Index Cond: (id = mk.movie_id)
               Filter: (production_year > 2005)
               Rows Removed by Filter: 1
 Planning Time: 5.057 ms
 Execution Time: 420.655 ms
(29 rows)

SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16327.16..16327.17 rows=1 width=64) (actual time=206.787..206.787 rows=1 loops=1)
   ->  Nested Loop  (cost=7.62..16327.16 rows=1 width=22) (actual time=36.207..206.759 rows=6 loops=1)
         Join Filter: (mi_idx.movie_id = t.id)
         ->  Nested Loop  (cost=7.19..16326.66 rows=1 width=13) (actual time=31.503..206.334 rows=21 loops=1)
               Join Filter: (mi_idx.info_type_id = it.id)
               Rows Removed by Join Filter: 285
               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.026..0.030 rows=1 loops=1)
                     Filter: ((info)::text = 'rating'::text)
                     Rows Removed by Filter: 112
               ->  Nested Loop  (cost=7.19..16324.17 rows=6 width=17) (actual time=7.045..206.234 rows=306 loops=1)
                     ->  Nested Loop  (cost=6.76..16101.73 rows=438 width=4) (actual time=6.116..112.308 rows=12951 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=2.296..29.959 rows=30 loops=1)
                                 Filter: ((keyword)::text ~~ '%sequel%'::text)
                                 Rows Removed by Filter: 134140
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1033.58 rows=300 width=8) (actual time=0.151..2.619 rows=432 loops=30)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=6979
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.116..0.116 rows=432 loops=30)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=13) (actual time=0.007..0.007 rows=0 loops=12951)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((info)::text > '9.0'::text)
                           Rows Removed by Filter: 2
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.019..0.019 rows=0 loops=21)
               Index Cond: (id = mk.movie_id)
               Filter: (production_year > 2010)
               Rows Removed by Filter: 1
 Planning Time: 4.522 ms
 Execution Time: 207.181 ms
(29 rows)

SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16344.82..16344.83 rows=1 width=64) (actual time=312.919..312.919 rows=1 loops=1)
   ->  Nested Loop  (cost=7.62..16344.79 rows=5 width=22) (actual time=5.257..308.549 rows=4700 loops=1)
         Join Filter: (mi_idx.movie_id = t.id)
         ->  Nested Loop  (cost=7.19..16341.29 rows=7 width=13) (actual time=5.182..195.982 rows=8092 loops=1)
               Join Filter: (mi_idx.info_type_id = it.id)
               Rows Removed by Join Filter: 6865
               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.034..0.038 rows=1 loops=1)
                     Filter: ((info)::text = 'rating'::text)
                     Rows Removed by Filter: 112
               ->  Nested Loop  (cost=7.19..16328.55 rows=826 width=17) (actual time=5.145..192.650 rows=14957 loops=1)
                     ->  Nested Loop  (cost=6.76..16101.73 rows=438 width=4) (actual time=5.109..98.172 rows=12951 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=1.729..38.576 rows=30 loops=1)
                                 Filter: ((keyword)::text ~~ '%sequel%'::text)
                                 Rows Removed by Filter: 134140
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1033.58 rows=300 width=8) (actual time=0.150..1.855 rows=432 loops=30)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=6979
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.113..0.113 rows=432 loops=30)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=2 width=13) (actual time=0.006..0.006 rows=1 loops=12951)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((info)::text > '2.0'::text)
                           Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.013..0.013 rows=1 loops=8092)
               Index Cond: (id = mk.movie_id)
               Filter: (production_year > 1990)
               Rows Removed by Filter: 0
 Planning Time: 3.875 ms
 Execution Time: 313.305 ms
(29 rows)

SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=39503.41..39503.42 rows=1 width=32) (actual time=267.010..267.010 rows=1 loops=1)
   ->  Gather  (cost=39503.19..39503.40 rows=2 width=32) (actual time=266.904..268.276 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=38503.19..38503.20 rows=1 width=32) (actual time=259.868..259.869 rows=1 loops=3)
               ->  Hash Join  (cost=5.47..38503.07 rows=48 width=17) (actual time=259.865..259.865 rows=0 loops=3)
                     Hash Cond: (mi.info_type_id = it.id)
                     ->  Nested Loop  (cost=1.93..38499.40 rows=48 width=21) (actual time=259.864..259.864 rows=0 loops=3)
                           ->  Nested Loop  (cost=1.49..38104.61 rows=165 width=25) (actual time=259.864..259.864 rows=0 loops=3)
                                 ->  Hash Join  (cost=1.06..35106.92 rows=407 width=4) (actual time=259.863..259.864 rows=0 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..35097.06 rows=1629 width=8) (actual time=6.072..258.010 rows=8008 loops=3)
                                             Filter: (((note)::text ~~ '%(theatrical)%'::text) AND ((note)::text ~~ '%(France)%'::text))
                                             Rows Removed by Filter: 861701
                                       ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.069..0.069 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.038..0.039 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..7.37 rows=1 width=21) (never executed)
                                       Index Cond: (id = mc.movie_id)
                                       Filter: (production_year > 2005)
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.38 rows=1 width=8) (never executed)
                                 Index Cond: (movie_id = t.id)
                                 Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German}'::text[]))
                     ->  Hash  (cost=2.13..2.13 rows=113 width=4) (never executed)
                           ->  Seq Scan on info_type it  (cost=0.00..2.13 rows=113 width=4) (never executed)
 Planning Time: 5.096 ms
 Execution Time: 268.701 ms
(29 rows)

SET
                                                                               QUERY PLAN                                                                               
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=38870.49..38870.50 rows=1 width=32) (actual time=251.277..251.278 rows=1 loops=1)
   ->  Gather  (cost=38870.28..38870.49 rows=2 width=32) (actual time=251.175..252.452 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=37870.28..37870.29 rows=1 width=32) (actual time=244.491..244.491 rows=1 loops=3)
               ->  Nested Loop  (cost=2.07..37870.28 rows=1 width=17) (actual time=244.489..244.489 rows=0 loops=3)
                     ->  Nested Loop  (cost=1.93..37870.12 rows=1 width=21) (actual time=244.488..244.488 rows=0 loops=3)
                           ->  Nested Loop  (cost=1.49..37866.79 rows=1 width=25) (actual time=244.488..244.488 rows=0 loops=3)
                                 ->  Hash Join  (cost=1.06..37816.09 rows=6 width=4) (actual time=244.487..244.488 rows=0 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..37814.90 rows=25 width=8) (actual time=2.883..244.080 rows=473 loops=3)
                                             Filter: (((note)::text ~~ '%(VHS)%'::text) AND ((note)::text ~~ '%(USA)%'::text) AND ((note)::text ~~ '%(1994)%'::text))
                                             Rows Removed by Filter: 869237
                                       ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.058..0.058 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.037..0.039 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..8.45 rows=1 width=21) (never executed)
                                       Index Cond: (id = mc.movie_id)
                                       Filter: (production_year > 2010)
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..3.31 rows=1 width=8) (never executed)
                                 Index Cond: (movie_id = t.id)
                                 Filter: ((info)::text = ANY ('{USA,America}'::text[]))
                     ->  Index Only Scan using info_type_pkey on info_type it  (cost=0.14..0.16 rows=1 width=4) (never executed)
                           Index Cond: (id = mi.info_type_id)
                           Heap Fetches: 0
 Planning Time: 4.248 ms
 Execution Time: 252.922 ms
(29 rows)

SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=91609.00..91609.01 rows=1 width=32) (actual time=367.476..367.476 rows=1 loops=1)
   ->  Gather  (cost=91608.78..91608.99 rows=2 width=32) (actual time=367.288..372.065 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=90608.78..90608.79 rows=1 width=32) (actual time=360.661..360.661 rows=1 loops=3)
               ->  Hash Join  (cost=5.47..90564.24 rows=17818 width=17) (actual time=213.376..360.407 rows=223 loops=3)
                     Hash Cond: (mi.info_type_id = it.id)
                     ->  Nested Loop  (cost=1.93..90512.17 rows=17818 width=21) (actual time=213.234..360.032 rows=223 loops=3)
                           ->  Nested Loop  (cost=1.49..61913.67 rows=13136 width=25) (actual time=213.055..311.249 rows=256 loops=3)
                                 ->  Hash Join  (cost=1.06..35507.44 rows=18928 width=4) (actual time=212.919..300.309 rows=266 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..35097.06 rows=75712 width=8) (actual time=0.050..289.913 rows=98543 loops=3)
                                             Filter: (((note)::text !~~ '%(TV)%'::text) AND ((note)::text ~~ '%(USA)%'::text))
                                             Rows Removed by Filter: 771167
                                       ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.064..0.064 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.035..0.037 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..1.40 rows=1 width=21) (actual time=0.040..0.040 rows=1 loops=798)
                                       Index Cond: (id = mc.movie_id)
                                       Filter: (production_year > 1990)
                                       Rows Removed by Filter: 0
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.16 rows=2 width=8) (actual time=0.168..0.189 rows=1 loops=767)
                                 Index Cond: (movie_id = t.id)
                                 Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,USA,American}'::text[]))
                                 Rows Removed by Filter: 10
                     ->  Hash  (cost=2.13..2.13 rows=113 width=4) (actual time=0.081..0.081 rows=113 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 12kB
                           ->  Seq Scan on info_type it  (cost=0.00..2.13 rows=113 width=4) (actual time=0.026..0.041 rows=113 loops=3)
 Planning Time: 4.169 ms
 Execution Time: 372.535 ms
(32 rows)

SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3852.63..3852.64 rows=1 width=96) (actual time=87.756..87.757 rows=1 loops=1)
   ->  Nested Loop  (cost=8.18..3852.62 rows=1 width=48) (actual time=11.442..87.705 rows=6 loops=1)
         ->  Nested Loop  (cost=7.75..3762.97 rows=196 width=37) (actual time=0.869..51.069 rows=1224 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.19..3753.04 rows=5 width=41) (actual time=0.805..32.215 rows=11 loops=1)
                     ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=20) (actual time=0.744..31.582 rows=14 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=20) (actual time=0.662..31.221 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'marvel-cinematic-universe'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=0.074..0.343 rows=14 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=12
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.041..0.041 rows=14 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.044..0.044 rows=1 loops=14)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2010)
                           Rows Removed by Filter: 0
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.043..1.628 rows=111 loops=11)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.029..0.029 rows=0 loops=1224)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ '%Downey%Robert%'::text)
               Rows Removed by Filter: 1
 Planning Time: 4.616 ms
 Execution Time: 88.164 ms
(26 rows)

SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=12284.35..12284.36 rows=1 width=96) (actual time=932.386..932.386 rows=1 loops=1)
   ->  Nested Loop  (cost=8.18..12284.35 rows=1 width=48) (actual time=82.721..932.327 rows=12 loops=1)
         ->  Nested Loop  (cost=7.75..12283.89 rows=1 width=37) (actual time=24.562..925.893 rows=383 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.19..12281.90 rows=1 width=41) (actual time=24.544..922.106 rows=36 loops=1)
                     ->  Nested Loop  (cost=6.76..12150.15 rows=270 width=20) (actual time=1.101..429.750 rows=35548 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..3632.40 rows=8 width=20) (actual time=0.145..49.779 rows=8 loops=1)
                                 Filter: ((keyword)::text = ANY ('{superhero,sequel,second-part,marvel-comics,based-on-comic,tv-special,fight,violence}'::text[]))
                                 Rows Removed by Filter: 134162
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1061.72 rows=300 width=8) (actual time=1.787..45.145 rows=4444 loops=8)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=23488
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=1.360..1.360 rows=4444 loops=8)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.013..0.013 rows=0 loops=35548)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2014)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.030..0.098 rows=11 loops=36)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.016..0.016 rows=0 loops=383)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ '%Downey%Robert%'::text)
               Rows Removed by Filter: 1
 Planning Time: 4.345 ms
 Execution Time: 932.770 ms
(26 rows)

SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3755.49..3755.50 rows=1 width=96) (actual time=21.127..21.127 rows=1 loops=1)
   ->  Nested Loop  (cost=8.18..3755.48 rows=1 width=48) (actual time=1.907..21.116 rows=2 loops=1)
         ->  Nested Loop  (cost=7.75..3755.03 rows=1 width=37) (actual time=0.985..20.542 rows=33 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.19..3753.04 rows=1 width=41) (actual time=0.933..20.211 rows=2 loops=1)
                     ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=20) (actual time=0.816..19.602 rows=14 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=20) (actual time=0.764..19.379 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'marvel-cinematic-universe'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=0.044..0.206 rows=14 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=12
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.035..0.035 rows=14 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.042..0.042 rows=0 loops=14)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2014)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.047..0.153 rows=16 loops=2)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.016..0.016 rows=0 loops=33)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ '%Downey%Robert%'::text)
               Rows Removed by Filter: 1
 Planning Time: 5.480 ms
 Execution Time: 21.594 ms
(26 rows)

SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=15065.52..15065.53 rows=1 width=96) (actual time=24054.764..24054.765 rows=1 loops=1)
   ->  Nested Loop  (cost=8.18..15065.51 rows=1 width=48) (actual time=568.219..24054.188 rows=88 loops=1)
         ->  Nested Loop  (cost=7.75..12575.89 rows=5443 width=37) (actual time=1.148..9726.814 rows=785477 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.19..12281.90 rows=148 width=41) (actual time=1.101..1139.389 rows=14165 loops=1)
                     ->  Nested Loop  (cost=6.76..12150.15 rows=270 width=20) (actual time=1.058..492.171 rows=35548 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..3632.40 rows=8 width=20) (actual time=0.167..48.810 rows=8 loops=1)
                                 Filter: ((keyword)::text = ANY ('{superhero,sequel,second-part,marvel-comics,based-on-comic,tv-special,fight,violence}'::text[]))
                                 Rows Removed by Filter: 134162
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1061.72 rows=300 width=8) (actual time=1.793..52.842 rows=4444 loops=8)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=23488
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=1.367..1.367 rows=4444 loops=8)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.017..0.017 rows=0 loops=35548)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2000)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.023..0.565 rows=55 loops=14165)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.017..0.017 rows=0 loops=785477)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ '%Downey%Robert%'::text)
               Rows Removed by Filter: 1
 Planning Time: 4.466 ms
 Execution Time: 24055.149 ms
(26 rows)

SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4102.27..4102.28 rows=1 width=96) (actual time=53.848..53.848 rows=1 loops=1)
   ->  Nested Loop  (cost=8.18..4102.27 rows=1 width=48) (actual time=10.152..53.820 rows=6 loops=1)
         ->  Nested Loop  (cost=7.75..3790.78 rows=681 width=37) (actual time=0.984..29.826 rows=1224 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.19..3753.04 rows=19 width=41) (actual time=0.911..18.488 rows=11 loops=1)
                     ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=20) (actual time=0.846..17.991 rows=14 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=20) (actual time=0.775..17.709 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'marvel-cinematic-universe'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=0.063..0.266 rows=14 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=12
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.041..0.041 rows=14 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.034..0.034 rows=1 loops=14)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2000)
                           Rows Removed by Filter: 0
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.036..0.961 rows=111 loops=11)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.019..0.019 rows=0 loops=1224)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ '%Downey%Robert%'::text)
               Rows Removed by Filter: 1
 Planning Time: 5.466 ms
 Execution Time: 54.305 ms
(26 rows)

SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=15092.73..15092.74 rows=1 width=96) (actual time=24432.568..24432.569 rows=1 loops=1)
   ->  Nested Loop  (cost=8.18..15051.90 rows=5443 width=48) (actual time=1.193..23581.641 rows=785477 loops=1)
         ->  Nested Loop  (cost=7.75..12575.89 rows=5443 width=37) (actual time=1.128..9868.530 rows=785477 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.19..12281.90 rows=148 width=41) (actual time=1.083..1144.467 rows=14165 loops=1)
                     ->  Nested Loop  (cost=6.76..12150.15 rows=270 width=20) (actual time=1.040..495.446 rows=35548 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..3632.40 rows=8 width=20) (actual time=0.152..51.449 rows=8 loops=1)
                                 Filter: ((keyword)::text = ANY ('{superhero,sequel,second-part,marvel-comics,based-on-comic,tv-special,fight,violence}'::text[]))
                                 Rows Removed by Filter: 134162
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1061.72 rows=300 width=8) (actual time=1.778..53.012 rows=4444 loops=8)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=23488
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=1.360..1.360 rows=4444 loops=8)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.017..0.017 rows=0 loops=35548)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2000)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.023..0.577 rows=55 loops=14165)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=19) (actual time=0.016..0.016 rows=1 loops=785477)
               Index Cond: (id = ci.person_id)
 Planning Time: 4.595 ms
 Execution Time: 24432.954 ms
(24 rows)

SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=13380.61..13380.62 rows=1 width=64) (actual time=3173.136..3173.137 rows=1 loops=1)
   ->  Nested Loop  (cost=41.24..13380.61 rows=1 width=32) (actual time=148.505..3173.065 rows=32 loops=1)
         ->  Nested Loop  (cost=41.10..13379.60 rows=1 width=36) (actual time=148.440..3172.838 rows=32 loops=1)
               Join Filter: (n.id = an.person_id)
               ->  Nested Loop  (cost=40.67..13379.10 rows=1 width=48) (actual time=148.373..3172.253 rows=14 loops=1)
                     Join Filter: (n.id = pi.person_id)
                     ->  Nested Loop  (cost=40.24..12435.27 rows=974 width=40) (actual time=0.814..2813.454 rows=17559 loops=1)
                           ->  Nested Loop  (cost=39.81..8528.28 rows=8359 width=21) (actual time=0.752..1075.592 rows=105262 loops=1)
                                 ->  Nested Loop  (cost=39.25..7243.89 rows=226 width=25) (actual time=0.673..120.265 rows=1467 loops=1)
                                       ->  Nested Loop  (cost=38.82..245.23 rows=1666 width=4) (actual time=0.588..6.973 rows=5186 loops=1)
                                             ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=4) (actual time=0.032..0.038 rows=1 loops=1)
                                                   Filter: ((link)::text = 'features'::text)
                                                   Rows Removed by Filter: 17
                                             ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..225.26 rows=1875 width=8) (actual time=0.548..4.771 rows=5186 loops=1)
                                                   Recheck Cond: (link_type_id = lt.id)
                                                   Heap Blocks: exact=132
                                                   ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.504..0.504 rows=5186 loops=1)
                                                         Index Cond: (link_type_id = lt.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..4.20 rows=1 width=21) (actual time=0.021..0.021 rows=0 loops=5186)
                                             Index Cond: (id = ml.linked_movie_id)
                                             Filter: ((production_year >= 1980) AND (production_year <= 1995))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..5.31 rows=37 width=8) (actual time=0.028..0.617 rows=72 loops=1467)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Scan using name_pkey on name n  (cost=0.43..0.47 rows=1 width=19) (actual time=0.016..0.016 rows=0 loops=105262)
                                 Index Cond: (id = ci.person_id)
                                 Filter: (((name_pcode_cf)::text >= 'A'::text) AND ((name_pcode_cf)::text <= 'F'::text) AND (((gender)::text = 'm'::text) OR (((gender)::text = 'f'::text) AND ((name)::text ~~ 'B%'::text))))
                                 Rows Removed by Filter: 1
                     ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..0.96 rows=1 width=8) (actual time=0.020..0.020 rows=0 loops=17559)
                           Index Cond: (person_id = ci.person_id)
                           Filter: ((note)::text = 'Volker Boehm'::text)
                           Rows Removed by Filter: 20
               ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.47 rows=2 width=4) (actual time=0.030..0.038 rows=2 loops=14)
                     Index Cond: (person_id = ci.person_id)
                     Filter: ((name)::text ~~ '%a%'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using info_type_pkey on info_type it  (cost=0.14..0.58 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=32)
               Index Cond: (id = pi.info_type_id)
               Filter: ((info)::text = 'mini biography'::text)
 Planning Time: 15.055 ms
 Execution Time: 3173.731 ms
(41 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=9090.16..9090.17 rows=1 width=64) (actual time=800.375..800.375 rows=1 loops=1)
   ->  Nested Loop  (cost=41.24..9090.16 rows=1 width=32) (actual time=30.802..800.320 rows=16 loops=1)
         ->  Nested Loop  (cost=41.10..9089.15 rows=1 width=36) (actual time=30.747..800.196 rows=16 loops=1)
               Join Filter: (n.id = an.person_id)
               ->  Nested Loop  (cost=40.67..9088.65 rows=1 width=48) (actual time=30.699..800.009 rows=8 loops=1)
                     Join Filter: (n.id = pi.person_id)
                     ->  Nested Loop  (cost=40.24..9045.05 rows=45 width=40) (actual time=1.250..781.917 rows=1076 loops=1)
                           ->  Nested Loop  (cost=39.81..8143.65 rows=1960 width=21) (actual time=0.738..340.768 rows=33415 loops=1)
                                 ->  Nested Loop  (cost=39.25..7243.89 rows=53 width=25) (actual time=0.652..105.026 rows=435 loops=1)
                                       ->  Nested Loop  (cost=38.82..245.23 rows=1666 width=4) (actual time=0.583..6.319 rows=5186 loops=1)
                                             ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=4) (actual time=0.029..0.036 rows=1 loops=1)
                                                   Filter: ((link)::text = 'features'::text)
                                                   Rows Removed by Filter: 17
                                             ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..225.26 rows=1875 width=8) (actual time=0.546..4.411 rows=5186 loops=1)
                                                   Recheck Cond: (link_type_id = lt.id)
                                                   Heap Blocks: exact=132
                                                   ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.502..0.503 rows=5186 loops=1)
                                                         Index Cond: (link_type_id = lt.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..4.20 rows=1 width=21) (actual time=0.018..0.018 rows=0 loops=5186)
                                             Index Cond: (id = ml.linked_movie_id)
                                             Filter: ((production_year >= 1980) AND (production_year <= 1984))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..16.61 rows=37 width=8) (actual time=0.027..0.511 rows=77 loops=435)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.012..0.012 rows=0 loops=33415)
                                 Index Cond: (id = ci.person_id)
                                 Filter: (((name_pcode_cf)::text ~~ 'D%'::text) AND ((gender)::text = 'm'::text))
                                 Rows Removed by Filter: 1
                     ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..0.96 rows=1 width=8) (actual time=0.016..0.016 rows=0 loops=1076)
                           Index Cond: (person_id = ci.person_id)
                           Filter: ((note)::text = 'Volker Boehm'::text)
                           Rows Removed by Filter: 16
               ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.47 rows=2 width=4) (actual time=0.017..0.021 rows=2 loops=8)
                     Index Cond: (person_id = ci.person_id)
                     Filter: ((name)::text ~~ '%a%'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using info_type_pkey on info_type it  (cost=0.14..0.58 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=16)
               Index Cond: (id = pi.info_type_id)
               Filter: ((info)::text = 'mini biography'::text)
 Planning Time: 15.068 ms
 Execution Time: 800.969 ms
(41 rows)

SET
                                                                                                             QUERY PLAN                                                                                                              
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=57980.82..57980.83 rows=1 width=64) (actual time=6459.960..6459.960 rows=1 loops=1)
   ->  Nested Loop  (cost=2495.17..57980.79 rows=6 width=109) (actual time=27.584..6065.358 rows=68185 loops=1)
         ->  Hash Join  (cost=2494.74..57976.67 rows=9 width=117) (actual time=27.498..5601.071 rows=109842 loops=1)
               Hash Cond: (ml.link_type_id = lt.id)
               ->  Nested Loop  (cost=2493.42..57975.22 rows=42 width=121) (actual time=27.378..5555.529 rows=127027 loops=1)
                     ->  Nested Loop  (cost=2493.13..57509.04 rows=1361 width=113) (actual time=27.283..3027.123 rows=1618304 loops=1)
                           ->  Nested Loop  (cost=2492.57..57244.88 rows=15 width=121) (actual time=27.216..2058.235 rows=12595 loops=1)
                                 ->  Nested Loop  (cost=2492.14..56116.79 rows=1360 width=102) (actual time=26.944..1363.282 rows=72979 loops=1)
                                       ->  Nested Loop  (cost=2491.71..55265.79 rows=735 width=98) (actual time=26.800..769.616 rows=84183 loops=1)
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.048..0.064 rows=1 loops=1)
                                                   Filter: ((info)::text = 'mini biography'::text)
                                                   Rows Removed by Filter: 112
                                             ->  Bitmap Heap Scan on person_info pi  (cost=2491.71..55225.61 rows=3776 width=102) (actual time=26.744..747.244 rows=84183 loops=1)
                                                   Recheck Cond: (info_type_id = it.id)
                                                   Filter: (note IS NOT NULL)
                                                   Rows Removed by Filter: 1
                                                   Heap Blocks: exact=40537
                                                   ->  Bitmap Index Scan on info_type_id_person_info  (cost=0.00..2490.77 rows=134712 width=0) (actual time=19.558..19.558 rows=84184 loops=1)
                                                         Index Cond: (info_type_id = it.id)
                                       ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..1.14 rows=2 width=4) (actual time=0.005..0.006 rows=1 loops=84183)
                                             Index Cond: (person_id = pi.person_id)
                                             Filter: ((name IS NOT NULL) AND (((name)::text ~~ '%a%'::text) OR ((name)::text ~~ 'A%'::text)))
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using name_pkey on name n  (cost=0.43..0.83 rows=1 width=19) (actual time=0.009..0.009 rows=0 loops=72979)
                                       Index Cond: (id = an.person_id)
                                       Filter: (((name_pcode_cf)::text >= 'A'::text) AND ((name_pcode_cf)::text <= 'F'::text) AND (((gender)::text = 'm'::text) OR (((gender)::text = 'f'::text) AND ((name)::text ~~ 'A%'::text))))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using person_id_cast_info on cast_info ci  (cost=0.56..12.48 rows=513 width=8) (actual time=0.014..0.054 rows=128 loops=12595)
                                 Index Cond: (person_id = n.id)
                     ->  Index Scan using linked_movie_id_movie_link on movie_link ml  (cost=0.29..0.32 rows=2 width=8) (actual time=0.001..0.001 rows=0 loops=1618304)
                           Index Cond: (linked_movie_id = ci.movie_id)
               ->  Hash  (cost=1.27..1.27 rows=4 width=4) (actual time=0.047..0.048 rows=4 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                     ->  Seq Scan on link_type lt  (cost=0.00..1.27 rows=4 width=4) (actual time=0.028..0.033 rows=4 loops=1)
                           Filter: ((link)::text = ANY ('{references,"referenced in",features,"featured in"}'::text[]))
                           Rows Removed by Filter: 14
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.46 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=109842)
               Index Cond: (id = ci.movie_id)
               Filter: ((production_year >= 1980) AND (production_year <= 2010))
               Rows Removed by Filter: 0
 Planning Time: 15.173 ms
 Execution Time: 6460.849 ms
(42 rows)

SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=42573.42..42573.43 rows=1 width=64) (actual time=4089.333..4089.333 rows=1 loops=1)
   ->  Gather  (cost=5776.21..42573.41 rows=1 width=33) (actual time=280.180..4097.310 rows=62 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Nested Loop  (cost=4776.21..41573.31 rows=1 width=33) (actual time=451.465..4081.908 rows=21 loops=3)
               ->  Nested Loop  (cost=4775.78..41569.56 rows=5 width=41) (actual time=34.213..4051.253 rows=5793 loops=3)
                     ->  Hash Join  (cost=4775.35..41567.47 rows=2 width=21) (actual time=34.114..4021.753 rows=2479 loops=3)
                           Hash Cond: (ci.role_id = rt.id)
                           ->  Nested Loop  (cost=4774.19..41566.22 rows=25 width=25) (actual time=33.849..4018.862 rows=6533 loops=3)
                                 ->  Nested Loop  (cost=4773.62..41105.65 rows=246 width=25) (actual time=33.333..519.330 rows=16109 loops=3)
                                       ->  Parallel Hash Join  (cost=4773.19..39892.48 rows=246 width=4) (actual time=33.218..303.548 rows=16109 loops=3)
                                             Hash Cond: (mc.company_id = cn.id)
                                             ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..35097.06 rows=8470 width=8) (actual time=0.112..254.116 rows=16299 loops=3)
                                                   Filter: (((note)::text ~~ '%(Japan)%'::text) AND ((note)::text !~~ '%(USA)%'::text))
                                                   Rows Removed by Filter: 853411
                                             ->  Parallel Hash  (cost=4722.92..4722.92 rows=4022 width=4) (actual time=32.727..32.728 rows=2251 loops=3)
                                                   Buckets: 8192  Batches: 1  Memory Usage: 384kB
                                                   ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=4022 width=4) (actual time=0.047..31.048 rows=2251 loops=3)
                                                         Filter: ((country_code)::text = '[jp]'::text)
                                                         Rows Removed by Filter: 76082
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..4.93 rows=1 width=21) (actual time=0.012..0.012 rows=1 loops=48328)
                                             Index Cond: (id = mc.movie_id)
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.86 rows=1 width=12) (actual time=0.209..0.216 rows=0 loops=48328)
                                       Index Cond: (movie_id = t.id)
                                       Filter: ((note)::text = '(voice: English version)'::text)
                                       Rows Removed by Filter: 32
                           ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.070..0.070 rows=1 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                 ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.045..0.048 rows=1 loops=3)
                                       Filter: ((role)::text = 'actress'::text)
                                       Rows Removed by Filter: 11
                     ->  Index Scan using person_id_aka_name on aka_name an1  (cost=0.42..1.03 rows=2 width=20) (actual time=0.009..0.011 rows=2 loops=7438)
                           Index Cond: (person_id = ci.person_id)
               ->  Index Scan using name_pkey on name n1  (cost=0.43..0.75 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=17379)
                     Index Cond: (id = an1.person_id)
                     Filter: (((name)::text ~~ '%Yo%'::text) AND ((name)::text !~~ '%Yu%'::text))
                     Rows Removed by Filter: 1
 Planning Time: 10.249 ms
 Execution Time: 4097.962 ms
(39 rows)

SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=43935.52..43935.53 rows=1 width=64) (actual time=347.932..347.932 rows=1 loops=1)
   ->  Nested Loop  (cost=1002.40..43935.52 rows=1 width=33) (actual time=343.790..347.887 rows=6 loops=1)
         ->  Nested Loop  (cost=1002.27..43935.34 rows=1 width=37) (actual time=343.723..347.809 rows=6 loops=1)
               ->  Nested Loop  (cost=1001.84..43934.59 rows=1 width=45) (actual time=342.123..345.953 rows=171 loops=1)
                     ->  Nested Loop  (cost=1001.42..43933.55 rows=1 width=25) (actual time=342.067..343.883 rows=104 loops=1)
                           Join Filter: (t.id = ci.movie_id)
                           ->  Gather  (cost=1000.85..43788.54 rows=1 width=25) (actual time=341.914..342.063 rows=4 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Nested Loop  (cost=0.85..42788.44 rows=1 width=25) (actual time=222.132..335.295 rows=1 loops=3)
                                       ->  Nested Loop  (cost=0.42..42706.13 rows=10 width=4) (actual time=0.197..272.016 rows=2832 loops=3)
                                             ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..40532.74 rows=338 width=8) (actual time=0.118..248.267 rows=2856 loops=3)
                                                   Filter: (((note)::text ~~ '%(Japan)%'::text) AND ((note)::text !~~ '%(USA)%'::text) AND (((note)::text ~~ '%(2006)%'::text) OR ((note)::text ~~ '%(2007)%'::text)))
                                                   Rows Removed by Filter: 866853
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..6.43 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=8569)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((country_code)::text = '[jp]'::text)
                                                   Rows Removed by Filter: 0
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..8.20 rows=1 width=21) (actual time=0.022..0.022 rows=0 loops=8495)
                                             Index Cond: (id = mc.movie_id)
                                             Filter: ((production_year >= 2006) AND (production_year <= 2007) AND (((title)::text ~~ 'One Piece%'::text) OR ((title)::text ~~ 'Dragon Ball Z%'::text)))
                                             Rows Removed by Filter: 1
                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..145.00 rows=1 width=12) (actual time=0.153..0.475 rows=26 loops=4)
                                 Index Cond: (movie_id = mc.movie_id)
                                 Filter: ((note)::text = '(voice: English version)'::text)
                                 Rows Removed by Filter: 17
                     ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..1.03 rows=2 width=20) (actual time=0.016..0.019 rows=2 loops=104)
                           Index Cond: (person_id = ci.person_id)
               ->  Index Scan using name_pkey on name n  (cost=0.43..0.75 rows=1 width=4) (actual time=0.010..0.010 rows=0 loops=171)
                     Index Cond: (id = an.person_id)
                     Filter: (((name)::text ~~ '%Yo%'::text) AND ((name)::text !~~ '%Yu%'::text))
                     Rows Removed by Filter: 1
         ->  Index Scan using role_type_pkey on role_type rt  (cost=0.14..0.16 rows=1 width=4) (actual time=0.012..0.012 rows=1 loops=6)
               Index Cond: (id = ci.role_id)
               Filter: ((role)::text = 'actress'::text)
 Planning Time: 10.304 ms
 Execution Time: 348.619 ms
(37 rows)

SET
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=507448.30..507448.31 rows=1 width=64) (actual time=7318.425..7318.426 rows=1 loops=1)
   ->  Gather  (cost=507448.08..507448.29 rows=2 width=64) (actual time=7315.081..7439.210 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=506448.08..506448.09 rows=1 width=64) (actual time=7307.807..7307.807 rows=1 loops=3)
               ->  Parallel Hash Join  (cost=369446.57..492488.07 rows=2792002 width=33) (actual time=6788.444..7072.296 rows=829204 loops=3)
                     Hash Cond: (ci.person_id = a1.person_id)
                     ->  Hash Join  (cost=243680.90..334088.98 rows=1215217 width=21) (actual time=4590.010..5045.644 rows=656886 loops=3)
                           Hash Cond: (t.id = ci.movie_id)
                           ->  Parallel Hash Join  (cost=44347.81..110366.87 rows=395029 width=25) (actual time=1105.585..1393.743 rows=384599 loops=3)
                                 Hash Cond: (t.id = mc.movie_id)
                                 ->  Parallel Seq Scan on title t  (cost=0.00..46532.63 rows=1053463 width=21) (actual time=0.045..260.266 rows=842771 loops=3)
                                 ->  Parallel Hash  (cost=37865.94..37865.94 rows=395029 width=4) (actual time=534.104..534.104 rows=384599 loops=3)
                                       Buckets: 131072  Batches: 16  Memory Usage: 3904kB
                                       ->  Parallel Hash Join  (cost=5350.78..37865.94 rows=395029 width=4) (actual time=45.183..411.866 rows=384599 loops=3)
                                             Hash Cond: (mc.company_id = cn.id)
                                             ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=8) (actual time=0.056..168.568 rows=869710 loops=3)
                                             ->  Parallel Hash  (cost=4722.92..4722.92 rows=50229 width=4) (actual time=44.851..44.851 rows=28281 loops=3)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 4416kB
                                                   ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=50229 width=4) (actual time=0.046..32.053 rows=28281 loops=3)
                                                         Filter: ((country_code)::text = '[us]'::text)
                                                         Rows Removed by Filter: 50051
                           ->  Hash  (cost=149779.57..149779.57 rows=3020362 width=8) (actual time=3186.878..3186.878 rows=2728943 loops=3)
                                 Buckets: 131072  Batches: 64  Memory Usage: 2675kB
                                 ->  Nested Loop  (cost=0.56..149779.57 rows=3020362 width=8) (actual time=0.102..2359.024 rows=2728943 loops=3)
                                       ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.029..0.036 rows=1 loops=3)
                                             Filter: ((role)::text = 'writer'::text)
                                             Rows Removed by Filter: 11
                                       ->  Index Scan using role_id_cast_info on cast_info ci  (cost=0.56..116829.02 rows=3294940 width=12) (actual time=0.065..1943.363 rows=2728943 loops=3)
                                             Index Cond: (role_id = rt.id)
                     ->  Parallel Hash  (cost=118870.18..118870.18 rows=375560 width=24) (actual time=1486.716..1486.716 rows=300448 loops=3)
                           Buckets: 65536  Batches: 16  Memory Usage: 3872kB
                           ->  Parallel Hash Join  (cost=22047.10..118870.18 rows=375560 width=24) (actual time=1020.914..1369.328 rows=300448 loops=3)
                                 Hash Cond: (n1.id = a1.person_id)
                                 ->  Parallel Seq Scan on name n1  (cost=0.00..72977.55 rows=1736455 width=4) (actual time=0.056..397.014 rows=1389164 loops=3)
                                 ->  Parallel Hash  (cost=15151.60..15151.60 rows=375560 width=20) (actual time=228.630..228.630 rows=300448 loops=3)
                                       Buckets: 65536  Batches: 16  Memory Usage: 3680kB
                                       ->  Parallel Seq Scan on aka_name a1  (cost=0.00..15151.60 rows=375560 width=20) (actual time=0.037..94.797 rows=300448 loops=3)
 Planning Time: 8.894 ms
 Execution Time: 7439.849 ms
(40 rows)

SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=507448.30..507448.31 rows=1 width=64) (actual time=3529.832..3529.832 rows=1 loops=1)
   ->  Gather  (cost=507448.08..507448.29 rows=2 width=64) (actual time=3526.356..3632.116 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=506448.08..506448.09 rows=1 width=64) (actual time=3519.151..3519.152 rows=1 loops=3)
               ->  Parallel Hash Join  (cost=369446.57..492488.07 rows=2792002 width=33) (actual time=3412.959..3488.419 rows=107668 loops=3)
                     Hash Cond: (ci.person_id = an1.person_id)
                     ->  Hash Join  (cost=243680.90..334088.98 rows=1215217 width=21) (actual time=1634.627..1895.751 rows=95179 loops=3)
                           Hash Cond: (t.id = ci.movie_id)
                           ->  Parallel Hash Join  (cost=44347.81..110366.87 rows=395029 width=25) (actual time=1113.569..1402.438 rows=384599 loops=3)
                                 Hash Cond: (t.id = mc.movie_id)
                                 ->  Parallel Seq Scan on title t  (cost=0.00..46532.63 rows=1053463 width=21) (actual time=0.058..265.898 rows=842771 loops=3)
                                 ->  Parallel Hash  (cost=37865.94..37865.94 rows=395029 width=4) (actual time=535.477..535.477 rows=384599 loops=3)
                                       Buckets: 131072  Batches: 16  Memory Usage: 3872kB
                                       ->  Parallel Hash Join  (cost=5350.78..37865.94 rows=395029 width=4) (actual time=48.480..413.710 rows=384599 loops=3)
                                             Hash Cond: (mc.company_id = cn.id)
                                             ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=8) (actual time=0.049..167.589 rows=869710 loops=3)
                                             ->  Parallel Hash  (cost=4722.92..4722.92 rows=50229 width=4) (actual time=48.172..48.172 rows=28281 loops=3)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 4416kB
                                                   ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=50229 width=4) (actual time=0.101..35.441 rows=28281 loops=3)
                                                         Filter: ((country_code)::text = '[us]'::text)
                                                         Rows Removed by Filter: 50051
                           ->  Hash  (cost=149779.57..149779.57 rows=3020362 width=8) (actual time=233.344..233.344 rows=276403 loops=3)
                                 Buckets: 131072  Batches: 64  Memory Usage: 1193kB
                                 ->  Nested Loop  (cost=0.56..149779.57 rows=3020362 width=8) (actual time=0.157..136.049 rows=276403 loops=3)
                                       ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.040..0.047 rows=1 loops=3)
                                             Filter: ((role)::text = 'costume designer'::text)
                                             Rows Removed by Filter: 11
                                       ->  Index Scan using role_id_cast_info on cast_info ci  (cost=0.56..116829.02 rows=3294940 width=12) (actual time=0.108..95.102 rows=276403 loops=3)
                                             Index Cond: (role_id = rt.id)
                     ->  Parallel Hash  (cost=118870.18..118870.18 rows=375560 width=24) (actual time=1472.326..1472.326 rows=300448 loops=3)
                           Buckets: 65536  Batches: 16  Memory Usage: 3872kB
                           ->  Parallel Hash Join  (cost=22047.10..118870.18 rows=375560 width=24) (actual time=1002.981..1355.544 rows=300448 loops=3)
                                 Hash Cond: (n1.id = an1.person_id)
                                 ->  Parallel Seq Scan on name n1  (cost=0.00..72977.55 rows=1736455 width=4) (actual time=0.064..402.040 rows=1389164 loops=3)
                                 ->  Parallel Hash  (cost=15151.60..15151.60 rows=375560 width=20) (actual time=208.265..208.265 rows=300448 loops=3)
                                       Buckets: 65536  Batches: 16  Memory Usage: 3680kB
                                       ->  Parallel Seq Scan on aka_name an1  (cost=0.00..15151.60 rows=375560 width=20) (actual time=0.040..94.955 rows=300448 loops=3)
 Planning Time: 10.527 ms
 Execution Time: 3632.896 ms
(40 rows)

SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=83284.29..83284.30 rows=1 width=96) (actual time=584.000..584.001 rows=1 loops=1)
   ->  Nested Loop  (cost=1003.86..83284.28 rows=1 width=49) (actual time=242.824..583.838 rows=121 loops=1)
         ->  Nested Loop  (cost=1003.44..83283.79 rows=1 width=53) (actual time=242.758..582.292 rows=123 loops=1)
               Join Filter: (ci.movie_id = mc.movie_id)
               ->  Gather  (cost=1003.01..83283.14 rows=1 width=57) (actual time=232.425..581.743 rows=139 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Nested Loop  (cost=3.01..82283.04 rows=1 width=57) (actual time=229.568..574.562 rows=46 loops=3)
                           ->  Nested Loop  (cost=2.58..82282.39 rows=1 width=45) (actual time=225.742..573.578 rows=52 loops=3)
                                 ->  Hash Join  (cost=2.15..82281.10 rows=2 width=24) (actual time=224.274..570.178 rows=142 loops=3)
                                       Hash Cond: (ci.role_id = rt.id)
                                       ->  Nested Loop  (cost=0.99..82279.86 rows=19 width=28) (actual time=223.991..569.802 rows=142 loops=3)
                                             Join Filter: (n.id = ci.person_id)
                                             ->  Nested Loop  (cost=0.42..82155.48 rows=9 width=24) (actual time=217.688..546.135 rows=519 loops=3)
                                                   ->  Parallel Seq Scan on name n  (cost=0.00..81659.82 rows=40 width=4) (actual time=216.892..517.593 rows=2256 loops=3)
                                                         Filter: (((name)::text ~~ '%Ang%'::text) AND ((gender)::text = 'f'::text))
                                                         Rows Removed by Filter: 1386908
                                                   ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..12.37 rows=2 width=20) (actual time=0.011..0.012 rows=0 loops=6768)
                                                         Index Cond: (person_id = n.id)
                                             ->  Index Scan using person_id_cast_info on cast_info ci  (cost=0.56..13.67 rows=12 width=16) (actual time=0.042..0.045 rows=0 loops=1558)
                                                   Index Cond: (person_id = an.person_id)
                                                   Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                   Rows Removed by Filter: 44
                                       ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.116..0.116 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.087..0.090 rows=1 loops=3)
                                                   Filter: ((role)::text = 'actress'::text)
                                                   Rows Removed by Filter: 11
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.65 rows=1 width=21) (actual time=0.023..0.023 rows=0 loops=425)
                                       Index Cond: (id = ci.movie_id)
                                       Filter: ((production_year >= 2005) AND (production_year <= 2015))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.65 rows=1 width=20) (actual time=0.018..0.018 rows=1 loops=155)
                                 Index Cond: (id = ci.person_role_id)
               ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.64 rows=1 width=8) (actual time=0.020..0.026 rows=1 loops=139)
                     Index Cond: (movie_id = t.id)
                     Filter: ((note IS NOT NULL) AND (((note)::text ~~ '%(USA)%'::text) OR ((note)::text ~~ '%(worldwide)%'::text)))
                     Rows Removed by Filter: 5
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.49 rows=1 width=4) (actual time=0.012..0.012 rows=1 loops=123)
               Index Cond: (id = mc.company_id)
               Filter: ((country_code)::text = '[us]'::text)
               Rows Removed by Filter: 0
 Planning Time: 15.855 ms
 Execution Time: 587.839 ms
(44 rows)

SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=83272.11..83272.12 rows=1 width=128) (actual time=535.025..535.026 rows=1 loops=1)
   ->  Nested Loop  (cost=1003.86..83272.10 rows=1 width=64) (actual time=232.893..534.949 rows=40 loops=1)
         ->  Nested Loop  (cost=1003.43..83271.40 rows=1 width=55) (actual time=232.775..534.130 rows=94 loops=1)
               ->  Nested Loop  (cost=1003.01..83270.82 rows=1 width=59) (actual time=232.707..533.266 rows=94 loops=1)
                     ->  Gather  (cost=1002.58..83270.12 rows=1 width=47) (actual time=232.652..535.228 rows=103 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop  (cost=2.58..82270.02 rows=1 width=47) (actual time=218.198..526.657 rows=34 loops=3)
                                 ->  Hash Join  (cost=2.15..82269.31 rows=1 width=39) (actual time=214.458..524.725 rows=88 loops=3)
                                       Hash Cond: (ci.role_id = rt.id)
                                       ->  Nested Loop  (cost=0.99..82268.09 rows=15 width=43) (actual time=214.214..524.429 rows=88 loops=3)
                                             Join Filter: (n.id = ci.person_id)
                                             ->  Nested Loop  (cost=0.42..82155.48 rows=9 width=39) (actual time=209.057..513.989 rows=432 loops=3)
                                                   ->  Parallel Seq Scan on name n  (cost=0.00..81659.82 rows=40 width=19) (actual time=208.430..497.548 rows=1803 loops=3)
                                                         Filter: (((name)::text ~~ '%Angel%'::text) AND ((gender)::text = 'f'::text))
                                                         Rows Removed by Filter: 1387361
                                                   ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..12.37 rows=2 width=20) (actual time=0.008..0.008 rows=0 loops=5409)
                                                         Index Cond: (person_id = n.id)
                                             ->  Index Scan using person_id_cast_info on cast_info ci  (cost=0.56..12.39 rows=10 width=16) (actual time=0.022..0.023 rows=0 loops=1296)
                                                   Index Cond: (person_id = an.person_id)
                                                   Filter: ((note)::text = '(voice)'::text)
                                                   Rows Removed by Filter: 43
                                       ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.070..0.070 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.046..0.049 rows=1 loops=3)
                                                   Filter: ((role)::text = 'actress'::text)
                                                   Rows Removed by Filter: 11
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.70 rows=1 width=8) (actual time=0.018..0.021 rows=0 loops=265)
                                       Index Cond: (movie_id = ci.movie_id)
                                       Filter: (((note)::text ~~ '%(200%)%'::text) AND (((note)::text ~~ '%(USA)%'::text) OR ((note)::text ~~ '%(worldwide)%'::text)))
                                       Rows Removed by Filter: 4
                     ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.70 rows=1 width=20) (actual time=0.010..0.010 rows=1 loops=103)
                           Index Cond: (id = ci.person_role_id)
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.59 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=94)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text = '[us]'::text)
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.69 rows=1 width=21) (actual time=0.008..0.008 rows=0 loops=94)
               Index Cond: (id = ci.movie_id)
               Filter: ((production_year >= 2007) AND (production_year <= 2010))
               Rows Removed by Filter: 1
 Planning Time: 14.489 ms
 Execution Time: 538.788 ms
(42 rows)

SET
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=160431.48..160431.49 rows=1 width=128) (actual time=959.769..959.770 rows=1 loops=1)
   ->  Gather  (cost=160431.25..160431.46 rows=2 width=128) (actual time=958.793..965.991 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=159431.25..159431.26 rows=1 width=128) (actual time=951.308..951.308 rows=1 loops=3)
               ->  Nested Loop  (cost=81913.67..159427.47 rows=378 width=64) (actual time=542.298..948.988 rows=2715 loops=3)
                     Join Filter: (ci.movie_id = t.id)
                     ->  Nested Loop  (cost=81913.24..159228.71 rows=378 width=55) (actual time=542.165..930.345 rows=2715 loops=3)
                           ->  Nested Loop  (cost=81912.82..158764.41 rows=1042 width=59) (actual time=540.899..891.037 rows=6115 loops=3)
                                 ->  Nested Loop  (cost=81912.39..158495.75 rows=392 width=51) (actual time=540.764..863.728 rows=2575 loops=3)
                                       ->  Hash Join  (cost=81911.96..157967.51 rows=810 width=39) (actual time=540.643..841.772 rows=2735 loops=3)
                                             Hash Cond: (ci.role_id = rt.id)
                                             ->  Nested Loop  (cost=81910.80..157931.79 rows=9727 width=43) (actual time=540.411..840.263 rows=2735 loops=3)
                                                   Join Filter: (n.id = ci.person_id)
                                                   ->  Parallel Hash Join  (cost=81910.23..98047.67 rows=4333 width=39) (actual time=536.797..685.190 rows=3508 loops=3)
                                                         Hash Cond: (an.person_id = n.id)
                                                         ->  Parallel Seq Scan on aka_name an  (cost=0.00..15151.60 rows=375560 width=20) (actual time=0.030..79.760 rows=300448 loops=3)
                                                         ->  Parallel Hash  (cost=81659.82..81659.82 rows=20033 width=19) (actual time=535.753..535.754 rows=16670 loops=3)
                                                               Buckets: 65536  Batches: 1  Memory Usage: 3296kB
                                                               ->  Parallel Seq Scan on name n  (cost=0.00..81659.82 rows=20033 width=19) (actual time=218.336..521.493 rows=16670 loops=3)
                                                                     Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                                                     Rows Removed by Filter: 1372493
                                                   ->  Index Scan using person_id_cast_info on cast_info ci  (cost=0.56..13.67 rows=12 width=16) (actual time=0.040..0.043 rows=1 loops=10525)
                                                         Index Cond: (person_id = an.person_id)
                                                         Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                         Rows Removed by Filter: 44
                                             ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.080..0.080 rows=1 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.053..0.056 rows=1 loops=3)
                                                         Filter: ((role)::text = 'actress'::text)
                                                         Rows Removed by Filter: 11
                                       ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.65 rows=1 width=20) (actual time=0.007..0.007 rows=1 loops=8204)
                                             Index Cond: (id = ci.person_role_id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.64 rows=5 width=8) (actual time=0.007..0.010 rows=2 loops=7726)
                                       Index Cond: (movie_id = ci.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.006..0.006 rows=0 loops=18345)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.51 rows=1 width=21) (actual time=0.006..0.006 rows=1 loops=8144)
                           Index Cond: (id = mc.movie_id)
 Planning Time: 14.831 ms
 Execution Time: 966.698 ms
(43 rows)

SET
                                                                                                  QUERY PLAN                                                                                                  
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=210684.16..210684.17 rows=1 width=128) (actual time=5463.124..5463.124 rows=1 loops=1)
   ->  Gather  (cost=210683.93..210684.14 rows=2 width=128) (actual time=5463.103..5464.409 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=209683.93..209683.94 rows=1 width=128) (actual time=5375.917..5375.917 rows=1 loops=3)
               ->  Nested Loop  (cost=140734.47..209608.99 rows=7494 width=64) (actual time=2965.654..5279.076 rows=161027 loops=3)
                     ->  Nested Loop  (cost=140734.04..207853.12 rows=3262 width=56) (actual time=2964.567..4910.403 rows=57856 loops=3)
                           Join Filter: (ci.movie_id = t.id)
                           ->  Nested Loop  (cost=140733.61..206137.89 rows=3262 width=47) (actual time=2964.478..4538.918 rows=57856 loops=3)
                                 ->  Nested Loop  (cost=140733.18..201739.10 rows=6745 width=35) (actual time=2964.415..4035.778 rows=63155 loops=3)
                                       ->  Hash Join  (cost=140732.75..179459.15 rows=29530 width=16) (actual time=2964.341..3595.618 rows=63185 loops=3)
                                             Hash Cond: (mc.movie_id = ci.movie_id)
                                             ->  Parallel Hash Join  (cost=5350.78..37865.94 rows=395029 width=4) (actual time=46.721..446.773 rows=384599 loops=3)
                                                   Hash Cond: (mc.company_id = cn.id)
                                                   ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=8) (actual time=0.034..169.675 rows=869710 loops=3)
                                                   ->  Parallel Hash  (cost=4722.92..4722.92 rows=50229 width=4) (actual time=45.435..45.435 rows=28281 loops=3)
                                                         Buckets: 131072  Batches: 1  Memory Usage: 4384kB
                                                         ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=50229 width=4) (actual time=0.043..31.094 rows=28281 loops=3)
                                                               Filter: ((country_code)::text = '[us]'::text)
                                                               Rows Removed by Filter: 50051
                                             ->  Hash  (cost=134105.54..134105.54 rows=73395 width=12) (actual time=2914.964..2914.964 rows=276166 loops=3)
                                                   Buckets: 131072 (originally 131072)  Batches: 4 (originally 2)  Memory Usage: 3984kB
                                                   ->  Nested Loop  (cost=0.56..134105.54 rows=73395 width=12) (actual time=0.277..2792.467 rows=276166 loops=3)
                                                         ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.031..0.036 rows=1 loops=3)
                                                               Filter: ((role)::text = 'actress'::text)
                                                               Rows Removed by Filter: 11
                                                         ->  Index Scan using role_id_cast_info on cast_info ci  (cost=0.56..133303.71 rows=80067 width=16) (actual time=0.241..2754.306 rows=276166 loops=3)
                                                               Index Cond: (role_id = rt.id)
                                                               Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                               Rows Removed by Filter: 7175807
                                       ->  Index Scan using name_pkey on name n  (cost=0.43..0.75 rows=1 width=19) (actual time=0.006..0.006 rows=1 loops=189554)
                                             Index Cond: (id = ci.person_id)
                                             Filter: ((gender)::text = 'f'::text)
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.65 rows=1 width=20) (actual time=0.007..0.007 rows=1 loops=189464)
                                       Index Cond: (id = ci.person_role_id)
                           ->  Index Scan using title_pkey on title t  (cost=0.43..0.51 rows=1 width=21) (actual time=0.005..0.005 rows=1 loops=173567)
                                 Index Cond: (id = mc.movie_id)
                     ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.52 rows=2 width=20) (actual time=0.004..0.005 rows=3 loops=173567)
                           Index Cond: (person_id = n.id)
 Planning Time: 15.690 ms
 Execution Time: 5465.152 ms
(42 rows)

