SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=46680.35..46680.36 rows=1 width=64) (actual time=442.106..442.106 rows=1 loops=1)
   ->  Gather  (cost=46680.13..46680.34 rows=2 width=64) (actual time=441.960..455.233 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=45680.13..45680.14 rows=1 width=64) (actual time=439.202..439.202 rows=1 loops=3)
               ->  Nested Loop  (cost=4736.00..45680.12 rows=2 width=33) (actual time=70.289..439.169 rows=35 loops=3)
                     ->  Nested Loop  (cost=4735.87..45679.82 rows=2 width=37) (actual time=70.253..439.055 rows=35 loops=3)
                           ->  Hash Join  (cost=4735.44..45655.14 rows=5 width=25) (actual time=70.218..438.624 rows=37 loops=3)
                                 Hash Cond: (ci.role_id = rt.id)
                                 ->  Nested Loop  (cost=4734.28..45653.76 rows=62 width=29) (actual time=70.138..438.516 rows=50 loops=3)
                                       Join Filter: (t.id = ci.movie_id)
                                       ->  Nested Loop  (cost=4733.71..40613.13 rows=2585 width=29) (actual time=16.588..201.189 rows=1513 loops=3)
                                             ->  Parallel Hash Join  (cost=4733.28..37248.44 rows=6523 width=8) (actual time=16.465..177.735 rows=2930 loops=3)
                                                   Hash Cond: (mc.company_id = cn.id)
                                                   ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=12) (actual time=0.021..77.141 rows=869710 loops=3)
                                                   ->  Parallel Hash  (cost=4722.92..4722.92 rows=829 width=4) (actual time=15.877..15.878 rows=454 loops=3)
                                                         Buckets: 2048  Batches: 1  Memory Usage: 112kB
                                                         ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=829 width=4) (actual time=0.067..15.711 rows=454 loops=3)
                                                               Filter: ((country_code)::text = '[ru]'::text)
                                                               Rows Removed by Filter: 77879
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..0.52 rows=1 width=21) (actual time=0.008..0.008 rows=1 loops=8790)
                                                   Index Cond: (id = mc.movie_id)
                                                   Filter: (production_year > 2005)
                                                   Rows Removed by Filter: 0
                                       ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.94 rows=1 width=12) (actual time=0.147..0.157 rows=0 loops=4539)
                                             Index Cond: (movie_id = mc.movie_id)
                                             Filter: (((note)::text ~~ '%(voice)%'::text) AND ((note)::text ~~ '%(uncredited)%'::text))
                                             Rows Removed by Filter: 50
                                 ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.020..0.020 rows=1 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.014..0.015 rows=1 loops=3)
                                             Filter: ((role)::text = 'actor'::text)
                                             Rows Removed by Filter: 11
                           ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..4.94 rows=1 width=20) (actual time=0.011..0.011 rows=1 loops=112)
                                 Index Cond: (id = ci.person_role_id)
                     ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=104)
                           Index Cond: (id = mc.company_type_id)
                           Heap Fetches: 104
 Planning Time: 4.303 ms
 Execution Time: 455.484 ms
(40 rows)

SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=43581.05..43581.06 rows=1 width=64) (actual time=270.514..270.514 rows=1 loops=1)
   ->  Gather  (cost=43580.83..43581.04 rows=2 width=64) (actual time=270.401..275.882 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=42580.83..42580.84 rows=1 width=64) (actual time=267.795..267.795 rows=1 loops=3)
               ->  Hash Join  (cost=4736.96..42580.54 rows=58 width=33) (actual time=267.791..267.791 rows=0 loops=3)
                     Hash Cond: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=4735.87..42579.14 rows=58 width=37) (actual time=267.707..267.707 rows=0 loops=3)
                           ->  Hash Join  (cost=4735.44..42510.24 rows=119 width=25) (actual time=267.706..267.706 rows=0 loops=3)
                                 Hash Cond: (ci.role_id = rt.id)
                                 ->  Nested Loop  (cost=4734.28..42504.02 rows=1424 width=29) (actual time=18.123..267.584 rows=871 loops=3)
                                       Join Filter: (t.id = ci.movie_id)
                                       ->  Nested Loop  (cost=4733.71..40613.13 rows=1018 width=29) (actual time=17.628..201.607 rows=420 loops=3)
                                             ->  Parallel Hash Join  (cost=4733.28..37248.44 rows=6523 width=8) (actual time=16.112..175.843 rows=2930 loops=3)
                                                   Hash Cond: (mc.company_id = cn.id)
                                                   ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=12) (actual time=0.015..76.858 rows=869710 loops=3)
                                                   ->  Parallel Hash  (cost=4722.92..4722.92 rows=829 width=4) (actual time=15.570..15.570 rows=454 loops=3)
                                                         Buckets: 2048  Batches: 1  Memory Usage: 112kB
                                                         ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=829 width=4) (actual time=0.027..15.395 rows=454 loops=3)
                                                               Filter: ((country_code)::text = '[ru]'::text)
                                                               Rows Removed by Filter: 77879
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..0.52 rows=1 width=21) (actual time=0.009..0.009 rows=0 loops=8790)
                                                   Index Cond: (id = mc.movie_id)
                                                   Filter: (production_year > 2010)
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.84 rows=1 width=12) (actual time=0.083..0.157 rows=2 loops=1259)
                                             Index Cond: (movie_id = mc.movie_id)
                                             Filter: ((note)::text ~~ '%(producer)%'::text)
                                             Rows Removed by Filter: 44
                                 ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.011..0.013 rows=1 loops=3)
                                             Filter: ((role)::text = 'actor'::text)
                                             Rows Removed by Filter: 11
                           ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.58 rows=1 width=20) (never executed)
                                 Index Cond: (id = ci.person_role_id)
                     ->  Hash  (cost=1.04..1.04 rows=4 width=4) (actual time=0.022..0.022 rows=4 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.017..0.018 rows=4 loops=3)
 Planning Time: 4.296 ms
 Execution Time: 276.077 ms
(41 rows)

SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=652454.39..652454.40 rows=1 width=64) (actual time=2636.097..2636.097 rows=1 loops=1)
   ->  Gather  (cost=652454.17..652454.38 rows=2 width=64) (actual time=2633.149..2697.182 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=651454.17..651454.18 rows=1 width=64) (actual time=2630.720..2630.720 rows=1 loops=3)
               ->  Hash Join  (cost=186238.47..650533.03 rows=184228 width=33) (actual time=2619.744..2630.707 rows=3 loops=3)
                     Hash Cond: (ci.role_id = rt.id)
                     ->  Hash Join  (cost=186237.20..649877.37 rows=184228 width=37) (actual time=2619.625..2630.586 rows=3 loops=3)
                           Hash Cond: (mc.company_type_id = ct.id)
                           ->  Parallel Hash Join  (cost=186236.11..648880.30 rows=184228 width=41) (actual time=2619.600..2630.561 rows=3 loops=3)
                                 Hash Cond: (ci.movie_id = t.id)
                                 ->  Parallel Hash Join  (cost=73555.68..529761.99 rows=276569 width=24) (actual time=1831.633..1864.501 rows=5 loops=3)
                                       Hash Cond: (ci.person_role_id = chn.id)
                                       ->  Parallel Seq Scan on cast_info ci  (cost=0.00..441459.62 rows=571306 width=12) (actual time=149.403..1404.141 rows=478480 loops=3)
                                             Filter: ((note)::text ~~ '%(producer)%'::text)
                                             Rows Removed by Filter: 11602968
                                       ->  Parallel Hash  (cost=49532.75..49532.75 rows=1308475 width=20) (actual time=361.374..361.375 rows=1046780 loops=3)
                                             Buckets: 65536  Batches: 64  Memory Usage: 3264kB
                                             ->  Parallel Seq Scan on char_name chn  (cost=0.00..49532.75 rows=1308475 width=20) (actual time=0.026..130.675 rows=1046780 loops=3)
                                 ->  Parallel Hash  (cost=107416.88..107416.88 rows=272203 width=29) (actual time=751.700..751.701 rows=198750 loops=3)
                                       Buckets: 65536  Batches: 16  Memory Usage: 3008kB
                                       ->  Parallel Hash Join  (cost=44358.48..107416.88 rows=272203 width=29) (actual time=564.641..710.516 rows=198750 loops=3)
                                             Hash Cond: (t.id = mc.movie_id)
                                             ->  Parallel Seq Scan on title t  (cost=0.00..49166.29 rows=724782 width=21) (actual time=0.021..128.542 rows=583011 loops=3)
                                                   Filter: (production_year > 1990)
                                                   Rows Removed by Filter: 259760
                                             ->  Parallel Hash  (cost=37866.93..37866.93 rows=395644 width=8) (actual time=309.025..309.026 rows=384599 loops=3)
                                                   Buckets: 131072  Batches: 16  Memory Usage: 3904kB
                                                   ->  Parallel Hash Join  (cost=5351.77..37866.93 rows=395644 width=8) (actual time=25.113..252.122 rows=384599 loops=3)
                                                         Hash Cond: (mc.company_id = cn.id)
                                                         ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=12) (actual time=0.020..78.247 rows=869710 loops=3)
                                                         ->  Parallel Hash  (cost=4722.92..4722.92 rows=50308 width=4) (actual time=24.817..24.817 rows=28281 loops=3)
                                                               Buckets: 131072  Batches: 1  Memory Usage: 4416kB
                                                               ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=50308 width=4) (actual time=0.022..17.378 rows=28281 loops=3)
                                                                     Filter: ((country_code)::text = '[us]'::text)
                                                                     Rows Removed by Filter: 50051
                           ->  Hash  (cost=1.04..1.04 rows=4 width=4) (actual time=0.008..0.009 rows=4 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                 ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.005..0.006 rows=4 loops=3)
                     ->  Hash  (cost=1.12..1.12 rows=12 width=4) (actual time=0.019..0.019 rows=12 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on role_type rt  (cost=0.00..1.12 rows=12 width=4) (actual time=0.012..0.013 rows=12 loops=3)
 Planning Time: 4.253 ms
 Execution Time: 2698.498 ms
(44 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3751.33..3751.34 rows=1 width=96) (actual time=100.138..100.138 rows=1 loops=1)
   ->  Nested Loop  (cost=8.32..3751.32 rows=1 width=118) (actual time=3.926..100.059 rows=310 loops=1)
         Join Filter: (ml.movie_id = t.id)
         ->  Nested Loop  (cost=7.89..3750.82 rows=1 width=113) (actual time=3.898..99.215 rows=402 loops=1)
               Join Filter: (mc.company_type_id = ct.id)
               Rows Removed by Join Filter: 20
               ->  Nested Loop  (cost=7.89..3749.75 rows=1 width=117) (actual time=3.890..98.765 rows=422 loops=1)
                     ->  Nested Loop  (cost=7.47..3749.30 rows=1 width=102) (actual time=3.437..96.373 rows=1021 loops=1)
                           Join Filter: (ml.movie_id = mc.movie_id)
                           ->  Nested Loop  (cost=7.04..3748.73 rows=1 width=90) (actual time=3.400..95.105 rows=199 loops=1)
                                 Join Filter: (ml.link_type_id = lt.id)
                                 Rows Removed by Join Filter: 303
                                 ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.017..0.021 rows=2 loops=1)
                                       Filter: ((link)::text ~~ '%follow%'::text)
                                       Rows Removed by Filter: 16
                                 ->  Nested Loop  (cost=7.04..3747.37 rows=11 width=12) (actual time=3.015..47.514 rows=251 loops=2)
                                       ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=3.008..37.900 rows=10544 loops=2)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.741..12.198 rows=1 loops=2)
                                                   Filter: ((keyword)::text = 'sequel'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=2.250..24.685 rows=10544 loops=2)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=11140
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.337..1.337 rows=10544 loops=2)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.001..0.001 rows=0 loops=21088)
                                             Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=2 width=12) (actual time=0.004..0.005 rows=5 loops=199)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: (note IS NULL)
                                 Rows Removed by Filter: 2
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=1021)
                           Index Cond: (id = mc.company_id)
                           Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                           Rows Removed by Filter: 1
               ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=422)
                     Filter: ((kind)::text = 'production companies'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.002..0.002 rows=1 loops=402)
               Index Cond: (id = mk.movie_id)
               Filter: ((production_year >= 1950) AND (production_year <= 2000))
               Rows Removed by Filter: 0
 Planning Time: 6.806 ms
 Execution Time: 100.353 ms
(44 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3751.33..3751.34 rows=1 width=96) (actual time=34.177..34.177 rows=1 loops=1)
   ->  Nested Loop  (cost=8.32..3751.32 rows=1 width=118) (actual time=4.739..34.163 rows=14 loops=1)
         Join Filter: (ml.movie_id = t.id)
         ->  Nested Loop  (cost=7.89..3750.82 rows=1 width=113) (actual time=3.424..33.942 rows=102 loops=1)
               Join Filter: (mc.company_type_id = ct.id)
               Rows Removed by Join Filter: 1
               ->  Nested Loop  (cost=7.89..3749.75 rows=1 width=117) (actual time=3.421..33.832 rows=103 loops=1)
                     ->  Nested Loop  (cost=7.47..3749.30 rows=1 width=102) (actual time=3.097..32.994 rows=288 loops=1)
                           Join Filter: (ml.movie_id = mc.movie_id)
                           ->  Nested Loop  (cost=7.04..3748.73 rows=1 width=90) (actual time=3.077..32.531 rows=64 loops=1)
                                 Join Filter: (ml.link_type_id = lt.id)
                                 Rows Removed by Join Filter: 187
                                 ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.005..0.009 rows=1 loops=1)
                                       Filter: ((link)::text ~~ '%follows%'::text)
                                       Rows Removed by Filter: 17
                                 ->  Nested Loop  (cost=7.04..3747.37 rows=11 width=12) (actual time=3.068..32.498 rows=251 loops=1)
                                       ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=3.062..23.527 rows=10544 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.762..10.230 rows=1 loops=1)
                                                   Filter: ((keyword)::text = 'sequel'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=2.295..12.334 rows=10544 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=5570
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.381..1.381 rows=10544 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.001..0.001 rows=0 loops=10544)
                                             Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=2 width=12) (actual time=0.005..0.006 rows=4 loops=64)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: (note IS NULL)
                                 Rows Removed by Filter: 2
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=288)
                           Index Cond: (id = mc.company_id)
                           Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                           Rows Removed by Filter: 1
               ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=103)
                     Filter: ((kind)::text = 'production companies'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.002..0.002 rows=0 loops=102)
               Index Cond: (id = mk.movie_id)
               Filter: (((title)::text ~~ '%Money%'::text) AND (production_year = 1998))
               Rows Removed by Filter: 1
 Planning Time: 6.649 ms
 Execution Time: 34.377 ms
(44 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=6166.44..6166.45 rows=1 width=96) (actual time=223.326..223.326 rows=1 loops=1)
   ->  Nested Loop  (cost=8.32..6166.44 rows=1 width=60) (actual time=3.551..221.671 rows=6946 loops=1)
         Join Filter: (ml.movie_id = t.id)
         ->  Nested Loop  (cost=7.89..6165.94 rows=1 width=55) (actual time=3.531..209.949 rows=6946 loops=1)
               Join Filter: (ml.link_type_id = lt.id)
               Rows Removed by Join Filter: 42158
               ->  Nested Loop  (cost=7.89..6164.53 rows=1 width=59) (actual time=3.526..196.904 rows=6946 loops=1)
                     ->  Nested Loop  (cost=7.47..6137.17 rows=60 width=44) (actual time=3.167..170.658 rows=14916 loops=1)
                           Join Filter: (mc.company_type_id = ct.id)
                           Rows Removed by Join Filter: 1782
                           ->  Nested Loop  (cost=7.47..6133.01 rows=79 width=48) (actual time=3.155..166.839 rows=15510 loops=1)
                                 Join Filter: (ml.movie_id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.04..6115.09 rows=31 width=12) (actual time=3.133..157.791 rows=1460 loops=1)
                                       ->  Nested Loop  (cost=6.75..6072.14 rows=101 width=4) (actual time=3.126..115.643 rows=47403 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2793.84 rows=3 width=4) (actual time=0.798..17.384 rows=3 loops=1)
                                                   Filter: ((keyword)::text = ANY ('{sequel,revenge,based-on-novel}'::text[]))
                                                   Rows Removed by Filter: 134167
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1089.78 rows=299 width=8) (actual time=3.276..31.186 rows=15801 loops=3)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=23953
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.912..1.912 rows=15801 loops=3)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.001..0.001 rows=0 loops=47403)
                                             Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=36) (actual time=0.002..0.005 rows=11 loops=1460)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: (note IS NOT NULL)
                                       Rows Removed by Filter: 2
                           ->  Materialize  (cost=0.00..1.06 rows=3 width=4) (actual time=0.000..0.000 rows=1 loops=15510)
                                 ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=3 width=4) (actual time=0.008..0.010 rows=3 loops=1)
                                       Filter: ((kind IS NOT NULL) AND ((kind)::text <> 'production companies'::text))
                                       Rows Removed by Filter: 1
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=14916)
                           Index Cond: (id = mc.company_id)
                           Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '20th Century Fox%'::text) OR ((name)::text ~~ 'Twentieth Century Fox%'::text)))
                           Rows Removed by Filter: 1
               ->  Seq Scan on link_type lt  (cost=0.00..1.18 rows=18 width=4) (actual time=0.001..0.001 rows=7 loops=6946)
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.001..0.001 rows=1 loops=6946)
               Index Cond: (id = mk.movie_id)
               Filter: (production_year > 1950)
 Planning Time: 6.538 ms
 Execution Time: 223.496 ms
(42 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=6183.65..6183.66 rows=1 width=96) (actual time=199.051..199.051 rows=1 loops=1)
   ->  Nested Loop  (cost=8.32..6183.29 rows=48 width=60) (actual time=3.189..195.954 rows=14899 loops=1)
         ->  Nested Loop  (cost=7.90..6158.94 rows=54 width=45) (actual time=3.182..172.344 rows=14916 loops=1)
               Join Filter: (mc.company_type_id = ct.id)
               Rows Removed by Join Filter: 1782
               ->  Nested Loop  (cost=7.90..6155.09 rows=71 width=49) (actual time=3.174..168.968 rows=15510 loops=1)
                     Join Filter: (ml.movie_id = mc.movie_id)
                     ->  Nested Loop  (cost=7.47..6138.91 rows=28 width=29) (actual time=3.166..160.917 rows=1460 loops=1)
                           Join Filter: (ml.link_type_id = lt.id)
                           Rows Removed by Join Filter: 10576
                           ->  Nested Loop  (cost=7.47..6130.60 rows=28 width=33) (actual time=3.159..159.423 rows=1460 loops=1)
                                 Join Filter: (ml.movie_id = t.id)
                                 ->  Nested Loop  (cost=7.04..6115.09 rows=31 width=12) (actual time=3.134..155.737 rows=1460 loops=1)
                                       ->  Nested Loop  (cost=6.75..6072.14 rows=101 width=4) (actual time=3.126..113.282 rows=47403 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2793.84 rows=3 width=4) (actual time=0.809..19.966 rows=3 loops=1)
                                                   Filter: ((keyword)::text = ANY ('{sequel,revenge,based-on-novel}'::text[]))
                                                   Rows Removed by Filter: 134167
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1089.78 rows=299 width=8) (actual time=3.254..29.562 rows=15801 loops=3)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=23953
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.885..1.885 rows=15801 loops=3)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.001..0.001 rows=0 loops=47403)
                                             Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.002..0.002 rows=1 loops=1460)
                                       Index Cond: (id = mk.movie_id)
                                       Filter: (production_year > 1950)
                           ->  Materialize  (cost=0.00..1.27 rows=18 width=4) (actual time=0.000..0.000 rows=8 loops=1460)
                                 ->  Seq Scan on link_type lt  (cost=0.00..1.18 rows=18 width=4) (actual time=0.003..0.005 rows=16 loops=1)
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=36) (actual time=0.002..0.004 rows=11 loops=1460)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: (note IS NOT NULL)
                           Rows Removed by Filter: 2
               ->  Materialize  (cost=0.00..1.06 rows=3 width=4) (actual time=0.000..0.000 rows=1 loops=15510)
                     ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=3 width=4) (actual time=0.006..0.007 rows=3 loops=1)
                           Filter: ((kind IS NOT NULL) AND ((kind)::text <> 'production companies'::text))
                           Rows Removed by Filter: 1
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.001..0.001 rows=1 loops=14916)
               Index Cond: (id = mc.company_id)
               Filter: ((country_code)::text <> '[pl]'::text)
               Rows Removed by Filter: 0
 Planning Time: 6.694 ms
 Execution Time: 199.224 ms
(43 rows)

SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16845.82..16845.83 rows=1 width=96) (actual time=205.620..205.620 rows=1 loops=1)
   ->  Gather  (cost=1005.35..16845.81 rows=1 width=42) (actual time=12.901..211.287 rows=397 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Nested Loop  (cost=5.34..15845.71 rows=1 width=42) (actual time=23.264..202.815 rows=132 loops=3)
               ->  Nested Loop  (cost=5.20..15844.23 rows=9 width=46) (actual time=23.256..202.586 rows=132 loops=3)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=4.77..15820.25 rows=15 width=54) (actual time=1.060..155.825 rows=1891 loops=3)
                           ->  Nested Loop  (cost=4.35..15801.98 rows=41 width=39) (actual time=1.022..146.125 rows=2203 loops=3)
                                 Join Filter: (mi_idx.movie_id = t.id)
                                 ->  Hash Join  (cost=3.92..15677.77 rows=234 width=18) (actual time=0.182..98.829 rows=8078 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Nested Loop  (cost=2.86..15671.64 rows=938 width=22) (actual time=0.095..96.096 rows=21569 loops=3)
                                             ->  Hash Join  (cost=2.43..15182.64 rows=187 width=10) (actual time=0.058..56.281 rows=5283 loops=3)
                                                   Hash Cond: (mi_idx.info_type_id = it2.id)
                                                   ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..15122.68 rows=21125 width=14) (actual time=0.021..54.284 rows=17543 loops=3)
                                                         Filter: ((info)::text > '8.0'::text)
                                                         Rows Removed by Filter: 442469
                                                   ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.022..0.022 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.017..0.018 rows=1 loops=3)
                                                               Filter: ((info)::text = 'rating'::text)
                                                               Rows Removed by Filter: 112
                                             ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.56 rows=5 width=12) (actual time=0.005..0.007 rows=4 loops=15849)
                                                   Index Cond: (movie_id = mi_idx.movie_id)
                                       ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.017..0.017 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.012..0.012 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.52 rows=1 width=21) (actual time=0.006..0.006 rows=0 loops=24233)
                                       Index Cond: (id = mc.movie_id)
                                       Filter: ((production_year >= 2005) AND (production_year <= 2008))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.004..0.004 rows=1 loops=6610)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.59 rows=1 width=8) (actual time=0.024..0.024 rows=0 loops=5674)
                           Index Cond: (movie_id = mc.movie_id)
                           Filter: ((info)::text = ANY ('{Drama,Horror}'::text[]))
                           Rows Removed by Filter: 28
               ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=397)
                     Index Cond: (id = mi.info_type_id)
                     Filter: ((info)::text = 'genres'::text)
 Planning Time: 6.731 ms
 Execution Time: 211.607 ms
(47 rows)

SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=19208.36..19208.37 rows=1 width=64) (actual time=75.652..75.653 rows=1 loops=1)
   ->  Gather  (cost=1004.41..19208.36 rows=1 width=59) (actual time=73.456..75.706 rows=10 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Nested Loop  (cost=4.41..18208.26 rows=1 width=59) (actual time=70.559..71.286 rows=3 loops=3)
               ->  Nested Loop  (cost=4.27..18205.80 rows=15 width=63) (actual time=70.510..70.901 rows=403 loops=3)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=3.84..18203.79 rows=1 width=29) (actual time=70.500..70.658 rows=3 loops=3)
                           ->  Nested Loop  (cost=3.42..18203.35 rows=1 width=33) (actual time=70.493..70.541 rows=11 loops=3)
                                 ->  Nested Loop  (cost=3.29..18203.03 rows=2 width=37) (actual time=70.485..70.521 rows=11 loops=3)
                                       Join Filter: (t.id = mc.movie_id)
                                       ->  Nested Loop  (cost=2.86..18202.37 rows=1 width=25) (actual time=70.472..70.491 rows=1 loops=3)
                                             ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=4) (actual time=70.397..70.399 rows=3 loops=3)
                                                   Hash Cond: (mi_idx.info_type_id = it2.id)
                                                   ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=8) (actual time=0.016..38.145 rows=460012 loops=3)
                                                   ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.028..0.029 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.024..0.025 rows=1 loops=3)
                                                               Filter: ((info)::text = 'bottom 10 rank'::text)
                                                               Rows Removed by Filter: 112
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..0.58 rows=1 width=21) (actual time=0.027..0.027 rows=0 loops=10)
                                                   Index Cond: (id = mi_idx.movie_id)
                                                   Filter: ((production_year > 2000) AND (((title)::text ~~ 'Birdemic%'::text) OR ((title)::text ~~ '%Movie%'::text)))
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.59 rows=5 width=12) (actual time=0.027..0.038 rows=16 loops=2)
                                             Index Cond: (movie_id = mi_idx.movie_id)
                                 ->  Index Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=33)
                                       Index Cond: (id = mc.company_type_id)
                                       Filter: ((kind IS NOT NULL) AND (((kind)::text = 'production companies'::text) OR ((kind)::text = 'distributors'::text)))
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.010..0.010 rows=0 loops=33)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.48 rows=42 width=50) (actual time=0.006..0.054 rows=121 loops=10)
                           Index Cond: (movie_id = mc.movie_id)
               ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=1210)
                     Index Cond: (id = mi.info_type_id)
                     Filter: ((info)::text = 'budget'::text)
                     Rows Removed by Filter: 1
 Planning Time: 7.160 ms
 Execution Time: 75.931 ms
(41 rows)

SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=17912.37..17912.38 rows=1 width=96) (actual time=683.002..683.003 rows=1 loops=1)
   ->  Gather  (cost=1007.63..17912.35 rows=2 width=42) (actual time=3.146..686.124 rows=4711 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Hash Join  (cost=7.63..16912.15 rows=1 width=42) (actual time=4.177..678.981 rows=1570 loops=3)
               Hash Cond: (mi.info_type_id = it1.id)
               ->  Nested Loop  (cost=5.20..16909.46 rows=98 width=46) (actual time=4.098..678.491 rows=1570 loops=3)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=4.77..16679.52 rows=135 width=54) (actual time=0.352..415.609 rows=14111 loops=3)
                           ->  Hash Join  (cost=4.35..16514.65 rows=370 width=39) (actual time=0.158..342.105 rows=22822 loops=3)
                                 Hash Cond: (mc.company_type_id = ct.id)
                                 ->  Nested Loop  (cost=3.29..16505.58 rows=1482 width=43) (actual time=0.112..334.508 rows=56386 loops=3)
                                       ->  Nested Loop  (cost=2.86..16307.87 rows=296 width=31) (actual time=0.091..246.726 rows=17435 loops=3)
                                             ->  Hash Join  (cost=2.43..15347.68 rows=723 width=10) (actual time=0.052..71.804 rows=40524 loops=3)
                                                   Hash Cond: (mi_idx.info_type_id = it2.id)
                                                   ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..15122.68 rows=81724 width=14) (actual time=0.023..62.202 rows=64280 loops=3)
                                                         Filter: ((info)::text > '7.0'::text)
                                                         Rows Removed by Filter: 395732
                                                   ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.012..0.012 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=3)
                                                               Filter: ((info)::text = 'rating'::text)
                                                               Rows Removed by Filter: 112
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..1.33 rows=1 width=21) (actual time=0.004..0.004 rows=0 loops=121572)
                                                   Index Cond: (id = mi_idx.movie_id)
                                                   Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.62 rows=5 width=12) (actual time=0.003..0.004 rows=3 loops=52304)
                                             Index Cond: (movie_id = t.id)
                                 ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.017..0.017 rows=1 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=3)
                                             Filter: ((kind)::text = 'production companies'::text)
                                             Rows Removed by Filter: 3
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.003..0.003 rows=1 loops=68466)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.69 rows=1 width=8) (actual time=0.018..0.018 rows=0 loops=42332)
                           Index Cond: (movie_id = mc.movie_id)
                           Filter: ((info)::text = ANY ('{Drama,Horror,Western,Family}'::text[]))
                           Rows Removed by Filter: 29
               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.028..0.028 rows=1 loops=3)
                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                     ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.017..0.025 rows=1 loops=3)
                           Filter: ((info)::text = 'genres'::text)
                           Rows Removed by Filter: 112
 Planning Time: 6.558 ms
 Execution Time: 687.537 ms
(49 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=20132.55..20132.56 rows=1 width=96) (actual time=1322.361..1322.361 rows=1 loops=1)
   ->  Gather  (cost=20132.32..20132.53 rows=2 width=96) (actual time=1322.342..1330.987 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=19132.32..19132.33 rows=1 width=96) (actual time=1319.261..1319.262 rows=1 loops=3)
               ->  Hash Join  (cost=8.73..19132.25 rows=10 width=65) (actual time=267.256..1312.352 rows=37034 loops=3)
                     Hash Cond: (mi.info_type_id = it2.id)
                     ->  Nested Loop  (cost=6.30..19126.56 rows=1197 width=69) (actual time=267.150..1296.794 rows=172109 loops=3)
                           ->  Nested Loop  (cost=5.87..19055.86 rows=37 width=35) (actual time=267.116..1153.419 rows=5490 loops=3)
                                 ->  Hash Join  (cost=5.45..18649.93 rows=911 width=39) (actual time=266.060..884.792 rows=100870 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Nested Loop  (cost=4.39..18629.17 rows=3643 width=43) (actual time=266.031..854.289 rows=257695 loops=3)
                                             ->  Hash Join  (cost=3.96..18186.75 rows=727 width=31) (actual time=265.980..598.741 rows=69960 loops=3)
                                                   Hash Cond: (t.kind_id = kt.id)
                                                   ->  Nested Loop  (cost=2.86..18164.20 rows=5089 width=35) (actual time=0.084..578.901 rows=153308 loops=3)
                                                         ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=10) (actual time=0.050..110.273 rows=153308 loops=3)
                                                               Hash Cond: (miidx.info_type_id = it.id)
                                                               ->  Parallel Seq Scan on movie_info_idx miidx  (cost=0.00..13685.15 rows=575015 width=14) (actual time=0.020..43.362 rows=460012 loops=3)
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'rating'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=25) (actual time=0.003..0.003 rows=1 loops=459925)
                                                               Index Cond: (id = miidx.movie_id)
                                                   ->  Hash  (cost=1.09..1.09 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.011..0.011 rows=1 loops=3)
                                                               Filter: ((kind)::text = 'movie'::text)
                                                               Rows Removed by Filter: 6
                                             ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.56 rows=5 width=12) (actual time=0.002..0.003 rows=4 loops=209880)
                                                   Index Cond: (movie_id = t.id)
                                       ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.013..0.013 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.011..0.011 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                 ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=302610)
                                       Index Cond: (id = mc.company_id)
                                       Filter: ((country_code)::text = '[de]'::text)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.49 rows=42 width=50) (actual time=0.005..0.022 rows=31 loops=16470)
                                 Index Cond: (movie_id = t.id)
                     ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.027..0.027 rows=1 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.016..0.023 rows=1 loops=3)
                                 Filter: ((info)::text = 'release dates'::text)
                                 Rows Removed by Filter: 112
 Planning Time: 10.231 ms
 Execution Time: 1331.252 ms
(50 rows)

SET
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=19206.33..19206.34 rows=1 width=96) (actual time=629.059..629.059 rows=1 loops=1)
   ->  Gather  (cost=1004.54..19206.32 rows=1 width=42) (actual time=280.136..635.539 rows=372 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Nested Loop  (cost=4.54..18206.22 rows=1 width=42) (actual time=298.849..626.089 rows=124 loops=3)
               ->  Nested Loop  (cost=4.40..18205.87 rows=2 width=46) (actual time=298.815..625.329 rows=707 loops=3)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=3.97..18203.87 rows=1 width=54) (actual time=298.775..624.367 rows=20 loops=3)
                           ->  Nested Loop  (cost=3.84..18203.70 rows=1 width=58) (actual time=298.727..624.271 rows=54 loops=3)
                                 ->  Nested Loop  (cost=3.42..18203.25 rows=1 width=43) (actual time=278.607..623.480 rows=104 loops=3)
                                       Join Filter: (t.id = mc.movie_id)
                                       ->  Nested Loop  (cost=2.99..18202.60 rows=1 width=31) (actual time=278.551..623.043 rows=30 loops=3)
                                             ->  Nested Loop  (cost=2.86..18202.37 rows=1 width=35) (actual time=2.296..622.833 rows=117 loops=3)
                                                   ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=10) (actual time=0.130..107.531 rows=153308 loops=3)
                                                         Hash Cond: (miidx.info_type_id = it.id)
                                                         ->  Parallel Seq Scan on movie_info_idx miidx  (cost=0.00..13685.15 rows=575015 width=14) (actual time=0.020..41.473 rows=460012 loops=3)
                                                         ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.023..0.024 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.018..0.019 rows=1 loops=3)
                                                                     Filter: ((info)::text = 'rating'::text)
                                                                     Rows Removed by Filter: 112
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.58 rows=1 width=25) (actual time=0.003..0.003 rows=0 loops=459925)
                                                         Index Cond: (id = miidx.movie_id)
                                                         Filter: (((title)::text <> ''::text) AND (((title)::text ~~ '%Champion%'::text) OR ((title)::text ~~ '%Loser%'::text)))
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using kind_type_pkey on kind_type kt  (cost=0.13..0.18 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=352)
                                                   Index Cond: (id = t.kind_id)
                                                   Filter: ((kind)::text = 'movie'::text)
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.59 rows=5 width=12) (actual time=0.011..0.013 rows=3 loops=90)
                                             Index Cond: (movie_id = miidx.movie_id)
                                 ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.007..0.007 rows=1 loops=313)
                                       Index Cond: (id = mc.company_id)
                                       Filter: ((country_code)::text = '[us]'::text)
                                       Rows Removed by Filter: 0
                           ->  Index Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=161)
                                 Index Cond: (id = mc.company_type_id)
                                 Filter: ((kind)::text = 'production companies'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.48 rows=42 width=8) (actual time=0.010..0.041 rows=35 loops=61)
                           Index Cond: (movie_id = mc.movie_id)
               ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=2122)
                     Index Cond: (id = mi.info_type_id)
                     Filter: ((info)::text = 'release dates'::text)
                     Rows Removed by Filter: 1
 Planning Time: 10.948 ms
 Execution Time: 635.855 ms
(47 rows)

SET
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=19206.33..19206.34 rows=1 width=96) (actual time=610.044..610.044 rows=1 loops=1)
   ->  Gather  (cost=1004.54..19206.32 rows=1 width=42) (actual time=609.921..616.081 rows=53 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Nested Loop  (cost=4.54..18206.22 rows=1 width=42) (actual time=453.689..607.184 rows=18 loops=3)
               ->  Nested Loop  (cost=4.40..18205.87 rows=2 width=46) (actual time=453.662..607.092 rows=73 loops=3)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=3.97..18203.87 rows=1 width=54) (actual time=453.633..606.958 rows=5 loops=3)
                           ->  Nested Loop  (cost=3.84..18203.70 rows=1 width=58) (actual time=453.560..606.926 rows=16 loops=3)
                                 ->  Nested Loop  (cost=3.42..18203.25 rows=1 width=43) (actual time=453.531..606.664 rows=32 loops=3)
                                       Join Filter: (t.id = mc.movie_id)
                                       ->  Nested Loop  (cost=2.99..18202.60 rows=1 width=31) (actual time=453.489..606.580 rows=10 loops=3)
                                             ->  Nested Loop  (cost=2.86..18202.37 rows=1 width=35) (actual time=47.404..606.527 rows=22 loops=3)
                                                   ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=10) (actual time=0.130..106.990 rows=153308 loops=3)
                                                         Hash Cond: (miidx.info_type_id = it.id)
                                                         ->  Parallel Seq Scan on movie_info_idx miidx  (cost=0.00..13685.15 rows=575015 width=14) (actual time=0.020..41.249 rows=460012 loops=3)
                                                         ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.027..0.027 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.021..0.023 rows=1 loops=3)
                                                                     Filter: ((info)::text = 'rating'::text)
                                                                     Rows Removed by Filter: 112
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.58 rows=1 width=25) (actual time=0.003..0.003 rows=0 loops=459925)
                                                         Index Cond: (id = miidx.movie_id)
                                                         Filter: (((title)::text <> ''::text) AND (((title)::text ~~ 'Champion%'::text) OR ((title)::text ~~ 'Loser%'::text)))
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using kind_type_pkey on kind_type kt  (cost=0.13..0.18 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=66)
                                                   Index Cond: (id = t.kind_id)
                                                   Filter: ((kind)::text = 'movie'::text)
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.59 rows=5 width=12) (actual time=0.006..0.008 rows=3 loops=29)
                                             Index Cond: (movie_id = miidx.movie_id)
                                 ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.008..0.008 rows=0 loops=95)
                                       Index Cond: (id = mc.company_id)
                                       Filter: ((country_code)::text = '[us]'::text)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=47)
                                 Index Cond: (id = mc.company_type_id)
                                 Filter: ((kind)::text = 'production companies'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.48 rows=42 width=8) (actual time=0.009..0.026 rows=16 loops=14)
                           Index Cond: (movie_id = mc.movie_id)
               ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=218)
                     Index Cond: (id = mi.info_type_id)
                     Filter: ((info)::text = 'release dates'::text)
                     Rows Removed by Filter: 1
 Planning Time: 10.668 ms
 Execution Time: 616.323 ms
(47 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=20720.69..20720.70 rows=1 width=96) (actual time=2030.629..2030.629 rows=1 loops=1)
   ->  Gather  (cost=20720.46..20720.67 rows=2 width=96) (actual time=2030.581..2035.064 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=19720.46..19720.47 rows=1 width=96) (actual time=2027.619..2027.620 rows=1 loops=3)
               ->  Hash Join  (cost=8.73..19719.76 rows=94 width=42) (actual time=265.288..1987.238 rows=223463 loops=3)
                     Hash Cond: (mi.info_type_id = it2.id)
                     ->  Nested Loop  (cost=6.30..19688.31 rows=10660 width=46) (actual time=265.173..1872.772 rows=1438861 loops=3)
                           ->  Nested Loop  (cost=5.87..19055.86 rows=331 width=54) (actual time=265.144..1165.493 rows=29098 loops=3)
                                 ->  Hash Join  (cost=5.45..18649.93 rows=911 width=39) (actual time=265.092..878.014 rows=100870 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Nested Loop  (cost=4.39..18629.17 rows=3643 width=43) (actual time=265.064..846.411 rows=257695 loops=3)
                                             ->  Hash Join  (cost=3.96..18186.75 rows=727 width=31) (actual time=265.015..596.148 rows=69960 loops=3)
                                                   Hash Cond: (t.kind_id = kt.id)
                                                   ->  Nested Loop  (cost=2.86..18164.20 rows=5089 width=35) (actual time=0.094..575.861 rows=153308 loops=3)
                                                         ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=10) (actual time=0.049..111.504 rows=153308 loops=3)
                                                               Hash Cond: (miidx.info_type_id = it.id)
                                                               ->  Parallel Seq Scan on movie_info_idx miidx  (cost=0.00..13685.15 rows=575015 width=14) (actual time=0.019..44.153 rows=460012 loops=3)
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'rating'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=25) (actual time=0.003..0.003 rows=1 loops=459925)
                                                               Index Cond: (id = miidx.movie_id)
                                                   ->  Hash  (cost=1.09..1.09 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=3)
                                                               Filter: ((kind)::text = 'movie'::text)
                                                               Rows Removed by Filter: 6
                                             ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.56 rows=5 width=12) (actual time=0.002..0.003 rows=4 loops=209880)
                                                   Index Cond: (movie_id = t.id)
                                       ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.012..0.012 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                 ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=302610)
                                       Index Cond: (id = mc.company_id)
                                       Filter: ((country_code)::text = '[us]'::text)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.49 rows=42 width=8) (actual time=0.004..0.019 rows=49 loops=87293)
                                 Index Cond: (movie_id = t.id)
                     ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.030..0.030 rows=1 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.020..0.026 rows=1 loops=3)
                                 Filter: ((info)::text = 'release dates'::text)
                                 Rows Removed by Filter: 112
 Planning Time: 10.501 ms
 Execution Time: 2035.353 ms
(50 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7380.25..7380.26 rows=1 width=64) (actual time=424.259..424.259 rows=1 loops=1)
   ->  Nested Loop  (cost=8.04..7380.24 rows=1 width=23) (actual time=16.700..424.028 rows=761 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         Rows Removed by Join Filter: 117
         ->  Nested Loop  (cost=8.04..7377.82 rows=1 width=27) (actual time=16.693..420.700 rows=878 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=7.61..7375.92 rows=1 width=35) (actual time=16.130..332.900 rows=1147 loops=1)
                     Join Filter: (mi_idx.info_type_id = it2.id)
                     Rows Removed by Join Filter: 2233
                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.012..0.014 rows=1 loops=1)
                           Filter: ((info)::text = 'rating'::text)
                           Rows Removed by Filter: 112
                     ->  Nested Loop  (cost=7.61..7373.39 rows=9 width=39) (actual time=15.721..332.509 rows=3380 loops=1)
                           Join Filter: (t.id = mi_idx.movie_id)
                           ->  Nested Loop  (cost=7.18..7371.79 rows=3 width=25) (actual time=15.690..318.832 rows=1966 loops=1)
                                 Join Filter: (t.kind_id = kt.id)
                                 Rows Removed by Join Filter: 616
                                 ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=1)
                                       Filter: ((kind)::text = 'movie'::text)
                                       Rows Removed by Filter: 6
                                 ->  Nested Loop  (cost=7.18..7370.44 rows=21 width=29) (actual time=4.820..318.416 rows=2582 loops=1)
                                       ->  Nested Loop  (cost=6.75..7304.56 rows=135 width=4) (actual time=4.556..144.328 rows=37091 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.193..20.977 rows=3 loops=1)
                                                   Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                   Rows Removed by Filter: 134167
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1082.76 rows=299 width=8) (actual time=3.385..39.656 rows=12364 loops=3)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=26312
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.855..1.855 rows=12364 loops=3)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.004..0.004 rows=0 loops=37091)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: (production_year > 2010)
                                             Rows Removed by Filter: 1
                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=14) (actual time=0.006..0.006 rows=2 loops=1966)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((info)::text < '8.5'::text)
                                 Rows Removed by Filter: 0
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.065..0.076 rows=1 loops=1147)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,USA,American}'::text[]))
                     Rows Removed by Filter: 69
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=878)
               Filter: ((info)::text = 'countries'::text)
               Rows Removed by Filter: 21
 Planning Time: 6.600 ms
 Execution Time: 424.425 ms
(47 rows)

SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4867.25..4867.26 rows=1 width=64) (actual time=187.140..187.141 rows=1 loops=1)
   ->  Nested Loop  (cost=8.04..4867.24 rows=1 width=23) (actual time=125.548..187.131 rows=1 loops=1)
         Join Filter: (t.kind_id = kt.id)
         Rows Removed by Join Filter: 1
         ->  Nested Loop  (cost=8.04..4866.14 rows=1 width=27) (actual time=8.417..187.113 rows=2 loops=1)
               Join Filter: (mi_idx.info_type_id = it2.id)
               Rows Removed by Join Filter: 1
               ->  Nested Loop  (cost=8.04..4863.72 rows=1 width=31) (actual time=8.397..187.084 rows=3 loops=1)
                     Join Filter: (t.id = mi_idx.movie_id)
                     ->  Nested Loop  (cost=7.61..4863.21 rows=1 width=33) (actual time=8.377..186.992 rows=8 loops=1)
                           Join Filter: (mi.info_type_id = it1.id)
                           ->  Nested Loop  (cost=7.61..4860.78 rows=1 width=37) (actual time=8.371..186.957 rows=8 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=7.18..4858.88 rows=1 width=29) (actual time=8.231..186.223 rows=15 loops=1)
                                       ->  Nested Loop  (cost=6.75..4825.68 rows=67 width=4) (actual time=6.265..84.240 rows=19528 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=2 width=4) (actual time=1.172..16.495 rows=1 loops=1)
                                                   Filter: ((keyword)::text = ANY ('{murder,murder-in-title}'::text[]))
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1096.79 rows=299 width=8) (actual time=5.089..65.602 rows=19528 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=12389
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=2.912..2.912 rows=19528 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.50 rows=1 width=25) (actual time=0.005..0.005 rows=0 loops=19528)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: ((production_year > 2010) AND (((title)::text ~~ '%murder%'::text) OR ((title)::text ~~ '%Murder%'::text) OR ((title)::text ~~ '%Mord%'::text)))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.045..0.048 rows=1 loops=15)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,USA,American}'::text[]))
                                       Rows Removed by Filter: 12
                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=8)
                                 Filter: ((info)::text = 'countries'::text)
                                 Rows Removed by Filter: 7
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=14) (actual time=0.011..0.011 rows=0 loops=8)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((info)::text > '6.0'::text)
                           Rows Removed by Filter: 1
               ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=3)
                     Filter: ((info)::text = 'rating'::text)
                     Rows Removed by Filter: 104
         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=2)
               Filter: ((kind)::text = 'movie'::text)
               Rows Removed by Filter: 3
 Planning Time: 6.594 ms
 Execution Time: 187.367 ms
(46 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7388.39..7388.40 rows=1 width=64) (actual time=763.024..763.024 rows=1 loops=1)
   ->  Nested Loop  (cost=8.04..7388.39 rows=1 width=23) (actual time=4.711..762.086 rows=4115 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         Rows Removed by Join Filter: 594
         ->  Nested Loop  (cost=8.04..7385.96 rows=1 width=27) (actual time=4.706..745.356 rows=4709 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=7.61..7384.06 rows=1 width=35) (actual time=4.640..358.531 rows=5949 loops=1)
                     Join Filter: (mi_idx.info_type_id = it2.id)
                     Rows Removed by Join Filter: 11839
                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.011..0.013 rows=1 loops=1)
                           Filter: ((info)::text = 'rating'::text)
                           Rows Removed by Filter: 112
                     ->  Nested Loop  (cost=7.61..7381.10 rows=44 width=39) (actual time=4.624..356.667 rows=17788 loops=1)
                           Join Filter: (t.id = mi_idx.movie_id)
                           ->  Nested Loop  (cost=7.18..7373.07 rows=15 width=25) (actual time=4.603..310.085 rows=8073 loops=1)
                                 Join Filter: (t.kind_id = kt.id)
                                 Rows Removed by Join Filter: 4332
                                 ->  Nested Loop  (cost=7.18..7370.44 rows=54 width=29) (actual time=4.538..306.771 rows=9739 loops=1)
                                       ->  Nested Loop  (cost=6.75..7304.56 rows=135 width=4) (actual time=4.512..137.378 rows=37091 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.178..21.431 rows=3 loops=1)
                                                   Filter: ((keyword IS NOT NULL) AND ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[])))
                                                   Rows Removed by Filter: 134167
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1082.76 rows=299 width=8) (actual time=3.372..37.190 rows=12364 loops=3)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=26312
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.844..1.844 rows=12364 loops=3)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.004..0.004 rows=0 loops=37091)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: (production_year > 2005)
                                             Rows Removed by Filter: 1
                                 ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=9739)
                                       ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.010..0.012 rows=2 loops=1)
                                             Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                             Rows Removed by Filter: 5
                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=14) (actual time=0.005..0.005 rows=2 loops=8073)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((info)::text < '8.5'::text)
                                 Rows Removed by Filter: 0
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.056..0.065 rows=1 loops=5949)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                     Rows Removed by Filter: 71
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=4709)
               Filter: ((info)::text = 'countries'::text)
               Rows Removed by Filter: 20
 Planning Time: 6.399 ms
 Execution Time: 763.196 ms
(48 rows)

SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=51520.30..51520.31 rows=1 width=64) (actual time=329.553..329.553 rows=1 loops=1)
   ->  Gather  (cost=51520.08..51520.29 rows=2 width=64) (actual time=329.106..333.734 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=50520.08..50520.09 rows=1 width=64) (actual time=326.321..326.321 rows=1 loops=3)
               ->  Nested Loop  (cost=5354.18..50520.04 rows=7 width=59) (actual time=84.459..326.287 rows=109 loops=3)
                     ->  Nested Loop  (cost=5353.76..50516.97 rows=7 width=63) (actual time=84.420..325.689 rows=109 loops=3)
                           ->  Nested Loop  (cost=5353.33..50515.14 rows=1 width=75) (actual time=35.630..325.444 rows=19 loops=3)
                                 ->  Nested Loop  (cost=5353.19..50514.85 rows=1 width=79) (actual time=35.602..325.372 rows=19 loops=3)
                                       ->  Nested Loop  (cost=5353.06..50514.70 rows=1 width=83) (actual time=35.571..325.299 rows=19 loops=3)
                                             ->  Nested Loop  (cost=5352.62..48271.71 rows=1133 width=33) (actual time=25.567..239.044 rows=1711 loops=3)
                                                   ->  Nested Loop  (cost=5352.19..46344.74 rows=2083 width=12) (actual time=25.486..214.900 rows=4566 loops=3)
                                                         ->  Parallel Hash Join  (cost=5351.77..40470.46 rows=3000 width=8) (actual time=24.751..170.384 rows=14612 loops=3)
                                                               Hash Cond: (mc.company_id = cn.id)
                                                               ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..35097.06 rows=8243 width=12) (actual time=0.023..139.494 rows=20555 loops=3)
                                                                     Filter: (((note)::text ~~ '%(200%)%'::text) AND ((note)::text ~~ '%(worldwide)%'::text))
                                                                     Rows Removed by Filter: 849155
                                                               ->  Parallel Hash  (cost=4722.92..4722.92 rows=50308 width=4) (actual time=24.188..24.188 rows=28281 loops=3)
                                                                     Buckets: 131072  Batches: 1  Memory Usage: 4384kB
                                                                     ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=50308 width=4) (actual time=0.021..17.157 rows=28281 loops=3)
                                                                           Filter: ((country_code)::text = '[us]'::text)
                                                                           Rows Removed by Filter: 50051
                                                         ->  Index Only Scan using movie_id_aka_title on aka_title at  (cost=0.42..1.93 rows=3 width=4) (actual time=0.002..0.003 rows=0 loops=43837)
                                                               Index Cond: (movie_id = mc.movie_id)
                                                               Heap Fetches: 13699
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.93 rows=1 width=21) (actual time=0.005..0.005 rows=0 loops=13699)
                                                         Index Cond: (id = at.movie_id)
                                                         Filter: (production_year > 2000)
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.97 rows=1 width=50) (actual time=0.050..0.050 rows=0 loops=5134)
                                                   Index Cond: (movie_id = t.id)
                                                   Filter: (((note)::text ~~ '%internet%'::text) AND ((info)::text ~~ 'USA:% 200%'::text))
                                                   Rows Removed by Filter: 72
                                       ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=57)
                                             Index Cond: (id = mc.company_type_id)
                                             Heap Fetches: 57
                                 ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.21 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=57)
                                       Index Cond: (id = mi.info_type_id)
                                       Filter: ((info)::text = 'release dates'::text)
                           ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.36 rows=47 width=8) (actual time=0.010..0.012 rows=6 loops=57)
                                 Index Cond: (movie_id = t.id)
                     ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=328)
                           Index Cond: (id = mk.keyword_id)
                           Heap Fetches: 328
 Planning Time: 14.937 ms
 Execution Time: 333.964 ms
(46 rows)

SET
                                                                                                      QUERY PLAN                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=6425.67..6425.68 rows=1 width=64) (actual time=31.327..31.328 rows=1 loops=1)
   ->  Gather  (cost=6425.55..6425.66 rows=1 width=64) (actual time=31.257..32.522 rows=2 loops=1)
         Workers Planned: 1
         Workers Launched: 1
         ->  Partial Aggregate  (cost=5425.55..5425.56 rows=1 width=64) (actual time=29.239..29.239 rows=1 loops=2)
               ->  Nested Loop  (cost=2.84..5425.53 rows=5 width=59) (actual time=21.337..29.229 rows=18 loops=2)
                     ->  Nested Loop  (cost=2.42..5423.34 rows=5 width=63) (actual time=21.327..29.042 rows=18 loops=2)
                           ->  Nested Loop  (cost=1.99..5421.40 rows=1 width=75) (actual time=18.692..29.007 rows=2 loops=2)
                                 ->  Nested Loop  (cost=1.85..5421.11 rows=1 width=79) (actual time=18.688..29.000 rows=2 loops=2)
                                       ->  Nested Loop  (cost=1.41..5418.58 rows=1 width=29) (actual time=16.756..28.050 rows=13 loops=2)
                                             ->  Nested Loop  (cost=0.98..5417.65 rows=1 width=8) (actual time=16.738..27.799 rows=14 loops=2)
                                                   ->  Nested Loop  (cost=0.85..5417.49 rows=1 width=12) (actual time=16.723..27.765 rows=14 loops=2)
                                                         ->  Nested Loop  (cost=0.43..5415.54 rows=1 width=8) (actual time=16.383..26.899 rows=139 loops=2)
                                                               ->  Parallel Seq Scan on company_name cn  (cost=0.00..5068.50 rows=1 width=4) (actual time=16.351..22.910 rows=0 loops=2)
                                                                     Filter: (((country_code)::text = '[us]'::text) AND ((name)::text = 'YouTube'::text))
                                                                     Rows Removed by Filter: 117498
                                                               ->  Index Scan using company_id_movie_companies on movie_companies mc  (cost=0.43..347.02 rows=1 width=12) (actual time=0.059..7.942 rows=278 loops=1)
                                                                     Index Cond: (company_id = cn.id)
                                                                     Filter: (((note)::text ~~ '%(200%)%'::text) AND ((note)::text ~~ '%(worldwide)%'::text))
                                                                     Rows Removed by Filter: 1180
                                                         ->  Index Only Scan using movie_id_aka_title on aka_title at  (cost=0.42..1.93 rows=3 width=4) (actual time=0.006..0.006 rows=0 loops=278)
                                                               Index Cond: (movie_id = mc.movie_id)
                                                               Heap Fetches: 27
                                                   ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=27)
                                                         Index Cond: (id = mc.company_type_id)
                                                         Heap Fetches: 27
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..0.93 rows=1 width=21) (actual time=0.018..0.018 rows=1 loops=27)
                                                   Index Cond: (id = at.movie_id)
                                                   Filter: ((production_year >= 2005) AND (production_year <= 2010))
                                                   Rows Removed by Filter: 0
                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.53 rows=1 width=50) (actual time=0.069..0.073 rows=0 loops=26)
                                             Index Cond: (movie_id = t.id)
                                             Filter: (((note)::text ~~ '%internet%'::text) AND ((info)::text ~~ 'USA:% 200%'::text))
                                             Rows Removed by Filter: 19
                                 ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.21 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=3)
                                       Index Cond: (id = mi.info_type_id)
                                       Filter: ((info)::text = 'release dates'::text)
                           ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.46 rows=47 width=8) (actual time=0.019..0.021 rows=12 loops=3)
                                 Index Cond: (movie_id = t.id)
                     ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=37)
                           Index Cond: (id = mk.keyword_id)
                           Heap Fetches: 37
 Planning Time: 15.279 ms
 Execution Time: 32.738 ms
(44 rows)

SET
                                                                                                          QUERY PLAN                                                                                                          
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=271194.30..271194.31 rows=1 width=64) (actual time=594.325..594.325 rows=1 loops=1)
   ->  Gather  (cost=271194.08..271194.29 rows=2 width=64) (actual time=594.195..598.456 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=270194.08..270194.09 rows=1 width=64) (actual time=591.510..591.510 rows=1 loops=3)
               ->  Nested Loop  (cost=5.11..270193.85 rows=46 width=59) (actual time=149.798..591.372 rows=757 loops=3)
                     Join Filter: (t.id = at.movie_id)
                     ->  Nested Loop  (cost=4.69..270184.51 rows=18 width=75) (actual time=145.518..586.582 rows=2655 loops=3)
                           ->  Nested Loop  (cost=4.27..270176.61 rows=18 width=79) (actual time=145.481..578.255 rows=2655 loops=3)
                                 ->  Nested Loop  (cost=3.84..270174.80 rows=1 width=71) (actual time=145.317..571.637 rows=882 loops=3)
                                       ->  Nested Loop  (cost=3.71..270174.65 rows=1 width=75) (actual time=145.286..570.345 rows=882 loops=3)
                                             ->  Nested Loop  (cost=3.29..270172.87 rows=4 width=79) (actual time=145.188..564.163 rows=961 loops=3)
                                                   ->  Nested Loop  (cost=2.86..270172.24 rows=1 width=67) (actual time=145.146..554.873 rows=594 loops=3)
                                                         ->  Hash Join  (cost=2.43..270163.87 rows=1 width=46) (actual time=145.100..546.268 rows=594 loops=3)
                                                               Hash Cond: (mi.info_type_id = it1.id)
                                                               ->  Parallel Seq Scan on movie_info mi  (cost=0.00..270161.12 rows=119 width=50) (actual time=144.969..545.965 rows=594 loops=3)
                                                                     Filter: ((info IS NOT NULL) AND ((note)::text ~~ '%internet%'::text) AND (((info)::text ~~ 'USA:% 199%'::text) OR ((info)::text ~~ 'USA:% 200%'::text)))
                                                                     Rows Removed by Filter: 4944646
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.028..0.029 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.017..0.023 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'release dates'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..8.37 rows=1 width=21) (actual time=0.014..0.014 rows=1 loops=1783)
                                                               Index Cond: (id = mi.movie_id)
                                                               Filter: (production_year > 1990)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.58 rows=5 width=12) (actual time=0.012..0.015 rows=2 loops=1782)
                                                         Index Cond: (movie_id = t.id)
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=2884)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((country_code)::text = '[us]'::text)
                                                   Rows Removed by Filter: 0
                                       ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=2647)
                                             Index Cond: (id = mc.company_type_id)
                                             Heap Fetches: 2647
                                 ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.34 rows=47 width=8) (actual time=0.006..0.007 rows=3 loops=2647)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=7964)
                                 Index Cond: (id = mk.keyword_id)
                                 Heap Fetches: 7964
                     ->  Index Only Scan using movie_id_aka_title on aka_title at  (cost=0.42..0.48 rows=3 width=4) (actual time=0.002..0.002 rows=0 loops=7964)
                           Index Cond: (movie_id = mk.movie_id)
                           Heap Fetches: 2271
 Planning Time: 15.124 ms
 Execution Time: 598.711 ms
(46 rows)

SET
                                                                                               QUERY PLAN                                                                                               
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=241312.72..241312.73 rows=1 width=64) (actual time=668.830..668.830 rows=1 loops=1)
   ->  Gather  (cost=241312.50..241312.71 rows=2 width=64) (actual time=668.710..674.917 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=240312.50..240312.51 rows=1 width=64) (actual time=665.971..665.971 rows=1 loops=3)
               ->  Nested Loop  (cost=6.07..240304.29 rows=1642 width=38) (actual time=142.464..665.388 rows=3782 loops=3)
                     Join Filter: (t.id = at.movie_id)
                     ->  Nested Loop  (cost=5.65..239970.15 rows=644 width=33) (actual time=135.695..651.078 rows=8521 loops=3)
                           ->  Nested Loop  (cost=5.23..239687.65 rows=644 width=37) (actual time=135.650..630.366 rows=8521 loops=3)
                                 ->  Hash Join  (cost=4.80..239595.35 rows=51 width=29) (actual time=135.441..611.840 rows=3286 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Nested Loop  (cost=3.71..239593.98 rows=51 width=33) (actual time=135.353..610.922 rows=3286 loops=3)
                                             ->  Nested Loop  (cost=3.29..239532.04 rows=139 width=37) (actual time=135.323..589.969 rows=4792 loops=3)
                                                   ->  Nested Loop  (cost=2.86..239514.48 rows=28 width=25) (actual time=135.214..555.130 rows=3554 loops=3)
                                                         ->  Hash Join  (cost=2.43..239268.23 rows=40 width=4) (actual time=135.165..519.953 rows=3560 loops=3)
                                                               Hash Cond: (mi.info_type_id = it1.id)
                                                               ->  Parallel Seq Scan on movie_info mi  (cost=0.00..239253.38 rows=4567 width=8) (actual time=20.250..519.023 rows=3603 loops=3)
                                                                     Filter: ((note)::text ~~ '%internet%'::text)
                                                                     Rows Removed by Filter: 4941637
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.028..0.028 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.017..0.023 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'release dates'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..6.16 rows=1 width=21) (actual time=0.009..0.009 rows=1 loops=10679)
                                                               Index Cond: (id = mi.movie_id)
                                                               Filter: (production_year > 1990)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.58 rows=5 width=12) (actual time=0.008..0.009 rows=1 loops=10662)
                                                         Index Cond: (movie_id = t.id)
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=14377)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((country_code)::text = '[us]'::text)
                                                   Rows Removed by Filter: 0
                                       ->  Hash  (cost=1.04..1.04 rows=4 width=4) (actual time=0.022..0.023 rows=4 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.015..0.016 rows=4 loops=3)
                                 ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.34 rows=47 width=8) (actual time=0.005..0.005 rows=3 loops=9857)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=25564)
                                 Index Cond: (id = mk.keyword_id)
                                 Heap Fetches: 25564
                     ->  Index Scan using movie_id_aka_title on aka_title at  (cost=0.42..0.48 rows=3 width=25) (actual time=0.001..0.001 rows=0 loops=25564)
                           Index Cond: (movie_id = mk.movie_id)
 Planning Time: 15.097 ms
 Execution Time: 675.183 ms
(46 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3786.91..3786.92 rows=1 width=64) (actual time=269.654..269.654 rows=1 loops=1)
   ->  Nested Loop  (cost=9.45..3786.52 rows=79 width=33) (actual time=16.895..269.574 rows=385 loops=1)
         Join Filter: (n.id = an.person_id)
         ->  Nested Loop  (cost=9.02..3770.95 rows=32 width=25) (actual time=16.864..267.331 rows=323 loops=1)
               ->  Nested Loop  (cost=8.59..3756.39 rows=32 width=21) (actual time=16.831..264.628 rows=323 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=8.03..3752.42 rows=2 width=29) (actual time=16.803..263.231 rows=25 loops=1)
                           ->  Nested Loop  (cost=7.61..3750.19 rows=5 width=33) (actual time=16.618..262.879 rows=54 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.18..3749.59 rows=1 width=25) (actual time=13.840..262.206 rows=146 loops=1)
                                       ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.707..76.467 rows=41840 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.651..11.880 rows=1 loops=1)
                                                   Filter: ((keyword)::text = 'character-name-in-title'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.053..60.228 rows=41840 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=11541
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=3.998..3.998 rows=41840 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.004..0.004 rows=0 loops=41840)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: ((episode_nr >= 50) AND (episode_nr < 100))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.004..0.004 rows=0 loops=146)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.006..0.006 rows=0 loops=54)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.014..0.053 rows=13 loops=25)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=323)
                     Index Cond: (id = ci.person_id)
                     Heap Fetches: 323
         ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.46 rows=2 width=20) (actual time=0.006..0.007 rows=1 loops=323)
               Index Cond: (person_id = ci.person_id)
 Planning Time: 8.420 ms
 Execution Time: 269.904 ms
(38 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=5116.99..5117.00 rows=1 width=64) (actual time=21473.398..21473.398 rows=1 loops=1)
   ->  Nested Loop  (cost=9.45..5102.20 rows=2957 width=33) (actual time=7.273..20923.568 rows=3710592 loops=1)
         Join Filter: (n.id = an.person_id)
         ->  Nested Loop  (cost=9.02..4515.45 rows=1206 width=25) (actual time=7.242..13373.541 rows=2832555 loops=1)
               ->  Nested Loop  (cost=8.59..3966.84 rows=1206 width=21) (actual time=7.207..4710.105 rows=2832555 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=8.03..3845.67 rows=61 width=29) (actual time=6.813..1125.034 rows=68316 loops=1)
                           ->  Nested Loop  (cost=7.61..3769.92 rows=170 width=33) (actual time=6.755..526.595 rows=148552 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.18..3749.42 rows=34 width=25) (actual time=6.702..308.998 rows=41840 loops=1)
                                       ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.684..85.051 rows=41840 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.669..11.692 rows=1 loops=1)
                                                   Filter: ((keyword)::text = 'character-name-in-title'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.012..66.044 rows=41840 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=11541
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=3.952..3.952 rows=41840 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.005..0.005 rows=1 loops=41840)
                                             Index Cond: (id = mk.movie_id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.003..0.004 rows=4 loops=41840)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=148552)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.004..0.046 rows=41 loops=68316)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=2832555)
                     Index Cond: (id = ci.person_id)
                     Heap Fetches: 2832555
         ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.46 rows=2 width=20) (actual time=0.002..0.002 rows=1 loops=2832555)
               Index Cond: (person_id = ci.person_id)
 Planning Time: 8.295 ms
 Execution Time: 21473.681 ms
(36 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4258.35..4258.36 rows=1 width=64) (actual time=1845.056..1845.056 rows=1 loops=1)
   ->  Nested Loop  (cost=9.45..4252.86 rows=1097 width=33) (actual time=7.325..1796.121 rows=319932 loops=1)
         Join Filter: (n.id = an.person_id)
         ->  Nested Loop  (cost=9.02..4034.90 rows=448 width=25) (actual time=7.296..1199.375 rows=221609 loops=1)
               ->  Nested Loop  (cost=8.59..3831.10 rows=448 width=21) (actual time=7.263..560.754 rows=221609 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=8.03..3785.41 rows=23 width=29) (actual time=7.236..277.753 rows=8538 loops=1)
                           ->  Nested Loop  (cost=7.61..3757.34 rows=63 width=33) (actual time=6.853..248.614 rows=11406 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.18..3749.50 rows=13 width=25) (actual time=6.767..223.568 rows=6926 loops=1)
                                       ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.749..69.308 rows=41840 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.662..11.754 rows=1 loops=1)
                                                   Filter: ((keyword)::text = 'character-name-in-title'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.083..52.786 rows=41840 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=11541
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=4.033..4.033 rows=41840 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.003..0.003 rows=0 loops=41840)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: (episode_nr < 100)
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.002..0.003 rows=2 loops=6926)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=11406)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.004..0.029 rows=26 loops=8538)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=221609)
                     Index Cond: (id = ci.person_id)
                     Heap Fetches: 221609
         ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.46 rows=2 width=20) (actual time=0.002..0.002 rows=1 loops=221609)
               Index Cond: (person_id = ci.person_id)
 Planning Time: 8.397 ms
 Execution Time: 1845.313 ms
(38 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4117.25..4117.26 rows=1 width=64) (actual time=1485.417..1485.418 rows=1 loops=1)
   ->  Nested Loop  (cost=9.45..4113.26 rows=798 width=33) (actual time=7.233..1447.746 rows=249455 loops=1)
         Join Filter: (n.id = an.person_id)
         ->  Nested Loop  (cost=9.02..3955.14 rows=325 width=25) (actual time=7.204..981.794 rows=169273 loops=1)
               ->  Nested Loop  (cost=8.59..3807.29 rows=325 width=21) (actual time=7.173..487.302 rows=169273 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=8.03..3775.51 rows=16 width=29) (actual time=7.147..265.826 rows=6766 loops=1)
                           ->  Nested Loop  (cost=7.61..3755.01 rows=46 width=33) (actual time=6.796..243.587 rows=8661 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.18..3749.59 rows=9 width=25) (actual time=6.710..223.492 rows=5385 loops=1)
                                       ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.692..68.862 rows=41840 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.670..11.666 rows=1 loops=1)
                                                   Filter: ((keyword)::text = 'character-name-in-title'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.019..52.547 rows=41840 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=11541
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=3.960..3.960 rows=41840 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.003..0.003 rows=0 loops=41840)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: ((episode_nr >= 5) AND (episode_nr < 100))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.002..0.003 rows=2 loops=5385)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=8661)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.004..0.029 rows=25 loops=6766)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=169273)
                     Index Cond: (id = ci.person_id)
                     Heap Fetches: 169273
         ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.46 rows=2 width=20) (actual time=0.002..0.002 rows=1 loops=169273)
               Index Cond: (person_id = ci.person_id)
 Planning Time: 8.340 ms
 Execution Time: 1485.666 ms
(38 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4518.95..4518.96 rows=1 width=64) (actual time=12829.905..12829.905 rows=1 loops=1)
   ->  Nested Loop  (cost=9.02..4518.46 rows=97 width=15) (actual time=7.318..12794.341 rows=258289 loops=1)
         ->  Nested Loop  (cost=8.59..3966.84 rows=1206 width=4) (actual time=7.251..4501.112 rows=2832555 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=8.03..3845.67 rows=61 width=12) (actual time=6.854..1062.122 rows=68316 loops=1)
                     ->  Nested Loop  (cost=7.61..3769.92 rows=170 width=16) (actual time=6.790..505.340 rows=148552 loops=1)
                           Join Filter: (t.id = mc.movie_id)
                           ->  Nested Loop  (cost=7.18..3749.42 rows=34 width=8) (actual time=6.734..296.227 rows=41840 loops=1)
                                 ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.717..82.304 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.671..11.753 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.041..63.705 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=3.978..3.978 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=41840)
                                       Index Cond: (id = mk.movie_id)
                                       Heap Fetches: 41840
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.003..0.004 rows=4 loops=41840)
                                 Index Cond: (movie_id = mk.movie_id)
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=148552)
                           Index Cond: (id = mc.company_id)
                           Filter: ((country_code)::text = '[us]'::text)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.004..0.044 rows=41 loops=68316)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.003..0.003 rows=0 loops=2832555)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ 'B%'::text)
               Rows Removed by Filter: 1
 Planning Time: 5.299 ms
 Execution Time: 12830.134 ms
(34 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4395.31..4395.32 rows=1 width=64) (actual time=9145.080..9145.080 rows=1 loops=1)
   ->  Nested Loop  (cost=9.02..4395.14 rows=33 width=15) (actual time=13.527..9137.895 rows=52306 loops=1)
         ->  Nested Loop  (cost=8.60..4380.52 rows=33 width=19) (actual time=13.511..8951.866 rows=52306 loops=1)
               ->  Nested Loop  (cost=8.17..4373.10 rows=13 width=27) (actual time=13.485..8893.418 rows=6642 loops=1)
                     ->  Nested Loop  (cost=7.74..4367.22 rows=13 width=23) (actual time=13.464..8852.024 rows=6642 loops=1)
                           ->  Nested Loop  (cost=7.31..3797.31 rows=1246 width=12) (actual time=6.842..3103.253 rows=1038393 loops=1)
                                 ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.817..79.412 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.679..11.812 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.135..60.354 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=4.086..4.086 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.006..0.069 rows=25 loops=41840)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.005..0.005 rows=0 loops=1038393)
                                 Index Cond: (id = ci.person_id)
                                 Filter: ((name)::text ~~ 'Z%'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.45 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=6642)
                           Index Cond: (id = ci.movie_id)
                           Heap Fetches: 6642
               ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.52 rows=5 width=8) (actual time=0.005..0.007 rows=8 loops=6642)
                     Index Cond: (movie_id = ci.movie_id)
         ->  Index Only Scan using company_name_pkey on company_name cn  (cost=0.42..0.44 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=52306)
               Index Cond: (id = mc.company_id)
               Heap Fetches: 52306
 Planning Time: 5.321 ms
 Execution Time: 9145.313 ms
(31 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4368.70..4368.71 rows=1 width=64) (actual time=8882.949..8882.949 rows=1 loops=1)
   ->  Nested Loop  (cost=9.02..4368.69 rows=1 width=15) (actual time=95.078..8882.517 rows=1918 loops=1)
         ->  Nested Loop  (cost=8.59..4368.24 rows=1 width=27) (actual time=95.056..8877.192 rows=1918 loops=1)
               ->  Nested Loop  (cost=8.17..4367.80 rows=1 width=31) (actual time=95.039..8866.198 rows=1918 loops=1)
                     ->  Nested Loop  (cost=7.74..4367.23 rows=1 width=23) (actual time=95.022..8862.531 rows=250 loops=1)
                           ->  Nested Loop  (cost=7.31..3797.31 rows=1246 width=12) (actual time=6.711..3112.345 rows=1038393 loops=1)
                                 ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.685..79.841 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.660..11.617 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.019..60.491 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=3.954..3.954 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.006..0.069 rows=25 loops=41840)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.005..0.005 rows=0 loops=1038393)
                                 Index Cond: (id = ci.person_id)
                                 Filter: ((name)::text ~~ 'X%'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.52 rows=5 width=8) (actual time=0.009..0.013 rows=8 loops=250)
                           Index Cond: (movie_id = ci.movie_id)
               ->  Index Only Scan using company_name_pkey on company_name cn  (cost=0.42..0.44 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=1918)
                     Index Cond: (id = mc.company_id)
                     Heap Fetches: 1918
         ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.45 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1918)
               Index Cond: (id = ci.movie_id)
               Heap Fetches: 1918
 Planning Time: 5.297 ms
 Execution Time: 8883.181 ms
(31 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4368.69..4368.70 rows=1 width=32) (actual time=8974.686..8974.686 rows=1 loops=1)
   ->  Nested Loop  (cost=9.02..4368.69 rows=1 width=15) (actual time=59.048..8972.754 rows=11538 loops=1)
         ->  Nested Loop  (cost=8.59..4368.24 rows=1 width=27) (actual time=59.022..8942.057 rows=11538 loops=1)
               ->  Nested Loop  (cost=8.17..4367.80 rows=1 width=31) (actual time=59.001..8885.216 rows=11538 loops=1)
                     ->  Nested Loop  (cost=7.74..4367.23 rows=1 width=23) (actual time=58.979..8864.864 rows=1972 loops=1)
                           ->  Nested Loop  (cost=7.31..3797.31 rows=1246 width=12) (actual time=6.686..3091.664 rows=1038393 loops=1)
                                 ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.661..78.868 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.662..11.678 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=5.996..59.962 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=3.932..3.932 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.006..0.068 rows=25 loops=41840)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.005..0.005 rows=0 loops=1038393)
                                 Index Cond: (id = ci.person_id)
                                 Filter: ((name)::text ~~ '%Bert%'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.52 rows=5 width=8) (actual time=0.006..0.009 rows=6 loops=1972)
                           Index Cond: (movie_id = ci.movie_id)
               ->  Index Only Scan using company_name_pkey on company_name cn  (cost=0.42..0.44 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=11538)
                     Index Cond: (id = mc.company_id)
                     Heap Fetches: 11538
         ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.45 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=11538)
               Index Cond: (id = ci.movie_id)
               Heap Fetches: 11538
 Planning Time: 5.267 ms
 Execution Time: 8974.915 ms
(31 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4518.46..4518.47 rows=1 width=32) (actual time=12838.416..12838.416 rows=1 loops=1)
   ->  Nested Loop  (cost=9.02..4515.45 rows=1206 width=15) (actual time=7.257..12512.555 rows=2832555 loops=1)
         ->  Nested Loop  (cost=8.59..3966.84 rows=1206 width=4) (actual time=7.223..4545.774 rows=2832555 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=8.03..3845.67 rows=61 width=12) (actual time=6.825..1053.714 rows=68316 loops=1)
                     ->  Nested Loop  (cost=7.61..3769.92 rows=170 width=16) (actual time=6.766..502.586 rows=148552 loops=1)
                           Join Filter: (t.id = mc.movie_id)
                           ->  Nested Loop  (cost=7.18..3749.42 rows=34 width=8) (actual time=6.713..293.859 rows=41840 loops=1)
                                 ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.694..82.248 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.663..11.737 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.027..63.601 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=3.970..3.970 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=41840)
                                       Index Cond: (id = mk.movie_id)
                                       Heap Fetches: 41840
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.003..0.004 rows=4 loops=41840)
                                 Index Cond: (movie_id = mk.movie_id)
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=148552)
                           Index Cond: (id = mc.company_id)
                           Filter: ((country_code)::text = '[us]'::text)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.004..0.045 rows=41 loops=68316)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=19) (actual time=0.003..0.003 rows=1 loops=2832555)
               Index Cond: (id = ci.person_id)
 Planning Time: 5.262 ms
 Execution Time: 12838.664 ms
(32 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4629.56..4629.57 rows=1 width=32) (actual time=12066.806..12066.806 rows=1 loops=1)
   ->  Nested Loop  (cost=9.02..4628.64 rows=368 width=15) (actual time=8.612..11952.776 rows=1113120 loops=1)
         ->  Nested Loop  (cost=8.60..4465.59 rows=368 width=19) (actual time=8.583..10015.182 rows=1113120 loops=1)
               ->  Nested Loop  (cost=8.17..4386.88 rows=138 width=27) (actual time=6.826..9370.802 rows=149494 loops=1)
                     ->  Nested Loop  (cost=7.74..3816.96 rows=1246 width=16) (actual time=6.798..3431.207 rows=1038393 loops=1)
                           Join Filter: (t.id = ci.movie_id)
                           ->  Nested Loop  (cost=7.18..3749.42 rows=34 width=8) (actual time=6.770..292.165 rows=41840 loops=1)
                                 ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.750..81.217 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.663..11.621 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.085..62.097 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=4.017..4.017 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=41840)
                                       Index Cond: (id = mk.movie_id)
                                       Heap Fetches: 41840
                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.006..0.070 rows=25 loops=41840)
                                 Index Cond: (movie_id = mk.movie_id)
                     ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.006..0.006 rows=0 loops=1038393)
                           Index Cond: (id = ci.person_id)
                           Filter: ((name)::text ~~ '%B%'::text)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.52 rows=5 width=8) (actual time=0.002..0.003 rows=7 loops=149494)
                     Index Cond: (movie_id = ci.movie_id)
         ->  Index Only Scan using company_name_pkey on company_name cn  (cost=0.42..0.44 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1113120)
               Index Cond: (id = mc.company_id)
               Heap Fetches: 1113120
 Planning Time: 5.252 ms
 Execution Time: 12067.033 ms
(32 rows)

SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=111123.79..111123.80 rows=1 width=96) (actual time=4595.823..4595.823 rows=1 loops=1)
   ->  Nested Loop  (cost=1006.71..111123.78 rows=1 width=65) (actual time=28.783..4595.492 rows=410 loops=1)
         ->  Gather  (cost=1006.28..111123.32 rows=1 width=60) (actual time=28.752..4595.296 rows=410 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Nested Loop  (cost=6.28..110123.22 rows=1 width=60) (actual time=165.617..4591.017 rows=137 loops=3)
                     ->  Nested Loop  (cost=5.85..108160.12 rows=3320 width=64) (actual time=1.146..4252.721 rows=35780 loops=3)
                           ->  Hash Join  (cost=5.29..74077.91 rows=1448 width=56) (actual time=0.527..1903.023 rows=15144 loops=3)
                                 Hash Cond: (mi.info_type_id = it1.id)
                                 ->  Nested Loop  (cost=2.86..73629.77 rows=163660 width=60) (actual time=0.091..1754.554 rows=2310111 loops=3)
                                       ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=10) (actual time=0.047..116.193 rows=153308 loops=3)
                                             Hash Cond: (mi_idx.info_type_id = it2.id)
                                             ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=14) (actual time=0.018..44.766 rows=460012 loops=3)
                                             ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.013..0.013 rows=1 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=3)
                                                         Filter: ((info)::text = 'votes'::text)
                                                         Rows Removed by Filter: 112
                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..11.05 rows=42 width=50) (actual time=0.003..0.009 rows=15 loops=459925)
                                             Index Cond: (movie_id = mi_idx.movie_id)
                                 ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.027..0.027 rows=1 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.022..0.023 rows=1 loops=3)
                                             Filter: ((info)::text = 'budget'::text)
                                             Rows Removed by Filter: 112
                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..23.52 rows=2 width=8) (actual time=0.091..0.155 rows=2 loops=45431)
                                 Index Cond: (movie_id = mi.movie_id)
                                 Filter: ((note)::text = ANY ('{(producer),"(executive producer)"}'::text[]))
                                 Rows Removed by Filter: 38
                     ->  Index Scan using name_pkey on name n  (cost=0.43..0.59 rows=1 width=4) (actual time=0.009..0.009 rows=0 loops=107339)
                           Index Cond: (id = ci.person_id)
                           Filter: (((name)::text ~~ '%Tim%'::text) AND ((gender)::text = 'm'::text))
                           Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.46 rows=1 width=21) (actual time=0.010..0.010 rows=1 loops=410)
               Index Cond: (id = mi.movie_id)
 Planning Time: 5.023 ms
 Execution Time: 4600.337 ms
(37 rows)

SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=17505.24..17505.25 rows=1 width=96) (actual time=191.639..191.640 rows=1 loops=1)
   ->  Nested Loop  (cost=1004.43..17505.23 rows=1 width=65) (actual time=102.297..191.617 rows=11 loops=1)
         ->  Nested Loop  (cost=1004.00..17504.55 rows=1 width=69) (actual time=34.585..188.630 rows=268 loops=1)
               ->  Gather  (cost=1003.43..17479.79 rows=1 width=77) (actual time=10.895..141.658 rows=358 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Nested Loop  (cost=3.43..16479.69 rows=1 width=77) (actual time=13.909..170.260 rows=119 loops=3)
                           ->  Nested Loop  (cost=3.29..16478.37 rows=8 width=81) (actual time=13.903..170.041 rows=119 loops=3)
                                 ->  Nested Loop  (cost=2.86..15808.49 rows=58 width=31) (actual time=0.804..106.245 rows=2051 loops=3)
                                       ->  Hash Join  (cost=2.43..15182.64 rows=187 width=10) (actual time=0.109..56.317 rows=5283 loops=3)
                                             Hash Cond: (mi_idx.info_type_id = it2.id)
                                             ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..15122.68 rows=21125 width=14) (actual time=0.027..54.251 rows=17543 loops=3)
                                                   Filter: ((info)::text > '8.0'::text)
                                                   Rows Removed by Filter: 442469
                                             ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.023..0.023 rows=1 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.016..0.018 rows=1 loops=3)
                                                         Filter: ((info)::text = 'rating'::text)
                                                         Rows Removed by Filter: 112
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..3.35 rows=1 width=21) (actual time=0.009..0.009 rows=0 loops=15849)
                                             Index Cond: (id = mi_idx.movie_id)
                                             Filter: ((production_year >= 2008) AND (production_year <= 2014))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..11.54 rows=1 width=50) (actual time=0.031..0.031 rows=0 loops=6152)
                                       Index Cond: (movie_id = t.id)
                                       Filter: ((note IS NULL) AND ((info)::text = ANY ('{Horror,Thriller}'::text[])))
                                       Rows Removed by Filter: 18
                           ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=358)
                                 Index Cond: (id = mi.info_type_id)
                                 Filter: ((info)::text = 'genres'::text)
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..24.75 rows=1 width=8) (actual time=0.113..0.146 rows=1 loops=358)
                     Index Cond: (movie_id = t.id)
                     Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                     Rows Removed by Filter: 34
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.68 rows=1 width=4) (actual time=0.011..0.011 rows=0 loops=268)
               Index Cond: (id = ci.person_id)
               Filter: ((gender IS NOT NULL) AND ((gender)::text = 'f'::text))
               Rows Removed by Filter: 1
 Planning Time: 4.846 ms
 Execution Time: 197.312 ms
(40 rows)

SET
                                                                                          QUERY PLAN                                                                                          
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=74638.17..74638.18 rows=1 width=96) (actual time=5871.278..5871.278 rows=1 loops=1)
   ->  Gather  (cost=74637.94..74638.15 rows=2 width=96) (actual time=5871.266..5875.221 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=73637.94..73637.95 rows=1 width=96) (actual time=5868.165..5868.165 rows=1 loops=3)
               ->  Nested Loop  (cost=6.71..73637.87 rows=10 width=65) (actual time=14.458..5864.189 rows=9358 loops=3)
                     ->  Nested Loop  (cost=6.28..73620.90 rows=25 width=69) (actual time=11.300..5714.727 rows=18052 loops=3)
                           ->  Nested Loop  (cost=5.72..73165.64 rows=19 width=77) (actual time=0.579..2020.696 rows=34172 loops=3)
                                 Join Filter: (mi.movie_id = t.id)
                                 ->  Hash Join  (cost=5.29..73154.54 rows=19 width=56) (actual time=0.539..1843.625 rows=34172 loops=3)
                                       Hash Cond: (mi.info_type_id = it1.id)
                                       ->  Nested Loop  (cost=2.86..73146.32 rows=2128 width=60) (actual time=0.461..1834.670 rows=34964 loops=3)
                                             ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=10) (actual time=0.052..117.473 rows=153308 loops=3)
                                                   Hash Cond: (mi_idx.info_type_id = it2.id)
                                                   ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=14) (actual time=0.019..45.449 rows=460012 loops=3)
                                                   ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.013..0.014 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=3)
                                                               Filter: ((info)::text = 'votes'::text)
                                                               Rows Removed by Filter: 112
                                             ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..11.37 rows=1 width=50) (actual time=0.011..0.011 rows=0 loops=459925)
                                                   Index Cond: (movie_id = mi_idx.movie_id)
                                                   Filter: ((info)::text = ANY ('{Horror,Action,Sci-Fi,Thriller,Crime,War}'::text[]))
                                                   Rows Removed by Filter: 15
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.027..0.027 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.015..0.022 rows=1 loops=3)
                                                   Filter: ((info)::text = 'genres'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=21) (actual time=0.005..0.005 rows=1 loops=102516)
                                       Index Cond: (id = mi_idx.movie_id)
                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..23.95 rows=1 width=8) (actual time=0.092..0.108 rows=1 loops=102516)
                                 Index Cond: (movie_id = t.id)
                                 Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                 Rows Removed by Filter: 39
                     ->  Index Scan using name_pkey on name n  (cost=0.43..0.68 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=54155)
                           Index Cond: (id = ci.person_id)
                           Filter: ((gender)::text = 'm'::text)
                           Rows Removed by Filter: 0
 Planning Time: 4.864 ms
 Execution Time: 5875.424 ms
(41 rows)

SET
                                                                                                QUERY PLAN                                                                                                 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=85372.10..85372.11 rows=1 width=64) (actual time=279.077..279.078 rows=1 loops=1)
   ->  Nested Loop  (cost=1004.44..85372.09 rows=1 width=32) (actual time=121.286..279.031 rows=184 loops=1)
         ->  Nested Loop  (cost=1004.30..85371.91 rows=1 width=36) (actual time=121.277..278.813 rows=184 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=1003.86..85344.51 rows=1 width=44) (actual time=121.231..272.936 rows=77 loops=1)
                     ->  Nested Loop  (cost=1003.44..85343.31 rows=1 width=48) (actual time=121.204..272.405 rows=79 loops=1)
                           Join Filter: (t.id = mc.movie_id)
                           ->  Nested Loop  (cost=1003.01..85340.60 rows=1 width=40) (actual time=120.797..271.177 rows=102 loops=1)
                                 ->  Gather  (cost=1002.58..85339.18 rows=1 width=44) (actual time=111.145..270.424 rows=115 loops=1)
                                       Workers Planned: 2
                                       Workers Launched: 2
                                       ->  Nested Loop  (cost=2.58..84339.08 rows=1 width=44) (actual time=108.657..270.654 rows=38 loops=3)
                                             ->  Hash Join  (cost=2.15..84336.29 rows=2 width=23) (actual time=107.700..269.233 rows=142 loops=3)
                                                   Hash Cond: (ci.role_id = rt.id)
                                                   ->  Nested Loop  (cost=0.99..84335.05 rows=21 width=27) (actual time=107.591..269.088 rows=142 loops=3)
                                                         Join Filter: (n.id = ci.person_id)
                                                         ->  Nested Loop  (cost=0.42..82155.29 rows=9 width=23) (actual time=104.621..258.092 rows=519 loops=3)
                                                               ->  Parallel Seq Scan on name n  (cost=0.00..81659.82 rows=40 width=19) (actual time=104.134..247.745 rows=2256 loops=3)
                                                                     Filter: (((name)::text ~~ '%Ang%'::text) AND ((gender)::text = 'f'::text))
                                                                     Rows Removed by Filter: 1386908
                                                               ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..12.37 rows=2 width=4) (actual time=0.004..0.004 rows=0 loops=6768)
                                                                     Index Cond: (person_id = n.id)
                                                                     Heap Fetches: 1558
                                                         ->  Index Scan using person_id_cast_info on cast_info ci  (cost=0.56..242.03 rows=13 width=16) (actual time=0.020..0.021 rows=0 loops=1558)
                                                               Index Cond: (person_id = an.person_id)
                                                               Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                               Rows Removed by Filter: 44
                                                   ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.022..0.022 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.012..0.014 rows=1 loops=3)
                                                               Filter: ((role)::text = 'actress'::text)
                                                               Rows Removed by Filter: 11
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..1.40 rows=1 width=21) (actual time=0.010..0.010 rows=0 loops=425)
                                                   Index Cond: (id = ci.movie_id)
                                                   Filter: ((production_year >= 2005) AND (production_year <= 2009))
                                                   Rows Removed by Filter: 1
                                 ->  Index Only Scan using char_name_pkey on char_name chn  (cost=0.43..1.42 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=115)
                                       Index Cond: (id = ci.person_role_id)
                                       Heap Fetches: 102
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.71 rows=1 width=8) (actual time=0.009..0.012 rows=1 loops=102)
                                 Index Cond: (movie_id = ci.movie_id)
                                 Filter: ((note IS NOT NULL) AND (((note)::text ~~ '%(USA)%'::text) OR ((note)::text ~~ '%(worldwide)%'::text)))
                                 Rows Removed by Filter: 6
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.20 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=79)
                           Index Cond: (id = mc.company_id)
                           Filter: ((country_code)::text = '[us]'::text)
                           Rows Removed by Filter: 0
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..27.38 rows=1 width=8) (actual time=0.020..0.076 rows=2 loops=77)
                     Index Cond: (movie_id = ci.movie_id)
                     Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%200%'::text) OR ((info)::text ~~ 'USA:%200%'::text)))
                     Rows Removed by Filter: 166
         ->  Index Scan using info_type_pkey on info_type it  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=184)
               Index Cond: (id = mi.info_type_id)
               Filter: ((info)::text = 'release dates'::text)
 Planning Time: 24.465 ms
 Execution Time: 279.373 ms
(56 rows)

SET
                                                                                                   QUERY PLAN                                                                                                   
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=55721.55..55721.56 rows=1 width=64) (actual time=136.123..136.123 rows=1 loops=1)
   ->  Nested Loop  (cost=1003.41..55721.55 rows=1 width=32) (actual time=121.212..136.109 rows=15 loops=1)
         ->  Nested Loop  (cost=1003.28..55721.37 rows=1 width=36) (actual time=121.190..136.067 rows=15 loops=1)
               Join Filter: (ci.person_id = n.id)
               ->  Nested Loop  (cost=1002.85..55719.84 rows=1 width=29) (actual time=111.898..135.035 rows=275 loops=1)
                     ->  Nested Loop  (cost=1002.70..55719.64 rows=1 width=33) (actual time=111.886..134.694 rows=275 loops=1)
                           Join Filter: (t.id = mi.movie_id)
                           ->  Nested Loop  (cost=1002.27..55692.13 rows=1 width=41) (actual time=111.812..116.128 rows=275 loops=1)
                                 ->  Nested Loop  (cost=1001.85..55690.86 rows=1 width=45) (actual time=111.789..115.590 rows=275 loops=1)
                                       ->  Nested Loop  (cost=1001.42..55689.20 rows=1 width=41) (actual time=111.753..114.646 rows=99 loops=1)
                                             ->  Nested Loop  (cost=1001.00..55687.75 rows=1 width=45) (actual time=111.722..113.598 rows=100 loops=1)
                                                   Join Filter: (t.id = ci.movie_id)
                                                   ->  Gather  (cost=1000.43..55645.55 rows=1 width=29) (actual time=111.657..111.736 rows=4 loops=1)
                                                         Workers Planned: 2
                                                         Workers Launched: 2
                                                         ->  Nested Loop  (cost=0.43..54645.45 rows=1 width=29) (actual time=96.052..109.466 rows=1 loops=3)
                                                               ->  Parallel Seq Scan on title t  (cost=0.00..54433.61 rows=10 width=21) (actual time=14.818..109.366 rows=2 loops=3)
                                                                     Filter: ((production_year >= 2007) AND (production_year <= 2008) AND ((title)::text ~~ '%Kung%Fu%Panda%'::text))
                                                                     Rows Removed by Filter: 842768
                                                               ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..21.17 rows=1 width=8) (actual time=0.037..0.040 rows=1 loops=7)
                                                                     Index Cond: (movie_id = t.id)
                                                                     Filter: (((note)::text ~~ '%(200%)%'::text) AND (((note)::text ~~ '%(USA)%'::text) OR ((note)::text ~~ '%(worldwide)%'::text)))
                                                                     Rows Removed by Filter: 6
                                                   ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..42.20 rows=1 width=16) (actual time=0.021..0.477 rows=25 loops=4)
                                                         Index Cond: (movie_id = mc.movie_id)
                                                         Filter: ((note)::text = '(voice)'::text)
                                                         Rows Removed by Filter: 127
                                             ->  Index Only Scan using char_name_pkey on char_name chn  (cost=0.43..1.45 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=100)
                                                   Index Cond: (id = ci.person_role_id)
                                                   Heap Fetches: 99
                                       ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..1.64 rows=2 width=4) (actual time=0.007..0.009 rows=3 loops=99)
                                             Index Cond: (person_id = ci.person_id)
                                             Heap Fetches: 275
                                 ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.27 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=275)
                                       Index Cond: (id = mc.company_id)
                                       Filter: ((country_code)::text = '[us]'::text)
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..27.50 rows=1 width=8) (actual time=0.010..0.067 rows=1 loops=275)
                                 Index Cond: (movie_id = ci.movie_id)
                                 Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%2007%'::text) OR ((info)::text ~~ 'USA:%2008%'::text)))
                                 Rows Removed by Filter: 295
                     ->  Index Scan using info_type_pkey on info_type it  (cost=0.14..0.17 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=275)
                           Index Cond: (id = mi.info_type_id)
                           Filter: ((info)::text = 'release dates'::text)
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.53 rows=1 width=19) (actual time=0.004..0.004 rows=0 loops=275)
                     Index Cond: (id = an.person_id)
                     Filter: (((name)::text ~~ '%Angel%'::text) AND ((gender)::text = 'f'::text))
                     Rows Removed by Filter: 1
         ->  Index Scan using role_type_pkey on role_type rt  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=15)
               Index Cond: (id = ci.role_id)
               Filter: ((role)::text = 'actress'::text)
 Planning Time: 23.400 ms
 Execution Time: 136.493 ms
(52 rows)

SET
                                                                                                  QUERY PLAN                                                                                                  
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=222418.16..222418.17 rows=1 width=64) (actual time=1736.866..1736.866 rows=1 loops=1)
   ->  Nested Loop  (cost=84856.43..222418.15 rows=2 width=32) (actual time=283.062..1736.264 rows=3575 loops=1)
         Join Filter: (n.id = an.person_id)
         ->  Nested Loop  (cost=84856.00..222416.50 rows=1 width=40) (actual time=269.245..1729.841 rows=2632 loops=1)
               ->  Nested Loop  (cost=84855.58..222414.17 rows=2 width=44) (actual time=269.215..1706.184 rows=8585 loops=1)
                     ->  Hash Join  (cost=84855.15..222411.47 rows=1 width=52) (actual time=269.185..1694.353 rows=2129 loops=1)
                           Hash Cond: (mi.info_type_id = it.id)
                           ->  Nested Loop  (cost=84852.73..222408.95 rows=36 width=56) (actual time=269.139..1693.709 rows=2129 loops=1)
                                 ->  Nested Loop  (cost=84852.29..219906.63 rows=92 width=48) (actual time=269.063..1624.232 rows=3349 loops=1)
                                       ->  Nested Loop  (cost=84851.86..219669.76 rows=170 width=27) (actual time=269.022..1587.611 rows=5686 loops=1)
                                             ->  Hash Join  (cost=84851.43..219172.23 rows=351 width=31) (actual time=268.985..1562.500 rows=6552 loops=1)
                                                   Hash Cond: (ci.person_id = n.id)
                                                   ->  Nested Loop  (cost=0.56..134124.20 rows=75106 width=12) (actual time=0.212..1272.113 rows=276166 loops=1)
                                                         ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.010..0.013 rows=1 loops=1)
                                                               Filter: ((role)::text = 'actress'::text)
                                                               Rows Removed by Filter: 11
                                                         ->  Index Scan using role_id_cast_info on cast_info ci  (cost=0.56..133303.71 rows=81934 width=16) (actual time=0.201..1248.670 rows=276166 loops=1)
                                                               Index Cond: (role_id = rt.id)
                                                               Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                               Rows Removed by Filter: 7175807
                                                   ->  Hash  (cost=84607.42..84607.42 rows=19476 width=19) (actual time=263.497..263.497 rows=50011 loops=1)
                                                         Buckets: 65536 (originally 32768)  Batches: 1 (originally 1)  Memory Usage: 3135kB
                                                         ->  Gather  (cost=1000.00..84607.42 rows=19476 width=19) (actual time=106.352..254.565 rows=50011 loops=1)
                                                               Workers Planned: 2
                                                               Workers Launched: 2
                                                               ->  Parallel Seq Scan on name n  (cost=0.00..81659.82 rows=8115 width=19) (actual time=104.349..248.873 rows=16670 loops=3)
                                                                     Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                                                     Rows Removed by Filter: 1372493
                                             ->  Index Only Scan using char_name_pkey on char_name chn  (cost=0.43..1.42 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=6552)
                                                   Index Cond: (id = ci.person_role_id)
                                                   Heap Fetches: 5686
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..1.39 rows=1 width=21) (actual time=0.006..0.006 rows=1 loops=5686)
                                             Index Cond: (id = ci.movie_id)
                                             Filter: (production_year > 2000)
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..27.19 rows=1 width=8) (actual time=0.014..0.020 rows=1 loops=3349)
                                       Index Cond: (movie_id = t.id)
                                       Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%200%'::text) OR ((info)::text ~~ 'USA:%200%'::text)))
                                       Rows Removed by Filter: 15
                           ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.021..0.021 rows=1 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                 ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.008..0.015 rows=1 loops=1)
                                       Filter: ((info)::text = 'release dates'::text)
                                       Rows Removed by Filter: 112
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.65 rows=5 width=8) (actual time=0.003..0.005 rows=4 loops=2129)
                           Index Cond: (movie_id = t.id)
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.16 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=8585)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text = '[us]'::text)
                     Rows Removed by Filter: 1
         ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..1.63 rows=2 width=4) (actual time=0.002..0.002 rows=1 loops=2632)
               Index Cond: (person_id = ci.person_id)
               Heap Fetches: 3575
 Planning Time: 24.122 ms
 Execution Time: 1737.253 ms
(55 rows)

SET
                                                                                                           QUERY PLAN                                                                                                           
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=283172.99..283173.00 rows=1 width=64) (actual time=8347.350..8347.350 rows=1 loops=1)
   ->  Gather  (cost=283172.77..283172.98 rows=2 width=64) (actual time=5393.210..8352.175 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=282172.77..282172.78 rows=1 width=64) (actual time=6656.938..6656.938 rows=1 loops=3)
               ->  Nested Loop  (cost=135435.02..282167.07 rows=1140 width=32) (actual time=2033.827..6578.948 rows=586882 loops=3)
                     ->  Nested Loop  (cost=135434.60..281402.94 rows=465 width=40) (actual time=2033.807..5999.757 rows=262348 loops=3)
                           ->  Nested Loop  (cost=135434.18..279915.09 rows=1278 width=44) (actual time=2033.789..3828.194 rows=1076352 loops=3)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Hash Join  (cost=135433.75..279235.89 rows=255 width=52) (actual time=2033.662..3278.316 rows=113945 loops=3)
                                       Hash Cond: (mi.info_type_id = it.id)
                                       ->  Nested Loop  (cost=135431.32..279154.95 rows=28832 width=56) (actual time=2033.572..3223.777 rows=540998 loops=3)
                                             ->  Nested Loop  (cost=135430.89..226932.18 rows=1906 width=48) (actual time=2033.550..2804.897 rows=53102 loops=3)
                                                   ->  Nested Loop  (cost=135430.46..221350.20 rows=3938 width=52) (actual time=2033.518..2571.808 rows=56088 loops=3)
                                                         ->  Hash Join  (cost=135430.03..195430.35 rows=17020 width=33) (actual time=2033.488..2357.406 rows=56136 loops=3)
                                                               Hash Cond: (t.id = ci.movie_id)
                                                               ->  Parallel Seq Scan on title t  (cost=0.00..49166.29 rows=572932 width=21) (actual time=0.020..120.353 rows=460484 loops=3)
                                                                     Filter: (production_year > 2000)
                                                                     Rows Removed by Filter: 382286
                                                               ->  Hash  (cost=134124.20..134124.20 rows=75106 width=12) (actual time=2032.702..2032.702 rows=276166 loops=3)
                                                                     Buckets: 131072 (originally 131072)  Batches: 4 (originally 2)  Memory Usage: 3984kB
                                                                     ->  Nested Loop  (cost=0.56..134124.20 rows=75106 width=12) (actual time=0.157..1978.824 rows=276166 loops=3)
                                                                           ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.014..0.017 rows=1 loops=3)
                                                                                 Filter: ((role)::text = 'actress'::text)
                                                                                 Rows Removed by Filter: 11
                                                                           ->  Index Scan using role_id_cast_info on cast_info ci  (cost=0.56..133303.71 rows=81934 width=16) (actual time=0.140..1955.779 rows=276166 loops=3)
                                                                                 Index Cond: (role_id = rt.id)
                                                                                 Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                                 Rows Removed by Filter: 7175807
                                                         ->  Index Scan using name_pkey on name n  (cost=0.43..1.52 rows=1 width=19) (actual time=0.003..0.003 rows=1 loops=168407)
                                                               Index Cond: (id = ci.person_id)
                                                               Filter: ((gender)::text = 'f'::text)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Only Scan using char_name_pkey on char_name chn  (cost=0.43..1.42 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=168264)
                                                         Index Cond: (id = ci.person_role_id)
                                                         Heap Fetches: 159307
                                             ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..26.98 rows=42 width=8) (actual time=0.003..0.006 rows=10 loops=159307)
                                                   Index Cond: (movie_id = t.id)
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.026..0.026 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.016..0.022 rows=1 loops=3)
                                                   Filter: ((info)::text = 'release dates'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.60 rows=5 width=8) (actual time=0.002..0.003 rows=9 loops=341836)
                                       Index Cond: (movie_id = mi.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.16 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=3229056)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..1.62 rows=2 width=4) (actual time=0.001..0.002 rows=2 loops=787043)
                           Index Cond: (person_id = n.id)
                           Heap Fetches: 1760645
 Planning Time: 25.396 ms
 Execution Time: 8352.624 ms
(54 rows)

SET
                                                                                                 QUERY PLAN                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=19539.97..19539.98 rows=1 width=68) (actual time=82.234..82.234 rows=1 loops=1)
   ->  Gather  (cost=19539.75..19539.96 rows=2 width=68) (actual time=82.225..82.301 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=18539.75..18539.76 rows=1 width=68) (actual time=75.112..75.112 rows=1 loops=3)
               ->  Nested Loop  (cost=4.35..18539.42 rows=44 width=45) (actual time=70.265..75.091 rows=47 loops=3)
                     Join Filter: (mc.movie_id = t.id)
                     ->  Hash Join  (cost=3.92..18513.70 rows=44 width=32) (actual time=70.233..74.342 rows=47 loops=3)
                           Hash Cond: (mc.company_type_id = ct.id)
                           ->  Nested Loop  (cost=2.86..18511.69 rows=177 width=36) (actual time=70.152..74.249 rows=49 loops=3)
                                 ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=4) (actual time=70.077..70.108 rows=83 loops=3)
                                       Hash Cond: (mi_idx.info_type_id = it.id)
                                       ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=8) (actual time=0.016..37.934 rows=460012 loops=3)
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.019..0.020 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.017..0.017 rows=1 loops=3)
                                                   Filter: ((info)::text = 'top 250 rank'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.63 rows=1 width=32) (actual time=0.049..0.049 rows=1 loops=250)
                                       Index Cond: (movie_id = mi_idx.movie_id)
                                       Filter: (((note)::text !~~ '%(as Metro-Goldwyn-Mayer Pictures)%'::text) AND (((note)::text ~~ '%(co-production)%'::text) OR ((note)::text ~~ '%(presents)%'::text)))
                                       Rows Removed by Filter: 33
                           ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.019..0.019 rows=1 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                 ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.014..0.015 rows=1 loops=3)
                                       Filter: ((kind)::text = 'production companies'::text)
                                       Rows Removed by Filter: 3
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=25) (actual time=0.015..0.015 rows=1 loops=142)
                           Index Cond: (id = mi_idx.movie_id)
 Planning Time: 2.339 ms
 Execution Time: 82.450 ms
(31 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=20131.19..20131.20 rows=1 width=68) (actual time=73.381..73.381 rows=1 loops=1)
   ->  Gather  (cost=20130.96..20131.17 rows=2 width=68) (actual time=72.807..74.133 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=19130.96..19130.97 rows=1 width=68) (actual time=70.535..70.535 rows=1 loops=3)
               ->  Hash Join  (cost=4.35..19124.19 rows=903 width=45) (actual time=70.528..70.529 rows=1 loops=3)
                     Hash Cond: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=3.29..19103.60 rows=3612 width=49) (actual time=70.374..70.446 rows=22 loops=3)
                           Join Filter: (t.id = mc.movie_id)
                           ->  Nested Loop  (cost=2.86..18189.65 rows=1422 width=29) (actual time=70.353..70.379 rows=1 loops=3)
                                 ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=4) (actual time=70.286..70.288 rows=3 loops=3)
                                       Hash Cond: (mi_idx.info_type_id = it.id)
                                       ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=8) (actual time=0.019..38.011 rows=460012 loops=3)
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.018..0.019 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.016..0.016 rows=1 loops=3)
                                                   Filter: ((info)::text = 'bottom 10 rank'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.58 rows=1 width=25) (actual time=0.026..0.027 rows=0 loops=10)
                                       Index Cond: (id = mi_idx.movie_id)
                                       Filter: ((production_year >= 2005) AND (production_year <= 2010))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.61 rows=3 width=32) (actual time=0.036..0.047 rows=16 loops=4)
                                 Index Cond: (movie_id = mi_idx.movie_id)
                                 Filter: ((note)::text !~~ '%(as Metro-Goldwyn-Mayer Pictures)%'::text)
                                 Rows Removed by Filter: 2
                     ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.017..0.017 rows=1 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=3)
                                 Filter: ((kind)::text = 'production companies'::text)
                                 Rows Removed by Filter: 3
 Planning Time: 1.835 ms
 Execution Time: 74.282 ms
(33 rows)

SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=19461.56..19461.57 rows=1 width=68) (actual time=79.303..79.303 rows=1 loops=1)
   ->  Gather  (cost=19461.33..19461.54 rows=2 width=68) (actual time=73.616..80.921 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=18461.33..18461.34 rows=1 width=68) (actual time=74.129..74.129 rows=1 loops=3)
               ->  Nested Loop  (cost=4.35..18461.31 rows=3 width=45) (actual time=73.113..74.124 rows=1 loops=3)
                     Join Filter: (mc.movie_id = t.id)
                     ->  Hash Join  (cost=3.92..18449.57 rows=20 width=32) (actual time=72.059..74.066 rows=8 loops=3)
                           Hash Cond: (mc.company_type_id = ct.id)
                           ->  Nested Loop  (cost=2.86..18448.07 rows=81 width=36) (actual time=71.983..73.988 rows=8 loops=3)
                                 ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=4) (actual time=71.204..71.231 rows=83 loops=3)
                                       Hash Cond: (mi_idx.info_type_id = it.id)
                                       ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=8) (actual time=0.022..37.732 rows=460012 loops=3)
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.018..0.018 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=3)
                                                   Filter: ((info)::text = 'top 250 rank'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.62 rows=1 width=32) (actual time=0.033..0.033 rows=0 loops=250)
                                       Index Cond: (movie_id = mi_idx.movie_id)
                                       Filter: (((note)::text !~~ '%(as Metro-Goldwyn-Mayer Pictures)%'::text) AND ((note)::text ~~ '%(co-production)%'::text))
                                       Rows Removed by Filter: 33
                           ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.016..0.016 rows=1 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                 ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=3)
                                       Filter: ((kind)::text = 'production companies'::text)
                                       Rows Removed by Filter: 3
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=25) (actual time=0.007..0.007 rows=0 loops=23)
                           Index Cond: (id = mi_idx.movie_id)
                           Filter: (production_year > 2010)
                           Rows Removed by Filter: 1
 Planning Time: 1.799 ms
 Execution Time: 81.065 ms
(33 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=20988.46..20988.47 rows=1 width=68) (actual time=72.674..72.674 rows=1 loops=1)
   ->  Gather  (cost=20988.24..20988.45 rows=2 width=68) (actual time=72.668..73.030 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=19988.24..19988.25 rows=1 width=68) (actual time=70.066..70.066 rows=1 loops=3)
               ->  Hash Join  (cost=4.35..19975.05 rows=1758 width=45) (actual time=70.048..70.060 rows=1 loops=3)
                     Hash Cond: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=3.29..19935.98 rows=7030 width=49) (actual time=69.889..69.985 rows=26 loops=3)
                           ->  Nested Loop  (cost=2.86..18176.93 rows=2768 width=29) (actual time=69.874..69.913 rows=2 loops=3)
                                 ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=4) (actual time=69.849..69.851 rows=3 loops=3)
                                       Hash Cond: (mi_idx.info_type_id = it.id)
                                       ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=8) (actual time=0.021..37.739 rows=460012 loops=3)
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.020..0.020 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.017..0.017 rows=1 loops=3)
                                                   Filter: ((info)::text = 'bottom 10 rank'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=25) (actual time=0.018..0.018 rows=1 loops=10)
                                       Index Cond: (id = mi_idx.movie_id)
                                       Filter: (production_year > 2000)
                                       Rows Removed by Filter: 0
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.61 rows=3 width=32) (actual time=0.026..0.034 rows=13 loops=6)
                                 Index Cond: (movie_id = t.id)
                                 Filter: ((note)::text !~~ '%(as Metro-Goldwyn-Mayer Pictures)%'::text)
                                 Rows Removed by Filter: 2
                     ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.016..0.016 rows=1 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=3)
                                 Filter: ((kind)::text = 'production companies'::text)
                                 Rows Removed by Filter: 3
 Planning Time: 1.832 ms
 Execution Time: 73.179 ms
(32 rows)

SET
                                                                                             QUERY PLAN                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=12310.45..12310.46 rows=1 width=32) (actual time=3406.404..3406.404 rows=1 loops=1)
   ->  Nested Loop  (cost=9.02..12310.44 rows=1 width=17) (actual time=48.595..3406.370 rows=33 loops=1)
         ->  Nested Loop  (cost=8.59..12309.99 rows=1 width=21) (actual time=48.562..3405.972 rows=33 loops=1)
               ->  Nested Loop  (cost=8.16..12304.93 rows=11 width=25) (actual time=5.177..2030.408 rows=532809 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=7.60..12298.97 rows=3 width=29) (actual time=5.140..479.608 rows=6016 loops=1)
                           Join Filter: (t.kind_id = kt.id)
                           Rows Removed by Join Filter: 1347
                           ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.016..0.017 rows=1 loops=1)
                                 Filter: ((kind)::text = 'movie'::text)
                                 Rows Removed by Filter: 6
                           ->  Nested Loop  (cost=7.60..12297.62 rows=21 width=33) (actual time=1.069..478.000 rows=7363 loops=1)
                                 ->  Nested Loop  (cost=7.17..12286.40 rows=23 width=8) (actual time=1.042..415.083 rows=8765 loops=1)
                                       Join Filter: (cc.status_id = cct2.id)
                                       Rows Removed by Join Filter: 8765
                                       ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.009..0.010 rows=2 loops=1)
                                             Filter: ((kind)::text ~~ '%complete%'::text)
                                             Rows Removed by Filter: 2
                                       ->  Nested Loop  (cost=7.17..12284.17 rows=94 width=12) (actual time=0.854..206.078 rows=8765 loops=2)
                                             Join Filter: (cc.subject_id = cct1.id)
                                             Rows Removed by Join Filter: 4045
                                             ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.003 rows=1 loops=2)
                                                   Filter: ((kind)::text = 'cast'::text)
                                                   Rows Removed by Filter: 3
                                             ->  Nested Loop  (cost=7.17..12278.42 rows=376 width=16) (actual time=0.851..204.097 rows=12810 loops=2)
                                                   ->  Nested Loop  (cost=6.75..12149.91 rows=270 width=4) (actual time=0.615..131.355 rows=35548 loops=2)
                                                         ->  Seq Scan on keyword k  (cost=0.00..3632.40 rows=8 width=4) (actual time=0.111..30.044 rows=8 loops=2)
                                                               Filter: ((keyword)::text = ANY ('{superhero,sequel,second-part,marvel-comics,based-on-comic,tv-special,fight,violence}'::text[]))
                                                               Rows Removed by Filter: 134162
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1061.70 rows=299 width=8) (actual time=1.084..12.156 rows=4444 loops=16)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=46976
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.600..0.600 rows=4444 loops=16)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.002..0.002 rows=0 loops=71096)
                                                         Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.007..0.007 rows=1 loops=8765)
                                       Index Cond: (id = mk.movie_id)
                                       Filter: (production_year > 1950)
                                       Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.010..0.242 rows=89 loops=6016)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=532809)
                     Index Cond: (id = ci.person_role_id)
                     Filter: (((name)::text !~~ '%Sherlock%'::text) AND (((name)::text ~~ '%Tony%Stark%'::text) OR ((name)::text ~~ '%Iron%Man%'::text)))
                     Rows Removed by Filter: 0
         ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.011..0.011 rows=1 loops=33)
               Index Cond: (id = ci.person_id)
               Heap Fetches: 33
 Planning Time: 15.816 ms
 Execution Time: 3406.600 ms
(51 rows)

SET
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=12304.81..12304.82 rows=1 width=32) (actual time=2655.242..2655.243 rows=1 loops=1)
   ->  Nested Loop  (cost=9.02..12304.81 rows=1 width=17) (actual time=59.474..2655.214 rows=17 loops=1)
         ->  Nested Loop  (cost=8.59..12304.35 rows=1 width=21) (actual time=59.457..2654.894 rows=27 loops=1)
               ->  Nested Loop  (cost=8.16..12301.15 rows=7 width=25) (actual time=7.956..1317.531 rows=222518 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=7.60..12297.17 rows=2 width=29) (actual time=7.919..646.641 rows=1472 loops=1)
                           Join Filter: (cc.status_id = cct2.id)
                           Rows Removed by Join Filter: 1472
                           ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.010..0.011 rows=2 loops=1)
                                 Filter: ((kind)::text ~~ '%complete%'::text)
                                 Rows Removed by Filter: 2
                           ->  Nested Loop  (cost=7.60..12296.04 rows=7 width=33) (actual time=5.877..322.964 rows=1472 loops=2)
                                 Join Filter: (cc.subject_id = cct1.id)
                                 Rows Removed by Join Filter: 243
                                 ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.003 rows=1 loops=2)
                                       Filter: ((kind)::text = 'cast'::text)
                                       Rows Removed by Filter: 3
                                 ->  Nested Loop  (cost=7.60..12294.62 rows=29 width=37) (actual time=5.874..322.547 rows=1715 loops=2)
                                       ->  Nested Loop  (cost=7.18..12284.58 rows=21 width=25) (actual time=5.781..305.740 rows=6043 loops=2)
                                             Join Filter: (t.kind_id = kt.id)
                                             Rows Removed by Join Filter: 8122
                                             ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.001..0.003 rows=1 loops=2)
                                                   Filter: ((kind)::text = 'movie'::text)
                                                   Rows Removed by Filter: 6
                                             ->  Nested Loop  (cost=7.18..12281.66 rows=147 width=29) (actual time=0.635..303.938 rows=14165 loops=2)
                                                   ->  Nested Loop  (cost=6.75..12149.91 rows=270 width=4) (actual time=0.619..130.450 rows=35548 loops=2)
                                                         ->  Seq Scan on keyword k  (cost=0.00..3632.40 rows=8 width=4) (actual time=0.115..30.628 rows=8 loops=2)
                                                               Filter: ((keyword)::text = ANY ('{superhero,sequel,second-part,marvel-comics,based-on-comic,tv-special,fight,violence}'::text[]))
                                                               Rows Removed by Filter: 134162
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1061.70 rows=299 width=8) (actual time=1.081..11.987 rows=4444 loops=16)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=46976
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.598..0.598 rows=4444 loops=16)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.005..0.005 rows=0 loops=71096)
                                                         Index Cond: (id = mk.movie_id)
                                                         Filter: (production_year > 2000)
                                                         Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.002..0.002 rows=0 loops=12086)
                                             Index Cond: (movie_id = t.id)
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.012..0.425 rows=151 loops=1472)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=4) (actual time=0.006..0.006 rows=0 loops=222518)
                     Index Cond: (id = ci.person_id)
                     Filter: ((name)::text ~~ '%Downey%Robert%'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=4) (actual time=0.011..0.011 rows=1 loops=27)
               Index Cond: (id = ci.person_role_id)
               Filter: (((name)::text !~~ '%Sherlock%'::text) AND (((name)::text ~~ '%Tony%Stark%'::text) OR ((name)::text ~~ '%Iron%Man%'::text)))
               Rows Removed by Filter: 0
 Planning Time: 15.995 ms
 Execution Time: 2655.430 ms
(52 rows)

SET
                                                                                             QUERY PLAN                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=14665.13..14665.14 rows=1 width=64) (actual time=1500.494..1500.495 rows=1 loops=1)
   ->  Nested Loop  (cost=9.02..14665.12 rows=1 width=32) (actual time=7.724..1499.132 rows=5406 loops=1)
         ->  Nested Loop  (cost=8.59..14664.67 rows=1 width=21) (actual time=7.702..1455.631 rows=5406 loops=1)
               ->  Nested Loop  (cost=8.16..14661.01 rows=8 width=25) (actual time=7.397..1030.341 rows=189844 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=7.60..14657.03 rows=2 width=29) (actual time=7.353..494.762 rows=1267 loops=1)
                           Join Filter: (cc.status_id = cct2.id)
                           Rows Removed by Join Filter: 1267
                           ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.016..0.017 rows=2 loops=1)
                                 Filter: ((kind)::text ~~ '%complete%'::text)
                                 Rows Removed by Filter: 2
                           ->  Nested Loop  (cost=7.60..14655.87 rows=9 width=33) (actual time=5.549..247.115 rows=1267 loops=2)
                                 Join Filter: (cc.subject_id = cct1.id)
                                 Rows Removed by Join Filter: 218
                                 ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=2)
                                       Filter: ((kind)::text = 'cast'::text)
                                       Rows Removed by Filter: 3
                                 ->  Nested Loop  (cost=7.60..14654.36 rows=37 width=37) (actual time=5.546..246.757 rows=1485 loops=2)
                                       ->  Nested Loop  (cost=7.18..14641.93 rows=26 width=25) (actual time=5.466..233.154 rows=5032 loops=2)
                                             Join Filter: (t.kind_id = kt.id)
                                             Rows Removed by Join Filter: 5581
                                             ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.001..0.003 rows=1 loops=2)
                                                   Filter: ((kind)::text = 'movie'::text)
                                                   Rows Removed by Filter: 6
                                             ->  Nested Loop  (cost=7.18..14638.55 rows=183 width=29) (actual time=0.654..231.772 rows=10613 loops=2)
                                                   ->  Nested Loop  (cost=6.75..14474.11 rows=337 width=4) (actual time=0.637..109.145 rows=24091 loops=2)
                                                         ->  Seq Scan on keyword k  (cost=0.00..3967.82 rows=10 width=4) (actual time=0.137..36.467 rows=10 loops=2)
                                                               Filter: ((keyword)::text = ANY ('{superhero,marvel-comics,based-on-comic,tv-special,fight,violence,magnet,web,claw,laser}'::text[]))
                                                               Rows Removed by Filter: 134160
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1047.64 rows=299 width=8) (actual time=0.645..6.989 rows=2409 loops=20)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=34254
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.360..0.360 rows=2409 loops=20)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.005..0.005 rows=0 loops=48182)
                                                         Index Cond: (id = mk.movie_id)
                                                         Filter: (production_year > 2000)
                                                         Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.002..0.002 rows=0 loops=10064)
                                             Index Cond: (movie_id = t.id)
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.012..0.398 rows=150 loops=1267)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=189844)
                     Index Cond: (id = ci.person_role_id)
                     Filter: ((name IS NOT NULL) AND (((name)::text ~~ '%man%'::text) OR ((name)::text ~~ '%Man%'::text)))
                     Rows Removed by Filter: 0
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=19) (actual time=0.008..0.008 rows=1 loops=5406)
               Index Cond: (id = ci.person_id)
 Planning Time: 16.236 ms
 Execution Time: 1500.682 ms
(50 rows)

SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3753.11..3753.12 rows=1 width=96) (actual time=104.960..104.961 rows=1 loops=1)
   ->  Nested Loop  (cost=8.75..3753.10 rows=1 width=118) (actual time=3.702..104.640 rows=1410 loops=1)
         Join Filter: (ml.movie_id = t.id)
         ->  Nested Loop  (cost=8.32..3752.60 rows=1 width=117) (actual time=3.680..101.555 rows=1816 loops=1)
               Join Filter: (ml.movie_id = mi.movie_id)
               ->  Nested Loop  (cost=7.89..3750.82 rows=1 width=113) (actual time=3.634..96.581 rows=402 loops=1)
                     Join Filter: (mc.company_type_id = ct.id)
                     Rows Removed by Join Filter: 20
                     ->  Nested Loop  (cost=7.89..3749.75 rows=1 width=117) (actual time=3.624..96.105 rows=422 loops=1)
                           ->  Nested Loop  (cost=7.47..3749.30 rows=1 width=102) (actual time=3.244..93.675 rows=1021 loops=1)
                                 Join Filter: (ml.movie_id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.04..3748.73 rows=1 width=90) (actual time=3.215..92.496 rows=199 loops=1)
                                       Join Filter: (ml.link_type_id = lt.id)
                                       Rows Removed by Join Filter: 303
                                       ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.014..0.018 rows=2 loops=1)
                                             Filter: ((link)::text ~~ '%follow%'::text)
                                             Rows Removed by Filter: 16
                                       ->  Nested Loop  (cost=7.04..3747.37 rows=11 width=12) (actual time=2.943..46.211 rows=251 loops=2)
                                             ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=2.937..36.565 rows=10544 loops=2)
                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.685..10.778 rows=1 loops=2)
                                                         Filter: ((keyword)::text = 'sequel'::text)
                                                         Rows Removed by Filter: 134169
                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=2.234..24.754 rows=10544 loops=2)
                                                         Recheck Cond: (keyword_id = k.id)
                                                         Heap Blocks: exact=11140
                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.316..1.316 rows=10544 loops=2)
                                                               Index Cond: (keyword_id = k.id)
                                             ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.001..0.001 rows=0 loops=21088)
                                                   Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=2 width=12) (actual time=0.004..0.005 rows=5 loops=199)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: (note IS NULL)
                                       Rows Removed by Filter: 2
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=1021)
                                 Index Cond: (id = mc.company_id)
                                 Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                                 Rows Removed by Filter: 1
                     ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=422)
                           Filter: ((kind)::text = 'production companies'::text)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.77 rows=1 width=4) (actual time=0.009..0.012 rows=5 loops=402)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German}'::text[]))
                     Rows Removed by Filter: 16
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.001..0.001 rows=1 loops=1816)
               Index Cond: (id = mk.movie_id)
               Filter: ((production_year >= 1950) AND (production_year <= 2000))
               Rows Removed by Filter: 0
 Planning Time: 15.194 ms
 Execution Time: 105.148 ms
(50 rows)

SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3752.79..3752.80 rows=1 width=96) (actual time=68.796..68.796 rows=1 loops=1)
   ->  Nested Loop  (cost=8.75..3752.79 rows=1 width=118) (actual time=3.478..68.774 rows=38 loops=1)
         Join Filter: (ml.movie_id = t.id)
         ->  Nested Loop  (cost=8.32..3752.28 rows=1 width=117) (actual time=3.100..68.216 rows=308 loops=1)
               Join Filter: (ml.movie_id = mi.movie_id)
               ->  Nested Loop  (cost=7.89..3750.82 rows=1 width=113) (actual time=3.082..64.876 rows=402 loops=1)
                     Join Filter: (mc.company_type_id = ct.id)
                     Rows Removed by Join Filter: 20
                     ->  Nested Loop  (cost=7.89..3749.75 rows=1 width=117) (actual time=3.074..64.425 rows=422 loops=1)
                           ->  Nested Loop  (cost=7.47..3749.30 rows=1 width=102) (actual time=2.890..62.389 rows=1021 loops=1)
                                 Join Filter: (ml.movie_id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.04..3748.73 rows=1 width=90) (actual time=2.874..61.482 rows=199 loops=1)
                                       Join Filter: (ml.link_type_id = lt.id)
                                       Rows Removed by Join Filter: 303
                                       ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.005..0.009 rows=2 loops=1)
                                             Filter: ((link)::text ~~ '%follow%'::text)
                                             Rows Removed by Filter: 16
                                       ->  Nested Loop  (cost=7.04..3747.37 rows=11 width=12) (actual time=2.754..30.709 rows=251 loops=2)
                                             ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=2.749..21.578 rows=10544 loops=2)
                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.587..9.939 rows=1 loops=2)
                                                         Filter: ((keyword)::text = 'sequel'::text)
                                                         Rows Removed by Filter: 134169
                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=2.147..10.668 rows=10544 loops=2)
                                                         Recheck Cond: (keyword_id = k.id)
                                                         Heap Blocks: exact=11140
                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.236..1.236 rows=10544 loops=2)
                                                               Index Cond: (keyword_id = k.id)
                                             ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.001..0.001 rows=0 loops=21088)
                                                   Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=2 width=12) (actual time=0.003..0.004 rows=5 loops=199)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: (note IS NULL)
                                       Rows Removed by Filter: 2
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=1021)
                                 Index Cond: (id = mc.company_id)
                                 Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                                 Rows Removed by Filter: 1
                     ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=422)
                           Filter: ((kind)::text = 'production companies'::text)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.45 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=402)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Germany,German}'::text[]))
                     Rows Removed by Filter: 20
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.002..0.002 rows=0 loops=308)
               Index Cond: (id = mk.movie_id)
               Filter: ((production_year >= 2000) AND (production_year <= 2010))
               Rows Removed by Filter: 1
 Planning Time: 14.462 ms
 Execution Time: 68.975 ms
(50 rows)

SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3753.19..3753.20 rows=1 width=96) (actual time=71.674..71.674 rows=1 loops=1)
   ->  Nested Loop  (cost=8.75..3753.18 rows=1 width=118) (actual time=3.038..71.270 rows=1874 loops=1)
         Join Filter: (ml.movie_id = t.id)
         ->  Nested Loop  (cost=8.32..3752.68 rows=1 width=117) (actual time=3.032..68.118 rows=1874 loops=1)
               Join Filter: (ml.movie_id = mi.movie_id)
               ->  Nested Loop  (cost=7.89..3750.82 rows=1 width=113) (actual time=3.017..63.406 rows=402 loops=1)
                     Join Filter: (mc.company_type_id = ct.id)
                     Rows Removed by Join Filter: 20
                     ->  Nested Loop  (cost=7.89..3749.75 rows=1 width=117) (actual time=3.009..62.946 rows=422 loops=1)
                           ->  Nested Loop  (cost=7.47..3749.30 rows=1 width=102) (actual time=2.832..60.919 rows=1021 loops=1)
                                 Join Filter: (ml.movie_id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.04..3748.73 rows=1 width=90) (actual time=2.816..60.011 rows=199 loops=1)
                                       Join Filter: (ml.link_type_id = lt.id)
                                       Rows Removed by Join Filter: 303
                                       ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.005..0.009 rows=2 loops=1)
                                             Filter: ((link)::text ~~ '%follow%'::text)
                                             Rows Removed by Filter: 16
                                       ->  Nested Loop  (cost=7.04..3747.37 rows=11 width=12) (actual time=2.715..29.973 rows=251 loops=2)
                                             ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=2.709..20.815 rows=10544 loops=2)
                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.569..9.875 rows=1 loops=2)
                                                         Filter: ((keyword)::text = 'sequel'::text)
                                                         Rows Removed by Filter: 134169
                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=2.127..9.966 rows=10544 loops=2)
                                                         Recheck Cond: (keyword_id = k.id)
                                                         Heap Blocks: exact=11140
                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.214..1.214 rows=10544 loops=2)
                                                               Index Cond: (keyword_id = k.id)
                                             ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.001..0.001 rows=0 loops=21088)
                                                   Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=2 width=12) (actual time=0.003..0.004 rows=5 loops=199)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: (note IS NULL)
                                       Rows Removed by Filter: 2
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=1021)
                                 Index Cond: (id = mc.company_id)
                                 Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                                 Rows Removed by Filter: 1
                     ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=422)
                           Filter: ((kind)::text = 'production companies'::text)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.82 rows=3 width=4) (actual time=0.008..0.011 rows=5 loops=402)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,English}'::text[]))
                     Rows Removed by Filter: 16
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.001..0.001 rows=1 loops=1874)
               Index Cond: (id = mk.movie_id)
               Filter: ((production_year >= 1950) AND (production_year <= 2010))
 Planning Time: 14.495 ms
 Execution Time: 71.874 ms
(49 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7386.84..7386.85 rows=1 width=96) (actual time=548.008..548.009 rows=1 loops=1)
   ->  Nested Loop  (cost=8.89..7386.83 rows=1 width=42) (actual time=15.050..547.232 rows=2851 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         Rows Removed by Join Filter: 191
         ->  Nested Loop  (cost=8.89..7384.41 rows=1 width=46) (actual time=15.044..537.785 rows=3042 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=8.46..7382.82 rows=1 width=58) (actual time=6.700..395.964 rows=2958 loops=1)
                     Join Filter: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=8.46..7381.73 rows=1 width=62) (actual time=6.686..393.142 rows=2958 loops=1)
                           ->  Nested Loop  (cost=8.04..7381.19 rows=1 width=47) (actual time=6.669..379.742 rows=3374 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.61..7380.61 rows=1 width=35) (actual time=6.639..343.458 rows=2378 loops=1)
                                       Join Filter: (mi_idx.info_type_id = it2.id)
                                       Rows Removed by Join Filter: 6322
                                       ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.013..0.015 rows=1 loops=1)
                                             Filter: ((info)::text = 'rating'::text)
                                             Rows Removed by Filter: 112
                                       ->  Nested Loop  (cost=7.61..7377.88 rows=25 width=39) (actual time=4.549..342.565 rows=8700 loops=1)
                                             Join Filter: (t.id = mi_idx.movie_id)
                                             ->  Nested Loop  (cost=7.18..7372.53 rows=10 width=25) (actual time=4.526..312.423 rows=4832 loops=1)
                                                   Join Filter: (t.kind_id = kt.id)
                                                   Rows Removed by Join Filter: 2286
                                                   ->  Nested Loop  (cost=7.18..7370.44 rows=35 width=29) (actual time=4.508..310.545 rows=5606 loops=1)
                                                         ->  Nested Loop  (cost=6.75..7304.56 rows=135 width=4) (actual time=4.431..136.179 rows=37091 loops=1)
                                                               ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=0.960..20.763 rows=3 loops=1)
                                                                     Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                     Rows Removed by Filter: 134167
                                                               ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1082.76 rows=299 width=8) (actual time=3.420..37.021 rows=12364 loops=3)
                                                                     Recheck Cond: (keyword_id = k.id)
                                                                     Heap Blocks: exact=26312
                                                                     ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.892..1.892 rows=12364 loops=3)
                                                                           Index Cond: (keyword_id = k.id)
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.004..0.004 rows=0 loops=37091)
                                                               Index Cond: (id = mk.movie_id)
                                                               Filter: (production_year > 2008)
                                                               Rows Removed by Filter: 1
                                                   ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=5606)
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.012..0.014 rows=2 loops=1)
                                                               Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                               Rows Removed by Filter: 5
                                             ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=14) (actual time=0.005..0.006 rows=2 loops=4832)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((info)::text < '7.0'::text)
                                                   Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.013..0.015 rows=1 loops=2378)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                                       Rows Removed by Filter: 10
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.004..0.004 rows=1 loops=3374)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text <> '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.000..0.000 rows=1 loops=2958)
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.56 rows=2 width=8) (actual time=0.043..0.048 rows=1 loops=2958)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Germany,German,USA,American}'::text[]))
                     Rows Removed by Filter: 155
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=3042)
               Filter: ((info)::text = 'countries'::text)
               Rows Removed by Filter: 14
 Planning Time: 37.531 ms
 Execution Time: 548.216 ms
(62 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7385.52..7385.53 rows=1 width=96) (actual time=368.298..368.298 rows=1 loops=1)
   ->  Nested Loop  (cost=8.89..7385.51 rows=1 width=42) (actual time=18.190..368.269 rows=31 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         Rows Removed by Join Filter: 3
         ->  Nested Loop  (cost=8.89..7383.09 rows=1 width=46) (actual time=18.185..368.130 rows=34 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=8.46..7381.50 rows=1 width=58) (actual time=18.097..364.842 rows=50 loops=1)
                     Join Filter: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=8.46..7380.41 rows=1 width=62) (actual time=18.090..364.755 rows=50 loops=1)
                           ->  Nested Loop  (cost=8.04..7379.87 rows=1 width=47) (actual time=18.077..364.150 rows=78 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.61..7379.29 rows=1 width=35) (actual time=8.089..339.737 rows=1615 loops=1)
                                       Join Filter: (mi_idx.info_type_id = it2.id)
                                       Rows Removed by Join Filter: 4362
                                       ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.013..0.015 rows=1 loops=1)
                                             Filter: ((info)::text = 'rating'::text)
                                             Rows Removed by Filter: 112
                                       ->  Nested Loop  (cost=7.61..7376.61 rows=21 width=39) (actual time=4.598..339.100 rows=5977 loops=1)
                                             Join Filter: (t.id = mi_idx.movie_id)
                                             ->  Nested Loop  (cost=7.18..7372.33 rows=8 width=25) (actual time=4.576..316.918 rows=3517 loops=1)
                                                   Join Filter: (t.kind_id = kt.id)
                                                   Rows Removed by Join Filter: 1618
                                                   ->  Nested Loop  (cost=7.18..7370.44 rows=28 width=29) (actual time=4.561..315.527 rows=4040 loops=1)
                                                         ->  Nested Loop  (cost=6.75..7304.56 rows=135 width=4) (actual time=4.492..144.855 rows=37091 loops=1)
                                                               ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.138..20.868 rows=3 loops=1)
                                                                     Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                     Rows Removed by Filter: 134167
                                                               ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1082.76 rows=299 width=8) (actual time=3.381..39.778 rows=12364 loops=3)
                                                                     Recheck Cond: (keyword_id = k.id)
                                                                     Heap Blocks: exact=26312
                                                                     ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.846..1.846 rows=12364 loops=3)
                                                                           Index Cond: (keyword_id = k.id)
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.004..0.004 rows=0 loops=37091)
                                                               Index Cond: (id = mk.movie_id)
                                                               Filter: (production_year > 2009)
                                                               Rows Removed by Filter: 1
                                                   ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=4040)
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.009..0.011 rows=2 loops=1)
                                                               Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                               Rows Removed by Filter: 5
                                             ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=14) (actual time=0.005..0.006 rows=2 loops=3517)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((info)::text < '7.0'::text)
                                                   Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.015..0.015 rows=0 loops=1615)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                                       Rows Removed by Filter: 12
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.007..0.007 rows=1 loops=78)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text <> '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.001..0.001 rows=1 loops=50)
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.56 rows=2 width=8) (actual time=0.060..0.065 rows=1 loops=50)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Germany,German,USA,American}'::text[]))
                     Rows Removed by Filter: 53
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=34)
               Filter: ((info)::text = 'countries'::text)
               Rows Removed by Filter: 16
 Planning Time: 38.269 ms
 Execution Time: 368.531 ms
(62 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7390.61..7390.62 rows=1 width=96) (actual time=2360.880..2360.880 rows=1 loops=1)
   ->  Nested Loop  (cost=8.89..7390.60 rows=1 width=42) (actual time=6.130..2355.422 rows=21489 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         Rows Removed by Join Filter: 3123
         ->  Nested Loop  (cost=8.89..7388.18 rows=1 width=46) (actual time=6.125..2269.947 rows=24612 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=8.46..7386.28 rows=1 width=58) (actual time=6.061..549.716 rows=23425 loops=1)
                     Join Filter: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=8.46..7385.19 rows=1 width=62) (actual time=6.047..528.329 rows=23425 loops=1)
                           ->  Nested Loop  (cost=8.04..7384.64 rows=1 width=47) (actual time=6.034..457.842 rows=25316 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.61..7384.06 rows=1 width=35) (actual time=4.597..370.784 rows=5949 loops=1)
                                       Join Filter: (mi_idx.info_type_id = it2.id)
                                       Rows Removed by Join Filter: 11839
                                       ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=1)
                                             Filter: ((info)::text = 'rating'::text)
                                             Rows Removed by Filter: 112
                                       ->  Nested Loop  (cost=7.61..7381.10 rows=44 width=39) (actual time=4.580..368.842 rows=17788 loops=1)
                                             Join Filter: (t.id = mi_idx.movie_id)
                                             ->  Nested Loop  (cost=7.18..7373.07 rows=15 width=25) (actual time=4.559..320.440 rows=8073 loops=1)
                                                   Join Filter: (t.kind_id = kt.id)
                                                   Rows Removed by Join Filter: 4332
                                                   ->  Nested Loop  (cost=7.18..7370.44 rows=54 width=29) (actual time=4.499..317.020 rows=9739 loops=1)
                                                         ->  Nested Loop  (cost=6.75..7304.56 rows=135 width=4) (actual time=4.476..140.593 rows=37091 loops=1)
                                                               ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.130..20.951 rows=3 loops=1)
                                                                     Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                     Rows Removed by Filter: 134167
                                                               ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1082.76 rows=299 width=8) (actual time=3.382..38.454 rows=12364 loops=3)
                                                                     Recheck Cond: (keyword_id = k.id)
                                                                     Heap Blocks: exact=26312
                                                                     ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.854..1.854 rows=12364 loops=3)
                                                                           Index Cond: (keyword_id = k.id)
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.004..0.004 rows=0 loops=37091)
                                                               Index Cond: (id = mk.movie_id)
                                                               Filter: (production_year > 2005)
                                                               Rows Removed by Filter: 1
                                                   ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=9739)
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.011..0.013 rows=2 loops=1)
                                                               Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                               Rows Removed by Filter: 5
                                             ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=14) (actual time=0.005..0.005 rows=2 loops=8073)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((info)::text < '8.5'::text)
                                                   Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.009..0.014 rows=4 loops=5949)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                                       Rows Removed by Filter: 8
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=25316)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text <> '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.000..0.000 rows=1 loops=23425)
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.061..0.073 rows=1 loops=23425)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                     Rows Removed by Filter: 180
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=24612)
               Filter: ((info)::text = 'countries'::text)
               Rows Removed by Filter: 20
 Planning Time: 38.180 ms
 Execution Time: 2361.101 ms
(62 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7390.53..7390.54 rows=1 width=96) (actual time=1041.284..1041.285 rows=1 loops=1)
   ->  Nested Loop  (cost=8.89..7390.53 rows=1 width=42) (actual time=6.295..1031.164 rows=46281 loops=1)
         Join Filter: (mc.company_type_id = ct.id)
         Rows Removed by Join Filter: 4783
         ->  Nested Loop  (cost=8.89..7389.44 rows=1 width=46) (actual time=6.279..993.597 rows=46281 loops=1)
               ->  Nested Loop  (cost=8.47..7388.99 rows=1 width=31) (actual time=4.666..831.917 rows=64848 loops=1)
                     Join Filter: (t.id = mc.movie_id)
                     ->  Nested Loop  (cost=8.04..7388.39 rows=1 width=39) (actual time=4.651..774.034 rows=4115 loops=1)
                           Join Filter: (mi.info_type_id = it1.id)
                           Rows Removed by Join Filter: 594
                           ->  Nested Loop  (cost=8.04..7385.96 rows=1 width=43) (actual time=4.647..756.726 rows=4709 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=7.61..7384.06 rows=1 width=35) (actual time=4.601..365.609 rows=5949 loops=1)
                                       Join Filter: (mi_idx.info_type_id = it2.id)
                                       Rows Removed by Join Filter: 11839
                                       ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=1)
                                             Filter: ((info)::text = 'rating'::text)
                                             Rows Removed by Filter: 112
                                       ->  Nested Loop  (cost=7.61..7381.10 rows=44 width=39) (actual time=4.585..363.618 rows=17788 loops=1)
                                             Join Filter: (t.id = mi_idx.movie_id)
                                             ->  Nested Loop  (cost=7.18..7373.07 rows=15 width=25) (actual time=4.565..316.098 rows=8073 loops=1)
                                                   Join Filter: (t.kind_id = kt.id)
                                                   Rows Removed by Join Filter: 4332
                                                   ->  Nested Loop  (cost=7.18..7370.44 rows=54 width=29) (actual time=4.499..312.742 rows=9739 loops=1)
                                                         ->  Nested Loop  (cost=6.75..7304.56 rows=135 width=4) (actual time=4.479..138.465 rows=37091 loops=1)
                                                               ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.149..20.847 rows=3 loops=1)
                                                                     Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                     Rows Removed by Filter: 134167
                                                               ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1082.76 rows=299 width=8) (actual time=3.379..37.827 rows=12364 loops=3)
                                                                     Recheck Cond: (keyword_id = k.id)
                                                                     Heap Blocks: exact=26312
                                                                     ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.851..1.851 rows=12364 loops=3)
                                                                           Index Cond: (keyword_id = k.id)
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.004..0.004 rows=0 loops=37091)
                                                               Index Cond: (id = mk.movie_id)
                                                               Filter: (production_year > 2005)
                                                               Rows Removed by Filter: 1
                                                   ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=9739)
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.011..0.013 rows=2 loops=1)
                                                               Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                               Rows Removed by Filter: 5
                                             ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=14) (actual time=0.005..0.005 rows=2 loops=8073)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((info)::text < '8.5'::text)
                                                   Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.056..0.065 rows=1 loops=5949)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                                       Rows Removed by Filter: 71
                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=4709)
                                 Filter: ((info)::text = 'countries'::text)
                                 Rows Removed by Filter: 20
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=12) (actual time=0.006..0.011 rows=16 loops=4115)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=64848)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text <> '[us]'::text)
                     Rows Removed by Filter: 0
         ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.000..0.000 rows=1 loops=46281)
 Planning Time: 39.823 ms
 Execution Time: 1041.521 ms
(61 rows)

SET
                                                                                                    QUERY PLAN                                                                                                    
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=57942.47..57942.48 rows=1 width=64) (actual time=255.368..255.368 rows=1 loops=1)
   ->  Nested Loop  (cost=4238.90..57942.46 rows=1 width=65) (actual time=225.823..255.242 rows=618 loops=1)
         ->  Nested Loop  (cost=4238.48..57942.02 rows=1 width=69) (actual time=225.790..252.743 rows=618 loops=1)
               ->  Nested Loop  (cost=4238.35..57941.87 rows=1 width=73) (actual time=225.751..252.089 rows=618 loops=1)
                     ->  Nested Loop  (cost=4237.93..57941.42 rows=1 width=77) (actual time=225.726..251.053 rows=618 loops=1)
                           Join Filter: (t.id = mc.movie_id)
                           ->  Nested Loop  (cost=4237.50..57940.82 rows=1 width=85) (actual time=225.692..249.878 rows=615 loops=1)
                                 ->  Gather  (cost=4237.06..57938.99 rows=1 width=77) (actual time=225.663..253.352 rows=5 loops=1)
                                       Workers Planned: 2
                                       Workers Launched: 2
                                       ->  Nested Loop  (cost=3237.06..56938.89 rows=1 width=77) (actual time=242.868..250.786 rows=2 loops=3)
                                             ->  Nested Loop  (cost=3236.92..56938.62 rows=1 width=81) (actual time=242.862..250.777 rows=2 loops=3)
                                                   ->  Hash Join  (cost=3236.49..54660.05 rows=1093 width=73) (actual time=131.867..187.934 rows=344 loops=3)
                                                         Hash Cond: (t.kind_id = kt.id)
                                                         ->  Hash Join  (cost=3235.39..54626.70 rows=7653 width=29) (actual time=29.152..187.722 rows=694 loops=3)
                                                               Hash Cond: (t.id = cc.movie_id)
                                                               ->  Parallel Seq Scan on title t  (cost=0.00..49166.29 rows=572932 width=25) (actual time=0.022..112.208 rows=460484 loops=3)
                                                                     Filter: (production_year > 2000)
                                                                     Rows Removed by Filter: 382286
                                                               ->  Hash  (cost=2813.24..2813.24 rows=33772 width=4) (actual time=28.705..28.705 rows=24592 loops=3)
                                                                     Buckets: 65536  Batches: 1  Memory Usage: 1377kB
                                                                     ->  Hash Join  (cost=1.06..2813.24 rows=33772 width=4) (actual time=0.036..25.402 rows=24592 loops=3)
                                                                           Hash Cond: (cc.status_id = cct1.id)
                                                                           ->  Seq Scan on complete_cast cc  (cost=0.00..2081.86 rows=135086 width=8) (actual time=0.011..12.752 rows=135086 loops=3)
                                                                           ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=3)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=3)
                                                                                       Filter: ((kind)::text = 'complete+verified'::text)
                                                                                       Rows Removed by Filter: 3
                                                         ->  Hash  (cost=1.09..1.09 rows=1 width=52) (actual time=0.021..0.022 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=52) (actual time=0.015..0.017 rows=1 loops=3)
                                                                     Filter: ((kind)::text = 'movie'::text)
                                                                     Rows Removed by Filter: 6
                                                   ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.07 rows=1 width=8) (actual time=0.182..0.182 rows=0 loops=1033)
                                                         Index Cond: (movie_id = t.id)
                                                         Filter: ((info IS NOT NULL) AND ((note)::text ~~ '%internet%'::text) AND (((info)::text ~~ 'USA:% 199%'::text) OR ((info)::text ~~ 'USA:% 200%'::text)))
                                                         Rows Removed by Filter: 211
                                             ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.20 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=5)
                                                   Index Cond: (id = mi.info_type_id)
                                                   Filter: ((info)::text = 'release dates'::text)
                                 ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.36 rows=47 width=8) (actual time=0.012..0.034 rows=123 loops=5)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=12) (actual time=0.001..0.002 rows=1 loops=615)
                                 Index Cond: (movie_id = mk.movie_id)
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=618)
                           Index Cond: (id = mc.company_id)
                           Filter: ((country_code)::text = '[us]'::text)
               ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=618)
                     Index Cond: (id = mc.company_type_id)
                     Heap Fetches: 618
         ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=618)
               Index Cond: (id = mk.keyword_id)
               Heap Fetches: 618
 Planning Time: 37.847 ms
 Execution Time: 259.384 ms
(56 rows)

SET
                                                                                              QUERY PLAN                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7387.30..7387.31 rows=1 width=64) (actual time=75.974..75.974 rows=1 loops=1)
   ->  Nested Loop  (cost=8.88..7387.29 rows=1 width=65) (actual time=20.865..75.957 rows=16 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         ->  Nested Loop  (cost=8.88..7384.87 rows=1 width=69) (actual time=20.858..75.896 rows=16 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=8.45..7383.30 rows=1 width=81) (actual time=4.150..56.651 rows=315 loops=1)
                     Join Filter: (mc.company_type_id = ct.id)
                     Rows Removed by Join Filter: 140
                     ->  Nested Loop  (cost=8.45..7382.21 rows=1 width=85) (actual time=4.134..56.302 rows=315 loops=1)
                           ->  Nested Loop  (cost=8.03..7380.87 rows=3 width=89) (actual time=4.075..50.559 rows=1218 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.60..7378.46 rows=4 width=77) (actual time=4.048..48.923 rows=60 loops=1)
                                       Join Filter: (cc.status_id = cct1.id)
                                       Rows Removed by Join Filter: 81
                                       ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.012..0.012 rows=1 loops=1)
                                             Filter: ((kind)::text = 'complete+verified'::text)
                                             Rows Removed by Filter: 3
                                       ->  Nested Loop  (cost=7.60..7377.22 rows=15 width=81) (actual time=4.023..48.885 rows=141 loops=1)
                                             ->  Nested Loop  (cost=7.18..7372.44 rows=10 width=73) (actual time=3.801..46.513 rows=401 loops=1)
                                                   Join Filter: (t.kind_id = kt.id)
                                                   Rows Removed by Join Filter: 156
                                                   ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=52) (actual time=0.006..0.008 rows=1 loops=1)
                                                         Filter: ((kind)::text = 'movie'::text)
                                                         Rows Removed by Filter: 6
                                                   ->  Nested Loop  (cost=7.18..7370.44 rows=73 width=29) (actual time=0.955..46.413 rows=557 loops=1)
                                                         ->  Nested Loop  (cost=6.75..7304.56 rows=135 width=4) (actual time=0.934..31.783 rows=1133 loops=1)
                                                               ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=0.711..23.548 rows=4 loops=1)
                                                                     Filter: ((keyword)::text = ANY ('{nerd,loner,alienation,dignity}'::text[]))
                                                                     Rows Removed by Filter: 134166
                                                               ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1082.76 rows=299 width=8) (actual time=0.104..2.021 rows=283 loops=4)
                                                                     Recheck Cond: (keyword_id = k.id)
                                                                     Heap Blocks: exact=1083
                                                                     ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.060..0.060 rows=283 loops=4)
                                                                           Index Cond: (keyword_id = k.id)
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.013..0.013 rows=0 loops=1133)
                                                               Index Cond: (id = mk.movie_id)
                                                               Filter: (production_year > 2000)
                                                               Rows Removed by Filter: 1
                                             ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=8) (actual time=0.005..0.006 rows=0 loops=401)
                                                   Index Cond: (movie_id = t.id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=12) (actual time=0.014..0.023 rows=20 loops=60)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=1218)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.000..0.000 rows=1 loops=315)
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.56 rows=1 width=8) (actual time=0.060..0.061 rows=0 loops=315)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: (((note)::text ~~ '%internet%'::text) AND ((info)::text ~~ 'USA:% 200%'::text))
                     Rows Removed by Filter: 268
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=16)
               Filter: ((info)::text = 'release dates'::text)
               Rows Removed by Filter: 15
 Planning Time: 37.634 ms
 Execution Time: 76.217 ms
(56 rows)

SET
                                                                                                       QUERY PLAN                                                                                                       
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=67112.66..67112.67 rows=1 width=64) (actual time=357.924..357.924 rows=1 loops=1)
   ->  Gather  (cost=67112.44..67112.65 rows=2 width=64) (actual time=357.757..364.973 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=66112.44..66112.45 rows=1 width=64) (actual time=354.865..354.865 rows=1 loops=3)
               ->  Nested Loop  (cost=3238.95..66112.43 rows=2 width=65) (actual time=276.599..354.820 rows=209 loops=3)
                     ->  Nested Loop  (cost=3238.53..66111.55 rows=2 width=69) (actual time=276.571..354.026 rows=209 loops=3)
                           ->  Nested Loop  (cost=3238.10..66109.74 rows=1 width=81) (actual time=276.540..353.930 rows=2 loops=3)
                                 ->  Nested Loop  (cost=3237.97..66109.58 rows=1 width=85) (actual time=276.509..353.896 rows=2 loops=3)
                                       ->  Nested Loop  (cost=3237.55..66109.14 rows=1 width=89) (actual time=276.472..353.847 rows=2 loops=3)
                                             ->  Nested Loop  (cost=3237.12..66108.51 rows=1 width=77) (actual time=276.436..353.804 rows=2 loops=3)
                                                   ->  Nested Loop  (cost=3236.98..66107.43 rows=5 width=81) (actual time=276.414..353.779 rows=2 loops=3)
                                                         ->  Hash Join  (cost=3236.54..55258.37 rows=5532 width=73) (actual time=134.651..202.803 rows=1684 loops=3)
                                                               Hash Cond: (t.kind_id = kt.id)
                                                               ->  Hash Join  (cost=3235.39..55216.42 rows=9681 width=29) (actual time=28.714..202.231 rows=2141 loops=3)
                                                                     Hash Cond: (t.id = cc.movie_id)
                                                                     ->  Parallel Seq Scan on title t  (cost=0.00..49166.29 rows=724782 width=25) (actual time=0.023..114.398 rows=583011 loops=3)
                                                                           Filter: (production_year > 1990)
                                                                           Rows Removed by Filter: 259760
                                                                     ->  Hash  (cost=2813.24..2813.24 rows=33772 width=4) (actual time=28.150..28.150 rows=24592 loops=3)
                                                                           Buckets: 65536  Batches: 1  Memory Usage: 1377kB
                                                                           ->  Hash Join  (cost=1.06..2813.24 rows=33772 width=4) (actual time=0.036..24.856 rows=24592 loops=3)
                                                                                 Hash Cond: (cc.status_id = cct1.id)
                                                                                 ->  Seq Scan on complete_cast cc  (cost=0.00..2081.86 rows=135086 width=8) (actual time=0.010..12.283 rows=135086 loops=3)
                                                                                 ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=3)
                                                                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                       ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=3)
                                                                                             Filter: ((kind)::text = 'complete+verified'::text)
                                                                                             Rows Removed by Filter: 3
                                                               ->  Hash  (cost=1.10..1.10 rows=4 width=52) (actual time=0.022..0.022 rows=4 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on kind_type kt  (cost=0.00..1.10 rows=4 width=52) (actual time=0.012..0.015 rows=4 loops=3)
                                                                           Filter: ((kind)::text = ANY ('{movie,"tv movie","video movie","video game"}'::text[]))
                                                                           Rows Removed by Filter: 3
                                                         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.95 rows=1 width=8) (actual time=0.089..0.089 rows=0 loops=5053)
                                                               Index Cond: (movie_id = t.id)
                                                               Filter: ((info IS NOT NULL) AND ((note)::text ~~ '%internet%'::text) AND (((info)::text ~~ 'USA:% 199%'::text) OR ((info)::text ~~ 'USA:% 200%'::text)))
                                                               Rows Removed by Filter: 123
                                                   ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.20 rows=1 width=4) (actual time=0.011..0.011 rows=1 loops=6)
                                                         Index Cond: (id = mi.info_type_id)
                                                         Filter: ((info)::text = 'release dates'::text)
                                             ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.58 rows=5 width=12) (actual time=0.018..0.019 rows=1 loops=6)
                                                   Index Cond: (movie_id = t.id)
                                       ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.020..0.020 rows=1 loops=7)
                                             Index Cond: (id = mc.company_id)
                                             Filter: ((country_code)::text = '[us]'::text)
                                 ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.013..0.013 rows=1 loops=7)
                                       Index Cond: (id = mc.company_type_id)
                                       Heap Fetches: 7
                           ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.34 rows=47 width=8) (actual time=0.015..0.030 rows=90 loops=7)
                                 Index Cond: (movie_id = t.id)
                     ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=628)
                           Index Cond: (id = mk.keyword_id)
                           Heap Fetches: 628
 Planning Time: 36.057 ms
 Execution Time: 365.298 ms
(56 rows)

SET
                                                                                                  QUERY PLAN                                                                                                  
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=6625.30..6625.31 rows=1 width=96) (actual time=441.696..441.696 rows=1 loops=1)
   ->  Nested Loop  (cost=10.31..6625.29 rows=1 width=48) (actual time=81.544..441.611 rows=275 loops=1)
         ->  Nested Loop  (cost=9.88..6623.49 rows=1 width=41) (actual time=2.277..428.162 rows=6518 loops=1)
               Join Filter: (it.id = mi.info_type_id)
               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.008..0.014 rows=1 loops=1)
                     Filter: ((info)::text = 'release dates'::text)
                     Rows Removed by Filter: 112
               ->  Nested Loop  (cost=9.88..6621.07 rows=1 width=45) (actual time=2.268..427.217 rows=6518 loops=1)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=9.45..6555.77 rows=2 width=57) (actual time=2.223..353.847 rows=4044 loops=1)
                           ->  Nested Loop  (cost=9.02..6553.68 rows=1 width=53) (actual time=2.192..347.268 rows=1578 loops=1)
                                 ->  Nested Loop  (cost=8.59..6551.98 rows=1 width=41) (actual time=2.159..340.853 rows=1608 loops=1)
                                       Join Filter: (rt.id = ci.role_id)
                                       Rows Removed by Join Filter: 5708
                                       ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=1)
                                             Filter: ((role)::text = 'actress'::text)
                                             Rows Removed by Filter: 11
                                       ->  Nested Loop  (cost=8.59..6550.80 rows=2 width=45) (actual time=2.128..340.215 rows=7316 loops=1)
                                             Join Filter: (t.id = ci.movie_id)
                                             ->  Nested Loop  (cost=8.03..6311.77 rows=6 width=29) (actual time=1.221..156.277 rows=1576 loops=1)
                                                   ->  Nested Loop  (cost=7.61..6286.76 rows=17 width=33) (actual time=1.197..134.053 rows=5566 loops=1)
                                                         Join Filter: (t.id = mc.movie_id)
                                                         ->  Nested Loop  (cost=7.18..6231.61 rows=16 width=25) (actual time=1.173..125.769 rows=495 loops=1)
                                                               ->  Nested Loop  (cost=6.75..6072.14 rows=101 width=4) (actual time=1.006..58.314 rows=9696 loops=1)
                                                                     ->  Seq Scan on keyword k  (cost=0.00..2793.84 rows=3 width=4) (actual time=0.018..18.489 rows=3 loops=1)
                                                                           Filter: ((keyword)::text = ANY ('{hero,martial-arts,hand-to-hand-combat}'::text[]))
                                                                           Rows Removed by Filter: 134167
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1089.78 rows=299 width=8) (actual time=0.936..12.838 rows=3232 loops=3)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=7446
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.547..0.547 rows=3232 loops=3)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using title_pkey on title t  (cost=0.43..1.58 rows=1 width=21) (actual time=0.007..0.007 rows=0 loops=9696)
                                                                     Index Cond: (id = mk.movie_id)
                                                                     Filter: (production_year > 2010)
                                                                     Rows Removed by Filter: 1
                                                         ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..3.38 rows=5 width=8) (actual time=0.009..0.014 rows=11 loops=495)
                                                               Index Cond: (movie_id = mk.movie_id)
                                                   ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.47 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=5566)
                                                         Index Cond: (id = mc.company_id)
                                                         Filter: ((country_code)::text = '[us]'::text)
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..39.83 rows=1 width=16) (actual time=0.078..0.116 rows=5 loops=1576)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                   Rows Removed by Filter: 136
                                 ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..1.70 rows=1 width=20) (actual time=0.004..0.004 rows=1 loops=1608)
                                       Index Cond: (id = ci.person_role_id)
                           ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.08 rows=2 width=4) (actual time=0.003..0.004 rows=3 loops=1578)
                                 Index Cond: (person_id = ci.person_id)
                                 Heap Fetches: 4044
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..32.63 rows=1 width=8) (actual time=0.004..0.018 rows=2 loops=4044)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%201%'::text) OR ((info)::text ~~ 'USA:%201%'::text)))
                           Rows Removed by Filter: 57
         ->  Index Scan using name_pkey on name n  (cost=0.43..1.80 rows=1 width=19) (actual time=0.002..0.002 rows=0 loops=6518)
               Index Cond: (id = ci.person_id)
               Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
               Rows Removed by Filter: 1
 Planning Time: 81.881 ms
 Execution Time: 441.942 ms
(61 rows)

SET
                                                                                                            QUERY PLAN                                                                                                            
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=6509.33..6509.34 rows=1 width=96) (actual time=27.476..27.476 rows=1 loops=1)
   ->  Nested Loop  (cost=1004.27..6509.32 rows=1 width=48) (actual time=10.463..27.455 rows=45 loops=1)
         ->  Nested Loop  (cost=1003.84..6507.62 rows=1 width=36) (actual time=10.445..27.366 rows=45 loops=1)
               Join Filter: (n.id = an.person_id)
               ->  Nested Loop  (cost=1003.42..6505.51 rows=1 width=44) (actual time=10.425..27.301 rows=9 loops=1)
                     ->  Nested Loop  (cost=1003.28..6505.34 rows=1 width=48) (actual time=10.404..27.269 rows=9 loops=1)
                           ->  Nested Loop  (cost=1002.86..6503.54 rows=1 width=29) (actual time=9.720..26.005 rows=244 loops=1)
                                 Join Filter: (t.id = ci.movie_id)
                                 ->  Nested Loop  (cost=1002.29..6463.70 rows=1 width=33) (actual time=9.690..24.733 rows=9 loops=1)
                                       ->  Nested Loop  (cost=1002.15..6463.52 rows=1 width=37) (actual time=9.681..24.710 rows=9 loops=1)
                                             Join Filter: (t.id = mi.movie_id)
                                             ->  Gather  (cost=1001.71..6430.87 rows=1 width=29) (actual time=8.596..25.700 rows=6 loops=1)
                                                   Workers Planned: 1
                                                   Workers Launched: 1
                                                   ->  Nested Loop  (cost=1.71..5430.77 rows=1 width=29) (actual time=16.187..24.057 rows=3 loops=2)
                                                         ->  Nested Loop  (cost=1.29..5428.89 rows=1 width=33) (actual time=16.139..23.706 rows=42 loops=2)
                                                               Join Filter: (t.id = mk.movie_id)
                                                               ->  Nested Loop  (cost=0.86..5425.84 rows=1 width=25) (actual time=16.122..23.654 rows=2 loops=2)
                                                                     ->  Nested Loop  (cost=0.43..5416.18 rows=6 width=4) (actual time=15.927..22.950 rows=50 loops=2)
                                                                           ->  Parallel Seq Scan on company_name cn  (cost=0.00..5068.50 rows=1 width=4) (actual time=15.906..22.668 rows=0 loops=2)
                                                                                 Filter: (((country_code)::text = '[us]'::text) AND ((name)::text = 'DreamWorks Animation'::text))
                                                                                 Rows Removed by Filter: 117498
                                                                           ->  Index Scan using company_id_movie_companies on movie_companies mc  (cost=0.43..346.37 rows=130 width=8) (actual time=0.038..0.546 rows=99 loops=1)
                                                                                 Index Cond: (company_id = cn.id)
                                                                     ->  Index Scan using title_pkey on title t  (cost=0.43..1.60 rows=1 width=21) (actual time=0.014..0.014 rows=0 loops=99)
                                                                           Index Cond: (id = mc.movie_id)
                                                                           Filter: ((production_year > 2010) AND ((title)::text ~~ 'Kung Fu Panda%'::text))
                                                                           Rows Removed by Filter: 1
                                                               ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..2.47 rows=47 width=8) (actual time=0.016..0.021 rows=21 loops=4)
                                                                     Index Cond: (movie_id = mc.movie_id)
                                                         ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..1.46 rows=1 width=4) (actual time=0.008..0.008 rows=0 loops=83)
                                                               Index Cond: (id = mk.keyword_id)
                                                               Filter: ((keyword)::text = ANY ('{hero,martial-arts,hand-to-hand-combat,computer-animated-movie}'::text[]))
                                                               Rows Removed by Filter: 1
                                             ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..32.63 rows=1 width=8) (actual time=0.026..0.050 rows=2 loops=6)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%201%'::text) OR ((info)::text ~~ 'USA:%201%'::text)))
                                                   Rows Removed by Filter: 89
                                       ->  Index Scan using info_type_pkey on info_type it  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=9)
                                             Index Cond: (id = mi.info_type_id)
                                             Filter: ((info)::text = 'release dates'::text)
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..39.83 rows=1 width=16) (actual time=0.009..0.137 rows=27 loops=9)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                       Rows Removed by Filter: 91
                           ->  Index Scan using name_pkey on name n  (cost=0.43..1.80 rows=1 width=19) (actual time=0.005..0.005 rows=0 loops=244)
                                 Index Cond: (id = ci.person_id)
                                 Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                 Rows Removed by Filter: 1
                     ->  Index Scan using role_type_pkey on role_type rt  (cost=0.14..0.16 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=9)
                           Index Cond: (id = ci.role_id)
                           Filter: ((role)::text = 'actress'::text)
               ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.08 rows=2 width=4) (actual time=0.004..0.006 rows=5 loops=9)
                     Index Cond: (person_id = ci.person_id)
                     Heap Fetches: 45
         ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..1.70 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=45)
               Index Cond: (id = ci.person_role_id)
 Planning Time: 79.591 ms
 Execution Time: 29.034 ms
(59 rows)

SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7497.91..7497.92 rows=1 width=128) (actual time=2619.288..2619.288 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.02..7497.90 rows=1 width=80) (actual time=24.776..2616.981 rows=4407 loops=1)
         Join Filter: (mi.movie_id = t.id)
         ->  Nested Loop  (cost=1011.59..7497.08 rows=1 width=79) (actual time=24.740..2583.559 rows=4407 loops=1)
               ->  Nested Loop  (cost=1011.16..7496.06 rows=1 width=68) (actual time=12.352..2512.494 rows=7112 loops=1)
                     ->  Nested Loop  (cost=1011.02..7495.88 rows=1 width=72) (actual time=12.343..2500.155 rows=7740 loops=1)
                           Join Filter: (mi.movie_id = ci.movie_id)
                           ->  Gather  (cost=1010.46..7466.93 rows=1 width=64) (actual time=6.234..628.259 rows=12260 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Nested Loop  (cost=10.46..6466.83 rows=1 width=64) (actual time=6.039..837.153 rows=4087 loops=3)
                                       Join Filter: (mi_idx.movie_id = mi.movie_id)
                                       ->  Hash Join  (cost=10.02..6431.17 rows=2 width=14) (actual time=4.619..192.599 rows=16920 loops=3)
                                             Hash Cond: (mi_idx.info_type_id = it2.id)
                                             ->  Nested Loop  (cost=7.60..6428.17 rows=211 width=18) (actual time=4.541..184.691 rows=50907 loops=3)
                                                   ->  Nested Loop  (cost=7.17..6372.12 rows=70 width=4) (actual time=4.497..92.742 rows=20699 loops=3)
                                                         ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4207.64 rows=2 width=4) (actual time=0.220..19.058 rows=2 loops=3)
                                                               Filter: ((keyword)::text = ANY ('{murder,blood,gore,death,female-nudity}'::text[]))
                                                               Rows Removed by Filter: 44722
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1079.25 rows=299 width=8) (actual time=3.460..42.695 rows=12419 loops=5)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=12389
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=2.006..2.006 rows=12419 loops=5)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.77 rows=3 width=14) (actual time=0.003..0.004 rows=2 loops=62096)
                                                         Index Cond: (movie_id = mk.movie_id)
                                             ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.026..0.027 rows=1 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.021..0.022 rows=1 loops=3)
                                                         Filter: ((info)::text = 'votes'::text)
                                                         Rows Removed by Filter: 112
                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..17.82 rows=1 width=50) (actual time=0.038..0.038 rows=0 loops=50760)
                                             Index Cond: (movie_id = mk.movie_id)
                                             Filter: ((info)::text = 'Horror'::text)
                                             Rows Removed by Filter: 56
                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..28.93 rows=1 width=8) (actual time=0.124..0.152 rows=1 loops=12260)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                 Rows Removed by Filter: 47
                     ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=7740)
                           Index Cond: (id = mi.info_type_id)
                           Filter: ((info)::text = 'genres'::text)
                           Rows Removed by Filter: 0
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.02 rows=1 width=19) (actual time=0.010..0.010 rows=1 loops=7112)
                     Index Cond: (id = ci.person_id)
                     Filter: ((gender)::text = 'm'::text)
                     Rows Removed by Filter: 0
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.81 rows=1 width=21) (actual time=0.007..0.007 rows=1 loops=4407)
               Index Cond: (id = mk.movie_id)
 Planning Time: 13.011 ms
 Execution Time: 2619.689 ms
(51 rows)

SET
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7478.04..7478.05 rows=1 width=128) (actual time=245.558..245.559 rows=1 loops=1)
   ->  Nested Loop  (cost=1009.74..7478.03 rows=1 width=80) (actual time=141.878..245.541 rows=6 loops=1)
         ->  Nested Loop  (cost=1009.31..7477.01 rows=1 width=69) (actual time=141.849..245.459 rows=6 loops=1)
               ->  Nested Loop  (cost=1009.17..7476.82 rows=1 width=73) (actual time=141.839..245.427 rows=18 loops=1)
                     Join Filter: (t.id = mi_idx.movie_id)
                     ->  Nested Loop  (cost=1008.74..7476.02 rows=1 width=79) (actual time=141.804..245.357 rows=6 loops=1)
                           ->  Nested Loop  (cost=1008.60..7475.83 rows=1 width=83) (actual time=141.784..245.324 rows=6 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=1008.16..7458.00 rows=1 width=33) (actual time=141.667..245.011 rows=6 loops=1)
                                       Join Filter: (t.id = ci.movie_id)
                                       ->  Gather  (cost=1007.60..7429.06 rows=1 width=25) (actual time=141.374..248.691 rows=9 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Nested Loop  (cost=7.60..6428.96 rows=1 width=25) (actual time=148.256..199.542 rows=3 loops=3)
                                                   ->  Nested Loop  (cost=7.17..6372.12 rows=70 width=4) (actual time=4.411..96.374 rows=20699 loops=3)
                                                         ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4207.64 rows=2 width=4) (actual time=0.165..23.241 rows=2 loops=3)
                                                               Filter: ((keyword)::text = ANY ('{murder,blood,gore,death,female-nudity}'::text[]))
                                                               Rows Removed by Filter: 44722
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1079.25 rows=299 width=8) (actual time=3.432..42.568 rows=12419 loops=5)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=12389
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.985..1.985 rows=12419 loops=5)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.81 rows=1 width=21) (actual time=0.005..0.005 rows=0 loops=62096)
                                                         Index Cond: (id = mk.movie_id)
                                                         Filter: ((production_year > 2010) AND ((title)::text ~~ 'Vampire%'::text))
                                                         Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..28.93 rows=1 width=8) (actual time=0.068..0.081 rows=1 loops=9)
                                             Index Cond: (movie_id = mk.movie_id)
                                             Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                             Rows Removed by Filter: 21
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..17.82 rows=1 width=50) (actual time=0.051..0.051 rows=1 loops=6)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = 'Horror'::text)
                                       Rows Removed by Filter: 20
                           ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=6)
                                 Index Cond: (id = mi.info_type_id)
                                 Filter: ((info)::text = 'genres'::text)
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.77 rows=3 width=14) (actual time=0.010..0.010 rows=3 loops=6)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=18)
                     Index Cond: (id = mi_idx.info_type_id)
                     Filter: ((info)::text = 'votes'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using name_pkey on name n  (cost=0.43..1.02 rows=1 width=19) (actual time=0.013..0.013 rows=1 loops=6)
               Index Cond: (id = ci.person_id)
               Filter: ((gender)::text = 'm'::text)
 Planning Time: 13.645 ms
 Execution Time: 250.232 ms
(49 rows)

SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8700.85..8700.86 rows=1 width=128) (actual time=9108.828..9108.828 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.02..8700.84 rows=1 width=80) (actual time=7.851..9097.225 rows=26153 loops=1)
         Join Filter: (mi.movie_id = t.id)
         ->  Nested Loop  (cost=1011.59..8700.02 rows=1 width=79) (actual time=7.822..8975.849 rows=26153 loops=1)
               ->  Nested Loop  (cost=1011.16..8699.00 rows=1 width=68) (actual time=7.784..8701.531 rows=42900 loops=1)
                     Join Filter: (mi.movie_id = ci.movie_id)
                     ->  Gather  (cost=1010.60..8670.06 rows=1 width=60) (actual time=6.098..787.915 rows=63386 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop  (cost=10.60..7669.96 rows=1 width=60) (actual time=4.799..1266.164 rows=21129 loops=3)
                                 ->  Nested Loop  (cost=10.46..7669.77 rows=1 width=64) (actual time=4.790..1238.694 rows=22577 loops=3)
                                       Join Filter: (mi_idx.movie_id = mi.movie_id)
                                       ->  Hash Join  (cost=10.02..7633.70 rows=2 width=14) (actual time=4.685..242.425 rows=21234 loops=3)
                                             Hash Cond: (mi_idx.info_type_id = it2.id)
                                             ->  Nested Loop  (cost=7.60..7630.47 rows=294 width=18) (actual time=4.592..232.425 rows=63896 loops=3)
                                                   ->  Nested Loop  (cost=7.17..7552.00 rows=98 width=4) (actual time=4.551..114.565 rows=25571 loops=3)
                                                         ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4347.40 rows=3 width=4) (actual time=0.287..22.393 rows=2 loops=3)
                                                               Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                               Rows Removed by Filter: 44721
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1065.21 rows=299 width=8) (actual time=3.154..38.160 rows=10959 loops=7)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=12389
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.821..1.821 rows=10959 loops=7)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.77 rows=3 width=14) (actual time=0.004..0.004 rows=2 loops=76714)
                                                         Index Cond: (movie_id = mk.movie_id)
                                             ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.031..0.031 rows=1 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.025..0.027 rows=1 loops=3)
                                                         Filter: ((info)::text = 'votes'::text)
                                                         Rows Removed by Filter: 112
                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..18.03 rows=1 width=50) (actual time=0.045..0.047 rows=1 loops=63701)
                                             Index Cond: (movie_id = mk.movie_id)
                                             Filter: ((info)::text = ANY ('{Horror,Action,Sci-Fi,Thriller,Crime,War}'::text[]))
                                             Rows Removed by Filter: 58
                                 ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=67732)
                                       Index Cond: (id = mi.info_type_id)
                                       Filter: ((info)::text = 'genres'::text)
                                       Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..28.93 rows=1 width=8) (actual time=0.099..0.124 rows=1 loops=63386)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                           Rows Removed by Filter: 63
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.02 rows=1 width=19) (actual time=0.006..0.006 rows=1 loops=42900)
                     Index Cond: (id = ci.person_id)
                     Filter: ((gender)::text = 'm'::text)
                     Rows Removed by Filter: 0
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.81 rows=1 width=21) (actual time=0.004..0.004 rows=1 loops=26153)
               Index Cond: (id = mk.movie_id)
 Planning Time: 13.962 ms
 Execution Time: 9109.292 ms
(51 rows)

SET
                                                                                                   QUERY PLAN                                                                                                   
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=10239.97..10239.98 rows=1 width=128) (actual time=1131.997..1131.998 rows=1 loops=1)
   ->  Nested Loop  (cost=5.26..10239.96 rows=1 width=54) (actual time=12.318..1131.276 rows=1728 loops=1)
         ->  Nested Loop  (cost=4.83..10233.55 rows=14 width=42) (actual time=1.474..1008.422 rows=58947 loops=1)
               ->  Nested Loop  (cost=4.40..10227.18 rows=14 width=31) (actual time=1.451..705.390 rows=58947 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=3.84..10225.20 rows=1 width=39) (actual time=1.415..562.923 rows=326 loops=1)
                           ->  Nested Loop  (cost=3.42..10223.39 rows=4 width=43) (actual time=0.532..375.626 rows=79039 loops=1)
                                 ->  Nested Loop  (cost=2.98..10219.72 rows=2 width=35) (actual time=0.505..347.268 rows=647 loops=1)
                                       Join Filter: (kt.id = t.kind_id)
                                       Rows Removed by Join Filter: 5355
                                       ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.015..0.016 rows=1 loops=1)
                                             Filter: ((kind)::text = 'movie'::text)
                                             Rows Removed by Filter: 6
                                       ->  Nested Loop  (cost=2.98..10218.42 rows=17 width=39) (actual time=0.385..346.621 rows=6002 loops=1)
                                             Join Filter: (cc.movie_id = t.id)
                                             ->  Nested Loop  (cost=2.55..10175.60 rows=32 width=14) (actual time=0.272..259.302 rows=17898 loops=1)
                                                   Join Filter: (it2.id = mi_idx.info_type_id)
                                                   Rows Removed by Join Filter: 8960
                                                   ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.014..0.016 rows=1 loops=1)
                                                         Filter: ((info)::text = 'rating'::text)
                                                         Rows Removed by Filter: 112
                                                   ->  Nested Loop  (cost=2.55..10128.32 rows=3590 width=18) (actual time=0.145..255.821 rows=26858 loops=1)
                                                         ->  Hash Join  (cost=2.12..2996.88 rows=8443 width=4) (actual time=0.078..48.733 rows=85941 loops=1)
                                                               Hash Cond: (cc.status_id = cct2.id)
                                                               ->  Hash Join  (cost=1.06..2813.24 rows=33772 width=8) (actual time=0.031..34.362 rows=85941 loops=1)
                                                                     Hash Cond: (cc.subject_id = cct1.id)
                                                                     ->  Seq Scan on complete_cast cc  (cost=0.00..2081.86 rows=135086 width=12) (actual time=0.012..12.191 rows=135086 loops=1)
                                                                     ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.004..0.005 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=1)
                                                                                 Filter: ((kind)::text = 'cast'::text)
                                                                                 Rows Removed by Filter: 3
                                                               ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.020..0.020 rows=2 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.015..0.015 rows=2 loops=1)
                                                                           Filter: ((kind)::text ~~ '%complete%'::text)
                                                                           Rows Removed by Filter: 2
                                                         ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.83 rows=1 width=14) (actual time=0.002..0.002 rows=0 loops=85941)
                                                               Index Cond: (movie_id = cc.movie_id)
                                                               Filter: ((info)::text > '7.0'::text)
                                                               Rows Removed by Filter: 2
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..1.33 rows=1 width=25) (actual time=0.005..0.005 rows=0 loops=17898)
                                                   Index Cond: (id = mi_idx.movie_id)
                                                   Filter: (production_year > 2000)
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.36 rows=47 width=8) (actual time=0.010..0.029 rows=122 loops=647)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.45 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=79039)
                                 Index Cond: (id = mk.keyword_id)
                                 Filter: ((keyword)::text = ANY ('{superhero,marvel-comics,based-on-comic,tv-special,fight,violence,magnet,web,claw,laser}'::text[]))
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.011..0.402 rows=181 loops=326)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=19) (actual time=0.005..0.005 rows=1 loops=58947)
                     Index Cond: (id = ci.person_id)
         ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=20) (actual time=0.002..0.002 rows=0 loops=58947)
               Index Cond: (id = ci.person_role_id)
               Filter: ((name IS NOT NULL) AND (((name)::text ~~ '%man%'::text) OR ((name)::text ~~ '%Man%'::text)))
               Rows Removed by Filter: 0
 Planning Time: 69.030 ms
 Execution Time: 1132.234 ms
(61 rows)

SET
                                                                                                      QUERY PLAN                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7388.77..7388.78 rows=1 width=96) (actual time=280.911..280.911 rows=1 loops=1)
   ->  Nested Loop  (cost=9.45..7388.76 rows=1 width=39) (actual time=31.067..280.866 rows=93 loops=1)
         Join Filter: (cct1.id = cc.subject_id)
         Rows Removed by Join Filter: 87
         ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.014..0.015 rows=1 loops=1)
               Filter: ((kind)::text = 'cast'::text)
               Rows Removed by Filter: 3
         ->  Nested Loop  (cost=9.45..7387.70 rows=1 width=43) (actual time=31.051..280.825 rows=180 loops=1)
               Join Filter: (cct2.id = cc.status_id)
               Rows Removed by Join Filter: 180
               ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.003 rows=2 loops=1)
                     Filter: ((kind)::text ~~ '%complete%'::text)
                     Rows Removed by Filter: 2
               ->  Nested Loop  (cost=9.45..7386.64 rows=1 width=47) (actual time=22.099..140.388 rows=180 loops=2)
                     ->  Nested Loop  (cost=9.03..7386.16 rows=1 width=55) (actual time=19.442..139.936 rows=191 loops=2)
                           ->  Nested Loop  (cost=8.60..7385.70 rows=1 width=59) (actual time=19.425..138.626 rows=191 loops=2)
                                 ->  Nested Loop  (cost=8.17..7379.30 rows=14 width=47) (actual time=19.359..124.535 rows=7981 loops=2)
                                       Join Filter: (t.id = ci.movie_id)
                                       ->  Nested Loop  (cost=7.61..7377.31 rows=1 width=35) (actual time=19.340..107.213 rows=31 loops=2)
                                             Join Filter: (kt.id = t.kind_id)
                                             Rows Removed by Join Filter: 167
                                             ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=2)
                                                   Filter: ((kind)::text = 'movie'::text)
                                                   Rows Removed by Filter: 6
                                             ->  Nested Loop  (cost=7.61..7376.21 rows=1 width=39) (actual time=0.830..107.176 rows=198 loops=2)
                                                   ->  Nested Loop  (cost=7.18..7375.73 rows=1 width=14) (actual time=0.814..104.329 rows=313 loops=2)
                                                         Join Filter: (mi_idx.info_type_id = it2.id)
                                                         Rows Removed by Join Filter: 612
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.011..0.013 rows=1 loops=2)
                                                               Filter: ((info)::text = 'rating'::text)
                                                               Rows Removed by Filter: 112
                                                         ->  Nested Loop  (cost=7.18..7373.13 rows=15 width=18) (actual time=0.691..104.196 rows=925 loops=2)
                                                               ->  Nested Loop  (cost=6.75..7304.56 rows=135 width=4) (actual time=0.589..57.469 rows=9984 loops=2)
                                                                     ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=0.074..20.909 rows=4 loops=2)
                                                                           Filter: ((keyword)::text = ANY ('{superhero,marvel-comics,based-on-comic,fight}'::text[]))
                                                                           Rows Removed by Filter: 134166
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1082.76 rows=299 width=8) (actual time=0.694..8.858 rows=2496 loops=8)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=15372
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.387..0.387 rows=2496 loops=8)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=14) (actual time=0.004..0.004 rows=0 loops=19968)
                                                                     Index Cond: (movie_id = mk.movie_id)
                                                                     Filter: ((info)::text > '8.0'::text)
                                                                     Rows Removed by Filter: 2
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.009..0.009 rows=1 loops=626)
                                                         Index Cond: (id = mk.movie_id)
                                                         Filter: (production_year > 2005)
                                                         Rows Removed by Filter: 0
                                       ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.013..0.517 rows=257 loops=62)
                                             Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=20) (actual time=0.002..0.002 rows=0 loops=15962)
                                       Index Cond: (id = ci.person_role_id)
                                       Filter: ((name IS NOT NULL) AND (((name)::text ~~ '%man%'::text) OR ((name)::text ~~ '%Man%'::text)))
                                       Rows Removed by Filter: 0
                           ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=382)
                                 Index Cond: (id = ci.person_id)
                                 Heap Fetches: 382
                     ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.002..0.002 rows=1 loops=382)
                           Index Cond: (movie_id = t.id)
 Planning Time: 71.034 ms
 Execution Time: 281.125 ms
(62 rows)

SET
                                                                                                   QUERY PLAN                                                                                                   
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=14668.28..14668.29 rows=1 width=96) (actual time=1534.095..1534.095 rows=1 loops=1)
   ->  Nested Loop  (cost=9.45..14668.27 rows=1 width=39) (actual time=8.305..1532.274 rows=5400 loops=1)
         ->  Nested Loop  (cost=9.02..14667.82 rows=1 width=43) (actual time=8.280..1487.961 rows=5400 loops=1)
               Join Filter: (it2.id = mi_idx.info_type_id)
               Rows Removed by Join Filter: 11196
               ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.018..0.019 rows=1 loops=1)
                     Filter: ((info)::text = 'rating'::text)
                     Rows Removed by Filter: 112
               ->  Nested Loop  (cost=9.02..14665.39 rows=1 width=47) (actual time=8.259..1485.995 rows=16596 loops=1)
                     Join Filter: (t.id = mi_idx.movie_id)
                     ->  Nested Loop  (cost=8.59..14664.88 rows=1 width=53) (actual time=8.238..1463.752 rows=5406 loops=1)
                           ->  Nested Loop  (cost=8.16..14658.47 rows=14 width=41) (actual time=7.929..1037.789 rows=189844 loops=1)
                                 Join Filter: (t.id = ci.movie_id)
                                 ->  Nested Loop  (cost=7.60..14656.48 rows=1 width=29) (actual time=7.891..498.159 rows=1267 loops=1)
                                       Join Filter: (cct2.id = cc.status_id)
                                       Rows Removed by Join Filter: 1267
                                       ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.008..0.008 rows=2 loops=1)
                                             Filter: ((kind)::text ~~ '%complete%'::text)
                                             Rows Removed by Filter: 2
                                       ->  Nested Loop  (cost=7.60..14655.42 rows=1 width=33) (actual time=5.803..248.808 rows=1267 loops=2)
                                             Join Filter: (cct1.id = cc.subject_id)
                                             Rows Removed by Join Filter: 218
                                             ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=2)
                                                   Filter: ((kind)::text = 'cast'::text)
                                                   Rows Removed by Filter: 3
                                             ->  Nested Loop  (cost=7.60..14654.36 rows=1 width=37) (actual time=5.800..248.464 rows=1485 loops=2)
                                                   ->  Nested Loop  (cost=7.18..14641.93 rows=26 width=25) (actual time=5.721..234.699 rows=5032 loops=2)
                                                         Join Filter: (kt.id = t.kind_id)
                                                         Rows Removed by Join Filter: 5581
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.004..0.005 rows=1 loops=2)
                                                               Filter: ((kind)::text = 'movie'::text)
                                                               Rows Removed by Filter: 6
                                                         ->  Nested Loop  (cost=7.18..14638.55 rows=183 width=29) (actual time=0.659..233.312 rows=10613 loops=2)
                                                               ->  Nested Loop  (cost=6.75..14474.11 rows=337 width=4) (actual time=0.642..109.406 rows=24091 loops=2)
                                                                     ->  Seq Scan on keyword k  (cost=0.00..3967.82 rows=10 width=4) (actual time=0.138..36.125 rows=10 loops=2)
                                                                           Filter: ((keyword)::text = ANY ('{superhero,marvel-comics,based-on-comic,tv-special,fight,violence,magnet,web,claw,laser}'::text[]))
                                                                           Rows Removed by Filter: 134160
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1047.64 rows=299 width=8) (actual time=0.648..7.030 rows=2409 loops=20)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=34254
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.363..0.363 rows=2409 loops=20)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.005..0.005 rows=0 loops=48182)
                                                                     Index Cond: (id = mk.movie_id)
                                                                     Filter: (production_year > 2000)
                                                                     Rows Removed by Filter: 1
                                                   ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.002..0.002 rows=0 loops=10064)
                                                         Index Cond: (movie_id = t.id)
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.012..0.400 rows=150 loops=1267)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=20) (actual time=0.002..0.002 rows=0 loops=189844)
                                 Index Cond: (id = ci.person_role_id)
                                 Filter: ((name IS NOT NULL) AND (((name)::text ~~ '%man%'::text) OR ((name)::text ~~ '%Man%'::text)))
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.48 rows=3 width=14) (actual time=0.003..0.003 rows=3 loops=5406)
                           Index Cond: (movie_id = ci.movie_id)
         ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=5400)
               Index Cond: (id = ci.person_id)
               Heap Fetches: 5400
 Planning Time: 69.105 ms
 Execution Time: 1534.323 ms
(61 rows)

SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3308.26..3308.27 rows=1 width=96) (actual time=26.190..26.190 rows=1 loops=1)
   ->  Nested Loop  (cost=6.00..3308.26 rows=1 width=118) (actual time=3.469..26.071 rows=477 loops=1)
         ->  Nested Loop  (cost=5.58..3307.80 rows=1 width=103) (actual time=3.443..24.044 rows=1106 loops=1)
               Join Filter: (ct.id = mc.company_type_id)
               Rows Removed by Join Filter: 57
               ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.015..0.016 rows=1 loops=1)
                     Filter: ((kind)::text = 'production companies'::text)
                     Rows Removed by Filter: 3
               ->  Nested Loop  (cost=5.58..3306.72 rows=2 width=107) (actual time=3.426..23.905 rows=1163 loops=1)
                     Join Filter: (ml.movie_id = mc.movie_id)
                     ->  Nested Loop  (cost=5.15..3306.16 rows=1 width=119) (actual time=3.404..23.213 rows=154 loops=1)
                           ->  Nested Loop  (cost=4.73..2463.07 rows=1911 width=123) (actual time=3.366..20.119 rows=1853 loops=1)
                                 Join Filter: (ml.movie_id = mk.movie_id)
                                 ->  Nested Loop  (cost=4.29..2380.91 rows=41 width=115) (actual time=3.343..19.199 rows=213 loops=1)
                                       Join Filter: (ml.movie_id = mi.movie_id)
                                       ->  Nested Loop  (cost=3.86..2105.18 rows=121 width=111) (actual time=0.961..14.110 rows=179 loops=1)
                                             Join Filter: (ml.movie_id = t.id)
                                             ->  Hash Join  (cost=3.43..1527.00 rows=333 width=90) (actual time=0.937..13.135 rows=189 loops=1)
                                                   Hash Cond: (ml.link_type_id = lt.id)
                                                   ->  Merge Join  (cost=2.19..1506.31 rows=6002 width=12) (actual time=0.064..12.850 rows=3346 loops=1)
                                                         Merge Cond: (cc.movie_id = ml.movie_id)
                                                         ->  Nested Loop  (cost=0.42..9294.58 rows=16886 width=4) (actual time=0.029..5.065 rows=5561 loops=1)
                                                               Join Filter: (cc.subject_id = cct1.id)
                                                               Rows Removed by Join Filter: 2227
                                                               ->  Nested Loop  (cost=0.42..8364.79 rows=33772 width=8) (actual time=0.020..3.684 rows=5561 loops=1)
                                                                     Join Filter: (cct2.id = cc.status_id)
                                                                     Rows Removed by Join Filter: 432
                                                                     ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..6337.45 rows=135086 width=12) (actual time=0.008..2.290 rows=5993 loops=1)
                                                                     ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=5993)
                                                                           ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                                                                 Filter: ((kind)::text = 'complete'::text)
                                                                                 Rows Removed by Filter: 3
                                                               ->  Materialize  (cost=0.00..1.06 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=5561)
                                                                     ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=2 width=4) (actual time=0.002..0.002 rows=2 loops=1)
                                                                           Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
                                                         ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..959.51 rows=29997 width=8) (actual time=0.008..5.207 rows=30638 loops=1)
                                                   ->  Hash  (cost=1.23..1.23 rows=1 width=86) (actual time=0.018..0.018 rows=2 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.009..0.012 rows=2 loops=1)
                                                               Filter: ((link)::text ~~ '%follow%'::text)
                                                               Rows Removed by Filter: 16
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..1.72 rows=1 width=21) (actual time=0.005..0.005 rows=1 loops=189)
                                                   Index Cond: (id = cc.movie_id)
                                                   Filter: ((production_year >= 1950) AND (production_year <= 2000))
                                                   Rows Removed by Filter: 0
                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.27 rows=1 width=4) (actual time=0.027..0.028 rows=1 loops=179)
                                             Index Cond: (movie_id = t.id)
                                             Filter: ((info)::text = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
                                             Rows Removed by Filter: 27
                                 ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.42 rows=47 width=8) (actual time=0.002..0.003 rows=9 loops=213)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=1853)
                                 Index Cond: (id = mk.keyword_id)
                                 Filter: ((keyword)::text = 'sequel'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=2 width=12) (actual time=0.002..0.003 rows=8 loops=154)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: (note IS NULL)
                           Rows Removed by Filter: 1
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=1106)
               Index Cond: (id = mc.company_id)
               Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
               Rows Removed by Filter: 1
 Planning Time: 70.085 ms
 Execution Time: 26.441 ms
(65 rows)

SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=2420.10..2420.11 rows=1 width=96) (actual time=35.750..35.750 rows=1 loops=1)
   ->  Nested Loop  (cost=3.52..2420.10 rows=1 width=118) (actual time=25.623..35.688 rows=247 loops=1)
         Join Filter: (ml.movie_id = mi.movie_id)
         ->  Nested Loop  (cost=3.08..2418.52 rows=1 width=138) (actual time=25.592..35.024 rows=95 loops=1)
               ->  Nested Loop  (cost=2.66..2397.77 rows=47 width=142) (actual time=25.536..33.861 rows=703 loops=1)
                     Join Filter: (ml.movie_id = mk.movie_id)
                     ->  Nested Loop  (cost=2.23..2395.81 rows=1 width=134) (actual time=25.514..33.488 rows=95 loops=1)
                           ->  Nested Loop  (cost=1.81..2395.35 rows=1 width=119) (actual time=25.498..33.135 rows=190 loops=1)
                                 Join Filter: (ml.movie_id = t.id)
                                 ->  Nested Loop  (cost=1.38..2375.69 rows=33 width=98) (actual time=1.927..31.791 rows=705 loops=1)
                                       Join Filter: (lt.id = ml.link_type_id)
                                       Rows Removed by Join Filter: 10769
                                       ->  Merge Join  (cost=1.38..2365.44 rows=601 width=20) (actual time=0.440..29.846 rows=5794 loops=1)
                                             Merge Cond: (mc.movie_id = ml.movie_id)
                                             ->  Nested Loop  (cost=0.85..33746.92 rows=10432 width=12) (actual time=0.404..22.282 rows=4702 loops=1)
                                                   Join Filter: (ct.id = mc.company_type_id)
                                                   Rows Removed by Join Filter: 109
                                                   ->  Nested Loop  (cost=0.85..33119.98 rows=41726 width=16) (actual time=0.398..21.164 rows=4811 loops=1)
                                                         ->  Nested Loop  (cost=0.42..11067.56 rows=16886 width=4) (actual time=0.021..5.025 rows=5561 loops=1)
                                                               Join Filter: (cc.status_id = cct2.id)
                                                               Rows Removed by Join Filter: 432
                                                               ->  Nested Loop  (cost=0.42..10053.37 rows=67543 width=8) (actual time=0.017..3.735 rows=5993 loops=1)
                                                                     Join Filter: (cct1.id = cc.subject_id)
                                                                     Rows Removed by Join Filter: 2305
                                                                     ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..6337.45 rows=135086 width=12) (actual time=0.005..1.908 rows=5993 loops=1)
                                                                     ->  Materialize  (cost=0.00..1.06 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=5993)
                                                                           ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=2 width=4) (actual time=0.006..0.007 rows=2 loops=1)
                                                                                 Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
                                                               ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=5993)
                                                                     ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1)
                                                                           Filter: ((kind)::text = 'complete'::text)
                                                                           Rows Removed by Filter: 3
                                                         ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..1.29 rows=2 width=12) (actual time=0.002..0.003 rows=1 loops=5561)
                                                               Index Cond: (movie_id = cc.movie_id)
                                                               Filter: (note IS NULL)
                                                               Rows Removed by Filter: 2
                                                   ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=4811)
                                                         ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=1)
                                                               Filter: ((kind)::text = 'production companies'::text)
                                                               Rows Removed by Filter: 3
                                             ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..959.51 rows=29997 width=8) (actual time=0.009..4.570 rows=33634 loops=1)
                                       ->  Materialize  (cost=0.00..1.23 rows=1 width=86) (actual time=0.000..0.000 rows=2 loops=5794)
                                             ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.002..0.006 rows=2 loops=1)
                                                   Filter: ((link)::text ~~ '%follow%'::text)
                                                   Rows Removed by Filter: 16
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.58 rows=1 width=21) (actual time=0.002..0.002 rows=0 loops=705)
                                       Index Cond: (id = mc.movie_id)
                                       Filter: (production_year = 1998)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=190)
                                 Index Cond: (id = mc.company_id)
                                 Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.37 rows=47 width=8) (actual time=0.002..0.003 rows=7 loops=95)
                           Index Cond: (movie_id = mc.movie_id)
               ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=703)
                     Index Cond: (id = mk.keyword_id)
                     Filter: ((keyword)::text = 'sequel'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.56 rows=1 width=4) (actual time=0.005..0.006 rows=3 loops=95)
               Index Cond: (movie_id = mk.movie_id)
               Filter: ((info)::text = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
               Rows Removed by Filter: 10
 Planning Time: 69.606 ms
 Execution Time: 35.993 ms
(65 rows)

SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3422.73..3422.74 rows=1 width=96) (actual time=41.678..41.678 rows=1 loops=1)
   ->  Nested Loop  (cost=3.38..3422.71 rows=3 width=118) (actual time=6.168..41.518 rows=743 loops=1)
         Join Filter: (ml.movie_id = mi.movie_id)
         ->  Nested Loop  (cost=2.94..3420.85 rows=1 width=138) (actual time=6.147..39.602 rows=172 loops=1)
               Join Filter: (mc.company_type_id = ct.id)
               Rows Removed by Join Filter: 19
               ->  Nested Loop  (cost=2.94..3419.79 rows=1 width=142) (actual time=6.143..39.398 rows=191 loops=1)
                     ->  Nested Loop  (cost=2.52..3378.74 rows=93 width=146) (actual time=3.414..33.672 rows=3396 loops=1)
                           Join Filter: (ml.movie_id = mk.movie_id)
                           ->  Nested Loop  (cost=2.09..3374.90 rows=2 width=138) (actual time=3.388..32.067 rows=298 loops=1)
                                 Join Filter: (lt.id = ml.link_type_id)
                                 Rows Removed by Join Filter: 1113
                                 ->  Merge Join  (cost=2.09..3373.07 rows=40 width=60) (actual time=2.492..31.788 rows=720 loops=1)
                                       Merge Cond: (t.id = ml.movie_id)
                                       ->  Nested Loop  (cost=1.70..32069.95 rows=3391 width=52) (actual time=1.360..25.870 rows=161 loops=1)
                                             ->  Nested Loop  (cost=1.27..29418.97 rows=4524 width=31) (actual time=1.337..24.277 rows=174 loops=1)
                                                   ->  Nested Loop  (cost=0.85..19898.64 rows=20863 width=16) (actual time=0.269..14.688 rows=3375 loops=1)
                                                         ->  Nested Loop  (cost=0.42..8872.43 rows=8443 width=4) (actual time=0.025..4.599 rows=3834 loops=1)
                                                               Join Filter: (cct2.id = cc.status_id)
                                                               Rows Removed by Join Filter: 372
                                                               ->  Nested Loop  (cost=0.42..8364.79 rows=33772 width=8) (actual time=0.015..3.681 rows=3834 loops=1)
                                                                     Join Filter: (cct1.id = cc.subject_id)
                                                                     Rows Removed by Join Filter: 2385
                                                                     ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..6337.45 rows=135086 width=12) (actual time=0.005..2.038 rows=6219 loops=1)
                                                                     ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=6219)
                                                                           ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.004..0.005 rows=1 loops=1)
                                                                                 Filter: ((kind)::text = 'cast'::text)
                                                                                 Rows Removed by Filter: 3
                                                               ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=3834)
                                                                     ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.008..0.008 rows=2 loops=1)
                                                                           Filter: ((kind)::text ~~ 'complete%'::text)
                                                                           Rows Removed by Filter: 2
                                                         ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..1.29 rows=2 width=12) (actual time=0.002..0.002 rows=1 loops=3834)
                                                               Index Cond: (movie_id = cc.movie_id)
                                                               Filter: (note IS NULL)
                                                               Rows Removed by Filter: 2
                                                   ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=3375)
                                                         Index Cond: (id = mc.company_id)
                                                         Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..0.59 rows=1 width=21) (actual time=0.009..0.009 rows=1 loops=174)
                                                   Index Cond: (id = mc.movie_id)
                                                   Filter: ((production_year >= 1950) AND (production_year <= 2010))
                                                   Rows Removed by Filter: 0
                                       ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..959.51 rows=29997 width=8) (actual time=0.008..3.911 rows=30313 loops=1)
                                 ->  Materialize  (cost=0.00..1.23 rows=1 width=86) (actual time=0.000..0.000 rows=2 loops=720)
                                       ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.003..0.006 rows=2 loops=1)
                                             Filter: ((link)::text ~~ '%follow%'::text)
                                             Rows Removed by Filter: 16
                           ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.33 rows=47 width=8) (actual time=0.002..0.003 rows=11 loops=298)
                                 Index Cond: (movie_id = t.id)
                     ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=3396)
                           Index Cond: (id = mk.keyword_id)
                           Filter: ((keyword)::text = 'sequel'::text)
                           Rows Removed by Filter: 1
               ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.001 rows=1 loops=191)
                     Filter: ((kind)::text = 'production companies'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.82 rows=3 width=4) (actual time=0.008..0.010 rows=4 loops=172)
               Index Cond: (movie_id = mk.movie_id)
               Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,English}'::text[]))
               Rows Removed by Filter: 15
 Planning Time: 69.929 ms
 Execution Time: 41.900 ms
(64 rows)

SET
                                                                                                            QUERY PLAN                                                                                                            
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7394.90..7394.91 rows=1 width=96) (actual time=498.804..498.805 rows=1 loops=1)
   ->  Nested Loop  (cost=9.31..7394.89 rows=1 width=42) (actual time=5.995..497.684 rows=4803 loops=1)
         Join Filter: (ct.id = mc.company_type_id)
         ->  Nested Loop  (cost=9.31..7393.80 rows=1 width=46) (actual time=5.993..493.685 rows=4803 loops=1)
               ->  Nested Loop  (cost=8.89..7393.26 rows=1 width=31) (actual time=5.982..478.573 rows=4955 loops=1)
                     Join Filter: (t.id = mc.movie_id)
                     ->  Nested Loop  (cost=8.46..7392.68 rows=1 width=43) (actual time=5.946..468.914 rows=432 loops=1)
                           Join Filter: (it1.id = mi.info_type_id)
                           Rows Removed by Join Filter: 49
                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.006..0.013 rows=1 loops=1)
                                 Filter: ((info)::text = 'countries'::text)
                                 Rows Removed by Filter: 112
                           ->  Nested Loop  (cost=8.46..7390.25 rows=1 width=47) (actual time=5.938..468.785 rows=481 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=8.03..7388.35 rows=1 width=39) (actual time=5.879..412.953 rows=473 loops=1)
                                       Join Filter: (cc.status_id = cct2.id)
                                       Rows Removed by Join Filter: 1159
                                       ->  Nested Loop  (cost=8.03..7387.27 rows=1 width=43) (actual time=5.876..412.025 rows=544 loops=1)
                                             Join Filter: (kt.id = t.kind_id)
                                             Rows Removed by Join Filter: 244
                                             ->  Nested Loop  (cost=8.03..7386.15 rows=1 width=47) (actual time=5.861..410.945 rows=596 loops=1)
                                                   ->  Nested Loop  (cost=7.60..7385.67 rows=1 width=22) (actual time=5.837..371.896 rows=5973 loops=1)
                                                         Join Filter: (cct1.id = cc.subject_id)
                                                         Rows Removed by Join Filter: 13371
                                                         ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1)
                                                               Filter: ((kind)::text = 'crew'::text)
                                                               Rows Removed by Filter: 3
                                                         ->  Nested Loop  (cost=7.60..7384.57 rows=4 width=26) (actual time=5.298..369.854 rows=19344 loops=1)
                                                               ->  Nested Loop  (cost=7.18..7383.14 rows=3 width=14) (actual time=4.481..308.580 rows=31800 loops=1)
                                                                     Join Filter: (mi_idx.info_type_id = it2.id)
                                                                     Rows Removed by Join Filter: 62093
                                                                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.008..0.010 rows=1 loops=1)
                                                                           Filter: ((info)::text = 'rating'::text)
                                                                           Rows Removed by Filter: 112
                                                                     ->  Nested Loop  (cost=7.18..7375.83 rows=392 width=18) (actual time=4.469..299.995 rows=93893 loops=1)
                                                                           ->  Nested Loop  (cost=6.75..7304.56 rows=135 width=4) (actual time=4.444..145.441 rows=37091 loops=1)
                                                                                 ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.093..21.004 rows=3 loops=1)
                                                                                       Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                       Rows Removed by Filter: 134167
                                                                                 ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1082.76 rows=299 width=8) (actual time=3.388..39.996 rows=12364 loops=3)
                                                                                       Recheck Cond: (keyword_id = k.id)
                                                                                       Heap Blocks: exact=26312
                                                                                       ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.854..1.854 rows=12364 loops=3)
                                                                                             Index Cond: (keyword_id = k.id)
                                                                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=14) (actual time=0.003..0.004 rows=3 loops=37091)
                                                                                 Index Cond: (movie_id = mk.movie_id)
                                                                                 Filter: ((info)::text < '8.5'::text)
                                                                                 Rows Removed by Filter: 0
                                                               ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.001..0.002 rows=1 loops=31800)
                                                                     Index Cond: (movie_id = mk.movie_id)
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.006..0.006 rows=0 loops=5973)
                                                         Index Cond: (id = mk.movie_id)
                                                         Filter: (production_year > 2000)
                                                         Rows Removed by Filter: 1
                                             ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.001..0.001 rows=1 loops=596)
                                                   Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                   Rows Removed by Filter: 2
                                       ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=3 width=4) (actual time=0.001..0.001 rows=3 loops=544)
                                             Filter: ((kind)::text <> 'complete+verified'::text)
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.101..0.117 rows=1 loops=473)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                                       Rows Removed by Filter: 139
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.010..0.020 rows=11 loops=432)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                           Rows Removed by Filter: 10
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.003..0.003 rows=1 loops=4955)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text <> '[us]'::text)
                     Rows Removed by Filter: 0
         ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.000..0.000 rows=1 loops=4803)
 Planning Time: 86.386 ms
 Execution Time: 499.046 ms
(75 rows)

SET
                                                                                                            QUERY PLAN                                                                                                            
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7387.11..7387.12 rows=1 width=96) (actual time=383.441..383.441 rows=1 loops=1)
   ->  Nested Loop  (cost=9.31..7387.10 rows=1 width=42) (actual time=8.231..383.384 rows=148 loops=1)
         ->  Nested Loop  (cost=8.89..7386.56 rows=1 width=27) (actual time=8.206..382.608 rows=150 loops=1)
               Join Filter: (ct.id = mc.company_type_id)
               ->  Nested Loop  (cost=8.89..7385.47 rows=1 width=31) (actual time=8.198..382.457 rows=150 loops=1)
                     Join Filter: (t.id = mc.movie_id)
                     ->  Nested Loop  (cost=8.46..7384.89 rows=1 width=43) (actual time=8.170..382.009 rows=13 loops=1)
                           Join Filter: (it1.id = mi.info_type_id)
                           Rows Removed by Join Filter: 7
                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.006..0.013 rows=1 loops=1)
                                 Filter: ((info)::text = 'countries'::text)
                                 Rows Removed by Filter: 112
                           ->  Nested Loop  (cost=8.46..7382.46 rows=1 width=47) (actual time=8.161..381.986 rows=20 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=8.03..7380.89 rows=1 width=39) (actual time=6.387..367.149 rows=179 loops=1)
                                       Join Filter: (cct2.id = cc.status_id)
                                       Rows Removed by Join Filter: 394
                                       ->  Nested Loop  (cost=8.03..7379.81 rows=1 width=43) (actual time=6.384..366.829 rows=191 loops=1)
                                             Join Filter: (cct1.id = cc.subject_id)
                                             Rows Removed by Join Filter: 689
                                             ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=1)
                                                   Filter: ((kind)::text = 'crew'::text)
                                                   Rows Removed by Filter: 3
                                             ->  Nested Loop  (cost=8.03..7378.74 rows=1 width=47) (actual time=6.373..366.694 rows=880 loops=1)
                                                   ->  Nested Loop  (cost=7.61..7378.26 rows=1 width=35) (actual time=4.673..359.795 rows=2312 loops=1)
                                                         Join Filter: (kt.id = t.kind_id)
                                                         Rows Removed by Join Filter: 1695
                                                         ->  Nested Loop  (cost=7.61..7377.15 rows=1 width=39) (actual time=4.567..355.786 rows=2835 loops=1)
                                                               ->  Nested Loop  (cost=7.18..7376.66 rows=1 width=14) (actual time=4.545..283.082 rows=11708 loops=1)
                                                                     Join Filter: (it2.id = mi_idx.info_type_id)
                                                                     Rows Removed by Join Filter: 6993
                                                                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.008..0.010 rows=1 loops=1)
                                                                           Filter: ((info)::text = 'rating'::text)
                                                                           Rows Removed by Filter: 112
                                                                     ->  Nested Loop  (cost=7.18..7373.13 rows=90 width=18) (actual time=4.535..280.506 rows=18701 loops=1)
                                                                           ->  Nested Loop  (cost=6.75..7304.56 rows=135 width=4) (actual time=4.510..142.890 rows=37091 loops=1)
                                                                                 ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.133..20.973 rows=3 loops=1)
                                                                                       Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                       Rows Removed by Filter: 134167
                                                                                 ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1082.76 rows=299 width=8) (actual time=3.399..39.241 rows=12364 loops=3)
                                                                                       Recheck Cond: (keyword_id = k.id)
                                                                                       Heap Blocks: exact=26312
                                                                                       ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.865..1.865 rows=12364 loops=3)
                                                                                             Index Cond: (keyword_id = k.id)
                                                                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=14) (actual time=0.003..0.003 rows=1 loops=37091)
                                                                                 Index Cond: (movie_id = mk.movie_id)
                                                                                 Filter: ((info)::text > '6.5'::text)
                                                                                 Rows Removed by Filter: 2
                                                               ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.006..0.006 rows=0 loops=11708)
                                                                     Index Cond: (id = mk.movie_id)
                                                                     Filter: (production_year > 2005)
                                                                     Rows Removed by Filter: 1
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.000..0.001 rows=1 loops=2835)
                                                               Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                               Rows Removed by Filter: 2
                                                   ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.003..0.003 rows=0 loops=2312)
                                                         Index Cond: (movie_id = t.id)
                                       ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=3 width=4) (actual time=0.000..0.001 rows=3 loops=191)
                                             Filter: ((kind)::text <> 'complete+verified'::text)
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.56 rows=1 width=8) (actual time=0.079..0.082 rows=0 loops=179)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
                                       Rows Removed by Filter: 130
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.016..0.032 rows=12 loops=13)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                           Rows Removed by Filter: 17
               ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.000..0.000 rows=1 loops=150)
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.005..0.005 rows=1 loops=150)
               Index Cond: (id = mc.company_id)
               Filter: ((country_code)::text <> '[us]'::text)
               Rows Removed by Filter: 0
 Planning Time: 86.867 ms
 Execution Time: 383.694 ms
(75 rows)

SET
                                                                                                         QUERY PLAN                                                                                                         
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7394.43..7394.44 rows=1 width=96) (actual time=2362.381..2362.381 rows=1 loops=1)
   ->  Nested Loop  (cost=9.31..7394.42 rows=1 width=42) (actual time=10.423..2360.194 rows=8373 loops=1)
         Join Filter: (it2.id = mi_idx.info_type_id)
         Rows Removed by Join Filter: 16430
         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=1)
               Filter: ((info)::text = 'rating'::text)
               Rows Removed by Filter: 112
         ->  Nested Loop  (cost=9.31..7391.99 rows=1 width=46) (actual time=10.408..2357.871 rows=24803 loops=1)
               Join Filter: (t.id = mi_idx.movie_id)
               ->  Nested Loop  (cost=8.88..7391.46 rows=1 width=56) (actual time=10.382..2331.131 rows=8493 loops=1)
                     Join Filter: (kt.id = t.kind_id)
                     Rows Removed by Join Filter: 712
                     ->  Nested Loop  (cost=8.88..7390.35 rows=1 width=60) (actual time=10.374..2321.085 rows=8788 loops=1)
                           Join Filter: (mi.movie_id = t.id)
                           ->  Nested Loop  (cost=8.45..7389.84 rows=1 width=35) (actual time=5.280..2268.060 rows=22323 loops=1)
                                 Join Filter: (it1.id = mi.info_type_id)
                                 Rows Removed by Join Filter: 5071
                                 ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.003..0.010 rows=1 loops=1)
                                       Filter: ((info)::text = 'countries'::text)
                                       Rows Removed by Filter: 112
                                 ->  Nested Loop  (cost=8.45..7387.38 rows=4 width=39) (actual time=5.276..2264.111 rows=27394 loops=1)
                                       ->  Nested Loop  (cost=8.02..7383.59 rows=2 width=31) (actual time=5.005..384.212 rows=22725 loops=1)
                                             ->  Nested Loop  (cost=7.60..7381.96 rows=3 width=16) (actual time=4.992..319.306 rows=24082 loops=1)
                                                   Join Filter: (ct.id = mc.company_type_id)
                                                   Rows Removed by Join Filter: 7
                                                   ->  Nested Loop  (cost=7.60..7380.76 rows=3 width=20) (actual time=4.981..312.443 rows=24082 loops=1)
                                                         ->  Nested Loop  (cost=7.17..7373.86 rows=12 width=8) (actual time=4.916..221.128 rows=6704 loops=1)
                                                               Join Filter: (cc.subject_id = cct1.id)
                                                               Rows Removed by Join Filter: 3832
                                                               ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=1)
                                                                     Filter: ((kind)::text = 'cast'::text)
                                                                     Rows Removed by Filter: 3
                                                               ->  Nested Loop  (cost=7.17..7372.22 rows=47 width=12) (actual time=4.909..219.671 rows=10536 loops=1)
                                                                     Join Filter: (cct2.id = cc.status_id)
                                                                     Rows Removed by Join Filter: 9488
                                                                     ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.003..0.004 rows=1 loops=1)
                                                                           Filter: ((kind)::text = 'complete'::text)
                                                                           Rows Removed by Filter: 3
                                                                     ->  Nested Loop  (cost=7.17..7368.82 rows=188 width=16) (actual time=4.892..216.985 rows=20024 loops=1)
                                                                           ->  Nested Loop  (cost=6.75..7304.56 rows=135 width=4) (actual time=4.482..141.631 rows=37091 loops=1)
                                                                                 ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.149..21.075 rows=3 loops=1)
                                                                                       Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                       Rows Removed by Filter: 134167
                                                                                 ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1082.76 rows=299 width=8) (actual time=3.381..38.872 rows=12364 loops=3)
                                                                                       Recheck Cond: (keyword_id = k.id)
                                                                                       Heap Blocks: exact=26312
                                                                                       ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.856..1.856 rows=12364 loops=3)
                                                                                             Index Cond: (keyword_id = k.id)
                                                                           ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.002..0.002 rows=1 loops=37091)
                                                                                 Index Cond: (movie_id = mk.movie_id)
                                                         ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.009..0.013 rows=4 loops=6704)
                                                               Index Cond: (movie_id = mk.movie_id)
                                                               Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                                                               Rows Removed by Filter: 8
                                                   ->  Materialize  (cost=0.00..1.06 rows=4 width=4) (actual time=0.000..0.000 rows=1 loops=24082)
                                                         ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.007..0.008 rows=2 loops=1)
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=24082)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((country_code)::text <> '[us]'::text)
                                                   Rows Removed by Filter: 0
                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.070..0.082 rows=1 loops=22725)
                                             Index Cond: (movie_id = mk.movie_id)
                                             Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                                             Rows Removed by Filter: 203
                           ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=22323)
                                 Index Cond: (id = mk.movie_id)
                                 Filter: (production_year > 2005)
                                 Rows Removed by Filter: 1
                     ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.000..0.001 rows=1 loops=8788)
                           Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                           Rows Removed by Filter: 0
               ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=14) (actual time=0.002..0.003 rows=3 loops=8493)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text < '8.5'::text)
                     Rows Removed by Filter: 0
 Planning Time: 88.129 ms
 Execution Time: 2362.633 ms
(77 rows)

SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3945.49..3945.50 rows=1 width=96) (actual time=26.718..26.718 rows=1 loops=1)
   ->  Nested Loop  (cost=11.16..3945.49 rows=1 width=48) (actual time=7.946..26.436 rows=1620 loops=1)
         Join Filter: (it3.id = pi.info_type_id)
         Rows Removed by Join Filter: 3270
         ->  Seq Scan on info_type it3  (cost=0.00..2.41 rows=1 width=4) (actual time=0.008..0.014 rows=1 loops=1)
               Filter: ((info)::text = 'trivia'::text)
               Rows Removed by Filter: 112
         ->  Nested Loop  (cost=11.16..3943.06 rows=1 width=52) (actual time=7.921..26.097 rows=4890 loops=1)
               Join Filter: (n.id = pi.person_id)
               ->  Nested Loop  (cost=10.73..3922.80 rows=1 width=60) (actual time=7.893..24.667 rows=30 loops=1)
                     Join Filter: (cc.subject_id = cct1.id)
                     ->  Nested Loop  (cost=10.73..3921.74 rows=1 width=64) (actual time=7.889..24.630 rows=30 loops=1)
                           ->  Nested Loop  (cost=10.30..3919.44 rows=1 width=45) (actual time=7.859..24.533 rows=30 loops=1)
                                 Join Filter: (ci.role_id = rt.id)
                                 ->  Nested Loop  (cost=10.30..3918.28 rows=1 width=49) (actual time=7.846..24.481 rows=30 loops=1)
                                       Join Filter: (mi.info_type_id = it.id)
                                       ->  Nested Loop  (cost=10.30..3915.85 rows=1 width=53) (actual time=7.840..24.371 rows=30 loops=1)
                                             ->  Nested Loop  (cost=9.88..3913.83 rows=1 width=57) (actual time=7.828..23.946 rows=132 loops=1)
                                                   Join Filter: (t.id = mc.movie_id)
                                                   ->  Nested Loop  (cost=9.45..3908.99 rows=1 width=73) (actual time=7.800..23.853 rows=6 loops=1)
                                                         ->  Nested Loop  (cost=9.02..3902.76 rows=2 width=61) (actual time=6.949..23.188 rows=132 loops=1)
                                                               ->  Nested Loop  (cost=8.60..3899.85 rows=1 width=57) (actual time=6.891..22.542 rows=76 loops=1)
                                                                     Join Filter: (t.id = ci.movie_id)
                                                                     ->  Nested Loop  (cost=8.03..3852.25 rows=1 width=41) (actual time=6.861..20.879 rows=2 loops=1)
                                                                           Join Filter: (t.id = mi.movie_id)
                                                                           ->  Nested Loop  (cost=7.60..3809.27 rows=1 width=33) (actual time=6.786..20.511 rows=1 loops=1)
                                                                                 Join Filter: (cct2.id = cc.status_id)
                                                                                 ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=1)
                                                                                       Filter: ((kind)::text = 'complete+verified'::text)
                                                                                       Rows Removed by Filter: 3
                                                                                 ->  Nested Loop  (cost=7.60..3808.21 rows=1 width=37) (actual time=6.777..20.502 rows=1 loops=1)
                                                                                       Join Filter: (t.id = cc.movie_id)
                                                                                       ->  Nested Loop  (cost=7.18..3805.41 rows=1 width=25) (actual time=6.751..20.474 rows=1 loops=1)
                                                                                             ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=0.186..14.705 rows=414 loops=1)
                                                                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.054..11.782 rows=1 loops=1)
                                                                                                         Filter: ((keyword)::text = 'computer-animation'::text)
                                                                                                         Rows Removed by Filter: 134169
                                                                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=0.129..2.867 rows=414 loops=1)
                                                                                                         Recheck Cond: (keyword_id = k.id)
                                                                                                         Heap Blocks: exact=358
                                                                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.074..0.074 rows=414 loops=1)
                                                                                                               Index Cond: (keyword_id = k.id)
                                                                                             ->  Index Scan using title_pkey on title t  (cost=0.43..2.12 rows=1 width=21) (actual time=0.014..0.014 rows=0 loops=414)
                                                                                                   Index Cond: (id = mk.movie_id)
                                                                                                   Filter: ((production_year >= 2000) AND (production_year <= 2010) AND ((title)::text = 'Shrek 2'::text))
                                                                                                   Rows Removed by Filter: 1
                                                                                       ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..2.77 rows=2 width=12) (actual time=0.024..0.025 rows=1 loops=1)
                                                                                             Index Cond: (movie_id = mk.movie_id)
                                                                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..42.97 rows=1 width=8) (actual time=0.073..0.365 rows=2 loops=1)
                                                                                 Index Cond: (movie_id = mk.movie_id)
                                                                                 Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%200%'::text) OR ((info)::text ~~ 'USA:%200%'::text)))
                                                                                 Rows Removed by Filter: 455
                                                                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..47.58 rows=1 width=16) (actual time=0.017..0.823 rows=38 loops=2)
                                                                           Index Cond: (movie_id = mk.movie_id)
                                                                           Filter: ((note)::text = ANY ('{(voice),"(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                           Rows Removed by Filter: 191
                                                               ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.89 rows=2 width=4) (actual time=0.006..0.008 rows=2 loops=76)
                                                                     Index Cond: (person_id = ci.person_id)
                                                                     Heap Fetches: 132
                                                         ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..2.22 rows=1 width=20) (actual time=0.005..0.005 rows=0 loops=132)
                                                               Index Cond: (id = ci.person_role_id)
                                                               Filter: ((name)::text = 'Queen'::text)
                                                               Rows Removed by Filter: 1
                                                   ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..4.77 rows=5 width=8) (actual time=0.007..0.011 rows=22 loops=6)
                                                         Index Cond: (movie_id = mk.movie_id)
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..2.03 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=132)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((country_code)::text = '[us]'::text)
                                                   Rows Removed by Filter: 1
                                       ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=30)
                                             Filter: ((info)::text = 'release dates'::text)
                                             Rows Removed by Filter: 15
                                 ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=30)
                                       Filter: ((role)::text = 'actress'::text)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using name_pkey on name n  (cost=0.43..2.30 rows=1 width=19) (actual time=0.003..0.003 rows=1 loops=30)
                                 Index Cond: (id = ci.person_id)
                                 Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                     ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=30)
                           Filter: ((kind)::text = 'cast'::text)
               ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..19.93 rows=26 width=8) (actual time=0.002..0.027 rows=163 loops=30)
                     Index Cond: (person_id = an.person_id)
 Planning Time: 118.655 ms
 Execution Time: 27.077 ms
(84 rows)

SET
                                                                                                                 QUERY PLAN                                                                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4148.76..4148.77 rows=1 width=96) (actual time=179.286..179.286 rows=1 loops=1)
   ->  Nested Loop  (cost=11.16..4148.76 rows=1 width=48) (actual time=27.626..179.272 rows=15 loops=1)
         ->  Nested Loop  (cost=10.74..4146.73 rows=1 width=52) (actual time=27.614..179.030 rows=66 loops=1)
               Join Filter: (pi.info_type_id = it3.id)
               Rows Removed by Join Filter: 10692
               ->  Nested Loop  (cost=10.74..4144.31 rows=1 width=56) (actual time=26.343..86.403 rows=10758 loops=1)
                     Join Filter: (mi.info_type_id = it.id)
                     ->  Nested Loop  (cost=10.74..4141.88 rows=1 width=60) (actual time=26.336..53.870 rows=10758 loops=1)
                           Join Filter: (n.id = pi.person_id)
                           ->  Nested Loop  (cost=10.31..4121.62 rows=1 width=68) (actual time=26.321..50.270 rows=66 loops=1)
                                 ->  Nested Loop  (cost=9.88..4117.61 rows=1 width=56) (actual time=26.307..50.130 rows=66 loops=1)
                                       Join Filter: (n.id = an.person_id)
                                       ->  Nested Loop  (cost=9.46..4114.69 rows=1 width=52) (actual time=26.294..50.038 rows=22 loops=1)
                                             Join Filter: (mi.movie_id = t.id)
                                             ->  Nested Loop  (cost=9.03..4110.43 rows=2 width=55) (actual time=9.011..49.652 rows=193 loops=1)
                                                   Join Filter: (mc.movie_id = mi.movie_id)
                                                   ->  Nested Loop  (cost=8.59..3981.80 rows=3 width=47) (actual time=3.211..36.022 rows=167 loops=1)
                                                         Join Filter: (ci.movie_id = mc.movie_id)
                                                         ->  Nested Loop  (cost=8.16..3976.97 rows=1 width=39) (actual time=3.180..35.796 rows=6 loops=1)
                                                               ->  Nested Loop  (cost=7.73..3974.67 rows=1 width=20) (actual time=1.374..33.394 rows=175 loops=1)
                                                                     Join Filter: (rt.id = ci.role_id)
                                                                     Rows Removed by Join Filter: 528
                                                                     ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.014..0.016 rows=1 loops=1)
                                                                           Filter: ((role)::text = 'actress'::text)
                                                                           Rows Removed by Filter: 11
                                                                     ->  Nested Loop  (cost=7.73..3973.48 rows=3 width=24) (actual time=1.048..33.308 rows=703 loops=1)
                                                                           ->  Nested Loop  (cost=7.17..3830.71 rows=3 width=8) (actual time=1.003..15.647 rows=23 loops=1)
                                                                                 Join Filter: (cc.status_id = cct2.id)
                                                                                 Rows Removed by Join Filter: 51
                                                                                 ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=1)
                                                                                       Filter: ((kind)::text = 'complete+verified'::text)
                                                                                       Rows Removed by Filter: 3
                                                                                 ->  Nested Loop  (cost=7.17..3829.51 rows=12 width=12) (actual time=0.375..15.623 rows=74 loops=1)
                                                                                       Join Filter: (cc.subject_id = cct1.id)
                                                                                       Rows Removed by Join Filter: 16
                                                                                       ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=1)
                                                                                             Filter: ((kind)::text = 'cast'::text)
                                                                                             Rows Removed by Filter: 3
                                                                                       ->  Nested Loop  (cost=7.17..3827.87 rows=47 width=16) (actual time=0.373..15.599 rows=90 loops=1)
                                                                                             ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=0.141..13.207 rows=414 loops=1)
                                                                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.028..11.541 rows=1 loops=1)
                                                                                                         Filter: ((keyword)::text = 'computer-animation'::text)
                                                                                                         Rows Removed by Filter: 134169
                                                                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=0.111..1.618 rows=414 loops=1)
                                                                                                         Recheck Cond: (keyword_id = k.id)
                                                                                                         Heap Blocks: exact=358
                                                                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.060..0.061 rows=414 loops=1)
                                                                                                               Index Cond: (keyword_id = k.id)
                                                                                             ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..2.77 rows=2 width=12) (actual time=0.005..0.006 rows=0 loops=414)
                                                                                                   Index Cond: (movie_id = mk.movie_id)
                                                                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..47.58 rows=1 width=16) (actual time=0.093..0.763 rows=31 loops=23)
                                                                                 Index Cond: (movie_id = mk.movie_id)
                                                                                 Filter: ((note)::text = ANY ('{(voice),"(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                                 Rows Removed by Filter: 116
                                                               ->  Index Scan using name_pkey on name n  (cost=0.43..2.30 rows=1 width=19) (actual time=0.013..0.013 rows=0 loops=175)
                                                                     Index Cond: (id = ci.person_id)
                                                                     Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                                                     Rows Removed by Filter: 1
                                                         ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..4.77 rows=5 width=8) (actual time=0.019..0.031 rows=28 loops=6)
                                                               Index Cond: (movie_id = mk.movie_id)
                                                   ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..42.86 rows=1 width=8) (actual time=0.018..0.081 rows=1 loops=167)
                                                         Index Cond: (movie_id = mk.movie_id)
                                                         Filter: ((info)::text ~~ 'USA:%200%'::text)
                                                         Rows Removed by Filter: 422
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..2.12 rows=1 width=21) (actual time=0.002..0.002 rows=0 loops=193)
                                                   Index Cond: (id = mk.movie_id)
                                                   Filter: ((production_year >= 2000) AND (production_year <= 2005) AND ((title)::text = 'Shrek 2'::text))
                                                   Rows Removed by Filter: 1
                                       ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.89 rows=2 width=4) (actual time=0.002..0.003 rows=3 loops=22)
                                             Index Cond: (person_id = ci.person_id)
                                             Heap Fetches: 66
                                 ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..2.22 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=66)
                                       Index Cond: (id = ci.person_role_id)
                                       Filter: ((name)::text = 'Queen'::text)
                           ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..19.93 rows=26 width=8) (actual time=0.002..0.029 rows=163 loops=66)
                                 Index Cond: (person_id = an.person_id)
                     ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=10758)
                           Filter: ((info)::text = 'release dates'::text)
                           Rows Removed by Filter: 15
               ->  Seq Scan on info_type it3  (cost=0.00..2.41 rows=1 width=4) (actual time=0.003..0.008 rows=1 loops=10758)
                     Filter: ((info)::text = 'height'::text)
                     Rows Removed by Filter: 111
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..2.03 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=66)
               Index Cond: (id = mc.company_id)
               Filter: ((country_code)::text = '[us]'::text)
               Rows Removed by Filter: 1
 Planning Time: 116.749 ms
 Execution Time: 179.600 ms
(88 rows)

SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4547.37..4547.38 rows=1 width=96) (actual time=559.206..559.206 rows=1 loops=1)
   ->  Nested Loop  (cost=11.16..4547.36 rows=1 width=48) (actual time=72.603..555.886 rows=16308 loops=1)
         Join Filter: (cc.status_id = cct2.id)
         Rows Removed by Join Filter: 11714
         ->  Nested Loop  (cost=11.16..4546.30 rows=1 width=52) (actual time=17.031..528.125 rows=28022 loops=1)
               ->  Nested Loop  (cost=10.74..4544.27 rows=1 width=56) (actual time=16.643..305.541 rows=149974 loops=1)
                     Join Filter: (n.id = an.person_id)
                     ->  Nested Loop  (cost=10.32..4541.38 rows=1 width=68) (actual time=16.611..197.475 rows=36250 loops=1)
                           Join Filter: (it3.id = pi.info_type_id)
                           Rows Removed by Join Filter: 117713
                           ->  Seq Scan on info_type it3  (cost=0.00..2.41 rows=1 width=4) (actual time=0.007..0.013 rows=1 loops=1)
                                 Filter: ((info)::text = 'trivia'::text)
                                 Rows Removed by Filter: 112
                           ->  Nested Loop  (cost=10.32..4538.95 rows=1 width=72) (actual time=16.601..186.943 rows=153963 loops=1)
                                 Join Filter: (n.id = pi.person_id)
                                 ->  Nested Loop  (cost=9.89..4518.69 rows=1 width=64) (actual time=16.567..142.128 rows=1206 loops=1)
                                       Join Filter: (ci.role_id = rt.id)
                                       ->  Nested Loop  (cost=9.89..4517.53 rows=1 width=68) (actual time=16.564..140.749 rows=1206 loops=1)
                                             ->  Nested Loop  (cost=9.46..4515.32 rows=1 width=56) (actual time=16.535..138.186 rows=1455 loops=1)
                                                   Join Filter: (cc.subject_id = cct1.id)
                                                   ->  Nested Loop  (cost=9.46..4514.26 rows=1 width=60) (actual time=16.529..136.845 rows=1455 loops=1)
                                                         Join Filter: (t.id = mc.movie_id)
                                                         ->  Nested Loop  (cost=9.03..4509.42 rows=1 width=76) (actual time=16.495..135.814 rows=58 loops=1)
                                                               Join Filter: (mi.info_type_id = it.id)
                                                               ->  Nested Loop  (cost=9.03..4506.99 rows=1 width=80) (actual time=16.489..135.581 rows=58 loops=1)
                                                                     ->  Nested Loop  (cost=8.61..4504.20 rows=1 width=68) (actual time=14.573..135.250 rows=75 loops=1)
                                                                           ->  Nested Loop  (cost=8.18..4501.91 rows=1 width=49) (actual time=2.513..99.616 rows=7505 loops=1)
                                                                                 Join Filter: (t.id = ci.movie_id)
                                                                                 ->  Nested Loop  (cost=7.61..4406.63 rows=2 width=33) (actual time=0.758..42.569 rows=357 loops=1)
                                                                                       Join Filter: (t.id = mi.movie_id)
                                                                                       ->  Nested Loop  (cost=7.18..3804.91 rows=14 width=25) (actual time=0.148..18.131 rows=249 loops=1)
                                                                                             ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=0.138..14.275 rows=414 loops=1)
                                                                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.029..12.710 rows=1 loops=1)
                                                                                                         Filter: ((keyword)::text = 'computer-animation'::text)
                                                                                                         Rows Removed by Filter: 134169
                                                                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=0.107..1.500 rows=414 loops=1)
                                                                                                         Recheck Cond: (keyword_id = k.id)
                                                                                                         Heap Blocks: exact=358
                                                                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.058..0.058 rows=414 loops=1)
                                                                                                               Index Cond: (keyword_id = k.id)
                                                                                             ->  Index Scan using title_pkey on title t  (cost=0.43..2.12 rows=1 width=21) (actual time=0.009..0.009 rows=1 loops=414)
                                                                                                   Index Cond: (id = mk.movie_id)
                                                                                                   Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                                                                                   Rows Removed by Filter: 0
                                                                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..42.97 rows=1 width=8) (actual time=0.044..0.098 rows=1 loops=249)
                                                                                             Index Cond: (movie_id = mk.movie_id)
                                                                                             Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%200%'::text) OR ((info)::text ~~ 'USA:%200%'::text)))
                                                                                             Rows Removed by Filter: 88
                                                                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..47.63 rows=1 width=16) (actual time=0.027..0.156 rows=21 loops=357)
                                                                                       Index Cond: (movie_id = mk.movie_id)
                                                                                       Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                                       Rows Removed by Filter: 72
                                                                           ->  Index Scan using name_pkey on name n  (cost=0.43..2.29 rows=1 width=19) (actual time=0.005..0.005 rows=0 loops=7505)
                                                                                 Index Cond: (id = ci.person_id)
                                                                                 Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                                                                 Rows Removed by Filter: 1
                                                                     ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..2.77 rows=2 width=12) (actual time=0.004..0.004 rows=1 loops=75)
                                                                           Index Cond: (movie_id = t.id)
                                                               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=58)
                                                                     Filter: ((info)::text = 'release dates'::text)
                                                                     Rows Removed by Filter: 15
                                                         ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..4.77 rows=5 width=8) (actual time=0.007..0.013 rows=25 loops=58)
                                                               Index Cond: (movie_id = mk.movie_id)
                                                   ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=1455)
                                                         Filter: ((kind)::text = 'cast'::text)
                                             ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..2.21 rows=1 width=20) (actual time=0.001..0.001 rows=1 loops=1455)
                                                   Index Cond: (id = ci.person_role_id)
                                       ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1206)
                                             Filter: ((role)::text = 'actress'::text)
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..19.93 rows=26 width=8) (actual time=0.002..0.019 rows=128 loops=1206)
                                       Index Cond: (person_id = ci.person_id)
                     ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.87 rows=2 width=4) (actual time=0.001..0.002 rows=4 loops=36250)
                           Index Cond: (person_id = pi.person_id)
                           Heap Fetches: 149974
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..2.03 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=149974)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text = '[us]'::text)
                     Rows Removed by Filter: 1
         ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=28022)
               Filter: ((kind)::text = 'complete+verified'::text)
               Rows Removed by Filter: 3
 Planning Time: 119.869 ms
 Execution Time: 559.538 ms
(84 rows)

SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3832.24..3832.25 rows=1 width=32) (actual time=593.194..593.194 rows=1 loops=1)
   ->  Nested Loop  (cost=8.03..3832.22 rows=7 width=17) (actual time=7.451..592.009 rows=7834 loops=1)
         Join Filter: (mc.movie_id = t.id)
         ->  Nested Loop  (cost=7.60..3828.74 rows=7 width=8) (actual time=7.433..556.577 rows=7834 loops=1)
               ->  Nested Loop  (cost=7.18..3752.99 rows=170 width=12) (actual time=6.711..268.675 rows=148552 loops=1)
                     ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.667..81.428 rows=41840 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.509..11.486 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'character-name-in-title'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.155..65.564 rows=41840 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=11541
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=4.094..4.094 rows=41840 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.003..0.004 rows=4 loops=41840)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=148552)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text = '[de]'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.004..0.004 rows=1 loops=7834)
               Index Cond: (id = mk.movie_id)
 Planning Time: 2.259 ms
 Execution Time: 593.393 ms
(24 rows)

SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3829.74..3829.75 rows=1 width=32) (actual time=569.380..569.380 rows=1 loops=1)
   ->  Nested Loop  (cost=8.03..3829.73 rows=2 width=17) (actual time=9.181..568.607 rows=5228 loops=1)
         Join Filter: (mc.movie_id = t.id)
         ->  Nested Loop  (cost=7.60..3828.74 rows=2 width=8) (actual time=9.161..544.496 rows=5228 loops=1)
               ->  Nested Loop  (cost=7.18..3752.99 rows=170 width=12) (actual time=6.731..263.962 rows=148552 loops=1)
                     ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.692..80.583 rows=41840 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.650..11.750 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'character-name-in-title'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.038..64.475 rows=41840 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=11541
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=3.987..3.987 rows=41840 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.003..0.004 rows=4 loops=41840)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=148552)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text = '[nl]'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.004..0.004 rows=1 loops=5228)
               Index Cond: (id = mk.movie_id)
 Planning Time: 2.525 ms
 Execution Time: 569.571 ms
(24 rows)

SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3829.24..3829.25 rows=1 width=32) (actual time=541.143..541.143 rows=1 loops=1)
   ->  Nested Loop  (cost=8.03..3829.24 rows=1 width=17) (actual time=541.139..541.139 rows=0 loops=1)
         Join Filter: (mc.movie_id = t.id)
         ->  Nested Loop  (cost=7.60..3828.74 rows=1 width=8) (actual time=541.139..541.139 rows=0 loops=1)
               ->  Nested Loop  (cost=7.18..3752.99 rows=170 width=12) (actual time=6.753..265.331 rows=148552 loops=1)
                     ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.712..81.145 rows=41840 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.676..11.818 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'character-name-in-title'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.032..65.047 rows=41840 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=11541
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=3.957..3.957 rows=41840 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.003..0.004 rows=4 loops=41840)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=148552)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text = '[sm]'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (never executed)
               Index Cond: (id = mk.movie_id)
 Planning Time: 2.469 ms
 Execution Time: 541.328 ms
(24 rows)

SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3845.82..3845.83 rows=1 width=32) (actual time=730.389..730.389 rows=1 loops=1)
   ->  Nested Loop  (cost=8.03..3845.67 rows=61 width=17) (actual time=6.868..722.133 rows=68316 loops=1)
         ->  Nested Loop  (cost=7.61..3769.92 rows=170 width=21) (actual time=6.812..431.522 rows=148552 loops=1)
               Join Filter: (t.id = mc.movie_id)
               ->  Nested Loop  (cost=7.18..3749.42 rows=34 width=25) (actual time=6.760..249.391 rows=41840 loops=1)
                     ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.739..76.610 rows=41840 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.670..11.716 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'character-name-in-title'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.066..60.202 rows=41840 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=11541
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=3.998..3.998 rows=41840 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.004..0.004 rows=1 loops=41840)
                           Index Cond: (id = mk.movie_id)
               ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.003..0.004 rows=4 loops=41840)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=148552)
               Index Cond: (id = mc.company_id)
               Filter: ((country_code)::text = '[us]'::text)
               Rows Removed by Filter: 1
 Planning Time: 2.480 ms
 Execution Time: 730.582 ms
(24 rows)

SET
                                                                                                         QUERY PLAN                                                                                                         
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8691.91..8691.92 rows=1 width=128) (actual time=1342.751..1342.751 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.70..8691.90 rows=1 width=80) (actual time=25.829..1342.257 rows=757 loops=1)
         ->  Nested Loop  (cost=1012.27..8690.88 rows=1 width=69) (actual time=25.787..1332.054 rows=1021 loops=1)
               ->  Nested Loop  (cost=1012.13..8690.69 rows=1 width=73) (actual time=25.777..1330.151 rows=1021 loops=1)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=1011.70..8672.67 rows=1 width=47) (actual time=13.796..1149.863 rows=1736 loops=1)
                           Join Filter: (t.id = ci.movie_id)
                           ->  Nested Loop  (cost=1011.13..8643.58 rows=1 width=39) (actual time=7.032..316.081 rows=2023 loops=1)
                                 Join Filter: (mi_idx.movie_id = t.id)
                                 ->  Nested Loop  (cost=1010.70..8642.75 rows=1 width=18) (actual time=7.005..221.376 rows=16283 loops=1)
                                       ->  Gather  (cost=1010.57..8642.58 rows=1 width=22) (actual time=6.272..184.136 rows=35346 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Nested Loop  (cost=10.57..7642.48 rows=1 width=22) (actual time=4.974..312.902 rows=11782 loops=3)
                                                   ->  Nested Loop  (cost=10.44..7642.32 rows=1 width=26) (actual time=4.954..299.683 rows=11782 loops=3)
                                                         ->  Hash Join  (cost=10.02..7640.66 rows=2 width=14) (actual time=4.648..253.282 rows=21234 loops=3)
                                                               Hash Cond: (mi_idx.info_type_id = it2.id)
                                                               ->  Nested Loop  (cost=7.60..7637.43 rows=294 width=18) (actual time=4.563..244.377 rows=63896 loops=3)
                                                                     ->  Nested Loop  (cost=7.17..7557.95 rows=98 width=4) (actual time=4.526..124.626 rows=25571 loops=3)
                                                                           ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4353.35 rows=3 width=4) (actual time=0.267..22.825 rows=2 loops=3)
                                                                                 Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                                 Rows Removed by Filter: 44721
                                                                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1065.21 rows=299 width=8) (actual time=3.155..42.395 rows=10959 loops=7)
                                                                                 Recheck Cond: (keyword_id = k.id)
                                                                                 Heap Blocks: exact=12389
                                                                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.822..1.822 rows=10959 loops=7)
                                                                                       Index Cond: (keyword_id = k.id)
                                                                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.78 rows=3 width=14) (actual time=0.004..0.004 rows=2 loops=76714)
                                                                           Index Cond: (movie_id = mk.movie_id)
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.025..0.026 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.019..0.021 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'votes'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.81 rows=2 width=12) (actual time=0.002..0.002 rows=1 loops=63701)
                                                               Index Cond: (movie_id = mi_idx.movie_id)
                                                   ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=35346)
                                                         Index Cond: (id = cc.subject_id)
                                                         Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
                                       ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=35346)
                                             Index Cond: (id = cc.status_id)
                                             Filter: ((kind)::text = 'complete+verified'::text)
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.82 rows=1 width=21) (actual time=0.006..0.006 rows=0 loops=16283)
                                       Index Cond: (id = mk.movie_id)
                                       Filter: (production_year > 2000)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..29.08 rows=1 width=8) (actual time=0.290..0.412 rows=1 loops=2023)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                 Rows Removed by Filter: 137
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..18.01 rows=1 width=50) (actual time=0.103..0.103 rows=1 loops=1736)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((info)::text = ANY ('{Horror,Thriller}'::text[]))
                           Rows Removed by Filter: 226
               ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1021)
                     Index Cond: (id = mi.info_type_id)
                     Filter: ((info)::text = 'genres'::text)
         ->  Index Scan using name_pkey on name n  (cost=0.43..1.03 rows=1 width=19) (actual time=0.009..0.009 rows=1 loops=1021)
               Index Cond: (id = ci.person_id)
               Filter: ((gender)::text = 'm'::text)
               Rows Removed by Filter: 0
 Planning Time: 73.329 ms
 Execution Time: 1343.194 ms
(64 rows)

SET
                                                                                                           QUERY PLAN                                                                                                            
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8689.58..8689.59 rows=1 width=128) (actual time=323.526..323.526 rows=1 loops=1)
   ->  Nested Loop  (cost=1010.42..8689.57 rows=1 width=80) (actual time=75.246..323.492 rows=28 loops=1)
         ->  Nested Loop  (cost=1010.29..8689.41 rows=1 width=84) (actual time=75.236..323.446 rows=28 loops=1)
               ->  Nested Loop  (cost=1010.16..8689.23 rows=1 width=88) (actual time=75.227..323.291 rows=108 loops=1)
                     Join Filter: (t.id = cc.movie_id)
                     ->  Nested Loop  (cost=1009.74..8688.40 rows=1 width=100) (actual time=75.199..322.955 rows=108 loops=1)
                           ->  Nested Loop  (cost=1009.31..8687.37 rows=1 width=89) (actual time=75.175..322.363 rows=108 loops=1)
                                 ->  Nested Loop  (cost=1009.17..8687.19 rows=1 width=93) (actual time=75.162..321.987 rows=324 loops=1)
                                       Join Filter: (t.id = mi_idx.movie_id)
                                       ->  Nested Loop  (cost=1008.74..8686.37 rows=1 width=79) (actual time=75.132..321.524 rows=108 loops=1)
                                             ->  Nested Loop  (cost=1008.60..8686.19 rows=1 width=83) (actual time=75.127..321.352 rows=108 loops=1)
                                                   Join Filter: (t.id = mi.movie_id)
                                                   ->  Nested Loop  (cost=1008.16..8668.17 rows=1 width=33) (actual time=74.778..314.848 rows=77 loops=1)
                                                         Join Filter: (t.id = ci.movie_id)
                                                         ->  Gather  (cost=1007.60..8639.08 rows=1 width=25) (actual time=59.641..308.157 rows=49 loops=1)
                                                               Workers Planned: 2
                                                               Workers Launched: 2
                                                               ->  Nested Loop  (cost=7.60..7638.98 rows=1 width=25) (actual time=65.334..246.889 rows=16 loops=3)
                                                                     ->  Nested Loop  (cost=7.17..7557.95 rows=98 width=4) (actual time=4.426..115.761 rows=25571 loops=3)
                                                                           ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4353.35 rows=3 width=4) (actual time=0.189..23.462 rows=2 loops=3)
                                                                                 Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                                 Rows Removed by Filter: 44721
                                                                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1065.21 rows=299 width=8) (actual time=3.133..38.391 rows=10959 loops=7)
                                                                                 Recheck Cond: (keyword_id = k.id)
                                                                                 Heap Blocks: exact=12389
                                                                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.804..1.804 rows=10959 loops=7)
                                                                                       Index Cond: (keyword_id = k.id)
                                                                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.83 rows=1 width=21) (actual time=0.005..0.005 rows=0 loops=76714)
                                                                           Index Cond: (id = mk.movie_id)
                                                                           Filter: ((production_year > 2000) AND (((title)::text ~~ '%Freddy%'::text) OR ((title)::text ~~ '%Jason%'::text) OR ((title)::text ~~ 'Saw%'::text)))
                                                                           Rows Removed by Filter: 1
                                                         ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..29.08 rows=1 width=8) (actual time=0.153..0.227 rows=2 loops=49)
                                                               Index Cond: (movie_id = mk.movie_id)
                                                               Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                                               Rows Removed by Filter: 82
                                                   ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..18.01 rows=1 width=50) (actual time=0.083..0.084 rows=1 loops=77)
                                                         Index Cond: (movie_id = mk.movie_id)
                                                         Filter: ((info)::text = ANY ('{Horror,Thriller}'::text[]))
                                                         Rows Removed by Filter: 279
                                             ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=108)
                                                   Index Cond: (id = mi.info_type_id)
                                                   Filter: ((info)::text = 'genres'::text)
                                       ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.78 rows=3 width=14) (actual time=0.003..0.003 rows=3 loops=108)
                                             Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=324)
                                       Index Cond: (id = mi_idx.info_type_id)
                                       Filter: ((info)::text = 'votes'::text)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using name_pkey on name n  (cost=0.43..1.03 rows=1 width=19) (actual time=0.005..0.005 rows=1 loops=108)
                                 Index Cond: (id = ci.person_id)
                                 Filter: ((gender)::text = 'm'::text)
                     ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.81 rows=2 width=12) (actual time=0.002..0.003 rows=1 loops=108)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=108)
                     Index Cond: (id = cc.status_id)
                     Filter: ((kind)::text = 'complete+verified'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=28)
               Index Cond: (id = cc.subject_id)
               Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
 Planning Time: 74.209 ms
 Execution Time: 328.298 ms
(62 rows)

SET
                                                                                                         QUERY PLAN                                                                                                         
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8709.53..8709.54 rows=1 width=128) (actual time=4005.140..4005.140 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.70..8709.52 rows=1 width=80) (actual time=12.615..4001.348 rows=8024 loops=1)
         ->  Nested Loop  (cost=1012.27..8708.49 rows=1 width=69) (actual time=12.581..3920.832 rows=11863 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=1011.71..8679.40 rows=1 width=85) (actual time=10.015..1283.243 rows=14655 loops=1)
                     ->  Nested Loop  (cost=1011.58..8679.23 rows=1 width=89) (actual time=7.582..1254.473 rows=27522 loops=1)
                           ->  Nested Loop  (cost=1011.45..8679.06 rows=1 width=93) (actual time=7.564..1208.646 rows=37669 loops=1)
                                 ->  Nested Loop  (cost=1011.03..8678.23 rows=1 width=81) (actual time=6.131..1066.577 rows=63386 loops=1)
                                       Join Filter: (mi.movie_id = t.id)
                                       ->  Gather  (cost=1010.60..8677.40 rows=1 width=60) (actual time=6.109..773.797 rows=63386 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Nested Loop  (cost=10.60..7677.30 rows=1 width=60) (actual time=4.779..1293.302 rows=21129 loops=3)
                                                   ->  Nested Loop  (cost=10.46..7677.12 rows=1 width=64) (actual time=4.770..1264.899 rows=22577 loops=3)
                                                         Join Filter: (mi_idx.movie_id = mi.movie_id)
                                                         ->  Hash Join  (cost=10.02..7640.66 rows=2 width=14) (actual time=4.670..249.790 rows=21234 loops=3)
                                                               Hash Cond: (mi_idx.info_type_id = it2.id)
                                                               ->  Nested Loop  (cost=7.60..7637.43 rows=294 width=18) (actual time=4.592..239.891 rows=63896 loops=3)
                                                                     ->  Nested Loop  (cost=7.17..7557.95 rows=98 width=4) (actual time=4.555..119.896 rows=25571 loops=3)
                                                                           ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4353.35 rows=3 width=4) (actual time=0.291..24.117 rows=2 loops=3)
                                                                                 Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                                 Rows Removed by Filter: 44721
                                                                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1065.21 rows=299 width=8) (actual time=3.172..39.748 rows=10959 loops=7)
                                                                                 Recheck Cond: (keyword_id = k.id)
                                                                                 Heap Blocks: exact=12389
                                                                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.840..1.840 rows=10959 loops=7)
                                                                                       Index Cond: (keyword_id = k.id)
                                                                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.78 rows=3 width=14) (actual time=0.004..0.004 rows=2 loops=76714)
                                                                           Index Cond: (movie_id = mk.movie_id)
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.029..0.030 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.024..0.025 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'votes'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..18.22 rows=1 width=50) (actual time=0.046..0.047 rows=1 loops=63701)
                                                               Index Cond: (movie_id = mk.movie_id)
                                                               Filter: ((info)::text = ANY ('{Horror,Action,Sci-Fi,Thriller,Crime,War}'::text[]))
                                                               Rows Removed by Filter: 58
                                                   ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=67732)
                                                         Index Cond: (id = mi.info_type_id)
                                                         Filter: ((info)::text = 'genres'::text)
                                                         Rows Removed by Filter: 0
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.82 rows=1 width=21) (actual time=0.004..0.004 rows=1 loops=63386)
                                             Index Cond: (id = mk.movie_id)
                                 ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.81 rows=2 width=12) (actual time=0.002..0.002 rows=1 loops=63386)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=37669)
                                 Index Cond: (id = cc.subject_id)
                                 Filter: ((kind)::text = 'cast'::text)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=27522)
                           Index Cond: (id = cc.status_id)
                           Filter: ((kind)::text = 'complete+verified'::text)
                           Rows Removed by Filter: 0
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..29.08 rows=1 width=8) (actual time=0.135..0.180 rows=1 loops=14655)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                     Rows Removed by Filter: 83
         ->  Index Scan using name_pkey on name n  (cost=0.43..1.03 rows=1 width=19) (actual time=0.006..0.006 rows=1 loops=11863)
               Index Cond: (id = ci.person_id)
               Filter: ((gender)::text = 'm'::text)
               Rows Removed by Filter: 0
 Planning Time: 73.980 ms
 Execution Time: 4005.576 ms
(64 rows)

SET
                                                                                                      QUERY PLAN                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8954.40..8954.41 rows=1 width=128) (actual time=1370.766..1370.766 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.87..8954.39 rows=1 width=80) (actual time=60.029..1370.219 rows=1273 loops=1)
         Join Filter: (mi.movie_id = t.id)
         ->  Nested Loop  (cost=1012.44..8953.28 rows=1 width=83) (actual time=59.992..1364.491 rows=1273 loops=1)
               ->  Nested Loop  (cost=1012.01..8951.99 rows=1 width=72) (actual time=59.962..1355.204 rows=1556 loops=1)
                     ->  Nested Loop  (cost=1011.87..8951.81 rows=1 width=76) (actual time=59.952..1352.673 rows=1616 loops=1)
                           Join Filter: (mi_idx.movie_id = mi.movie_id)
                           ->  Nested Loop  (cost=1011.44..8928.44 rows=1 width=26) (actual time=28.893..1257.398 rows=1471 loops=1)
                                 Join Filter: (mi_idx.movie_id = ci.movie_id)
                                 ->  Gather  (cost=1010.87..8895.40 rows=1 width=18) (actual time=28.638..909.237 rows=1547 loops=1)
                                       Workers Planned: 2
                                       Workers Launched: 2
                                       ->  Nested Loop  (cost=10.87..7895.30 rows=1 width=18) (actual time=17.216..953.937 rows=516 loops=3)
                                             ->  Nested Loop  (cost=10.45..7882.53 rows=13 width=22) (actual time=4.521..457.814 rows=199419 loops=3)
                                                   Join Filter: (mi_idx.movie_id = mc.movie_id)
                                                   ->  Hash Join  (cost=10.02..7878.13 rows=2 width=14) (actual time=4.490..252.647 rows=21234 loops=3)
                                                         Hash Cond: (mi_idx.info_type_id = it2.id)
                                                         ->  Nested Loop  (cost=7.60..7874.90 rows=294 width=18) (actual time=4.406..243.005 rows=63896 loops=3)
                                                               ->  Nested Loop  (cost=7.17..7767.34 rows=98 width=4) (actual time=4.368..125.290 rows=25571 loops=3)
                                                                     ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4562.73 rows=3 width=4) (actual time=0.172..22.413 rows=2 loops=3)
                                                                           Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                           Rows Removed by Filter: 44721
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1065.21 rows=299 width=8) (actual time=3.120..42.811 rows=10959 loops=7)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=12389
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.790..1.790 rows=10959 loops=7)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..1.07 rows=3 width=14) (actual time=0.004..0.004 rows=2 loops=76714)
                                                                     Index Cond: (movie_id = mk.movie_id)
                                                         ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.028..0.028 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.022..0.024 rows=1 loops=3)
                                                                     Filter: ((info)::text = 'votes'::text)
                                                                     Rows Removed by Filter: 112
                                                   ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.14 rows=5 width=8) (actual time=0.005..0.008 rows=9 loops=63701)
                                                         Index Cond: (movie_id = mk.movie_id)
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.98 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=598256)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((name)::text ~~ 'Lionsgate%'::text)
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..33.03 rows=1 width=8) (actual time=0.165..0.227 rows=1 loops=1547)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                       Rows Removed by Filter: 119
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..23.36 rows=1 width=50) (actual time=0.063..0.064 rows=1 loops=1471)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((info)::text = ANY ('{Horror,Thriller}'::text[]))
                                 Rows Removed by Filter: 173
                     ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1616)
                           Index Cond: (id = mi.info_type_id)
                           Filter: ((info)::text = 'genres'::text)
                           Rows Removed by Filter: 0
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.29 rows=1 width=19) (actual time=0.006..0.006 rows=1 loops=1556)
                     Index Cond: (id = ci.person_id)
                     Filter: ((gender)::text = 'm'::text)
                     Rows Removed by Filter: 0
         ->  Index Scan using title_pkey on title t  (cost=0.43..1.10 rows=1 width=21) (actual time=0.004..0.004 rows=1 loops=1273)
               Index Cond: (id = mk.movie_id)
 Planning Time: 51.401 ms
 Execution Time: 1375.588 ms
(60 rows)

SET
                                                                                                        QUERY PLAN                                                                                                         
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8939.01..8939.02 rows=1 width=128) (actual time=322.293..322.293 rows=1 loops=1)
   ->  Nested Loop  (cost=1010.59..8939.00 rows=1 width=80) (actual time=117.552..322.238 rows=84 loops=1)
         ->  Nested Loop  (cost=1010.16..8937.71 rows=1 width=69) (actual time=117.522..321.816 rows=84 loops=1)
               ->  Nested Loop  (cost=1010.02..8937.53 rows=1 width=73) (actual time=117.509..321.527 rows=252 loops=1)
                     Join Filter: (t.id = mi_idx.movie_id)
                     ->  Nested Loop  (cost=1009.59..8936.42 rows=1 width=83) (actual time=117.477..321.237 rows=84 loops=1)
                           ->  Nested Loop  (cost=1009.45..8936.24 rows=1 width=87) (actual time=117.459..321.099 rows=84 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=1009.01..8912.87 rows=1 width=37) (actual time=117.171..317.042 rows=53 loops=1)
                                       ->  Nested Loop  (cost=1008.59..8911.15 rows=1 width=41) (actual time=117.127..316.667 rows=119 loops=1)
                                             Join Filter: (t.id = mc.movie_id)
                                             ->  Nested Loop  (cost=1008.16..8908.99 rows=1 width=33) (actual time=74.069..315.633 rows=77 loops=1)
                                                   Join Filter: (t.id = ci.movie_id)
                                                   ->  Gather  (cost=1007.60..8875.95 rows=1 width=25) (actual time=58.754..309.022 rows=49 loops=1)
                                                         Workers Planned: 2
                                                         Workers Launched: 2
                                                         ->  Nested Loop  (cost=7.60..7875.85 rows=1 width=25) (actual time=64.427..246.356 rows=16 loops=3)
                                                               ->  Nested Loop  (cost=7.17..7767.34 rows=98 width=4) (actual time=4.430..115.415 rows=25571 loops=3)
                                                                     ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4562.73 rows=3 width=4) (actual time=0.176..23.328 rows=2 loops=3)
                                                                           Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                           Rows Removed by Filter: 44721
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1065.21 rows=299 width=8) (actual time=3.138..38.293 rows=10959 loops=7)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=12389
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.804..1.804 rows=10959 loops=7)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using title_pkey on title t  (cost=0.43..1.11 rows=1 width=21) (actual time=0.005..0.005 rows=0 loops=76714)
                                                                     Index Cond: (id = mk.movie_id)
                                                                     Filter: ((production_year > 2000) AND (((title)::text ~~ '%Freddy%'::text) OR ((title)::text ~~ '%Jason%'::text) OR ((title)::text ~~ 'Saw%'::text)))
                                                                     Rows Removed by Filter: 1
                                                   ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..33.03 rows=1 width=8) (actual time=0.151..0.225 rows=2 loops=49)
                                                         Index Cond: (movie_id = mk.movie_id)
                                                         Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                                         Rows Removed by Filter: 82
                                             ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.15 rows=1 width=8) (actual time=0.008..0.013 rows=2 loops=77)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((note)::text ~~ '%(Blu-ray)%'::text)
                                                   Rows Removed by Filter: 24
                                       ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.61 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=119)
                                             Index Cond: (id = mc.company_id)
                                             Filter: ((name)::text ~~ 'Lionsgate%'::text)
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..23.36 rows=1 width=50) (actual time=0.075..0.076 rows=2 loops=53)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Horror,Thriller}'::text[]))
                                       Rows Removed by Filter: 292
                           ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=84)
                                 Index Cond: (id = mi.info_type_id)
                                 Filter: ((info)::text = 'genres'::text)
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..1.07 rows=3 width=14) (actual time=0.002..0.003 rows=3 loops=84)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=252)
                     Index Cond: (id = mi_idx.info_type_id)
                     Filter: ((info)::text = 'votes'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using name_pkey on name n  (cost=0.43..1.29 rows=1 width=19) (actual time=0.005..0.005 rows=1 loops=84)
               Index Cond: (id = ci.person_id)
               Filter: ((gender)::text = 'm'::text)
 Planning Time: 50.396 ms
 Execution Time: 327.045 ms
(60 rows)

SET
                                                                                                      QUERY PLAN                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8954.61..8954.62 rows=1 width=128) (actual time=1372.393..1372.394 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.87..8954.60 rows=1 width=80) (actual time=58.505..1371.351 rows=2825 loops=1)
         Join Filter: (mi.movie_id = t.id)
         ->  Nested Loop  (cost=1012.44..8953.49 rows=1 width=83) (actual time=58.483..1362.355 rows=2825 loops=1)
               ->  Nested Loop  (cost=1012.01..8952.20 rows=1 width=72) (actual time=58.453..1350.300 rows=2825 loops=1)
                     ->  Nested Loop  (cost=1011.87..8952.02 rows=1 width=76) (actual time=58.443..1346.071 rows=3007 loops=1)
                           Join Filter: (mi_idx.movie_id = mi.movie_id)
                           ->  Nested Loop  (cost=1011.44..8928.44 rows=1 width=26) (actual time=28.892..1231.591 rows=1471 loops=1)
                                 Join Filter: (mi_idx.movie_id = ci.movie_id)
                                 ->  Gather  (cost=1010.87..8895.40 rows=1 width=18) (actual time=28.637..882.627 rows=1547 loops=1)
                                       Workers Planned: 2
                                       Workers Launched: 2
                                       ->  Nested Loop  (cost=10.87..7895.30 rows=1 width=18) (actual time=17.314..956.517 rows=516 loops=3)
                                             ->  Nested Loop  (cost=10.45..7882.53 rows=13 width=22) (actual time=4.673..458.837 rows=199419 loops=3)
                                                   Join Filter: (mi_idx.movie_id = mc.movie_id)
                                                   ->  Hash Join  (cost=10.02..7878.13 rows=2 width=14) (actual time=4.635..253.319 rows=21234 loops=3)
                                                         Hash Cond: (mi_idx.info_type_id = it2.id)
                                                         ->  Nested Loop  (cost=7.60..7874.90 rows=294 width=18) (actual time=4.542..243.976 rows=63896 loops=3)
                                                               ->  Nested Loop  (cost=7.17..7767.34 rows=98 width=4) (actual time=4.509..125.668 rows=25571 loops=3)
                                                                     ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4562.73 rows=3 width=4) (actual time=0.268..22.520 rows=2 loops=3)
                                                                           Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                           Rows Removed by Filter: 44721
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1065.21 rows=299 width=8) (actual time=3.138..42.923 rows=10959 loops=7)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=12389
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.800..1.800 rows=10959 loops=7)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..1.07 rows=3 width=14) (actual time=0.004..0.004 rows=2 loops=76714)
                                                                     Index Cond: (movie_id = mk.movie_id)
                                                         ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.027..0.027 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.021..0.023 rows=1 loops=3)
                                                                     Filter: ((info)::text = 'votes'::text)
                                                                     Rows Removed by Filter: 112
                                                   ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.14 rows=5 width=8) (actual time=0.005..0.008 rows=9 loops=63701)
                                                         Index Cond: (movie_id = mk.movie_id)
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.98 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=598256)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((name)::text ~~ 'Lionsgate%'::text)
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..33.03 rows=1 width=8) (actual time=0.165..0.228 rows=1 loops=1547)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                       Rows Removed by Filter: 119
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..23.57 rows=1 width=50) (actual time=0.075..0.077 rows=2 loops=1471)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((info)::text = ANY ('{Horror,Action,Sci-Fi,Thriller,Crime,War}'::text[]))
                                 Rows Removed by Filter: 172
                     ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=3007)
                           Index Cond: (id = mi.info_type_id)
                           Filter: ((info)::text = 'genres'::text)
                           Rows Removed by Filter: 0
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.29 rows=1 width=19) (actual time=0.004..0.004 rows=1 loops=2825)
                     Index Cond: (id = ci.person_id)
         ->  Index Scan using title_pkey on title t  (cost=0.43..1.10 rows=1 width=21) (actual time=0.003..0.003 rows=1 loops=2825)
               Index Cond: (id = mk.movie_id)
 Planning Time: 51.098 ms
 Execution Time: 1377.295 ms
(58 rows)

SET
                                                                              QUERY PLAN                                                                               
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3802.90..3802.91 rows=1 width=96) (actual time=15.888..15.888 rows=1 loops=1)
   ->  Nested Loop  (cost=7.90..3802.82 rows=11 width=116) (actual time=15.885..15.885 rows=0 loops=1)
         ->  Nested Loop  (cost=7.47..3756.66 rows=11 width=103) (actual time=15.885..15.885 rows=0 loops=1)
               ->  Nested Loop  (cost=7.04..3751.32 rows=11 width=94) (actual time=15.884..15.884 rows=0 loops=1)
                     Join Filter: (ml.link_type_id = lt.id)
                     ->  Nested Loop  (cost=7.04..3747.37 rows=11 width=16) (actual time=15.884..15.884 rows=0 loops=1)
                           ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=15.529..15.875 rows=1 loops=1)
                                 ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=15.493..15.839 rows=1 loops=1)
                                       Filter: ((keyword)::text = '10,000-mile-club'::text)
                                       Rows Removed by Filter: 134169
                                 ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=0.032..0.032 rows=1 loops=1)
                                       Recheck Cond: (keyword_id = k.id)
                                       Heap Blocks: exact=1
                                       ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.013..0.013 rows=1 loops=1)
                                             Index Cond: (keyword_id = k.id)
                           ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=12) (actual time=0.008..0.008 rows=0 loops=1)
                                 Index Cond: (movie_id = mk.movie_id)
                     ->  Materialize  (cost=0.00..1.27 rows=18 width=86) (never executed)
                           ->  Seq Scan on link_type lt  (cost=0.00..1.18 rows=18 width=86) (never executed)
               ->  Index Scan using title_pkey on title t1  (cost=0.43..0.49 rows=1 width=21) (never executed)
                     Index Cond: (id = mk.movie_id)
         ->  Index Scan using title_pkey on title t2  (cost=0.43..4.20 rows=1 width=21) (never executed)
               Index Cond: (id = ml.linked_movie_id)
 Planning Time: 2.903 ms
 Execution Time: 16.027 ms
(25 rows)

SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3802.90..3802.91 rows=1 width=96) (actual time=185.301..185.301 rows=1 loops=1)
   ->  Nested Loop  (cost=7.90..3802.82 rows=11 width=116) (actual time=6.914..184.202 rows=4388 loops=1)
         ->  Nested Loop  (cost=7.47..3756.66 rows=11 width=103) (actual time=6.882..140.688 rows=4388 loops=1)
               ->  Nested Loop  (cost=7.04..3751.32 rows=11 width=94) (actual time=6.858..129.294 rows=4388 loops=1)
                     Join Filter: (ml.link_type_id = lt.id)
                     Rows Removed by Join Filter: 30206
                     ->  Nested Loop  (cost=7.04..3747.37 rows=11 width=16) (actual time=6.834..124.535 rows=4388 loops=1)
                           ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.721..85.174 rows=41840 loops=1)
                                 ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.524..11.963 rows=1 loops=1)
                                       Filter: ((keyword)::text = 'character-name-in-title'::text)
                                       Rows Removed by Filter: 134169
                                 ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.195..69.226 rows=41840 loops=1)
                                       Recheck Cond: (keyword_id = k.id)
                                       Heap Blocks: exact=11541
                                       ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=4.124..4.124 rows=41840 loops=1)
                                             Index Cond: (keyword_id = k.id)
                           ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=12) (actual time=0.001..0.001 rows=0 loops=41840)
                                 Index Cond: (movie_id = mk.movie_id)
                     ->  Materialize  (cost=0.00..1.27 rows=18 width=86) (actual time=0.000..0.000 rows=8 loops=4388)
                           ->  Seq Scan on link_type lt  (cost=0.00..1.18 rows=18 width=86) (actual time=0.012..0.014 rows=17 loops=1)
               ->  Index Scan using title_pkey on title t1  (cost=0.43..0.49 rows=1 width=21) (actual time=0.002..0.002 rows=1 loops=4388)
                     Index Cond: (id = mk.movie_id)
         ->  Index Scan using title_pkey on title t2  (cost=0.43..4.20 rows=1 width=21) (actual time=0.010..0.010 rows=1 loops=4388)
               Index Cond: (id = ml.linked_movie_id)
 Planning Time: 2.391 ms
 Execution Time: 185.495 ms
(26 rows)

SET
                                                                                                                  QUERY PLAN                                                                                                                   
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4451.76..4451.77 rows=1 width=192) (actual time=71.657..71.657 rows=1 loops=1)
   ->  Nested Loop  (cost=6.44..4451.74 rows=1 width=84) (actual time=11.985..71.643 rows=8 loops=1)
         ->  Nested Loop  (cost=6.02..4451.30 rows=1 width=69) (actual time=11.976..71.583 rows=8 loops=1)
               Join Filter: (t2.id = mc2.movie_id)
               ->  Nested Loop  (cost=5.59..4450.56 rows=1 width=77) (actual time=11.952..71.546 rows=2 loops=1)
                     Join Filter: ((ml.linked_movie_id = t2.id) AND (kt2.id = t2.kind_id))
                     ->  Nested Loop  (cost=5.16..4449.84 rows=1 width=60) (actual time=11.928..71.451 rows=12 loops=1)
                           ->  Nested Loop  (cost=4.74..4449.40 rows=1 width=45) (actual time=11.893..70.906 rows=81 loops=1)
                                 ->  Nested Loop  (cost=4.31..4448.79 rows=1 width=53) (actual time=11.867..70.538 rows=28 loops=1)
                                       Join Filter: (it2.id = mi_idx2.info_type_id)
                                       Rows Removed by Join Filter: 1595
                                       ->  Nested Loop  (cost=3.88..4409.59 rows=19 width=47) (actual time=0.215..62.399 rows=1220 loops=1)
                                             Join Filter: (kt1.id = t1.kind_id)
                                             Rows Removed by Join Filter: 844
                                             ->  Nested Loop  (cost=0.00..2.18 rows=1 width=8) (actual time=0.016..0.018 rows=1 loops=1)
                                                   ->  Seq Scan on kind_type kt1  (cost=0.00..1.09 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=1)
                                                         Filter: ((kind)::text = 'tv series'::text)
                                                         Rows Removed by Filter: 6
                                                   ->  Seq Scan on kind_type kt2  (cost=0.00..1.09 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=1)
                                                         Filter: ((kind)::text = 'tv series'::text)
                                                         Rows Removed by Filter: 6
                                             ->  Nested Loop  (cost=3.88..4405.75 rows=132 width=47) (actual time=0.197..62.123 rows=2064 loops=1)
                                                   Join Filter: (ml.movie_id = t1.id)
                                                   ->  Nested Loop  (cost=3.45..4328.60 rows=132 width=22) (actual time=0.178..54.591 rows=2064 loops=1)
                                                         Join Filter: (ml.link_type_id = lt.id)
                                                         Rows Removed by Join Filter: 38685
                                                         ->  Nested Loop  (cost=3.45..4292.61 rows=794 width=26) (actual time=0.069..47.683 rows=20890 loops=1)
                                                               ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.012 rows=1 loops=1)
                                                                     Filter: ((info)::text = 'rating'::text)
                                                                     Rows Removed by Filter: 112
                                                               ->  Hash Join  (cost=3.45..4282.26 rows=794 width=22) (actual time=0.058..45.795 rows=20890 loops=1)
                                                                     Hash Cond: (mi_idx1.info_type_id = it1.id)
                                                                     ->  Merge Join  (cost=1.03..4035.43 rows=89741 width=26) (actual time=0.016..39.642 rows=62670 loops=1)
                                                                           Merge Cond: (ml.movie_id = mi_idx1.movie_id)
                                                                           ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..959.51 rows=29997 width=12) (actual time=0.005..5.221 rows=29997 loops=1)
                                                                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43820.38 rows=1380035 width=14) (actual time=0.008..18.756 rows=114373 loops=1)
                                                                     ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.016..0.017 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=1)
                                                                                 Filter: ((info)::text = 'rating'::text)
                                                                                 Rows Removed by Filter: 112
                                                         ->  Materialize  (cost=0.00..1.26 rows=3 width=4) (actual time=0.000..0.000 rows=2 loops=20890)
                                                               ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=3 width=4) (actual time=0.018..0.021 rows=2 loops=1)
                                                                     Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                     Rows Removed by Filter: 16
                                                   ->  Index Scan using title_pkey on title t1  (cost=0.43..0.57 rows=1 width=25) (actual time=0.003..0.003 rows=1 loops=2064)
                                                         Index Cond: (id = mi_idx1.movie_id)
                                       ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=1 width=14) (actual time=0.006..0.006 rows=1 loops=1220)
                                             Index Cond: (movie_id = ml.linked_movie_id)
                                             Filter: ((info)::text < '3.0'::text)
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.009..0.012 rows=3 loops=28)
                                       Index Cond: (movie_id = t1.id)
                           ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.006..0.006 rows=0 loops=81)
                                 Index Cond: (id = mc1.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using title_pkey on title t2  (cost=0.43..0.71 rows=1 width=25) (actual time=0.007..0.007 rows=0 loops=12)
                           Index Cond: (id = mi_idx2.movie_id)
                           Filter: ((production_year >= 2005) AND (production_year <= 2008))
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.67 rows=5 width=8) (actual time=0.012..0.016 rows=4 loops=2)
                     Index Cond: (movie_id = mi_idx2.movie_id)
         ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.007..0.007 rows=1 loops=8)
               Index Cond: (id = mc2.company_id)
 Planning Time: 92.007 ms
 Execution Time: 71.935 ms
(67 rows)

SET
                                                                                                                 QUERY PLAN                                                                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=2681.30..2681.31 rows=1 width=192) (actual time=47.023..47.023 rows=1 loops=1)
   ->  Nested Loop  (cost=340.64..2681.28 rows=1 width=84) (actual time=8.651..47.012 rows=4 loops=1)
         Join Filter: ((t2.id = mi_idx2.movie_id) AND (it2.id = mi_idx2.info_type_id))
         Rows Removed by Join Filter: 4
         ->  Nested Loop  (cost=340.21..2680.76 rows=1 width=94) (actual time=8.639..46.991 rows=4 loops=1)
               ->  Nested Loop  (cost=340.08..2680.59 rows=1 width=98) (actual time=8.632..46.980 rows=4 loops=1)
                     Join Filter: (ml.movie_id = t1.id)
                     ->  Nested Loop  (cost=339.65..2680.06 rows=1 width=89) (actual time=8.619..46.960 rows=4 loops=1)
                           ->  Nested Loop  (cost=339.23..2679.62 rows=1 width=74) (actual time=8.615..46.948 rows=4 loops=1)
                                 ->  Nested Loop  (cost=338.80..2678.21 rows=1 width=66) (actual time=8.610..46.941 rows=1 loops=1)
                                       ->  Nested Loop  (cost=338.67..2678.04 rows=1 width=70) (actual time=2.039..46.919 rows=6 loops=1)
                                             ->  Nested Loop  (cost=338.24..2669.65 rows=2 width=45) (actual time=2.010..44.590 rows=477 loops=1)
                                                   ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..14.12 rows=1 width=4) (actual time=0.017..0.019 rows=1 loops=1)
                                                         Filter: ((info)::text = 'rating'::text)
                                                         Rows Removed by Filter: 112
                                                   ->  Nested Loop  (cost=338.09..2655.51 rows=2 width=41) (actual time=1.992..44.512 rows=477 loops=1)
                                                         ->  Nested Loop  (cost=337.67..2557.48 rows=220 width=26) (actual time=1.916..25.962 rows=9674 loops=1)
                                                               Join Filter: (ml.movie_id = mc1.movie_id)
                                                               ->  Hash Join  (cost=337.24..2528.65 rows=44 width=18) (actual time=1.909..16.659 rows=2064 loops=1)
                                                                     Hash Cond: (mi_idx1.info_type_id = it1.id)
                                                                     ->  Merge Join  (cost=334.82..2512.65 rows=4984 width=22) (actual time=1.871..15.969 rows=6192 loops=1)
                                                                           Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43820.38 rows=1380035 width=14) (actual time=0.008..8.604 rows=63901 loops=1)
                                                                           ->  Sort  (cost=334.38..338.55 rows=1666 width=8) (actual time=1.842..2.165 rows=6443 loops=1)
                                                                                 Sort Key: ml.movie_id
                                                                                 Sort Method: quicksort  Memory: 205kB
                                                                                 ->  Nested Loop  (cost=38.82..245.23 rows=1666 width=8) (actual time=0.125..1.327 rows=2315 loops=1)
                                                                                       ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=4) (actual time=0.019..0.023 rows=2 loops=1)
                                                                                             Filter: ((link)::text ~~ '%follow%'::text)
                                                                                             Rows Removed by Filter: 16
                                                                                       ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..225.26 rows=1875 width=12) (actual time=0.092..0.541 rows=1158 loops=2)
                                                                                             Recheck Cond: (link_type_id = lt.id)
                                                                                             Heap Blocks: exact=191
                                                                                             ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.076..0.076 rows=1158 loops=2)
                                                                                                   Index Cond: (link_type_id = lt.id)
                                                                     ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.010..0.012 rows=1 loops=1)
                                                                                 Filter: ((info)::text = 'rating'::text)
                                                                                 Rows Removed by Filter: 112
                                                               ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.59 rows=5 width=8) (actual time=0.002..0.004 rows=5 loops=2064)
                                                                     Index Cond: (movie_id = mi_idx1.movie_id)
                                                         ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=9674)
                                                               Index Cond: (id = mc1.company_id)
                                                               Filter: ((country_code)::text = '[nl]'::text)
                                                               Rows Removed by Filter: 1
                                             ->  Index Scan using title_pkey on title t2  (cost=0.43..4.20 rows=1 width=25) (actual time=0.005..0.005 rows=0 loops=477)
                                                   Index Cond: (id = ml.linked_movie_id)
                                                   Filter: (production_year = 2007)
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=6)
                                             Index Cond: (id = t2.kind_id)
                                             Filter: ((kind)::text = 'tv series'::text)
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..1.35 rows=5 width=8) (actual time=0.003..0.005 rows=4 loops=1)
                                       Index Cond: (movie_id = t2.id)
                           ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=4)
                                 Index Cond: (id = mc2.company_id)
                     ->  Index Scan using title_pkey on title t1  (cost=0.43..0.51 rows=1 width=25) (actual time=0.004..0.004 rows=1 loops=4)
                           Index Cond: (id = mc1.movie_id)
               ->  Index Scan using kind_type_pkey on kind_type kt1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=4)
                     Index Cond: (id = t1.kind_id)
                     Filter: ((kind)::text = 'tv series'::text)
         ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..0.51 rows=1 width=14) (actual time=0.004..0.004 rows=2 loops=4)
               Index Cond: (movie_id = mc2.movie_id)
               Filter: ((info)::text < '3.0'::text)
               Rows Removed by Filter: 1
 Planning Time: 92.336 ms
 Execution Time: 47.315 ms
(69 rows)

SET
                                                                                                                 QUERY PLAN                                                                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3851.97..3851.98 rows=1 width=192) (actual time=36.250..36.250 rows=1 loops=1)
   ->  Nested Loop  (cost=875.97..3851.96 rows=1 width=84) (actual time=10.114..36.191 rows=114 loops=1)
         ->  Nested Loop  (cost=875.55..3851.51 rows=1 width=69) (actual time=10.106..35.808 rows=131 loops=1)
               ->  Nested Loop  (cost=875.12..3850.90 rows=1 width=77) (actual time=10.098..35.636 rows=44 loops=1)
                     ->  Nested Loop  (cost=874.70..3850.46 rows=1 width=62) (actual time=10.084..35.461 rows=44 loops=1)
                           ->  Nested Loop  (cost=874.27..3849.79 rows=1 width=70) (actual time=10.074..35.263 rows=19 loops=1)
                                 ->  Nested Loop  (cost=874.14..3849.63 rows=1 width=74) (actual time=9.251..35.220 rows=27 loops=1)
                                       Join Filter: (it2.id = mi_idx2.info_type_id)
                                       Rows Removed by Join Filter: 1170
                                       ->  Nested Loop  (cost=873.71..3841.45 rows=15 width=68) (actual time=5.894..32.666 rows=851 loops=1)
                                             ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..14.12 rows=1 width=4) (actual time=0.016..0.019 rows=1 loops=1)
                                                   Filter: ((info)::text = 'rating'::text)
                                                   Rows Removed by Filter: 112
                                             ->  Hash Join  (cost=873.57..3827.18 rows=15 width=64) (actual time=5.876..32.536 rows=851 loops=1)
                                                   Hash Cond: (t1.kind_id = kt1.id)
                                                   ->  Nested Loop  (cost=872.46..3825.83 rows=54 width=68) (actual time=5.844..32.322 rows=851 loops=1)
                                                         Join Filter: (ml.movie_id = t1.id)
                                                         ->  Nested Loop  (cost=872.03..3794.27 rows=54 width=43) (actual time=5.839..30.489 rows=851 loops=1)
                                                               ->  Hash Join  (cost=871.60..3239.76 rows=132 width=18) (actual time=5.798..20.165 rows=2064 loops=1)
                                                                     Hash Cond: (mi_idx1.info_type_id = it1.id)
                                                                     ->  Merge Join  (cost=869.17..3196.60 rows=14958 width=22) (actual time=5.769..19.485 rows=6192 loops=1)
                                                                           Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43820.38 rows=1380035 width=14) (actual time=0.008..8.234 rows=63901 loops=1)
                                                                           ->  Sort  (cost=868.72..881.22 rows=5000 width=8) (actual time=5.740..6.058 rows=6443 loops=1)
                                                                                 Sort Key: ml.movie_id
                                                                                 Sort Method: quicksort  Memory: 205kB
                                                                                 ->  Hash Join  (cost=1.29..561.53 rows=5000 width=8) (actual time=0.043..5.233 rows=2315 loops=1)
                                                                                       Hash Cond: (ml.link_type_id = lt.id)
                                                                                       ->  Seq Scan on movie_link ml  (cost=0.00..462.97 rows=29997 width=12) (actual time=0.004..2.817 rows=29997 loops=1)
                                                                                       ->  Hash  (cost=1.25..1.25 rows=3 width=4) (actual time=0.021..0.021 rows=2 loops=1)
                                                                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                             ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=3 width=4) (actual time=0.016..0.018 rows=2 loops=1)
                                                                                                   Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                                   Rows Removed by Filter: 16
                                                                     ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=1)
                                                                                 Filter: ((info)::text = 'rating'::text)
                                                                                 Rows Removed by Filter: 112
                                                               ->  Index Scan using title_pkey on title t2  (cost=0.43..4.20 rows=1 width=25) (actual time=0.005..0.005 rows=0 loops=2064)
                                                                     Index Cond: (id = ml.linked_movie_id)
                                                                     Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                                                     Rows Removed by Filter: 1
                                                         ->  Index Scan using title_pkey on title t1  (cost=0.43..0.57 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=851)
                                                               Index Cond: (id = mi_idx1.movie_id)
                                                   ->  Hash  (cost=1.09..1.09 rows=2 width=4) (actual time=0.011..0.012 rows=2 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on kind_type kt1  (cost=0.00..1.09 rows=2 width=4) (actual time=0.005..0.006 rows=2 loops=1)
                                                               Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                                                               Rows Removed by Filter: 5
                                       ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..0.53 rows=1 width=14) (actual time=0.002..0.003 rows=1 loops=851)
                                             Index Cond: (movie_id = t2.id)
                                             Filter: ((info)::text < '3.5'::text)
                                             Rows Removed by Filter: 2
                                 ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=27)
                                       Index Cond: (id = t2.kind_id)
                                       Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                                       Rows Removed by Filter: 0
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.62 rows=5 width=8) (actual time=0.008..0.010 rows=2 loops=19)
                                 Index Cond: (movie_id = t2.id)
                     ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.004..0.004 rows=1 loops=44)
                           Index Cond: (id = mc2.company_id)
               ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.002..0.003 rows=3 loops=44)
                     Index Cond: (movie_id = t1.id)
         ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.003..0.003 rows=1 loops=131)
               Index Cond: (id = mc1.company_id)
               Filter: ((country_code)::text <> '[us]'::text)
               Rows Removed by Filter: 0
 Planning Time: 89.640 ms
 Execution Time: 36.532 ms
(70 rows)

SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16579.47..16579.48 rows=1 width=32) (actual time=228.396..228.396 rows=1 loops=1)
   ->  Nested Loop  (cost=7.61..16579.31 rows=65 width=17) (actual time=6.807..228.331 rows=206 loops=1)
         Join Filter: (t.id = mi.movie_id)
         ->  Nested Loop  (cost=7.18..16269.29 rows=174 width=25) (actual time=5.078..129.718 rows=2235 loops=1)
               ->  Nested Loop  (cost=6.75..16055.56 rows=438 width=4) (actual time=3.606..60.080 rows=12951 loops=1)
                     ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=1.218..22.263 rows=30 loops=1)
                           Filter: ((keyword)::text ~~ '%sequel%'::text)
                           Rows Removed by Filter: 134140
                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1030.04 rows=299 width=8) (actual time=0.101..1.211 rows=432 loops=30)
                           Recheck Cond: (keyword_id = k.id)
                           Heap Blocks: exact=6979
                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.061..0.061 rows=432 loops=30)
                                 Index Cond: (keyword_id = k.id)
               ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.005..0.005 rows=0 loops=12951)
                     Index Cond: (id = mk.movie_id)
                     Filter: (production_year > 2005)
                     Rows Removed by Filter: 1
         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.77 rows=1 width=4) (actual time=0.041..0.044 rows=0 loops=2235)
               Index Cond: (movie_id = mk.movie_id)
               Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German}'::text[]))
               Rows Removed by Filter: 45
 Planning Time: 1.848 ms
 Execution Time: 228.489 ms
(23 rows)

SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16369.03..16369.04 rows=1 width=32) (actual time=147.228..147.228 rows=1 loops=1)
   ->  Nested Loop  (cost=7.61..16369.03 rows=1 width=17) (actual time=11.003..147.214 rows=5 loops=1)
         Join Filter: (t.id = mi.movie_id)
         ->  Nested Loop  (cost=7.18..16269.29 rows=68 width=25) (actual time=5.444..126.295 rows=405 loops=1)
               ->  Nested Loop  (cost=6.75..16055.56 rows=438 width=4) (actual time=3.741..59.541 rows=12951 loops=1)
                     ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=1.344..22.291 rows=30 loops=1)
                           Filter: ((keyword)::text ~~ '%sequel%'::text)
                           Rows Removed by Filter: 134140
                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1030.04 rows=299 width=8) (actual time=0.100..1.193 rows=432 loops=30)
                           Recheck Cond: (keyword_id = k.id)
                           Heap Blocks: exact=6979
                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.061..0.061 rows=432 loops=30)
                                 Index Cond: (keyword_id = k.id)
               ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.005..0.005 rows=0 loops=12951)
                     Index Cond: (id = mk.movie_id)
                     Filter: (production_year > 2010)
                     Rows Removed by Filter: 1
         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.45 rows=1 width=4) (actual time=0.051..0.051 rows=0 loops=405)
               Index Cond: (movie_id = mk.movie_id)
               Filter: ((info)::text = 'Bulgaria'::text)
               Rows Removed by Filter: 63
 Planning Time: 1.980 ms
 Execution Time: 147.340 ms
(23 rows)

SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16842.39..16842.40 rows=1 width=32) (actual time=390.954..390.954 rows=1 loops=1)
   ->  Nested Loop  (cost=7.61..16840.96 rows=570 width=17) (actual time=4.022..389.929 rows=7250 loops=1)
         Join Filter: (t.id = mi.movie_id)
         ->  Nested Loop  (cost=7.18..16269.29 rows=301 width=25) (actual time=3.759..121.033 rows=7874 loops=1)
               ->  Nested Loop  (cost=6.75..16055.56 rows=438 width=4) (actual time=3.735..56.150 rows=12951 loops=1)
                     ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=1.331..21.975 rows=30 loops=1)
                           Filter: ((keyword)::text ~~ '%sequel%'::text)
                           Rows Removed by Filter: 134140
                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1030.04 rows=299 width=8) (actual time=0.101..1.084 rows=432 loops=30)
                           Recheck Cond: (keyword_id = k.id)
                           Heap Blocks: exact=6979
                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.062..0.062 rows=432 loops=30)
                                 Index Cond: (keyword_id = k.id)
               ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.005..0.005 rows=1 loops=12951)
                     Index Cond: (id = mk.movie_id)
                     Filter: (production_year > 1990)
                     Rows Removed by Filter: 0
         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=4) (actual time=0.029..0.034 rows=1 loops=7874)
               Index Cond: (movie_id = mk.movie_id)
               Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,USA,American}'::text[]))
               Rows Removed by Filter: 35
 Planning Time: 2.080 ms
 Execution Time: 391.058 ms
(23 rows)

SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16288.57..16288.58 rows=1 width=64) (actual time=160.413..160.413 rows=1 loops=1)
   ->  Nested Loop  (cost=7.61..16288.56 rows=2 width=23) (actual time=6.054..160.239 rows=740 loops=1)
         Join Filter: (mi_idx.movie_id = t.id)
         ->  Nested Loop  (cost=7.18..16286.56 rows=4 width=14) (actual time=3.775..118.781 rows=5820 loops=1)
               Join Filter: (mi_idx.info_type_id = it.id)
               Rows Removed by Join Filter: 2613
               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.011..0.013 rows=1 loops=1)
                     Filter: ((info)::text = 'rating'::text)
                     Rows Removed by Filter: 112
               ->  Nested Loop  (cost=7.18..16278.01 rows=491 width=18) (actual time=3.762..117.635 rows=8433 loops=1)
                     ->  Nested Loop  (cost=6.75..16055.56 rows=438 width=4) (actual time=3.738..63.550 rows=12951 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=1.329..22.753 rows=30 loops=1)
                                 Filter: ((keyword)::text ~~ '%sequel%'::text)
                                 Rows Removed by Filter: 134140
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1030.04 rows=299 width=8) (actual time=0.101..1.310 rows=432 loops=30)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=6979
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.062..0.062 rows=432 loops=30)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=14) (actual time=0.004..0.004 rows=1 loops=12951)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((info)::text > '5.0'::text)
                           Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.007..0.007 rows=0 loops=5820)
               Index Cond: (id = mk.movie_id)
               Filter: (production_year > 2005)
               Rows Removed by Filter: 1
 Planning Time: 2.392 ms
 Execution Time: 160.538 ms
(29 rows)

SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16281.03..16281.04 rows=1 width=64) (actual time=91.908..91.908 rows=1 loops=1)
   ->  Nested Loop  (cost=7.61..16281.02 rows=1 width=23) (actual time=15.063..91.895 rows=6 loops=1)
         Join Filter: (mi_idx.movie_id = t.id)
         ->  Nested Loop  (cost=7.18..16280.52 rows=1 width=14) (actual time=13.216..91.715 rows=21 loops=1)
               Join Filter: (mi_idx.info_type_id = it.id)
               Rows Removed by Join Filter: 285
               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.012..0.014 rows=1 loops=1)
                     Filter: ((info)::text = 'rating'::text)
                     Rows Removed by Filter: 112
               ->  Nested Loop  (cost=7.18..16278.01 rows=8 width=18) (actual time=4.142..91.657 rows=306 loops=1)
                     ->  Nested Loop  (cost=6.75..16055.56 rows=438 width=4) (actual time=3.765..51.072 rows=12951 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=1.367..20.703 rows=30 loops=1)
                                 Filter: ((keyword)::text ~~ '%sequel%'::text)
                                 Rows Removed by Filter: 134140
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1030.04 rows=299 width=8) (actual time=0.095..0.968 rows=432 loops=30)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=6979
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.058..0.058 rows=432 loops=30)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=14) (actual time=0.003..0.003 rows=0 loops=12951)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((info)::text > '9.0'::text)
                           Rows Removed by Filter: 2
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.008..0.008 rows=0 loops=21)
               Index Cond: (id = mk.movie_id)
               Filter: (production_year > 2010)
               Rows Removed by Filter: 1
 Planning Time: 2.147 ms
 Execution Time: 92.030 ms
(29 rows)

SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16297.85..16297.86 rows=1 width=64) (actual time=131.341..131.341 rows=1 loops=1)
   ->  Nested Loop  (cost=7.61..16297.83 rows=5 width=23) (actual time=3.405..130.441 rows=4700 loops=1)
         Join Filter: (mi_idx.movie_id = t.id)
         ->  Nested Loop  (cost=7.18..16294.33 rows=7 width=14) (actual time=3.371..82.971 rows=8092 loops=1)
               Join Filter: (mi_idx.info_type_id = it.id)
               Rows Removed by Join Filter: 6507
               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.011..0.013 rows=1 loops=1)
                     Filter: ((info)::text = 'rating'::text)
                     Rows Removed by Filter: 112
               ->  Nested Loop  (cost=7.18..16282.39 rows=762 width=18) (actual time=3.358..81.390 rows=14599 loops=1)
                     ->  Nested Loop  (cost=6.75..16055.56 rows=438 width=4) (actual time=3.348..44.069 rows=12951 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=1.117..22.594 rows=30 loops=1)
                                 Filter: ((keyword)::text ~~ '%sequel%'::text)
                                 Rows Removed by Filter: 134140
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1030.04 rows=299 width=8) (actual time=0.095..0.666 rows=432 loops=30)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=6979
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.056..0.056 rows=432 loops=30)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=2 width=14) (actual time=0.002..0.003 rows=1 loops=12951)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((info)::text > '2.0'::text)
                           Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.006..0.006 rows=1 loops=8092)
               Index Cond: (id = mk.movie_id)
               Filter: (production_year > 1990)
               Rows Removed by Filter: 0
 Planning Time: 1.892 ms
 Execution Time: 131.460 ms
(29 rows)

SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=38740.79..38740.80 rows=1 width=32) (actual time=135.397..135.397 rows=1 loops=1)
   ->  Gather  (cost=38740.58..38740.79 rows=2 width=32) (actual time=135.323..136.081 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=37740.58..37740.59 rows=1 width=32) (actual time=132.882..132.882 rows=1 loops=3)
               ->  Hash Join  (cost=5.47..37740.50 rows=31 width=17) (actual time=132.879..132.880 rows=0 loops=3)
                     Hash Cond: (mi.info_type_id = it.id)
                     ->  Nested Loop  (cost=1.93..37736.88 rows=31 width=21) (actual time=132.879..132.879 rows=0 loops=3)
                           ->  Nested Loop  (cost=1.49..37442.96 rows=122 width=25) (actual time=132.878..132.878 rows=0 loops=3)
                                 ->  Hash Join  (cost=1.06..35104.78 rows=308 width=4) (actual time=132.878..132.878 rows=0 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..35097.06 rows=1231 width=8) (actual time=2.730..132.241 rows=8008 loops=3)
                                             Filter: (((note)::text ~~ '%(theatrical)%'::text) AND ((note)::text ~~ '%(France)%'::text))
                                             Rows Removed by Filter: 861701
                                       ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.021..0.021 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.014..0.015 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..7.59 rows=1 width=21) (never executed)
                                       Index Cond: (id = mc.movie_id)
                                       Filter: (production_year > 2005)
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.40 rows=1 width=8) (never executed)
                                 Index Cond: (movie_id = t.id)
                                 Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German}'::text[]))
                     ->  Hash  (cost=2.13..2.13 rows=113 width=4) (never executed)
                           ->  Seq Scan on info_type it  (cost=0.00..2.13 rows=113 width=4) (never executed)
 Planning Time: 2.377 ms
 Execution Time: 136.243 ms
(29 rows)

SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=38870.51..38870.52 rows=1 width=32) (actual time=128.098..128.098 rows=1 loops=1)
   ->  Gather  (cost=1002.07..38870.50 rows=2 width=17) (actual time=128.095..128.818 rows=0 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Nested Loop  (cost=2.07..37870.30 rows=1 width=17) (actual time=125.720..125.720 rows=0 loops=3)
               ->  Nested Loop  (cost=1.93..37870.14 rows=1 width=21) (actual time=125.720..125.720 rows=0 loops=3)
                     ->  Nested Loop  (cost=1.49..37866.79 rows=1 width=25) (actual time=125.719..125.720 rows=0 loops=3)
                           ->  Hash Join  (cost=1.06..37816.09 rows=6 width=4) (actual time=125.719..125.719 rows=0 loops=3)
                                 Hash Cond: (mc.company_type_id = ct.id)
                                 ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..37814.90 rows=25 width=8) (actual time=4.816..125.599 rows=473 loops=3)
                                       Filter: (((note)::text ~~ '%(VHS)%'::text) AND ((note)::text ~~ '%(USA)%'::text) AND ((note)::text ~~ '%(1994)%'::text))
                                       Rows Removed by Filter: 869237
                                 ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.016..0.016 rows=1 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=3)
                                             Filter: ((kind)::text = 'production companies'::text)
                                             Rows Removed by Filter: 3
                           ->  Index Scan using title_pkey on title t  (cost=0.43..8.45 rows=1 width=21) (never executed)
                                 Index Cond: (id = mc.movie_id)
                                 Filter: (production_year > 2010)
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..3.33 rows=2 width=8) (never executed)
                           Index Cond: (movie_id = t.id)
                           Filter: ((info)::text = ANY ('{USA,America}'::text[]))
               ->  Index Only Scan using info_type_pkey on info_type it  (cost=0.14..0.16 rows=1 width=4) (never executed)
                     Index Cond: (id = mi.info_type_id)
                     Heap Fetches: 0
 Planning Time: 2.078 ms
 Execution Time: 128.932 ms
(28 rows)

SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=88991.12..88991.13 rows=1 width=32) (actual time=188.378..188.378 rows=1 loops=1)
   ->  Gather  (cost=88990.90..88991.11 rows=2 width=32) (actual time=188.274..190.760 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=87990.90..87990.91 rows=1 width=32) (actual time=185.919..185.919 rows=1 loops=3)
               ->  Hash Join  (cost=5.47..87951.49 rows=15766 width=17) (actual time=119.211..185.871 rows=223 loops=3)
                     Hash Cond: (mi.info_type_id = it.id)
                     ->  Nested Loop  (cost=1.93..87905.00 rows=15766 width=21) (actual time=119.151..185.751 rows=223 loops=3)
                           ->  Nested Loop  (cost=1.49..61336.48 rows=12181 width=25) (actual time=119.080..165.891 rows=256 loops=3)
                                 ->  Hash Join  (cost=1.06..35481.01 rows=17705 width=4) (actual time=118.779..161.344 rows=266 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..35097.06 rows=70822 width=8) (actual time=0.028..154.641 rows=98543 loops=3)
                                             Filter: (((note)::text !~~ '%(TV)%'::text) AND ((note)::text ~~ '%(USA)%'::text))
                                             Rows Removed by Filter: 771167
                                       ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..1.46 rows=1 width=21) (actual time=0.017..0.017 rows=1 loops=798)
                                       Index Cond: (id = mc.movie_id)
                                       Filter: (production_year > 1990)
                                       Rows Removed by Filter: 0
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.16 rows=2 width=8) (actual time=0.069..0.077 rows=1 loops=767)
                                 Index Cond: (movie_id = t.id)
                                 Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,USA,American}'::text[]))
                                 Rows Removed by Filter: 10
                     ->  Hash  (cost=2.13..2.13 rows=113 width=4) (actual time=0.040..0.041 rows=113 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 12kB
                           ->  Seq Scan on info_type it  (cost=0.00..2.13 rows=113 width=4) (actual time=0.014..0.022 rows=113 loops=3)
 Planning Time: 2.092 ms
 Execution Time: 190.889 ms
(32 rows)

SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3848.64..3848.65 rows=1 width=96) (actual time=38.928..38.929 rows=1 loops=1)
   ->  Nested Loop  (cost=8.17..3848.63 rows=1 width=48) (actual time=4.764..38.915 rows=6 loops=1)
         ->  Nested Loop  (cost=7.74..3759.44 rows=195 width=37) (actual time=0.468..23.412 rows=1224 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.18..3749.50 rows=5 width=41) (actual time=0.444..15.854 rows=11 loops=1)
                     ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=20) (actual time=0.424..15.573 rows=14 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=20) (actual time=0.393..15.436 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'marvel-cinematic-universe'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=0.028..0.129 rows=14 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=12
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.016..0.016 rows=14 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.019..0.019 rows=1 loops=14)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2010)
                           Rows Removed by Filter: 0
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.020..0.665 rows=111 loops=11)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.012..0.012 rows=0 loops=1224)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ '%Downey%Robert%'::text)
               Rows Removed by Filter: 1
 Planning Time: 2.321 ms
 Execution Time: 39.058 ms
(26 rows)

SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=12284.11..12284.12 rows=1 width=96) (actual time=296.137..296.138 rows=1 loops=1)
   ->  Nested Loop  (cost=8.17..12284.10 rows=1 width=48) (actual time=31.017..296.115 rows=12 loops=1)
         ->  Nested Loop  (cost=7.74..12283.65 rows=1 width=37) (actual time=9.501..293.730 rows=383 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.18..12281.66 rows=1 width=41) (actual time=9.492..292.388 rows=36 loops=1)
                     ->  Nested Loop  (cost=6.75..12149.91 rows=270 width=20) (actual time=0.696..129.944 rows=35548 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..3632.40 rows=8 width=20) (actual time=0.104..29.684 rows=8 loops=1)
                                 Filter: ((keyword)::text = ANY ('{superhero,sequel,second-part,marvel-comics,based-on-comic,tv-special,fight,violence}'::text[]))
                                 Rows Removed by Filter: 134162
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1061.70 rows=299 width=8) (actual time=1.137..12.013 rows=4444 loops=8)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=23488
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.652..0.652 rows=4444 loops=8)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.004..0.004 rows=0 loops=35548)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2014)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.012..0.035 rows=11 loops=36)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.006..0.006 rows=0 loops=383)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ '%Downey%Robert%'::text)
               Rows Removed by Filter: 1
 Planning Time: 2.052 ms
 Execution Time: 296.256 ms
(26 rows)

SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3751.96..3751.97 rows=1 width=96) (actual time=11.660..11.660 rows=1 loops=1)
   ->  Nested Loop  (cost=8.17..3751.95 rows=1 width=48) (actual time=0.834..11.651 rows=2 loops=1)
         ->  Nested Loop  (cost=7.74..3751.49 rows=1 width=37) (actual time=0.483..11.439 rows=33 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.18..3749.51 rows=1 width=41) (actual time=0.461..11.299 rows=2 loops=1)
                     ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=20) (actual time=0.412..11.068 rows=14 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=20) (actual time=0.381..10.957 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'marvel-cinematic-universe'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=0.028..0.106 rows=14 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=12
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.022..0.022 rows=14 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.016..0.016 rows=0 loops=14)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2014)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.020..0.066 rows=16 loops=2)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.006..0.006 rows=0 loops=33)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ '%Downey%Robert%'::text)
               Rows Removed by Filter: 1
 Planning Time: 2.530 ms
 Execution Time: 11.789 ms
(26 rows)

SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=15053.68..15053.69 rows=1 width=96) (actual time=6821.193..6821.193 rows=1 loops=1)
   ->  Nested Loop  (cost=8.17..15053.68 rows=1 width=48) (actual time=189.861..6821.074 rows=88 loops=1)
         ->  Nested Loop  (cost=7.74..12573.66 rows=5422 width=37) (actual time=0.716..2555.108 rows=785477 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.18..12281.66 rows=147 width=41) (actual time=0.694..333.352 rows=14165 loops=1)
                     ->  Nested Loop  (cost=6.75..12149.91 rows=270 width=20) (actual time=0.671..138.619 rows=35548 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..3632.40 rows=8 width=20) (actual time=0.107..30.050 rows=8 loops=1)
                                 Filter: ((keyword)::text = ANY ('{superhero,sequel,second-part,marvel-comics,based-on-comic,tv-special,fight,violence}'::text[]))
                                 Rows Removed by Filter: 134162
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1061.70 rows=299 width=8) (actual time=1.137..12.871 rows=4444 loops=8)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=23488
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.651..0.651 rows=4444 loops=8)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.005..0.005 rows=0 loops=35548)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2000)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.008..0.146 rows=55 loops=14165)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.005..0.005 rows=0 loops=785477)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ '%Downey%Robert%'::text)
               Rows Removed by Filter: 1
 Planning Time: 2.037 ms
 Execution Time: 6821.311 ms
(26 rows)

SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4095.38..4095.39 rows=1 width=96) (actual time=25.297..25.297 rows=1 loops=1)
   ->  Nested Loop  (cost=8.17..4095.38 rows=1 width=48) (actual time=4.246..25.284 rows=6 loops=1)
         ->  Nested Loop  (cost=7.74..3785.26 rows=678 width=37) (actual time=0.475..15.430 rows=1224 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.18..3749.50 rows=18 width=41) (actual time=0.442..10.781 rows=11 loops=1)
                     ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=20) (actual time=0.420..10.555 rows=14 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=20) (actual time=0.383..10.426 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'marvel-cinematic-universe'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=0.035..0.122 rows=14 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=12
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.021..0.021 rows=14 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.015..0.015 rows=1 loops=14)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2000)
                           Rows Removed by Filter: 0
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.016..0.404 rows=111 loops=11)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.008..0.008 rows=0 loops=1224)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ '%Downey%Robert%'::text)
               Rows Removed by Filter: 1
 Planning Time: 2.560 ms
 Execution Time: 25.425 ms
(26 rows)

SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=15080.79..15080.80 rows=1 width=96) (actual time=6887.392..6887.392 rows=1 loops=1)
   ->  Nested Loop  (cost=8.17..15040.12 rows=5422 width=48) (actual time=0.751..6711.354 rows=785477 loops=1)
         ->  Nested Loop  (cost=7.74..12573.66 rows=5422 width=37) (actual time=0.721..2566.229 rows=785477 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.18..12281.66 rows=147 width=41) (actual time=0.700..333.285 rows=14165 loops=1)
                     ->  Nested Loop  (cost=6.75..12149.91 rows=270 width=20) (actual time=0.678..138.156 rows=35548 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..3632.40 rows=8 width=20) (actual time=0.103..29.891 rows=8 loops=1)
                                 Filter: ((keyword)::text = ANY ('{superhero,sequel,second-part,marvel-comics,based-on-comic,tv-special,fight,violence}'::text[]))
                                 Rows Removed by Filter: 134162
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1061.70 rows=299 width=8) (actual time=1.139..12.834 rows=4444 loops=8)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=23488
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.652..0.652 rows=4444 loops=8)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.005..0.005 rows=0 loops=35548)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2000)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.008..0.148 rows=55 loops=14165)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=19) (actual time=0.005..0.005 rows=1 loops=785477)
               Index Cond: (id = ci.person_id)
 Planning Time: 2.069 ms
 Execution Time: 6887.509 ms
(24 rows)

SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=13450.44..13450.45 rows=1 width=64) (actual time=1012.806..1012.806 rows=1 loops=1)
   ->  Nested Loop  (cost=41.24..13450.44 rows=1 width=32) (actual time=62.172..1012.773 rows=32 loops=1)
         ->  Nested Loop  (cost=41.10..13449.36 rows=1 width=36) (actual time=62.153..1012.677 rows=32 loops=1)
               Join Filter: (n.id = an.person_id)
               ->  Nested Loop  (cost=40.67..13448.87 rows=1 width=48) (actual time=62.126..1012.463 rows=14 loops=1)
                     Join Filter: (n.id = pi.person_id)
                     ->  Nested Loop  (cost=40.24..12494.38 rows=985 width=40) (actual time=0.429..862.224 rows=17559 loops=1)
                           ->  Nested Loop  (cost=39.81..8533.64 rows=8474 width=21) (actual time=0.400..298.834 rows=105262 loops=1)
                                 ->  Nested Loop  (cost=39.25..7243.89 rows=229 width=25) (actual time=0.366..38.274 rows=1467 loops=1)
                                       ->  Nested Loop  (cost=38.82..245.23 rows=1666 width=4) (actual time=0.331..2.627 rows=5186 loops=1)
                                             ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=4) (actual time=0.014..0.018 rows=1 loops=1)
                                                   Filter: ((link)::text = 'features'::text)
                                                   Rows Removed by Filter: 17
                                             ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..225.26 rows=1875 width=8) (actual time=0.314..1.615 rows=5186 loops=1)
                                                   Recheck Cond: (link_type_id = lt.id)
                                                   Heap Blocks: exact=132
                                                   ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.285..0.285 rows=5186 loops=1)
                                                         Index Cond: (link_type_id = lt.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..4.20 rows=1 width=21) (actual time=0.007..0.007 rows=0 loops=5186)
                                             Index Cond: (id = ml.linked_movie_id)
                                             Filter: ((production_year >= 1980) AND (production_year <= 1995))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..5.26 rows=37 width=8) (actual time=0.010..0.168 rows=72 loops=1467)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Scan using name_pkey on name n  (cost=0.43..0.47 rows=1 width=19) (actual time=0.005..0.005 rows=0 loops=105262)
                                 Index Cond: (id = ci.person_id)
                                 Filter: (((name_pcode_cf)::text >= 'A'::text) AND ((name_pcode_cf)::text <= 'F'::text) AND (((gender)::text = 'm'::text) OR (((gender)::text = 'f'::text) AND ((name)::text ~~ 'B%'::text))))
                                 Rows Removed by Filter: 1
                     ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..0.96 rows=1 width=8) (actual time=0.008..0.008 rows=0 loops=17559)
                           Index Cond: (person_id = ci.person_id)
                           Filter: ((note)::text = 'Volker Boehm'::text)
                           Rows Removed by Filter: 20
               ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.47 rows=2 width=4) (actual time=0.011..0.014 rows=2 loops=14)
                     Index Cond: (person_id = ci.person_id)
                     Filter: ((name)::text ~~ '%a%'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using info_type_pkey on info_type it  (cost=0.14..0.61 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=32)
               Index Cond: (id = pi.info_type_id)
               Filter: ((info)::text = 'mini biography'::text)
 Planning Time: 7.559 ms
 Execution Time: 1012.987 ms
(41 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=9049.69..9049.70 rows=1 width=64) (actual time=286.990..286.990 rows=1 loops=1)
   ->  Nested Loop  (cost=41.24..9049.68 rows=1 width=32) (actual time=13.866..286.971 rows=16 loops=1)
         ->  Nested Loop  (cost=41.10..9048.61 rows=1 width=36) (actual time=13.842..286.909 rows=16 loops=1)
               Join Filter: (n.id = an.person_id)
               ->  Nested Loop  (cost=40.67..9048.12 rows=1 width=48) (actual time=13.830..286.832 rows=8 loops=1)
                     Join Filter: (n.id = pi.person_id)
                     ->  Nested Loop  (cost=40.24..9005.48 rows=44 width=40) (actual time=0.631..278.374 rows=1076 loops=1)
                           ->  Nested Loop  (cost=39.81..8134.43 rows=1894 width=21) (actual time=0.388..113.033 rows=33415 loops=1)
                                 ->  Nested Loop  (cost=39.25..7243.89 rows=51 width=25) (actual time=0.355..36.121 rows=435 loops=1)
                                       ->  Nested Loop  (cost=38.82..245.23 rows=1666 width=4) (actual time=0.319..2.252 rows=5186 loops=1)
                                             ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=4) (actual time=0.011..0.014 rows=1 loops=1)
                                                   Filter: ((link)::text = 'features'::text)
                                                   Rows Removed by Filter: 17
                                             ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..225.26 rows=1875 width=8) (actual time=0.306..1.503 rows=5186 loops=1)
                                                   Recheck Cond: (link_type_id = lt.id)
                                                   Heap Blocks: exact=132
                                                   ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.277..0.277 rows=5186 loops=1)
                                                         Index Cond: (link_type_id = lt.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..4.20 rows=1 width=21) (actual time=0.006..0.006 rows=0 loops=5186)
                                             Index Cond: (id = ml.linked_movie_id)
                                             Filter: ((production_year >= 1980) AND (production_year <= 1984))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..17.09 rows=37 width=8) (actual time=0.010..0.167 rows=77 loops=435)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.005..0.005 rows=0 loops=33415)
                                 Index Cond: (id = ci.person_id)
                                 Filter: (((name_pcode_cf)::text ~~ 'D%'::text) AND ((gender)::text = 'm'::text))
                                 Rows Removed by Filter: 1
                     ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..0.96 rows=1 width=8) (actual time=0.007..0.008 rows=0 loops=1076)
                           Index Cond: (person_id = ci.person_id)
                           Filter: ((note)::text = 'Volker Boehm'::text)
                           Rows Removed by Filter: 16
               ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.47 rows=2 width=4) (actual time=0.006..0.008 rows=2 loops=8)
                     Index Cond: (person_id = ci.person_id)
                     Filter: ((name)::text ~~ '%a%'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using info_type_pkey on info_type it  (cost=0.14..0.61 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=16)
               Index Cond: (id = pi.info_type_id)
               Filter: ((info)::text = 'mini biography'::text)
 Planning Time: 7.504 ms
 Execution Time: 287.169 ms
(41 rows)

SET
                                                                                                             QUERY PLAN                                                                                                              
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=58025.67..58025.68 rows=1 width=64) (actual time=3318.364..3318.364 rows=1 loops=1)
   ->  Nested Loop  (cost=2495.15..58025.64 rows=6 width=111) (actual time=20.218..3075.178 rows=68185 loops=1)
         ->  Hash Join  (cost=2494.72..58021.06 rows=10 width=119) (actual time=20.179..2823.140 rows=109842 loops=1)
               Hash Cond: (ml.link_type_id = lt.id)
               ->  Nested Loop  (cost=2493.40..58019.61 rows=44 width=123) (actual time=20.134..2799.712 rows=127027 loops=1)
                     ->  Nested Loop  (cost=2493.11..57531.16 rows=1426 width=115) (actual time=20.100..1170.486 rows=1618304 loops=1)
                           ->  Nested Loop  (cost=2492.55..57287.95 rows=14 width=123) (actual time=20.074..662.108 rows=12595 loops=1)
                                 ->  Nested Loop  (cost=2492.12..56107.25 rows=1430 width=104) (actual time=19.960..414.179 rows=72979 loops=1)
                                       ->  Nested Loop  (cost=2491.69..55264.82 rows=717 width=100) (actual time=19.907..190.333 rows=84183 loops=1)
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.018..0.027 rows=1 loops=1)
                                                   Filter: ((info)::text = 'mini biography'::text)
                                                   Rows Removed by Filter: 112
                                             ->  Bitmap Heap Scan on person_info pi  (cost=2491.69..55225.59 rows=3682 width=104) (actual time=19.887..181.827 rows=84183 loops=1)
                                                   Recheck Cond: (info_type_id = it.id)
                                                   Filter: (note IS NOT NULL)
                                                   Rows Removed by Filter: 1
                                                   Heap Blocks: exact=40537
                                                   ->  Bitmap Index Scan on info_type_id_person_info  (cost=0.00..2490.77 rows=134712 width=0) (actual time=11.571..11.571 rows=84184 loops=1)
                                                         Index Cond: (info_type_id = it.id)
                                       ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..1.15 rows=2 width=4) (actual time=0.002..0.002 rows=1 loops=84183)
                                             Index Cond: (person_id = pi.person_id)
                                             Filter: ((name IS NOT NULL) AND (((name)::text ~~ '%a%'::text) OR ((name)::text ~~ 'A%'::text)))
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using name_pkey on name n  (cost=0.43..0.83 rows=1 width=19) (actual time=0.003..0.003 rows=0 loops=72979)
                                       Index Cond: (id = an.person_id)
                                       Filter: (((name_pcode_cf)::text >= 'A'::text) AND ((name_pcode_cf)::text <= 'F'::text) AND (((gender)::text = 'm'::text) OR (((gender)::text = 'f'::text) AND ((name)::text ~~ 'A%'::text))))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using person_id_cast_info on cast_info ci  (cost=0.56..12.33 rows=504 width=8) (actual time=0.006..0.027 rows=128 loops=12595)
                                 Index Cond: (person_id = n.id)
                     ->  Index Scan using linked_movie_id_movie_link on movie_link ml  (cost=0.29..0.32 rows=2 width=8) (actual time=0.001..0.001 rows=0 loops=1618304)
                           Index Cond: (linked_movie_id = ci.movie_id)
               ->  Hash  (cost=1.27..1.27 rows=4 width=4) (actual time=0.018..0.019 rows=4 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                     ->  Seq Scan on link_type lt  (cost=0.00..1.27 rows=4 width=4) (actual time=0.010..0.013 rows=4 loops=1)
                           Filter: ((link)::text = ANY ('{references,"referenced in",features,"featured in"}'::text[]))
                           Rows Removed by Filter: 14
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.46 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=109842)
               Index Cond: (id = ci.movie_id)
               Filter: ((production_year >= 1980) AND (production_year <= 2010))
               Rows Removed by Filter: 0
 Planning Time: 7.576 ms
 Execution Time: 3318.755 ms
(42 rows)

SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=42962.65..42962.66 rows=1 width=64) (actual time=1445.298..1445.298 rows=1 loops=1)
   ->  Gather  (cost=5775.17..42962.64 rows=1 width=33) (actual time=124.983..1458.377 rows=62 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Nested Loop  (cost=4775.17..41962.54 rows=1 width=33) (actual time=170.056..1442.521 rows=21 loops=3)
               ->  Nested Loop  (cost=4774.74..41958.79 rows=5 width=41) (actual time=16.716..1427.889 rows=5793 loops=3)
                     ->  Hash Join  (cost=4774.31..41956.44 rows=2 width=21) (actual time=16.680..1415.499 rows=2479 loops=3)
                           Hash Cond: (ci.role_id = rt.id)
                           ->  Nested Loop  (cost=4773.15..41955.18 rows=27 width=25) (actual time=16.584..1414.504 rows=6533 loops=3)
                                 ->  Nested Loop  (cost=4772.59..41333.61 rows=332 width=25) (actual time=16.357..240.260 rows=16109 loops=3)
                                       ->  Parallel Hash Join  (cost=4772.16..39899.83 rows=332 width=4) (actual time=16.316..155.568 rows=16109 loops=3)
                                             Hash Cond: (mc.company_id = cn.id)
                                             ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..35097.06 rows=11664 width=8) (actual time=0.053..133.501 rows=16299 loops=3)
                                                   Filter: (((note)::text ~~ '%(Japan)%'::text) AND ((note)::text !~~ '%(USA)%'::text))
                                                   Rows Removed by Filter: 853411
                                             ->  Parallel Hash  (cost=4722.92..4722.92 rows=3939 width=4) (actual time=16.089..16.089 rows=2251 loops=3)
                                                   Buckets: 8192  Batches: 1  Memory Usage: 384kB
                                                   ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=3939 width=4) (actual time=0.020..15.422 rows=2251 loops=3)
                                                         Filter: ((country_code)::text = '[jp]'::text)
                                                         Rows Removed by Filter: 76082
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..4.32 rows=1 width=21) (actual time=0.005..0.005 rows=1 loops=48328)
                                             Index Cond: (id = mc.movie_id)
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.86 rows=1 width=12) (actual time=0.070..0.073 rows=0 loops=48328)
                                       Index Cond: (movie_id = t.id)
                                       Filter: ((note)::text = '(voice: English version)'::text)
                                       Rows Removed by Filter: 32
                           ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.020..0.020 rows=1 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                 ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.015..0.016 rows=1 loops=3)
                                       Filter: ((role)::text = 'actress'::text)
                                       Rows Removed by Filter: 11
                     ->  Index Scan using person_id_aka_name on aka_name an1  (cost=0.42..1.16 rows=2 width=20) (actual time=0.004..0.004 rows=2 loops=7438)
                           Index Cond: (person_id = ci.person_id)
               ->  Index Scan using name_pkey on name n1  (cost=0.43..0.75 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=17379)
                     Index Cond: (id = an1.person_id)
                     Filter: (((name)::text ~~ '%Yo%'::text) AND ((name)::text !~~ '%Yu%'::text))
                     Rows Removed by Filter: 1
 Planning Time: 4.746 ms
 Execution Time: 1458.602 ms
(39 rows)

SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=44409.00..44409.01 rows=1 width=64) (actual time=172.353..172.353 rows=1 loops=1)
   ->  Nested Loop  (cost=1002.40..44409.00 rows=1 width=33) (actual time=170.559..172.340 rows=6 loops=1)
         ->  Nested Loop  (cost=1002.27..44408.82 rows=1 width=37) (actual time=170.531..172.304 rows=6 loops=1)
               ->  Nested Loop  (cost=1001.84..44408.07 rows=1 width=45) (actual time=169.895..171.476 rows=171 loops=1)
                     ->  Nested Loop  (cost=1001.42..44406.90 rows=1 width=25) (actual time=169.864..170.594 rows=104 loops=1)
                           Join Filter: (t.id = ci.movie_id)
                           ->  Gather  (cost=1000.85..44264.09 rows=1 width=25) (actual time=169.820..170.215 rows=4 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Nested Loop  (cost=0.85..43263.99 rows=1 width=25) (actual time=134.405..167.438 rows=1 loops=3)
                                       ->  Nested Loop  (cost=0.42..43166.10 rows=12 width=4) (actual time=0.090..139.107 rows=2832 loops=3)
                                             ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..40532.74 rows=434 width=8) (actual time=0.055..129.520 rows=2856 loops=3)
                                                   Filter: (((note)::text ~~ '%(Japan)%'::text) AND ((note)::text !~~ '%(USA)%'::text) AND (((note)::text ~~ '%(2006)%'::text) OR ((note)::text ~~ '%(2007)%'::text)))
                                                   Rows Removed by Filter: 866853
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..6.07 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=8569)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((country_code)::text = '[jp]'::text)
                                                   Rows Removed by Filter: 0
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..8.13 rows=1 width=21) (actual time=0.010..0.010 rows=0 loops=8495)
                                             Index Cond: (id = mc.movie_id)
                                             Filter: ((production_year >= 2006) AND (production_year <= 2007) AND (((title)::text ~~ 'One Piece%'::text) OR ((title)::text ~~ 'Dragon Ball Z%'::text)))
                                             Rows Removed by Filter: 1
                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..142.80 rows=1 width=12) (actual time=0.056..0.186 rows=26 loops=4)
                                 Index Cond: (movie_id = mc.movie_id)
                                 Filter: ((note)::text = '(voice: English version)'::text)
                                 Rows Removed by Filter: 17
                     ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..1.16 rows=2 width=20) (actual time=0.007..0.008 rows=2 loops=104)
                           Index Cond: (person_id = ci.person_id)
               ->  Index Scan using name_pkey on name n  (cost=0.43..0.75 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=171)
                     Index Cond: (id = an.person_id)
                     Filter: (((name)::text ~~ '%Yo%'::text) AND ((name)::text !~~ '%Yu%'::text))
                     Rows Removed by Filter: 1
         ->  Index Scan using role_type_pkey on role_type rt  (cost=0.14..0.16 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=6)
               Index Cond: (id = ci.role_id)
               Filter: ((role)::text = 'actress'::text)
 Planning Time: 4.779 ms
 Execution Time: 172.909 ms
(37 rows)

SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=529735.54..529735.55 rows=1 width=64) (actual time=3481.539..3481.539 rows=1 loops=1)
   ->  Gather  (cost=529735.32..529735.53 rows=2 width=64) (actual time=3479.423..3583.908 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=528735.32..528735.33 rows=1 width=64) (actual time=3476.890..3476.890 rows=1 loops=3)
               ->  Parallel Hash Join  (cost=483413.83..513803.80 rows=2986304 width=33) (actual time=3207.484..3373.157 rows=829204 loops=3)
                     Hash Cond: (a1.person_id = n1.id)
                     ->  Parallel Seq Scan on aka_name a1  (cost=0.00..15151.60 rows=375560 width=20) (actual time=0.028..39.239 rows=300448 loops=3)
                     ->  Parallel Hash  (cost=459853.10..459853.10 rows=1218458 width=25) (actual time=3108.541..3108.542 rows=656886 loops=3)
                           Buckets: 65536  Batches: 64  Memory Usage: 2848kB
                           ->  Parallel Hash Join  (cost=345158.80..459853.10 rows=1218458 width=25) (actual time=2772.991..2972.876 rows=656886 loops=3)
                                 Hash Cond: (ci.person_id = n1.id)
                                 ->  Hash Join  (cost=243691.57..334123.41 rows=1218458 width=21) (actual time=1933.696..2240.564 rows=656886 loops=3)
                                       Hash Cond: (t.id = ci.movie_id)
                                       ->  Parallel Hash Join  (cost=44358.48..110382.12 rows=395644 width=25) (actual time=592.066..792.329 rows=384599 loops=3)
                                             Hash Cond: (t.id = mc.movie_id)
                                             ->  Parallel Seq Scan on title t  (cost=0.00..46532.63 rows=1053463 width=21) (actual time=0.017..114.566 rows=842771 loops=3)
                                             ->  Parallel Hash  (cost=37866.93..37866.93 rows=395644 width=4) (actual time=298.984..298.984 rows=384599 loops=3)
                                                   Buckets: 131072  Batches: 16  Memory Usage: 3872kB
                                                   ->  Parallel Hash Join  (cost=5351.77..37866.93 rows=395644 width=4) (actual time=25.482..245.431 rows=384599 loops=3)
                                                         Hash Cond: (mc.company_id = cn.id)
                                                         ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=8) (actual time=0.013..78.201 rows=869710 loops=3)
                                                         ->  Parallel Hash  (cost=4722.92..4722.92 rows=50308 width=4) (actual time=25.132..25.132 rows=28281 loops=3)
                                                               Buckets: 131072  Batches: 1  Memory Usage: 4384kB
                                                               ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=50308 width=4) (actual time=0.022..16.980 rows=28281 loops=3)
                                                                     Filter: ((country_code)::text = '[us]'::text)
                                                                     Rows Removed by Filter: 50051
                                       ->  Hash  (cost=149779.57..149779.57 rows=3020362 width=8) (actual time=1164.447..1164.448 rows=2728943 loops=3)
                                             Buckets: 131072  Batches: 64  Memory Usage: 2675kB
                                             ->  Nested Loop  (cost=0.56..149779.57 rows=3020362 width=8) (actual time=0.048..780.798 rows=2728943 loops=3)
                                                   ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.014..0.018 rows=1 loops=3)
                                                         Filter: ((role)::text = 'writer'::text)
                                                         Rows Removed by Filter: 11
                                                   ->  Index Scan using role_id_cast_info on cast_info ci  (cost=0.56..116829.02 rows=3294940 width=12) (actual time=0.029..526.626 rows=2728943 loops=3)
                                                         Index Cond: (role_id = rt.id)
                                 ->  Parallel Hash  (cost=72977.55..72977.55 rows=1736455 width=4) (actual time=352.684..352.684 rows=1389164 loops=3)
                                       Buckets: 131072  Batches: 64  Memory Usage: 3616kB
                                       ->  Parallel Seq Scan on name n1  (cost=0.00..72977.55 rows=1736455 width=4) (actual time=0.024..170.583 rows=1389164 loops=3)
 Planning Time: 4.213 ms
 Execution Time: 3584.295 ms
(40 rows)

SET
                                                                                               QUERY PLAN                                                                                               
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=529735.54..529735.55 rows=1 width=64) (actual time=1730.800..1730.800 rows=1 loops=1)
   ->  Gather  (cost=529735.32..529735.53 rows=2 width=64) (actual time=1729.029..1800.531 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=528735.32..528735.33 rows=1 width=64) (actual time=1726.506..1726.507 rows=1 loops=3)
               ->  Parallel Hash Join  (cost=483413.83..513803.80 rows=2986304 width=33) (actual time=1668.189..1712.966 rows=107668 loops=3)
                     Hash Cond: (an1.person_id = n1.id)
                     ->  Parallel Seq Scan on aka_name an1  (cost=0.00..15151.60 rows=375560 width=20) (actual time=0.027..39.555 rows=300448 loops=3)
                     ->  Parallel Hash  (cost=459853.10..459853.10 rows=1218458 width=25) (actual time=1570.375..1570.375 rows=95179 loops=3)
                           Buckets: 65536  Batches: 64  Memory Usage: 992kB
                           ->  Parallel Hash Join  (cost=345158.80..459853.10 rows=1218458 width=25) (actual time=1448.473..1549.618 rows=95179 loops=3)
                                 Hash Cond: (ci.person_id = n1.id)
                                 ->  Hash Join  (cost=243691.57..334123.41 rows=1218458 width=21) (actual time=897.896..1067.188 rows=95179 loops=3)
                                       Hash Cond: (t.id = ci.movie_id)
                                       ->  Parallel Hash Join  (cost=44358.48..110382.12 rows=395644 width=25) (actual time=588.707..792.461 rows=384599 loops=3)
                                             Hash Cond: (t.id = mc.movie_id)
                                             ->  Parallel Seq Scan on title t  (cost=0.00..46532.63 rows=1053463 width=21) (actual time=0.022..110.817 rows=842771 loops=3)
                                             ->  Parallel Hash  (cost=37866.93..37866.93 rows=395644 width=4) (actual time=299.468..299.468 rows=384599 loops=3)
                                                   Buckets: 131072  Batches: 16  Memory Usage: 3872kB
                                                   ->  Parallel Hash Join  (cost=5351.77..37866.93 rows=395644 width=4) (actual time=26.244..246.464 rows=384599 loops=3)
                                                         Hash Cond: (mc.company_id = cn.id)
                                                         ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=8) (actual time=0.015..78.142 rows=869710 loops=3)
                                                         ->  Parallel Hash  (cost=4722.92..4722.92 rows=50308 width=4) (actual time=25.888..25.888 rows=28281 loops=3)
                                                               Buckets: 131072  Batches: 1  Memory Usage: 4384kB
                                                               ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=50308 width=4) (actual time=0.027..17.924 rows=28281 loops=3)
                                                                     Filter: ((country_code)::text = '[us]'::text)
                                                                     Rows Removed by Filter: 50051
                                       ->  Hash  (cost=149779.57..149779.57 rows=3020362 width=8) (actual time=119.618..119.619 rows=276403 loops=3)
                                             Buckets: 131072  Batches: 64  Memory Usage: 1193kB
                                             ->  Nested Loop  (cost=0.56..149779.57 rows=3020362 width=8) (actual time=0.062..80.972 rows=276403 loops=3)
                                                   ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.020..0.022 rows=1 loops=3)
                                                         Filter: ((role)::text = 'costume designer'::text)
                                                         Rows Removed by Filter: 11
                                                   ->  Index Scan using role_id_cast_info on cast_info ci  (cost=0.56..116829.02 rows=3294940 width=12) (actual time=0.038..55.211 rows=276403 loops=3)
                                                         Index Cond: (role_id = rt.id)
                                 ->  Parallel Hash  (cost=72977.55..72977.55 rows=1736455 width=4) (actual time=351.976..351.976 rows=1389164 loops=3)
                                       Buckets: 131072  Batches: 64  Memory Usage: 3648kB
                                       ->  Parallel Seq Scan on name n1  (cost=0.00..72977.55 rows=1736455 width=4) (actual time=0.020..170.210 rows=1389164 loops=3)
 Planning Time: 4.823 ms
 Execution Time: 1800.935 ms
(40 rows)

SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=83282.38..83282.39 rows=1 width=96) (actual time=274.151..274.151 rows=1 loops=1)
   ->  Nested Loop  (cost=1003.86..83282.37 rows=1 width=49) (actual time=139.462..274.105 rows=121 loops=1)
         ->  Nested Loop  (cost=1003.44..83281.88 rows=1 width=53) (actual time=139.444..273.439 rows=123 loops=1)
               Join Filter: (ci.movie_id = mc.movie_id)
               ->  Gather  (cost=1003.01..83281.24 rows=1 width=57) (actual time=139.300..273.663 rows=139 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Nested Loop  (cost=3.01..82281.14 rows=1 width=57) (actual time=117.646..270.666 rows=46 loops=3)
                           ->  Nested Loop  (cost=2.58..82280.49 rows=1 width=45) (actual time=107.954..270.248 rows=52 loops=3)
                                 ->  Hash Join  (cost=2.15..82279.20 rows=2 width=24) (actual time=107.253..268.804 rows=142 loops=3)
                                       Hash Cond: (ci.role_id = rt.id)
                                       ->  Nested Loop  (cost=0.99..82277.96 rows=21 width=28) (actual time=107.141..268.655 rows=142 loops=3)
                                             Join Filter: (n.id = ci.person_id)
                                             ->  Nested Loop  (cost=0.42..82155.29 rows=9 width=24) (actual time=103.983..257.372 rows=519 loops=3)
                                                   ->  Parallel Seq Scan on name n  (cost=0.00..81659.82 rows=40 width=4) (actual time=103.610..246.741 rows=2256 loops=3)
                                                         Filter: (((name)::text ~~ '%Ang%'::text) AND ((gender)::text = 'f'::text))
                                                         Rows Removed by Filter: 1386908
                                                   ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..12.37 rows=2 width=20) (actual time=0.004..0.004 rows=0 loops=6768)
                                                         Index Cond: (person_id = n.id)
                                             ->  Index Scan using person_id_cast_info on cast_info ci  (cost=0.56..13.47 rows=13 width=16) (actual time=0.020..0.021 rows=0 loops=1558)
                                                   Index Cond: (person_id = an.person_id)
                                                   Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                   Rows Removed by Filter: 44
                                       ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.031..0.031 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.022..0.024 rows=1 loops=3)
                                                   Filter: ((role)::text = 'actress'::text)
                                                   Rows Removed by Filter: 11
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.64 rows=1 width=21) (actual time=0.010..0.010 rows=0 loops=425)
                                       Index Cond: (id = ci.movie_id)
                                       Filter: ((production_year >= 2005) AND (production_year <= 2015))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.65 rows=1 width=20) (actual time=0.008..0.008 rows=1 loops=155)
                                 Index Cond: (id = ci.person_role_id)
               ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.64 rows=1 width=8) (actual time=0.009..0.012 rows=1 loops=139)
                     Index Cond: (movie_id = t.id)
                     Filter: ((note IS NOT NULL) AND (((note)::text ~~ '%(USA)%'::text) OR ((note)::text ~~ '%(worldwide)%'::text)))
                     Rows Removed by Filter: 5
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.49 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=123)
               Index Cond: (id = mc.company_id)
               Filter: ((country_code)::text = '[us]'::text)
               Rows Removed by Filter: 0
 Planning Time: 7.808 ms
 Execution Time: 276.240 ms
(44 rows)

SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=83270.97..83270.98 rows=1 width=128) (actual time=262.779..262.779 rows=1 loops=1)
   ->  Nested Loop  (cost=1003.86..83270.96 rows=1 width=64) (actual time=130.419..262.749 rows=40 loops=1)
         ->  Nested Loop  (cost=1003.44..83270.37 rows=1 width=68) (actual time=130.400..262.588 rows=40 loops=1)
               ->  Nested Loop  (cost=1003.01..83269.66 rows=1 width=72) (actual time=130.375..262.094 rows=60 loops=1)
                     ->  Gather  (cost=1002.58..83268.98 rows=1 width=60) (actual time=130.354..264.212 rows=65 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop  (cost=2.58..82268.88 rows=1 width=60) (actual time=116.778..259.890 rows=22 loops=3)
                                 ->  Hash Join  (cost=2.15..82267.52 rows=2 width=39) (actual time=106.586..259.335 rows=88 loops=3)
                                       Hash Cond: (ci.role_id = rt.id)
                                       ->  Nested Loop  (cost=0.99..82266.28 rows=18 width=43) (actual time=106.476..259.201 rows=88 loops=3)
                                             Join Filter: (n.id = ci.person_id)
                                             ->  Nested Loop  (cost=0.42..82155.29 rows=9 width=39) (actual time=104.084..253.336 rows=432 loops=3)
                                                   ->  Parallel Seq Scan on name n  (cost=0.00..81659.82 rows=40 width=19) (actual time=103.605..246.429 rows=1803 loops=3)
                                                         Filter: (((name)::text ~~ '%Angel%'::text) AND ((gender)::text = 'f'::text))
                                                         Rows Removed by Filter: 1387361
                                                   ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..12.37 rows=2 width=20) (actual time=0.003..0.004 rows=0 loops=5409)
                                                         Index Cond: (person_id = n.id)
                                             ->  Index Scan using person_id_cast_info on cast_info ci  (cost=0.56..12.21 rows=10 width=16) (actual time=0.012..0.013 rows=0 loops=1296)
                                                   Index Cond: (person_id = an.person_id)
                                                   Filter: ((note)::text = '(voice)'::text)
                                                   Rows Removed by Filter: 43
                                       ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.030..0.030 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.023..0.025 rows=1 loops=3)
                                                   Filter: ((role)::text = 'actress'::text)
                                                   Rows Removed by Filter: 11
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.68 rows=1 width=21) (actual time=0.006..0.006 rows=0 loops=265)
                                       Index Cond: (id = ci.movie_id)
                                       Filter: ((production_year >= 2007) AND (production_year <= 2010))
                                       Rows Removed by Filter: 1
                     ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.69 rows=1 width=20) (actual time=0.004..0.004 rows=1 loops=65)
                           Index Cond: (id = ci.person_role_id)
               ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.69 rows=1 width=8) (actual time=0.006..0.008 rows=1 loops=60)
                     Index Cond: (movie_id = ci.movie_id)
                     Filter: (((note)::text ~~ '%(200%)%'::text) AND (((note)::text ~~ '%(USA)%'::text) OR ((note)::text ~~ '%(worldwide)%'::text)))
                     Rows Removed by Filter: 7
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.59 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=40)
               Index Cond: (id = mc.company_id)
               Filter: ((country_code)::text = '[us]'::text)
 Planning Time: 7.140 ms
 Execution Time: 265.365 ms
(42 rows)

SET
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=123482.63..123482.64 rows=1 width=128) (actual time=457.424..457.424 rows=1 loops=1)
   ->  Gather  (cost=123482.40..123482.61 rows=2 width=128) (actual time=456.847..461.308 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=122482.40..122482.41 rows=1 width=128) (actual time=454.161..454.161 rows=1 loops=3)
               ->  Nested Loop  (cost=81764.69..122480.72 rows=168 width=64) (actual time=260.392..453.363 rows=2715 loops=3)
                     Join Filter: (ci.movie_id = t.id)
                     ->  Nested Loop  (cost=81764.26..122392.38 rows=168 width=55) (actual time=260.328..444.872 rows=2715 loops=3)
                           ->  Nested Loop  (cost=81763.84..122186.52 rows=462 width=59) (actual time=259.361..427.156 rows=6115 loops=3)
                                 ->  Nested Loop  (cost=81763.41..122068.42 rows=173 width=51) (actual time=259.292..414.988 rows=2575 loops=3)
                                       ->  Hash Join  (cost=81762.98..121836.61 rows=358 width=39) (actual time=259.241..405.252 rows=2735 loops=3)
                                             Hash Cond: (ci.role_id = rt.id)
                                             ->  Nested Loop  (cost=81761.82..121820.18 rows=4301 width=43) (actual time=259.159..404.624 rows=2735 loops=3)
                                                   Join Filter: (n.id = ci.person_id)
                                                   ->  Parallel Hash Join  (cost=81761.26..97898.70 rows=1755 width=39) (actual time=257.222..334.333 rows=3508 loops=3)
                                                         Hash Cond: (an.person_id = n.id)
                                                         ->  Parallel Seq Scan on aka_name an  (cost=0.00..15151.60 rows=375560 width=20) (actual time=0.012..32.514 rows=300448 loops=3)
                                                         ->  Parallel Hash  (cost=81659.82..81659.82 rows=8115 width=19) (actual time=256.859..256.859 rows=16670 loops=3)
                                                               Buckets: 65536 (originally 32768)  Batches: 1 (originally 1)  Memory Usage: 3584kB
                                                               ->  Parallel Seq Scan on name n  (cost=0.00..81659.82 rows=8115 width=19) (actual time=104.498..248.390 rows=16670 loops=3)
                                                                     Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                                                     Rows Removed by Filter: 1372493
                                                   ->  Index Scan using person_id_cast_info on cast_info ci  (cost=0.56..13.47 rows=13 width=16) (actual time=0.018..0.020 rows=1 loops=10525)
                                                         Index Cond: (person_id = an.person_id)
                                                         Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                         Rows Removed by Filter: 44
                                             ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.027..0.027 rows=1 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.020..0.022 rows=1 loops=3)
                                                         Filter: ((role)::text = 'actress'::text)
                                                         Rows Removed by Filter: 11
                                       ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.65 rows=1 width=20) (actual time=0.003..0.003 rows=1 loops=8204)
                                             Index Cond: (id = ci.person_role_id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.63 rows=5 width=8) (actual time=0.003..0.004 rows=2 loops=7726)
                                       Index Cond: (movie_id = ci.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=18345)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.51 rows=1 width=21) (actual time=0.003..0.003 rows=1 loops=8144)
                           Index Cond: (id = mc.movie_id)
 Planning Time: 7.253 ms
 Execution Time: 461.539 ms
(43 rows)

SET
                                                                                                  QUERY PLAN                                                                                                  
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=211411.33..211411.34 rows=1 width=128) (actual time=3634.500..3634.501 rows=1 loops=1)
   ->  Gather  (cost=211411.10..211411.31 rows=2 width=128) (actual time=2857.266..3639.215 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=210411.10..210411.11 rows=1 width=128) (actual time=3106.447..3106.447 rows=1 loops=3)
               ->  Nested Loop  (cost=140783.51..210327.94 rows=8316 width=64) (actual time=2023.117..3068.715 rows=161027 loops=3)
                     ->  Nested Loop  (cost=140783.09..208504.03 rows=3393 width=56) (actual time=2022.912..2901.035 rows=57856 loops=3)
                           Join Filter: (ci.movie_id = t.id)
                           ->  Nested Loop  (cost=140782.66..206719.92 rows=3393 width=47) (actual time=2022.890..2752.274 rows=57856 loops=3)
                                 ->  Nested Loop  (cost=140782.23..202181.65 rows=7009 width=35) (actual time=2022.872..2557.488 rows=63155 loops=3)
                                       ->  Hash Join  (cost=140781.80..179531.73 rows=30299 width=16) (actual time=2022.841..2368.856 rows=63185 loops=3)
                                             Hash Cond: (mc.movie_id = ci.movie_id)
                                             ->  Parallel Hash Join  (cost=5351.77..37866.93 rows=395644 width=4) (actual time=23.867..250.943 rows=384599 loops=3)
                                                   Hash Cond: (mc.company_id = cn.id)
                                                   ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=8) (actual time=0.015..77.305 rows=869710 loops=3)
                                                   ->  Parallel Hash  (cost=4722.92..4722.92 rows=50308 width=4) (actual time=23.330..23.330 rows=28281 loops=3)
                                                         Buckets: 131072  Batches: 1  Memory Usage: 4384kB
                                                         ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=50308 width=4) (actual time=0.017..16.407 rows=28281 loops=3)
                                                               Filter: ((country_code)::text = '[us]'::text)
                                                               Rows Removed by Filter: 50051
                                             ->  Hash  (cost=134124.20..134124.20 rows=75106 width=12) (actual time=1998.062..1998.063 rows=276166 loops=3)
                                                   Buckets: 131072 (originally 131072)  Batches: 4 (originally 2)  Memory Usage: 3984kB
                                                   ->  Nested Loop  (cost=0.56..134124.20 rows=75106 width=12) (actual time=0.202..1944.104 rows=276166 loops=3)
                                                         ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.014..0.017 rows=1 loops=3)
                                                               Filter: ((role)::text = 'actress'::text)
                                                               Rows Removed by Filter: 11
                                                         ->  Index Scan using role_id_cast_info on cast_info ci  (cost=0.56..133303.71 rows=81934 width=16) (actual time=0.185..1921.103 rows=276166 loops=3)
                                                               Index Cond: (role_id = rt.id)
                                                               Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                               Rows Removed by Filter: 7175807
                                       ->  Index Scan using name_pkey on name n  (cost=0.43..0.75 rows=1 width=19) (actual time=0.003..0.003 rows=1 loops=189554)
                                             Index Cond: (id = ci.person_id)
                                             Filter: ((gender)::text = 'f'::text)
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.65 rows=1 width=20) (actual time=0.003..0.003 rows=1 loops=189464)
                                       Index Cond: (id = ci.person_role_id)
                           ->  Index Scan using title_pkey on title t  (cost=0.43..0.51 rows=1 width=21) (actual time=0.002..0.002 rows=1 loops=173567)
                                 Index Cond: (id = mc.movie_id)
                     ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.52 rows=2 width=20) (actual time=0.002..0.002 rows=3 loops=173567)
                           Index Cond: (person_id = n.id)
 Planning Time: 7.484 ms
 Execution Time: 3639.487 ms
(42 rows)

