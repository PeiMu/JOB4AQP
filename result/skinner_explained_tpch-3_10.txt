SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=46680.35..46680.36 rows=1 width=64) (actual time=443.238..443.239 rows=1 loops=1)
   ->  Gather  (cost=46680.13..46680.34 rows=2 width=64) (actual time=443.098..456.639 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=45680.13..45680.14 rows=1 width=64) (actual time=440.446..440.446 rows=1 loops=3)
               ->  Nested Loop  (cost=4736.00..45680.12 rows=2 width=33) (actual time=77.219..440.415 rows=35 loops=3)
                     ->  Nested Loop  (cost=4735.87..45679.82 rows=2 width=37) (actual time=77.179..440.294 rows=35 loops=3)
                           ->  Hash Join  (cost=4735.44..45655.14 rows=5 width=25) (actual time=77.141..439.844 rows=37 loops=3)
                                 Hash Cond: (ci.role_id = rt.id)
                                 ->  Nested Loop  (cost=4734.28..45653.76 rows=62 width=29) (actual time=77.058..439.734 rows=50 loops=3)
                                       Join Filter: (t.id = ci.movie_id)
                                       ->  Nested Loop  (cost=4733.71..40613.13 rows=2585 width=29) (actual time=16.587..201.414 rows=1513 loops=3)
                                             ->  Parallel Hash Join  (cost=4733.28..37248.44 rows=6523 width=8) (actual time=16.530..177.911 rows=2930 loops=3)
                                                   Hash Cond: (mc.company_id = cn.id)
                                                   ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=12) (actual time=0.015..77.291 rows=869710 loops=3)
                                                   ->  Parallel Hash  (cost=4722.92..4722.92 rows=829 width=4) (actual time=15.858..15.858 rows=454 loops=3)
                                                         Buckets: 2048  Batches: 1  Memory Usage: 112kB
                                                         ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=829 width=4) (actual time=0.048..15.694 rows=454 loops=3)
                                                               Filter: ((country_code)::text = '[ru]'::text)
                                                               Rows Removed by Filter: 77879
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..0.52 rows=1 width=21) (actual time=0.008..0.008 rows=1 loops=8790)
                                                   Index Cond: (id = mc.movie_id)
                                                   Filter: (production_year > 2005)
                                                   Rows Removed by Filter: 0
                                       ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.94 rows=1 width=12) (actual time=0.148..0.157 rows=0 loops=4539)
                                             Index Cond: (movie_id = mc.movie_id)
                                             Filter: (((note)::text ~~ '%(voice)%'::text) AND ((note)::text ~~ '%(uncredited)%'::text))
                                             Rows Removed by Filter: 50
                                 ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.021..0.021 rows=1 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.015..0.016 rows=1 loops=3)
                                             Filter: ((role)::text = 'actor'::text)
                                             Rows Removed by Filter: 11
                           ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..4.94 rows=1 width=20) (actual time=0.011..0.011 rows=1 loops=112)
                                 Index Cond: (id = ci.person_role_id)
                     ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=104)
                           Index Cond: (id = mc.company_type_id)
                           Heap Fetches: 104
 Planning Time: 4.244 ms
 Execution Time: 456.875 ms
(40 rows)

SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=43581.05..43581.06 rows=1 width=64) (actual time=270.407..270.407 rows=1 loops=1)
   ->  Gather  (cost=43580.83..43581.04 rows=2 width=64) (actual time=270.277..276.130 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=42580.83..42580.84 rows=1 width=64) (actual time=267.676..267.677 rows=1 loops=3)
               ->  Hash Join  (cost=4736.96..42580.54 rows=58 width=33) (actual time=267.673..267.673 rows=0 loops=3)
                     Hash Cond: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=4735.87..42579.14 rows=58 width=37) (actual time=267.601..267.601 rows=0 loops=3)
                           ->  Hash Join  (cost=4735.44..42510.24 rows=119 width=25) (actual time=267.600..267.600 rows=0 loops=3)
                                 Hash Cond: (ci.role_id = rt.id)
                                 ->  Nested Loop  (cost=4734.28..42504.02 rows=1424 width=29) (actual time=18.099..267.478 rows=871 loops=3)
                                       Join Filter: (t.id = ci.movie_id)
                                       ->  Nested Loop  (cost=4733.71..40613.13 rows=1018 width=29) (actual time=17.581..201.490 rows=420 loops=3)
                                             ->  Parallel Hash Join  (cost=4733.28..37248.44 rows=6523 width=8) (actual time=16.105..175.537 rows=2930 loops=3)
                                                   Hash Cond: (mc.company_id = cn.id)
                                                   ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=12) (actual time=0.016..76.692 rows=869710 loops=3)
                                                   ->  Parallel Hash  (cost=4722.92..4722.92 rows=829 width=4) (actual time=15.526..15.527 rows=454 loops=3)
                                                         Buckets: 2048  Batches: 1  Memory Usage: 112kB
                                                         ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=829 width=4) (actual time=0.040..15.341 rows=454 loops=3)
                                                               Filter: ((country_code)::text = '[ru]'::text)
                                                               Rows Removed by Filter: 77879
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..0.52 rows=1 width=21) (actual time=0.009..0.009 rows=0 loops=8790)
                                                   Index Cond: (id = mc.movie_id)
                                                   Filter: (production_year > 2010)
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.84 rows=1 width=12) (actual time=0.083..0.157 rows=2 loops=1259)
                                             Index Cond: (movie_id = mc.movie_id)
                                             Filter: ((note)::text ~~ '%(producer)%'::text)
                                             Rows Removed by Filter: 44
                                 ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=3)
                                             Filter: ((role)::text = 'actor'::text)
                                             Rows Removed by Filter: 11
                           ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.58 rows=1 width=20) (never executed)
                                 Index Cond: (id = ci.person_role_id)
                     ->  Hash  (cost=1.04..1.04 rows=4 width=4) (actual time=0.022..0.023 rows=4 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.017..0.018 rows=4 loops=3)
 Planning Time: 4.254 ms
 Execution Time: 276.333 ms
(41 rows)

SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=652454.39..652454.40 rows=1 width=64) (actual time=2632.832..2632.832 rows=1 loops=1)
   ->  Gather  (cost=652454.17..652454.38 rows=2 width=64) (actual time=2629.885..2694.579 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=651454.17..651454.18 rows=1 width=64) (actual time=2627.481..2627.481 rows=1 loops=3)
               ->  Hash Join  (cost=186238.47..650533.03 rows=184228 width=33) (actual time=2617.569..2627.467 rows=3 loops=3)
                     Hash Cond: (ci.role_id = rt.id)
                     ->  Hash Join  (cost=186237.20..649877.37 rows=184228 width=37) (actual time=2617.453..2627.349 rows=3 loops=3)
                           Hash Cond: (mc.company_type_id = ct.id)
                           ->  Parallel Hash Join  (cost=186236.11..648880.30 rows=184228 width=41) (actual time=2617.426..2627.321 rows=3 loops=3)
                                 Hash Cond: (ci.movie_id = t.id)
                                 ->  Parallel Hash Join  (cost=73555.68..529761.99 rows=276569 width=24) (actual time=1825.979..1863.618 rows=5 loops=3)
                                       Hash Cond: (ci.person_role_id = chn.id)
                                       ->  Parallel Seq Scan on cast_info ci  (cost=0.00..441459.62 rows=571306 width=12) (actual time=158.441..1402.991 rows=478480 loops=3)
                                             Filter: ((note)::text ~~ '%(producer)%'::text)
                                             Rows Removed by Filter: 11602968
                                       ->  Parallel Hash  (cost=49532.75..49532.75 rows=1308475 width=20) (actual time=360.882..360.883 rows=1046780 loops=3)
                                             Buckets: 65536  Batches: 64  Memory Usage: 3232kB
                                             ->  Parallel Seq Scan on char_name chn  (cost=0.00..49532.75 rows=1308475 width=20) (actual time=0.028..130.707 rows=1046780 loops=3)
                                 ->  Parallel Hash  (cost=107416.88..107416.88 rows=272203 width=29) (actual time=748.730..748.730 rows=198750 loops=3)
                                       Buckets: 65536  Batches: 16  Memory Usage: 3008kB
                                       ->  Parallel Hash Join  (cost=44358.48..107416.88 rows=272203 width=29) (actual time=563.337..707.479 rows=198750 loops=3)
                                             Hash Cond: (t.id = mc.movie_id)
                                             ->  Parallel Seq Scan on title t  (cost=0.00..49166.29 rows=724782 width=21) (actual time=0.022..127.825 rows=583011 loops=3)
                                                   Filter: (production_year > 1990)
                                                   Rows Removed by Filter: 259760
                                             ->  Parallel Hash  (cost=37866.93..37866.93 rows=395644 width=8) (actual time=308.595..308.595 rows=384599 loops=3)
                                                   Buckets: 131072  Batches: 16  Memory Usage: 3904kB
                                                   ->  Parallel Hash Join  (cost=5351.77..37866.93 rows=395644 width=8) (actual time=25.067..251.790 rows=384599 loops=3)
                                                         Hash Cond: (mc.company_id = cn.id)
                                                         ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=12) (actual time=0.015..78.110 rows=869710 loops=3)
                                                         ->  Parallel Hash  (cost=4722.92..4722.92 rows=50308 width=4) (actual time=24.763..24.764 rows=28281 loops=3)
                                                               Buckets: 131072  Batches: 1  Memory Usage: 4416kB
                                                               ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=50308 width=4) (actual time=0.021..17.319 rows=28281 loops=3)
                                                                     Filter: ((country_code)::text = '[us]'::text)
                                                                     Rows Removed by Filter: 50051
                           ->  Hash  (cost=1.04..1.04 rows=4 width=4) (actual time=0.010..0.010 rows=4 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                 ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.007..0.008 rows=4 loops=3)
                     ->  Hash  (cost=1.12..1.12 rows=12 width=4) (actual time=0.020..0.020 rows=12 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on role_type rt  (cost=0.00..1.12 rows=12 width=4) (actual time=0.012..0.014 rows=12 loops=3)
 Planning Time: 4.330 ms
 Execution Time: 2695.708 ms
(44 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3751.33..3751.34 rows=1 width=96) (actual time=101.051..101.052 rows=1 loops=1)
   ->  Nested Loop  (cost=8.32..3751.32 rows=1 width=118) (actual time=3.949..100.970 rows=310 loops=1)
         Join Filter: (ml.movie_id = t.id)
         ->  Nested Loop  (cost=7.89..3750.82 rows=1 width=113) (actual time=3.920..100.113 rows=402 loops=1)
               Join Filter: (mc.company_type_id = ct.id)
               Rows Removed by Join Filter: 20
               ->  Nested Loop  (cost=7.89..3749.75 rows=1 width=117) (actual time=3.912..99.680 rows=422 loops=1)
                     ->  Nested Loop  (cost=7.47..3749.30 rows=1 width=102) (actual time=3.439..97.246 rows=1021 loops=1)
                           Join Filter: (ml.movie_id = mc.movie_id)
                           ->  Nested Loop  (cost=7.04..3748.73 rows=1 width=90) (actual time=3.403..95.976 rows=199 loops=1)
                                 Join Filter: (ml.link_type_id = lt.id)
                                 Rows Removed by Join Filter: 303
                                 ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.018..0.023 rows=2 loops=1)
                                       Filter: ((link)::text ~~ '%follow%'::text)
                                       Rows Removed by Filter: 16
                                 ->  Nested Loop  (cost=7.04..3747.37 rows=11 width=12) (actual time=3.035..47.949 rows=251 loops=2)
                                       ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=3.029..38.275 rows=10544 loops=2)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.747..12.369 rows=1 loops=2)
                                                   Filter: ((keyword)::text = 'sequel'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=2.261..24.873 rows=10544 loops=2)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=11140
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.346..1.346 rows=10544 loops=2)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.001..0.001 rows=0 loops=21088)
                                             Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=2 width=12) (actual time=0.004..0.005 rows=5 loops=199)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: (note IS NULL)
                                 Rows Removed by Filter: 2
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=1021)
                           Index Cond: (id = mc.company_id)
                           Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                           Rows Removed by Filter: 1
               ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=422)
                     Filter: ((kind)::text = 'production companies'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.002..0.002 rows=1 loops=402)
               Index Cond: (id = mk.movie_id)
               Filter: ((production_year >= 1950) AND (production_year <= 2000))
               Rows Removed by Filter: 0
 Planning Time: 6.851 ms
 Execution Time: 101.273 ms
(44 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3751.33..3751.34 rows=1 width=96) (actual time=33.992..33.992 rows=1 loops=1)
   ->  Nested Loop  (cost=8.32..3751.32 rows=1 width=118) (actual time=4.758..33.978 rows=14 loops=1)
         Join Filter: (ml.movie_id = t.id)
         ->  Nested Loop  (cost=7.89..3750.82 rows=1 width=113) (actual time=3.413..33.744 rows=102 loops=1)
               Join Filter: (mc.company_type_id = ct.id)
               Rows Removed by Join Filter: 1
               ->  Nested Loop  (cost=7.89..3749.75 rows=1 width=117) (actual time=3.409..33.640 rows=103 loops=1)
                     ->  Nested Loop  (cost=7.47..3749.30 rows=1 width=102) (actual time=3.078..32.780 rows=288 loops=1)
                           Join Filter: (ml.movie_id = mc.movie_id)
                           ->  Nested Loop  (cost=7.04..3748.73 rows=1 width=90) (actual time=3.052..32.301 rows=64 loops=1)
                                 Join Filter: (ml.link_type_id = lt.id)
                                 Rows Removed by Join Filter: 187
                                 ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.009..0.012 rows=1 loops=1)
                                       Filter: ((link)::text ~~ '%follows%'::text)
                                       Rows Removed by Filter: 17
                                 ->  Nested Loop  (cost=7.04..3747.37 rows=11 width=12) (actual time=3.038..32.263 rows=251 loops=1)
                                       ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=3.031..23.286 rows=10544 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.741..10.097 rows=1 loops=1)
                                                   Filter: ((keyword)::text = 'sequel'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=2.286..12.232 rows=10544 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=5570
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.366..1.367 rows=10544 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.001..0.001 rows=0 loops=10544)
                                             Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=2 width=12) (actual time=0.005..0.007 rows=4 loops=64)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: (note IS NULL)
                                 Rows Removed by Filter: 2
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=288)
                           Index Cond: (id = mc.company_id)
                           Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                           Rows Removed by Filter: 1
               ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=103)
                     Filter: ((kind)::text = 'production companies'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.002..0.002 rows=0 loops=102)
               Index Cond: (id = mk.movie_id)
               Filter: (((title)::text ~~ '%Money%'::text) AND (production_year = 1998))
               Rows Removed by Filter: 1
 Planning Time: 6.653 ms
 Execution Time: 34.191 ms
(44 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=6166.44..6166.45 rows=1 width=96) (actual time=222.898..222.898 rows=1 loops=1)
   ->  Nested Loop  (cost=8.32..6166.44 rows=1 width=60) (actual time=3.487..221.238 rows=6946 loops=1)
         Join Filter: (ml.movie_id = t.id)
         ->  Nested Loop  (cost=7.89..6165.94 rows=1 width=55) (actual time=3.467..209.666 rows=6946 loops=1)
               Join Filter: (ml.link_type_id = lt.id)
               Rows Removed by Join Filter: 42158
               ->  Nested Loop  (cost=7.89..6164.53 rows=1 width=59) (actual time=3.459..196.792 rows=6946 loops=1)
                     ->  Nested Loop  (cost=7.47..6137.17 rows=60 width=44) (actual time=3.112..170.669 rows=14916 loops=1)
                           Join Filter: (mc.company_type_id = ct.id)
                           Rows Removed by Join Filter: 1782
                           ->  Nested Loop  (cost=7.47..6133.01 rows=79 width=48) (actual time=3.100..166.900 rows=15510 loops=1)
                                 Join Filter: (ml.movie_id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.04..6115.09 rows=31 width=12) (actual time=3.076..157.939 rows=1460 loops=1)
                                       ->  Nested Loop  (cost=6.75..6072.14 rows=101 width=4) (actual time=3.069..115.783 rows=47403 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2793.84 rows=3 width=4) (actual time=0.774..17.338 rows=3 loops=1)
                                                   Filter: ((keyword)::text = ANY ('{sequel,revenge,based-on-novel}'::text[]))
                                                   Rows Removed by Filter: 134167
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1089.78 rows=299 width=8) (actual time=3.255..31.251 rows=15801 loops=3)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=23953
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.895..1.895 rows=15801 loops=3)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.001..0.001 rows=0 loops=47403)
                                             Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=36) (actual time=0.002..0.005 rows=11 loops=1460)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: (note IS NOT NULL)
                                       Rows Removed by Filter: 2
                           ->  Materialize  (cost=0.00..1.06 rows=3 width=4) (actual time=0.000..0.000 rows=1 loops=15510)
                                 ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=3 width=4) (actual time=0.009..0.010 rows=3 loops=1)
                                       Filter: ((kind IS NOT NULL) AND ((kind)::text <> 'production companies'::text))
                                       Rows Removed by Filter: 1
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=14916)
                           Index Cond: (id = mc.company_id)
                           Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '20th Century Fox%'::text) OR ((name)::text ~~ 'Twentieth Century Fox%'::text)))
                           Rows Removed by Filter: 1
               ->  Seq Scan on link_type lt  (cost=0.00..1.18 rows=18 width=4) (actual time=0.001..0.001 rows=7 loops=6946)
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.001..0.001 rows=1 loops=6946)
               Index Cond: (id = mk.movie_id)
               Filter: (production_year > 1950)
 Planning Time: 6.511 ms
 Execution Time: 223.065 ms
(42 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=6183.65..6183.66 rows=1 width=96) (actual time=199.701..199.701 rows=1 loops=1)
   ->  Nested Loop  (cost=8.32..6183.29 rows=48 width=60) (actual time=3.167..196.611 rows=14899 loops=1)
         ->  Nested Loop  (cost=7.90..6158.94 rows=54 width=45) (actual time=3.160..173.018 rows=14916 loops=1)
               Join Filter: (mc.company_type_id = ct.id)
               Rows Removed by Join Filter: 1782
               ->  Nested Loop  (cost=7.90..6155.09 rows=71 width=49) (actual time=3.151..169.633 rows=15510 loops=1)
                     Join Filter: (ml.movie_id = mc.movie_id)
                     ->  Nested Loop  (cost=7.47..6138.91 rows=28 width=29) (actual time=3.144..161.607 rows=1460 loops=1)
                           Join Filter: (ml.link_type_id = lt.id)
                           Rows Removed by Join Filter: 10576
                           ->  Nested Loop  (cost=7.47..6130.60 rows=28 width=33) (actual time=3.132..160.058 rows=1460 loops=1)
                                 Join Filter: (ml.movie_id = t.id)
                                 ->  Nested Loop  (cost=7.04..6115.09 rows=31 width=12) (actual time=3.109..156.378 rows=1460 loops=1)
                                       ->  Nested Loop  (cost=6.75..6072.14 rows=101 width=4) (actual time=3.102..113.753 rows=47403 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2793.84 rows=3 width=4) (actual time=0.796..19.892 rows=3 loops=1)
                                                   Filter: ((keyword)::text = ANY ('{sequel,revenge,based-on-novel}'::text[]))
                                                   Rows Removed by Filter: 134167
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1089.78 rows=299 width=8) (actual time=3.249..29.737 rows=15801 loops=3)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=23953
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.885..1.885 rows=15801 loops=3)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.001..0.001 rows=0 loops=47403)
                                             Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.002..0.002 rows=1 loops=1460)
                                       Index Cond: (id = mk.movie_id)
                                       Filter: (production_year > 1950)
                           ->  Materialize  (cost=0.00..1.27 rows=18 width=4) (actual time=0.000..0.000 rows=8 loops=1460)
                                 ->  Seq Scan on link_type lt  (cost=0.00..1.18 rows=18 width=4) (actual time=0.006..0.008 rows=16 loops=1)
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=36) (actual time=0.002..0.004 rows=11 loops=1460)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: (note IS NOT NULL)
                           Rows Removed by Filter: 2
               ->  Materialize  (cost=0.00..1.06 rows=3 width=4) (actual time=0.000..0.000 rows=1 loops=15510)
                     ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=3 width=4) (actual time=0.008..0.009 rows=3 loops=1)
                           Filter: ((kind IS NOT NULL) AND ((kind)::text <> 'production companies'::text))
                           Rows Removed by Filter: 1
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.001..0.001 rows=1 loops=14916)
               Index Cond: (id = mc.company_id)
               Filter: ((country_code)::text <> '[pl]'::text)
               Rows Removed by Filter: 0
 Planning Time: 6.725 ms
 Execution Time: 199.872 ms
(43 rows)

SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16845.82..16845.83 rows=1 width=96) (actual time=206.680..206.680 rows=1 loops=1)
   ->  Gather  (cost=1005.35..16845.81 rows=1 width=42) (actual time=13.005..211.970 rows=397 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Nested Loop  (cost=5.34..15845.71 rows=1 width=42) (actual time=15.174..203.873 rows=132 loops=3)
               ->  Nested Loop  (cost=5.20..15844.23 rows=9 width=46) (actual time=15.167..203.643 rows=132 loops=3)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=4.77..15820.25 rows=15 width=54) (actual time=1.066..156.637 rows=1891 loops=3)
                           ->  Nested Loop  (cost=4.35..15801.98 rows=41 width=39) (actual time=1.027..146.957 rows=2203 loops=3)
                                 Join Filter: (mi_idx.movie_id = t.id)
                                 ->  Hash Join  (cost=3.92..15677.77 rows=234 width=18) (actual time=0.186..99.361 rows=8078 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Nested Loop  (cost=2.86..15671.64 rows=938 width=22) (actual time=0.094..96.626 rows=21569 loops=3)
                                             ->  Hash Join  (cost=2.43..15182.64 rows=187 width=10) (actual time=0.056..56.356 rows=5283 loops=3)
                                                   Hash Cond: (mi_idx.info_type_id = it2.id)
                                                   ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..15122.68 rows=21125 width=14) (actual time=0.021..54.355 rows=17543 loops=3)
                                                         Filter: ((info)::text > '8.0'::text)
                                                         Rows Removed by Filter: 442469
                                                   ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.019..0.020 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.015..0.016 rows=1 loops=3)
                                                               Filter: ((info)::text = 'rating'::text)
                                                               Rows Removed by Filter: 112
                                             ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.56 rows=5 width=12) (actual time=0.005..0.007 rows=4 loops=15849)
                                                   Index Cond: (movie_id = mi_idx.movie_id)
                                       ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.018..0.018 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.013..0.014 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.52 rows=1 width=21) (actual time=0.006..0.006 rows=0 loops=24233)
                                       Index Cond: (id = mc.movie_id)
                                       Filter: ((production_year >= 2005) AND (production_year <= 2008))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.004..0.004 rows=1 loops=6610)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.59 rows=1 width=8) (actual time=0.025..0.025 rows=0 loops=5674)
                           Index Cond: (movie_id = mc.movie_id)
                           Filter: ((info)::text = ANY ('{Drama,Horror}'::text[]))
                           Rows Removed by Filter: 28
               ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=397)
                     Index Cond: (id = mi.info_type_id)
                     Filter: ((info)::text = 'genres'::text)
 Planning Time: 6.781 ms
 Execution Time: 212.293 ms
(47 rows)

SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=19208.36..19208.37 rows=1 width=64) (actual time=75.639..75.639 rows=1 loops=1)
   ->  Gather  (cost=1004.41..19208.36 rows=1 width=59) (actual time=73.428..75.684 rows=10 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Nested Loop  (cost=4.41..18208.26 rows=1 width=59) (actual time=70.531..71.260 rows=3 loops=3)
               ->  Nested Loop  (cost=4.27..18205.80 rows=15 width=63) (actual time=70.479..70.876 rows=403 loops=3)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=3.84..18203.79 rows=1 width=29) (actual time=70.467..70.633 rows=3 loops=3)
                           ->  Nested Loop  (cost=3.42..18203.35 rows=1 width=33) (actual time=70.460..70.511 rows=11 loops=3)
                                 ->  Nested Loop  (cost=3.29..18203.03 rows=2 width=37) (actual time=70.451..70.491 rows=11 loops=3)
                                       Join Filter: (t.id = mc.movie_id)
                                       ->  Nested Loop  (cost=2.86..18202.37 rows=1 width=25) (actual time=70.439..70.465 rows=1 loops=3)
                                             ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=4) (actual time=70.368..70.370 rows=3 loops=3)
                                                   Hash Cond: (mi_idx.info_type_id = it2.id)
                                                   ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=8) (actual time=0.016..38.073 rows=460012 loops=3)
                                                   ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.026..0.026 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.021..0.022 rows=1 loops=3)
                                                               Filter: ((info)::text = 'bottom 10 rank'::text)
                                                               Rows Removed by Filter: 112
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..0.58 rows=1 width=21) (actual time=0.028..0.028 rows=0 loops=10)
                                                   Index Cond: (id = mi_idx.movie_id)
                                                   Filter: ((production_year > 2000) AND (((title)::text ~~ 'Birdemic%'::text) OR ((title)::text ~~ '%Movie%'::text)))
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.59 rows=5 width=12) (actual time=0.024..0.034 rows=16 loops=2)
                                             Index Cond: (movie_id = mi_idx.movie_id)
                                 ->  Index Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=33)
                                       Index Cond: (id = mc.company_type_id)
                                       Filter: ((kind IS NOT NULL) AND (((kind)::text = 'production companies'::text) OR ((kind)::text = 'distributors'::text)))
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.011..0.011 rows=0 loops=33)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.48 rows=42 width=50) (actual time=0.007..0.055 rows=121 loops=10)
                           Index Cond: (movie_id = mc.movie_id)
               ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=1210)
                     Index Cond: (id = mi.info_type_id)
                     Filter: ((info)::text = 'budget'::text)
                     Rows Removed by Filter: 1
 Planning Time: 7.175 ms
 Execution Time: 75.917 ms
(41 rows)

SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=17912.37..17912.38 rows=1 width=96) (actual time=683.753..683.753 rows=1 loops=1)
   ->  Gather  (cost=1007.63..17912.35 rows=2 width=42) (actual time=3.121..695.101 rows=4711 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Hash Join  (cost=7.63..16912.15 rows=1 width=42) (actual time=2.051..679.735 rows=1570 loops=3)
               Hash Cond: (mi.info_type_id = it1.id)
               ->  Nested Loop  (cost=5.20..16909.46 rows=98 width=46) (actual time=1.950..679.224 rows=1570 loops=3)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=4.77..16679.52 rows=135 width=54) (actual time=0.348..416.631 rows=14111 loops=3)
                           ->  Hash Join  (cost=4.35..16514.65 rows=370 width=39) (actual time=0.164..342.984 rows=22822 loops=3)
                                 Hash Cond: (mc.company_type_id = ct.id)
                                 ->  Nested Loop  (cost=3.29..16505.58 rows=1482 width=43) (actual time=0.120..335.377 rows=56386 loops=3)
                                       ->  Nested Loop  (cost=2.86..16307.87 rows=296 width=31) (actual time=0.096..247.646 rows=17435 loops=3)
                                             ->  Hash Join  (cost=2.43..15347.68 rows=723 width=10) (actual time=0.052..71.814 rows=40524 loops=3)
                                                   Hash Cond: (mi_idx.info_type_id = it2.id)
                                                   ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..15122.68 rows=81724 width=14) (actual time=0.025..62.196 rows=64280 loops=3)
                                                         Filter: ((info)::text > '7.0'::text)
                                                         Rows Removed by Filter: 395732
                                                   ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=3)
                                                               Filter: ((info)::text = 'rating'::text)
                                                               Rows Removed by Filter: 112
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..1.33 rows=1 width=21) (actual time=0.004..0.004 rows=0 loops=121572)
                                                   Index Cond: (id = mi_idx.movie_id)
                                                   Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.62 rows=5 width=12) (actual time=0.003..0.004 rows=3 loops=52304)
                                             Index Cond: (movie_id = t.id)
                                 ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.012..0.012 rows=1 loops=3)
                                             Filter: ((kind)::text = 'production companies'::text)
                                             Rows Removed by Filter: 3
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.003..0.003 rows=1 loops=68466)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.69 rows=1 width=8) (actual time=0.018..0.018 rows=0 loops=42332)
                           Index Cond: (movie_id = mc.movie_id)
                           Filter: ((info)::text = ANY ('{Drama,Horror,Western,Family}'::text[]))
                           Rows Removed by Filter: 29
               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.027..0.027 rows=1 loops=3)
                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                     ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.016..0.023 rows=1 loops=3)
                           Filter: ((info)::text = 'genres'::text)
                           Rows Removed by Filter: 112
 Planning Time: 6.576 ms
 Execution Time: 696.485 ms
(49 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=20132.55..20132.56 rows=1 width=96) (actual time=1326.983..1326.983 rows=1 loops=1)
   ->  Gather  (cost=20132.32..20132.53 rows=2 width=96) (actual time=1326.963..1334.255 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=19132.32..19132.33 rows=1 width=96) (actual time=1323.736..1323.737 rows=1 loops=3)
               ->  Hash Join  (cost=8.73..19132.25 rows=10 width=65) (actual time=269.710..1316.811 rows=37034 loops=3)
                     Hash Cond: (mi.info_type_id = it2.id)
                     ->  Nested Loop  (cost=6.30..19126.56 rows=1197 width=69) (actual time=269.606..1301.288 rows=172109 loops=3)
                           ->  Nested Loop  (cost=5.87..19055.86 rows=37 width=35) (actual time=269.573..1157.651 rows=5490 loops=3)
                                 ->  Hash Join  (cost=5.45..18649.93 rows=911 width=39) (actual time=268.512..884.579 rows=100870 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Nested Loop  (cost=4.39..18629.17 rows=3643 width=43) (actual time=268.482..854.081 rows=257695 loops=3)
                                             ->  Hash Join  (cost=3.96..18186.75 rows=727 width=31) (actual time=268.431..602.769 rows=69960 loops=3)
                                                   Hash Cond: (t.kind_id = kt.id)
                                                   ->  Nested Loop  (cost=2.86..18164.20 rows=5089 width=35) (actual time=0.087..582.957 rows=153308 loops=3)
                                                         ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=10) (actual time=0.047..110.046 rows=153308 loops=3)
                                                               Hash Cond: (miidx.info_type_id = it.id)
                                                               ->  Parallel Seq Scan on movie_info_idx miidx  (cost=0.00..13685.15 rows=575015 width=14) (actual time=0.019..43.315 rows=460012 loops=3)
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.013..0.013 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'rating'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=25) (actual time=0.003..0.003 rows=1 loops=459925)
                                                               Index Cond: (id = miidx.movie_id)
                                                   ->  Hash  (cost=1.09..1.09 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=3)
                                                               Filter: ((kind)::text = 'movie'::text)
                                                               Rows Removed by Filter: 6
                                             ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.56 rows=5 width=12) (actual time=0.002..0.003 rows=4 loops=209880)
                                                   Index Cond: (movie_id = t.id)
                                       ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.012..0.012 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                 ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=302610)
                                       Index Cond: (id = mc.company_id)
                                       Filter: ((country_code)::text = '[de]'::text)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.49 rows=42 width=50) (actual time=0.005..0.022 rows=31 loops=16470)
                                 Index Cond: (movie_id = t.id)
                     ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.024..0.025 rows=1 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.014..0.020 rows=1 loops=3)
                                 Filter: ((info)::text = 'release dates'::text)
                                 Rows Removed by Filter: 112
 Planning Time: 10.294 ms
 Execution Time: 1334.521 ms
(50 rows)

SET
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=19206.33..19206.34 rows=1 width=96) (actual time=636.789..636.789 rows=1 loops=1)
   ->  Gather  (cost=1004.54..19206.32 rows=1 width=42) (actual time=312.875..643.497 rows=372 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Nested Loop  (cost=4.54..18206.22 rows=1 width=42) (actual time=296.838..633.860 rows=124 loops=3)
               ->  Nested Loop  (cost=4.40..18205.87 rows=2 width=46) (actual time=296.808..633.094 rows=707 loops=3)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=3.97..18203.87 rows=1 width=54) (actual time=296.771..632.134 rows=20 loops=3)
                           ->  Nested Loop  (cost=3.84..18203.70 rows=1 width=58) (actual time=296.745..632.040 rows=54 loops=3)
                                 ->  Nested Loop  (cost=3.42..18203.25 rows=1 width=43) (actual time=289.585..631.244 rows=104 loops=3)
                                       Join Filter: (t.id = mc.movie_id)
                                       ->  Nested Loop  (cost=2.99..18202.60 rows=1 width=31) (actual time=289.540..630.813 rows=30 loops=3)
                                             ->  Nested Loop  (cost=2.86..18202.37 rows=1 width=35) (actual time=2.322..630.594 rows=117 loops=3)
                                                   ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=10) (actual time=0.134..107.398 rows=153308 loops=3)
                                                         Hash Cond: (miidx.info_type_id = it.id)
                                                         ->  Parallel Seq Scan on movie_info_idx miidx  (cost=0.00..13685.15 rows=575015 width=14) (actual time=0.022..41.430 rows=460012 loops=3)
                                                         ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.027..0.027 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.021..0.023 rows=1 loops=3)
                                                                     Filter: ((info)::text = 'rating'::text)
                                                                     Rows Removed by Filter: 112
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.58 rows=1 width=25) (actual time=0.003..0.003 rows=0 loops=459925)
                                                         Index Cond: (id = miidx.movie_id)
                                                         Filter: (((title)::text <> ''::text) AND (((title)::text ~~ '%Champion%'::text) OR ((title)::text ~~ '%Loser%'::text)))
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using kind_type_pkey on kind_type kt  (cost=0.13..0.18 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=352)
                                                   Index Cond: (id = t.kind_id)
                                                   Filter: ((kind)::text = 'movie'::text)
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.59 rows=5 width=12) (actual time=0.010..0.013 rows=3 loops=90)
                                             Index Cond: (movie_id = miidx.movie_id)
                                 ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.007..0.007 rows=1 loops=313)
                                       Index Cond: (id = mc.company_id)
                                       Filter: ((country_code)::text = '[us]'::text)
                                       Rows Removed by Filter: 0
                           ->  Index Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=161)
                                 Index Cond: (id = mc.company_type_id)
                                 Filter: ((kind)::text = 'production companies'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.48 rows=42 width=8) (actual time=0.010..0.041 rows=35 loops=61)
                           Index Cond: (movie_id = mc.movie_id)
               ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=2122)
                     Index Cond: (id = mi.info_type_id)
                     Filter: ((info)::text = 'release dates'::text)
                     Rows Removed by Filter: 1
 Planning Time: 10.693 ms
 Execution Time: 643.802 ms
(47 rows)

SET
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=19206.33..19206.34 rows=1 width=96) (actual time=616.532..616.532 rows=1 loops=1)
   ->  Gather  (cost=1004.54..19206.32 rows=1 width=42) (actual time=616.463..622.693 rows=53 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Nested Loop  (cost=4.54..18206.22 rows=1 width=42) (actual time=515.860..613.667 rows=18 loops=3)
               ->  Nested Loop  (cost=4.40..18205.87 rows=2 width=46) (actual time=515.842..613.578 rows=73 loops=3)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=3.97..18203.87 rows=1 width=54) (actual time=515.827..613.451 rows=5 loops=3)
                           ->  Nested Loop  (cost=3.84..18203.70 rows=1 width=58) (actual time=515.784..613.423 rows=16 loops=3)
                                 ->  Nested Loop  (cost=3.42..18203.25 rows=1 width=43) (actual time=515.772..613.173 rows=32 loops=3)
                                       Join Filter: (t.id = mc.movie_id)
                                       ->  Nested Loop  (cost=2.99..18202.60 rows=1 width=31) (actual time=515.750..613.101 rows=10 loops=3)
                                             ->  Nested Loop  (cost=2.86..18202.37 rows=1 width=35) (actual time=38.530..613.055 rows=22 loops=3)
                                                   ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=10) (actual time=0.128..106.812 rows=153308 loops=3)
                                                         Hash Cond: (miidx.info_type_id = it.id)
                                                         ->  Parallel Seq Scan on movie_info_idx miidx  (cost=0.00..13685.15 rows=575015 width=14) (actual time=0.020..41.219 rows=460012 loops=3)
                                                         ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.026..0.026 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.021..0.022 rows=1 loops=3)
                                                                     Filter: ((info)::text = 'rating'::text)
                                                                     Rows Removed by Filter: 112
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.58 rows=1 width=25) (actual time=0.003..0.003 rows=0 loops=459925)
                                                         Index Cond: (id = miidx.movie_id)
                                                         Filter: (((title)::text <> ''::text) AND (((title)::text ~~ 'Champion%'::text) OR ((title)::text ~~ 'Loser%'::text)))
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using kind_type_pkey on kind_type kt  (cost=0.13..0.18 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=66)
                                                   Index Cond: (id = t.kind_id)
                                                   Filter: ((kind)::text = 'movie'::text)
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.59 rows=5 width=12) (actual time=0.005..0.006 rows=3 loops=29)
                                             Index Cond: (movie_id = miidx.movie_id)
                                 ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.008..0.008 rows=0 loops=95)
                                       Index Cond: (id = mc.company_id)
                                       Filter: ((country_code)::text = '[us]'::text)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=47)
                                 Index Cond: (id = mc.company_type_id)
                                 Filter: ((kind)::text = 'production companies'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.48 rows=42 width=8) (actual time=0.007..0.024 rows=16 loops=14)
                           Index Cond: (movie_id = mc.movie_id)
               ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=218)
                     Index Cond: (id = mi.info_type_id)
                     Filter: ((info)::text = 'release dates'::text)
                     Rows Removed by Filter: 1
 Planning Time: 10.718 ms
 Execution Time: 622.933 ms
(47 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=20720.69..20720.70 rows=1 width=96) (actual time=2044.556..2044.556 rows=1 loops=1)
   ->  Gather  (cost=20720.46..20720.67 rows=2 width=96) (actual time=2044.533..2056.289 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=19720.46..19720.47 rows=1 width=96) (actual time=2041.606..2041.606 rows=1 loops=3)
               ->  Hash Join  (cost=8.73..19719.76 rows=94 width=42) (actual time=268.832..2001.171 rows=223463 loops=3)
                     Hash Cond: (mi.info_type_id = it2.id)
                     ->  Nested Loop  (cost=6.30..19688.31 rows=10660 width=46) (actual time=268.713..1886.598 rows=1438861 loops=3)
                           ->  Nested Loop  (cost=5.87..19055.86 rows=331 width=54) (actual time=268.676..1175.210 rows=29098 loops=3)
                                 ->  Hash Join  (cost=5.45..18649.93 rows=911 width=39) (actual time=268.614..885.498 rows=100870 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Nested Loop  (cost=4.39..18629.17 rows=3643 width=43) (actual time=268.586..853.841 rows=257695 loops=3)
                                             ->  Hash Join  (cost=3.96..18186.75 rows=727 width=31) (actual time=268.535..602.899 rows=69960 loops=3)
                                                   Hash Cond: (t.kind_id = kt.id)
                                                   ->  Nested Loop  (cost=2.86..18164.20 rows=5089 width=35) (actual time=0.092..582.623 rows=153308 loops=3)
                                                         ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=10) (actual time=0.050..111.724 rows=153308 loops=3)
                                                               Hash Cond: (miidx.info_type_id = it.id)
                                                               ->  Parallel Seq Scan on movie_info_idx miidx  (cost=0.00..13685.15 rows=575015 width=14) (actual time=0.020..44.209 rows=460012 loops=3)
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'rating'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=25) (actual time=0.003..0.003 rows=1 loops=459925)
                                                               Index Cond: (id = miidx.movie_id)
                                                   ->  Hash  (cost=1.09..1.09 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=3)
                                                               Filter: ((kind)::text = 'movie'::text)
                                                               Rows Removed by Filter: 6
                                             ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.56 rows=5 width=12) (actual time=0.002..0.003 rows=4 loops=209880)
                                                   Index Cond: (movie_id = t.id)
                                       ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.012..0.012 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                 ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=302610)
                                       Index Cond: (id = mc.company_id)
                                       Filter: ((country_code)::text = '[us]'::text)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.49 rows=42 width=8) (actual time=0.004..0.019 rows=49 loops=87293)
                                 Index Cond: (movie_id = t.id)
                     ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.027..0.027 rows=1 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.017..0.023 rows=1 loops=3)
                                 Filter: ((info)::text = 'release dates'::text)
                                 Rows Removed by Filter: 112
 Planning Time: 10.455 ms
 Execution Time: 2056.542 ms
(50 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7380.25..7380.26 rows=1 width=64) (actual time=427.560..427.561 rows=1 loops=1)
   ->  Nested Loop  (cost=8.04..7380.24 rows=1 width=23) (actual time=16.695..427.322 rows=761 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         Rows Removed by Join Filter: 117
         ->  Nested Loop  (cost=8.04..7377.82 rows=1 width=27) (actual time=16.689..423.974 rows=878 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=7.61..7375.92 rows=1 width=35) (actual time=16.144..335.282 rows=1147 loops=1)
                     Join Filter: (mi_idx.info_type_id = it2.id)
                     Rows Removed by Join Filter: 2233
                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.012..0.014 rows=1 loops=1)
                           Filter: ((info)::text = 'rating'::text)
                           Rows Removed by Filter: 112
                     ->  Nested Loop  (cost=7.61..7373.39 rows=9 width=39) (actual time=15.735..334.886 rows=3380 loops=1)
                           Join Filter: (t.id = mi_idx.movie_id)
                           ->  Nested Loop  (cost=7.18..7371.79 rows=3 width=25) (actual time=15.704..321.164 rows=1966 loops=1)
                                 Join Filter: (t.kind_id = kt.id)
                                 Rows Removed by Join Filter: 616
                                 ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.012..0.014 rows=1 loops=1)
                                       Filter: ((kind)::text = 'movie'::text)
                                       Rows Removed by Filter: 6
                                 ->  Nested Loop  (cost=7.18..7370.44 rows=21 width=29) (actual time=4.836..320.745 rows=2582 loops=1)
                                       ->  Nested Loop  (cost=6.75..7304.56 rows=135 width=4) (actual time=4.563..145.721 rows=37091 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.198..21.148 rows=3 loops=1)
                                                   Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                   Rows Removed by Filter: 134167
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1082.76 rows=299 width=8) (actual time=3.398..40.078 rows=12364 loops=3)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=26312
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.866..1.866 rows=12364 loops=3)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.005..0.005 rows=0 loops=37091)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: (production_year > 2010)
                                             Rows Removed by Filter: 1
                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=14) (actual time=0.006..0.007 rows=2 loops=1966)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((info)::text < '8.5'::text)
                                 Rows Removed by Filter: 0
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.066..0.077 rows=1 loops=1147)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,USA,American}'::text[]))
                     Rows Removed by Filter: 69
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=878)
               Filter: ((info)::text = 'countries'::text)
               Rows Removed by Filter: 21
 Planning Time: 6.610 ms
 Execution Time: 427.724 ms
(47 rows)

SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4867.25..4867.26 rows=1 width=64) (actual time=187.920..187.920 rows=1 loops=1)
   ->  Nested Loop  (cost=8.04..4867.24 rows=1 width=23) (actual time=126.011..187.909 rows=1 loops=1)
         Join Filter: (t.kind_id = kt.id)
         Rows Removed by Join Filter: 1
         ->  Nested Loop  (cost=8.04..4866.14 rows=1 width=27) (actual time=8.411..187.890 rows=2 loops=1)
               Join Filter: (mi_idx.info_type_id = it2.id)
               Rows Removed by Join Filter: 1
               ->  Nested Loop  (cost=8.04..4863.72 rows=1 width=31) (actual time=8.390..187.859 rows=3 loops=1)
                     Join Filter: (t.id = mi_idx.movie_id)
                     ->  Nested Loop  (cost=7.61..4863.21 rows=1 width=33) (actual time=8.369..187.768 rows=8 loops=1)
                           Join Filter: (mi.info_type_id = it1.id)
                           ->  Nested Loop  (cost=7.61..4860.78 rows=1 width=37) (actual time=8.363..187.733 rows=8 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=7.18..4858.88 rows=1 width=29) (actual time=8.219..186.972 rows=15 loops=1)
                                       ->  Nested Loop  (cost=6.75..4825.68 rows=67 width=4) (actual time=6.261..84.418 rows=19528 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=2 width=4) (actual time=1.155..16.456 rows=1 loops=1)
                                                   Filter: ((keyword)::text = ANY ('{murder,murder-in-title}'::text[]))
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1096.79 rows=299 width=8) (actual time=5.103..65.775 rows=19528 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=12389
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=2.923..2.923 rows=19528 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.50 rows=1 width=25) (actual time=0.005..0.005 rows=0 loops=19528)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: ((production_year > 2010) AND (((title)::text ~~ '%murder%'::text) OR ((title)::text ~~ '%Murder%'::text) OR ((title)::text ~~ '%Mord%'::text)))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.047..0.050 rows=1 loops=15)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,USA,American}'::text[]))
                                       Rows Removed by Filter: 12
                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=8)
                                 Filter: ((info)::text = 'countries'::text)
                                 Rows Removed by Filter: 7
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=14) (actual time=0.010..0.011 rows=0 loops=8)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((info)::text > '6.0'::text)
                           Rows Removed by Filter: 1
               ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=3)
                     Filter: ((info)::text = 'rating'::text)
                     Rows Removed by Filter: 104
         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=2)
               Filter: ((kind)::text = 'movie'::text)
               Rows Removed by Filter: 3
 Planning Time: 6.541 ms
 Execution Time: 188.145 ms
(46 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7388.39..7388.40 rows=1 width=64) (actual time=770.584..770.584 rows=1 loops=1)
   ->  Nested Loop  (cost=8.04..7388.39 rows=1 width=23) (actual time=4.780..769.639 rows=4115 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         Rows Removed by Join Filter: 594
         ->  Nested Loop  (cost=8.04..7385.96 rows=1 width=27) (actual time=4.775..752.881 rows=4709 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=7.61..7384.06 rows=1 width=35) (actual time=4.702..362.383 rows=5949 loops=1)
                     Join Filter: (mi_idx.info_type_id = it2.id)
                     Rows Removed by Join Filter: 11839
                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=1)
                           Filter: ((info)::text = 'rating'::text)
                           Rows Removed by Filter: 112
                     ->  Nested Loop  (cost=7.61..7381.10 rows=44 width=39) (actual time=4.687..360.524 rows=17788 loops=1)
                           Join Filter: (t.id = mi_idx.movie_id)
                           ->  Nested Loop  (cost=7.18..7373.07 rows=15 width=25) (actual time=4.665..313.114 rows=8073 loops=1)
                                 Join Filter: (t.kind_id = kt.id)
                                 Rows Removed by Join Filter: 4332
                                 ->  Nested Loop  (cost=7.18..7370.44 rows=54 width=29) (actual time=4.598..309.763 rows=9739 loops=1)
                                       ->  Nested Loop  (cost=6.75..7304.56 rows=135 width=4) (actual time=4.570..138.265 rows=37091 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.189..21.555 rows=3 loops=1)
                                                   Filter: ((keyword IS NOT NULL) AND ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[])))
                                                   Rows Removed by Filter: 134167
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1082.76 rows=299 width=8) (actual time=3.391..37.440 rows=12364 loops=3)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=26312
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.859..1.859 rows=12364 loops=3)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.004..0.004 rows=0 loops=37091)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: (production_year > 2005)
                                             Rows Removed by Filter: 1
                                 ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=9739)
                                       ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.009..0.011 rows=2 loops=1)
                                             Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                             Rows Removed by Filter: 5
                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=14) (actual time=0.005..0.005 rows=2 loops=8073)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((info)::text < '8.5'::text)
                                 Rows Removed by Filter: 0
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.056..0.065 rows=1 loops=5949)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                     Rows Removed by Filter: 71
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=4709)
               Filter: ((info)::text = 'countries'::text)
               Rows Removed by Filter: 20
 Planning Time: 6.422 ms
 Execution Time: 770.758 ms
(48 rows)

SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=51520.30..51520.31 rows=1 width=64) (actual time=330.864..330.864 rows=1 loops=1)
   ->  Gather  (cost=51520.08..51520.29 rows=2 width=64) (actual time=330.288..335.115 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=50520.08..50520.09 rows=1 width=64) (actual time=327.531..327.531 rows=1 loops=3)
               ->  Nested Loop  (cost=5354.18..50520.04 rows=7 width=59) (actual time=81.991..327.496 rows=109 loops=3)
                     ->  Nested Loop  (cost=5353.76..50516.97 rows=7 width=63) (actual time=81.957..326.913 rows=109 loops=3)
                           ->  Nested Loop  (cost=5353.33..50515.14 rows=1 width=75) (actual time=37.842..326.667 rows=19 loops=3)
                                 ->  Nested Loop  (cost=5353.19..50514.85 rows=1 width=79) (actual time=37.810..326.590 rows=19 loops=3)
                                       ->  Nested Loop  (cost=5353.06..50514.70 rows=1 width=83) (actual time=37.779..326.519 rows=19 loops=3)
                                             ->  Nested Loop  (cost=5352.62..48271.71 rows=1133 width=33) (actual time=25.318..240.143 rows=1711 loops=3)
                                                   ->  Nested Loop  (cost=5352.19..46344.74 rows=2083 width=12) (actual time=25.270..215.899 rows=4566 loops=3)
                                                         ->  Parallel Hash Join  (cost=5351.77..40470.46 rows=3000 width=8) (actual time=24.806..171.177 rows=14612 loops=3)
                                                               Hash Cond: (mc.company_id = cn.id)
                                                               ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..35097.06 rows=8243 width=12) (actual time=0.025..140.239 rows=20555 loops=3)
                                                                     Filter: (((note)::text ~~ '%(200%)%'::text) AND ((note)::text ~~ '%(worldwide)%'::text))
                                                                     Rows Removed by Filter: 849155
                                                               ->  Parallel Hash  (cost=4722.92..4722.92 rows=50308 width=4) (actual time=24.223..24.223 rows=28281 loops=3)
                                                                     Buckets: 131072  Batches: 1  Memory Usage: 4416kB
                                                                     ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=50308 width=4) (actual time=0.022..17.198 rows=28281 loops=3)
                                                                           Filter: ((country_code)::text = '[us]'::text)
                                                                           Rows Removed by Filter: 50051
                                                         ->  Index Only Scan using movie_id_aka_title on aka_title at  (cost=0.42..1.93 rows=3 width=4) (actual time=0.002..0.003 rows=0 loops=43837)
                                                               Index Cond: (movie_id = mc.movie_id)
                                                               Heap Fetches: 13699
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.93 rows=1 width=21) (actual time=0.005..0.005 rows=0 loops=13699)
                                                         Index Cond: (id = at.movie_id)
                                                         Filter: (production_year > 2000)
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.97 rows=1 width=50) (actual time=0.050..0.050 rows=0 loops=5134)
                                                   Index Cond: (movie_id = t.id)
                                                   Filter: (((note)::text ~~ '%internet%'::text) AND ((info)::text ~~ 'USA:% 200%'::text))
                                                   Rows Removed by Filter: 72
                                       ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=57)
                                             Index Cond: (id = mc.company_type_id)
                                             Heap Fetches: 57
                                 ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.21 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=57)
                                       Index Cond: (id = mi.info_type_id)
                                       Filter: ((info)::text = 'release dates'::text)
                           ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.36 rows=47 width=8) (actual time=0.010..0.012 rows=6 loops=57)
                                 Index Cond: (movie_id = t.id)
                     ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=328)
                           Index Cond: (id = mk.keyword_id)
                           Heap Fetches: 328
 Planning Time: 14.818 ms
 Execution Time: 335.342 ms
(46 rows)

SET
                                                                                                      QUERY PLAN                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=6425.67..6425.68 rows=1 width=64) (actual time=32.289..32.289 rows=1 loops=1)
   ->  Gather  (cost=6425.55..6425.66 rows=1 width=64) (actual time=32.218..34.109 rows=2 loops=1)
         Workers Planned: 1
         Workers Launched: 1
         ->  Partial Aggregate  (cost=5425.55..5425.56 rows=1 width=64) (actual time=29.993..29.993 rows=1 loops=2)
               ->  Nested Loop  (cost=2.84..5425.53 rows=5 width=59) (actual time=22.044..29.983 rows=18 loops=2)
                     ->  Nested Loop  (cost=2.42..5423.34 rows=5 width=63) (actual time=22.026..29.772 rows=18 loops=2)
                           ->  Nested Loop  (cost=1.99..5421.40 rows=1 width=75) (actual time=19.253..29.726 rows=2 loops=2)
                                 ->  Nested Loop  (cost=1.85..5421.11 rows=1 width=79) (actual time=19.244..29.714 rows=2 loops=2)
                                       ->  Nested Loop  (cost=1.41..5418.58 rows=1 width=29) (actual time=17.245..28.701 rows=13 loops=2)
                                             ->  Nested Loop  (cost=0.98..5417.65 rows=1 width=8) (actual time=17.217..28.429 rows=14 loops=2)
                                                   ->  Nested Loop  (cost=0.85..5417.49 rows=1 width=12) (actual time=17.201..28.393 rows=14 loops=2)
                                                         ->  Nested Loop  (cost=0.43..5415.54 rows=1 width=8) (actual time=16.817..27.444 rows=139 loops=2)
                                                               ->  Parallel Seq Scan on company_name cn  (cost=0.00..5068.50 rows=1 width=4) (actual time=16.772..23.275 rows=0 loops=2)
                                                                     Filter: (((country_code)::text = '[us]'::text) AND ((name)::text = 'YouTube'::text))
                                                                     Rows Removed by Filter: 117498
                                                               ->  Index Scan using company_id_movie_companies on movie_companies mc  (cost=0.43..347.02 rows=1 width=12) (actual time=0.086..8.300 rows=278 loops=1)
                                                                     Index Cond: (company_id = cn.id)
                                                                     Filter: (((note)::text ~~ '%(200%)%'::text) AND ((note)::text ~~ '%(worldwide)%'::text))
                                                                     Rows Removed by Filter: 1180
                                                         ->  Index Only Scan using movie_id_aka_title on aka_title at  (cost=0.42..1.93 rows=3 width=4) (actual time=0.006..0.007 rows=0 loops=278)
                                                               Index Cond: (movie_id = mc.movie_id)
                                                               Heap Fetches: 27
                                                   ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=27)
                                                         Index Cond: (id = mc.company_type_id)
                                                         Heap Fetches: 27
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..0.93 rows=1 width=21) (actual time=0.020..0.020 rows=1 loops=27)
                                                   Index Cond: (id = at.movie_id)
                                                   Filter: ((production_year >= 2005) AND (production_year <= 2010))
                                                   Rows Removed by Filter: 0
                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.53 rows=1 width=50) (actual time=0.074..0.077 rows=0 loops=26)
                                             Index Cond: (movie_id = t.id)
                                             Filter: (((note)::text ~~ '%internet%'::text) AND ((info)::text ~~ 'USA:% 200%'::text))
                                             Rows Removed by Filter: 19
                                 ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.21 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=3)
                                       Index Cond: (id = mi.info_type_id)
                                       Filter: ((info)::text = 'release dates'::text)
                           ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.46 rows=47 width=8) (actual time=0.026..0.028 rows=12 loops=3)
                                 Index Cond: (movie_id = t.id)
                     ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.011..0.011 rows=1 loops=37)
                           Index Cond: (id = mk.keyword_id)
                           Heap Fetches: 37
 Planning Time: 15.389 ms
 Execution Time: 34.329 ms
(44 rows)

SET
                                                                                                          QUERY PLAN                                                                                                          
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=271194.30..271194.31 rows=1 width=64) (actual time=598.868..598.868 rows=1 loops=1)
   ->  Gather  (cost=271194.08..271194.29 rows=2 width=64) (actual time=598.743..602.947 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=270194.08..270194.09 rows=1 width=64) (actual time=595.857..595.857 rows=1 loops=3)
               ->  Nested Loop  (cost=5.11..270193.85 rows=46 width=59) (actual time=154.494..595.718 rows=757 loops=3)
                     Join Filter: (t.id = at.movie_id)
                     ->  Nested Loop  (cost=4.69..270184.51 rows=18 width=75) (actual time=147.162..590.966 rows=2655 loops=3)
                           ->  Nested Loop  (cost=4.27..270176.61 rows=18 width=79) (actual time=147.130..582.725 rows=2655 loops=3)
                                 ->  Nested Loop  (cost=3.84..270174.80 rows=1 width=71) (actual time=146.949..576.120 rows=882 loops=3)
                                       ->  Nested Loop  (cost=3.71..270174.65 rows=1 width=75) (actual time=146.923..574.847 rows=882 loops=3)
                                             ->  Nested Loop  (cost=3.29..270172.87 rows=4 width=79) (actual time=146.776..568.704 rows=961 loops=3)
                                                   ->  Nested Loop  (cost=2.86..270172.24 rows=1 width=67) (actual time=146.732..559.309 rows=594 loops=3)
                                                         ->  Hash Join  (cost=2.43..270163.87 rows=1 width=46) (actual time=146.688..550.704 rows=594 loops=3)
                                                               Hash Cond: (mi.info_type_id = it1.id)
                                                               ->  Parallel Seq Scan on movie_info mi  (cost=0.00..270161.12 rows=119 width=50) (actual time=146.539..550.388 rows=594 loops=3)
                                                                     Filter: ((info IS NOT NULL) AND ((note)::text ~~ '%internet%'::text) AND (((info)::text ~~ 'USA:% 199%'::text) OR ((info)::text ~~ 'USA:% 200%'::text)))
                                                                     Rows Removed by Filter: 4944646
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.044..0.045 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.021..0.028 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'release dates'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..8.37 rows=1 width=21) (actual time=0.014..0.014 rows=1 loops=1783)
                                                               Index Cond: (id = mi.movie_id)
                                                               Filter: (production_year > 1990)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.58 rows=5 width=12) (actual time=0.012..0.015 rows=2 loops=1782)
                                                         Index Cond: (movie_id = t.id)
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=2884)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((country_code)::text = '[us]'::text)
                                                   Rows Removed by Filter: 0
                                       ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=2647)
                                             Index Cond: (id = mc.company_type_id)
                                             Heap Fetches: 2647
                                 ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.34 rows=47 width=8) (actual time=0.006..0.007 rows=3 loops=2647)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=7964)
                                 Index Cond: (id = mk.keyword_id)
                                 Heap Fetches: 7964
                     ->  Index Only Scan using movie_id_aka_title on aka_title at  (cost=0.42..0.48 rows=3 width=4) (actual time=0.001..0.002 rows=0 loops=7964)
                           Index Cond: (movie_id = mk.movie_id)
                           Heap Fetches: 2271
 Planning Time: 15.372 ms
 Execution Time: 603.203 ms
(46 rows)

SET
                                                                                               QUERY PLAN                                                                                               
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=241312.72..241312.73 rows=1 width=64) (actual time=669.143..669.143 rows=1 loops=1)
   ->  Gather  (cost=241312.50..241312.71 rows=2 width=64) (actual time=669.020..675.053 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=240312.50..240312.51 rows=1 width=64) (actual time=666.288..666.288 rows=1 loops=3)
               ->  Nested Loop  (cost=6.07..240304.29 rows=1642 width=38) (actual time=141.077..665.689 rows=3782 loops=3)
                     Join Filter: (t.id = at.movie_id)
                     ->  Nested Loop  (cost=5.65..239970.15 rows=644 width=33) (actual time=135.999..651.313 rows=8521 loops=3)
                           ->  Nested Loop  (cost=5.23..239687.65 rows=644 width=37) (actual time=135.963..630.586 rows=8521 loops=3)
                                 ->  Hash Join  (cost=4.80..239595.35 rows=51 width=29) (actual time=135.747..612.118 rows=3286 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Nested Loop  (cost=3.71..239593.98 rows=51 width=33) (actual time=135.665..611.213 rows=3286 loops=3)
                                             ->  Nested Loop  (cost=3.29..239532.04 rows=139 width=37) (actual time=135.643..590.335 rows=4792 loops=3)
                                                   ->  Nested Loop  (cost=2.86..239514.48 rows=28 width=25) (actual time=135.529..555.819 rows=3554 loops=3)
                                                         ->  Hash Join  (cost=2.43..239268.23 rows=40 width=4) (actual time=135.482..520.689 rows=3560 loops=3)
                                                               Hash Cond: (mi.info_type_id = it1.id)
                                                               ->  Parallel Seq Scan on movie_info mi  (cost=0.00..239253.38 rows=4567 width=8) (actual time=22.699..519.761 rows=3603 loops=3)
                                                                     Filter: ((note)::text ~~ '%internet%'::text)
                                                                     Rows Removed by Filter: 4941637
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.029..0.030 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.018..0.024 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'release dates'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..6.16 rows=1 width=21) (actual time=0.009..0.009 rows=1 loops=10679)
                                                               Index Cond: (id = mi.movie_id)
                                                               Filter: (production_year > 1990)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.58 rows=5 width=12) (actual time=0.008..0.009 rows=1 loops=10662)
                                                         Index Cond: (movie_id = t.id)
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=14377)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((country_code)::text = '[us]'::text)
                                                   Rows Removed by Filter: 0
                                       ->  Hash  (cost=1.04..1.04 rows=4 width=4) (actual time=0.020..0.020 rows=4 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.012..0.013 rows=4 loops=3)
                                 ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.34 rows=47 width=8) (actual time=0.005..0.005 rows=3 loops=9857)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=25564)
                                 Index Cond: (id = mk.keyword_id)
                                 Heap Fetches: 25564
                     ->  Index Scan using movie_id_aka_title on aka_title at  (cost=0.42..0.48 rows=3 width=25) (actual time=0.001..0.001 rows=0 loops=25564)
                           Index Cond: (movie_id = mk.movie_id)
 Planning Time: 15.191 ms
 Execution Time: 675.306 ms
(46 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3786.91..3786.92 rows=1 width=64) (actual time=270.717..270.718 rows=1 loops=1)
   ->  Nested Loop  (cost=9.45..3786.52 rows=79 width=33) (actual time=17.021..270.637 rows=385 loops=1)
         Join Filter: (n.id = an.person_id)
         ->  Nested Loop  (cost=9.02..3770.95 rows=32 width=25) (actual time=16.991..268.368 rows=323 loops=1)
               ->  Nested Loop  (cost=8.59..3756.39 rows=32 width=21) (actual time=16.960..265.594 rows=323 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=8.03..3752.42 rows=2 width=29) (actual time=16.935..264.183 rows=25 loops=1)
                           ->  Nested Loop  (cost=7.61..3750.19 rows=5 width=33) (actual time=16.738..263.799 rows=54 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.18..3749.59 rows=1 width=25) (actual time=13.932..263.123 rows=146 loops=1)
                                       ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.693..76.651 rows=41840 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.643..11.806 rows=1 loops=1)
                                                   Filter: ((keyword)::text = 'character-name-in-title'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.046..60.493 rows=41840 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=11541
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=3.985..3.986 rows=41840 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.004..0.004 rows=0 loops=41840)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: ((episode_nr >= 50) AND (episode_nr < 100))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.004..0.004 rows=0 loops=146)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.007..0.007 rows=0 loops=54)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.014..0.053 rows=13 loops=25)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=323)
                     Index Cond: (id = ci.person_id)
                     Heap Fetches: 323
         ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.46 rows=2 width=20) (actual time=0.006..0.007 rows=1 loops=323)
               Index Cond: (person_id = ci.person_id)
 Planning Time: 8.378 ms
 Execution Time: 270.971 ms
(38 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=5116.99..5117.00 rows=1 width=64) (actual time=21496.443..21496.443 rows=1 loops=1)
   ->  Nested Loop  (cost=9.45..5102.20 rows=2957 width=33) (actual time=7.229..20945.788 rows=3710592 loops=1)
         Join Filter: (n.id = an.person_id)
         ->  Nested Loop  (cost=9.02..4515.45 rows=1206 width=25) (actual time=7.199..13389.559 rows=2832555 loops=1)
               ->  Nested Loop  (cost=8.59..3966.84 rows=1206 width=21) (actual time=7.168..4725.432 rows=2832555 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=8.03..3845.67 rows=61 width=29) (actual time=6.781..1129.834 rows=68316 loops=1)
                           ->  Nested Loop  (cost=7.61..3769.92 rows=170 width=33) (actual time=6.727..529.380 rows=148552 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.18..3749.42 rows=34 width=25) (actual time=6.677..309.705 rows=41840 loops=1)
                                       ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.658..85.368 rows=41840 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.666..11.818 rows=1 loops=1)
                                                   Filter: ((keyword)::text = 'character-name-in-title'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=5.989..66.139 rows=41840 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=11541
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=3.927..3.927 rows=41840 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.005..0.005 rows=1 loops=41840)
                                             Index Cond: (id = mk.movie_id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.003..0.004 rows=4 loops=41840)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=148552)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.004..0.046 rows=41 loops=68316)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=2832555)
                     Index Cond: (id = ci.person_id)
                     Heap Fetches: 2832555
         ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.46 rows=2 width=20) (actual time=0.002..0.002 rows=1 loops=2832555)
               Index Cond: (person_id = ci.person_id)
 Planning Time: 8.290 ms
 Execution Time: 21496.725 ms
(36 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4258.35..4258.36 rows=1 width=64) (actual time=1851.933..1851.933 rows=1 loops=1)
   ->  Nested Loop  (cost=9.45..4252.86 rows=1097 width=33) (actual time=7.270..1803.029 rows=319932 loops=1)
         Join Filter: (n.id = an.person_id)
         ->  Nested Loop  (cost=9.02..4034.90 rows=448 width=25) (actual time=7.237..1204.790 rows=221609 loops=1)
               ->  Nested Loop  (cost=8.59..3831.10 rows=448 width=21) (actual time=7.206..563.514 rows=221609 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=8.03..3785.41 rows=23 width=29) (actual time=7.179..279.074 rows=8538 loops=1)
                           ->  Nested Loop  (cost=7.61..3757.34 rows=63 width=33) (actual time=6.808..249.777 rows=11406 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.18..3749.50 rows=13 width=25) (actual time=6.725..224.428 rows=6926 loops=1)
                                       ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.705..69.475 rows=41840 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.664..11.781 rows=1 loops=1)
                                                   Filter: ((keyword)::text = 'character-name-in-title'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.038..52.866 rows=41840 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=11541
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=3.987..3.987 rows=41840 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.003..0.003 rows=0 loops=41840)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: (episode_nr < 100)
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.002..0.003 rows=2 loops=6926)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=11406)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.004..0.029 rows=26 loops=8538)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=221609)
                     Index Cond: (id = ci.person_id)
                     Heap Fetches: 221609
         ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.46 rows=2 width=20) (actual time=0.002..0.002 rows=1 loops=221609)
               Index Cond: (person_id = ci.person_id)
 Planning Time: 8.345 ms
 Execution Time: 1852.190 ms
(38 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4117.25..4117.26 rows=1 width=64) (actual time=1487.578..1487.578 rows=1 loops=1)
   ->  Nested Loop  (cost=9.45..4113.26 rows=798 width=33) (actual time=7.298..1449.863 rows=249455 loops=1)
         Join Filter: (n.id = an.person_id)
         ->  Nested Loop  (cost=9.02..3955.14 rows=325 width=25) (actual time=7.268..983.558 rows=169273 loops=1)
               ->  Nested Loop  (cost=8.59..3807.29 rows=325 width=21) (actual time=7.235..489.175 rows=169273 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=8.03..3775.51 rows=16 width=29) (actual time=7.208..267.052 rows=6766 loops=1)
                           ->  Nested Loop  (cost=7.61..3755.01 rows=46 width=33) (actual time=6.848..244.194 rows=8661 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.18..3749.59 rows=9 width=25) (actual time=6.762..223.975 rows=5385 loops=1)
                                       ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.741..69.048 rows=41840 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.663..11.731 rows=1 loops=1)
                                                   Filter: ((keyword)::text = 'character-name-in-title'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.075..52.729 rows=41840 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=11541
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=3.996..3.997 rows=41840 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.003..0.003 rows=0 loops=41840)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: ((episode_nr >= 5) AND (episode_nr < 100))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.002..0.003 rows=2 loops=5385)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=8661)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.004..0.029 rows=25 loops=6766)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=169273)
                     Index Cond: (id = ci.person_id)
                     Heap Fetches: 169273
         ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.46 rows=2 width=20) (actual time=0.002..0.002 rows=1 loops=169273)
               Index Cond: (person_id = ci.person_id)
 Planning Time: 8.432 ms
 Execution Time: 1487.891 ms
(38 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4518.95..4518.96 rows=1 width=64) (actual time=12860.879..12860.879 rows=1 loops=1)
   ->  Nested Loop  (cost=9.02..4518.46 rows=97 width=15) (actual time=7.277..12826.497 rows=258289 loops=1)
         ->  Nested Loop  (cost=8.59..3966.84 rows=1206 width=4) (actual time=7.211..4510.401 rows=2832555 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=8.03..3845.67 rows=61 width=12) (actual time=6.817..1062.687 rows=68316 loops=1)
                     ->  Nested Loop  (cost=7.61..3769.92 rows=170 width=16) (actual time=6.754..505.432 rows=148552 loops=1)
                           Join Filter: (t.id = mc.movie_id)
                           ->  Nested Loop  (cost=7.18..3749.42 rows=34 width=8) (actual time=6.697..295.989 rows=41840 loops=1)
                                 ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.679..82.733 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.661..11.689 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.013..64.170 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=3.953..3.953 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=41840)
                                       Index Cond: (id = mk.movie_id)
                                       Heap Fetches: 41840
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.003..0.004 rows=4 loops=41840)
                                 Index Cond: (movie_id = mk.movie_id)
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=148552)
                           Index Cond: (id = mc.company_id)
                           Filter: ((country_code)::text = '[us]'::text)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.004..0.044 rows=41 loops=68316)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.003..0.003 rows=0 loops=2832555)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ 'B%'::text)
               Rows Removed by Filter: 1
 Planning Time: 5.299 ms
 Execution Time: 12861.116 ms
(34 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4395.31..4395.32 rows=1 width=64) (actual time=9170.596..9170.596 rows=1 loops=1)
   ->  Nested Loop  (cost=9.02..4395.14 rows=33 width=15) (actual time=13.516..9163.376 rows=52306 loops=1)
         ->  Nested Loop  (cost=8.60..4380.52 rows=33 width=19) (actual time=13.501..8977.097 rows=52306 loops=1)
               ->  Nested Loop  (cost=8.17..4373.10 rows=13 width=27) (actual time=13.475..8918.416 rows=6642 loops=1)
                     ->  Nested Loop  (cost=7.74..4367.22 rows=13 width=23) (actual time=13.454..8876.898 rows=6642 loops=1)
                           ->  Nested Loop  (cost=7.31..3797.31 rows=1246 width=12) (actual time=6.778..3111.737 rows=1038393 loops=1)
                                 ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.752..79.561 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.666..11.695 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.083..60.452 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=4.023..4.023 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.006..0.069 rows=25 loops=41840)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.005..0.005 rows=0 loops=1038393)
                                 Index Cond: (id = ci.person_id)
                                 Filter: ((name)::text ~~ 'Z%'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.45 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=6642)
                           Index Cond: (id = ci.movie_id)
                           Heap Fetches: 6642
               ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.52 rows=5 width=8) (actual time=0.005..0.007 rows=8 loops=6642)
                     Index Cond: (movie_id = ci.movie_id)
         ->  Index Only Scan using company_name_pkey on company_name cn  (cost=0.42..0.44 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=52306)
               Index Cond: (id = mc.company_id)
               Heap Fetches: 52306
 Planning Time: 5.243 ms
 Execution Time: 9170.817 ms
(31 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4368.70..4368.71 rows=1 width=64) (actual time=8919.672..8919.672 rows=1 loops=1)
   ->  Nested Loop  (cost=9.02..4368.69 rows=1 width=15) (actual time=95.456..8919.240 rows=1918 loops=1)
         ->  Nested Loop  (cost=8.59..4368.24 rows=1 width=27) (actual time=95.434..8913.931 rows=1918 loops=1)
               ->  Nested Loop  (cost=8.17..4367.80 rows=1 width=31) (actual time=95.416..8902.838 rows=1918 loops=1)
                     ->  Nested Loop  (cost=7.74..4367.23 rows=1 width=23) (actual time=95.400..8899.153 rows=250 loops=1)
                           ->  Nested Loop  (cost=7.31..3797.31 rows=1246 width=12) (actual time=6.671..3126.892 rows=1038393 loops=1)
                                 ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.643..80.071 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.639..11.624 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=5.999..60.729 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=3.925..3.925 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.006..0.069 rows=25 loops=41840)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.005..0.005 rows=0 loops=1038393)
                                 Index Cond: (id = ci.person_id)
                                 Filter: ((name)::text ~~ 'X%'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.52 rows=5 width=8) (actual time=0.009..0.013 rows=8 loops=250)
                           Index Cond: (movie_id = ci.movie_id)
               ->  Index Only Scan using company_name_pkey on company_name cn  (cost=0.42..0.44 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=1918)
                     Index Cond: (id = mc.company_id)
                     Heap Fetches: 1918
         ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.45 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1918)
               Index Cond: (id = ci.movie_id)
               Heap Fetches: 1918
 Planning Time: 5.262 ms
 Execution Time: 8919.898 ms
(31 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4368.69..4368.70 rows=1 width=32) (actual time=9003.889..9003.889 rows=1 loops=1)
   ->  Nested Loop  (cost=9.02..4368.69 rows=1 width=15) (actual time=59.173..9001.938 rows=11538 loops=1)
         ->  Nested Loop  (cost=8.59..4368.24 rows=1 width=27) (actual time=59.146..8971.287 rows=11538 loops=1)
               ->  Nested Loop  (cost=8.17..4367.80 rows=1 width=31) (actual time=59.125..8914.483 rows=11538 loops=1)
                     ->  Nested Loop  (cost=7.74..4367.23 rows=1 width=23) (actual time=59.104..8894.168 rows=1972 loops=1)
                           ->  Nested Loop  (cost=7.31..3797.31 rows=1246 width=12) (actual time=6.747..3100.038 rows=1038393 loops=1)
                                 ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.720..79.397 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.665..11.815 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.052..60.332 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=3.980..3.980 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.006..0.069 rows=25 loops=41840)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.005..0.005 rows=0 loops=1038393)
                                 Index Cond: (id = ci.person_id)
                                 Filter: ((name)::text ~~ '%Bert%'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.52 rows=5 width=8) (actual time=0.006..0.009 rows=6 loops=1972)
                           Index Cond: (movie_id = ci.movie_id)
               ->  Index Only Scan using company_name_pkey on company_name cn  (cost=0.42..0.44 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=11538)
                     Index Cond: (id = mc.company_id)
                     Heap Fetches: 11538
         ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.45 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=11538)
               Index Cond: (id = ci.movie_id)
               Heap Fetches: 11538
 Planning Time: 5.299 ms
 Execution Time: 9004.118 ms
(31 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4518.46..4518.47 rows=1 width=32) (actual time=12856.875..12856.875 rows=1 loops=1)
   ->  Nested Loop  (cost=9.02..4515.45 rows=1206 width=15) (actual time=7.148..12533.238 rows=2832555 loops=1)
         ->  Nested Loop  (cost=8.59..3966.84 rows=1206 width=4) (actual time=7.123..4555.129 rows=2832555 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=8.03..3845.67 rows=61 width=12) (actual time=6.728..1052.994 rows=68316 loops=1)
                     ->  Nested Loop  (cost=7.61..3769.92 rows=170 width=16) (actual time=6.671..501.734 rows=148552 loops=1)
                           Join Filter: (t.id = mc.movie_id)
                           ->  Nested Loop  (cost=7.18..3749.42 rows=34 width=8) (actual time=6.619..293.910 rows=41840 loops=1)
                                 ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.600..82.162 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.646..11.741 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=5.951..63.335 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=3.894..3.894 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=41840)
                                       Index Cond: (id = mk.movie_id)
                                       Heap Fetches: 41840
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.003..0.004 rows=4 loops=41840)
                                 Index Cond: (movie_id = mk.movie_id)
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=148552)
                           Index Cond: (id = mc.company_id)
                           Filter: ((country_code)::text = '[us]'::text)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.004..0.045 rows=41 loops=68316)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=19) (actual time=0.003..0.003 rows=1 loops=2832555)
               Index Cond: (id = ci.person_id)
 Planning Time: 5.230 ms
 Execution Time: 12857.104 ms
(32 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4629.56..4629.57 rows=1 width=32) (actual time=12112.676..12112.676 rows=1 loops=1)
   ->  Nested Loop  (cost=9.02..4628.64 rows=368 width=15) (actual time=8.605..11998.711 rows=1113120 loops=1)
         ->  Nested Loop  (cost=8.60..4465.59 rows=368 width=19) (actual time=8.582..10057.683 rows=1113120 loops=1)
               ->  Nested Loop  (cost=8.17..4386.88 rows=138 width=27) (actual time=6.844..9410.732 rows=149494 loops=1)
                     ->  Nested Loop  (cost=7.74..3816.96 rows=1246 width=16) (actual time=6.813..3444.811 rows=1038393 loops=1)
                           Join Filter: (t.id = ci.movie_id)
                           ->  Nested Loop  (cost=7.18..3749.42 rows=34 width=8) (actual time=6.789..292.467 rows=41840 loops=1)
                                 ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.764..81.335 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.671..11.721 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.091..62.283 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=4.023..4.023 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=41840)
                                       Index Cond: (id = mk.movie_id)
                                       Heap Fetches: 41840
                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.006..0.070 rows=25 loops=41840)
                                 Index Cond: (movie_id = mk.movie_id)
                     ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.006..0.006 rows=0 loops=1038393)
                           Index Cond: (id = ci.person_id)
                           Filter: ((name)::text ~~ '%B%'::text)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.52 rows=5 width=8) (actual time=0.002..0.003 rows=7 loops=149494)
                     Index Cond: (movie_id = ci.movie_id)
         ->  Index Only Scan using company_name_pkey on company_name cn  (cost=0.42..0.44 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1113120)
               Index Cond: (id = mc.company_id)
               Heap Fetches: 1113120
 Planning Time: 5.292 ms
 Execution Time: 12112.947 ms
(32 rows)

SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=111123.79..111123.80 rows=1 width=96) (actual time=4605.500..4605.501 rows=1 loops=1)
   ->  Nested Loop  (cost=1006.71..111123.78 rows=1 width=65) (actual time=260.843..4605.181 rows=410 loops=1)
         ->  Gather  (cost=1006.28..111123.32 rows=1 width=60) (actual time=260.808..4605.053 rows=410 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Nested Loop  (cost=6.28..110123.22 rows=1 width=60) (actual time=165.964..4600.823 rows=137 loops=3)
                     ->  Nested Loop  (cost=5.85..108160.12 rows=3320 width=64) (actual time=1.143..4261.698 rows=35780 loops=3)
                           ->  Hash Join  (cost=5.29..74077.91 rows=1448 width=56) (actual time=0.526..1905.857 rows=15144 loops=3)
                                 Hash Cond: (mi.info_type_id = it1.id)
                                 ->  Nested Loop  (cost=2.86..73629.77 rows=163660 width=60) (actual time=0.090..1756.921 rows=2310111 loops=3)
                                       ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=10) (actual time=0.047..116.525 rows=153308 loops=3)
                                             Hash Cond: (mi_idx.info_type_id = it2.id)
                                             ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=14) (actual time=0.017..44.814 rows=460012 loops=3)
                                             ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.013..0.014 rows=1 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=3)
                                                         Filter: ((info)::text = 'votes'::text)
                                                         Rows Removed by Filter: 112
                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..11.05 rows=42 width=50) (actual time=0.003..0.009 rows=15 loops=459925)
                                             Index Cond: (movie_id = mi_idx.movie_id)
                                 ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.023..0.023 rows=1 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.018..0.019 rows=1 loops=3)
                                             Filter: ((info)::text = 'budget'::text)
                                             Rows Removed by Filter: 112
                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..23.52 rows=2 width=8) (actual time=0.091..0.155 rows=2 loops=45431)
                                 Index Cond: (movie_id = mi.movie_id)
                                 Filter: ((note)::text = ANY ('{(producer),"(executive producer)"}'::text[]))
                                 Rows Removed by Filter: 38
                     ->  Index Scan using name_pkey on name n  (cost=0.43..0.59 rows=1 width=4) (actual time=0.009..0.009 rows=0 loops=107339)
                           Index Cond: (id = ci.person_id)
                           Filter: (((name)::text ~~ '%Tim%'::text) AND ((gender)::text = 'm'::text))
                           Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.46 rows=1 width=21) (actual time=0.010..0.010 rows=1 loops=410)
               Index Cond: (id = mi.movie_id)
 Planning Time: 4.998 ms
 Execution Time: 4610.066 ms
(37 rows)

SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=17505.24..17505.25 rows=1 width=96) (actual time=191.562..191.562 rows=1 loops=1)
   ->  Nested Loop  (cost=1004.43..17505.23 rows=1 width=65) (actual time=102.060..191.541 rows=11 loops=1)
         ->  Nested Loop  (cost=1004.00..17504.55 rows=1 width=69) (actual time=34.578..188.566 rows=268 loops=1)
               ->  Gather  (cost=1003.43..17479.79 rows=1 width=77) (actual time=13.090..141.840 rows=358 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Nested Loop  (cost=3.43..16479.69 rows=1 width=77) (actual time=7.554..170.155 rows=119 loops=3)
                           ->  Nested Loop  (cost=3.29..16478.37 rows=8 width=81) (actual time=7.543..169.926 rows=119 loops=3)
                                 ->  Nested Loop  (cost=2.86..15808.49 rows=58 width=31) (actual time=0.789..106.065 rows=2051 loops=3)
                                       ->  Hash Join  (cost=2.43..15182.64 rows=187 width=10) (actual time=0.113..56.296 rows=5283 loops=3)
                                             Hash Cond: (mi_idx.info_type_id = it2.id)
                                             ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..15122.68 rows=21125 width=14) (actual time=0.024..54.224 rows=17543 loops=3)
                                                   Filter: ((info)::text > '8.0'::text)
                                                   Rows Removed by Filter: 442469
                                             ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.026..0.026 rows=1 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.019..0.021 rows=1 loops=3)
                                                         Filter: ((info)::text = 'rating'::text)
                                                         Rows Removed by Filter: 112
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..3.35 rows=1 width=21) (actual time=0.009..0.009 rows=0 loops=15849)
                                             Index Cond: (id = mi_idx.movie_id)
                                             Filter: ((production_year >= 2008) AND (production_year <= 2014))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..11.54 rows=1 width=50) (actual time=0.031..0.031 rows=0 loops=6152)
                                       Index Cond: (movie_id = t.id)
                                       Filter: ((note IS NULL) AND ((info)::text = ANY ('{Horror,Thriller}'::text[])))
                                       Rows Removed by Filter: 18
                           ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=358)
                                 Index Cond: (id = mi.info_type_id)
                                 Filter: ((info)::text = 'genres'::text)
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..24.75 rows=1 width=8) (actual time=0.114..0.147 rows=1 loops=358)
                     Index Cond: (movie_id = t.id)
                     Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                     Rows Removed by Filter: 34
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.68 rows=1 width=4) (actual time=0.011..0.011 rows=0 loops=268)
               Index Cond: (id = ci.person_id)
               Filter: ((gender IS NOT NULL) AND ((gender)::text = 'f'::text))
               Rows Removed by Filter: 1
 Planning Time: 4.873 ms
 Execution Time: 197.884 ms
(40 rows)

SET
                                                                                          QUERY PLAN                                                                                          
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=74638.17..74638.18 rows=1 width=96) (actual time=5874.710..5874.710 rows=1 loops=1)
   ->  Gather  (cost=74637.94..74638.15 rows=2 width=96) (actual time=5874.167..5879.068 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=73637.94..73637.95 rows=1 width=96) (actual time=5871.562..5871.562 rows=1 loops=3)
               ->  Nested Loop  (cost=6.71..73637.87 rows=10 width=65) (actual time=18.446..5867.675 rows=9358 loops=3)
                     ->  Nested Loop  (cost=6.28..73620.90 rows=25 width=69) (actual time=11.712..5717.962 rows=18052 loops=3)
                           ->  Nested Loop  (cost=5.72..73165.64 rows=19 width=77) (actual time=0.567..2018.268 rows=34172 loops=3)
                                 Join Filter: (mi.movie_id = t.id)
                                 ->  Hash Join  (cost=5.29..73154.54 rows=19 width=56) (actual time=0.531..1840.756 rows=34172 loops=3)
                                       Hash Cond: (mi.info_type_id = it1.id)
                                       ->  Nested Loop  (cost=2.86..73146.32 rows=2128 width=60) (actual time=0.443..1831.812 rows=34964 loops=3)
                                             ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=10) (actual time=0.046..117.604 rows=153308 loops=3)
                                                   Hash Cond: (mi_idx.info_type_id = it2.id)
                                                   ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=14) (actual time=0.017..45.594 rows=460012 loops=3)
                                                   ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.013..0.013 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=3)
                                                               Filter: ((info)::text = 'votes'::text)
                                                               Rows Removed by Filter: 112
                                             ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..11.37 rows=1 width=50) (actual time=0.011..0.011 rows=0 loops=459925)
                                                   Index Cond: (movie_id = mi_idx.movie_id)
                                                   Filter: ((info)::text = ANY ('{Horror,Action,Sci-Fi,Thriller,Crime,War}'::text[]))
                                                   Rows Removed by Filter: 15
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.031..0.031 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.019..0.026 rows=1 loops=3)
                                                   Filter: ((info)::text = 'genres'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=21) (actual time=0.005..0.005 rows=1 loops=102516)
                                       Index Cond: (id = mi_idx.movie_id)
                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..23.95 rows=1 width=8) (actual time=0.092..0.108 rows=1 loops=102516)
                                 Index Cond: (movie_id = t.id)
                                 Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                 Rows Removed by Filter: 39
                     ->  Index Scan using name_pkey on name n  (cost=0.43..0.68 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=54155)
                           Index Cond: (id = ci.person_id)
                           Filter: ((gender)::text = 'm'::text)
                           Rows Removed by Filter: 0
 Planning Time: 4.870 ms
 Execution Time: 5879.271 ms
(41 rows)

SET
                                                                                                QUERY PLAN                                                                                                 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=85372.10..85372.11 rows=1 width=64) (actual time=276.436..276.436 rows=1 loops=1)
   ->  Nested Loop  (cost=1004.44..85372.09 rows=1 width=32) (actual time=111.913..276.388 rows=184 loops=1)
         ->  Nested Loop  (cost=1004.30..85371.91 rows=1 width=36) (actual time=111.903..276.155 rows=184 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=1003.86..85344.51 rows=1 width=44) (actual time=111.857..270.182 rows=77 loops=1)
                     ->  Nested Loop  (cost=1003.44..85343.31 rows=1 width=48) (actual time=111.833..269.637 rows=79 loops=1)
                           Join Filter: (t.id = mc.movie_id)
                           ->  Nested Loop  (cost=1003.01..85340.60 rows=1 width=40) (actual time=111.652..268.357 rows=102 loops=1)
                                 ->  Gather  (cost=1002.58..85339.18 rows=1 width=44) (actual time=111.092..269.591 rows=115 loops=1)
                                       Workers Planned: 2
                                       Workers Launched: 2
                                       ->  Nested Loop  (cost=2.58..84339.08 rows=1 width=44) (actual time=110.201..270.849 rows=38 loops=3)
                                             ->  Hash Join  (cost=2.15..84336.29 rows=2 width=23) (actual time=107.817..269.416 rows=142 loops=3)
                                                   Hash Cond: (ci.role_id = rt.id)
                                                   ->  Nested Loop  (cost=0.99..84335.05 rows=21 width=27) (actual time=107.712..269.274 rows=142 loops=3)
                                                         Join Filter: (n.id = ci.person_id)
                                                         ->  Nested Loop  (cost=0.42..82155.29 rows=9 width=23) (actual time=104.527..258.157 rows=519 loops=3)
                                                               ->  Parallel Seq Scan on name n  (cost=0.00..81659.82 rows=40 width=19) (actual time=104.148..247.706 rows=2256 loops=3)
                                                                     Filter: (((name)::text ~~ '%Ang%'::text) AND ((gender)::text = 'f'::text))
                                                                     Rows Removed by Filter: 1386908
                                                               ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..12.37 rows=2 width=4) (actual time=0.004..0.004 rows=0 loops=6768)
                                                                     Index Cond: (person_id = n.id)
                                                                     Heap Fetches: 1558
                                                         ->  Index Scan using person_id_cast_info on cast_info ci  (cost=0.56..242.03 rows=13 width=16) (actual time=0.020..0.021 rows=0 loops=1558)
                                                               Index Cond: (person_id = an.person_id)
                                                               Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                               Rows Removed by Filter: 44
                                                   ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.022..0.022 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.013..0.015 rows=1 loops=3)
                                                               Filter: ((role)::text = 'actress'::text)
                                                               Rows Removed by Filter: 11
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..1.40 rows=1 width=21) (actual time=0.010..0.010 rows=0 loops=425)
                                                   Index Cond: (id = ci.movie_id)
                                                   Filter: ((production_year >= 2005) AND (production_year <= 2009))
                                                   Rows Removed by Filter: 1
                                 ->  Index Only Scan using char_name_pkey on char_name chn  (cost=0.43..1.42 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=115)
                                       Index Cond: (id = ci.person_role_id)
                                       Heap Fetches: 102
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.71 rows=1 width=8) (actual time=0.010..0.012 rows=1 loops=102)
                                 Index Cond: (movie_id = ci.movie_id)
                                 Filter: ((note IS NOT NULL) AND (((note)::text ~~ '%(USA)%'::text) OR ((note)::text ~~ '%(worldwide)%'::text)))
                                 Rows Removed by Filter: 6
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.20 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=79)
                           Index Cond: (id = mc.company_id)
                           Filter: ((country_code)::text = '[us]'::text)
                           Rows Removed by Filter: 0
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..27.38 rows=1 width=8) (actual time=0.021..0.077 rows=2 loops=77)
                     Index Cond: (movie_id = ci.movie_id)
                     Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%200%'::text) OR ((info)::text ~~ 'USA:%200%'::text)))
                     Rows Removed by Filter: 166
         ->  Index Scan using info_type_pkey on info_type it  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=184)
               Index Cond: (id = mi.info_type_id)
               Filter: ((info)::text = 'release dates'::text)
 Planning Time: 24.547 ms
 Execution Time: 278.722 ms
(56 rows)

SET
                                                                                                   QUERY PLAN                                                                                                   
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=55721.55..55721.56 rows=1 width=64) (actual time=136.604..136.604 rows=1 loops=1)
   ->  Nested Loop  (cost=1003.41..55721.55 rows=1 width=32) (actual time=119.275..136.589 rows=15 loops=1)
         ->  Nested Loop  (cost=1003.28..55721.37 rows=1 width=36) (actual time=119.243..136.538 rows=15 loops=1)
               Join Filter: (ci.person_id = n.id)
               ->  Nested Loop  (cost=1002.85..55719.84 rows=1 width=29) (actual time=112.160..135.509 rows=275 loops=1)
                     ->  Nested Loop  (cost=1002.70..55719.64 rows=1 width=33) (actual time=112.148..135.167 rows=275 loops=1)
                           Join Filter: (t.id = mi.movie_id)
                           ->  Nested Loop  (cost=1002.27..55692.13 rows=1 width=41) (actual time=112.088..116.388 rows=275 loops=1)
                                 ->  Nested Loop  (cost=1001.85..55690.86 rows=1 width=45) (actual time=112.061..115.854 rows=275 loops=1)
                                       ->  Nested Loop  (cost=1001.42..55689.20 rows=1 width=41) (actual time=112.030..114.896 rows=99 loops=1)
                                             ->  Nested Loop  (cost=1001.00..55687.75 rows=1 width=45) (actual time=111.998..113.848 rows=100 loops=1)
                                                   Join Filter: (t.id = ci.movie_id)
                                                   ->  Gather  (cost=1000.43..55645.55 rows=1 width=29) (actual time=111.934..112.011 rows=4 loops=1)
                                                         Workers Planned: 2
                                                         Workers Launched: 2
                                                         ->  Nested Loop  (cost=0.43..54645.45 rows=1 width=29) (actual time=102.853..109.711 rows=1 loops=3)
                                                               ->  Parallel Seq Scan on title t  (cost=0.00..54433.61 rows=10 width=21) (actual time=14.867..109.614 rows=2 loops=3)
                                                                     Filter: ((production_year >= 2007) AND (production_year <= 2008) AND ((title)::text ~~ '%Kung%Fu%Panda%'::text))
                                                                     Rows Removed by Filter: 842768
                                                               ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..21.17 rows=1 width=8) (actual time=0.036..0.039 rows=1 loops=7)
                                                                     Index Cond: (movie_id = t.id)
                                                                     Filter: (((note)::text ~~ '%(200%)%'::text) AND (((note)::text ~~ '%(USA)%'::text) OR ((note)::text ~~ '%(worldwide)%'::text)))
                                                                     Rows Removed by Filter: 6
                                                   ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..42.20 rows=1 width=16) (actual time=0.021..0.471 rows=25 loops=4)
                                                         Index Cond: (movie_id = mc.movie_id)
                                                         Filter: ((note)::text = '(voice)'::text)
                                                         Rows Removed by Filter: 127
                                             ->  Index Only Scan using char_name_pkey on char_name chn  (cost=0.43..1.45 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=100)
                                                   Index Cond: (id = ci.person_role_id)
                                                   Heap Fetches: 99
                                       ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..1.64 rows=2 width=4) (actual time=0.007..0.009 rows=3 loops=99)
                                             Index Cond: (person_id = ci.person_id)
                                             Heap Fetches: 275
                                 ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.27 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=275)
                                       Index Cond: (id = mc.company_id)
                                       Filter: ((country_code)::text = '[us]'::text)
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..27.50 rows=1 width=8) (actual time=0.010..0.068 rows=1 loops=275)
                                 Index Cond: (movie_id = ci.movie_id)
                                 Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%2007%'::text) OR ((info)::text ~~ 'USA:%2008%'::text)))
                                 Rows Removed by Filter: 295
                     ->  Index Scan using info_type_pkey on info_type it  (cost=0.14..0.17 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=275)
                           Index Cond: (id = mi.info_type_id)
                           Filter: ((info)::text = 'release dates'::text)
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.53 rows=1 width=19) (actual time=0.004..0.004 rows=0 loops=275)
                     Index Cond: (id = an.person_id)
                     Filter: (((name)::text ~~ '%Angel%'::text) AND ((gender)::text = 'f'::text))
                     Rows Removed by Filter: 1
         ->  Index Scan using role_type_pkey on role_type rt  (cost=0.14..0.16 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=15)
               Index Cond: (id = ci.role_id)
               Filter: ((role)::text = 'actress'::text)
 Planning Time: 23.149 ms
 Execution Time: 136.904 ms
(52 rows)

SET
                                                                                                  QUERY PLAN                                                                                                  
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=222418.16..222418.17 rows=1 width=64) (actual time=1752.401..1752.401 rows=1 loops=1)
   ->  Nested Loop  (cost=84856.43..222418.15 rows=2 width=32) (actual time=284.558..1751.794 rows=3575 loops=1)
         Join Filter: (n.id = an.person_id)
         ->  Nested Loop  (cost=84856.00..222416.50 rows=1 width=40) (actual time=270.416..1745.337 rows=2632 loops=1)
               ->  Nested Loop  (cost=84855.58..222414.17 rows=2 width=44) (actual time=270.386..1721.414 rows=8585 loops=1)
                     ->  Hash Join  (cost=84855.15..222411.47 rows=1 width=52) (actual time=270.352..1709.402 rows=2129 loops=1)
                           Hash Cond: (mi.info_type_id = it.id)
                           ->  Nested Loop  (cost=84852.73..222408.95 rows=36 width=56) (actual time=270.305..1708.745 rows=2129 loops=1)
                                 ->  Nested Loop  (cost=84852.29..219906.63 rows=92 width=48) (actual time=270.212..1638.356 rows=3349 loops=1)
                                       ->  Nested Loop  (cost=84851.86..219669.76 rows=170 width=27) (actual time=270.174..1601.371 rows=5686 loops=1)
                                             ->  Hash Join  (cost=84851.43..219172.23 rows=351 width=31) (actual time=270.132..1575.947 rows=6552 loops=1)
                                                   Hash Cond: (ci.person_id = n.id)
                                                   ->  Nested Loop  (cost=0.56..134124.20 rows=75106 width=12) (actual time=0.214..1284.570 rows=276166 loops=1)
                                                         ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.013..0.015 rows=1 loops=1)
                                                               Filter: ((role)::text = 'actress'::text)
                                                               Rows Removed by Filter: 11
                                                         ->  Index Scan using role_id_cast_info on cast_info ci  (cost=0.56..133303.71 rows=81934 width=16) (actual time=0.200..1261.158 rows=276166 loops=1)
                                                               Index Cond: (role_id = rt.id)
                                                               Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                               Rows Removed by Filter: 7175807
                                                   ->  Hash  (cost=84607.42..84607.42 rows=19476 width=19) (actual time=264.543..264.543 rows=50011 loops=1)
                                                         Buckets: 65536 (originally 32768)  Batches: 1 (originally 1)  Memory Usage: 3135kB
                                                         ->  Gather  (cost=1000.00..84607.42 rows=19476 width=19) (actual time=106.983..255.496 rows=50011 loops=1)
                                                               Workers Planned: 2
                                                               Workers Launched: 2
                                                               ->  Parallel Seq Scan on name n  (cost=0.00..81659.82 rows=8115 width=19) (actual time=104.936..250.022 rows=16670 loops=3)
                                                                     Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                                                     Rows Removed by Filter: 1372493
                                             ->  Index Only Scan using char_name_pkey on char_name chn  (cost=0.43..1.42 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=6552)
                                                   Index Cond: (id = ci.person_role_id)
                                                   Heap Fetches: 5686
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..1.39 rows=1 width=21) (actual time=0.006..0.006 rows=1 loops=5686)
                                             Index Cond: (id = ci.movie_id)
                                             Filter: (production_year > 2000)
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..27.19 rows=1 width=8) (actual time=0.014..0.021 rows=1 loops=3349)
                                       Index Cond: (movie_id = t.id)
                                       Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%200%'::text) OR ((info)::text ~~ 'USA:%200%'::text)))
                                       Rows Removed by Filter: 15
                           ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.021..0.021 rows=1 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                 ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.015 rows=1 loops=1)
                                       Filter: ((info)::text = 'release dates'::text)
                                       Rows Removed by Filter: 112
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.65 rows=5 width=8) (actual time=0.004..0.005 rows=4 loops=2129)
                           Index Cond: (movie_id = t.id)
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.16 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=8585)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text = '[us]'::text)
                     Rows Removed by Filter: 1
         ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..1.63 rows=2 width=4) (actual time=0.002..0.002 rows=1 loops=2632)
               Index Cond: (person_id = ci.person_id)
               Heap Fetches: 3575
 Planning Time: 24.062 ms
 Execution Time: 1752.791 ms
(55 rows)

SET
                                                                                                           QUERY PLAN                                                                                                           
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=283172.99..283173.00 rows=1 width=64) (actual time=8985.963..8985.963 rows=1 loops=1)
   ->  Gather  (cost=283172.77..283172.98 rows=2 width=64) (actual time=5613.015..8990.619 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=282172.77..282172.78 rows=1 width=64) (actual time=6797.677..6797.677 rows=1 loops=3)
               ->  Nested Loop  (cost=135435.02..282167.07 rows=1140 width=32) (actual time=2068.349..6719.016 rows=586882 loops=3)
                     ->  Nested Loop  (cost=135434.60..281402.94 rows=465 width=40) (actual time=2068.330..6140.992 rows=262348 loops=3)
                           ->  Nested Loop  (cost=135434.18..279915.09 rows=1278 width=44) (actual time=2067.812..3847.557 rows=1076352 loops=3)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Hash Join  (cost=135433.75..279235.89 rows=255 width=52) (actual time=2067.724..3301.299 rows=113945 loops=3)
                                       Hash Cond: (mi.info_type_id = it.id)
                                       ->  Nested Loop  (cost=135431.32..279154.95 rows=28832 width=56) (actual time=2067.637..3246.800 rows=540998 loops=3)
                                             ->  Nested Loop  (cost=135430.89..226932.18 rows=1906 width=48) (actual time=2067.613..2833.288 rows=53102 loops=3)
                                                   ->  Nested Loop  (cost=135430.46..221350.20 rows=3938 width=52) (actual time=2067.585..2604.375 rows=56088 loops=3)
                                                         ->  Hash Join  (cost=135430.03..195430.35 rows=17020 width=33) (actual time=2067.551..2392.984 rows=56136 loops=3)
                                                               Hash Cond: (t.id = ci.movie_id)
                                                               ->  Parallel Seq Scan on title t  (cost=0.00..49166.29 rows=572932 width=21) (actual time=0.020..120.909 rows=460484 loops=3)
                                                                     Filter: (production_year > 2000)
                                                                     Rows Removed by Filter: 382286
                                                               ->  Hash  (cost=134124.20..134124.20 rows=75106 width=12) (actual time=2066.738..2066.738 rows=276166 loops=3)
                                                                     Buckets: 131072 (originally 131072)  Batches: 4 (originally 2)  Memory Usage: 3984kB
                                                                     ->  Nested Loop  (cost=0.56..134124.20 rows=75106 width=12) (actual time=0.157..2012.333 rows=276166 loops=3)
                                                                           ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.017..0.020 rows=1 loops=3)
                                                                                 Filter: ((role)::text = 'actress'::text)
                                                                                 Rows Removed by Filter: 11
                                                                           ->  Index Scan using role_id_cast_info on cast_info ci  (cost=0.56..133303.71 rows=81934 width=16) (actual time=0.137..1989.215 rows=276166 loops=3)
                                                                                 Index Cond: (role_id = rt.id)
                                                                                 Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                                 Rows Removed by Filter: 7175807
                                                         ->  Index Scan using name_pkey on name n  (cost=0.43..1.52 rows=1 width=19) (actual time=0.003..0.003 rows=1 loops=168407)
                                                               Index Cond: (id = ci.person_id)
                                                               Filter: ((gender)::text = 'f'::text)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Only Scan using char_name_pkey on char_name chn  (cost=0.43..1.42 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=168264)
                                                         Index Cond: (id = ci.person_role_id)
                                                         Heap Fetches: 159307
                                             ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..26.98 rows=42 width=8) (actual time=0.003..0.006 rows=10 loops=159307)
                                                   Index Cond: (movie_id = t.id)
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.026..0.026 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.015..0.022 rows=1 loops=3)
                                                   Filter: ((info)::text = 'release dates'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.60 rows=5 width=8) (actual time=0.002..0.003 rows=9 loops=341836)
                                       Index Cond: (movie_id = mi.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.16 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=3229056)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..1.62 rows=2 width=4) (actual time=0.001..0.002 rows=2 loops=787043)
                           Index Cond: (person_id = n.id)
                           Heap Fetches: 1760645
 Planning Time: 25.607 ms
 Execution Time: 8991.069 ms
(54 rows)

SET
                                                                                                 QUERY PLAN                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=19539.97..19539.98 rows=1 width=68) (actual time=82.327..82.327 rows=1 loops=1)
   ->  Gather  (cost=19539.75..19539.96 rows=2 width=68) (actual time=77.838..83.497 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=18539.75..18539.76 rows=1 width=68) (actual time=75.083..75.083 rows=1 loops=3)
               ->  Nested Loop  (cost=4.35..18539.42 rows=44 width=45) (actual time=70.228..75.063 rows=47 loops=3)
                     Join Filter: (mc.movie_id = t.id)
                     ->  Hash Join  (cost=3.92..18513.70 rows=44 width=32) (actual time=70.194..74.314 rows=47 loops=3)
                           Hash Cond: (mc.company_type_id = ct.id)
                           ->  Nested Loop  (cost=2.86..18511.69 rows=177 width=36) (actual time=70.122..74.229 rows=49 loops=3)
                                 ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=4) (actual time=70.055..70.087 rows=83 loops=3)
                                       Hash Cond: (mi_idx.info_type_id = it.id)
                                       ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=8) (actual time=0.016..37.921 rows=460012 loops=3)
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.020..0.020 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.017..0.017 rows=1 loops=3)
                                                   Filter: ((info)::text = 'top 250 rank'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.63 rows=1 width=32) (actual time=0.049..0.049 rows=1 loops=250)
                                       Index Cond: (movie_id = mi_idx.movie_id)
                                       Filter: (((note)::text !~~ '%(as Metro-Goldwyn-Mayer Pictures)%'::text) AND (((note)::text ~~ '%(co-production)%'::text) OR ((note)::text ~~ '%(presents)%'::text)))
                                       Rows Removed by Filter: 33
                           ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.018..0.018 rows=1 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                 ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.013..0.013 rows=1 loops=3)
                                       Filter: ((kind)::text = 'production companies'::text)
                                       Rows Removed by Filter: 3
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=25) (actual time=0.015..0.015 rows=1 loops=142)
                           Index Cond: (id = mi_idx.movie_id)
 Planning Time: 2.320 ms
 Execution Time: 83.647 ms
(31 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=20131.19..20131.20 rows=1 width=68) (actual time=73.028..73.029 rows=1 loops=1)
   ->  Gather  (cost=20130.96..20131.17 rows=2 width=68) (actual time=72.479..73.794 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=19130.96..19130.97 rows=1 width=68) (actual time=70.240..70.240 rows=1 loops=3)
               ->  Hash Join  (cost=4.35..19124.19 rows=903 width=45) (actual time=70.234..70.235 rows=1 loops=3)
                     Hash Cond: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=3.29..19103.60 rows=3612 width=49) (actual time=70.085..70.162 rows=22 loops=3)
                           Join Filter: (t.id = mc.movie_id)
                           ->  Nested Loop  (cost=2.86..18189.65 rows=1422 width=29) (actual time=70.066..70.096 rows=1 loops=3)
                                 ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=4) (actual time=70.000..70.002 rows=3 loops=3)
                                       Hash Cond: (mi_idx.info_type_id = it.id)
                                       ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=8) (actual time=0.024..37.826 rows=460012 loops=3)
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.018..0.018 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.015..0.016 rows=1 loops=3)
                                                   Filter: ((info)::text = 'bottom 10 rank'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.58 rows=1 width=25) (actual time=0.027..0.027 rows=0 loops=10)
                                       Index Cond: (id = mi_idx.movie_id)
                                       Filter: ((production_year >= 2005) AND (production_year <= 2010))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.61 rows=3 width=32) (actual time=0.031..0.046 rows=16 loops=4)
                                 Index Cond: (movie_id = mi_idx.movie_id)
                                 Filter: ((note)::text !~~ '%(as Metro-Goldwyn-Mayer Pictures)%'::text)
                                 Rows Removed by Filter: 2
                     ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=3)
                                 Filter: ((kind)::text = 'production companies'::text)
                                 Rows Removed by Filter: 3
 Planning Time: 1.844 ms
 Execution Time: 73.941 ms
(33 rows)

SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=19461.56..19461.57 rows=1 width=68) (actual time=77.809..77.809 rows=1 loops=1)
   ->  Gather  (cost=19461.33..19461.54 rows=2 width=68) (actual time=72.274..79.409 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=18461.33..18461.34 rows=1 width=68) (actual time=72.718..72.718 rows=1 loops=3)
               ->  Nested Loop  (cost=4.35..18461.31 rows=3 width=45) (actual time=71.748..72.713 rows=1 loops=3)
                     Join Filter: (mc.movie_id = t.id)
                     ->  Hash Join  (cost=3.92..18449.57 rows=20 width=32) (actual time=70.699..72.658 rows=8 loops=3)
                           Hash Cond: (mc.company_type_id = ct.id)
                           ->  Nested Loop  (cost=2.86..18448.07 rows=81 width=36) (actual time=70.629..72.586 rows=8 loops=3)
                                 ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=4) (actual time=69.845..69.872 rows=83 loops=3)
                                       Hash Cond: (mi_idx.info_type_id = it.id)
                                       ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=8) (actual time=0.025..37.636 rows=460012 loops=3)
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.018..0.018 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=3)
                                                   Filter: ((info)::text = 'top 250 rank'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.62 rows=1 width=32) (actual time=0.032..0.032 rows=0 loops=250)
                                       Index Cond: (movie_id = mi_idx.movie_id)
                                       Filter: (((note)::text !~~ '%(as Metro-Goldwyn-Mayer Pictures)%'::text) AND ((note)::text ~~ '%(co-production)%'::text))
                                       Rows Removed by Filter: 33
                           ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                 ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=3)
                                       Filter: ((kind)::text = 'production companies'::text)
                                       Rows Removed by Filter: 3
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=25) (actual time=0.007..0.007 rows=0 loops=23)
                           Index Cond: (id = mi_idx.movie_id)
                           Filter: (production_year > 2010)
                           Rows Removed by Filter: 1
 Planning Time: 1.855 ms
 Execution Time: 79.561 ms
(33 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=20988.46..20988.47 rows=1 width=68) (actual time=72.667..72.667 rows=1 loops=1)
   ->  Gather  (cost=20988.24..20988.45 rows=2 width=68) (actual time=72.167..73.457 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=19988.24..19988.25 rows=1 width=68) (actual time=70.010..70.010 rows=1 loops=3)
               ->  Hash Join  (cost=4.35..19975.05 rows=1758 width=45) (actual time=69.990..70.005 rows=1 loops=3)
                     Hash Cond: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=3.29..19935.98 rows=7030 width=49) (actual time=69.840..69.937 rows=26 loops=3)
                           ->  Nested Loop  (cost=2.86..18176.93 rows=2768 width=29) (actual time=69.821..69.859 rows=2 loops=3)
                                 ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=4) (actual time=69.796..69.798 rows=3 loops=3)
                                       Hash Cond: (mi_idx.info_type_id = it.id)
                                       ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=8) (actual time=0.023..37.646 rows=460012 loops=3)
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.019..0.020 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.017..0.017 rows=1 loops=3)
                                                   Filter: ((info)::text = 'bottom 10 rank'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=25) (actual time=0.018..0.018 rows=1 loops=10)
                                       Index Cond: (id = mi_idx.movie_id)
                                       Filter: (production_year > 2000)
                                       Rows Removed by Filter: 0
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.61 rows=3 width=32) (actual time=0.025..0.037 rows=13 loops=6)
                                 Index Cond: (movie_id = t.id)
                                 Filter: ((note)::text !~~ '%(as Metro-Goldwyn-Mayer Pictures)%'::text)
                                 Rows Removed by Filter: 2
                     ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=3)
                                 Filter: ((kind)::text = 'production companies'::text)
                                 Rows Removed by Filter: 3
 Planning Time: 1.779 ms
 Execution Time: 73.615 ms
(32 rows)

SET
                                                                                             QUERY PLAN                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=12310.45..12310.46 rows=1 width=32) (actual time=3422.491..3422.491 rows=1 loops=1)
   ->  Nested Loop  (cost=9.02..12310.44 rows=1 width=17) (actual time=48.639..3422.456 rows=33 loops=1)
         ->  Nested Loop  (cost=8.59..12309.99 rows=1 width=21) (actual time=48.612..3422.082 rows=33 loops=1)
               ->  Nested Loop  (cost=8.16..12304.93 rows=11 width=25) (actual time=5.153..2039.231 rows=532809 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=7.60..12298.97 rows=3 width=29) (actual time=5.115..479.926 rows=6016 loops=1)
                           Join Filter: (t.kind_id = kt.id)
                           Rows Removed by Join Filter: 1347
                           ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.017..0.020 rows=1 loops=1)
                                 Filter: ((kind)::text = 'movie'::text)
                                 Rows Removed by Filter: 6
                           ->  Nested Loop  (cost=7.60..12297.62 rows=21 width=33) (actual time=1.089..478.313 rows=7363 loops=1)
                                 ->  Nested Loop  (cost=7.17..12286.40 rows=23 width=8) (actual time=1.060..415.459 rows=8765 loops=1)
                                       Join Filter: (cc.status_id = cct2.id)
                                       Rows Removed by Join Filter: 8765
                                       ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.012..0.013 rows=2 loops=1)
                                             Filter: ((kind)::text ~~ '%complete%'::text)
                                             Rows Removed by Filter: 2
                                       ->  Nested Loop  (cost=7.17..12284.17 rows=94 width=12) (actual time=0.862..206.252 rows=8765 loops=2)
                                             Join Filter: (cc.subject_id = cct1.id)
                                             Rows Removed by Join Filter: 4045
                                             ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.003 rows=1 loops=2)
                                                   Filter: ((kind)::text = 'cast'::text)
                                                   Rows Removed by Filter: 3
                                             ->  Nested Loop  (cost=7.17..12278.42 rows=376 width=16) (actual time=0.859..204.259 rows=12810 loops=2)
                                                   ->  Nested Loop  (cost=6.75..12149.91 rows=270 width=4) (actual time=0.616..131.409 rows=35548 loops=2)
                                                         ->  Seq Scan on keyword k  (cost=0.00..3632.40 rows=8 width=4) (actual time=0.114..29.801 rows=8 loops=2)
                                                               Filter: ((keyword)::text = ANY ('{superhero,sequel,second-part,marvel-comics,based-on-comic,tv-special,fight,violence}'::text[]))
                                                               Rows Removed by Filter: 134162
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1061.70 rows=299 width=8) (actual time=1.080..12.184 rows=4444 loops=16)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=46976
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.598..0.598 rows=4444 loops=16)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.002..0.002 rows=0 loops=71096)
                                                         Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.007..0.007 rows=1 loops=8765)
                                       Index Cond: (id = mk.movie_id)
                                       Filter: (production_year > 1950)
                                       Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.010..0.244 rows=89 loops=6016)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=532809)
                     Index Cond: (id = ci.person_role_id)
                     Filter: (((name)::text !~~ '%Sherlock%'::text) AND (((name)::text ~~ '%Tony%Stark%'::text) OR ((name)::text ~~ '%Iron%Man%'::text)))
                     Rows Removed by Filter: 0
         ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=33)
               Index Cond: (id = ci.person_id)
               Heap Fetches: 33
 Planning Time: 15.750 ms
 Execution Time: 3422.689 ms
(51 rows)

SET
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=12304.81..12304.82 rows=1 width=32) (actual time=2688.197..2688.197 rows=1 loops=1)
   ->  Nested Loop  (cost=9.02..12304.81 rows=1 width=17) (actual time=59.670..2688.166 rows=17 loops=1)
         ->  Nested Loop  (cost=8.59..12304.35 rows=1 width=21) (actual time=59.653..2687.842 rows=27 loops=1)
               ->  Nested Loop  (cost=8.16..12301.15 rows=7 width=25) (actual time=7.924..1333.926 rows=222518 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=7.60..12297.17 rows=2 width=29) (actual time=7.890..652.088 rows=1472 loops=1)
                           Join Filter: (cc.status_id = cct2.id)
                           Rows Removed by Join Filter: 1472
                           ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.019..0.020 rows=2 loops=1)
                                 Filter: ((kind)::text ~~ '%complete%'::text)
                                 Rows Removed by Filter: 2
                           ->  Nested Loop  (cost=7.60..12296.04 rows=7 width=33) (actual time=5.825..325.675 rows=1472 loops=2)
                                 Join Filter: (cc.subject_id = cct1.id)
                                 Rows Removed by Join Filter: 243
                                 ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=2)
                                       Filter: ((kind)::text = 'cast'::text)
                                       Rows Removed by Filter: 3
                                 ->  Nested Loop  (cost=7.60..12294.62 rows=29 width=37) (actual time=5.822..325.234 rows=1715 loops=2)
                                       ->  Nested Loop  (cost=7.18..12284.58 rows=21 width=25) (actual time=5.730..308.263 rows=6043 loops=2)
                                             Join Filter: (t.kind_id = kt.id)
                                             Rows Removed by Join Filter: 8122
                                             ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.001..0.003 rows=1 loops=2)
                                                   Filter: ((kind)::text = 'movie'::text)
                                                   Rows Removed by Filter: 6
                                             ->  Nested Loop  (cost=7.18..12281.66 rows=147 width=29) (actual time=0.629..306.447 rows=14165 loops=2)
                                                   ->  Nested Loop  (cost=6.75..12149.91 rows=270 width=4) (actual time=0.613..131.619 rows=35548 loops=2)
                                                         ->  Seq Scan on keyword k  (cost=0.00..3632.40 rows=8 width=4) (actual time=0.113..30.140 rows=8 loops=2)
                                                               Filter: ((keyword)::text = ANY ('{superhero,sequel,second-part,marvel-comics,based-on-comic,tv-special,fight,violence}'::text[]))
                                                               Rows Removed by Filter: 134162
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1061.70 rows=299 width=8) (actual time=1.084..12.191 rows=4444 loops=16)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=46976
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.600..0.600 rows=4444 loops=16)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.005..0.005 rows=0 loops=71096)
                                                         Index Cond: (id = mk.movie_id)
                                                         Filter: (production_year > 2000)
                                                         Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.002..0.003 rows=0 loops=12086)
                                             Index Cond: (movie_id = t.id)
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.012..0.432 rows=151 loops=1472)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=4) (actual time=0.006..0.006 rows=0 loops=222518)
                     Index Cond: (id = ci.person_id)
                     Filter: ((name)::text ~~ '%Downey%Robert%'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=4) (actual time=0.011..0.011 rows=1 loops=27)
               Index Cond: (id = ci.person_role_id)
               Filter: (((name)::text !~~ '%Sherlock%'::text) AND (((name)::text ~~ '%Tony%Stark%'::text) OR ((name)::text ~~ '%Iron%Man%'::text)))
               Rows Removed by Filter: 0
 Planning Time: 16.025 ms
 Execution Time: 2688.388 ms
(52 rows)

SET
                                                                                             QUERY PLAN                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=14665.13..14665.14 rows=1 width=64) (actual time=1504.337..1504.337 rows=1 loops=1)
   ->  Nested Loop  (cost=9.02..14665.12 rows=1 width=32) (actual time=7.781..1502.967 rows=5406 loops=1)
         ->  Nested Loop  (cost=8.59..14664.67 rows=1 width=21) (actual time=7.750..1459.340 rows=5406 loops=1)
               ->  Nested Loop  (cost=8.16..14661.01 rows=8 width=25) (actual time=7.447..1032.817 rows=189844 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=7.60..14657.03 rows=2 width=29) (actual time=7.396..495.356 rows=1267 loops=1)
                           Join Filter: (cc.status_id = cct2.id)
                           Rows Removed by Join Filter: 1267
                           ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.018..0.019 rows=2 loops=1)
                                 Filter: ((kind)::text ~~ '%complete%'::text)
                                 Rows Removed by Filter: 2
                           ->  Nested Loop  (cost=7.60..14655.87 rows=9 width=33) (actual time=5.561..247.405 rows=1267 loops=2)
                                 Join Filter: (cc.subject_id = cct1.id)
                                 Rows Removed by Join Filter: 218
                                 ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=2)
                                       Filter: ((kind)::text = 'cast'::text)
                                       Rows Removed by Filter: 3
                                 ->  Nested Loop  (cost=7.60..14654.36 rows=37 width=37) (actual time=5.558..247.041 rows=1485 loops=2)
                                       ->  Nested Loop  (cost=7.18..14641.93 rows=26 width=25) (actual time=5.479..233.395 rows=5032 loops=2)
                                             Join Filter: (t.kind_id = kt.id)
                                             Rows Removed by Join Filter: 5581
                                             ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.001..0.003 rows=1 loops=2)
                                                   Filter: ((kind)::text = 'movie'::text)
                                                   Rows Removed by Filter: 6
                                             ->  Nested Loop  (cost=7.18..14638.55 rows=183 width=29) (actual time=0.661..232.009 rows=10613 loops=2)
                                                   ->  Nested Loop  (cost=6.75..14474.11 rows=337 width=4) (actual time=0.644..109.335 rows=24091 loops=2)
                                                         ->  Seq Scan on keyword k  (cost=0.00..3967.82 rows=10 width=4) (actual time=0.137..36.356 rows=10 loops=2)
                                                               Filter: ((keyword)::text = ANY ('{superhero,marvel-comics,based-on-comic,tv-special,fight,violence,magnet,web,claw,laser}'::text[]))
                                                               Rows Removed by Filter: 134160
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1047.64 rows=299 width=8) (actual time=0.646..7.016 rows=2409 loops=20)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=34254
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.361..0.361 rows=2409 loops=20)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.005..0.005 rows=0 loops=48182)
                                                         Index Cond: (id = mk.movie_id)
                                                         Filter: (production_year > 2000)
                                                         Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.002..0.002 rows=0 loops=10064)
                                             Index Cond: (movie_id = t.id)
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.012..0.399 rows=150 loops=1267)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=189844)
                     Index Cond: (id = ci.person_role_id)
                     Filter: ((name IS NOT NULL) AND (((name)::text ~~ '%man%'::text) OR ((name)::text ~~ '%Man%'::text)))
                     Rows Removed by Filter: 0
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=19) (actual time=0.008..0.008 rows=1 loops=5406)
               Index Cond: (id = ci.person_id)
 Planning Time: 16.104 ms
 Execution Time: 1504.523 ms
(50 rows)

SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3753.11..3753.12 rows=1 width=96) (actual time=104.403..104.403 rows=1 loops=1)
   ->  Nested Loop  (cost=8.75..3753.10 rows=1 width=118) (actual time=3.706..104.083 rows=1410 loops=1)
         Join Filter: (ml.movie_id = t.id)
         ->  Nested Loop  (cost=8.32..3752.60 rows=1 width=117) (actual time=3.684..101.049 rows=1816 loops=1)
               Join Filter: (ml.movie_id = mi.movie_id)
               ->  Nested Loop  (cost=7.89..3750.82 rows=1 width=113) (actual time=3.638..96.151 rows=402 loops=1)
                     Join Filter: (mc.company_type_id = ct.id)
                     Rows Removed by Join Filter: 20
                     ->  Nested Loop  (cost=7.89..3749.75 rows=1 width=117) (actual time=3.627..95.682 rows=422 loops=1)
                           ->  Nested Loop  (cost=7.47..3749.30 rows=1 width=102) (actual time=3.253..93.256 rows=1021 loops=1)
                                 Join Filter: (ml.movie_id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.04..3748.73 rows=1 width=90) (actual time=3.224..92.090 rows=199 loops=1)
                                       Join Filter: (ml.link_type_id = lt.id)
                                       Rows Removed by Join Filter: 303
                                       ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.016..0.020 rows=2 loops=1)
                                             Filter: ((link)::text ~~ '%follow%'::text)
                                             Rows Removed by Filter: 16
                                       ->  Nested Loop  (cost=7.04..3747.37 rows=11 width=12) (actual time=2.933..46.007 rows=251 loops=2)
                                             ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=2.927..36.417 rows=10544 loops=2)
                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.682..10.547 rows=1 loops=2)
                                                         Filter: ((keyword)::text = 'sequel'::text)
                                                         Rows Removed by Filter: 134169
                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=2.227..24.839 rows=10544 loops=2)
                                                         Recheck Cond: (keyword_id = k.id)
                                                         Heap Blocks: exact=11140
                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.317..1.317 rows=10544 loops=2)
                                                               Index Cond: (keyword_id = k.id)
                                             ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.001..0.001 rows=0 loops=21088)
                                                   Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=2 width=12) (actual time=0.004..0.005 rows=5 loops=199)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: (note IS NULL)
                                       Rows Removed by Filter: 2
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=1021)
                                 Index Cond: (id = mc.company_id)
                                 Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                                 Rows Removed by Filter: 1
                     ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=422)
                           Filter: ((kind)::text = 'production companies'::text)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.77 rows=1 width=4) (actual time=0.009..0.011 rows=5 loops=402)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German}'::text[]))
                     Rows Removed by Filter: 16
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.001..0.001 rows=1 loops=1816)
               Index Cond: (id = mk.movie_id)
               Filter: ((production_year >= 1950) AND (production_year <= 2000))
               Rows Removed by Filter: 0
 Planning Time: 15.382 ms
 Execution Time: 104.593 ms
(50 rows)

SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3752.79..3752.80 rows=1 width=96) (actual time=68.862..68.862 rows=1 loops=1)
   ->  Nested Loop  (cost=8.75..3752.79 rows=1 width=118) (actual time=3.533..68.841 rows=38 loops=1)
         Join Filter: (ml.movie_id = t.id)
         ->  Nested Loop  (cost=8.32..3752.28 rows=1 width=117) (actual time=3.152..68.292 rows=308 loops=1)
               Join Filter: (ml.movie_id = mi.movie_id)
               ->  Nested Loop  (cost=7.89..3750.82 rows=1 width=113) (actual time=3.135..64.987 rows=402 loops=1)
                     Join Filter: (mc.company_type_id = ct.id)
                     Rows Removed by Join Filter: 20
                     ->  Nested Loop  (cost=7.89..3749.75 rows=1 width=117) (actual time=3.127..64.537 rows=422 loops=1)
                           ->  Nested Loop  (cost=7.47..3749.30 rows=1 width=102) (actual time=2.947..62.488 rows=1021 loops=1)
                                 Join Filter: (ml.movie_id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.04..3748.73 rows=1 width=90) (actual time=2.930..61.585 rows=199 loops=1)
                                       Join Filter: (ml.link_type_id = lt.id)
                                       Rows Removed by Join Filter: 303
                                       ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.005..0.009 rows=2 loops=1)
                                             Filter: ((link)::text ~~ '%follow%'::text)
                                             Rows Removed by Filter: 16
                                       ->  Nested Loop  (cost=7.04..3747.37 rows=11 width=12) (actual time=2.778..30.761 rows=251 loops=2)
                                             ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=2.772..21.608 rows=10544 loops=2)
                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.582..9.937 rows=1 loops=2)
                                                         Filter: ((keyword)::text = 'sequel'::text)
                                                         Rows Removed by Filter: 134169
                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=2.176..10.705 rows=10544 loops=2)
                                                         Recheck Cond: (keyword_id = k.id)
                                                         Heap Blocks: exact=11140
                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.267..1.267 rows=10544 loops=2)
                                                               Index Cond: (keyword_id = k.id)
                                             ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.001..0.001 rows=0 loops=21088)
                                                   Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=2 width=12) (actual time=0.003..0.004 rows=5 loops=199)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: (note IS NULL)
                                       Rows Removed by Filter: 2
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=1021)
                                 Index Cond: (id = mc.company_id)
                                 Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                                 Rows Removed by Filter: 1
                     ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=422)
                           Filter: ((kind)::text = 'production companies'::text)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.45 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=402)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Germany,German}'::text[]))
                     Rows Removed by Filter: 20
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.002..0.002 rows=0 loops=308)
               Index Cond: (id = mk.movie_id)
               Filter: ((production_year >= 2000) AND (production_year <= 2010))
               Rows Removed by Filter: 1
 Planning Time: 14.442 ms
 Execution Time: 69.040 ms
(50 rows)

SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3753.19..3753.20 rows=1 width=96) (actual time=71.851..71.851 rows=1 loops=1)
   ->  Nested Loop  (cost=8.75..3753.18 rows=1 width=118) (actual time=3.064..71.444 rows=1874 loops=1)
         Join Filter: (ml.movie_id = t.id)
         ->  Nested Loop  (cost=8.32..3752.68 rows=1 width=117) (actual time=3.059..68.311 rows=1874 loops=1)
               Join Filter: (ml.movie_id = mi.movie_id)
               ->  Nested Loop  (cost=7.89..3750.82 rows=1 width=113) (actual time=3.044..63.698 rows=402 loops=1)
                     Join Filter: (mc.company_type_id = ct.id)
                     Rows Removed by Join Filter: 20
                     ->  Nested Loop  (cost=7.89..3749.75 rows=1 width=117) (actual time=3.036..63.248 rows=422 loops=1)
                           ->  Nested Loop  (cost=7.47..3749.30 rows=1 width=102) (actual time=2.860..61.238 rows=1021 loops=1)
                                 Join Filter: (ml.movie_id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.04..3748.73 rows=1 width=90) (actual time=2.843..60.347 rows=199 loops=1)
                                       Join Filter: (ml.link_type_id = lt.id)
                                       Rows Removed by Join Filter: 303
                                       ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.004..0.008 rows=2 loops=1)
                                             Filter: ((link)::text ~~ '%follow%'::text)
                                             Rows Removed by Filter: 16
                                       ->  Nested Loop  (cost=7.04..3747.37 rows=11 width=12) (actual time=2.729..30.143 rows=251 loops=2)
                                             ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=2.723..21.028 rows=10544 loops=2)
                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.576..9.968 rows=1 loops=2)
                                                         Filter: ((keyword)::text = 'sequel'::text)
                                                         Rows Removed by Filter: 134169
                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=2.133..10.083 rows=10544 loops=2)
                                                         Recheck Cond: (keyword_id = k.id)
                                                         Heap Blocks: exact=11140
                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.224..1.224 rows=10544 loops=2)
                                                               Index Cond: (keyword_id = k.id)
                                             ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.001..0.001 rows=0 loops=21088)
                                                   Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=2 width=12) (actual time=0.002..0.004 rows=5 loops=199)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: (note IS NULL)
                                       Rows Removed by Filter: 2
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=1021)
                                 Index Cond: (id = mc.company_id)
                                 Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                                 Rows Removed by Filter: 1
                     ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=422)
                           Filter: ((kind)::text = 'production companies'::text)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.82 rows=3 width=4) (actual time=0.008..0.011 rows=5 loops=402)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,English}'::text[]))
                     Rows Removed by Filter: 16
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.001..0.001 rows=1 loops=1874)
               Index Cond: (id = mk.movie_id)
               Filter: ((production_year >= 1950) AND (production_year <= 2010))
 Planning Time: 14.538 ms
 Execution Time: 72.049 ms
(49 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7386.84..7386.85 rows=1 width=96) (actual time=548.460..548.460 rows=1 loops=1)
   ->  Nested Loop  (cost=8.89..7386.83 rows=1 width=42) (actual time=14.955..547.681 rows=2851 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         Rows Removed by Join Filter: 191
         ->  Nested Loop  (cost=8.89..7384.41 rows=1 width=46) (actual time=14.950..538.259 rows=3042 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=8.46..7382.82 rows=1 width=58) (actual time=6.596..396.465 rows=2958 loops=1)
                     Join Filter: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=8.46..7381.73 rows=1 width=62) (actual time=6.582..393.663 rows=2958 loops=1)
                           ->  Nested Loop  (cost=8.04..7381.19 rows=1 width=47) (actual time=6.566..380.231 rows=3374 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.61..7380.61 rows=1 width=35) (actual time=6.537..343.805 rows=2378 loops=1)
                                       Join Filter: (mi_idx.info_type_id = it2.id)
                                       Rows Removed by Join Filter: 6322
                                       ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=1)
                                             Filter: ((info)::text = 'rating'::text)
                                             Rows Removed by Filter: 112
                                       ->  Nested Loop  (cost=7.61..7377.88 rows=25 width=39) (actual time=4.417..342.918 rows=8700 loops=1)
                                             Join Filter: (t.id = mi_idx.movie_id)
                                             ->  Nested Loop  (cost=7.18..7372.53 rows=10 width=25) (actual time=4.394..312.781 rows=4832 loops=1)
                                                   Join Filter: (t.kind_id = kt.id)
                                                   Rows Removed by Join Filter: 2286
                                                   ->  Nested Loop  (cost=7.18..7370.44 rows=35 width=29) (actual time=4.373..310.903 rows=5606 loops=1)
                                                         ->  Nested Loop  (cost=6.75..7304.56 rows=135 width=4) (actual time=4.300..136.310 rows=37091 loops=1)
                                                               ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=0.938..20.727 rows=3 loops=1)
                                                                     Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                     Rows Removed by Filter: 134167
                                                               ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1082.76 rows=299 width=8) (actual time=3.383..37.077 rows=12364 loops=3)
                                                                     Recheck Cond: (keyword_id = k.id)
                                                                     Heap Blocks: exact=26312
                                                                     ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.853..1.853 rows=12364 loops=3)
                                                                           Index Cond: (keyword_id = k.id)
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.004..0.004 rows=0 loops=37091)
                                                               Index Cond: (id = mk.movie_id)
                                                               Filter: (production_year > 2008)
                                                               Rows Removed by Filter: 1
                                                   ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=5606)
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.014..0.016 rows=2 loops=1)
                                                               Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                               Rows Removed by Filter: 5
                                             ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=14) (actual time=0.005..0.006 rows=2 loops=4832)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((info)::text < '7.0'::text)
                                                   Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.013..0.015 rows=1 loops=2378)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                                       Rows Removed by Filter: 10
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.004..0.004 rows=1 loops=3374)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text <> '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.000..0.000 rows=1 loops=2958)
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.56 rows=2 width=8) (actual time=0.043..0.048 rows=1 loops=2958)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Germany,German,USA,American}'::text[]))
                     Rows Removed by Filter: 155
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=3042)
               Filter: ((info)::text = 'countries'::text)
               Rows Removed by Filter: 14
 Planning Time: 37.521 ms
 Execution Time: 548.665 ms
(62 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7385.52..7385.53 rows=1 width=96) (actual time=370.139..370.139 rows=1 loops=1)
   ->  Nested Loop  (cost=8.89..7385.51 rows=1 width=42) (actual time=18.201..370.109 rows=31 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         Rows Removed by Join Filter: 3
         ->  Nested Loop  (cost=8.89..7383.09 rows=1 width=46) (actual time=18.195..369.967 rows=34 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=8.46..7381.50 rows=1 width=58) (actual time=18.106..366.661 rows=50 loops=1)
                     Join Filter: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=8.46..7380.41 rows=1 width=62) (actual time=18.103..366.572 rows=50 loops=1)
                           ->  Nested Loop  (cost=8.04..7379.87 rows=1 width=47) (actual time=18.090..365.946 rows=78 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.61..7379.29 rows=1 width=35) (actual time=8.089..341.326 rows=1615 loops=1)
                                       Join Filter: (mi_idx.info_type_id = it2.id)
                                       Rows Removed by Join Filter: 4362
                                       ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=1)
                                             Filter: ((info)::text = 'rating'::text)
                                             Rows Removed by Filter: 112
                                       ->  Nested Loop  (cost=7.61..7376.61 rows=21 width=39) (actual time=4.586..340.652 rows=5977 loops=1)
                                             Join Filter: (t.id = mi_idx.movie_id)
                                             ->  Nested Loop  (cost=7.18..7372.33 rows=8 width=25) (actual time=4.565..318.497 rows=3517 loops=1)
                                                   Join Filter: (t.kind_id = kt.id)
                                                   Rows Removed by Join Filter: 1618
                                                   ->  Nested Loop  (cost=7.18..7370.44 rows=28 width=29) (actual time=4.548..317.099 rows=4040 loops=1)
                                                         ->  Nested Loop  (cost=6.75..7304.56 rows=135 width=4) (actual time=4.473..145.253 rows=37091 loops=1)
                                                               ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.123..20.876 rows=3 loops=1)
                                                                     Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                     Rows Removed by Filter: 134167
                                                               ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1082.76 rows=299 width=8) (actual time=3.382..39.921 rows=12364 loops=3)
                                                                     Recheck Cond: (keyword_id = k.id)
                                                                     Heap Blocks: exact=26312
                                                                     ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.847..1.847 rows=12364 loops=3)
                                                                           Index Cond: (keyword_id = k.id)
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.004..0.004 rows=0 loops=37091)
                                                               Index Cond: (id = mk.movie_id)
                                                               Filter: (production_year > 2009)
                                                               Rows Removed by Filter: 1
                                                   ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=4040)
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.011..0.013 rows=2 loops=1)
                                                               Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                               Rows Removed by Filter: 5
                                             ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=14) (actual time=0.005..0.006 rows=2 loops=3517)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((info)::text < '7.0'::text)
                                                   Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.015..0.015 rows=0 loops=1615)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                                       Rows Removed by Filter: 12
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.007..0.007 rows=1 loops=78)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text <> '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.001..0.001 rows=1 loops=50)
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.56 rows=2 width=8) (actual time=0.061..0.065 rows=1 loops=50)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Germany,German,USA,American}'::text[]))
                     Rows Removed by Filter: 53
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=34)
               Filter: ((info)::text = 'countries'::text)
               Rows Removed by Filter: 16
 Planning Time: 38.103 ms
 Execution Time: 370.370 ms
(62 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7390.61..7390.62 rows=1 width=96) (actual time=2362.947..2362.947 rows=1 loops=1)
   ->  Nested Loop  (cost=8.89..7390.60 rows=1 width=42) (actual time=6.135..2357.513 rows=21489 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         Rows Removed by Join Filter: 3123
         ->  Nested Loop  (cost=8.89..7388.18 rows=1 width=46) (actual time=6.130..2272.058 rows=24612 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=8.46..7386.28 rows=1 width=58) (actual time=6.068..550.255 rows=23425 loops=1)
                     Join Filter: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=8.46..7385.19 rows=1 width=62) (actual time=6.054..528.918 rows=23425 loops=1)
                           ->  Nested Loop  (cost=8.04..7384.64 rows=1 width=47) (actual time=6.041..458.524 rows=25316 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.61..7384.06 rows=1 width=35) (actual time=4.602..371.548 rows=5949 loops=1)
                                       Join Filter: (mi_idx.info_type_id = it2.id)
                                       Rows Removed by Join Filter: 11839
                                       ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.012..0.014 rows=1 loops=1)
                                             Filter: ((info)::text = 'rating'::text)
                                             Rows Removed by Filter: 112
                                       ->  Nested Loop  (cost=7.61..7381.10 rows=44 width=39) (actual time=4.586..369.642 rows=17788 loops=1)
                                             Join Filter: (t.id = mi_idx.movie_id)
                                             ->  Nested Loop  (cost=7.18..7373.07 rows=15 width=25) (actual time=4.564..321.579 rows=8073 loops=1)
                                                   Join Filter: (t.kind_id = kt.id)
                                                   Rows Removed by Join Filter: 4332
                                                   ->  Nested Loop  (cost=7.18..7370.44 rows=54 width=29) (actual time=4.499..318.204 rows=9739 loops=1)
                                                         ->  Nested Loop  (cost=6.75..7304.56 rows=135 width=4) (actual time=4.473..141.011 rows=37091 loops=1)
                                                               ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.124..20.854 rows=3 loops=1)
                                                                     Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                     Rows Removed by Filter: 134167
                                                               ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1082.76 rows=299 width=8) (actual time=3.388..38.613 rows=12364 loops=3)
                                                                     Recheck Cond: (keyword_id = k.id)
                                                                     Heap Blocks: exact=26312
                                                                     ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.862..1.862 rows=12364 loops=3)
                                                                           Index Cond: (keyword_id = k.id)
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.005..0.005 rows=0 loops=37091)
                                                               Index Cond: (id = mk.movie_id)
                                                               Filter: (production_year > 2005)
                                                               Rows Removed by Filter: 1
                                                   ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=9739)
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.011..0.012 rows=2 loops=1)
                                                               Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                               Rows Removed by Filter: 5
                                             ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=14) (actual time=0.005..0.005 rows=2 loops=8073)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((info)::text < '8.5'::text)
                                                   Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.009..0.014 rows=4 loops=5949)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                                       Rows Removed by Filter: 8
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=25316)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text <> '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.000..0.000 rows=1 loops=23425)
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.061..0.073 rows=1 loops=23425)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                     Rows Removed by Filter: 180
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=24612)
               Filter: ((info)::text = 'countries'::text)
               Rows Removed by Filter: 20
 Planning Time: 38.519 ms
 Execution Time: 2363.179 ms
(62 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7390.53..7390.54 rows=1 width=96) (actual time=1045.166..1045.166 rows=1 loops=1)
   ->  Nested Loop  (cost=8.89..7390.53 rows=1 width=42) (actual time=6.292..1035.236 rows=46281 loops=1)
         Join Filter: (mc.company_type_id = ct.id)
         Rows Removed by Join Filter: 4783
         ->  Nested Loop  (cost=8.89..7389.44 rows=1 width=46) (actual time=6.276..997.997 rows=46281 loops=1)
               ->  Nested Loop  (cost=8.47..7388.99 rows=1 width=31) (actual time=4.668..835.167 rows=64848 loops=1)
                     Join Filter: (t.id = mc.movie_id)
                     ->  Nested Loop  (cost=8.04..7388.39 rows=1 width=39) (actual time=4.654..777.300 rows=4115 loops=1)
                           Join Filter: (mi.info_type_id = it1.id)
                           Rows Removed by Join Filter: 594
                           ->  Nested Loop  (cost=8.04..7385.96 rows=1 width=43) (actual time=4.649..759.945 rows=4709 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=7.61..7384.06 rows=1 width=35) (actual time=4.599..365.698 rows=5949 loops=1)
                                       Join Filter: (mi_idx.info_type_id = it2.id)
                                       Rows Removed by Join Filter: 11839
                                       ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=1)
                                             Filter: ((info)::text = 'rating'::text)
                                             Rows Removed by Filter: 112
                                       ->  Nested Loop  (cost=7.61..7381.10 rows=44 width=39) (actual time=4.583..363.813 rows=17788 loops=1)
                                             Join Filter: (t.id = mi_idx.movie_id)
                                             ->  Nested Loop  (cost=7.18..7373.07 rows=15 width=25) (actual time=4.568..316.532 rows=8073 loops=1)
                                                   Join Filter: (t.kind_id = kt.id)
                                                   Rows Removed by Join Filter: 4332
                                                   ->  Nested Loop  (cost=7.18..7370.44 rows=54 width=29) (actual time=4.515..313.207 rows=9739 loops=1)
                                                         ->  Nested Loop  (cost=6.75..7304.56 rows=135 width=4) (actual time=4.496..138.660 rows=37091 loops=1)
                                                               ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.163..20.918 rows=3 loops=1)
                                                                     Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                     Rows Removed by Filter: 134167
                                                               ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1082.76 rows=299 width=8) (actual time=3.378..37.868 rows=12364 loops=3)
                                                                     Recheck Cond: (keyword_id = k.id)
                                                                     Heap Blocks: exact=26312
                                                                     ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.849..1.849 rows=12364 loops=3)
                                                                           Index Cond: (keyword_id = k.id)
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.004..0.004 rows=0 loops=37091)
                                                               Index Cond: (id = mk.movie_id)
                                                               Filter: (production_year > 2005)
                                                               Rows Removed by Filter: 1
                                                   ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=9739)
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.010..0.012 rows=2 loops=1)
                                                               Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                               Rows Removed by Filter: 5
                                             ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=14) (actual time=0.005..0.005 rows=2 loops=8073)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((info)::text < '8.5'::text)
                                                   Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.057..0.066 rows=1 loops=5949)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                                       Rows Removed by Filter: 71
                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=4709)
                                 Filter: ((info)::text = 'countries'::text)
                                 Rows Removed by Filter: 20
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=12) (actual time=0.006..0.011 rows=16 loops=4115)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=64848)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text <> '[us]'::text)
                     Rows Removed by Filter: 0
         ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.000..0.000 rows=1 loops=46281)
 Planning Time: 39.716 ms
 Execution Time: 1045.405 ms
(61 rows)

SET
                                                                                                    QUERY PLAN                                                                                                    
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=57942.47..57942.48 rows=1 width=64) (actual time=257.214..257.214 rows=1 loops=1)
   ->  Nested Loop  (cost=4238.90..57942.46 rows=1 width=65) (actual time=227.368..257.091 rows=618 loops=1)
         ->  Nested Loop  (cost=4238.48..57942.02 rows=1 width=69) (actual time=227.339..254.591 rows=618 loops=1)
               ->  Nested Loop  (cost=4238.35..57941.87 rows=1 width=73) (actual time=227.278..253.913 rows=618 loops=1)
                     ->  Nested Loop  (cost=4237.93..57941.42 rows=1 width=77) (actual time=227.253..252.875 rows=618 loops=1)
                           Join Filter: (t.id = mc.movie_id)
                           ->  Nested Loop  (cost=4237.50..57940.82 rows=1 width=85) (actual time=227.220..251.676 rows=615 loops=1)
                                 ->  Gather  (cost=4237.06..57938.99 rows=1 width=77) (actual time=227.189..255.200 rows=5 loops=1)
                                       Workers Planned: 2
                                       Workers Launched: 2
                                       ->  Nested Loop  (cost=3237.06..56938.89 rows=1 width=77) (actual time=244.569..252.569 rows=2 loops=3)
                                             ->  Nested Loop  (cost=3236.92..56938.62 rows=1 width=81) (actual time=244.563..252.560 rows=2 loops=3)
                                                   ->  Hash Join  (cost=3236.49..54660.05 rows=1093 width=73) (actual time=132.574..189.044 rows=344 loops=3)
                                                         Hash Cond: (t.kind_id = kt.id)
                                                         ->  Hash Join  (cost=3235.39..54626.70 rows=7653 width=29) (actual time=29.333..188.833 rows=694 loops=3)
                                                               Hash Cond: (t.id = cc.movie_id)
                                                               ->  Parallel Seq Scan on title t  (cost=0.00..49166.29 rows=572932 width=25) (actual time=0.019..112.585 rows=460484 loops=3)
                                                                     Filter: (production_year > 2000)
                                                                     Rows Removed by Filter: 382286
                                                               ->  Hash  (cost=2813.24..2813.24 rows=33772 width=4) (actual time=28.740..28.740 rows=24592 loops=3)
                                                                     Buckets: 65536  Batches: 1  Memory Usage: 1377kB
                                                                     ->  Hash Join  (cost=1.06..2813.24 rows=33772 width=4) (actual time=0.036..25.449 rows=24592 loops=3)
                                                                           Hash Cond: (cc.status_id = cct1.id)
                                                                           ->  Seq Scan on complete_cast cc  (cost=0.00..2081.86 rows=135086 width=8) (actual time=0.011..12.857 rows=135086 loops=3)
                                                                           ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=3)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=3)
                                                                                       Filter: ((kind)::text = 'complete+verified'::text)
                                                                                       Rows Removed by Filter: 3
                                                         ->  Hash  (cost=1.09..1.09 rows=1 width=52) (actual time=0.022..0.022 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=52) (actual time=0.015..0.017 rows=1 loops=3)
                                                                     Filter: ((kind)::text = 'movie'::text)
                                                                     Rows Removed by Filter: 6
                                                   ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.07 rows=1 width=8) (actual time=0.184..0.184 rows=0 loops=1033)
                                                         Index Cond: (movie_id = t.id)
                                                         Filter: ((info IS NOT NULL) AND ((note)::text ~~ '%internet%'::text) AND (((info)::text ~~ 'USA:% 199%'::text) OR ((info)::text ~~ 'USA:% 200%'::text)))
                                                         Rows Removed by Filter: 211
                                             ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.20 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=5)
                                                   Index Cond: (id = mi.info_type_id)
                                                   Filter: ((info)::text = 'release dates'::text)
                                 ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.36 rows=47 width=8) (actual time=0.013..0.036 rows=123 loops=5)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=12) (actual time=0.001..0.002 rows=1 loops=615)
                                 Index Cond: (movie_id = mk.movie_id)
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=618)
                           Index Cond: (id = mc.company_id)
                           Filter: ((country_code)::text = '[us]'::text)
               ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=618)
                     Index Cond: (id = mc.company_type_id)
                     Heap Fetches: 618
         ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=618)
               Index Cond: (id = mk.keyword_id)
               Heap Fetches: 618
 Planning Time: 37.538 ms
 Execution Time: 261.379 ms
(56 rows)

SET
                                                                                              QUERY PLAN                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7387.30..7387.31 rows=1 width=64) (actual time=76.016..76.016 rows=1 loops=1)
   ->  Nested Loop  (cost=8.88..7387.29 rows=1 width=65) (actual time=20.911..75.998 rows=16 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         ->  Nested Loop  (cost=8.88..7384.87 rows=1 width=69) (actual time=20.904..75.937 rows=16 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=8.45..7383.30 rows=1 width=81) (actual time=4.160..56.503 rows=315 loops=1)
                     Join Filter: (mc.company_type_id = ct.id)
                     Rows Removed by Join Filter: 140
                     ->  Nested Loop  (cost=8.45..7382.21 rows=1 width=85) (actual time=4.145..56.158 rows=315 loops=1)
                           ->  Nested Loop  (cost=8.03..7380.87 rows=3 width=89) (actual time=4.084..50.446 rows=1218 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.60..7378.46 rows=4 width=77) (actual time=4.056..48.836 rows=60 loops=1)
                                       Join Filter: (cc.status_id = cct1.id)
                                       Rows Removed by Join Filter: 81
                                       ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.011..0.011 rows=1 loops=1)
                                             Filter: ((kind)::text = 'complete+verified'::text)
                                             Rows Removed by Filter: 3
                                       ->  Nested Loop  (cost=7.60..7377.22 rows=15 width=81) (actual time=4.031..48.799 rows=141 loops=1)
                                             ->  Nested Loop  (cost=7.18..7372.44 rows=10 width=73) (actual time=3.803..46.454 rows=401 loops=1)
                                                   Join Filter: (t.kind_id = kt.id)
                                                   Rows Removed by Join Filter: 156
                                                   ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=52) (actual time=0.006..0.007 rows=1 loops=1)
                                                         Filter: ((kind)::text = 'movie'::text)
                                                         Rows Removed by Filter: 6
                                                   ->  Nested Loop  (cost=7.18..7370.44 rows=73 width=29) (actual time=0.952..46.355 rows=557 loops=1)
                                                         ->  Nested Loop  (cost=6.75..7304.56 rows=135 width=4) (actual time=0.930..31.766 rows=1133 loops=1)
                                                               ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=0.711..23.548 rows=4 loops=1)
                                                                     Filter: ((keyword)::text = ANY ('{nerd,loner,alienation,dignity}'::text[]))
                                                                     Rows Removed by Filter: 134166
                                                               ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1082.76 rows=299 width=8) (actual time=0.102..2.017 rows=283 loops=4)
                                                                     Recheck Cond: (keyword_id = k.id)
                                                                     Heap Blocks: exact=1083
                                                                     ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.059..0.059 rows=283 loops=4)
                                                                           Index Cond: (keyword_id = k.id)
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.013..0.013 rows=0 loops=1133)
                                                               Index Cond: (id = mk.movie_id)
                                                               Filter: (production_year > 2000)
                                                               Rows Removed by Filter: 1
                                             ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=8) (actual time=0.005..0.006 rows=0 loops=401)
                                                   Index Cond: (movie_id = t.id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=12) (actual time=0.014..0.023 rows=20 loops=60)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=1218)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.000..0.000 rows=1 loops=315)
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.56 rows=1 width=8) (actual time=0.061..0.061 rows=0 loops=315)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: (((note)::text ~~ '%internet%'::text) AND ((info)::text ~~ 'USA:% 200%'::text))
                     Rows Removed by Filter: 268
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=16)
               Filter: ((info)::text = 'release dates'::text)
               Rows Removed by Filter: 15
 Planning Time: 37.317 ms
 Execution Time: 76.238 ms
(56 rows)

SET
                                                                                                       QUERY PLAN                                                                                                       
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=67112.66..67112.67 rows=1 width=64) (actual time=359.219..359.219 rows=1 loops=1)
   ->  Gather  (cost=67112.44..67112.65 rows=2 width=64) (actual time=359.048..366.123 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=66112.44..66112.45 rows=1 width=64) (actual time=356.183..356.184 rows=1 loops=3)
               ->  Nested Loop  (cost=3238.95..66112.43 rows=2 width=65) (actual time=277.680..356.137 rows=209 loops=3)
                     ->  Nested Loop  (cost=3238.53..66111.55 rows=2 width=69) (actual time=277.643..355.378 rows=209 loops=3)
                           ->  Nested Loop  (cost=3238.10..66109.74 rows=1 width=81) (actual time=277.608..355.279 rows=2 loops=3)
                                 ->  Nested Loop  (cost=3237.97..66109.58 rows=1 width=85) (actual time=277.577..355.245 rows=2 loops=3)
                                       ->  Nested Loop  (cost=3237.55..66109.14 rows=1 width=89) (actual time=277.541..355.198 rows=2 loops=3)
                                             ->  Nested Loop  (cost=3237.12..66108.51 rows=1 width=77) (actual time=277.502..355.153 rows=2 loops=3)
                                                   ->  Nested Loop  (cost=3236.98..66107.43 rows=5 width=81) (actual time=277.470..355.118 rows=2 loops=3)
                                                         ->  Hash Join  (cost=3236.54..55258.37 rows=5532 width=73) (actual time=135.119..203.652 rows=1684 loops=3)
                                                               Hash Cond: (t.kind_id = kt.id)
                                                               ->  Hash Join  (cost=3235.39..55216.42 rows=9681 width=29) (actual time=28.693..203.100 rows=2141 loops=3)
                                                                     Hash Cond: (t.id = cc.movie_id)
                                                                     ->  Parallel Seq Scan on title t  (cost=0.00..49166.29 rows=724782 width=25) (actual time=0.024..114.768 rows=583011 loops=3)
                                                                           Filter: (production_year > 1990)
                                                                           Rows Removed by Filter: 259760
                                                                     ->  Hash  (cost=2813.24..2813.24 rows=33772 width=4) (actual time=28.140..28.140 rows=24592 loops=3)
                                                                           Buckets: 65536  Batches: 1  Memory Usage: 1377kB
                                                                           ->  Hash Join  (cost=1.06..2813.24 rows=33772 width=4) (actual time=0.033..24.877 rows=24592 loops=3)
                                                                                 Hash Cond: (cc.status_id = cct1.id)
                                                                                 ->  Seq Scan on complete_cast cc  (cost=0.00..2081.86 rows=135086 width=8) (actual time=0.011..12.329 rows=135086 loops=3)
                                                                                 ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=3)
                                                                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                       ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=3)
                                                                                             Filter: ((kind)::text = 'complete+verified'::text)
                                                                                             Rows Removed by Filter: 3
                                                               ->  Hash  (cost=1.10..1.10 rows=4 width=52) (actual time=0.022..0.022 rows=4 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on kind_type kt  (cost=0.00..1.10 rows=4 width=52) (actual time=0.012..0.015 rows=4 loops=3)
                                                                           Filter: ((kind)::text = ANY ('{movie,"tv movie","video movie","video game"}'::text[]))
                                                                           Rows Removed by Filter: 3
                                                         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.95 rows=1 width=8) (actual time=0.090..0.090 rows=0 loops=5053)
                                                               Index Cond: (movie_id = t.id)
                                                               Filter: ((info IS NOT NULL) AND ((note)::text ~~ '%internet%'::text) AND (((info)::text ~~ 'USA:% 199%'::text) OR ((info)::text ~~ 'USA:% 200%'::text)))
                                                               Rows Removed by Filter: 123
                                                   ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.20 rows=1 width=4) (actual time=0.016..0.016 rows=1 loops=6)
                                                         Index Cond: (id = mi.info_type_id)
                                                         Filter: ((info)::text = 'release dates'::text)
                                             ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.58 rows=5 width=12) (actual time=0.020..0.021 rows=1 loops=6)
                                                   Index Cond: (movie_id = t.id)
                                       ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.019..0.019 rows=1 loops=7)
                                             Index Cond: (id = mc.company_id)
                                             Filter: ((country_code)::text = '[us]'::text)
                                 ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.013..0.013 rows=1 loops=7)
                                       Index Cond: (id = mc.company_type_id)
                                       Heap Fetches: 7
                           ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.34 rows=47 width=8) (actual time=0.016..0.031 rows=90 loops=7)
                                 Index Cond: (movie_id = t.id)
                     ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=628)
                           Index Cond: (id = mk.keyword_id)
                           Heap Fetches: 628
 Planning Time: 36.513 ms
 Execution Time: 366.440 ms
(56 rows)

SET
                                                                                                  QUERY PLAN                                                                                                  
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=6625.30..6625.31 rows=1 width=96) (actual time=444.502..444.502 rows=1 loops=1)
   ->  Nested Loop  (cost=10.31..6625.29 rows=1 width=48) (actual time=82.071..444.414 rows=275 loops=1)
         ->  Nested Loop  (cost=9.88..6623.49 rows=1 width=41) (actual time=2.285..431.006 rows=6518 loops=1)
               Join Filter: (it.id = mi.info_type_id)
               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.008..0.014 rows=1 loops=1)
                     Filter: ((info)::text = 'release dates'::text)
                     Rows Removed by Filter: 112
               ->  Nested Loop  (cost=9.88..6621.07 rows=1 width=45) (actual time=2.276..430.067 rows=6518 loops=1)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=9.45..6555.77 rows=2 width=57) (actual time=2.228..356.920 rows=4044 loops=1)
                           ->  Nested Loop  (cost=9.02..6553.68 rows=1 width=53) (actual time=2.195..350.322 rows=1578 loops=1)
                                 ->  Nested Loop  (cost=8.59..6551.98 rows=1 width=41) (actual time=2.161..343.844 rows=1608 loops=1)
                                       Join Filter: (rt.id = ci.role_id)
                                       Rows Removed by Join Filter: 5708
                                       ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.010..0.013 rows=1 loops=1)
                                             Filter: ((role)::text = 'actress'::text)
                                             Rows Removed by Filter: 11
                                       ->  Nested Loop  (cost=8.59..6550.80 rows=2 width=45) (actual time=2.130..343.206 rows=7316 loops=1)
                                             Join Filter: (t.id = ci.movie_id)
                                             ->  Nested Loop  (cost=8.03..6311.77 rows=6 width=29) (actual time=1.228..157.433 rows=1576 loops=1)
                                                   ->  Nested Loop  (cost=7.61..6286.76 rows=17 width=33) (actual time=1.207..135.128 rows=5566 loops=1)
                                                         Join Filter: (t.id = mc.movie_id)
                                                         ->  Nested Loop  (cost=7.18..6231.61 rows=16 width=25) (actual time=1.183..126.795 rows=495 loops=1)
                                                               ->  Nested Loop  (cost=6.75..6072.14 rows=101 width=4) (actual time=1.009..59.082 rows=9696 loops=1)
                                                                     ->  Seq Scan on keyword k  (cost=0.00..2793.84 rows=3 width=4) (actual time=0.024..18.960 rows=3 loops=1)
                                                                           Filter: ((keyword)::text = ANY ('{hero,martial-arts,hand-to-hand-combat}'::text[]))
                                                                           Rows Removed by Filter: 134167
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1089.78 rows=299 width=8) (actual time=0.943..12.962 rows=3232 loops=3)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=7446
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.553..0.553 rows=3232 loops=3)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using title_pkey on title t  (cost=0.43..1.58 rows=1 width=21) (actual time=0.007..0.007 rows=0 loops=9696)
                                                                     Index Cond: (id = mk.movie_id)
                                                                     Filter: (production_year > 2010)
                                                                     Rows Removed by Filter: 1
                                                         ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..3.38 rows=5 width=8) (actual time=0.009..0.014 rows=11 loops=495)
                                                               Index Cond: (movie_id = mk.movie_id)
                                                   ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.47 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=5566)
                                                         Index Cond: (id = mc.company_id)
                                                         Filter: ((country_code)::text = '[us]'::text)
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..39.83 rows=1 width=16) (actual time=0.079..0.117 rows=5 loops=1576)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                   Rows Removed by Filter: 136
                                 ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..1.70 rows=1 width=20) (actual time=0.004..0.004 rows=1 loops=1608)
                                       Index Cond: (id = ci.person_role_id)
                           ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.08 rows=2 width=4) (actual time=0.003..0.004 rows=3 loops=1578)
                                 Index Cond: (person_id = ci.person_id)
                                 Heap Fetches: 4044
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..32.63 rows=1 width=8) (actual time=0.004..0.018 rows=2 loops=4044)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%201%'::text) OR ((info)::text ~~ 'USA:%201%'::text)))
                           Rows Removed by Filter: 57
         ->  Index Scan using name_pkey on name n  (cost=0.43..1.80 rows=1 width=19) (actual time=0.002..0.002 rows=0 loops=6518)
               Index Cond: (id = ci.person_id)
               Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
               Rows Removed by Filter: 1
 Planning Time: 81.454 ms
 Execution Time: 444.753 ms
(61 rows)

SET
                                                                                                            QUERY PLAN                                                                                                            
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=6509.33..6509.34 rows=1 width=96) (actual time=27.519..27.519 rows=1 loops=1)
   ->  Nested Loop  (cost=1004.27..6509.32 rows=1 width=48) (actual time=10.396..27.497 rows=45 loops=1)
         ->  Nested Loop  (cost=1003.84..6507.62 rows=1 width=36) (actual time=10.377..27.408 rows=45 loops=1)
               Join Filter: (n.id = an.person_id)
               ->  Nested Loop  (cost=1003.42..6505.51 rows=1 width=44) (actual time=10.352..27.339 rows=9 loops=1)
                     ->  Nested Loop  (cost=1003.28..6505.34 rows=1 width=48) (actual time=10.331..27.307 rows=9 loops=1)
                           ->  Nested Loop  (cost=1002.86..6503.54 rows=1 width=29) (actual time=9.621..26.009 rows=244 loops=1)
                                 Join Filter: (t.id = ci.movie_id)
                                 ->  Nested Loop  (cost=1002.29..6463.70 rows=1 width=33) (actual time=9.589..24.746 rows=9 loops=1)
                                       ->  Nested Loop  (cost=1002.15..6463.52 rows=1 width=37) (actual time=9.581..24.723 rows=9 loops=1)
                                             Join Filter: (t.id = mi.movie_id)
                                             ->  Gather  (cost=1001.71..6430.87 rows=1 width=29) (actual time=8.558..25.632 rows=6 loops=1)
                                                   Workers Planned: 1
                                                   Workers Launched: 1
                                                   ->  Nested Loop  (cost=1.71..5430.77 rows=1 width=29) (actual time=16.188..24.073 rows=3 loops=2)
                                                         ->  Nested Loop  (cost=1.29..5428.89 rows=1 width=33) (actual time=16.144..23.730 rows=42 loops=2)
                                                               Join Filter: (t.id = mk.movie_id)
                                                               ->  Nested Loop  (cost=0.86..5425.84 rows=1 width=25) (actual time=16.129..23.681 rows=2 loops=2)
                                                                     ->  Nested Loop  (cost=0.43..5416.18 rows=6 width=4) (actual time=15.940..23.005 rows=50 loops=2)
                                                                           ->  Parallel Seq Scan on company_name cn  (cost=0.00..5068.50 rows=1 width=4) (actual time=15.920..22.728 rows=0 loops=2)
                                                                                 Filter: (((country_code)::text = '[us]'::text) AND ((name)::text = 'DreamWorks Animation'::text))
                                                                                 Rows Removed by Filter: 117498
                                                                           ->  Index Scan using company_id_movie_companies on movie_companies mc  (cost=0.43..346.37 rows=130 width=8) (actual time=0.037..0.538 rows=99 loops=1)
                                                                                 Index Cond: (company_id = cn.id)
                                                                     ->  Index Scan using title_pkey on title t  (cost=0.43..1.60 rows=1 width=21) (actual time=0.013..0.013 rows=0 loops=99)
                                                                           Index Cond: (id = mc.movie_id)
                                                                           Filter: ((production_year > 2010) AND ((title)::text ~~ 'Kung Fu Panda%'::text))
                                                                           Rows Removed by Filter: 1
                                                               ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..2.47 rows=47 width=8) (actual time=0.014..0.020 rows=21 loops=4)
                                                                     Index Cond: (movie_id = mc.movie_id)
                                                         ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..1.46 rows=1 width=4) (actual time=0.008..0.008 rows=0 loops=83)
                                                               Index Cond: (id = mk.keyword_id)
                                                               Filter: ((keyword)::text = ANY ('{hero,martial-arts,hand-to-hand-combat,computer-animated-movie}'::text[]))
                                                               Rows Removed by Filter: 1
                                             ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..32.63 rows=1 width=8) (actual time=0.027..0.053 rows=2 loops=6)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%201%'::text) OR ((info)::text ~~ 'USA:%201%'::text)))
                                                   Rows Removed by Filter: 89
                                       ->  Index Scan using info_type_pkey on info_type it  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=9)
                                             Index Cond: (id = mi.info_type_id)
                                             Filter: ((info)::text = 'release dates'::text)
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..39.83 rows=1 width=16) (actual time=0.009..0.136 rows=27 loops=9)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                       Rows Removed by Filter: 91
                           ->  Index Scan using name_pkey on name n  (cost=0.43..1.80 rows=1 width=19) (actual time=0.005..0.005 rows=0 loops=244)
                                 Index Cond: (id = ci.person_id)
                                 Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                 Rows Removed by Filter: 1
                     ->  Index Scan using role_type_pkey on role_type rt  (cost=0.14..0.16 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=9)
                           Index Cond: (id = ci.role_id)
                           Filter: ((role)::text = 'actress'::text)
               ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.08 rows=2 width=4) (actual time=0.004..0.007 rows=5 loops=9)
                     Index Cond: (person_id = ci.person_id)
                     Heap Fetches: 45
         ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..1.70 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=45)
               Index Cond: (id = ci.person_role_id)
 Planning Time: 79.778 ms
 Execution Time: 29.011 ms
(59 rows)

SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7497.91..7497.92 rows=1 width=128) (actual time=2631.577..2631.577 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.02..7497.90 rows=1 width=80) (actual time=24.955..2629.322 rows=4407 loops=1)
         Join Filter: (mi.movie_id = t.id)
         ->  Nested Loop  (cost=1011.59..7497.08 rows=1 width=79) (actual time=24.921..2595.702 rows=4407 loops=1)
               ->  Nested Loop  (cost=1011.16..7496.06 rows=1 width=68) (actual time=12.475..2524.124 rows=7112 loops=1)
                     ->  Nested Loop  (cost=1011.02..7495.88 rows=1 width=72) (actual time=12.466..2511.589 rows=7740 loops=1)
                           Join Filter: (mi.movie_id = ci.movie_id)
                           ->  Gather  (cost=1010.46..7466.93 rows=1 width=64) (actual time=6.258..630.716 rows=12260 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Nested Loop  (cost=10.46..6466.83 rows=1 width=64) (actual time=6.029..834.682 rows=4087 loops=3)
                                       Join Filter: (mi_idx.movie_id = mi.movie_id)
                                       ->  Hash Join  (cost=10.02..6431.17 rows=2 width=14) (actual time=4.622..192.850 rows=16920 loops=3)
                                             Hash Cond: (mi_idx.info_type_id = it2.id)
                                             ->  Nested Loop  (cost=7.60..6428.17 rows=211 width=18) (actual time=4.537..184.968 rows=50907 loops=3)
                                                   ->  Nested Loop  (cost=7.17..6372.12 rows=70 width=4) (actual time=4.499..92.881 rows=20699 loops=3)
                                                         ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4207.64 rows=2 width=4) (actual time=0.223..19.759 rows=2 loops=3)
                                                               Filter: ((keyword)::text = ANY ('{murder,blood,gore,death,female-nudity}'::text[]))
                                                               Rows Removed by Filter: 44722
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1079.25 rows=299 width=8) (actual time=3.456..42.346 rows=12419 loops=5)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=12389
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=2.008..2.008 rows=12419 loops=5)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.77 rows=3 width=14) (actual time=0.003..0.004 rows=2 loops=62096)
                                                         Index Cond: (movie_id = mk.movie_id)
                                             ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.026..0.026 rows=1 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.020..0.022 rows=1 loops=3)
                                                         Filter: ((info)::text = 'votes'::text)
                                                         Rows Removed by Filter: 112
                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..17.82 rows=1 width=50) (actual time=0.037..0.038 rows=0 loops=50760)
                                             Index Cond: (movie_id = mk.movie_id)
                                             Filter: ((info)::text = 'Horror'::text)
                                             Rows Removed by Filter: 56
                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..28.93 rows=1 width=8) (actual time=0.125..0.153 rows=1 loops=12260)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                 Rows Removed by Filter: 47
                     ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=7740)
                           Index Cond: (id = mi.info_type_id)
                           Filter: ((info)::text = 'genres'::text)
                           Rows Removed by Filter: 0
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.02 rows=1 width=19) (actual time=0.010..0.010 rows=1 loops=7112)
                     Index Cond: (id = ci.person_id)
                     Filter: ((gender)::text = 'm'::text)
                     Rows Removed by Filter: 0
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.81 rows=1 width=21) (actual time=0.007..0.007 rows=1 loops=4407)
               Index Cond: (id = mk.movie_id)
 Planning Time: 12.869 ms
 Execution Time: 2631.975 ms
(51 rows)

SET
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7478.04..7478.05 rows=1 width=128) (actual time=245.877..245.878 rows=1 loops=1)
   ->  Nested Loop  (cost=1009.74..7478.03 rows=1 width=80) (actual time=142.242..245.859 rows=6 loops=1)
         ->  Nested Loop  (cost=1009.31..7477.01 rows=1 width=69) (actual time=142.213..245.775 rows=6 loops=1)
               ->  Nested Loop  (cost=1009.17..7476.82 rows=1 width=73) (actual time=142.203..245.741 rows=18 loops=1)
                     Join Filter: (t.id = mi_idx.movie_id)
                     ->  Nested Loop  (cost=1008.74..7476.02 rows=1 width=79) (actual time=142.165..245.663 rows=6 loops=1)
                           ->  Nested Loop  (cost=1008.60..7475.83 rows=1 width=83) (actual time=142.143..245.629 rows=6 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=1008.16..7458.00 rows=1 width=33) (actual time=142.042..245.318 rows=6 loops=1)
                                       Join Filter: (t.id = ci.movie_id)
                                       ->  Gather  (cost=1007.60..7429.06 rows=1 width=25) (actual time=141.761..248.975 rows=9 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Nested Loop  (cost=7.60..6428.96 rows=1 width=25) (actual time=148.640..199.899 rows=3 loops=3)
                                                   ->  Nested Loop  (cost=7.17..6372.12 rows=70 width=4) (actual time=4.394..96.367 rows=20699 loops=3)
                                                         ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4207.64 rows=2 width=4) (actual time=0.160..23.230 rows=2 loops=3)
                                                               Filter: ((keyword)::text = ANY ('{murder,blood,gore,death,female-nudity}'::text[]))
                                                               Rows Removed by Filter: 44722
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1079.25 rows=299 width=8) (actual time=3.437..42.575 rows=12419 loops=5)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=12389
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.991..1.991 rows=12419 loops=5)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.81 rows=1 width=21) (actual time=0.005..0.005 rows=0 loops=62096)
                                                         Index Cond: (id = mk.movie_id)
                                                         Filter: ((production_year > 2010) AND ((title)::text ~~ 'Vampire%'::text))
                                                         Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..28.93 rows=1 width=8) (actual time=0.068..0.081 rows=1 loops=9)
                                             Index Cond: (movie_id = mk.movie_id)
                                             Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                             Rows Removed by Filter: 21
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..17.82 rows=1 width=50) (actual time=0.050..0.051 rows=1 loops=6)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = 'Horror'::text)
                                       Rows Removed by Filter: 20
                           ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=6)
                                 Index Cond: (id = mi.info_type_id)
                                 Filter: ((info)::text = 'genres'::text)
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.77 rows=3 width=14) (actual time=0.011..0.011 rows=3 loops=6)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=18)
                     Index Cond: (id = mi_idx.info_type_id)
                     Filter: ((info)::text = 'votes'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using name_pkey on name n  (cost=0.43..1.02 rows=1 width=19) (actual time=0.013..0.013 rows=1 loops=6)
               Index Cond: (id = ci.person_id)
               Filter: ((gender)::text = 'm'::text)
 Planning Time: 13.681 ms
 Execution Time: 250.527 ms
(49 rows)

SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8700.85..8700.86 rows=1 width=128) (actual time=9173.057..9173.057 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.02..8700.84 rows=1 width=80) (actual time=7.828..9161.275 rows=26153 loops=1)
         Join Filter: (mi.movie_id = t.id)
         ->  Nested Loop  (cost=1011.59..8700.02 rows=1 width=79) (actual time=7.809..9038.697 rows=26153 loops=1)
               ->  Nested Loop  (cost=1011.16..8699.00 rows=1 width=68) (actual time=7.770..8761.177 rows=42900 loops=1)
                     Join Filter: (mi.movie_id = ci.movie_id)
                     ->  Gather  (cost=1010.60..8670.06 rows=1 width=60) (actual time=6.076..791.379 rows=63386 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop  (cost=10.60..7669.96 rows=1 width=60) (actual time=4.762..1271.882 rows=21129 loops=3)
                                 ->  Nested Loop  (cost=10.46..7669.77 rows=1 width=64) (actual time=4.748..1244.260 rows=22577 loops=3)
                                       Join Filter: (mi_idx.movie_id = mi.movie_id)
                                       ->  Hash Join  (cost=10.02..7633.70 rows=2 width=14) (actual time=4.643..244.035 rows=21234 loops=3)
                                             Hash Cond: (mi_idx.info_type_id = it2.id)
                                             ->  Nested Loop  (cost=7.60..7630.47 rows=294 width=18) (actual time=4.559..234.033 rows=63896 loops=3)
                                                   ->  Nested Loop  (cost=7.17..7552.00 rows=98 width=4) (actual time=4.525..115.433 rows=25571 loops=3)
                                                         ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4347.40 rows=3 width=4) (actual time=0.263..22.507 rows=2 loops=3)
                                                               Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                               Rows Removed by Filter: 44721
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1065.21 rows=299 width=8) (actual time=3.170..38.482 rows=10959 loops=7)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=12389
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.832..1.832 rows=10959 loops=7)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.77 rows=3 width=14) (actual time=0.004..0.004 rows=2 loops=76714)
                                                         Index Cond: (movie_id = mk.movie_id)
                                             ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.028..0.028 rows=1 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.022..0.023 rows=1 loops=3)
                                                         Filter: ((info)::text = 'votes'::text)
                                                         Rows Removed by Filter: 112
                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..18.03 rows=1 width=50) (actual time=0.045..0.047 rows=1 loops=63701)
                                             Index Cond: (movie_id = mk.movie_id)
                                             Filter: ((info)::text = ANY ('{Horror,Action,Sci-Fi,Thriller,Crime,War}'::text[]))
                                             Rows Removed by Filter: 58
                                 ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=67732)
                                       Index Cond: (id = mi.info_type_id)
                                       Filter: ((info)::text = 'genres'::text)
                                       Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..28.93 rows=1 width=8) (actual time=0.100..0.125 rows=1 loops=63386)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                           Rows Removed by Filter: 63
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.02 rows=1 width=19) (actual time=0.006..0.006 rows=1 loops=42900)
                     Index Cond: (id = ci.person_id)
                     Filter: ((gender)::text = 'm'::text)
                     Rows Removed by Filter: 0
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.81 rows=1 width=21) (actual time=0.004..0.004 rows=1 loops=26153)
               Index Cond: (id = mk.movie_id)
 Planning Time: 14.042 ms
 Execution Time: 9173.453 ms
(51 rows)

SET
                                                                                                   QUERY PLAN                                                                                                   
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=10239.97..10239.98 rows=1 width=128) (actual time=1134.191..1134.191 rows=1 loops=1)
   ->  Nested Loop  (cost=5.26..10239.96 rows=1 width=54) (actual time=12.583..1133.462 rows=1728 loops=1)
         ->  Nested Loop  (cost=4.83..10233.55 rows=14 width=42) (actual time=1.530..1010.349 rows=58947 loops=1)
               ->  Nested Loop  (cost=4.40..10227.18 rows=14 width=31) (actual time=1.499..705.996 rows=58947 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=3.84..10225.20 rows=1 width=39) (actual time=1.454..562.777 rows=326 loops=1)
                           ->  Nested Loop  (cost=3.42..10223.39 rows=4 width=43) (actual time=0.551..375.543 rows=79039 loops=1)
                                 ->  Nested Loop  (cost=2.98..10219.72 rows=2 width=35) (actual time=0.521..347.195 rows=647 loops=1)
                                       Join Filter: (kt.id = t.kind_id)
                                       Rows Removed by Join Filter: 5355
                                       ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.016..0.017 rows=1 loops=1)
                                             Filter: ((kind)::text = 'movie'::text)
                                             Rows Removed by Filter: 6
                                       ->  Nested Loop  (cost=2.98..10218.42 rows=17 width=39) (actual time=0.396..346.537 rows=6002 loops=1)
                                             Join Filter: (cc.movie_id = t.id)
                                             ->  Nested Loop  (cost=2.55..10175.60 rows=32 width=14) (actual time=0.271..259.235 rows=17898 loops=1)
                                                   Join Filter: (it2.id = mi_idx.info_type_id)
                                                   Rows Removed by Join Filter: 8960
                                                   ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.010..0.012 rows=1 loops=1)
                                                         Filter: ((info)::text = 'rating'::text)
                                                         Rows Removed by Filter: 112
                                                   ->  Nested Loop  (cost=2.55..10128.32 rows=3590 width=18) (actual time=0.150..255.774 rows=26858 loops=1)
                                                         ->  Hash Join  (cost=2.12..2996.88 rows=8443 width=4) (actual time=0.082..48.623 rows=85941 loops=1)
                                                               Hash Cond: (cc.status_id = cct2.id)
                                                               ->  Hash Join  (cost=1.06..2813.24 rows=33772 width=8) (actual time=0.030..34.272 rows=85941 loops=1)
                                                                     Hash Cond: (cc.subject_id = cct1.id)
                                                                     ->  Seq Scan on complete_cast cc  (cost=0.00..2081.86 rows=135086 width=12) (actual time=0.011..12.185 rows=135086 loops=1)
                                                                     ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.004..0.005 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=1)
                                                                                 Filter: ((kind)::text = 'cast'::text)
                                                                                 Rows Removed by Filter: 3
                                                               ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.024..0.024 rows=2 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.018..0.019 rows=2 loops=1)
                                                                           Filter: ((kind)::text ~~ '%complete%'::text)
                                                                           Rows Removed by Filter: 2
                                                         ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.83 rows=1 width=14) (actual time=0.002..0.002 rows=0 loops=85941)
                                                               Index Cond: (movie_id = cc.movie_id)
                                                               Filter: ((info)::text > '7.0'::text)
                                                               Rows Removed by Filter: 2
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..1.33 rows=1 width=25) (actual time=0.005..0.005 rows=0 loops=17898)
                                                   Index Cond: (id = mi_idx.movie_id)
                                                   Filter: (production_year > 2000)
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.36 rows=47 width=8) (actual time=0.010..0.029 rows=122 loops=647)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.45 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=79039)
                                 Index Cond: (id = mk.keyword_id)
                                 Filter: ((keyword)::text = ANY ('{superhero,marvel-comics,based-on-comic,tv-special,fight,violence,magnet,web,claw,laser}'::text[]))
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.011..0.403 rows=181 loops=326)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=19) (actual time=0.005..0.005 rows=1 loops=58947)
                     Index Cond: (id = ci.person_id)
         ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=20) (actual time=0.002..0.002 rows=0 loops=58947)
               Index Cond: (id = ci.person_role_id)
               Filter: ((name IS NOT NULL) AND (((name)::text ~~ '%man%'::text) OR ((name)::text ~~ '%Man%'::text)))
               Rows Removed by Filter: 0
 Planning Time: 68.683 ms
 Execution Time: 1134.432 ms
(61 rows)

SET
                                                                                                      QUERY PLAN                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7388.77..7388.78 rows=1 width=96) (actual time=281.797..281.797 rows=1 loops=1)
   ->  Nested Loop  (cost=9.45..7388.76 rows=1 width=39) (actual time=31.070..281.751 rows=93 loops=1)
         Join Filter: (cct1.id = cc.subject_id)
         Rows Removed by Join Filter: 87
         ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.015..0.016 rows=1 loops=1)
               Filter: ((kind)::text = 'cast'::text)
               Rows Removed by Filter: 3
         ->  Nested Loop  (cost=9.45..7387.70 rows=1 width=43) (actual time=31.054..281.710 rows=180 loops=1)
               Join Filter: (cct2.id = cc.status_id)
               Rows Removed by Join Filter: 180
               ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.004 rows=2 loops=1)
                     Filter: ((kind)::text ~~ '%complete%'::text)
                     Rows Removed by Filter: 2
               ->  Nested Loop  (cost=9.45..7386.64 rows=1 width=47) (actual time=22.147..140.830 rows=180 loops=2)
                     ->  Nested Loop  (cost=9.03..7386.16 rows=1 width=55) (actual time=19.494..140.378 rows=191 loops=2)
                           ->  Nested Loop  (cost=8.60..7385.70 rows=1 width=59) (actual time=19.476..139.049 rows=191 loops=2)
                                 ->  Nested Loop  (cost=8.17..7379.30 rows=14 width=47) (actual time=19.405..124.880 rows=7981 loops=2)
                                       Join Filter: (t.id = ci.movie_id)
                                       ->  Nested Loop  (cost=7.61..7377.31 rows=1 width=35) (actual time=19.384..107.557 rows=31 loops=2)
                                             Join Filter: (kt.id = t.kind_id)
                                             Rows Removed by Join Filter: 167
                                             ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.005..0.007 rows=1 loops=2)
                                                   Filter: ((kind)::text = 'movie'::text)
                                                   Rows Removed by Filter: 6
                                             ->  Nested Loop  (cost=7.61..7376.21 rows=1 width=39) (actual time=0.823..107.522 rows=198 loops=2)
                                                   ->  Nested Loop  (cost=7.18..7375.73 rows=1 width=14) (actual time=0.808..104.694 rows=313 loops=2)
                                                         Join Filter: (mi_idx.info_type_id = it2.id)
                                                         Rows Removed by Join Filter: 612
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.011 rows=1 loops=2)
                                                               Filter: ((info)::text = 'rating'::text)
                                                               Rows Removed by Filter: 112
                                                         ->  Nested Loop  (cost=7.18..7373.13 rows=15 width=18) (actual time=0.691..104.564 rows=925 loops=2)
                                                               ->  Nested Loop  (cost=6.75..7304.56 rows=135 width=4) (actual time=0.591..57.603 rows=9984 loops=2)
                                                                     ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=0.073..20.998 rows=4 loops=2)
                                                                           Filter: ((keyword)::text = ANY ('{superhero,marvel-comics,based-on-comic,fight}'::text[]))
                                                                           Rows Removed by Filter: 134166
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1082.76 rows=299 width=8) (actual time=0.690..8.867 rows=2496 loops=8)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=15372
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.385..0.385 rows=2496 loops=8)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=14) (actual time=0.004..0.004 rows=0 loops=19968)
                                                                     Index Cond: (movie_id = mk.movie_id)
                                                                     Filter: ((info)::text > '8.0'::text)
                                                                     Rows Removed by Filter: 2
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.009..0.009 rows=1 loops=626)
                                                         Index Cond: (id = mk.movie_id)
                                                         Filter: (production_year > 2005)
                                                         Rows Removed by Filter: 0
                                       ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.014..0.517 rows=257 loops=62)
                                             Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=20) (actual time=0.002..0.002 rows=0 loops=15962)
                                       Index Cond: (id = ci.person_role_id)
                                       Filter: ((name IS NOT NULL) AND (((name)::text ~~ '%man%'::text) OR ((name)::text ~~ '%Man%'::text)))
                                       Rows Removed by Filter: 0
                           ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=382)
                                 Index Cond: (id = ci.person_id)
                                 Heap Fetches: 382
                     ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.002..0.002 rows=1 loops=382)
                           Index Cond: (movie_id = t.id)
 Planning Time: 70.756 ms
 Execution Time: 282.009 ms
(62 rows)

SET
                                                                                                   QUERY PLAN                                                                                                   
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=14668.28..14668.29 rows=1 width=96) (actual time=1539.421..1539.422 rows=1 loops=1)
   ->  Nested Loop  (cost=9.45..14668.27 rows=1 width=39) (actual time=8.237..1537.598 rows=5400 loops=1)
         ->  Nested Loop  (cost=9.02..14667.82 rows=1 width=43) (actual time=8.208..1493.138 rows=5400 loops=1)
               Join Filter: (it2.id = mi_idx.info_type_id)
               Rows Removed by Join Filter: 11196
               ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.013..0.014 rows=1 loops=1)
                     Filter: ((info)::text = 'rating'::text)
                     Rows Removed by Filter: 112
               ->  Nested Loop  (cost=9.02..14665.39 rows=1 width=47) (actual time=8.192..1491.188 rows=16596 loops=1)
                     Join Filter: (t.id = mi_idx.movie_id)
                     ->  Nested Loop  (cost=8.59..14664.88 rows=1 width=53) (actual time=8.171..1468.888 rows=5406 loops=1)
                           ->  Nested Loop  (cost=8.16..14658.47 rows=14 width=41) (actual time=7.880..1041.392 rows=189844 loops=1)
                                 Join Filter: (t.id = ci.movie_id)
                                 ->  Nested Loop  (cost=7.60..14656.48 rows=1 width=29) (actual time=7.846..499.586 rows=1267 loops=1)
                                       Join Filter: (cct2.id = cc.status_id)
                                       Rows Removed by Join Filter: 1267
                                       ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.009..0.009 rows=2 loops=1)
                                             Filter: ((kind)::text ~~ '%complete%'::text)
                                             Rows Removed by Filter: 2
                                       ->  Nested Loop  (cost=7.60..14655.42 rows=1 width=33) (actual time=5.787..249.523 rows=1267 loops=2)
                                             Join Filter: (cct1.id = cc.subject_id)
                                             Rows Removed by Join Filter: 218
                                             ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=2)
                                                   Filter: ((kind)::text = 'cast'::text)
                                                   Rows Removed by Filter: 3
                                             ->  Nested Loop  (cost=7.60..14654.36 rows=1 width=37) (actual time=5.785..249.180 rows=1485 loops=2)
                                                   ->  Nested Loop  (cost=7.18..14641.93 rows=26 width=25) (actual time=5.698..235.366 rows=5032 loops=2)
                                                         Join Filter: (kt.id = t.kind_id)
                                                         Rows Removed by Join Filter: 5581
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.004..0.005 rows=1 loops=2)
                                                               Filter: ((kind)::text = 'movie'::text)
                                                               Rows Removed by Filter: 6
                                                         ->  Nested Loop  (cost=7.18..14638.55 rows=183 width=29) (actual time=0.657..233.989 rows=10613 loops=2)
                                                               ->  Nested Loop  (cost=6.75..14474.11 rows=337 width=4) (actual time=0.641..109.827 rows=24091 loops=2)
                                                                     ->  Seq Scan on keyword k  (cost=0.00..3967.82 rows=10 width=4) (actual time=0.140..36.513 rows=10 loops=2)
                                                                           Filter: ((keyword)::text = ANY ('{superhero,marvel-comics,based-on-comic,tv-special,fight,violence,magnet,web,claw,laser}'::text[]))
                                                                           Rows Removed by Filter: 134160
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1047.64 rows=299 width=8) (actual time=0.648..7.034 rows=2409 loops=20)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=34254
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.362..0.362 rows=2409 loops=20)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.005..0.005 rows=0 loops=48182)
                                                                     Index Cond: (id = mk.movie_id)
                                                                     Filter: (production_year > 2000)
                                                                     Rows Removed by Filter: 1
                                                   ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.002..0.002 rows=0 loops=10064)
                                                         Index Cond: (movie_id = t.id)
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.012..0.401 rows=150 loops=1267)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=20) (actual time=0.002..0.002 rows=0 loops=189844)
                                 Index Cond: (id = ci.person_role_id)
                                 Filter: ((name IS NOT NULL) AND (((name)::text ~~ '%man%'::text) OR ((name)::text ~~ '%Man%'::text)))
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.48 rows=3 width=14) (actual time=0.003..0.003 rows=3 loops=5406)
                           Index Cond: (movie_id = ci.movie_id)
         ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=5400)
               Index Cond: (id = ci.person_id)
               Heap Fetches: 5400
 Planning Time: 69.438 ms
 Execution Time: 1539.649 ms
(61 rows)

SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3308.26..3308.27 rows=1 width=96) (actual time=26.439..26.439 rows=1 loops=1)
   ->  Nested Loop  (cost=6.00..3308.26 rows=1 width=118) (actual time=3.533..26.316 rows=477 loops=1)
         ->  Nested Loop  (cost=5.58..3307.80 rows=1 width=103) (actual time=3.506..24.272 rows=1106 loops=1)
               Join Filter: (ct.id = mc.company_type_id)
               Rows Removed by Join Filter: 57
               ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.016..0.017 rows=1 loops=1)
                     Filter: ((kind)::text = 'production companies'::text)
                     Rows Removed by Filter: 3
               ->  Nested Loop  (cost=5.58..3306.72 rows=2 width=107) (actual time=3.488..24.131 rows=1163 loops=1)
                     Join Filter: (ml.movie_id = mc.movie_id)
                     ->  Nested Loop  (cost=5.15..3306.16 rows=1 width=119) (actual time=3.464..23.436 rows=154 loops=1)
                           ->  Nested Loop  (cost=4.73..2463.07 rows=1911 width=123) (actual time=3.430..20.340 rows=1853 loops=1)
                                 Join Filter: (ml.movie_id = mk.movie_id)
                                 ->  Nested Loop  (cost=4.29..2380.91 rows=41 width=115) (actual time=3.405..19.415 rows=213 loops=1)
                                       Join Filter: (ml.movie_id = mi.movie_id)
                                       ->  Nested Loop  (cost=3.86..2105.18 rows=121 width=111) (actual time=0.974..14.244 rows=179 loops=1)
                                             Join Filter: (ml.movie_id = t.id)
                                             ->  Hash Join  (cost=3.43..1527.00 rows=333 width=90) (actual time=0.949..13.252 rows=189 loops=1)
                                                   Hash Cond: (ml.link_type_id = lt.id)
                                                   ->  Merge Join  (cost=2.19..1506.31 rows=6002 width=12) (actual time=0.065..12.968 rows=3346 loops=1)
                                                         Merge Cond: (cc.movie_id = ml.movie_id)
                                                         ->  Nested Loop  (cost=0.42..9294.58 rows=16886 width=4) (actual time=0.030..5.114 rows=5561 loops=1)
                                                               Join Filter: (cc.subject_id = cct1.id)
                                                               Rows Removed by Join Filter: 2227
                                                               ->  Nested Loop  (cost=0.42..8364.79 rows=33772 width=8) (actual time=0.021..3.736 rows=5561 loops=1)
                                                                     Join Filter: (cct2.id = cc.status_id)
                                                                     Rows Removed by Join Filter: 432
                                                                     ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..6337.45 rows=135086 width=12) (actual time=0.008..2.335 rows=5993 loops=1)
                                                                     ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=5993)
                                                                           ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=1)
                                                                                 Filter: ((kind)::text = 'complete'::text)
                                                                                 Rows Removed by Filter: 3
                                                               ->  Materialize  (cost=0.00..1.06 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=5561)
                                                                     ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=2 width=4) (actual time=0.002..0.002 rows=2 loops=1)
                                                                           Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
                                                         ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..959.51 rows=29997 width=8) (actual time=0.008..5.278 rows=30638 loops=1)
                                                   ->  Hash  (cost=1.23..1.23 rows=1 width=86) (actual time=0.017..0.017 rows=2 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.008..0.012 rows=2 loops=1)
                                                               Filter: ((link)::text ~~ '%follow%'::text)
                                                               Rows Removed by Filter: 16
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..1.72 rows=1 width=21) (actual time=0.005..0.005 rows=1 loops=189)
                                                   Index Cond: (id = cc.movie_id)
                                                   Filter: ((production_year >= 1950) AND (production_year <= 2000))
                                                   Rows Removed by Filter: 0
                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.27 rows=1 width=4) (actual time=0.027..0.028 rows=1 loops=179)
                                             Index Cond: (movie_id = t.id)
                                             Filter: ((info)::text = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
                                             Rows Removed by Filter: 27
                                 ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.42 rows=47 width=8) (actual time=0.002..0.003 rows=9 loops=213)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=1853)
                                 Index Cond: (id = mk.keyword_id)
                                 Filter: ((keyword)::text = 'sequel'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=2 width=12) (actual time=0.002..0.003 rows=8 loops=154)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: (note IS NULL)
                           Rows Removed by Filter: 1
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=1106)
               Index Cond: (id = mc.company_id)
               Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
               Rows Removed by Filter: 1
 Planning Time: 70.222 ms
 Execution Time: 26.697 ms
(65 rows)

SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=2420.10..2420.11 rows=1 width=96) (actual time=35.888..35.888 rows=1 loops=1)
   ->  Nested Loop  (cost=3.52..2420.10 rows=1 width=118) (actual time=25.731..35.826 rows=247 loops=1)
         Join Filter: (ml.movie_id = mi.movie_id)
         ->  Nested Loop  (cost=3.08..2418.52 rows=1 width=138) (actual time=25.698..35.163 rows=95 loops=1)
               ->  Nested Loop  (cost=2.66..2397.77 rows=47 width=142) (actual time=25.648..33.994 rows=703 loops=1)
                     Join Filter: (ml.movie_id = mk.movie_id)
                     ->  Nested Loop  (cost=2.23..2395.81 rows=1 width=134) (actual time=25.626..33.614 rows=95 loops=1)
                           ->  Nested Loop  (cost=1.81..2395.35 rows=1 width=119) (actual time=25.610..33.246 rows=190 loops=1)
                                 Join Filter: (ml.movie_id = t.id)
                                 ->  Nested Loop  (cost=1.38..2375.69 rows=33 width=98) (actual time=1.926..31.868 rows=705 loops=1)
                                       Join Filter: (lt.id = ml.link_type_id)
                                       Rows Removed by Join Filter: 10769
                                       ->  Merge Join  (cost=1.38..2365.44 rows=601 width=20) (actual time=0.438..29.911 rows=5794 loops=1)
                                             Merge Cond: (mc.movie_id = ml.movie_id)
                                             ->  Nested Loop  (cost=0.85..33746.92 rows=10432 width=12) (actual time=0.403..22.310 rows=4702 loops=1)
                                                   Join Filter: (ct.id = mc.company_type_id)
                                                   Rows Removed by Join Filter: 109
                                                   ->  Nested Loop  (cost=0.85..33119.98 rows=41726 width=16) (actual time=0.398..21.198 rows=4811 loops=1)
                                                         ->  Nested Loop  (cost=0.42..11067.56 rows=16886 width=4) (actual time=0.021..5.091 rows=5561 loops=1)
                                                               Join Filter: (cc.status_id = cct2.id)
                                                               Rows Removed by Join Filter: 432
                                                               ->  Nested Loop  (cost=0.42..10053.37 rows=67543 width=8) (actual time=0.016..3.792 rows=5993 loops=1)
                                                                     Join Filter: (cct1.id = cc.subject_id)
                                                                     Rows Removed by Join Filter: 2305
                                                                     ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..6337.45 rows=135086 width=12) (actual time=0.005..1.958 rows=5993 loops=1)
                                                                     ->  Materialize  (cost=0.00..1.06 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=5993)
                                                                           ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=2 width=4) (actual time=0.005..0.006 rows=2 loops=1)
                                                                                 Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
                                                               ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=5993)
                                                                     ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1)
                                                                           Filter: ((kind)::text = 'complete'::text)
                                                                           Rows Removed by Filter: 3
                                                         ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..1.29 rows=2 width=12) (actual time=0.002..0.003 rows=1 loops=5561)
                                                               Index Cond: (movie_id = cc.movie_id)
                                                               Filter: (note IS NULL)
                                                               Rows Removed by Filter: 2
                                                   ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=4811)
                                                         ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1)
                                                               Filter: ((kind)::text = 'production companies'::text)
                                                               Rows Removed by Filter: 3
                                             ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..959.51 rows=29997 width=8) (actual time=0.008..4.615 rows=33634 loops=1)
                                       ->  Materialize  (cost=0.00..1.23 rows=1 width=86) (actual time=0.000..0.000 rows=2 loops=5794)
                                             ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.002..0.006 rows=2 loops=1)
                                                   Filter: ((link)::text ~~ '%follow%'::text)
                                                   Rows Removed by Filter: 16
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.58 rows=1 width=21) (actual time=0.002..0.002 rows=0 loops=705)
                                       Index Cond: (id = mc.movie_id)
                                       Filter: (production_year = 1998)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=190)
                                 Index Cond: (id = mc.company_id)
                                 Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.37 rows=47 width=8) (actual time=0.002..0.003 rows=7 loops=95)
                           Index Cond: (movie_id = mc.movie_id)
               ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=703)
                     Index Cond: (id = mk.keyword_id)
                     Filter: ((keyword)::text = 'sequel'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.56 rows=1 width=4) (actual time=0.005..0.006 rows=3 loops=95)
               Index Cond: (movie_id = mk.movie_id)
               Filter: ((info)::text = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
               Rows Removed by Filter: 10
 Planning Time: 69.449 ms
 Execution Time: 36.126 ms
(65 rows)

SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3422.73..3422.74 rows=1 width=96) (actual time=41.754..41.754 rows=1 loops=1)
   ->  Nested Loop  (cost=3.38..3422.71 rows=3 width=118) (actual time=6.216..41.594 rows=743 loops=1)
         Join Filter: (ml.movie_id = mi.movie_id)
         ->  Nested Loop  (cost=2.94..3420.85 rows=1 width=138) (actual time=6.193..39.692 rows=172 loops=1)
               Join Filter: (mc.company_type_id = ct.id)
               Rows Removed by Join Filter: 19
               ->  Nested Loop  (cost=2.94..3419.79 rows=1 width=142) (actual time=6.189..39.488 rows=191 loops=1)
                     ->  Nested Loop  (cost=2.52..3378.74 rows=93 width=146) (actual time=3.428..33.787 rows=3396 loops=1)
                           Join Filter: (ml.movie_id = mk.movie_id)
                           ->  Nested Loop  (cost=2.09..3374.90 rows=2 width=138) (actual time=3.402..32.181 rows=298 loops=1)
                                 Join Filter: (lt.id = ml.link_type_id)
                                 Rows Removed by Join Filter: 1113
                                 ->  Merge Join  (cost=2.09..3373.07 rows=40 width=60) (actual time=2.489..31.901 rows=720 loops=1)
                                       Merge Cond: (t.id = ml.movie_id)
                                       ->  Nested Loop  (cost=1.70..32069.95 rows=3391 width=52) (actual time=1.369..25.975 rows=161 loops=1)
                                             ->  Nested Loop  (cost=1.27..29418.97 rows=4524 width=31) (actual time=1.340..24.348 rows=174 loops=1)
                                                   ->  Nested Loop  (cost=0.85..19898.64 rows=20863 width=16) (actual time=0.265..14.651 rows=3375 loops=1)
                                                         ->  Nested Loop  (cost=0.42..8872.43 rows=8443 width=4) (actual time=0.025..4.667 rows=3834 loops=1)
                                                               Join Filter: (cct2.id = cc.status_id)
                                                               Rows Removed by Join Filter: 372
                                                               ->  Nested Loop  (cost=0.42..8364.79 rows=33772 width=8) (actual time=0.015..3.750 rows=3834 loops=1)
                                                                     Join Filter: (cct1.id = cc.subject_id)
                                                                     Rows Removed by Join Filter: 2385
                                                                     ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..6337.45 rows=135086 width=12) (actual time=0.005..2.104 rows=6219 loops=1)
                                                                     ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=6219)
                                                                           ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                                                                                 Filter: ((kind)::text = 'cast'::text)
                                                                                 Rows Removed by Filter: 3
                                                               ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=3834)
                                                                     ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.007..0.008 rows=2 loops=1)
                                                                           Filter: ((kind)::text ~~ 'complete%'::text)
                                                                           Rows Removed by Filter: 2
                                                         ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..1.29 rows=2 width=12) (actual time=0.002..0.002 rows=1 loops=3834)
                                                               Index Cond: (movie_id = cc.movie_id)
                                                               Filter: (note IS NULL)
                                                               Rows Removed by Filter: 2
                                                   ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=3375)
                                                         Index Cond: (id = mc.company_id)
                                                         Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..0.59 rows=1 width=21) (actual time=0.009..0.009 rows=1 loops=174)
                                                   Index Cond: (id = mc.movie_id)
                                                   Filter: ((production_year >= 1950) AND (production_year <= 2010))
                                                   Rows Removed by Filter: 0
                                       ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..959.51 rows=29997 width=8) (actual time=0.008..3.921 rows=30313 loops=1)
                                 ->  Materialize  (cost=0.00..1.23 rows=1 width=86) (actual time=0.000..0.000 rows=2 loops=720)
                                       ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.003..0.006 rows=2 loops=1)
                                             Filter: ((link)::text ~~ '%follow%'::text)
                                             Rows Removed by Filter: 16
                           ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.33 rows=47 width=8) (actual time=0.002..0.003 rows=11 loops=298)
                                 Index Cond: (movie_id = t.id)
                     ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=3396)
                           Index Cond: (id = mk.keyword_id)
                           Filter: ((keyword)::text = 'sequel'::text)
                           Rows Removed by Filter: 1
               ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.001 rows=1 loops=191)
                     Filter: ((kind)::text = 'production companies'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.82 rows=3 width=4) (actual time=0.008..0.010 rows=4 loops=172)
               Index Cond: (movie_id = mk.movie_id)
               Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,English}'::text[]))
               Rows Removed by Filter: 15
 Planning Time: 70.098 ms
 Execution Time: 41.979 ms
(64 rows)

SET
                                                                                                            QUERY PLAN                                                                                                            
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7394.90..7394.91 rows=1 width=96) (actual time=500.522..500.522 rows=1 loops=1)
   ->  Nested Loop  (cost=9.31..7394.89 rows=1 width=42) (actual time=6.062..499.402 rows=4803 loops=1)
         Join Filter: (ct.id = mc.company_type_id)
         ->  Nested Loop  (cost=9.31..7393.80 rows=1 width=46) (actual time=6.056..495.425 rows=4803 loops=1)
               ->  Nested Loop  (cost=8.89..7393.26 rows=1 width=31) (actual time=6.045..480.427 rows=4955 loops=1)
                     Join Filter: (t.id = mc.movie_id)
                     ->  Nested Loop  (cost=8.46..7392.68 rows=1 width=43) (actual time=6.017..470.767 rows=432 loops=1)
                           Join Filter: (it1.id = mi.info_type_id)
                           Rows Removed by Join Filter: 49
                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.007..0.013 rows=1 loops=1)
                                 Filter: ((info)::text = 'countries'::text)
                                 Rows Removed by Filter: 112
                           ->  Nested Loop  (cost=8.46..7390.25 rows=1 width=47) (actual time=6.009..470.634 rows=481 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=8.03..7388.35 rows=1 width=39) (actual time=5.944..414.801 rows=473 loops=1)
                                       Join Filter: (cc.status_id = cct2.id)
                                       Rows Removed by Join Filter: 1159
                                       ->  Nested Loop  (cost=8.03..7387.27 rows=1 width=43) (actual time=5.941..413.878 rows=544 loops=1)
                                             Join Filter: (kt.id = t.kind_id)
                                             Rows Removed by Join Filter: 244
                                             ->  Nested Loop  (cost=8.03..7386.15 rows=1 width=47) (actual time=5.924..412.809 rows=596 loops=1)
                                                   ->  Nested Loop  (cost=7.60..7385.67 rows=1 width=22) (actual time=5.898..373.456 rows=5973 loops=1)
                                                         Join Filter: (cct1.id = cc.subject_id)
                                                         Rows Removed by Join Filter: 13371
                                                         ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1)
                                                               Filter: ((kind)::text = 'crew'::text)
                                                               Rows Removed by Filter: 3
                                                         ->  Nested Loop  (cost=7.60..7384.57 rows=4 width=26) (actual time=5.349..371.400 rows=19344 loops=1)
                                                               ->  Nested Loop  (cost=7.18..7383.14 rows=3 width=14) (actual time=4.498..309.635 rows=31800 loops=1)
                                                                     Join Filter: (mi_idx.info_type_id = it2.id)
                                                                     Rows Removed by Join Filter: 62093
                                                                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.008..0.010 rows=1 loops=1)
                                                                           Filter: ((info)::text = 'rating'::text)
                                                                           Rows Removed by Filter: 112
                                                                     ->  Nested Loop  (cost=7.18..7375.83 rows=392 width=18) (actual time=4.486..301.041 rows=93893 loops=1)
                                                                           ->  Nested Loop  (cost=6.75..7304.56 rows=135 width=4) (actual time=4.459..145.919 rows=37091 loops=1)
                                                                                 ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.100..20.665 rows=3 loops=1)
                                                                                       Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                       Rows Removed by Filter: 134167
                                                                                 ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1082.76 rows=299 width=8) (actual time=3.393..40.252 rows=12364 loops=3)
                                                                                       Recheck Cond: (keyword_id = k.id)
                                                                                       Heap Blocks: exact=26312
                                                                                       ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.851..1.851 rows=12364 loops=3)
                                                                                             Index Cond: (keyword_id = k.id)
                                                                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=14) (actual time=0.003..0.004 rows=3 loops=37091)
                                                                                 Index Cond: (movie_id = mk.movie_id)
                                                                                 Filter: ((info)::text < '8.5'::text)
                                                                                 Rows Removed by Filter: 0
                                                               ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.001..0.002 rows=1 loops=31800)
                                                                     Index Cond: (movie_id = mk.movie_id)
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.006..0.006 rows=0 loops=5973)
                                                         Index Cond: (id = mk.movie_id)
                                                         Filter: (production_year > 2000)
                                                         Rows Removed by Filter: 1
                                             ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.001..0.001 rows=1 loops=596)
                                                   Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                   Rows Removed by Filter: 2
                                       ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=3 width=4) (actual time=0.000..0.001 rows=3 loops=544)
                                             Filter: ((kind)::text <> 'complete+verified'::text)
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.101..0.117 rows=1 loops=473)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                                       Rows Removed by Filter: 139
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.010..0.020 rows=11 loops=432)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                           Rows Removed by Filter: 10
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.003..0.003 rows=1 loops=4955)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text <> '[us]'::text)
                     Rows Removed by Filter: 0
         ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.000..0.000 rows=1 loops=4803)
 Planning Time: 86.519 ms
 Execution Time: 500.771 ms
(75 rows)

SET
                                                                                                            QUERY PLAN                                                                                                            
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7387.11..7387.12 rows=1 width=96) (actual time=384.693..384.693 rows=1 loops=1)
   ->  Nested Loop  (cost=9.31..7387.10 rows=1 width=42) (actual time=8.313..384.635 rows=148 loops=1)
         ->  Nested Loop  (cost=8.89..7386.56 rows=1 width=27) (actual time=8.290..383.852 rows=150 loops=1)
               Join Filter: (ct.id = mc.company_type_id)
               ->  Nested Loop  (cost=8.89..7385.47 rows=1 width=31) (actual time=8.283..383.700 rows=150 loops=1)
                     Join Filter: (t.id = mc.movie_id)
                     ->  Nested Loop  (cost=8.46..7384.89 rows=1 width=43) (actual time=8.252..383.243 rows=13 loops=1)
                           Join Filter: (it1.id = mi.info_type_id)
                           Rows Removed by Join Filter: 7
                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.007..0.013 rows=1 loops=1)
                                 Filter: ((info)::text = 'countries'::text)
                                 Rows Removed by Filter: 112
                           ->  Nested Loop  (cost=8.46..7382.46 rows=1 width=47) (actual time=8.244..383.219 rows=20 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=8.03..7380.89 rows=1 width=39) (actual time=6.445..368.293 rows=179 loops=1)
                                       Join Filter: (cct2.id = cc.status_id)
                                       Rows Removed by Join Filter: 394
                                       ->  Nested Loop  (cost=8.03..7379.81 rows=1 width=43) (actual time=6.441..367.966 rows=191 loops=1)
                                             Join Filter: (cct1.id = cc.subject_id)
                                             Rows Removed by Join Filter: 689
                                             ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=1)
                                                   Filter: ((kind)::text = 'crew'::text)
                                                   Rows Removed by Filter: 3
                                             ->  Nested Loop  (cost=8.03..7378.74 rows=1 width=47) (actual time=6.430..367.829 rows=880 loops=1)
                                                   ->  Nested Loop  (cost=7.61..7378.26 rows=1 width=35) (actual time=4.675..360.931 rows=2312 loops=1)
                                                         Join Filter: (kt.id = t.kind_id)
                                                         Rows Removed by Join Filter: 1695
                                                         ->  Nested Loop  (cost=7.61..7377.15 rows=1 width=39) (actual time=4.566..356.941 rows=2835 loops=1)
                                                               ->  Nested Loop  (cost=7.18..7376.66 rows=1 width=14) (actual time=4.545..284.245 rows=11708 loops=1)
                                                                     Join Filter: (it2.id = mi_idx.info_type_id)
                                                                     Rows Removed by Join Filter: 6993
                                                                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.008..0.010 rows=1 loops=1)
                                                                           Filter: ((info)::text = 'rating'::text)
                                                                           Rows Removed by Filter: 112
                                                                     ->  Nested Loop  (cost=7.18..7373.13 rows=90 width=18) (actual time=4.535..281.673 rows=18701 loops=1)
                                                                           ->  Nested Loop  (cost=6.75..7304.56 rows=135 width=4) (actual time=4.508..143.247 rows=37091 loops=1)
                                                                                 ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.144..20.886 rows=3 loops=1)
                                                                                       Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                       Rows Removed by Filter: 134167
                                                                                 ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1082.76 rows=299 width=8) (actual time=3.387..39.380 rows=12364 loops=3)
                                                                                       Recheck Cond: (keyword_id = k.id)
                                                                                       Heap Blocks: exact=26312
                                                                                       ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.859..1.859 rows=12364 loops=3)
                                                                                             Index Cond: (keyword_id = k.id)
                                                                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=14) (actual time=0.003..0.003 rows=1 loops=37091)
                                                                                 Index Cond: (movie_id = mk.movie_id)
                                                                                 Filter: ((info)::text > '6.5'::text)
                                                                                 Rows Removed by Filter: 2
                                                               ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.006..0.006 rows=0 loops=11708)
                                                                     Index Cond: (id = mk.movie_id)
                                                                     Filter: (production_year > 2005)
                                                                     Rows Removed by Filter: 1
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.000..0.001 rows=1 loops=2835)
                                                               Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                               Rows Removed by Filter: 2
                                                   ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.003..0.003 rows=0 loops=2312)
                                                         Index Cond: (movie_id = t.id)
                                       ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=3 width=4) (actual time=0.001..0.001 rows=3 loops=191)
                                             Filter: ((kind)::text <> 'complete+verified'::text)
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.56 rows=1 width=8) (actual time=0.080..0.083 rows=0 loops=179)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
                                       Rows Removed by Filter: 130
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.017..0.032 rows=12 loops=13)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                           Rows Removed by Filter: 17
               ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.000..0.000 rows=1 loops=150)
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.005..0.005 rows=1 loops=150)
               Index Cond: (id = mc.company_id)
               Filter: ((country_code)::text <> '[us]'::text)
               Rows Removed by Filter: 0
 Planning Time: 86.616 ms
 Execution Time: 384.952 ms
(75 rows)

SET
                                                                                                         QUERY PLAN                                                                                                         
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7394.43..7394.44 rows=1 width=96) (actual time=2366.654..2366.654 rows=1 loops=1)
   ->  Nested Loop  (cost=9.31..7394.42 rows=1 width=42) (actual time=10.562..2364.473 rows=8373 loops=1)
         Join Filter: (it2.id = mi_idx.info_type_id)
         Rows Removed by Join Filter: 16430
         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=1)
               Filter: ((info)::text = 'rating'::text)
               Rows Removed by Filter: 112
         ->  Nested Loop  (cost=9.31..7391.99 rows=1 width=46) (actual time=10.546..2362.153 rows=24803 loops=1)
               Join Filter: (t.id = mi_idx.movie_id)
               ->  Nested Loop  (cost=8.88..7391.46 rows=1 width=56) (actual time=10.519..2335.566 rows=8493 loops=1)
                     Join Filter: (kt.id = t.kind_id)
                     Rows Removed by Join Filter: 712
                     ->  Nested Loop  (cost=8.88..7390.35 rows=1 width=60) (actual time=10.510..2325.538 rows=8788 loops=1)
                           Join Filter: (mi.movie_id = t.id)
                           ->  Nested Loop  (cost=8.45..7389.84 rows=1 width=35) (actual time=5.325..2272.300 rows=22323 loops=1)
                                 Join Filter: (it1.id = mi.info_type_id)
                                 Rows Removed by Join Filter: 5071
                                 ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.003..0.010 rows=1 loops=1)
                                       Filter: ((info)::text = 'countries'::text)
                                       Rows Removed by Filter: 112
                                 ->  Nested Loop  (cost=8.45..7387.38 rows=4 width=39) (actual time=5.321..2268.371 rows=27394 loops=1)
                                       ->  Nested Loop  (cost=8.02..7383.59 rows=2 width=31) (actual time=5.062..385.007 rows=22725 loops=1)
                                             ->  Nested Loop  (cost=7.60..7381.96 rows=3 width=16) (actual time=5.049..320.194 rows=24082 loops=1)
                                                   Join Filter: (ct.id = mc.company_type_id)
                                                   Rows Removed by Join Filter: 7
                                                   ->  Nested Loop  (cost=7.60..7380.76 rows=3 width=20) (actual time=5.038..313.319 rows=24082 loops=1)
                                                         ->  Nested Loop  (cost=7.17..7373.86 rows=12 width=8) (actual time=4.968..221.903 rows=6704 loops=1)
                                                               Join Filter: (cc.subject_id = cct1.id)
                                                               Rows Removed by Join Filter: 3832
                                                               ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=1)
                                                                     Filter: ((kind)::text = 'cast'::text)
                                                                     Rows Removed by Filter: 3
                                                               ->  Nested Loop  (cost=7.17..7372.22 rows=47 width=12) (actual time=4.960..220.455 rows=10536 loops=1)
                                                                     Join Filter: (cct2.id = cc.status_id)
                                                                     Rows Removed by Join Filter: 9488
                                                                     ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.003..0.004 rows=1 loops=1)
                                                                           Filter: ((kind)::text = 'complete'::text)
                                                                           Rows Removed by Filter: 3
                                                                     ->  Nested Loop  (cost=7.17..7368.82 rows=188 width=16) (actual time=4.944..217.755 rows=20024 loops=1)
                                                                           ->  Nested Loop  (cost=6.75..7304.56 rows=135 width=4) (actual time=4.524..142.115 rows=37091 loops=1)
                                                                                 ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.155..20.900 rows=3 loops=1)
                                                                                       Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                       Rows Removed by Filter: 134167
                                                                                 ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1082.76 rows=299 width=8) (actual time=3.400..39.087 rows=12364 loops=3)
                                                                                       Recheck Cond: (keyword_id = k.id)
                                                                                       Heap Blocks: exact=26312
                                                                                       ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.857..1.857 rows=12364 loops=3)
                                                                                             Index Cond: (keyword_id = k.id)
                                                                           ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.002..0.002 rows=1 loops=37091)
                                                                                 Index Cond: (movie_id = mk.movie_id)
                                                         ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.009..0.013 rows=4 loops=6704)
                                                               Index Cond: (movie_id = mk.movie_id)
                                                               Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                                                               Rows Removed by Filter: 8
                                                   ->  Materialize  (cost=0.00..1.06 rows=4 width=4) (actual time=0.000..0.000 rows=1 loops=24082)
                                                         ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.007..0.008 rows=2 loops=1)
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=24082)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((country_code)::text <> '[us]'::text)
                                                   Rows Removed by Filter: 0
                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.070..0.083 rows=1 loops=22725)
                                             Index Cond: (movie_id = mk.movie_id)
                                             Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                                             Rows Removed by Filter: 203
                           ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=22323)
                                 Index Cond: (id = mk.movie_id)
                                 Filter: (production_year > 2005)
                                 Rows Removed by Filter: 1
                     ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.000..0.001 rows=1 loops=8788)
                           Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                           Rows Removed by Filter: 0
               ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=14) (actual time=0.002..0.003 rows=3 loops=8493)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text < '8.5'::text)
                     Rows Removed by Filter: 0
 Planning Time: 88.270 ms
 Execution Time: 2366.916 ms
(77 rows)

SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3945.49..3945.50 rows=1 width=96) (actual time=26.759..26.759 rows=1 loops=1)
   ->  Nested Loop  (cost=11.16..3945.49 rows=1 width=48) (actual time=7.887..26.477 rows=1620 loops=1)
         Join Filter: (it3.id = pi.info_type_id)
         Rows Removed by Join Filter: 3270
         ->  Seq Scan on info_type it3  (cost=0.00..2.41 rows=1 width=4) (actual time=0.007..0.013 rows=1 loops=1)
               Filter: ((info)::text = 'trivia'::text)
               Rows Removed by Filter: 112
         ->  Nested Loop  (cost=11.16..3943.06 rows=1 width=52) (actual time=7.863..26.137 rows=4890 loops=1)
               Join Filter: (n.id = pi.person_id)
               ->  Nested Loop  (cost=10.73..3922.80 rows=1 width=60) (actual time=7.836..24.708 rows=30 loops=1)
                     Join Filter: (cc.subject_id = cct1.id)
                     ->  Nested Loop  (cost=10.73..3921.74 rows=1 width=64) (actual time=7.833..24.672 rows=30 loops=1)
                           ->  Nested Loop  (cost=10.30..3919.44 rows=1 width=45) (actual time=7.803..24.575 rows=30 loops=1)
                                 Join Filter: (ci.role_id = rt.id)
                                 ->  Nested Loop  (cost=10.30..3918.28 rows=1 width=49) (actual time=7.791..24.524 rows=30 loops=1)
                                       Join Filter: (mi.info_type_id = it.id)
                                       ->  Nested Loop  (cost=10.30..3915.85 rows=1 width=53) (actual time=7.785..24.416 rows=30 loops=1)
                                             ->  Nested Loop  (cost=9.88..3913.83 rows=1 width=57) (actual time=7.772..23.973 rows=132 loops=1)
                                                   Join Filter: (t.id = mc.movie_id)
                                                   ->  Nested Loop  (cost=9.45..3908.99 rows=1 width=73) (actual time=7.743..23.877 rows=6 loops=1)
                                                         ->  Nested Loop  (cost=9.02..3902.76 rows=2 width=61) (actual time=6.906..23.221 rows=132 loops=1)
                                                               ->  Nested Loop  (cost=8.60..3899.85 rows=1 width=57) (actual time=6.847..22.594 rows=76 loops=1)
                                                                     Join Filter: (t.id = ci.movie_id)
                                                                     ->  Nested Loop  (cost=8.03..3852.25 rows=1 width=41) (actual time=6.817..20.909 rows=2 loops=1)
                                                                           Join Filter: (t.id = mi.movie_id)
                                                                           ->  Nested Loop  (cost=7.60..3809.27 rows=1 width=33) (actual time=6.738..20.525 rows=1 loops=1)
                                                                                 Join Filter: (cct2.id = cc.status_id)
                                                                                 ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=1)
                                                                                       Filter: ((kind)::text = 'complete+verified'::text)
                                                                                       Rows Removed by Filter: 3
                                                                                 ->  Nested Loop  (cost=7.60..3808.21 rows=1 width=37) (actual time=6.728..20.514 rows=1 loops=1)
                                                                                       Join Filter: (t.id = cc.movie_id)
                                                                                       ->  Nested Loop  (cost=7.18..3805.41 rows=1 width=25) (actual time=6.697..20.482 rows=1 loops=1)
                                                                                             ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=0.181..14.710 rows=414 loops=1)
                                                                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.053..11.811 rows=1 loops=1)
                                                                                                         Filter: ((keyword)::text = 'computer-animation'::text)
                                                                                                         Rows Removed by Filter: 134169
                                                                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=0.126..2.842 rows=414 loops=1)
                                                                                                         Recheck Cond: (keyword_id = k.id)
                                                                                                         Heap Blocks: exact=358
                                                                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.071..0.071 rows=414 loops=1)
                                                                                                               Index Cond: (keyword_id = k.id)
                                                                                             ->  Index Scan using title_pkey on title t  (cost=0.43..2.12 rows=1 width=21) (actual time=0.014..0.014 rows=0 loops=414)
                                                                                                   Index Cond: (id = mk.movie_id)
                                                                                                   Filter: ((production_year >= 2000) AND (production_year <= 2010) AND ((title)::text = 'Shrek 2'::text))
                                                                                                   Rows Removed by Filter: 1
                                                                                       ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..2.77 rows=2 width=12) (actual time=0.029..0.029 rows=1 loops=1)
                                                                                             Index Cond: (movie_id = mk.movie_id)
                                                                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..42.97 rows=1 width=8) (actual time=0.078..0.382 rows=2 loops=1)
                                                                                 Index Cond: (movie_id = mk.movie_id)
                                                                                 Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%200%'::text) OR ((info)::text ~~ 'USA:%200%'::text)))
                                                                                 Rows Removed by Filter: 455
                                                                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..47.58 rows=1 width=16) (actual time=0.017..0.833 rows=38 loops=2)
                                                                           Index Cond: (movie_id = mk.movie_id)
                                                                           Filter: ((note)::text = ANY ('{(voice),"(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                           Rows Removed by Filter: 191
                                                               ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.89 rows=2 width=4) (actual time=0.006..0.008 rows=2 loops=76)
                                                                     Index Cond: (person_id = ci.person_id)
                                                                     Heap Fetches: 132
                                                         ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..2.22 rows=1 width=20) (actual time=0.005..0.005 rows=0 loops=132)
                                                               Index Cond: (id = ci.person_role_id)
                                                               Filter: ((name)::text = 'Queen'::text)
                                                               Rows Removed by Filter: 1
                                                   ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..4.77 rows=5 width=8) (actual time=0.007..0.012 rows=22 loops=6)
                                                         Index Cond: (movie_id = mk.movie_id)
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..2.03 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=132)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((country_code)::text = '[us]'::text)
                                                   Rows Removed by Filter: 1
                                       ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=30)
                                             Filter: ((info)::text = 'release dates'::text)
                                             Rows Removed by Filter: 15
                                 ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=30)
                                       Filter: ((role)::text = 'actress'::text)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using name_pkey on name n  (cost=0.43..2.30 rows=1 width=19) (actual time=0.003..0.003 rows=1 loops=30)
                                 Index Cond: (id = ci.person_id)
                                 Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                     ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=30)
                           Filter: ((kind)::text = 'cast'::text)
               ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..19.93 rows=26 width=8) (actual time=0.002..0.027 rows=163 loops=30)
                     Index Cond: (person_id = an.person_id)
 Planning Time: 118.758 ms
 Execution Time: 27.101 ms
(84 rows)

SET
                                                                                                                 QUERY PLAN                                                                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4148.76..4148.77 rows=1 width=96) (actual time=179.146..179.146 rows=1 loops=1)
   ->  Nested Loop  (cost=11.16..4148.76 rows=1 width=48) (actual time=28.310..179.132 rows=15 loops=1)
         ->  Nested Loop  (cost=10.74..4146.73 rows=1 width=52) (actual time=28.299..178.888 rows=66 loops=1)
               Join Filter: (pi.info_type_id = it3.id)
               Rows Removed by Join Filter: 10692
               ->  Nested Loop  (cost=10.74..4144.31 rows=1 width=56) (actual time=27.010..87.012 rows=10758 loops=1)
                     Join Filter: (mi.info_type_id = it.id)
                     ->  Nested Loop  (cost=10.74..4141.88 rows=1 width=60) (actual time=27.004..54.437 rows=10758 loops=1)
                           Join Filter: (n.id = pi.person_id)
                           ->  Nested Loop  (cost=10.31..4121.62 rows=1 width=68) (actual time=26.993..50.862 rows=66 loops=1)
                                 ->  Nested Loop  (cost=9.88..4117.61 rows=1 width=56) (actual time=26.983..50.727 rows=66 loops=1)
                                       Join Filter: (n.id = an.person_id)
                                       ->  Nested Loop  (cost=9.46..4114.69 rows=1 width=52) (actual time=26.968..50.635 rows=22 loops=1)
                                             Join Filter: (mi.movie_id = t.id)
                                             ->  Nested Loop  (cost=9.03..4110.43 rows=2 width=55) (actual time=9.233..50.241 rows=193 loops=1)
                                                   Join Filter: (mc.movie_id = mi.movie_id)
                                                   ->  Nested Loop  (cost=8.59..3981.80 rows=3 width=47) (actual time=3.322..36.581 rows=167 loops=1)
                                                         Join Filter: (ci.movie_id = mc.movie_id)
                                                         ->  Nested Loop  (cost=8.16..3976.97 rows=1 width=39) (actual time=3.289..36.354 rows=6 loops=1)
                                                               ->  Nested Loop  (cost=7.73..3974.67 rows=1 width=20) (actual time=1.388..33.878 rows=175 loops=1)
                                                                     Join Filter: (rt.id = ci.role_id)
                                                                     Rows Removed by Join Filter: 528
                                                                     ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.015..0.016 rows=1 loops=1)
                                                                           Filter: ((role)::text = 'actress'::text)
                                                                           Rows Removed by Filter: 11
                                                                     ->  Nested Loop  (cost=7.73..3973.48 rows=3 width=24) (actual time=1.054..33.791 rows=703 loops=1)
                                                                           ->  Nested Loop  (cost=7.17..3830.71 rows=3 width=8) (actual time=1.005..15.726 rows=23 loops=1)
                                                                                 Join Filter: (cc.status_id = cct2.id)
                                                                                 Rows Removed by Join Filter: 51
                                                                                 ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=1)
                                                                                       Filter: ((kind)::text = 'complete+verified'::text)
                                                                                       Rows Removed by Filter: 3
                                                                                 ->  Nested Loop  (cost=7.17..3829.51 rows=12 width=12) (actual time=0.375..15.702 rows=74 loops=1)
                                                                                       Join Filter: (cc.subject_id = cct1.id)
                                                                                       Rows Removed by Join Filter: 16
                                                                                       ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=1)
                                                                                             Filter: ((kind)::text = 'cast'::text)
                                                                                             Rows Removed by Filter: 3
                                                                                       ->  Nested Loop  (cost=7.17..3827.87 rows=47 width=16) (actual time=0.372..15.679 rows=90 loops=1)
                                                                                             ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=0.137..13.203 rows=414 loops=1)
                                                                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.030..11.459 rows=1 loops=1)
                                                                                                         Filter: ((keyword)::text = 'computer-animation'::text)
                                                                                                         Rows Removed by Filter: 134169
                                                                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=0.106..1.694 rows=414 loops=1)
                                                                                                         Recheck Cond: (keyword_id = k.id)
                                                                                                         Heap Blocks: exact=358
                                                                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.055..0.055 rows=414 loops=1)
                                                                                                               Index Cond: (keyword_id = k.id)
                                                                                             ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..2.77 rows=2 width=12) (actual time=0.005..0.006 rows=0 loops=414)
                                                                                                   Index Cond: (movie_id = mk.movie_id)
                                                                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..47.58 rows=1 width=16) (actual time=0.096..0.781 rows=31 loops=23)
                                                                                 Index Cond: (movie_id = mk.movie_id)
                                                                                 Filter: ((note)::text = ANY ('{(voice),"(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                                 Rows Removed by Filter: 116
                                                               ->  Index Scan using name_pkey on name n  (cost=0.43..2.30 rows=1 width=19) (actual time=0.014..0.014 rows=0 loops=175)
                                                                     Index Cond: (id = ci.person_id)
                                                                     Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                                                     Rows Removed by Filter: 1
                                                         ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..4.77 rows=5 width=8) (actual time=0.019..0.031 rows=28 loops=6)
                                                               Index Cond: (movie_id = mk.movie_id)
                                                   ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..42.86 rows=1 width=8) (actual time=0.019..0.081 rows=1 loops=167)
                                                         Index Cond: (movie_id = mk.movie_id)
                                                         Filter: ((info)::text ~~ 'USA:%200%'::text)
                                                         Rows Removed by Filter: 422
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..2.12 rows=1 width=21) (actual time=0.002..0.002 rows=0 loops=193)
                                                   Index Cond: (id = mk.movie_id)
                                                   Filter: ((production_year >= 2000) AND (production_year <= 2005) AND ((title)::text = 'Shrek 2'::text))
                                                   Rows Removed by Filter: 1
                                       ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.89 rows=2 width=4) (actual time=0.002..0.003 rows=3 loops=22)
                                             Index Cond: (person_id = ci.person_id)
                                             Heap Fetches: 66
                                 ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..2.22 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=66)
                                       Index Cond: (id = ci.person_role_id)
                                       Filter: ((name)::text = 'Queen'::text)
                           ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..19.93 rows=26 width=8) (actual time=0.001..0.028 rows=163 loops=66)
                                 Index Cond: (person_id = an.person_id)
                     ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=10758)
                           Filter: ((info)::text = 'release dates'::text)
                           Rows Removed by Filter: 15
               ->  Seq Scan on info_type it3  (cost=0.00..2.41 rows=1 width=4) (actual time=0.003..0.008 rows=1 loops=10758)
                     Filter: ((info)::text = 'height'::text)
                     Rows Removed by Filter: 111
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..2.03 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=66)
               Index Cond: (id = mc.company_id)
               Filter: ((country_code)::text = '[us]'::text)
               Rows Removed by Filter: 1
 Planning Time: 116.926 ms
 Execution Time: 179.464 ms
(88 rows)

SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4547.37..4547.38 rows=1 width=96) (actual time=562.228..562.228 rows=1 loops=1)
   ->  Nested Loop  (cost=11.16..4547.36 rows=1 width=48) (actual time=75.012..558.894 rows=16308 loops=1)
         Join Filter: (cc.status_id = cct2.id)
         Rows Removed by Join Filter: 11714
         ->  Nested Loop  (cost=11.16..4546.30 rows=1 width=52) (actual time=18.176..530.982 rows=28022 loops=1)
               ->  Nested Loop  (cost=10.74..4544.27 rows=1 width=56) (actual time=17.771..307.860 rows=149974 loops=1)
                     Join Filter: (n.id = an.person_id)
                     ->  Nested Loop  (cost=10.32..4541.38 rows=1 width=68) (actual time=17.740..199.936 rows=36250 loops=1)
                           Join Filter: (it3.id = pi.info_type_id)
                           Rows Removed by Join Filter: 117713
                           ->  Seq Scan on info_type it3  (cost=0.00..2.41 rows=1 width=4) (actual time=0.007..0.014 rows=1 loops=1)
                                 Filter: ((info)::text = 'trivia'::text)
                                 Rows Removed by Filter: 112
                           ->  Nested Loop  (cost=10.32..4538.95 rows=1 width=72) (actual time=17.729..189.483 rows=153963 loops=1)
                                 Join Filter: (n.id = pi.person_id)
                                 ->  Nested Loop  (cost=9.89..4518.69 rows=1 width=64) (actual time=17.694..144.603 rows=1206 loops=1)
                                       Join Filter: (ci.role_id = rt.id)
                                       ->  Nested Loop  (cost=9.89..4517.53 rows=1 width=68) (actual time=17.687..143.238 rows=1206 loops=1)
                                             ->  Nested Loop  (cost=9.46..4515.32 rows=1 width=56) (actual time=17.654..140.667 rows=1455 loops=1)
                                                   Join Filter: (cc.subject_id = cct1.id)
                                                   ->  Nested Loop  (cost=9.46..4514.26 rows=1 width=60) (actual time=17.648..139.312 rows=1455 loops=1)
                                                         Join Filter: (t.id = mc.movie_id)
                                                         ->  Nested Loop  (cost=9.03..4509.42 rows=1 width=76) (actual time=17.611..138.239 rows=58 loops=1)
                                                               Join Filter: (mi.info_type_id = it.id)
                                                               ->  Nested Loop  (cost=9.03..4506.99 rows=1 width=80) (actual time=17.604..138.007 rows=58 loops=1)
                                                                     ->  Nested Loop  (cost=8.61..4504.20 rows=1 width=68) (actual time=15.493..137.645 rows=75 loops=1)
                                                                           ->  Nested Loop  (cost=8.18..4501.91 rows=1 width=49) (actual time=2.666..101.350 rows=7505 loops=1)
                                                                                 Join Filter: (t.id = ci.movie_id)
                                                                                 ->  Nested Loop  (cost=7.61..4406.63 rows=2 width=33) (actual time=0.786..43.190 rows=357 loops=1)
                                                                                       Join Filter: (t.id = mi.movie_id)
                                                                                       ->  Nested Loop  (cost=7.18..3804.91 rows=14 width=25) (actual time=0.151..18.215 rows=249 loops=1)
                                                                                             ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=0.137..14.283 rows=414 loops=1)
                                                                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.030..12.673 rows=1 loops=1)
                                                                                                         Filter: ((keyword)::text = 'computer-animation'::text)
                                                                                                         Rows Removed by Filter: 134169
                                                                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=0.105..1.545 rows=414 loops=1)
                                                                                                         Recheck Cond: (keyword_id = k.id)
                                                                                                         Heap Blocks: exact=358
                                                                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.055..0.055 rows=414 loops=1)
                                                                                                               Index Cond: (keyword_id = k.id)
                                                                                             ->  Index Scan using title_pkey on title t  (cost=0.43..2.12 rows=1 width=21) (actual time=0.009..0.009 rows=1 loops=414)
                                                                                                   Index Cond: (id = mk.movie_id)
                                                                                                   Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                                                                                   Rows Removed by Filter: 0
                                                                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..42.97 rows=1 width=8) (actual time=0.045..0.100 rows=1 loops=249)
                                                                                             Index Cond: (movie_id = mk.movie_id)
                                                                                             Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%200%'::text) OR ((info)::text ~~ 'USA:%200%'::text)))
                                                                                             Rows Removed by Filter: 88
                                                                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..47.63 rows=1 width=16) (actual time=0.028..0.159 rows=21 loops=357)
                                                                                       Index Cond: (movie_id = mk.movie_id)
                                                                                       Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                                       Rows Removed by Filter: 72
                                                                           ->  Index Scan using name_pkey on name n  (cost=0.43..2.29 rows=1 width=19) (actual time=0.005..0.005 rows=0 loops=7505)
                                                                                 Index Cond: (id = ci.person_id)
                                                                                 Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                                                                 Rows Removed by Filter: 1
                                                                     ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..2.77 rows=2 width=12) (actual time=0.004..0.004 rows=1 loops=75)
                                                                           Index Cond: (movie_id = t.id)
                                                               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=58)
                                                                     Filter: ((info)::text = 'release dates'::text)
                                                                     Rows Removed by Filter: 15
                                                         ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..4.77 rows=5 width=8) (actual time=0.007..0.013 rows=25 loops=58)
                                                               Index Cond: (movie_id = mk.movie_id)
                                                   ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=1455)
                                                         Filter: ((kind)::text = 'cast'::text)
                                             ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..2.21 rows=1 width=20) (actual time=0.001..0.001 rows=1 loops=1455)
                                                   Index Cond: (id = ci.person_role_id)
                                       ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1206)
                                             Filter: ((role)::text = 'actress'::text)
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..19.93 rows=26 width=8) (actual time=0.002..0.019 rows=128 loops=1206)
                                       Index Cond: (person_id = ci.person_id)
                     ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.87 rows=2 width=4) (actual time=0.001..0.002 rows=4 loops=36250)
                           Index Cond: (person_id = pi.person_id)
                           Heap Fetches: 149974
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..2.03 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=149974)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text = '[us]'::text)
                     Rows Removed by Filter: 1
         ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=28022)
               Filter: ((kind)::text = 'complete+verified'::text)
               Rows Removed by Filter: 3
 Planning Time: 119.853 ms
 Execution Time: 562.570 ms
(84 rows)

SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3832.24..3832.25 rows=1 width=32) (actual time=593.913..593.913 rows=1 loops=1)
   ->  Nested Loop  (cost=8.03..3832.22 rows=7 width=17) (actual time=7.375..592.754 rows=7834 loops=1)
         Join Filter: (mc.movie_id = t.id)
         ->  Nested Loop  (cost=7.60..3828.74 rows=7 width=8) (actual time=7.357..557.219 rows=7834 loops=1)
               ->  Nested Loop  (cost=7.18..3752.99 rows=170 width=12) (actual time=6.623..268.107 rows=148552 loops=1)
                     ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.580..81.727 rows=41840 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.501..11.583 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'character-name-in-title'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.077..65.755 rows=41840 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=11541
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=4.033..4.033 rows=41840 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.003..0.004 rows=4 loops=41840)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=148552)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text = '[de]'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.004..0.004 rows=1 loops=7834)
               Index Cond: (id = mk.movie_id)
 Planning Time: 2.260 ms
 Execution Time: 594.113 ms
(24 rows)

SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3829.74..3829.75 rows=1 width=32) (actual time=570.794..570.795 rows=1 loops=1)
   ->  Nested Loop  (cost=8.03..3829.73 rows=2 width=17) (actual time=9.190..569.988 rows=5228 loops=1)
         Join Filter: (mc.movie_id = t.id)
         ->  Nested Loop  (cost=7.60..3828.74 rows=2 width=8) (actual time=9.169..545.996 rows=5228 loops=1)
               ->  Nested Loop  (cost=7.18..3752.99 rows=170 width=12) (actual time=6.709..265.116 rows=148552 loops=1)
                     ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.669..80.653 rows=41840 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.658..11.675 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'character-name-in-title'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.007..64.521 rows=41840 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=11541
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=3.961..3.961 rows=41840 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.003..0.004 rows=4 loops=41840)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=148552)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text = '[nl]'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.004..0.004 rows=1 loops=5228)
               Index Cond: (id = mk.movie_id)
 Planning Time: 2.482 ms
 Execution Time: 570.987 ms
(24 rows)

SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3829.24..3829.25 rows=1 width=32) (actual time=541.811..541.811 rows=1 loops=1)
   ->  Nested Loop  (cost=8.03..3829.24 rows=1 width=17) (actual time=541.807..541.807 rows=0 loops=1)
         Join Filter: (mc.movie_id = t.id)
         ->  Nested Loop  (cost=7.60..3828.74 rows=1 width=8) (actual time=541.807..541.807 rows=0 loops=1)
               ->  Nested Loop  (cost=7.18..3752.99 rows=170 width=12) (actual time=6.762..265.506 rows=148552 loops=1)
                     ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.721..81.261 rows=41840 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.668..11.627 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'character-name-in-title'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.050..65.354 rows=41840 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=11541
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=3.954..3.954 rows=41840 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.003..0.004 rows=4 loops=41840)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=148552)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text = '[sm]'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (never executed)
               Index Cond: (id = mk.movie_id)
 Planning Time: 2.552 ms
 Execution Time: 542.003 ms
(24 rows)

SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3845.82..3845.83 rows=1 width=32) (actual time=729.727..729.727 rows=1 loops=1)
   ->  Nested Loop  (cost=8.03..3845.67 rows=61 width=17) (actual time=6.879..721.588 rows=68316 loops=1)
         ->  Nested Loop  (cost=7.61..3769.92 rows=170 width=21) (actual time=6.816..431.402 rows=148552 loops=1)
               Join Filter: (t.id = mc.movie_id)
               ->  Nested Loop  (cost=7.18..3749.42 rows=34 width=25) (actual time=6.763..249.415 rows=41840 loops=1)
                     ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.743..76.732 rows=41840 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.676..11.726 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'character-name-in-title'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.064..60.311 rows=41840 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=11541
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=4.010..4.011 rows=41840 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.004..0.004 rows=1 loops=41840)
                           Index Cond: (id = mk.movie_id)
               ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.003..0.004 rows=4 loops=41840)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=148552)
               Index Cond: (id = mc.company_id)
               Filter: ((country_code)::text = '[us]'::text)
               Rows Removed by Filter: 1
 Planning Time: 2.516 ms
 Execution Time: 729.924 ms
(24 rows)

SET
                                                                                                         QUERY PLAN                                                                                                         
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8691.91..8691.92 rows=1 width=128) (actual time=1345.708..1345.709 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.70..8691.90 rows=1 width=80) (actual time=26.092..1345.207 rows=757 loops=1)
         ->  Nested Loop  (cost=1012.27..8690.88 rows=1 width=69) (actual time=26.053..1334.976 rows=1021 loops=1)
               ->  Nested Loop  (cost=1012.13..8690.69 rows=1 width=73) (actual time=26.044..1333.113 rows=1021 loops=1)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=1011.70..8672.67 rows=1 width=47) (actual time=13.818..1152.401 rows=1736 loops=1)
                           Join Filter: (t.id = ci.movie_id)
                           ->  Nested Loop  (cost=1011.13..8643.58 rows=1 width=39) (actual time=7.082..315.491 rows=2023 loops=1)
                                 Join Filter: (mi_idx.movie_id = t.id)
                                 ->  Nested Loop  (cost=1010.70..8642.75 rows=1 width=18) (actual time=7.056..220.658 rows=16283 loops=1)
                                       ->  Gather  (cost=1010.57..8642.58 rows=1 width=22) (actual time=6.299..183.601 rows=35346 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Nested Loop  (cost=10.57..7642.48 rows=1 width=22) (actual time=5.007..313.596 rows=11782 loops=3)
                                                   ->  Nested Loop  (cost=10.44..7642.32 rows=1 width=26) (actual time=4.991..300.350 rows=11782 loops=3)
                                                         ->  Hash Join  (cost=10.02..7640.66 rows=2 width=14) (actual time=4.687..254.145 rows=21234 loops=3)
                                                               Hash Cond: (mi_idx.info_type_id = it2.id)
                                                               ->  Nested Loop  (cost=7.60..7637.43 rows=294 width=18) (actual time=4.596..245.252 rows=63896 loops=3)
                                                                     ->  Nested Loop  (cost=7.17..7557.95 rows=98 width=4) (actual time=4.559..125.349 rows=25571 loops=3)
                                                                           ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4353.35 rows=3 width=4) (actual time=0.274..22.977 rows=2 loops=3)
                                                                                 Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                                 Rows Removed by Filter: 44721
                                                                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1065.21 rows=299 width=8) (actual time=3.174..42.641 rows=10959 loops=7)
                                                                                 Recheck Cond: (keyword_id = k.id)
                                                                                 Heap Blocks: exact=12389
                                                                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.843..1.843 rows=10959 loops=7)
                                                                                       Index Cond: (keyword_id = k.id)
                                                                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.78 rows=3 width=14) (actual time=0.004..0.004 rows=2 loops=76714)
                                                                           Index Cond: (movie_id = mk.movie_id)
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.024..0.025 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.018..0.020 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'votes'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.81 rows=2 width=12) (actual time=0.002..0.002 rows=1 loops=63701)
                                                               Index Cond: (movie_id = mi_idx.movie_id)
                                                   ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=35346)
                                                         Index Cond: (id = cc.subject_id)
                                                         Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
                                       ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=35346)
                                             Index Cond: (id = cc.status_id)
                                             Filter: ((kind)::text = 'complete+verified'::text)
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.82 rows=1 width=21) (actual time=0.006..0.006 rows=0 loops=16283)
                                       Index Cond: (id = mk.movie_id)
                                       Filter: (production_year > 2000)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..29.08 rows=1 width=8) (actual time=0.291..0.413 rows=1 loops=2023)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                 Rows Removed by Filter: 137
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..18.01 rows=1 width=50) (actual time=0.103..0.104 rows=1 loops=1736)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((info)::text = ANY ('{Horror,Thriller}'::text[]))
                           Rows Removed by Filter: 226
               ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1021)
                     Index Cond: (id = mi.info_type_id)
                     Filter: ((info)::text = 'genres'::text)
         ->  Index Scan using name_pkey on name n  (cost=0.43..1.03 rows=1 width=19) (actual time=0.009..0.009 rows=1 loops=1021)
               Index Cond: (id = ci.person_id)
               Filter: ((gender)::text = 'm'::text)
               Rows Removed by Filter: 0
 Planning Time: 73.126 ms
 Execution Time: 1346.143 ms
(64 rows)

SET
                                                                                                           QUERY PLAN                                                                                                            
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8689.58..8689.59 rows=1 width=128) (actual time=322.723..322.723 rows=1 loops=1)
   ->  Nested Loop  (cost=1010.42..8689.57 rows=1 width=80) (actual time=75.087..322.679 rows=28 loops=1)
         ->  Nested Loop  (cost=1010.29..8689.41 rows=1 width=84) (actual time=75.078..322.631 rows=28 loops=1)
               ->  Nested Loop  (cost=1010.16..8689.23 rows=1 width=88) (actual time=75.069..322.481 rows=108 loops=1)
                     Join Filter: (t.id = cc.movie_id)
                     ->  Nested Loop  (cost=1009.74..8688.40 rows=1 width=100) (actual time=75.044..322.145 rows=108 loops=1)
                           ->  Nested Loop  (cost=1009.31..8687.37 rows=1 width=89) (actual time=75.012..321.547 rows=108 loops=1)
                                 ->  Nested Loop  (cost=1009.17..8687.19 rows=1 width=93) (actual time=74.998..321.153 rows=324 loops=1)
                                       Join Filter: (t.id = mi_idx.movie_id)
                                       ->  Nested Loop  (cost=1008.74..8686.37 rows=1 width=79) (actual time=74.968..320.697 rows=108 loops=1)
                                             ->  Nested Loop  (cost=1008.60..8686.19 rows=1 width=83) (actual time=74.961..320.517 rows=108 loops=1)
                                                   Join Filter: (t.id = mi.movie_id)
                                                   ->  Nested Loop  (cost=1008.16..8668.17 rows=1 width=33) (actual time=74.610..314.036 rows=77 loops=1)
                                                         Join Filter: (t.id = ci.movie_id)
                                                         ->  Gather  (cost=1007.60..8639.08 rows=1 width=25) (actual time=59.406..307.269 rows=49 loops=1)
                                                               Workers Planned: 2
                                                               Workers Launched: 2
                                                               ->  Nested Loop  (cost=7.60..7638.98 rows=1 width=25) (actual time=65.051..246.395 rows=16 loops=3)
                                                                     ->  Nested Loop  (cost=7.17..7557.95 rows=98 width=4) (actual time=4.415..116.069 rows=25571 loops=3)
                                                                           ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4353.35 rows=3 width=4) (actual time=0.174..23.394 rows=2 loops=3)
                                                                                 Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                                 Rows Removed by Filter: 44721
                                                                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1065.21 rows=299 width=8) (actual time=3.129..38.541 rows=10959 loops=7)
                                                                                 Recheck Cond: (keyword_id = k.id)
                                                                                 Heap Blocks: exact=12389
                                                                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.795..1.795 rows=10959 loops=7)
                                                                                       Index Cond: (keyword_id = k.id)
                                                                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.83 rows=1 width=21) (actual time=0.005..0.005 rows=0 loops=76714)
                                                                           Index Cond: (id = mk.movie_id)
                                                                           Filter: ((production_year > 2000) AND (((title)::text ~~ '%Freddy%'::text) OR ((title)::text ~~ '%Jason%'::text) OR ((title)::text ~~ 'Saw%'::text)))
                                                                           Rows Removed by Filter: 1
                                                         ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..29.08 rows=1 width=8) (actual time=0.152..0.227 rows=2 loops=49)
                                                               Index Cond: (movie_id = mk.movie_id)
                                                               Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                                               Rows Removed by Filter: 82
                                                   ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..18.01 rows=1 width=50) (actual time=0.083..0.084 rows=1 loops=77)
                                                         Index Cond: (movie_id = mk.movie_id)
                                                         Filter: ((info)::text = ANY ('{Horror,Thriller}'::text[]))
                                                         Rows Removed by Filter: 279
                                             ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=108)
                                                   Index Cond: (id = mi.info_type_id)
                                                   Filter: ((info)::text = 'genres'::text)
                                       ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.78 rows=3 width=14) (actual time=0.003..0.003 rows=3 loops=108)
                                             Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=324)
                                       Index Cond: (id = mi_idx.info_type_id)
                                       Filter: ((info)::text = 'votes'::text)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using name_pkey on name n  (cost=0.43..1.03 rows=1 width=19) (actual time=0.005..0.005 rows=1 loops=108)
                                 Index Cond: (id = ci.person_id)
                                 Filter: ((gender)::text = 'm'::text)
                     ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.81 rows=2 width=12) (actual time=0.002..0.003 rows=1 loops=108)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=108)
                     Index Cond: (id = cc.status_id)
                     Filter: ((kind)::text = 'complete+verified'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=28)
               Index Cond: (id = cc.subject_id)
               Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
 Planning Time: 73.230 ms
 Execution Time: 327.438 ms
(62 rows)

SET
                                                                                                         QUERY PLAN                                                                                                         
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8709.53..8709.54 rows=1 width=128) (actual time=4014.647..4014.648 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.70..8709.52 rows=1 width=80) (actual time=12.293..4010.907 rows=8024 loops=1)
         ->  Nested Loop  (cost=1012.27..8708.49 rows=1 width=69) (actual time=12.259..3930.388 rows=11863 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=1011.71..8679.40 rows=1 width=85) (actual time=10.076..1285.077 rows=14655 loops=1)
                     ->  Nested Loop  (cost=1011.58..8679.23 rows=1 width=89) (actual time=7.572..1256.391 rows=27522 loops=1)
                           ->  Nested Loop  (cost=1011.45..8679.06 rows=1 width=93) (actual time=7.556..1211.083 rows=37669 loops=1)
                                 ->  Nested Loop  (cost=1011.03..8678.23 rows=1 width=81) (actual time=6.087..1069.986 rows=63386 loops=1)
                                       Join Filter: (mi.movie_id = t.id)
                                       ->  Gather  (cost=1010.60..8677.40 rows=1 width=60) (actual time=6.064..776.173 rows=63386 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Nested Loop  (cost=10.60..7677.30 rows=1 width=60) (actual time=4.721..1294.560 rows=21129 loops=3)
                                                   ->  Nested Loop  (cost=10.46..7677.12 rows=1 width=64) (actual time=4.716..1266.337 rows=22577 loops=3)
                                                         Join Filter: (mi_idx.movie_id = mi.movie_id)
                                                         ->  Hash Join  (cost=10.02..7640.66 rows=2 width=14) (actual time=4.611..249.750 rows=21234 loops=3)
                                                               Hash Cond: (mi_idx.info_type_id = it2.id)
                                                               ->  Nested Loop  (cost=7.60..7637.43 rows=294 width=18) (actual time=4.529..239.910 rows=63896 loops=3)
                                                                     ->  Nested Loop  (cost=7.17..7557.95 rows=98 width=4) (actual time=4.490..120.302 rows=25571 loops=3)
                                                                           ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4353.35 rows=3 width=4) (actual time=0.266..24.254 rows=2 loops=3)
                                                                                 Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                                 Rows Removed by Filter: 44721
                                                                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1065.21 rows=299 width=8) (actual time=3.143..39.861 rows=10959 loops=7)
                                                                                 Recheck Cond: (keyword_id = k.id)
                                                                                 Heap Blocks: exact=12389
                                                                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.809..1.809 rows=10959 loops=7)
                                                                                       Index Cond: (keyword_id = k.id)
                                                                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.78 rows=3 width=14) (actual time=0.004..0.004 rows=2 loops=76714)
                                                                           Index Cond: (movie_id = mk.movie_id)
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.029..0.029 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.023..0.025 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'votes'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..18.22 rows=1 width=50) (actual time=0.046..0.047 rows=1 loops=63701)
                                                               Index Cond: (movie_id = mk.movie_id)
                                                               Filter: ((info)::text = ANY ('{Horror,Action,Sci-Fi,Thriller,Crime,War}'::text[]))
                                                               Rows Removed by Filter: 58
                                                   ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=67732)
                                                         Index Cond: (id = mi.info_type_id)
                                                         Filter: ((info)::text = 'genres'::text)
                                                         Rows Removed by Filter: 0
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.82 rows=1 width=21) (actual time=0.004..0.004 rows=1 loops=63386)
                                             Index Cond: (id = mk.movie_id)
                                 ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.81 rows=2 width=12) (actual time=0.002..0.002 rows=1 loops=63386)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=37669)
                                 Index Cond: (id = cc.subject_id)
                                 Filter: ((kind)::text = 'cast'::text)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=27522)
                           Index Cond: (id = cc.status_id)
                           Filter: ((kind)::text = 'complete+verified'::text)
                           Rows Removed by Filter: 0
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..29.08 rows=1 width=8) (actual time=0.136..0.180 rows=1 loops=14655)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                     Rows Removed by Filter: 83
         ->  Index Scan using name_pkey on name n  (cost=0.43..1.03 rows=1 width=19) (actual time=0.006..0.006 rows=1 loops=11863)
               Index Cond: (id = ci.person_id)
               Filter: ((gender)::text = 'm'::text)
               Rows Removed by Filter: 0
 Planning Time: 73.931 ms
 Execution Time: 4015.092 ms
(64 rows)

SET
                                                                                                      QUERY PLAN                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8954.40..8954.41 rows=1 width=128) (actual time=1371.494..1371.494 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.87..8954.39 rows=1 width=80) (actual time=59.990..1370.938 rows=1273 loops=1)
         Join Filter: (mi.movie_id = t.id)
         ->  Nested Loop  (cost=1012.44..8953.28 rows=1 width=83) (actual time=59.957..1365.185 rows=1273 loops=1)
               ->  Nested Loop  (cost=1012.01..8951.99 rows=1 width=72) (actual time=59.925..1355.770 rows=1556 loops=1)
                     ->  Nested Loop  (cost=1011.87..8951.81 rows=1 width=76) (actual time=59.915..1353.251 rows=1616 loops=1)
                           Join Filter: (mi_idx.movie_id = mi.movie_id)
                           ->  Nested Loop  (cost=1011.44..8928.44 rows=1 width=26) (actual time=28.935..1257.559 rows=1471 loops=1)
                                 Join Filter: (mi_idx.movie_id = ci.movie_id)
                                 ->  Gather  (cost=1010.87..8895.40 rows=1 width=18) (actual time=28.667..908.379 rows=1547 loops=1)
                                       Workers Planned: 2
                                       Workers Launched: 2
                                       ->  Nested Loop  (cost=10.87..7895.30 rows=1 width=18) (actual time=17.252..955.749 rows=516 loops=3)
                                             ->  Nested Loop  (cost=10.45..7882.53 rows=13 width=22) (actual time=4.530..458.817 rows=199419 loops=3)
                                                   Join Filter: (mi_idx.movie_id = mc.movie_id)
                                                   ->  Hash Join  (cost=10.02..7878.13 rows=2 width=14) (actual time=4.495..253.190 rows=21234 loops=3)
                                                         Hash Cond: (mi_idx.info_type_id = it2.id)
                                                         ->  Nested Loop  (cost=7.60..7874.90 rows=294 width=18) (actual time=4.410..243.908 rows=63896 loops=3)
                                                               ->  Nested Loop  (cost=7.17..7767.34 rows=98 width=4) (actual time=4.375..126.015 rows=25571 loops=3)
                                                                     ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4562.73 rows=3 width=4) (actual time=0.170..22.491 rows=2 loops=3)
                                                                           Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                           Rows Removed by Filter: 44721
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1065.21 rows=299 width=8) (actual time=3.133..43.091 rows=10959 loops=7)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=12389
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.805..1.805 rows=10959 loops=7)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..1.07 rows=3 width=14) (actual time=0.004..0.004 rows=2 loops=76714)
                                                                     Index Cond: (movie_id = mk.movie_id)
                                                         ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.028..0.028 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.022..0.023 rows=1 loops=3)
                                                                     Filter: ((info)::text = 'votes'::text)
                                                                     Rows Removed by Filter: 112
                                                   ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.14 rows=5 width=8) (actual time=0.005..0.008 rows=9 loops=63701)
                                                         Index Cond: (movie_id = mk.movie_id)
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.98 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=598256)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((name)::text ~~ 'Lionsgate%'::text)
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..33.03 rows=1 width=8) (actual time=0.165..0.228 rows=1 loops=1547)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                       Rows Removed by Filter: 119
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..23.36 rows=1 width=50) (actual time=0.064..0.064 rows=1 loops=1471)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((info)::text = ANY ('{Horror,Thriller}'::text[]))
                                 Rows Removed by Filter: 173
                     ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1616)
                           Index Cond: (id = mi.info_type_id)
                           Filter: ((info)::text = 'genres'::text)
                           Rows Removed by Filter: 0
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.29 rows=1 width=19) (actual time=0.006..0.006 rows=1 loops=1556)
                     Index Cond: (id = ci.person_id)
                     Filter: ((gender)::text = 'm'::text)
                     Rows Removed by Filter: 0
         ->  Index Scan using title_pkey on title t  (cost=0.43..1.10 rows=1 width=21) (actual time=0.004..0.004 rows=1 loops=1273)
               Index Cond: (id = mk.movie_id)
 Planning Time: 51.170 ms
 Execution Time: 1376.399 ms
(60 rows)

SET
                                                                                                        QUERY PLAN                                                                                                         
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8939.01..8939.02 rows=1 width=128) (actual time=322.880..322.880 rows=1 loops=1)
   ->  Nested Loop  (cost=1010.59..8939.00 rows=1 width=80) (actual time=117.406..322.822 rows=84 loops=1)
         ->  Nested Loop  (cost=1010.16..8937.71 rows=1 width=69) (actual time=117.378..322.415 rows=84 loops=1)
               ->  Nested Loop  (cost=1010.02..8937.53 rows=1 width=73) (actual time=117.366..322.122 rows=252 loops=1)
                     Join Filter: (t.id = mi_idx.movie_id)
                     ->  Nested Loop  (cost=1009.59..8936.42 rows=1 width=83) (actual time=117.333..321.832 rows=84 loops=1)
                           ->  Nested Loop  (cost=1009.45..8936.24 rows=1 width=87) (actual time=117.314..321.685 rows=84 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=1009.01..8912.87 rows=1 width=37) (actual time=117.024..317.603 rows=53 loops=1)
                                       ->  Nested Loop  (cost=1008.59..8911.15 rows=1 width=41) (actual time=116.981..317.215 rows=119 loops=1)
                                             Join Filter: (t.id = mc.movie_id)
                                             ->  Nested Loop  (cost=1008.16..8908.99 rows=1 width=33) (actual time=74.039..316.192 rows=77 loops=1)
                                                   Join Filter: (t.id = ci.movie_id)
                                                   ->  Gather  (cost=1007.60..8875.95 rows=1 width=25) (actual time=58.760..309.487 rows=49 loops=1)
                                                         Workers Planned: 2
                                                         Workers Launched: 2
                                                         ->  Nested Loop  (cost=7.60..7875.85 rows=1 width=25) (actual time=64.408..246.354 rows=16 loops=3)
                                                               ->  Nested Loop  (cost=7.17..7767.34 rows=98 width=4) (actual time=4.448..115.629 rows=25571 loops=3)
                                                                     ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4562.73 rows=3 width=4) (actual time=0.193..23.249 rows=2 loops=3)
                                                                           Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                           Rows Removed by Filter: 44721
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1065.21 rows=299 width=8) (actual time=3.141..38.408 rows=10959 loops=7)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=12389
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.805..1.805 rows=10959 loops=7)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using title_pkey on title t  (cost=0.43..1.11 rows=1 width=21) (actual time=0.005..0.005 rows=0 loops=76714)
                                                                     Index Cond: (id = mk.movie_id)
                                                                     Filter: ((production_year > 2000) AND (((title)::text ~~ '%Freddy%'::text) OR ((title)::text ~~ '%Jason%'::text) OR ((title)::text ~~ 'Saw%'::text)))
                                                                     Rows Removed by Filter: 1
                                                   ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..33.03 rows=1 width=8) (actual time=0.152..0.226 rows=2 loops=49)
                                                         Index Cond: (movie_id = mk.movie_id)
                                                         Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                                         Rows Removed by Filter: 82
                                             ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.15 rows=1 width=8) (actual time=0.008..0.013 rows=2 loops=77)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((note)::text ~~ '%(Blu-ray)%'::text)
                                                   Rows Removed by Filter: 24
                                       ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.61 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=119)
                                             Index Cond: (id = mc.company_id)
                                             Filter: ((name)::text ~~ 'Lionsgate%'::text)
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..23.36 rows=1 width=50) (actual time=0.076..0.076 rows=2 loops=53)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Horror,Thriller}'::text[]))
                                       Rows Removed by Filter: 292
                           ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=84)
                                 Index Cond: (id = mi.info_type_id)
                                 Filter: ((info)::text = 'genres'::text)
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..1.07 rows=3 width=14) (actual time=0.002..0.003 rows=3 loops=84)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=252)
                     Index Cond: (id = mi_idx.info_type_id)
                     Filter: ((info)::text = 'votes'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using name_pkey on name n  (cost=0.43..1.29 rows=1 width=19) (actual time=0.004..0.004 rows=1 loops=84)
               Index Cond: (id = ci.person_id)
               Filter: ((gender)::text = 'm'::text)
 Planning Time: 50.384 ms
 Execution Time: 327.605 ms
(60 rows)

SET
                                                                                                      QUERY PLAN                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8954.61..8954.62 rows=1 width=128) (actual time=1384.240..1384.240 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.87..8954.60 rows=1 width=80) (actual time=58.545..1383.182 rows=2825 loops=1)
         Join Filter: (mi.movie_id = t.id)
         ->  Nested Loop  (cost=1012.44..8953.49 rows=1 width=83) (actual time=58.523..1374.113 rows=2825 loops=1)
               ->  Nested Loop  (cost=1012.01..8952.20 rows=1 width=72) (actual time=58.494..1362.026 rows=2825 loops=1)
                     ->  Nested Loop  (cost=1011.87..8952.02 rows=1 width=76) (actual time=58.484..1357.921 rows=3007 loops=1)
                           Join Filter: (mi_idx.movie_id = mi.movie_id)
                           ->  Nested Loop  (cost=1011.44..8928.44 rows=1 width=26) (actual time=28.966..1243.008 rows=1471 loops=1)
                                 Join Filter: (mi_idx.movie_id = ci.movie_id)
                                 ->  Gather  (cost=1010.87..8895.40 rows=1 width=18) (actual time=28.710..892.552 rows=1547 loops=1)
                                       Workers Planned: 2
                                       Workers Launched: 2
                                       ->  Nested Loop  (cost=10.87..7895.30 rows=1 width=18) (actual time=17.282..962.007 rows=516 loops=3)
                                             ->  Nested Loop  (cost=10.45..7882.53 rows=13 width=22) (actual time=4.650..461.122 rows=199419 loops=3)
                                                   Join Filter: (mi_idx.movie_id = mc.movie_id)
                                                   ->  Hash Join  (cost=10.02..7878.13 rows=2 width=14) (actual time=4.611..254.378 rows=21234 loops=3)
                                                         Hash Cond: (mi_idx.info_type_id = it2.id)
                                                         ->  Nested Loop  (cost=7.60..7874.90 rows=294 width=18) (actual time=4.523..245.046 rows=63896 loops=3)
                                                               ->  Nested Loop  (cost=7.17..7767.34 rows=98 width=4) (actual time=4.489..126.349 rows=25571 loops=3)
                                                                     ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4562.73 rows=3 width=4) (actual time=0.273..22.576 rows=2 loops=3)
                                                                           Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                           Rows Removed by Filter: 44721
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1065.21 rows=299 width=8) (actual time=3.135..43.170 rows=10959 loops=7)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=12389
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.800..1.800 rows=10959 loops=7)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..1.07 rows=3 width=14) (actual time=0.004..0.004 rows=2 loops=76714)
                                                                     Index Cond: (movie_id = mk.movie_id)
                                                         ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.027..0.027 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.021..0.023 rows=1 loops=3)
                                                                     Filter: ((info)::text = 'votes'::text)
                                                                     Rows Removed by Filter: 112
                                                   ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.14 rows=5 width=8) (actual time=0.005..0.008 rows=9 loops=63701)
                                                         Index Cond: (movie_id = mk.movie_id)
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.98 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=598256)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((name)::text ~~ 'Lionsgate%'::text)
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..33.03 rows=1 width=8) (actual time=0.166..0.229 rows=1 loops=1547)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                       Rows Removed by Filter: 119
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..23.57 rows=1 width=50) (actual time=0.075..0.077 rows=2 loops=1471)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((info)::text = ANY ('{Horror,Action,Sci-Fi,Thriller,Crime,War}'::text[]))
                                 Rows Removed by Filter: 172
                     ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=3007)
                           Index Cond: (id = mi.info_type_id)
                           Filter: ((info)::text = 'genres'::text)
                           Rows Removed by Filter: 0
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.29 rows=1 width=19) (actual time=0.004..0.004 rows=1 loops=2825)
                     Index Cond: (id = ci.person_id)
         ->  Index Scan using title_pkey on title t  (cost=0.43..1.10 rows=1 width=21) (actual time=0.003..0.003 rows=1 loops=2825)
               Index Cond: (id = mk.movie_id)
 Planning Time: 51.193 ms
 Execution Time: 1389.132 ms
(58 rows)

SET
                                                                              QUERY PLAN                                                                               
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3802.90..3802.91 rows=1 width=96) (actual time=15.765..15.766 rows=1 loops=1)
   ->  Nested Loop  (cost=7.90..3802.82 rows=11 width=116) (actual time=15.763..15.763 rows=0 loops=1)
         ->  Nested Loop  (cost=7.47..3756.66 rows=11 width=103) (actual time=15.762..15.762 rows=0 loops=1)
               ->  Nested Loop  (cost=7.04..3751.32 rows=11 width=94) (actual time=15.762..15.762 rows=0 loops=1)
                     Join Filter: (ml.link_type_id = lt.id)
                     ->  Nested Loop  (cost=7.04..3747.37 rows=11 width=16) (actual time=15.762..15.762 rows=0 loops=1)
                           ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=15.405..15.753 rows=1 loops=1)
                                 ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=15.374..15.721 rows=1 loops=1)
                                       Filter: ((keyword)::text = '10,000-mile-club'::text)
                                       Rows Removed by Filter: 134169
                                 ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=0.027..0.028 rows=1 loops=1)
                                       Recheck Cond: (keyword_id = k.id)
                                       Heap Blocks: exact=1
                                       ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.014..0.015 rows=1 loops=1)
                                             Index Cond: (keyword_id = k.id)
                           ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=12) (actual time=0.008..0.008 rows=0 loops=1)
                                 Index Cond: (movie_id = mk.movie_id)
                     ->  Materialize  (cost=0.00..1.27 rows=18 width=86) (never executed)
                           ->  Seq Scan on link_type lt  (cost=0.00..1.18 rows=18 width=86) (never executed)
               ->  Index Scan using title_pkey on title t1  (cost=0.43..0.49 rows=1 width=21) (never executed)
                     Index Cond: (id = mk.movie_id)
         ->  Index Scan using title_pkey on title t2  (cost=0.43..4.20 rows=1 width=21) (never executed)
               Index Cond: (id = ml.linked_movie_id)
 Planning Time: 2.902 ms
 Execution Time: 15.915 ms
(25 rows)

SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3802.90..3802.91 rows=1 width=96) (actual time=186.134..186.134 rows=1 loops=1)
   ->  Nested Loop  (cost=7.90..3802.82 rows=11 width=116) (actual time=6.942..185.022 rows=4388 loops=1)
         ->  Nested Loop  (cost=7.47..3756.66 rows=11 width=103) (actual time=6.910..141.087 rows=4388 loops=1)
               ->  Nested Loop  (cost=7.04..3751.32 rows=11 width=94) (actual time=6.884..129.645 rows=4388 loops=1)
                     Join Filter: (ml.link_type_id = lt.id)
                     Rows Removed by Join Filter: 30206
                     ->  Nested Loop  (cost=7.04..3747.37 rows=11 width=16) (actual time=6.862..124.899 rows=4388 loops=1)
                           ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.755..85.495 rows=41840 loops=1)
                                 ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.513..12.085 rows=1 loops=1)
                                       Filter: ((keyword)::text = 'character-name-in-title'::text)
                                       Rows Removed by Filter: 134169
                                 ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.239..69.442 rows=41840 loops=1)
                                       Recheck Cond: (keyword_id = k.id)
                                       Heap Blocks: exact=11541
                                       ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=4.171..4.171 rows=41840 loops=1)
                                             Index Cond: (keyword_id = k.id)
                           ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=12) (actual time=0.001..0.001 rows=0 loops=41840)
                                 Index Cond: (movie_id = mk.movie_id)
                     ->  Materialize  (cost=0.00..1.27 rows=18 width=86) (actual time=0.000..0.000 rows=8 loops=4388)
                           ->  Seq Scan on link_type lt  (cost=0.00..1.18 rows=18 width=86) (actual time=0.010..0.013 rows=17 loops=1)
               ->  Index Scan using title_pkey on title t1  (cost=0.43..0.49 rows=1 width=21) (actual time=0.002..0.002 rows=1 loops=4388)
                     Index Cond: (id = mk.movie_id)
         ->  Index Scan using title_pkey on title t2  (cost=0.43..4.20 rows=1 width=21) (actual time=0.010..0.010 rows=1 loops=4388)
               Index Cond: (id = ml.linked_movie_id)
 Planning Time: 2.393 ms
 Execution Time: 186.331 ms
(26 rows)

SET
                                                                                                                  QUERY PLAN                                                                                                                   
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4451.76..4451.77 rows=1 width=192) (actual time=71.193..71.193 rows=1 loops=1)
   ->  Nested Loop  (cost=6.44..4451.74 rows=1 width=84) (actual time=11.876..71.179 rows=8 loops=1)
         ->  Nested Loop  (cost=6.02..4451.30 rows=1 width=69) (actual time=11.866..71.125 rows=8 loops=1)
               Join Filter: (t2.id = mc2.movie_id)
               ->  Nested Loop  (cost=5.59..4450.56 rows=1 width=77) (actual time=11.846..71.091 rows=2 loops=1)
                     Join Filter: ((ml.linked_movie_id = t2.id) AND (kt2.id = t2.kind_id))
                     ->  Nested Loop  (cost=5.16..4449.84 rows=1 width=60) (actual time=11.820..70.992 rows=12 loops=1)
                           ->  Nested Loop  (cost=4.74..4449.40 rows=1 width=45) (actual time=11.783..70.456 rows=81 loops=1)
                                 ->  Nested Loop  (cost=4.31..4448.79 rows=1 width=53) (actual time=11.757..70.087 rows=28 loops=1)
                                       Join Filter: (it2.id = mi_idx2.info_type_id)
                                       Rows Removed by Join Filter: 1595
                                       ->  Nested Loop  (cost=3.88..4409.59 rows=19 width=47) (actual time=0.216..62.074 rows=1220 loops=1)
                                             Join Filter: (kt1.id = t1.kind_id)
                                             Rows Removed by Join Filter: 844
                                             ->  Nested Loop  (cost=0.00..2.18 rows=1 width=8) (actual time=0.018..0.021 rows=1 loops=1)
                                                   ->  Seq Scan on kind_type kt1  (cost=0.00..1.09 rows=1 width=4) (actual time=0.015..0.016 rows=1 loops=1)
                                                         Filter: ((kind)::text = 'tv series'::text)
                                                         Rows Removed by Filter: 6
                                                   ->  Seq Scan on kind_type kt2  (cost=0.00..1.09 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=1)
                                                         Filter: ((kind)::text = 'tv series'::text)
                                                         Rows Removed by Filter: 6
                                             ->  Nested Loop  (cost=3.88..4405.75 rows=132 width=47) (actual time=0.197..61.793 rows=2064 loops=1)
                                                   Join Filter: (ml.movie_id = t1.id)
                                                   ->  Nested Loop  (cost=3.45..4328.60 rows=132 width=22) (actual time=0.178..54.343 rows=2064 loops=1)
                                                         Join Filter: (ml.link_type_id = lt.id)
                                                         Rows Removed by Join Filter: 38685
                                                         ->  Nested Loop  (cost=3.45..4292.61 rows=794 width=26) (actual time=0.068..47.428 rows=20890 loops=1)
                                                               ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.012 rows=1 loops=1)
                                                                     Filter: ((info)::text = 'rating'::text)
                                                                     Rows Removed by Filter: 112
                                                               ->  Hash Join  (cost=3.45..4282.26 rows=794 width=22) (actual time=0.058..45.544 rows=20890 loops=1)
                                                                     Hash Cond: (mi_idx1.info_type_id = it1.id)
                                                                     ->  Merge Join  (cost=1.03..4035.43 rows=89741 width=26) (actual time=0.016..39.406 rows=62670 loops=1)
                                                                           Merge Cond: (ml.movie_id = mi_idx1.movie_id)
                                                                           ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..959.51 rows=29997 width=12) (actual time=0.005..5.170 rows=29997 loops=1)
                                                                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43820.38 rows=1380035 width=14) (actual time=0.008..18.594 rows=114373 loops=1)
                                                                     ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.016..0.017 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.011 rows=1 loops=1)
                                                                                 Filter: ((info)::text = 'rating'::text)
                                                                                 Rows Removed by Filter: 112
                                                         ->  Materialize  (cost=0.00..1.26 rows=3 width=4) (actual time=0.000..0.000 rows=2 loops=20890)
                                                               ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=3 width=4) (actual time=0.019..0.022 rows=2 loops=1)
                                                                     Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                     Rows Removed by Filter: 16
                                                   ->  Index Scan using title_pkey on title t1  (cost=0.43..0.57 rows=1 width=25) (actual time=0.003..0.003 rows=1 loops=2064)
                                                         Index Cond: (id = mi_idx1.movie_id)
                                       ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=1 width=14) (actual time=0.006..0.006 rows=1 loops=1220)
                                             Index Cond: (movie_id = ml.linked_movie_id)
                                             Filter: ((info)::text < '3.0'::text)
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.009..0.012 rows=3 loops=28)
                                       Index Cond: (movie_id = t1.id)
                           ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.006..0.006 rows=0 loops=81)
                                 Index Cond: (id = mc1.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using title_pkey on title t2  (cost=0.43..0.71 rows=1 width=25) (actual time=0.008..0.008 rows=0 loops=12)
                           Index Cond: (id = mi_idx2.movie_id)
                           Filter: ((production_year >= 2005) AND (production_year <= 2008))
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.67 rows=5 width=8) (actual time=0.010..0.015 rows=4 loops=2)
                     Index Cond: (movie_id = mi_idx2.movie_id)
         ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.006..0.006 rows=1 loops=8)
               Index Cond: (id = mc2.company_id)
 Planning Time: 91.968 ms
 Execution Time: 71.468 ms
(67 rows)

SET
                                                                                                                 QUERY PLAN                                                                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=2681.30..2681.31 rows=1 width=192) (actual time=46.978..46.979 rows=1 loops=1)
   ->  Nested Loop  (cost=340.64..2681.28 rows=1 width=84) (actual time=8.717..46.967 rows=4 loops=1)
         Join Filter: ((t2.id = mi_idx2.movie_id) AND (it2.id = mi_idx2.info_type_id))
         Rows Removed by Join Filter: 4
         ->  Nested Loop  (cost=340.21..2680.76 rows=1 width=94) (actual time=8.700..46.941 rows=4 loops=1)
               ->  Nested Loop  (cost=340.08..2680.59 rows=1 width=98) (actual time=8.692..46.928 rows=4 loops=1)
                     Join Filter: (ml.movie_id = t1.id)
                     ->  Nested Loop  (cost=339.65..2680.06 rows=1 width=89) (actual time=8.682..46.912 rows=4 loops=1)
                           ->  Nested Loop  (cost=339.23..2679.62 rows=1 width=74) (actual time=8.676..46.899 rows=4 loops=1)
                                 ->  Nested Loop  (cost=338.80..2678.21 rows=1 width=66) (actual time=8.672..46.892 rows=1 loops=1)
                                       ->  Nested Loop  (cost=338.67..2678.04 rows=1 width=70) (actual time=2.099..46.863 rows=6 loops=1)
                                             ->  Nested Loop  (cost=338.24..2669.65 rows=2 width=45) (actual time=2.071..44.529 rows=477 loops=1)
                                                   ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..14.12 rows=1 width=4) (actual time=0.017..0.020 rows=1 loops=1)
                                                         Filter: ((info)::text = 'rating'::text)
                                                         Rows Removed by Filter: 112
                                                   ->  Nested Loop  (cost=338.09..2655.51 rows=2 width=41) (actual time=2.052..44.454 rows=477 loops=1)
                                                         ->  Nested Loop  (cost=337.67..2557.48 rows=220 width=26) (actual time=1.998..25.944 rows=9674 loops=1)
                                                               Join Filter: (ml.movie_id = mc1.movie_id)
                                                               ->  Hash Join  (cost=337.24..2528.65 rows=44 width=18) (actual time=1.991..16.597 rows=2064 loops=1)
                                                                     Hash Cond: (mi_idx1.info_type_id = it1.id)
                                                                     ->  Merge Join  (cost=334.82..2512.65 rows=4984 width=22) (actual time=1.952..15.902 rows=6192 loops=1)
                                                                           Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43820.38 rows=1380035 width=14) (actual time=0.008..8.481 rows=63901 loops=1)
                                                                           ->  Sort  (cost=334.38..338.55 rows=1666 width=8) (actual time=1.922..2.245 rows=6443 loops=1)
                                                                                 Sort Key: ml.movie_id
                                                                                 Sort Method: quicksort  Memory: 205kB
                                                                                 ->  Nested Loop  (cost=38.82..245.23 rows=1666 width=8) (actual time=0.130..1.386 rows=2315 loops=1)
                                                                                       ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=4) (actual time=0.019..0.023 rows=2 loops=1)
                                                                                             Filter: ((link)::text ~~ '%follow%'::text)
                                                                                             Rows Removed by Filter: 16
                                                                                       ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..225.26 rows=1875 width=12) (actual time=0.096..0.571 rows=1158 loops=2)
                                                                                             Recheck Cond: (link_type_id = lt.id)
                                                                                             Heap Blocks: exact=191
                                                                                             ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.080..0.080 rows=1158 loops=2)
                                                                                                   Index Cond: (link_type_id = lt.id)
                                                                     ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.016..0.016 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=1)
                                                                                 Filter: ((info)::text = 'rating'::text)
                                                                                 Rows Removed by Filter: 112
                                                               ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.59 rows=5 width=8) (actual time=0.002..0.004 rows=5 loops=2064)
                                                                     Index Cond: (movie_id = mi_idx1.movie_id)
                                                         ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=9674)
                                                               Index Cond: (id = mc1.company_id)
                                                               Filter: ((country_code)::text = '[nl]'::text)
                                                               Rows Removed by Filter: 1
                                             ->  Index Scan using title_pkey on title t2  (cost=0.43..4.20 rows=1 width=25) (actual time=0.005..0.005 rows=0 loops=477)
                                                   Index Cond: (id = ml.linked_movie_id)
                                                   Filter: (production_year = 2007)
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=6)
                                             Index Cond: (id = t2.kind_id)
                                             Filter: ((kind)::text = 'tv series'::text)
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..1.35 rows=5 width=8) (actual time=0.003..0.005 rows=4 loops=1)
                                       Index Cond: (movie_id = t2.id)
                           ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=4)
                                 Index Cond: (id = mc2.company_id)
                     ->  Index Scan using title_pkey on title t1  (cost=0.43..0.51 rows=1 width=25) (actual time=0.003..0.003 rows=1 loops=4)
                           Index Cond: (id = mc1.movie_id)
               ->  Index Scan using kind_type_pkey on kind_type kt1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=4)
                     Index Cond: (id = t1.kind_id)
                     Filter: ((kind)::text = 'tv series'::text)
         ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..0.51 rows=1 width=14) (actual time=0.005..0.005 rows=2 loops=4)
               Index Cond: (movie_id = mc2.movie_id)
               Filter: ((info)::text < '3.0'::text)
               Rows Removed by Filter: 1
 Planning Time: 92.354 ms
 Execution Time: 47.283 ms
(69 rows)

SET
                                                                                                                 QUERY PLAN                                                                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3851.97..3851.98 rows=1 width=192) (actual time=36.340..36.340 rows=1 loops=1)
   ->  Nested Loop  (cost=875.97..3851.96 rows=1 width=84) (actual time=10.110..36.282 rows=114 loops=1)
         ->  Nested Loop  (cost=875.55..3851.51 rows=1 width=69) (actual time=10.102..35.900 rows=131 loops=1)
               ->  Nested Loop  (cost=875.12..3850.90 rows=1 width=77) (actual time=10.094..35.729 rows=44 loops=1)
                     ->  Nested Loop  (cost=874.70..3850.46 rows=1 width=62) (actual time=10.079..35.568 rows=44 loops=1)
                           ->  Nested Loop  (cost=874.27..3849.79 rows=1 width=70) (actual time=10.074..35.365 rows=19 loops=1)
                                 ->  Nested Loop  (cost=874.14..3849.63 rows=1 width=74) (actual time=9.243..35.321 rows=27 loops=1)
                                       Join Filter: (it2.id = mi_idx2.info_type_id)
                                       Rows Removed by Join Filter: 1170
                                       ->  Nested Loop  (cost=873.71..3841.45 rows=15 width=68) (actual time=5.905..32.749 rows=851 loops=1)
                                             ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..14.12 rows=1 width=4) (actual time=0.016..0.019 rows=1 loops=1)
                                                   Filter: ((info)::text = 'rating'::text)
                                                   Rows Removed by Filter: 112
                                             ->  Hash Join  (cost=873.57..3827.18 rows=15 width=64) (actual time=5.887..32.619 rows=851 loops=1)
                                                   Hash Cond: (t1.kind_id = kt1.id)
                                                   ->  Nested Loop  (cost=872.46..3825.83 rows=54 width=68) (actual time=5.850..32.408 rows=851 loops=1)
                                                         Join Filter: (ml.movie_id = t1.id)
                                                         ->  Nested Loop  (cost=872.03..3794.27 rows=54 width=43) (actual time=5.845..30.585 rows=851 loops=1)
                                                               ->  Hash Join  (cost=871.60..3239.76 rows=132 width=18) (actual time=5.813..20.101 rows=2064 loops=1)
                                                                     Hash Cond: (mi_idx1.info_type_id = it1.id)
                                                                     ->  Merge Join  (cost=869.17..3196.60 rows=14958 width=22) (actual time=5.785..19.424 rows=6192 loops=1)
                                                                           Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43820.38 rows=1380035 width=14) (actual time=0.008..8.162 rows=63901 loops=1)
                                                                           ->  Sort  (cost=868.72..881.22 rows=5000 width=8) (actual time=5.755..6.072 rows=6443 loops=1)
                                                                                 Sort Key: ml.movie_id
                                                                                 Sort Method: quicksort  Memory: 205kB
                                                                                 ->  Hash Join  (cost=1.29..561.53 rows=5000 width=8) (actual time=0.043..5.255 rows=2315 loops=1)
                                                                                       Hash Cond: (ml.link_type_id = lt.id)
                                                                                       ->  Seq Scan on movie_link ml  (cost=0.00..462.97 rows=29997 width=12) (actual time=0.004..2.851 rows=29997 loops=1)
                                                                                       ->  Hash  (cost=1.25..1.25 rows=3 width=4) (actual time=0.022..0.022 rows=2 loops=1)
                                                                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                             ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=3 width=4) (actual time=0.016..0.019 rows=2 loops=1)
                                                                                                   Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                                   Rows Removed by Filter: 16
                                                                     ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.013..0.013 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.011 rows=1 loops=1)
                                                                                 Filter: ((info)::text = 'rating'::text)
                                                                                 Rows Removed by Filter: 112
                                                               ->  Index Scan using title_pkey on title t2  (cost=0.43..4.20 rows=1 width=25) (actual time=0.005..0.005 rows=0 loops=2064)
                                                                     Index Cond: (id = ml.linked_movie_id)
                                                                     Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                                                     Rows Removed by Filter: 1
                                                         ->  Index Scan using title_pkey on title t1  (cost=0.43..0.57 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=851)
                                                               Index Cond: (id = mi_idx1.movie_id)
                                                   ->  Hash  (cost=1.09..1.09 rows=2 width=4) (actual time=0.016..0.016 rows=2 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on kind_type kt1  (cost=0.00..1.09 rows=2 width=4) (actual time=0.009..0.010 rows=2 loops=1)
                                                               Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                                                               Rows Removed by Filter: 5
                                       ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..0.53 rows=1 width=14) (actual time=0.002..0.003 rows=1 loops=851)
                                             Index Cond: (movie_id = t2.id)
                                             Filter: ((info)::text < '3.5'::text)
                                             Rows Removed by Filter: 2
                                 ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=27)
                                       Index Cond: (id = t2.kind_id)
                                       Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                                       Rows Removed by Filter: 0
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.62 rows=5 width=8) (actual time=0.008..0.010 rows=2 loops=19)
                                 Index Cond: (movie_id = t2.id)
                     ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.003..0.003 rows=1 loops=44)
                           Index Cond: (id = mc2.company_id)
               ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.002..0.003 rows=3 loops=44)
                     Index Cond: (movie_id = t1.id)
         ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.003..0.003 rows=1 loops=131)
               Index Cond: (id = mc1.company_id)
               Filter: ((country_code)::text <> '[us]'::text)
               Rows Removed by Filter: 0
 Planning Time: 89.469 ms
 Execution Time: 36.625 ms
(70 rows)

SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16579.47..16579.48 rows=1 width=32) (actual time=228.868..228.868 rows=1 loops=1)
   ->  Nested Loop  (cost=7.61..16579.31 rows=65 width=17) (actual time=6.913..228.803 rows=206 loops=1)
         Join Filter: (t.id = mi.movie_id)
         ->  Nested Loop  (cost=7.18..16269.29 rows=174 width=25) (actual time=5.111..130.169 rows=2235 loops=1)
               ->  Nested Loop  (cost=6.75..16055.56 rows=438 width=4) (actual time=3.585..60.250 rows=12951 loops=1)
                     ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=1.190..22.285 rows=30 loops=1)
                           Filter: ((keyword)::text ~~ '%sequel%'::text)
                           Rows Removed by Filter: 134140
                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1030.04 rows=299 width=8) (actual time=0.101..1.216 rows=432 loops=30)
                           Recheck Cond: (keyword_id = k.id)
                           Heap Blocks: exact=6979
                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.062..0.062 rows=432 loops=30)
                                 Index Cond: (keyword_id = k.id)
               ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.005..0.005 rows=0 loops=12951)
                     Index Cond: (id = mk.movie_id)
                     Filter: (production_year > 2005)
                     Rows Removed by Filter: 1
         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.77 rows=1 width=4) (actual time=0.041..0.044 rows=0 loops=2235)
               Index Cond: (movie_id = mk.movie_id)
               Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German}'::text[]))
               Rows Removed by Filter: 45
 Planning Time: 1.860 ms
 Execution Time: 228.963 ms
(23 rows)

SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16369.03..16369.04 rows=1 width=32) (actual time=147.274..147.274 rows=1 loops=1)
   ->  Nested Loop  (cost=7.61..16369.03 rows=1 width=17) (actual time=11.048..147.260 rows=5 loops=1)
         Join Filter: (t.id = mi.movie_id)
         ->  Nested Loop  (cost=7.18..16269.29 rows=68 width=25) (actual time=5.435..126.346 rows=405 loops=1)
               ->  Nested Loop  (cost=6.75..16055.56 rows=438 width=4) (actual time=3.717..59.474 rows=12951 loops=1)
                     ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=1.346..22.249 rows=30 loops=1)
                           Filter: ((keyword)::text ~~ '%sequel%'::text)
                           Rows Removed by Filter: 134140
                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1030.04 rows=299 width=8) (actual time=0.099..1.192 rows=432 loops=30)
                           Recheck Cond: (keyword_id = k.id)
                           Heap Blocks: exact=6979
                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.060..0.060 rows=432 loops=30)
                                 Index Cond: (keyword_id = k.id)
               ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.005..0.005 rows=0 loops=12951)
                     Index Cond: (id = mk.movie_id)
                     Filter: (production_year > 2010)
                     Rows Removed by Filter: 1
         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.45 rows=1 width=4) (actual time=0.051..0.051 rows=0 loops=405)
               Index Cond: (movie_id = mk.movie_id)
               Filter: ((info)::text = 'Bulgaria'::text)
               Rows Removed by Filter: 63
 Planning Time: 1.954 ms
 Execution Time: 147.385 ms
(23 rows)

SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16842.39..16842.40 rows=1 width=32) (actual time=391.925..391.926 rows=1 loops=1)
   ->  Nested Loop  (cost=7.61..16840.96 rows=570 width=17) (actual time=4.028..390.896 rows=7250 loops=1)
         Join Filter: (t.id = mi.movie_id)
         ->  Nested Loop  (cost=7.18..16269.29 rows=301 width=25) (actual time=3.761..121.214 rows=7874 loops=1)
               ->  Nested Loop  (cost=6.75..16055.56 rows=438 width=4) (actual time=3.738..56.433 rows=12951 loops=1)
                     ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=1.347..22.076 rows=30 loops=1)
                           Filter: ((keyword)::text ~~ '%sequel%'::text)
                           Rows Removed by Filter: 134140
                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1030.04 rows=299 width=8) (actual time=0.101..1.090 rows=432 loops=30)
                           Recheck Cond: (keyword_id = k.id)
                           Heap Blocks: exact=6979
                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.061..0.061 rows=432 loops=30)
                                 Index Cond: (keyword_id = k.id)
               ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.005..0.005 rows=1 loops=12951)
                     Index Cond: (id = mk.movie_id)
                     Filter: (production_year > 1990)
                     Rows Removed by Filter: 0
         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=4) (actual time=0.029..0.034 rows=1 loops=7874)
               Index Cond: (movie_id = mk.movie_id)
               Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,USA,American}'::text[]))
               Rows Removed by Filter: 35
 Planning Time: 2.098 ms
 Execution Time: 392.028 ms
(23 rows)

SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16288.57..16288.58 rows=1 width=64) (actual time=160.529..160.529 rows=1 loops=1)
   ->  Nested Loop  (cost=7.61..16288.56 rows=2 width=23) (actual time=6.002..160.354 rows=740 loops=1)
         Join Filter: (mi_idx.movie_id = t.id)
         ->  Nested Loop  (cost=7.18..16286.56 rows=4 width=14) (actual time=3.763..118.720 rows=5820 loops=1)
               Join Filter: (mi_idx.info_type_id = it.id)
               Rows Removed by Join Filter: 2613
               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.011..0.013 rows=1 loops=1)
                     Filter: ((info)::text = 'rating'::text)
                     Rows Removed by Filter: 112
               ->  Nested Loop  (cost=7.18..16278.01 rows=491 width=18) (actual time=3.749..117.577 rows=8433 loops=1)
                     ->  Nested Loop  (cost=6.75..16055.56 rows=438 width=4) (actual time=3.725..63.457 rows=12951 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=1.318..22.753 rows=30 loops=1)
                                 Filter: ((keyword)::text ~~ '%sequel%'::text)
                                 Rows Removed by Filter: 134140
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1030.04 rows=299 width=8) (actual time=0.101..1.307 rows=432 loops=30)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=6979
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.062..0.062 rows=432 loops=30)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=14) (actual time=0.004..0.004 rows=1 loops=12951)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((info)::text > '5.0'::text)
                           Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.007..0.007 rows=0 loops=5820)
               Index Cond: (id = mk.movie_id)
               Filter: (production_year > 2005)
               Rows Removed by Filter: 1
 Planning Time: 2.399 ms
 Execution Time: 160.660 ms
(29 rows)

SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16281.03..16281.04 rows=1 width=64) (actual time=92.324..92.324 rows=1 loops=1)
   ->  Nested Loop  (cost=7.61..16281.02 rows=1 width=23) (actual time=15.020..92.312 rows=6 loops=1)
         Join Filter: (mi_idx.movie_id = t.id)
         ->  Nested Loop  (cost=7.18..16280.52 rows=1 width=14) (actual time=13.200..92.143 rows=21 loops=1)
               Join Filter: (mi_idx.info_type_id = it.id)
               Rows Removed by Join Filter: 285
               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.012..0.014 rows=1 loops=1)
                     Filter: ((info)::text = 'rating'::text)
                     Rows Removed by Filter: 112
               ->  Nested Loop  (cost=7.18..16278.01 rows=8 width=18) (actual time=4.156..92.093 rows=306 loops=1)
                     ->  Nested Loop  (cost=6.75..16055.56 rows=438 width=4) (actual time=3.783..51.215 rows=12951 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=1.353..20.721 rows=30 loops=1)
                                 Filter: ((keyword)::text ~~ '%sequel%'::text)
                                 Rows Removed by Filter: 134140
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1030.04 rows=299 width=8) (actual time=0.097..0.973 rows=432 loops=30)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=6979
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.059..0.059 rows=432 loops=30)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=14) (actual time=0.003..0.003 rows=0 loops=12951)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((info)::text > '9.0'::text)
                           Rows Removed by Filter: 2
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.007..0.007 rows=0 loops=21)
               Index Cond: (id = mk.movie_id)
               Filter: (production_year > 2010)
               Rows Removed by Filter: 1
 Planning Time: 2.175 ms
 Execution Time: 92.447 ms
(29 rows)

SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16297.85..16297.86 rows=1 width=64) (actual time=131.646..131.646 rows=1 loops=1)
   ->  Nested Loop  (cost=7.61..16297.83 rows=5 width=23) (actual time=3.429..130.739 rows=4700 loops=1)
         Join Filter: (mi_idx.movie_id = t.id)
         ->  Nested Loop  (cost=7.18..16294.33 rows=7 width=14) (actual time=3.393..83.117 rows=8092 loops=1)
               Join Filter: (mi_idx.info_type_id = it.id)
               Rows Removed by Join Filter: 6507
               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.012..0.014 rows=1 loops=1)
                     Filter: ((info)::text = 'rating'::text)
                     Rows Removed by Filter: 112
               ->  Nested Loop  (cost=7.18..16282.39 rows=762 width=18) (actual time=3.379..81.530 rows=14599 loops=1)
                     ->  Nested Loop  (cost=6.75..16055.56 rows=438 width=4) (actual time=3.369..44.033 rows=12951 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=1.124..22.621 rows=30 loops=1)
                                 Filter: ((keyword)::text ~~ '%sequel%'::text)
                                 Rows Removed by Filter: 134140
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1030.04 rows=299 width=8) (actual time=0.095..0.664 rows=432 loops=30)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=6979
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.056..0.056 rows=432 loops=30)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=2 width=14) (actual time=0.002..0.003 rows=1 loops=12951)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((info)::text > '2.0'::text)
                           Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.006..0.006 rows=1 loops=8092)
               Index Cond: (id = mk.movie_id)
               Filter: (production_year > 1990)
               Rows Removed by Filter: 0
 Planning Time: 1.914 ms
 Execution Time: 131.766 ms
(29 rows)

SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=38740.79..38740.80 rows=1 width=32) (actual time=134.930..134.930 rows=1 loops=1)
   ->  Gather  (cost=38740.58..38740.79 rows=2 width=32) (actual time=134.852..135.621 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=37740.58..37740.59 rows=1 width=32) (actual time=132.377..132.377 rows=1 loops=3)
               ->  Hash Join  (cost=5.47..37740.50 rows=31 width=17) (actual time=132.374..132.374 rows=0 loops=3)
                     Hash Cond: (mi.info_type_id = it.id)
                     ->  Nested Loop  (cost=1.93..37736.88 rows=31 width=21) (actual time=132.374..132.374 rows=0 loops=3)
                           ->  Nested Loop  (cost=1.49..37442.96 rows=122 width=25) (actual time=132.373..132.373 rows=0 loops=3)
                                 ->  Hash Join  (cost=1.06..35104.78 rows=308 width=4) (actual time=132.373..132.373 rows=0 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..35097.06 rows=1231 width=8) (actual time=3.883..131.741 rows=8008 loops=3)
                                             Filter: (((note)::text ~~ '%(theatrical)%'::text) AND ((note)::text ~~ '%(France)%'::text))
                                             Rows Removed by Filter: 861701
                                       ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.017..0.017 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..7.59 rows=1 width=21) (never executed)
                                       Index Cond: (id = mc.movie_id)
                                       Filter: (production_year > 2005)
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.40 rows=1 width=8) (never executed)
                                 Index Cond: (movie_id = t.id)
                                 Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German}'::text[]))
                     ->  Hash  (cost=2.13..2.13 rows=113 width=4) (never executed)
                           ->  Seq Scan on info_type it  (cost=0.00..2.13 rows=113 width=4) (never executed)
 Planning Time: 2.448 ms
 Execution Time: 135.785 ms
(29 rows)

SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=38870.51..38870.52 rows=1 width=32) (actual time=127.661..127.661 rows=1 loops=1)
   ->  Gather  (cost=1002.07..38870.50 rows=2 width=17) (actual time=127.658..128.348 rows=0 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Nested Loop  (cost=2.07..37870.30 rows=1 width=17) (actual time=125.257..125.257 rows=0 loops=3)
               ->  Nested Loop  (cost=1.93..37870.14 rows=1 width=21) (actual time=125.256..125.256 rows=0 loops=3)
                     ->  Nested Loop  (cost=1.49..37866.79 rows=1 width=25) (actual time=125.256..125.256 rows=0 loops=3)
                           ->  Hash Join  (cost=1.06..37816.09 rows=6 width=4) (actual time=125.255..125.256 rows=0 loops=3)
                                 Hash Cond: (mc.company_type_id = ct.id)
                                 ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..37814.90 rows=25 width=8) (actual time=1.539..125.134 rows=473 loops=3)
                                       Filter: (((note)::text ~~ '%(VHS)%'::text) AND ((note)::text ~~ '%(USA)%'::text) AND ((note)::text ~~ '%(1994)%'::text))
                                       Rows Removed by Filter: 869237
                                 ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.016..0.016 rows=1 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=3)
                                             Filter: ((kind)::text = 'production companies'::text)
                                             Rows Removed by Filter: 3
                           ->  Index Scan using title_pkey on title t  (cost=0.43..8.45 rows=1 width=21) (never executed)
                                 Index Cond: (id = mc.movie_id)
                                 Filter: (production_year > 2010)
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..3.33 rows=2 width=8) (never executed)
                           Index Cond: (movie_id = t.id)
                           Filter: ((info)::text = ANY ('{USA,America}'::text[]))
               ->  Index Only Scan using info_type_pkey on info_type it  (cost=0.14..0.16 rows=1 width=4) (never executed)
                     Index Cond: (id = mi.info_type_id)
                     Heap Fetches: 0
 Planning Time: 2.110 ms
 Execution Time: 128.467 ms
(28 rows)

SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=88991.12..88991.13 rows=1 width=32) (actual time=188.881..188.881 rows=1 loops=1)
   ->  Gather  (cost=88990.90..88991.11 rows=2 width=32) (actual time=188.784..191.263 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=87990.90..87990.91 rows=1 width=32) (actual time=186.370..186.370 rows=1 loops=3)
               ->  Hash Join  (cost=5.47..87951.49 rows=15766 width=17) (actual time=118.834..186.321 rows=223 loops=3)
                     Hash Cond: (mi.info_type_id = it.id)
                     ->  Nested Loop  (cost=1.93..87905.00 rows=15766 width=21) (actual time=118.780..186.208 rows=223 loops=3)
                           ->  Nested Loop  (cost=1.49..61336.48 rows=12181 width=25) (actual time=118.706..166.344 rows=256 loops=3)
                                 ->  Hash Join  (cost=1.06..35481.01 rows=17705 width=4) (actual time=118.638..161.723 rows=266 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..35097.06 rows=70822 width=8) (actual time=0.024..155.019 rows=98543 loops=3)
                                             Filter: (((note)::text !~~ '%(TV)%'::text) AND ((note)::text ~~ '%(USA)%'::text))
                                             Rows Removed by Filter: 771167
                                       ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..1.46 rows=1 width=21) (actual time=0.017..0.017 rows=1 loops=798)
                                       Index Cond: (id = mc.movie_id)
                                       Filter: (production_year > 1990)
                                       Rows Removed by Filter: 0
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.16 rows=2 width=8) (actual time=0.069..0.077 rows=1 loops=767)
                                 Index Cond: (movie_id = t.id)
                                 Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,USA,American}'::text[]))
                                 Rows Removed by Filter: 10
                     ->  Hash  (cost=2.13..2.13 rows=113 width=4) (actual time=0.035..0.035 rows=113 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 12kB
                           ->  Seq Scan on info_type it  (cost=0.00..2.13 rows=113 width=4) (actual time=0.010..0.019 rows=113 loops=3)
 Planning Time: 2.056 ms
 Execution Time: 191.393 ms
(32 rows)

SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3848.64..3848.65 rows=1 width=96) (actual time=39.103..39.103 rows=1 loops=1)
   ->  Nested Loop  (cost=8.17..3848.63 rows=1 width=48) (actual time=4.762..39.090 rows=6 loops=1)
         ->  Nested Loop  (cost=7.74..3759.44 rows=195 width=37) (actual time=0.477..23.463 rows=1224 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.18..3749.50 rows=5 width=41) (actual time=0.451..15.875 rows=11 loops=1)
                     ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=20) (actual time=0.430..15.595 rows=14 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=20) (actual time=0.397..15.459 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'marvel-cinematic-universe'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=0.030..0.129 rows=14 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=12
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.019..0.019 rows=14 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.019..0.019 rows=1 loops=14)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2010)
                           Rows Removed by Filter: 0
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.020..0.668 rows=111 loops=11)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.013..0.013 rows=0 loops=1224)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ '%Downey%Robert%'::text)
               Rows Removed by Filter: 1
 Planning Time: 2.356 ms
 Execution Time: 39.236 ms
(26 rows)

SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=12284.11..12284.12 rows=1 width=96) (actual time=299.143..299.143 rows=1 loops=1)
   ->  Nested Loop  (cost=8.17..12284.10 rows=1 width=48) (actual time=31.310..299.119 rows=12 loops=1)
         ->  Nested Loop  (cost=7.74..12283.65 rows=1 width=37) (actual time=9.484..296.662 rows=383 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.18..12281.66 rows=1 width=41) (actual time=9.475..295.295 rows=36 loops=1)
                     ->  Nested Loop  (cost=6.75..12149.91 rows=270 width=20) (actual time=0.703..130.922 rows=35548 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..3632.40 rows=8 width=20) (actual time=0.111..29.943 rows=8 loops=1)
                                 Filter: ((keyword)::text = ANY ('{superhero,sequel,second-part,marvel-comics,based-on-comic,tv-special,fight,violence}'::text[]))
                                 Rows Removed by Filter: 134162
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1061.70 rows=299 width=8) (actual time=1.141..12.104 rows=4444 loops=8)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=23488
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.652..0.652 rows=4444 loops=8)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.004..0.004 rows=0 loops=35548)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2014)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.012..0.035 rows=11 loops=36)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.006..0.006 rows=0 loops=383)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ '%Downey%Robert%'::text)
               Rows Removed by Filter: 1
 Planning Time: 2.128 ms
 Execution Time: 299.266 ms
(26 rows)

SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3751.96..3751.97 rows=1 width=96) (actual time=11.739..11.739 rows=1 loops=1)
   ->  Nested Loop  (cost=8.17..3751.95 rows=1 width=48) (actual time=0.834..11.731 rows=2 loops=1)
         ->  Nested Loop  (cost=7.74..3751.49 rows=1 width=37) (actual time=0.479..11.527 rows=33 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.18..3749.51 rows=1 width=41) (actual time=0.457..11.387 rows=2 loops=1)
                     ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=20) (actual time=0.413..11.147 rows=14 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=20) (actual time=0.389..11.046 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'marvel-cinematic-universe'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=0.022..0.096 rows=14 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=12
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.015..0.015 rows=14 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.017..0.017 rows=0 loops=14)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2014)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.021..0.066 rows=16 loops=2)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.006..0.006 rows=0 loops=33)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ '%Downey%Robert%'::text)
               Rows Removed by Filter: 1
 Planning Time: 2.494 ms
 Execution Time: 11.869 ms
(26 rows)

SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=15053.68..15053.69 rows=1 width=96) (actual time=6917.507..6917.507 rows=1 loops=1)
   ->  Nested Loop  (cost=8.17..15053.68 rows=1 width=48) (actual time=192.088..6917.378 rows=88 loops=1)
         ->  Nested Loop  (cost=7.74..12573.66 rows=5422 width=37) (actual time=0.715..2587.732 rows=785477 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.18..12281.66 rows=147 width=41) (actual time=0.694..338.142 rows=14165 loops=1)
                     ->  Nested Loop  (cost=6.75..12149.91 rows=270 width=20) (actual time=0.673..140.408 rows=35548 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..3632.40 rows=8 width=20) (actual time=0.105..29.982 rows=8 loops=1)
                                 Filter: ((keyword)::text = ANY ('{superhero,sequel,second-part,marvel-comics,based-on-comic,tv-special,fight,violence}'::text[]))
                                 Rows Removed by Filter: 134162
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1061.70 rows=299 width=8) (actual time=1.143..13.080 rows=4444 loops=8)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=23488
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.657..0.657 rows=4444 loops=8)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.005..0.005 rows=0 loops=35548)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2000)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.008..0.149 rows=55 loops=14165)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.005..0.005 rows=0 loops=785477)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ '%Downey%Robert%'::text)
               Rows Removed by Filter: 1
 Planning Time: 2.033 ms
 Execution Time: 6917.625 ms
(26 rows)

SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4095.38..4095.39 rows=1 width=96) (actual time=25.357..25.357 rows=1 loops=1)
   ->  Nested Loop  (cost=8.17..4095.38 rows=1 width=48) (actual time=4.257..25.343 rows=6 loops=1)
         ->  Nested Loop  (cost=7.74..3785.26 rows=678 width=37) (actual time=0.476..15.428 rows=1224 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.18..3749.50 rows=18 width=41) (actual time=0.444..10.783 rows=11 loops=1)
                     ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=20) (actual time=0.423..10.566 rows=14 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=20) (actual time=0.386..10.443 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'marvel-cinematic-universe'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=0.034..0.117 rows=14 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=12
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.021..0.021 rows=14 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.015..0.015 rows=1 loops=14)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2000)
                           Rows Removed by Filter: 0
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.017..0.403 rows=111 loops=11)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.008..0.008 rows=0 loops=1224)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ '%Downey%Robert%'::text)
               Rows Removed by Filter: 1
 Planning Time: 2.556 ms
 Execution Time: 25.486 ms
(26 rows)

SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=15080.79..15080.80 rows=1 width=96) (actual time=6913.202..6913.202 rows=1 loops=1)
   ->  Nested Loop  (cost=8.17..15040.12 rows=5422 width=48) (actual time=0.747..6737.491 rows=785477 loops=1)
         ->  Nested Loop  (cost=7.74..12573.66 rows=5422 width=37) (actual time=0.716..2577.037 rows=785477 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.18..12281.66 rows=147 width=41) (actual time=0.693..334.622 rows=14165 loops=1)
                     ->  Nested Loop  (cost=6.75..12149.91 rows=270 width=20) (actual time=0.668..139.106 rows=35548 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..3632.40 rows=8 width=20) (actual time=0.099..30.316 rows=8 loops=1)
                                 Filter: ((keyword)::text = ANY ('{superhero,sequel,second-part,marvel-comics,based-on-comic,tv-special,fight,violence}'::text[]))
                                 Rows Removed by Filter: 134162
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1061.70 rows=299 width=8) (actual time=1.143..12.895 rows=4444 loops=8)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=23488
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.655..0.655 rows=4444 loops=8)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.005..0.005 rows=0 loops=35548)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2000)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.008..0.148 rows=55 loops=14165)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=19) (actual time=0.005..0.005 rows=1 loops=785477)
               Index Cond: (id = ci.person_id)
 Planning Time: 2.108 ms
 Execution Time: 6913.322 ms
(24 rows)

SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=13450.44..13450.45 rows=1 width=64) (actual time=1028.237..1028.237 rows=1 loops=1)
   ->  Nested Loop  (cost=41.24..13450.44 rows=1 width=32) (actual time=59.457..1028.205 rows=32 loops=1)
         ->  Nested Loop  (cost=41.10..13449.36 rows=1 width=36) (actual time=59.438..1028.108 rows=32 loops=1)
               Join Filter: (n.id = an.person_id)
               ->  Nested Loop  (cost=40.67..13448.87 rows=1 width=48) (actual time=59.412..1027.890 rows=14 loops=1)
                     Join Filter: (n.id = pi.person_id)
                     ->  Nested Loop  (cost=40.24..12494.38 rows=985 width=40) (actual time=0.411..876.976 rows=17559 loops=1)
                           ->  Nested Loop  (cost=39.81..8533.64 rows=8474 width=21) (actual time=0.384..309.785 rows=105262 loops=1)
                                 ->  Nested Loop  (cost=39.25..7243.89 rows=229 width=25) (actual time=0.353..39.236 rows=1467 loops=1)
                                       ->  Nested Loop  (cost=38.82..245.23 rows=1666 width=4) (actual time=0.318..2.639 rows=5186 loops=1)
                                             ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=4) (actual time=0.014..0.018 rows=1 loops=1)
                                                   Filter: ((link)::text = 'features'::text)
                                                   Rows Removed by Filter: 17
                                             ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..225.26 rows=1875 width=8) (actual time=0.301..1.639 rows=5186 loops=1)
                                                   Recheck Cond: (link_type_id = lt.id)
                                                   Heap Blocks: exact=132
                                                   ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.272..0.272 rows=5186 loops=1)
                                                         Index Cond: (link_type_id = lt.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..4.20 rows=1 width=21) (actual time=0.007..0.007 rows=0 loops=5186)
                                             Index Cond: (id = ml.linked_movie_id)
                                             Filter: ((production_year >= 1980) AND (production_year <= 1995))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..5.26 rows=37 width=8) (actual time=0.010..0.175 rows=72 loops=1467)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Scan using name_pkey on name n  (cost=0.43..0.47 rows=1 width=19) (actual time=0.005..0.005 rows=0 loops=105262)
                                 Index Cond: (id = ci.person_id)
                                 Filter: (((name_pcode_cf)::text >= 'A'::text) AND ((name_pcode_cf)::text <= 'F'::text) AND (((gender)::text = 'm'::text) OR (((gender)::text = 'f'::text) AND ((name)::text ~~ 'B%'::text))))
                                 Rows Removed by Filter: 1
                     ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..0.96 rows=1 width=8) (actual time=0.008..0.008 rows=0 loops=17559)
                           Index Cond: (person_id = ci.person_id)
                           Filter: ((note)::text = 'Volker Boehm'::text)
                           Rows Removed by Filter: 20
               ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.47 rows=2 width=4) (actual time=0.011..0.014 rows=2 loops=14)
                     Index Cond: (person_id = ci.person_id)
                     Filter: ((name)::text ~~ '%a%'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using info_type_pkey on info_type it  (cost=0.14..0.61 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=32)
               Index Cond: (id = pi.info_type_id)
               Filter: ((info)::text = 'mini biography'::text)
 Planning Time: 7.464 ms
 Execution Time: 1028.422 ms
(41 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=9049.69..9049.70 rows=1 width=64) (actual time=284.166..284.166 rows=1 loops=1)
   ->  Nested Loop  (cost=41.24..9049.68 rows=1 width=32) (actual time=12.631..284.146 rows=16 loops=1)
         ->  Nested Loop  (cost=41.10..9048.61 rows=1 width=36) (actual time=12.615..284.097 rows=16 loops=1)
               Join Filter: (n.id = an.person_id)
               ->  Nested Loop  (cost=40.67..9048.12 rows=1 width=48) (actual time=12.598..284.017 rows=8 loops=1)
                     Join Filter: (n.id = pi.person_id)
                     ->  Nested Loop  (cost=40.24..9005.48 rows=44 width=40) (actual time=0.593..275.583 rows=1076 loops=1)
                           ->  Nested Loop  (cost=39.81..8134.43 rows=1894 width=21) (actual time=0.372..112.010 rows=33415 loops=1)
                                 ->  Nested Loop  (cost=39.25..7243.89 rows=51 width=25) (actual time=0.341..35.803 rows=435 loops=1)
                                       ->  Nested Loop  (cost=38.82..245.23 rows=1666 width=4) (actual time=0.311..2.233 rows=5186 loops=1)
                                             ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=4) (actual time=0.011..0.014 rows=1 loops=1)
                                                   Filter: ((link)::text = 'features'::text)
                                                   Rows Removed by Filter: 17
                                             ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..225.26 rows=1875 width=8) (actual time=0.298..1.482 rows=5186 loops=1)
                                                   Recheck Cond: (link_type_id = lt.id)
                                                   Heap Blocks: exact=132
                                                   ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.270..0.270 rows=5186 loops=1)
                                                         Index Cond: (link_type_id = lt.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..4.20 rows=1 width=21) (actual time=0.006..0.006 rows=0 loops=5186)
                                             Index Cond: (id = ml.linked_movie_id)
                                             Filter: ((production_year >= 1980) AND (production_year <= 1984))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..17.09 rows=37 width=8) (actual time=0.010..0.166 rows=77 loops=435)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.005..0.005 rows=0 loops=33415)
                                 Index Cond: (id = ci.person_id)
                                 Filter: (((name_pcode_cf)::text ~~ 'D%'::text) AND ((gender)::text = 'm'::text))
                                 Rows Removed by Filter: 1
                     ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..0.96 rows=1 width=8) (actual time=0.007..0.008 rows=0 loops=1076)
                           Index Cond: (person_id = ci.person_id)
                           Filter: ((note)::text = 'Volker Boehm'::text)
                           Rows Removed by Filter: 16
               ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.47 rows=2 width=4) (actual time=0.007..0.009 rows=2 loops=8)
                     Index Cond: (person_id = ci.person_id)
                     Filter: ((name)::text ~~ '%a%'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using info_type_pkey on info_type it  (cost=0.14..0.61 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=16)
               Index Cond: (id = pi.info_type_id)
               Filter: ((info)::text = 'mini biography'::text)
 Planning Time: 7.357 ms
 Execution Time: 284.346 ms
(41 rows)

SET
                                                                                                             QUERY PLAN                                                                                                              
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=58025.67..58025.68 rows=1 width=64) (actual time=3317.244..3317.245 rows=1 loops=1)
   ->  Nested Loop  (cost=2495.15..58025.64 rows=6 width=111) (actual time=20.197..3074.887 rows=68185 loops=1)
         ->  Hash Join  (cost=2494.72..58021.06 rows=10 width=119) (actual time=20.164..2822.982 rows=109842 loops=1)
               Hash Cond: (ml.link_type_id = lt.id)
               ->  Nested Loop  (cost=2493.40..58019.61 rows=44 width=123) (actual time=20.120..2799.534 rows=127027 loops=1)
                     ->  Nested Loop  (cost=2493.11..57531.16 rows=1426 width=115) (actual time=20.087..1171.393 rows=1618304 loops=1)
                           ->  Nested Loop  (cost=2492.55..57287.95 rows=14 width=123) (actual time=20.062..662.903 rows=12595 loops=1)
                                 ->  Nested Loop  (cost=2492.12..56107.25 rows=1430 width=104) (actual time=19.955..414.398 rows=72979 loops=1)
                                       ->  Nested Loop  (cost=2491.69..55264.82 rows=717 width=100) (actual time=19.902..190.519 rows=84183 loops=1)
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.016..0.025 rows=1 loops=1)
                                                   Filter: ((info)::text = 'mini biography'::text)
                                                   Rows Removed by Filter: 112
                                             ->  Bitmap Heap Scan on person_info pi  (cost=2491.69..55225.59 rows=3682 width=104) (actual time=19.883..181.988 rows=84183 loops=1)
                                                   Recheck Cond: (info_type_id = it.id)
                                                   Filter: (note IS NOT NULL)
                                                   Rows Removed by Filter: 1
                                                   Heap Blocks: exact=40537
                                                   ->  Bitmap Index Scan on info_type_id_person_info  (cost=0.00..2490.77 rows=134712 width=0) (actual time=11.581..11.581 rows=84184 loops=1)
                                                         Index Cond: (info_type_id = it.id)
                                       ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..1.15 rows=2 width=4) (actual time=0.002..0.002 rows=1 loops=84183)
                                             Index Cond: (person_id = pi.person_id)
                                             Filter: ((name IS NOT NULL) AND (((name)::text ~~ '%a%'::text) OR ((name)::text ~~ 'A%'::text)))
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using name_pkey on name n  (cost=0.43..0.83 rows=1 width=19) (actual time=0.003..0.003 rows=0 loops=72979)
                                       Index Cond: (id = an.person_id)
                                       Filter: (((name_pcode_cf)::text >= 'A'::text) AND ((name_pcode_cf)::text <= 'F'::text) AND (((gender)::text = 'm'::text) OR (((gender)::text = 'f'::text) AND ((name)::text ~~ 'A%'::text))))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using person_id_cast_info on cast_info ci  (cost=0.56..12.33 rows=504 width=8) (actual time=0.006..0.027 rows=128 loops=12595)
                                 Index Cond: (person_id = n.id)
                     ->  Index Scan using linked_movie_id_movie_link on movie_link ml  (cost=0.29..0.32 rows=2 width=8) (actual time=0.001..0.001 rows=0 loops=1618304)
                           Index Cond: (linked_movie_id = ci.movie_id)
               ->  Hash  (cost=1.27..1.27 rows=4 width=4) (actual time=0.018..0.019 rows=4 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                     ->  Seq Scan on link_type lt  (cost=0.00..1.27 rows=4 width=4) (actual time=0.010..0.013 rows=4 loops=1)
                           Filter: ((link)::text = ANY ('{references,"referenced in",features,"featured in"}'::text[]))
                           Rows Removed by Filter: 14
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.46 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=109842)
               Index Cond: (id = ci.movie_id)
               Filter: ((production_year >= 1980) AND (production_year <= 2010))
               Rows Removed by Filter: 0
 Planning Time: 7.595 ms
 Execution Time: 3317.650 ms
(42 rows)

SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=42962.65..42962.66 rows=1 width=64) (actual time=1447.115..1447.115 rows=1 loops=1)
   ->  Gather  (cost=5775.17..42962.64 rows=1 width=33) (actual time=340.063..1462.114 rows=62 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Nested Loop  (cost=4775.17..41962.54 rows=1 width=33) (actual time=194.140..1444.381 rows=21 loops=3)
               ->  Nested Loop  (cost=4774.74..41958.79 rows=5 width=41) (actual time=16.744..1429.503 rows=5793 loops=3)
                     ->  Hash Join  (cost=4774.31..41956.44 rows=2 width=21) (actual time=16.707..1416.961 rows=2479 loops=3)
                           Hash Cond: (ci.role_id = rt.id)
                           ->  Nested Loop  (cost=4773.15..41955.18 rows=27 width=25) (actual time=16.608..1415.947 rows=6533 loops=3)
                                 ->  Nested Loop  (cost=4772.59..41333.61 rows=332 width=25) (actual time=16.364..241.568 rows=16109 loops=3)
                                       ->  Parallel Hash Join  (cost=4772.16..39899.83 rows=332 width=4) (actual time=16.318..156.781 rows=16109 loops=3)
                                             Hash Cond: (mc.company_id = cn.id)
                                             ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..35097.06 rows=11664 width=8) (actual time=0.063..134.736 rows=16299 loops=3)
                                                   Filter: (((note)::text ~~ '%(Japan)%'::text) AND ((note)::text !~~ '%(USA)%'::text))
                                                   Rows Removed by Filter: 853411
                                             ->  Parallel Hash  (cost=4722.92..4722.92 rows=3939 width=4) (actual time=16.090..16.090 rows=2251 loops=3)
                                                   Buckets: 8192  Batches: 1  Memory Usage: 384kB
                                                   ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=3939 width=4) (actual time=0.020..15.435 rows=2251 loops=3)
                                                         Filter: ((country_code)::text = '[jp]'::text)
                                                         Rows Removed by Filter: 76082
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..4.32 rows=1 width=21) (actual time=0.005..0.005 rows=1 loops=48328)
                                             Index Cond: (id = mc.movie_id)
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.86 rows=1 width=12) (actual time=0.070..0.073 rows=0 loops=48328)
                                       Index Cond: (movie_id = t.id)
                                       Filter: ((note)::text = '(voice: English version)'::text)
                                       Rows Removed by Filter: 32
                           ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.021..0.021 rows=1 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                 ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.015..0.017 rows=1 loops=3)
                                       Filter: ((role)::text = 'actress'::text)
                                       Rows Removed by Filter: 11
                     ->  Index Scan using person_id_aka_name on aka_name an1  (cost=0.42..1.16 rows=2 width=20) (actual time=0.004..0.005 rows=2 loops=7438)
                           Index Cond: (person_id = ci.person_id)
               ->  Index Scan using name_pkey on name n1  (cost=0.43..0.75 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=17379)
                     Index Cond: (id = an1.person_id)
                     Filter: (((name)::text ~~ '%Yo%'::text) AND ((name)::text !~~ '%Yu%'::text))
                     Rows Removed by Filter: 1
 Planning Time: 4.761 ms
 Execution Time: 1462.344 ms
(39 rows)

SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=44409.00..44409.01 rows=1 width=64) (actual time=171.288..171.288 rows=1 loops=1)
   ->  Nested Loop  (cost=1002.40..44409.00 rows=1 width=33) (actual time=71.882..171.274 rows=6 loops=1)
         ->  Nested Loop  (cost=1002.27..44408.82 rows=1 width=37) (actual time=71.858..171.242 rows=6 loops=1)
               ->  Nested Loop  (cost=1001.84..44408.07 rows=1 width=45) (actual time=71.173..170.364 rows=171 loops=1)
                     ->  Nested Loop  (cost=1001.42..44406.90 rows=1 width=25) (actual time=71.147..169.403 rows=104 loops=1)
                           Join Filter: (t.id = ci.movie_id)
                           ->  Gather  (cost=1000.85..44264.09 rows=1 width=25) (actual time=71.098..171.585 rows=4 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Nested Loop  (cost=0.85..43263.99 rows=1 width=25) (actual time=135.410..167.865 rows=1 loops=3)
                                       ->  Nested Loop  (cost=0.42..43166.10 rows=12 width=4) (actual time=0.097..139.341 rows=2832 loops=3)
                                             ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..40532.74 rows=434 width=8) (actual time=0.057..129.731 rows=2856 loops=3)
                                                   Filter: (((note)::text ~~ '%(Japan)%'::text) AND ((note)::text !~~ '%(USA)%'::text) AND (((note)::text ~~ '%(2006)%'::text) OR ((note)::text ~~ '%(2007)%'::text)))
                                                   Rows Removed by Filter: 866853
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..6.07 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=8569)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((country_code)::text = '[jp]'::text)
                                                   Rows Removed by Filter: 0
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..8.13 rows=1 width=21) (actual time=0.010..0.010 rows=0 loops=8495)
                                             Index Cond: (id = mc.movie_id)
                                             Filter: ((production_year >= 2006) AND (production_year <= 2007) AND (((title)::text ~~ 'One Piece%'::text) OR ((title)::text ~~ 'Dragon Ball Z%'::text)))
                                             Rows Removed by Filter: 1
                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..142.80 rows=1 width=12) (actual time=0.067..0.209 rows=26 loops=4)
                                 Index Cond: (movie_id = mc.movie_id)
                                 Filter: ((note)::text = '(voice: English version)'::text)
                                 Rows Removed by Filter: 17
                     ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..1.16 rows=2 width=20) (actual time=0.007..0.009 rows=2 loops=104)
                           Index Cond: (person_id = ci.person_id)
               ->  Index Scan using name_pkey on name n  (cost=0.43..0.75 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=171)
                     Index Cond: (id = an.person_id)
                     Filter: (((name)::text ~~ '%Yo%'::text) AND ((name)::text !~~ '%Yu%'::text))
                     Rows Removed by Filter: 1
         ->  Index Scan using role_type_pkey on role_type rt  (cost=0.14..0.16 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=6)
               Index Cond: (id = ci.role_id)
               Filter: ((role)::text = 'actress'::text)
 Planning Time: 4.880 ms
 Execution Time: 174.501 ms
(37 rows)

SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=529735.54..529735.55 rows=1 width=64) (actual time=3421.390..3421.390 rows=1 loops=1)
   ->  Gather  (cost=529735.32..529735.53 rows=2 width=64) (actual time=3419.777..3520.396 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=528735.32..528735.33 rows=1 width=64) (actual time=3416.497..3416.498 rows=1 loops=3)
               ->  Parallel Hash Join  (cost=483413.83..513803.80 rows=2986304 width=33) (actual time=3141.466..3312.045 rows=829204 loops=3)
                     Hash Cond: (a1.person_id = n1.id)
                     ->  Parallel Seq Scan on aka_name a1  (cost=0.00..15151.60 rows=375560 width=20) (actual time=0.027..39.321 rows=300448 loops=3)
                     ->  Parallel Hash  (cost=459853.10..459853.10 rows=1218458 width=25) (actual time=3042.472..3042.472 rows=656886 loops=3)
                           Buckets: 65536  Batches: 64  Memory Usage: 2848kB
                           ->  Parallel Hash Join  (cost=345158.80..459853.10 rows=1218458 width=25) (actual time=2704.209..2906.705 rows=656886 loops=3)
                                 Hash Cond: (ci.person_id = n1.id)
                                 ->  Hash Join  (cost=243691.57..334123.41 rows=1218458 width=21) (actual time=1905.287..2198.003 rows=656886 loops=3)
                                       Hash Cond: (t.id = ci.movie_id)
                                       ->  Parallel Hash Join  (cost=44358.48..110382.12 rows=395644 width=25) (actual time=590.095..794.780 rows=384599 loops=3)
                                             Hash Cond: (t.id = mc.movie_id)
                                             ->  Parallel Seq Scan on title t  (cost=0.00..46532.63 rows=1053463 width=21) (actual time=0.017..114.129 rows=842771 loops=3)
                                             ->  Parallel Hash  (cost=37866.93..37866.93 rows=395644 width=4) (actual time=297.553..297.553 rows=384599 loops=3)
                                                   Buckets: 131072  Batches: 16  Memory Usage: 3872kB
                                                   ->  Parallel Hash Join  (cost=5351.77..37866.93 rows=395644 width=4) (actual time=25.175..244.862 rows=384599 loops=3)
                                                         Hash Cond: (mc.company_id = cn.id)
                                                         ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=8) (actual time=0.013..78.257 rows=869710 loops=3)
                                                         ->  Parallel Hash  (cost=4722.92..4722.92 rows=50308 width=4) (actual time=24.796..24.796 rows=28281 loops=3)
                                                               Buckets: 131072  Batches: 1  Memory Usage: 4384kB
                                                               ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=50308 width=4) (actual time=0.015..17.061 rows=28281 loops=3)
                                                                     Filter: ((country_code)::text = '[us]'::text)
                                                                     Rows Removed by Filter: 50051
                                       ->  Hash  (cost=149779.57..149779.57 rows=3020362 width=8) (actual time=1118.845..1118.845 rows=2728943 loops=3)
                                             Buckets: 131072  Batches: 64  Memory Usage: 2675kB
                                             ->  Nested Loop  (cost=0.56..149779.57 rows=3020362 width=8) (actual time=0.053..732.102 rows=2728943 loops=3)
                                                   ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.015..0.019 rows=1 loops=3)
                                                         Filter: ((role)::text = 'writer'::text)
                                                         Rows Removed by Filter: 11
                                                   ->  Index Scan using role_id_cast_info on cast_info ci  (cost=0.56..116829.02 rows=3294940 width=12) (actual time=0.032..478.018 rows=2728943 loops=3)
                                                         Index Cond: (role_id = rt.id)
                                 ->  Parallel Hash  (cost=72977.55..72977.55 rows=1736455 width=4) (actual time=353.011..353.011 rows=1389164 loops=3)
                                       Buckets: 131072  Batches: 64  Memory Usage: 3648kB
                                       ->  Parallel Seq Scan on name n1  (cost=0.00..72977.55 rows=1736455 width=4) (actual time=0.025..170.736 rows=1389164 loops=3)
 Planning Time: 4.317 ms
 Execution Time: 3520.631 ms
(40 rows)

SET
                                                                                               QUERY PLAN                                                                                               
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=529735.54..529735.55 rows=1 width=64) (actual time=1721.108..1721.108 rows=1 loops=1)
   ->  Gather  (cost=529735.32..529735.53 rows=2 width=64) (actual time=1719.138..1793.700 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=528735.32..528735.33 rows=1 width=64) (actual time=1716.558..1716.558 rows=1 loops=3)
               ->  Parallel Hash Join  (cost=483413.83..513803.80 rows=2986304 width=33) (actual time=1657.906..1702.980 rows=107668 loops=3)
                     Hash Cond: (an1.person_id = n1.id)
                     ->  Parallel Seq Scan on aka_name an1  (cost=0.00..15151.60 rows=375560 width=20) (actual time=0.025..39.209 rows=300448 loops=3)
                     ->  Parallel Hash  (cost=459853.10..459853.10 rows=1218458 width=25) (actual time=1560.286..1560.286 rows=95179 loops=3)
                           Buckets: 65536  Batches: 64  Memory Usage: 992kB
                           ->  Parallel Hash Join  (cost=345158.80..459853.10 rows=1218458 width=25) (actual time=1441.428..1539.031 rows=95179 loops=3)
                                 Hash Cond: (ci.person_id = n1.id)
                                 ->  Hash Join  (cost=243691.57..334123.41 rows=1218458 width=21) (actual time=894.213..1059.782 rows=95179 loops=3)
                                       Hash Cond: (t.id = ci.movie_id)
                                       ->  Parallel Hash Join  (cost=44358.48..110382.12 rows=395644 width=25) (actual time=589.570..792.993 rows=384599 loops=3)
                                             Hash Cond: (t.id = mc.movie_id)
                                             ->  Parallel Seq Scan on title t  (cost=0.00..46532.63 rows=1053463 width=21) (actual time=0.021..110.700 rows=842771 loops=3)
                                             ->  Parallel Hash  (cost=37866.93..37866.93 rows=395644 width=4) (actual time=300.190..300.190 rows=384599 loops=3)
                                                   Buckets: 131072  Batches: 16  Memory Usage: 3904kB
                                                   ->  Parallel Hash Join  (cost=5351.77..37866.93 rows=395644 width=4) (actual time=26.626..246.693 rows=384599 loops=3)
                                                         Hash Cond: (mc.company_id = cn.id)
                                                         ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=8) (actual time=0.015..77.969 rows=869710 loops=3)
                                                         ->  Parallel Hash  (cost=4722.92..4722.92 rows=50308 width=4) (actual time=26.260..26.261 rows=28281 loops=3)
                                                               Buckets: 131072  Batches: 1  Memory Usage: 4384kB
                                                               ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=50308 width=4) (actual time=0.029..18.115 rows=28281 loops=3)
                                                                     Filter: ((country_code)::text = '[us]'::text)
                                                                     Rows Removed by Filter: 50051
                                       ->  Hash  (cost=149779.57..149779.57 rows=3020362 width=8) (actual time=112.227..112.227 rows=276403 loops=3)
                                             Buckets: 131072  Batches: 64  Memory Usage: 1193kB
                                             ->  Nested Loop  (cost=0.56..149779.57 rows=3020362 width=8) (actual time=0.067..73.867 rows=276403 loops=3)
                                                   ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.015..0.018 rows=1 loops=3)
                                                         Filter: ((role)::text = 'costume designer'::text)
                                                         Rows Removed by Filter: 11
                                                   ->  Index Scan using role_id_cast_info on cast_info ci  (cost=0.56..116829.02 rows=3294940 width=12) (actual time=0.047..48.135 rows=276403 loops=3)
                                                         Index Cond: (role_id = rt.id)
                                 ->  Parallel Hash  (cost=72977.55..72977.55 rows=1736455 width=4) (actual time=351.914..351.914 rows=1389164 loops=3)
                                       Buckets: 131072  Batches: 64  Memory Usage: 3616kB
                                       ->  Parallel Seq Scan on name n1  (cost=0.00..72977.55 rows=1736455 width=4) (actual time=0.021..170.308 rows=1389164 loops=3)
 Planning Time: 4.801 ms
 Execution Time: 1793.925 ms
(40 rows)

SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=83282.38..83282.39 rows=1 width=96) (actual time=274.470..274.470 rows=1 loops=1)
   ->  Nested Loop  (cost=1003.86..83282.37 rows=1 width=49) (actual time=114.074..274.422 rows=121 loops=1)
         ->  Nested Loop  (cost=1003.44..83281.88 rows=1 width=53) (actual time=114.045..273.727 rows=123 loops=1)
               Join Filter: (ci.movie_id = mc.movie_id)
               ->  Gather  (cost=1003.01..83281.24 rows=1 width=57) (actual time=113.994..274.000 rows=139 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Nested Loop  (cost=3.01..82281.14 rows=1 width=57) (actual time=109.154..271.016 rows=46 loops=3)
                           ->  Nested Loop  (cost=2.58..82280.49 rows=1 width=45) (actual time=107.876..270.606 rows=52 loops=3)
                                 ->  Hash Join  (cost=2.15..82279.20 rows=2 width=24) (actual time=107.091..269.179 rows=142 loops=3)
                                       Hash Cond: (ci.role_id = rt.id)
                                       ->  Nested Loop  (cost=0.99..82277.96 rows=21 width=28) (actual time=106.987..269.040 rows=142 loops=3)
                                             Join Filter: (n.id = ci.person_id)
                                             ->  Nested Loop  (cost=0.42..82155.29 rows=9 width=24) (actual time=104.012..257.667 rows=519 loops=3)
                                                   ->  Parallel Seq Scan on name n  (cost=0.00..81659.82 rows=40 width=4) (actual time=103.496..247.039 rows=2256 loops=3)
                                                         Filter: (((name)::text ~~ '%Ang%'::text) AND ((gender)::text = 'f'::text))
                                                         Rows Removed by Filter: 1386908
                                                   ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..12.37 rows=2 width=20) (actual time=0.004..0.004 rows=0 loops=6768)
                                                         Index Cond: (person_id = n.id)
                                             ->  Index Scan using person_id_cast_info on cast_info ci  (cost=0.56..13.47 rows=13 width=16) (actual time=0.020..0.022 rows=0 loops=1558)
                                                   Index Cond: (person_id = an.person_id)
                                                   Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                   Rows Removed by Filter: 44
                                       ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.028..0.028 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.019..0.020 rows=1 loops=3)
                                                   Filter: ((role)::text = 'actress'::text)
                                                   Rows Removed by Filter: 11
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.64 rows=1 width=21) (actual time=0.010..0.010 rows=0 loops=425)
                                       Index Cond: (id = ci.movie_id)
                                       Filter: ((production_year >= 2005) AND (production_year <= 2015))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.65 rows=1 width=20) (actual time=0.007..0.007 rows=1 loops=155)
                                 Index Cond: (id = ci.person_role_id)
               ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.64 rows=1 width=8) (actual time=0.009..0.012 rows=1 loops=139)
                     Index Cond: (movie_id = t.id)
                     Filter: ((note IS NOT NULL) AND (((note)::text ~~ '%(USA)%'::text) OR ((note)::text ~~ '%(worldwide)%'::text)))
                     Rows Removed by Filter: 5
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.49 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=123)
               Index Cond: (id = mc.company_id)
               Filter: ((country_code)::text = '[us]'::text)
               Rows Removed by Filter: 0
 Planning Time: 7.531 ms
 Execution Time: 276.651 ms
(44 rows)

SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=83270.97..83270.98 rows=1 width=128) (actual time=262.320..262.320 rows=1 loops=1)
   ->  Nested Loop  (cost=1003.86..83270.96 rows=1 width=64) (actual time=117.537..262.289 rows=40 loops=1)
         ->  Nested Loop  (cost=1003.44..83270.37 rows=1 width=68) (actual time=117.520..262.132 rows=40 loops=1)
               ->  Nested Loop  (cost=1003.01..83269.66 rows=1 width=72) (actual time=117.444..261.644 rows=60 loops=1)
                     ->  Gather  (cost=1002.58..83268.98 rows=1 width=60) (actual time=109.038..263.823 rows=65 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop  (cost=2.58..82268.88 rows=1 width=60) (actual time=111.625..259.359 rows=22 loops=3)
                                 ->  Hash Join  (cost=2.15..82267.52 rows=2 width=39) (actual time=106.195..258.836 rows=88 loops=3)
                                       Hash Cond: (ci.role_id = rt.id)
                                       ->  Nested Loop  (cost=0.99..82266.28 rows=18 width=43) (actual time=106.095..258.714 rows=88 loops=3)
                                             Join Filter: (n.id = ci.person_id)
                                             ->  Nested Loop  (cost=0.42..82155.29 rows=9 width=39) (actual time=103.855..252.889 rows=432 loops=3)
                                                   ->  Parallel Seq Scan on name n  (cost=0.00..81659.82 rows=40 width=19) (actual time=103.192..246.049 rows=1803 loops=3)
                                                         Filter: (((name)::text ~~ '%Angel%'::text) AND ((gender)::text = 'f'::text))
                                                         Rows Removed by Filter: 1387361
                                                   ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..12.37 rows=2 width=20) (actual time=0.003..0.004 rows=0 loops=5409)
                                                         Index Cond: (person_id = n.id)
                                             ->  Index Scan using person_id_cast_info on cast_info ci  (cost=0.56..12.21 rows=10 width=16) (actual time=0.012..0.013 rows=0 loops=1296)
                                                   Index Cond: (person_id = an.person_id)
                                                   Filter: ((note)::text = '(voice)'::text)
                                                   Rows Removed by Filter: 43
                                       ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.026..0.026 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.020..0.021 rows=1 loops=3)
                                                   Filter: ((role)::text = 'actress'::text)
                                                   Rows Removed by Filter: 11
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.68 rows=1 width=21) (actual time=0.006..0.006 rows=0 loops=265)
                                       Index Cond: (id = ci.movie_id)
                                       Filter: ((production_year >= 2007) AND (production_year <= 2010))
                                       Rows Removed by Filter: 1
                     ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.69 rows=1 width=20) (actual time=0.004..0.004 rows=1 loops=65)
                           Index Cond: (id = ci.person_role_id)
               ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.69 rows=1 width=8) (actual time=0.006..0.008 rows=1 loops=60)
                     Index Cond: (movie_id = ci.movie_id)
                     Filter: (((note)::text ~~ '%(200%)%'::text) AND (((note)::text ~~ '%(USA)%'::text) OR ((note)::text ~~ '%(worldwide)%'::text)))
                     Rows Removed by Filter: 7
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.59 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=40)
               Index Cond: (id = mc.company_id)
               Filter: ((country_code)::text = '[us]'::text)
 Planning Time: 7.068 ms
 Execution Time: 264.965 ms
(42 rows)

SET
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=123482.63..123482.64 rows=1 width=128) (actual time=456.818..456.819 rows=1 loops=1)
   ->  Gather  (cost=123482.40..123482.61 rows=2 width=128) (actual time=456.488..460.678 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=122482.40..122482.41 rows=1 width=128) (actual time=453.774..453.774 rows=1 loops=3)
               ->  Nested Loop  (cost=81764.69..122480.72 rows=168 width=64) (actual time=259.666..452.973 rows=2715 loops=3)
                     Join Filter: (ci.movie_id = t.id)
                     ->  Nested Loop  (cost=81764.26..122392.38 rows=168 width=55) (actual time=259.615..444.504 rows=2715 loops=3)
                           ->  Nested Loop  (cost=81763.84..122186.52 rows=462 width=59) (actual time=258.954..426.746 rows=6115 loops=3)
                                 ->  Nested Loop  (cost=81763.41..122068.42 rows=173 width=51) (actual time=258.893..414.598 rows=2575 loops=3)
                                       ->  Hash Join  (cost=81762.98..121836.61 rows=358 width=39) (actual time=258.839..404.863 rows=2735 loops=3)
                                             Hash Cond: (ci.role_id = rt.id)
                                             ->  Nested Loop  (cost=81761.82..121820.18 rows=4301 width=43) (actual time=258.769..404.243 rows=2735 loops=3)
                                                   Join Filter: (n.id = ci.person_id)
                                                   ->  Parallel Hash Join  (cost=81761.26..97898.70 rows=1755 width=39) (actual time=256.983..333.868 rows=3508 loops=3)
                                                         Hash Cond: (an.person_id = n.id)
                                                         ->  Parallel Seq Scan on aka_name an  (cost=0.00..15151.60 rows=375560 width=20) (actual time=0.015..32.491 rows=300448 loops=3)
                                                         ->  Parallel Hash  (cost=81659.82..81659.82 rows=8115 width=19) (actual time=256.615..256.615 rows=16670 loops=3)
                                                               Buckets: 65536 (originally 32768)  Batches: 1 (originally 1)  Memory Usage: 3584kB
                                                               ->  Parallel Seq Scan on name n  (cost=0.00..81659.82 rows=8115 width=19) (actual time=104.476..248.327 rows=16670 loops=3)
                                                                     Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                                                     Rows Removed by Filter: 1372493
                                                   ->  Index Scan using person_id_cast_info on cast_info ci  (cost=0.56..13.47 rows=13 width=16) (actual time=0.018..0.020 rows=1 loops=10525)
                                                         Index Cond: (person_id = an.person_id)
                                                         Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                         Rows Removed by Filter: 44
                                             ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.023..0.023 rows=1 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.017..0.018 rows=1 loops=3)
                                                         Filter: ((role)::text = 'actress'::text)
                                                         Rows Removed by Filter: 11
                                       ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.65 rows=1 width=20) (actual time=0.003..0.003 rows=1 loops=8204)
                                             Index Cond: (id = ci.person_role_id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.63 rows=5 width=8) (actual time=0.003..0.004 rows=2 loops=7726)
                                       Index Cond: (movie_id = ci.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=18345)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.51 rows=1 width=21) (actual time=0.003..0.003 rows=1 loops=8144)
                           Index Cond: (id = mc.movie_id)
 Planning Time: 7.141 ms
 Execution Time: 460.910 ms
(43 rows)

SET
                                                                                                  QUERY PLAN                                                                                                  
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=211411.33..211411.34 rows=1 width=128) (actual time=3772.093..3772.093 rows=1 loops=1)
   ->  Gather  (cost=211411.10..211411.31 rows=2 width=128) (actual time=2876.581..3776.980 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=210411.10..210411.11 rows=1 width=128) (actual time=3180.628..3180.628 rows=1 loops=3)
               ->  Nested Loop  (cost=140783.51..210327.94 rows=8316 width=64) (actual time=2100.951..3142.958 rows=161027 loops=3)
                     ->  Nested Loop  (cost=140783.09..208504.03 rows=3393 width=56) (actual time=2100.217..2976.689 rows=57856 loops=3)
                           Join Filter: (ci.movie_id = t.id)
                           ->  Nested Loop  (cost=140782.66..206719.92 rows=3393 width=47) (actual time=2100.198..2828.992 rows=57856 loops=3)
                                 ->  Nested Loop  (cost=140782.23..202181.65 rows=7009 width=35) (actual time=2100.177..2635.132 rows=63155 loops=3)
                                       ->  Hash Join  (cost=140781.80..179531.73 rows=30299 width=16) (actual time=2100.146..2446.987 rows=63185 loops=3)
                                             Hash Cond: (mc.movie_id = ci.movie_id)
                                             ->  Parallel Hash Join  (cost=5351.77..37866.93 rows=395644 width=4) (actual time=24.052..251.515 rows=384599 loops=3)
                                                   Hash Cond: (mc.company_id = cn.id)
                                                   ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=8) (actual time=0.015..77.031 rows=869710 loops=3)
                                                   ->  Parallel Hash  (cost=4722.92..4722.92 rows=50308 width=4) (actual time=23.507..23.508 rows=28281 loops=3)
                                                         Buckets: 131072  Batches: 1  Memory Usage: 4352kB
                                                         ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=50308 width=4) (actual time=0.019..16.510 rows=28281 loops=3)
                                                               Filter: ((country_code)::text = '[us]'::text)
                                                               Rows Removed by Filter: 50051
                                             ->  Hash  (cost=134124.20..134124.20 rows=75106 width=12) (actual time=2075.149..2075.149 rows=276166 loops=3)
                                                   Buckets: 131072 (originally 131072)  Batches: 4 (originally 2)  Memory Usage: 3984kB
                                                   ->  Nested Loop  (cost=0.56..134124.20 rows=75106 width=12) (actual time=0.158..2020.726 rows=276166 loops=3)
                                                         ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.009..0.012 rows=1 loops=3)
                                                               Filter: ((role)::text = 'actress'::text)
                                                               Rows Removed by Filter: 11
                                                         ->  Index Scan using role_id_cast_info on cast_info ci  (cost=0.56..133303.71 rows=81934 width=16) (actual time=0.146..1997.723 rows=276166 loops=3)
                                                               Index Cond: (role_id = rt.id)
                                                               Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                               Rows Removed by Filter: 7175807
                                       ->  Index Scan using name_pkey on name n  (cost=0.43..0.75 rows=1 width=19) (actual time=0.003..0.003 rows=1 loops=189554)
                                             Index Cond: (id = ci.person_id)
                                             Filter: ((gender)::text = 'f'::text)
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.65 rows=1 width=20) (actual time=0.003..0.003 rows=1 loops=189464)
                                       Index Cond: (id = ci.person_role_id)
                           ->  Index Scan using title_pkey on title t  (cost=0.43..0.51 rows=1 width=21) (actual time=0.002..0.002 rows=1 loops=173567)
                                 Index Cond: (id = mc.movie_id)
                     ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.52 rows=2 width=20) (actual time=0.002..0.002 rows=3 loops=173567)
                           Index Cond: (person_id = n.id)
 Planning Time: 7.452 ms
 Execution Time: 3777.246 ms
(42 rows)

