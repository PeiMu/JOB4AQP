SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=46680.35..46680.36 rows=1 width=64) (actual time=441.222..441.222 rows=1 loops=1)
   ->  Gather  (cost=46680.13..46680.34 rows=2 width=64) (actual time=441.074..451.948 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=45680.13..45680.14 rows=1 width=64) (actual time=438.433..438.433 rows=1 loops=3)
               ->  Nested Loop  (cost=4736.00..45680.12 rows=2 width=33) (actual time=59.554..438.400 rows=35 loops=3)
                     ->  Nested Loop  (cost=4735.87..45679.82 rows=2 width=37) (actual time=59.520..438.287 rows=35 loops=3)
                           ->  Hash Join  (cost=4735.44..45655.14 rows=5 width=25) (actual time=59.476..437.856 rows=37 loops=3)
                                 Hash Cond: (ci.role_id = rt.id)
                                 ->  Nested Loop  (cost=4734.28..45653.76 rows=62 width=29) (actual time=59.392..437.748 rows=50 loops=3)
                                       Join Filter: (t.id = ci.movie_id)
                                       ->  Nested Loop  (cost=4733.71..40613.13 rows=2585 width=29) (actual time=16.439..201.158 rows=1513 loops=3)
                                             ->  Parallel Hash Join  (cost=4733.28..37248.44 rows=6523 width=8) (actual time=16.393..177.706 rows=2930 loops=3)
                                                   Hash Cond: (mc.company_id = cn.id)
                                                   ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=12) (actual time=0.014..77.221 rows=869710 loops=3)
                                                   ->  Parallel Hash  (cost=4722.92..4722.92 rows=829 width=4) (actual time=15.726..15.726 rows=454 loops=3)
                                                         Buckets: 2048  Batches: 1  Memory Usage: 112kB
                                                         ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=829 width=4) (actual time=0.035..15.555 rows=454 loops=3)
                                                               Filter: ((country_code)::text = '[ru]'::text)
                                                               Rows Removed by Filter: 77879
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..0.52 rows=1 width=21) (actual time=0.008..0.008 rows=1 loops=8790)
                                                   Index Cond: (id = mc.movie_id)
                                                   Filter: (production_year > 2005)
                                                   Rows Removed by Filter: 0
                                       ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.94 rows=1 width=12) (actual time=0.147..0.156 rows=0 loops=4539)
                                             Index Cond: (movie_id = mc.movie_id)
                                             Filter: (((note)::text ~~ '%(voice)%'::text) AND ((note)::text ~~ '%(uncredited)%'::text))
                                             Rows Removed by Filter: 50
                                 ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.021..0.021 rows=1 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.015..0.017 rows=1 loops=3)
                                             Filter: ((role)::text = 'actor'::text)
                                             Rows Removed by Filter: 11
                           ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..4.94 rows=1 width=20) (actual time=0.011..0.011 rows=1 loops=112)
                                 Index Cond: (id = ci.person_role_id)
                     ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=104)
                           Index Cond: (id = mc.company_type_id)
                           Heap Fetches: 104
 Planning Time: 4.241 ms
 Execution Time: 452.181 ms
(40 rows)

SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=43581.05..43581.06 rows=1 width=64) (actual time=269.954..269.954 rows=1 loops=1)
   ->  Gather  (cost=43580.83..43581.04 rows=2 width=64) (actual time=269.813..275.848 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=42580.83..42580.84 rows=1 width=64) (actual time=267.217..267.217 rows=1 loops=3)
               ->  Hash Join  (cost=4736.96..42580.54 rows=58 width=33) (actual time=267.213..267.214 rows=0 loops=3)
                     Hash Cond: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=4735.87..42579.14 rows=58 width=37) (actual time=267.139..267.139 rows=0 loops=3)
                           ->  Hash Join  (cost=4735.44..42510.24 rows=119 width=25) (actual time=267.139..267.139 rows=0 loops=3)
                                 Hash Cond: (ci.role_id = rt.id)
                                 ->  Nested Loop  (cost=4734.28..42504.02 rows=1424 width=29) (actual time=18.126..267.015 rows=871 loops=3)
                                       Join Filter: (t.id = ci.movie_id)
                                       ->  Nested Loop  (cost=4733.71..40613.13 rows=1018 width=29) (actual time=17.272..201.712 rows=420 loops=3)
                                             ->  Parallel Hash Join  (cost=4733.28..37248.44 rows=6523 width=8) (actual time=16.322..175.883 rows=2930 loops=3)
                                                   Hash Cond: (mc.company_id = cn.id)
                                                   ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=12) (actual time=0.014..76.852 rows=869710 loops=3)
                                                   ->  Parallel Hash  (cost=4722.92..4722.92 rows=829 width=4) (actual time=15.613..15.613 rows=454 loops=3)
                                                         Buckets: 2048  Batches: 1  Memory Usage: 112kB
                                                         ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=829 width=4) (actual time=0.032..15.436 rows=454 loops=3)
                                                               Filter: ((country_code)::text = '[ru]'::text)
                                                               Rows Removed by Filter: 77879
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..0.52 rows=1 width=21) (actual time=0.009..0.009 rows=0 loops=8790)
                                                   Index Cond: (id = mc.movie_id)
                                                   Filter: (production_year > 2010)
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.84 rows=1 width=12) (actual time=0.082..0.155 rows=2 loops=1259)
                                             Index Cond: (movie_id = mc.movie_id)
                                             Filter: ((note)::text ~~ '%(producer)%'::text)
                                             Rows Removed by Filter: 44
                                 ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=3)
                                             Filter: ((role)::text = 'actor'::text)
                                             Rows Removed by Filter: 11
                           ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.58 rows=1 width=20) (never executed)
                                 Index Cond: (id = ci.person_role_id)
                     ->  Hash  (cost=1.04..1.04 rows=4 width=4) (actual time=0.022..0.022 rows=4 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.016..0.017 rows=4 loops=3)
 Planning Time: 4.277 ms
 Execution Time: 276.054 ms
(41 rows)

SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=652454.39..652454.40 rows=1 width=64) (actual time=2645.454..2645.454 rows=1 loops=1)
   ->  Gather  (cost=652454.17..652454.38 rows=2 width=64) (actual time=2642.678..2707.648 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=651454.17..651454.18 rows=1 width=64) (actual time=2640.117..2640.118 rows=1 loops=3)
               ->  Hash Join  (cost=186238.47..650533.03 rows=184228 width=33) (actual time=2626.688..2640.104 rows=3 loops=3)
                     Hash Cond: (ci.role_id = rt.id)
                     ->  Hash Join  (cost=186237.20..649877.37 rows=184228 width=37) (actual time=2626.571..2639.985 rows=3 loops=3)
                           Hash Cond: (mc.company_type_id = ct.id)
                           ->  Parallel Hash Join  (cost=186236.11..648880.30 rows=184228 width=41) (actual time=2626.546..2639.959 rows=3 loops=3)
                                 Hash Cond: (ci.movie_id = t.id)
                                 ->  Parallel Hash Join  (cost=73555.68..529761.99 rows=276569 width=24) (actual time=1833.116..1870.718 rows=5 loops=3)
                                       Hash Cond: (ci.person_role_id = chn.id)
                                       ->  Parallel Seq Scan on cast_info ci  (cost=0.00..441459.62 rows=571306 width=12) (actual time=211.503..1409.925 rows=478480 loops=3)
                                             Filter: ((note)::text ~~ '%(producer)%'::text)
                                             Rows Removed by Filter: 11602968
                                       ->  Parallel Hash  (cost=49532.75..49532.75 rows=1308475 width=20) (actual time=360.996..360.996 rows=1046780 loops=3)
                                             Buckets: 65536  Batches: 64  Memory Usage: 3264kB
                                             ->  Parallel Seq Scan on char_name chn  (cost=0.00..49532.75 rows=1308475 width=20) (actual time=0.027..130.735 rows=1046780 loops=3)
                                 ->  Parallel Hash  (cost=107416.88..107416.88 rows=272203 width=29) (actual time=752.424..752.424 rows=198750 loops=3)
                                       Buckets: 65536  Batches: 16  Memory Usage: 3008kB
                                       ->  Parallel Hash Join  (cost=44358.48..107416.88 rows=272203 width=29) (actual time=565.165..711.021 rows=198750 loops=3)
                                             Hash Cond: (t.id = mc.movie_id)
                                             ->  Parallel Seq Scan on title t  (cost=0.00..49166.29 rows=724782 width=21) (actual time=0.021..128.824 rows=583011 loops=3)
                                                   Filter: (production_year > 1990)
                                                   Rows Removed by Filter: 259760
                                             ->  Parallel Hash  (cost=37866.93..37866.93 rows=395644 width=8) (actual time=309.155..309.155 rows=384599 loops=3)
                                                   Buckets: 131072  Batches: 16  Memory Usage: 3904kB
                                                   ->  Parallel Hash Join  (cost=5351.77..37866.93 rows=395644 width=8) (actual time=24.980..252.113 rows=384599 loops=3)
                                                         Hash Cond: (mc.company_id = cn.id)
                                                         ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=12) (actual time=0.021..78.123 rows=869710 loops=3)
                                                         ->  Parallel Hash  (cost=4722.92..4722.92 rows=50308 width=4) (actual time=24.711..24.711 rows=28281 loops=3)
                                                               Buckets: 131072  Batches: 1  Memory Usage: 4416kB
                                                               ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=50308 width=4) (actual time=0.021..17.348 rows=28281 loops=3)
                                                                     Filter: ((country_code)::text = '[us]'::text)
                                                                     Rows Removed by Filter: 50051
                           ->  Hash  (cost=1.04..1.04 rows=4 width=4) (actual time=0.008..0.008 rows=4 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                 ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.005..0.005 rows=4 loops=3)
                     ->  Hash  (cost=1.12..1.12 rows=12 width=4) (actual time=0.019..0.021 rows=12 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on role_type rt  (cost=0.00..1.12 rows=12 width=4) (actual time=0.012..0.013 rows=12 loops=3)
 Planning Time: 4.234 ms
 Execution Time: 2708.651 ms
(44 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3751.33..3751.34 rows=1 width=96) (actual time=100.689..100.689 rows=1 loops=1)
   ->  Nested Loop  (cost=8.32..3751.32 rows=1 width=118) (actual time=3.946..100.608 rows=310 loops=1)
         Join Filter: (ml.movie_id = t.id)
         ->  Nested Loop  (cost=7.89..3750.82 rows=1 width=113) (actual time=3.916..99.768 rows=402 loops=1)
               Join Filter: (mc.company_type_id = ct.id)
               Rows Removed by Join Filter: 20
               ->  Nested Loop  (cost=7.89..3749.75 rows=1 width=117) (actual time=3.909..99.338 rows=422 loops=1)
                     ->  Nested Loop  (cost=7.47..3749.30 rows=1 width=102) (actual time=3.455..96.945 rows=1021 loops=1)
                           Join Filter: (ml.movie_id = mc.movie_id)
                           ->  Nested Loop  (cost=7.04..3748.73 rows=1 width=90) (actual time=3.419..95.668 rows=199 loops=1)
                                 Join Filter: (ml.link_type_id = lt.id)
                                 Rows Removed by Join Filter: 303
                                 ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.018..0.023 rows=2 loops=1)
                                       Filter: ((link)::text ~~ '%follow%'::text)
                                       Rows Removed by Filter: 16
                                 ->  Nested Loop  (cost=7.04..3747.37 rows=11 width=12) (actual time=3.031..47.795 rows=251 loops=2)
                                       ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=3.024..38.150 rows=10544 loops=2)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.743..12.281 rows=1 loops=2)
                                                   Filter: ((keyword)::text = 'sequel'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=2.261..24.848 rows=10544 loops=2)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=11140
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.346..1.346 rows=10544 loops=2)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.001..0.001 rows=0 loops=21088)
                                             Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=2 width=12) (actual time=0.004..0.005 rows=5 loops=199)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: (note IS NULL)
                                 Rows Removed by Filter: 2
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=1021)
                           Index Cond: (id = mc.company_id)
                           Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                           Rows Removed by Filter: 1
               ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=422)
                     Filter: ((kind)::text = 'production companies'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.002..0.002 rows=1 loops=402)
               Index Cond: (id = mk.movie_id)
               Filter: ((production_year >= 1950) AND (production_year <= 2000))
               Rows Removed by Filter: 0
 Planning Time: 6.816 ms
 Execution Time: 100.910 ms
(44 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3751.33..3751.34 rows=1 width=96) (actual time=34.015..34.016 rows=1 loops=1)
   ->  Nested Loop  (cost=8.32..3751.32 rows=1 width=118) (actual time=4.723..34.002 rows=14 loops=1)
         Join Filter: (ml.movie_id = t.id)
         ->  Nested Loop  (cost=7.89..3750.82 rows=1 width=113) (actual time=3.409..33.783 rows=102 loops=1)
               Join Filter: (mc.company_type_id = ct.id)
               Rows Removed by Join Filter: 1
               ->  Nested Loop  (cost=7.89..3749.75 rows=1 width=117) (actual time=3.405..33.679 rows=103 loops=1)
                     ->  Nested Loop  (cost=7.47..3749.30 rows=1 width=102) (actual time=3.101..32.844 rows=288 loops=1)
                           Join Filter: (ml.movie_id = mc.movie_id)
                           ->  Nested Loop  (cost=7.04..3748.73 rows=1 width=90) (actual time=3.081..32.390 rows=64 loops=1)
                                 Join Filter: (ml.link_type_id = lt.id)
                                 Rows Removed by Join Filter: 187
                                 ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.009..0.013 rows=1 loops=1)
                                       Filter: ((link)::text ~~ '%follows%'::text)
                                       Rows Removed by Filter: 17
                                 ->  Nested Loop  (cost=7.04..3747.37 rows=11 width=12) (actual time=3.067..32.352 rows=251 loops=1)
                                       ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=3.061..23.353 rows=10544 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.763..10.121 rows=1 loops=1)
                                                   Filter: ((keyword)::text = 'sequel'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=2.293..12.258 rows=10544 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=5570
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.369..1.369 rows=10544 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.001..0.001 rows=0 loops=10544)
                                             Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=2 width=12) (actual time=0.005..0.006 rows=4 loops=64)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: (note IS NULL)
                                 Rows Removed by Filter: 2
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=288)
                           Index Cond: (id = mc.company_id)
                           Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                           Rows Removed by Filter: 1
               ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=103)
                     Filter: ((kind)::text = 'production companies'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.002..0.002 rows=0 loops=102)
               Index Cond: (id = mk.movie_id)
               Filter: (((title)::text ~~ '%Money%'::text) AND (production_year = 1998))
               Rows Removed by Filter: 1
 Planning Time: 6.618 ms
 Execution Time: 34.217 ms
(44 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=6166.44..6166.45 rows=1 width=96) (actual time=223.116..223.116 rows=1 loops=1)
   ->  Nested Loop  (cost=8.32..6166.44 rows=1 width=60) (actual time=3.511..221.436 rows=6946 loops=1)
         Join Filter: (ml.movie_id = t.id)
         ->  Nested Loop  (cost=7.89..6165.94 rows=1 width=55) (actual time=3.493..209.946 rows=6946 loops=1)
               Join Filter: (ml.link_type_id = lt.id)
               Rows Removed by Join Filter: 42158
               ->  Nested Loop  (cost=7.89..6164.53 rows=1 width=59) (actual time=3.484..197.050 rows=6946 loops=1)
                     ->  Nested Loop  (cost=7.47..6137.17 rows=60 width=44) (actual time=3.137..170.846 rows=14916 loops=1)
                           Join Filter: (mc.company_type_id = ct.id)
                           Rows Removed by Join Filter: 1782
                           ->  Nested Loop  (cost=7.47..6133.01 rows=79 width=48) (actual time=3.125..167.071 rows=15510 loops=1)
                                 Join Filter: (ml.movie_id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.04..6115.09 rows=31 width=12) (actual time=3.104..158.053 rows=1460 loops=1)
                                       ->  Nested Loop  (cost=6.75..6072.14 rows=101 width=4) (actual time=3.097..115.897 rows=47403 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2793.84 rows=3 width=4) (actual time=0.804..17.474 rows=3 loops=1)
                                                   Filter: ((keyword)::text = ANY ('{sequel,revenge,based-on-novel}'::text[]))
                                                   Rows Removed by Filter: 134167
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1089.78 rows=299 width=8) (actual time=3.274..31.245 rows=15801 loops=3)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=23953
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.905..1.905 rows=15801 loops=3)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.001..0.001 rows=0 loops=47403)
                                             Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=36) (actual time=0.002..0.005 rows=11 loops=1460)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: (note IS NOT NULL)
                                       Rows Removed by Filter: 2
                           ->  Materialize  (cost=0.00..1.06 rows=3 width=4) (actual time=0.000..0.000 rows=1 loops=15510)
                                 ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=3 width=4) (actual time=0.008..0.009 rows=3 loops=1)
                                       Filter: ((kind IS NOT NULL) AND ((kind)::text <> 'production companies'::text))
                                       Rows Removed by Filter: 1
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=14916)
                           Index Cond: (id = mc.company_id)
                           Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '20th Century Fox%'::text) OR ((name)::text ~~ 'Twentieth Century Fox%'::text)))
                           Rows Removed by Filter: 1
               ->  Seq Scan on link_type lt  (cost=0.00..1.18 rows=18 width=4) (actual time=0.001..0.001 rows=7 loops=6946)
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.001..0.001 rows=1 loops=6946)
               Index Cond: (id = mk.movie_id)
               Filter: (production_year > 1950)
 Planning Time: 6.490 ms
 Execution Time: 223.292 ms
(42 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=6183.65..6183.66 rows=1 width=96) (actual time=199.461..199.461 rows=1 loops=1)
   ->  Nested Loop  (cost=8.32..6183.29 rows=48 width=60) (actual time=3.185..196.381 rows=14899 loops=1)
         ->  Nested Loop  (cost=7.90..6158.94 rows=54 width=45) (actual time=3.178..172.719 rows=14916 loops=1)
               Join Filter: (mc.company_type_id = ct.id)
               Rows Removed by Join Filter: 1782
               ->  Nested Loop  (cost=7.90..6155.09 rows=71 width=49) (actual time=3.171..169.344 rows=15510 loops=1)
                     Join Filter: (ml.movie_id = mc.movie_id)
                     ->  Nested Loop  (cost=7.47..6138.91 rows=28 width=29) (actual time=3.165..161.328 rows=1460 loops=1)
                           Join Filter: (ml.link_type_id = lt.id)
                           Rows Removed by Join Filter: 10576
                           ->  Nested Loop  (cost=7.47..6130.60 rows=28 width=33) (actual time=3.154..159.830 rows=1460 loops=1)
                                 Join Filter: (ml.movie_id = t.id)
                                 ->  Nested Loop  (cost=7.04..6115.09 rows=31 width=12) (actual time=3.129..156.124 rows=1460 loops=1)
                                       ->  Nested Loop  (cost=6.75..6072.14 rows=101 width=4) (actual time=3.123..113.557 rows=47403 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2793.84 rows=3 width=4) (actual time=0.808..19.957 rows=3 loops=1)
                                                   Filter: ((keyword)::text = ANY ('{sequel,revenge,based-on-novel}'::text[]))
                                                   Rows Removed by Filter: 134167
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1089.78 rows=299 width=8) (actual time=3.261..29.679 rows=15801 loops=3)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=23953
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.897..1.897 rows=15801 loops=3)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.001..0.001 rows=0 loops=47403)
                                             Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.002..0.002 rows=1 loops=1460)
                                       Index Cond: (id = mk.movie_id)
                                       Filter: (production_year > 1950)
                           ->  Materialize  (cost=0.00..1.27 rows=18 width=4) (actual time=0.000..0.000 rows=8 loops=1460)
                                 ->  Seq Scan on link_type lt  (cost=0.00..1.18 rows=18 width=4) (actual time=0.007..0.009 rows=16 loops=1)
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=36) (actual time=0.002..0.004 rows=11 loops=1460)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: (note IS NOT NULL)
                           Rows Removed by Filter: 2
               ->  Materialize  (cost=0.00..1.06 rows=3 width=4) (actual time=0.000..0.000 rows=1 loops=15510)
                     ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=3 width=4) (actual time=0.005..0.007 rows=3 loops=1)
                           Filter: ((kind IS NOT NULL) AND ((kind)::text <> 'production companies'::text))
                           Rows Removed by Filter: 1
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.001..0.001 rows=1 loops=14916)
               Index Cond: (id = mc.company_id)
               Filter: ((country_code)::text <> '[pl]'::text)
               Rows Removed by Filter: 0
 Planning Time: 6.785 ms
 Execution Time: 199.633 ms
(43 rows)

SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16845.82..16845.83 rows=1 width=96) (actual time=206.157..206.158 rows=1 loops=1)
   ->  Gather  (cost=1005.35..16845.81 rows=1 width=42) (actual time=13.047..211.795 rows=397 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Nested Loop  (cost=5.34..15845.71 rows=1 width=42) (actual time=16.860..203.338 rows=132 loops=3)
               ->  Nested Loop  (cost=5.20..15844.23 rows=9 width=46) (actual time=16.850..203.105 rows=132 loops=3)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=4.77..15820.25 rows=15 width=54) (actual time=1.070..156.245 rows=1891 loops=3)
                           ->  Nested Loop  (cost=4.35..15801.98 rows=41 width=39) (actual time=1.033..146.683 rows=2203 loops=3)
                                 Join Filter: (mi_idx.movie_id = t.id)
                                 ->  Hash Join  (cost=3.92..15677.77 rows=234 width=18) (actual time=0.182..99.214 rows=8078 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Nested Loop  (cost=2.86..15671.64 rows=938 width=22) (actual time=0.093..96.476 rows=21569 loops=3)
                                             ->  Hash Join  (cost=2.43..15182.64 rows=187 width=10) (actual time=0.058..56.375 rows=5283 loops=3)
                                                   Hash Cond: (mi_idx.info_type_id = it2.id)
                                                   ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..15122.68 rows=21125 width=14) (actual time=0.024..54.378 rows=17543 loops=3)
                                                         Filter: ((info)::text > '8.0'::text)
                                                         Rows Removed by Filter: 442469
                                                   ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.020..0.020 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.014..0.016 rows=1 loops=3)
                                                               Filter: ((info)::text = 'rating'::text)
                                                               Rows Removed by Filter: 112
                                             ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.56 rows=5 width=12) (actual time=0.005..0.007 rows=4 loops=15849)
                                                   Index Cond: (movie_id = mi_idx.movie_id)
                                       ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.016..0.016 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.52 rows=1 width=21) (actual time=0.006..0.006 rows=0 loops=24233)
                                       Index Cond: (id = mc.movie_id)
                                       Filter: ((production_year >= 2005) AND (production_year <= 2008))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.004..0.004 rows=1 loops=6610)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.59 rows=1 width=8) (actual time=0.024..0.025 rows=0 loops=5674)
                           Index Cond: (movie_id = mc.movie_id)
                           Filter: ((info)::text = ANY ('{Drama,Horror}'::text[]))
                           Rows Removed by Filter: 28
               ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=397)
                     Index Cond: (id = mi.info_type_id)
                     Filter: ((info)::text = 'genres'::text)
 Planning Time: 6.766 ms
 Execution Time: 212.133 ms
(47 rows)

SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=19208.36..19208.37 rows=1 width=64) (actual time=75.681..75.681 rows=1 loops=1)
   ->  Gather  (cost=1004.41..19208.36 rows=1 width=59) (actual time=73.436..76.525 rows=10 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Nested Loop  (cost=4.41..18208.26 rows=1 width=59) (actual time=70.501..71.221 rows=3 loops=3)
               ->  Nested Loop  (cost=4.27..18205.80 rows=15 width=63) (actual time=70.446..70.835 rows=403 loops=3)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=3.84..18203.79 rows=1 width=29) (actual time=70.433..70.587 rows=3 loops=3)
                           ->  Nested Loop  (cost=3.42..18203.35 rows=1 width=33) (actual time=70.422..70.470 rows=11 loops=3)
                                 ->  Nested Loop  (cost=3.29..18203.03 rows=2 width=37) (actual time=70.411..70.447 rows=11 loops=3)
                                       Join Filter: (t.id = mc.movie_id)
                                       ->  Nested Loop  (cost=2.86..18202.37 rows=1 width=25) (actual time=70.395..70.415 rows=1 loops=3)
                                             ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=4) (actual time=70.326..70.328 rows=3 loops=3)
                                                   Hash Cond: (mi_idx.info_type_id = it2.id)
                                                   ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=8) (actual time=0.017..38.133 rows=460012 loops=3)
                                                   ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.029..0.029 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.025..0.025 rows=1 loops=3)
                                                               Filter: ((info)::text = 'bottom 10 rank'::text)
                                                               Rows Removed by Filter: 112
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..0.58 rows=1 width=21) (actual time=0.025..0.025 rows=0 loops=10)
                                                   Index Cond: (id = mi_idx.movie_id)
                                                   Filter: ((production_year > 2000) AND (((title)::text ~~ 'Birdemic%'::text) OR ((title)::text ~~ '%Movie%'::text)))
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.59 rows=5 width=12) (actual time=0.033..0.042 rows=16 loops=2)
                                             Index Cond: (movie_id = mi_idx.movie_id)
                                 ->  Index Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=33)
                                       Index Cond: (id = mc.company_type_id)
                                       Filter: ((kind IS NOT NULL) AND (((kind)::text = 'production companies'::text) OR ((kind)::text = 'distributors'::text)))
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.010..0.010 rows=0 loops=33)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.48 rows=42 width=50) (actual time=0.008..0.056 rows=121 loops=10)
                           Index Cond: (movie_id = mc.movie_id)
               ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=1210)
                     Index Cond: (id = mi.info_type_id)
                     Filter: ((info)::text = 'budget'::text)
                     Rows Removed by Filter: 1
 Planning Time: 7.176 ms
 Execution Time: 76.756 ms
(41 rows)

SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=17912.37..17912.38 rows=1 width=96) (actual time=683.388..683.388 rows=1 loops=1)
   ->  Gather  (cost=1007.63..17912.35 rows=2 width=42) (actual time=3.021..695.882 rows=4711 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Hash Join  (cost=7.63..16912.15 rows=1 width=42) (actual time=5.043..679.396 rows=1570 loops=3)
               Hash Cond: (mi.info_type_id = it1.id)
               ->  Nested Loop  (cost=5.20..16909.46 rows=98 width=46) (actual time=4.962..678.906 rows=1570 loops=3)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=4.77..16679.52 rows=135 width=54) (actual time=0.364..415.826 rows=14111 loops=3)
                           ->  Hash Join  (cost=4.35..16514.65 rows=370 width=39) (actual time=0.178..342.213 rows=22822 loops=3)
                                 Hash Cond: (mc.company_type_id = ct.id)
                                 ->  Nested Loop  (cost=3.29..16505.58 rows=1482 width=43) (actual time=0.134..334.614 rows=56386 loops=3)
                                       ->  Nested Loop  (cost=2.86..16307.87 rows=296 width=31) (actual time=0.104..247.305 rows=17435 loops=3)
                                             ->  Hash Join  (cost=2.43..15347.68 rows=723 width=10) (actual time=0.063..71.870 rows=40524 loops=3)
                                                   Hash Cond: (mi_idx.info_type_id = it2.id)
                                                   ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..15122.68 rows=81724 width=14) (actual time=0.030..62.247 rows=64280 loops=3)
                                                         Filter: ((info)::text > '7.0'::text)
                                                         Rows Removed by Filter: 395732
                                                   ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=3)
                                                               Filter: ((info)::text = 'rating'::text)
                                                               Rows Removed by Filter: 112
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..1.33 rows=1 width=21) (actual time=0.004..0.004 rows=0 loops=121572)
                                                   Index Cond: (id = mi_idx.movie_id)
                                                   Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.62 rows=5 width=12) (actual time=0.003..0.004 rows=3 loops=52304)
                                             Index Cond: (movie_id = t.id)
                                 ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.013..0.013 rows=1 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=3)
                                             Filter: ((kind)::text = 'production companies'::text)
                                             Rows Removed by Filter: 3
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.003..0.003 rows=1 loops=68466)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.69 rows=1 width=8) (actual time=0.018..0.018 rows=0 loops=42332)
                           Index Cond: (movie_id = mc.movie_id)
                           Filter: ((info)::text = ANY ('{Drama,Horror,Western,Family}'::text[]))
                           Rows Removed by Filter: 29
               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.026..0.026 rows=1 loops=3)
                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                     ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.015..0.022 rows=1 loops=3)
                           Filter: ((info)::text = 'genres'::text)
                           Rows Removed by Filter: 112
 Planning Time: 6.547 ms
 Execution Time: 697.324 ms
(49 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=20132.55..20132.56 rows=1 width=96) (actual time=1321.218..1321.218 rows=1 loops=1)
   ->  Gather  (cost=20132.32..20132.53 rows=2 width=96) (actual time=1320.652..1325.605 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=19132.32..19132.33 rows=1 width=96) (actual time=1318.029..1318.029 rows=1 loops=3)
               ->  Hash Join  (cost=8.73..19132.25 rows=10 width=65) (actual time=267.165..1311.124 rows=37034 loops=3)
                     Hash Cond: (mi.info_type_id = it2.id)
                     ->  Nested Loop  (cost=6.30..19126.56 rows=1197 width=69) (actual time=267.067..1295.567 rows=172109 loops=3)
                           ->  Nested Loop  (cost=5.87..19055.86 rows=37 width=35) (actual time=267.032..1152.502 rows=5490 loops=3)
                                 ->  Hash Join  (cost=5.45..18649.93 rows=911 width=39) (actual time=265.959..881.431 rows=100870 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Nested Loop  (cost=4.39..18629.17 rows=3643 width=43) (actual time=265.930..850.966 rows=257695 loops=3)
                                             ->  Hash Join  (cost=3.96..18186.75 rows=727 width=31) (actual time=265.874..599.426 rows=69960 loops=3)
                                                   Hash Cond: (t.kind_id = kt.id)
                                                   ->  Nested Loop  (cost=2.86..18164.20 rows=5089 width=35) (actual time=0.092..578.962 rows=153308 loops=3)
                                                         ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=10) (actual time=0.050..110.467 rows=153308 loops=3)
                                                               Hash Cond: (miidx.info_type_id = it.id)
                                                               ->  Parallel Seq Scan on movie_info_idx miidx  (cost=0.00..13685.15 rows=575015 width=14) (actual time=0.019..43.426 rows=460012 loops=3)
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'rating'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=25) (actual time=0.003..0.003 rows=1 loops=459925)
                                                               Index Cond: (id = miidx.movie_id)
                                                   ->  Hash  (cost=1.09..1.09 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=3)
                                                               Filter: ((kind)::text = 'movie'::text)
                                                               Rows Removed by Filter: 6
                                             ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.56 rows=5 width=12) (actual time=0.002..0.003 rows=4 loops=209880)
                                                   Index Cond: (movie_id = t.id)
                                       ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.013..0.013 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.011..0.011 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                 ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=302610)
                                       Index Cond: (id = mc.company_id)
                                       Filter: ((country_code)::text = '[de]'::text)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.49 rows=42 width=50) (actual time=0.005..0.022 rows=31 loops=16470)
                                 Index Cond: (movie_id = t.id)
                     ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.024..0.024 rows=1 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.014..0.020 rows=1 loops=3)
                                 Filter: ((info)::text = 'release dates'::text)
                                 Rows Removed by Filter: 112
 Planning Time: 10.234 ms
 Execution Time: 1325.874 ms
(50 rows)

SET
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=19206.33..19206.34 rows=1 width=96) (actual time=629.784..629.784 rows=1 loops=1)
   ->  Gather  (cost=1004.54..19206.32 rows=1 width=42) (actual time=280.264..636.402 rows=372 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Nested Loop  (cost=4.54..18206.22 rows=1 width=42) (actual time=300.567..626.820 rows=124 loops=3)
               ->  Nested Loop  (cost=4.40..18205.87 rows=2 width=46) (actual time=300.533..626.057 rows=707 loops=3)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=3.97..18203.87 rows=1 width=54) (actual time=300.497..625.106 rows=20 loops=3)
                           ->  Nested Loop  (cost=3.84..18203.70 rows=1 width=58) (actual time=300.440..625.014 rows=54 loops=3)
                                 ->  Nested Loop  (cost=3.42..18203.25 rows=1 width=43) (actual time=290.003..624.219 rows=104 loops=3)
                                       Join Filter: (t.id = mc.movie_id)
                                       ->  Nested Loop  (cost=2.99..18202.60 rows=1 width=31) (actual time=289.573..623.794 rows=30 loops=3)
                                             ->  Nested Loop  (cost=2.86..18202.37 rows=1 width=35) (actual time=2.276..623.578 rows=117 loops=3)
                                                   ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=10) (actual time=0.120..107.514 rows=153308 loops=3)
                                                         Hash Cond: (miidx.info_type_id = it.id)
                                                         ->  Parallel Seq Scan on movie_info_idx miidx  (cost=0.00..13685.15 rows=575015 width=14) (actual time=0.021..41.488 rows=460012 loops=3)
                                                         ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.023..0.023 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.018..0.019 rows=1 loops=3)
                                                                     Filter: ((info)::text = 'rating'::text)
                                                                     Rows Removed by Filter: 112
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.58 rows=1 width=25) (actual time=0.003..0.003 rows=0 loops=459925)
                                                         Index Cond: (id = miidx.movie_id)
                                                         Filter: (((title)::text <> ''::text) AND (((title)::text ~~ '%Champion%'::text) OR ((title)::text ~~ '%Loser%'::text)))
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using kind_type_pkey on kind_type kt  (cost=0.13..0.18 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=352)
                                                   Index Cond: (id = t.kind_id)
                                                   Filter: ((kind)::text = 'movie'::text)
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.59 rows=5 width=12) (actual time=0.010..0.013 rows=3 loops=90)
                                             Index Cond: (movie_id = miidx.movie_id)
                                 ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.007..0.007 rows=1 loops=313)
                                       Index Cond: (id = mc.company_id)
                                       Filter: ((country_code)::text = '[us]'::text)
                                       Rows Removed by Filter: 0
                           ->  Index Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=161)
                                 Index Cond: (id = mc.company_type_id)
                                 Filter: ((kind)::text = 'production companies'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.48 rows=42 width=8) (actual time=0.010..0.041 rows=35 loops=61)
                           Index Cond: (movie_id = mc.movie_id)
               ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=2122)
                     Index Cond: (id = mi.info_type_id)
                     Filter: ((info)::text = 'release dates'::text)
                     Rows Removed by Filter: 1
 Planning Time: 10.650 ms
 Execution Time: 636.714 ms
(47 rows)

SET
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=19206.33..19206.34 rows=1 width=96) (actual time=612.826..612.827 rows=1 loops=1)
   ->  Gather  (cost=1004.54..19206.32 rows=1 width=42) (actual time=442.280..619.622 rows=53 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Nested Loop  (cost=4.54..18206.22 rows=1 width=42) (actual time=455.973..609.850 rows=18 loops=3)
               ->  Nested Loop  (cost=4.40..18205.87 rows=2 width=46) (actual time=455.945..609.753 rows=73 loops=3)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=3.97..18203.87 rows=1 width=54) (actual time=455.923..609.622 rows=5 loops=3)
                           ->  Nested Loop  (cost=3.84..18203.70 rows=1 width=58) (actual time=455.859..609.592 rows=16 loops=3)
                                 ->  Nested Loop  (cost=3.42..18203.25 rows=1 width=43) (actual time=455.831..609.324 rows=32 loops=3)
                                       Join Filter: (t.id = mc.movie_id)
                                       ->  Nested Loop  (cost=2.99..18202.60 rows=1 width=31) (actual time=455.800..609.249 rows=10 loops=3)
                                             ->  Nested Loop  (cost=2.86..18202.37 rows=1 width=35) (actual time=47.576..609.194 rows=22 loops=3)
                                                   ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=10) (actual time=0.130..107.447 rows=153308 loops=3)
                                                         Hash Cond: (miidx.info_type_id = it.id)
                                                         ->  Parallel Seq Scan on movie_info_idx miidx  (cost=0.00..13685.15 rows=575015 width=14) (actual time=0.021..41.357 rows=460012 loops=3)
                                                         ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.026..0.026 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.020..0.022 rows=1 loops=3)
                                                                     Filter: ((info)::text = 'rating'::text)
                                                                     Rows Removed by Filter: 112
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.58 rows=1 width=25) (actual time=0.003..0.003 rows=0 loops=459925)
                                                         Index Cond: (id = miidx.movie_id)
                                                         Filter: (((title)::text <> ''::text) AND (((title)::text ~~ 'Champion%'::text) OR ((title)::text ~~ 'Loser%'::text)))
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using kind_type_pkey on kind_type kt  (cost=0.13..0.18 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=66)
                                                   Index Cond: (id = t.kind_id)
                                                   Filter: ((kind)::text = 'movie'::text)
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.59 rows=5 width=12) (actual time=0.005..0.006 rows=3 loops=29)
                                             Index Cond: (movie_id = miidx.movie_id)
                                 ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.008..0.008 rows=0 loops=95)
                                       Index Cond: (id = mc.company_id)
                                       Filter: ((country_code)::text = '[us]'::text)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.002 rows=0 loops=47)
                                 Index Cond: (id = mc.company_type_id)
                                 Filter: ((kind)::text = 'production companies'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.48 rows=42 width=8) (actual time=0.008..0.025 rows=16 loops=14)
                           Index Cond: (movie_id = mc.movie_id)
               ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=218)
                     Index Cond: (id = mi.info_type_id)
                     Filter: ((info)::text = 'release dates'::text)
                     Rows Removed by Filter: 1
 Planning Time: 10.787 ms
 Execution Time: 619.862 ms
(47 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=20720.69..20720.70 rows=1 width=96) (actual time=2039.267..2039.267 rows=1 loops=1)
   ->  Gather  (cost=20720.46..20720.67 rows=2 width=96) (actual time=2039.076..2044.546 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=19720.46..19720.47 rows=1 width=96) (actual time=2036.186..2036.186 rows=1 loops=3)
               ->  Hash Join  (cost=8.73..19719.76 rows=94 width=42) (actual time=266.663..1995.688 rows=223463 loops=3)
                     Hash Cond: (mi.info_type_id = it2.id)
                     ->  Nested Loop  (cost=6.30..19688.31 rows=10660 width=46) (actual time=266.551..1880.861 rows=1438861 loops=3)
                           ->  Nested Loop  (cost=5.87..19055.86 rows=331 width=54) (actual time=266.522..1170.111 rows=29098 loops=3)
                                 ->  Hash Join  (cost=5.45..18649.93 rows=911 width=39) (actual time=266.470..882.263 rows=100870 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Nested Loop  (cost=4.39..18629.17 rows=3643 width=43) (actual time=266.438..850.332 rows=257695 loops=3)
                                             ->  Hash Join  (cost=3.96..18186.75 rows=727 width=31) (actual time=266.388..599.280 rows=69960 loops=3)
                                                   Hash Cond: (t.kind_id = kt.id)
                                                   ->  Nested Loop  (cost=2.86..18164.20 rows=5089 width=35) (actual time=0.092..578.962 rows=153308 loops=3)
                                                         ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=10) (actual time=0.050..111.880 rows=153308 loops=3)
                                                               Hash Cond: (miidx.info_type_id = it.id)
                                                               ->  Parallel Seq Scan on movie_info_idx miidx  (cost=0.00..13685.15 rows=575015 width=14) (actual time=0.019..44.303 rows=460012 loops=3)
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'rating'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=25) (actual time=0.003..0.003 rows=1 loops=459925)
                                                               Index Cond: (id = miidx.movie_id)
                                                   ->  Hash  (cost=1.09..1.09 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=3)
                                                               Filter: ((kind)::text = 'movie'::text)
                                                               Rows Removed by Filter: 6
                                             ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.56 rows=5 width=12) (actual time=0.002..0.003 rows=4 loops=209880)
                                                   Index Cond: (movie_id = t.id)
                                       ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.016..0.016 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.013..0.014 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                 ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=302610)
                                       Index Cond: (id = mc.company_id)
                                       Filter: ((country_code)::text = '[us]'::text)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.49 rows=42 width=8) (actual time=0.004..0.019 rows=49 loops=87293)
                                 Index Cond: (movie_id = t.id)
                     ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.028..0.028 rows=1 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.017..0.024 rows=1 loops=3)
                                 Filter: ((info)::text = 'release dates'::text)
                                 Rows Removed by Filter: 112
 Planning Time: 10.475 ms
 Execution Time: 2044.814 ms
(50 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7380.25..7380.26 rows=1 width=64) (actual time=424.926..424.926 rows=1 loops=1)
   ->  Nested Loop  (cost=8.04..7380.24 rows=1 width=23) (actual time=16.604..424.689 rows=761 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         Rows Removed by Join Filter: 117
         ->  Nested Loop  (cost=8.04..7377.82 rows=1 width=27) (actual time=16.598..421.357 rows=878 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=7.61..7375.92 rows=1 width=35) (actual time=16.031..333.866 rows=1147 loops=1)
                     Join Filter: (mi_idx.info_type_id = it2.id)
                     Rows Removed by Join Filter: 2233
                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=1)
                           Filter: ((info)::text = 'rating'::text)
                           Rows Removed by Filter: 112
                     ->  Nested Loop  (cost=7.61..7373.39 rows=9 width=39) (actual time=15.639..333.476 rows=3380 loops=1)
                           Join Filter: (t.id = mi_idx.movie_id)
                           ->  Nested Loop  (cost=7.18..7371.79 rows=3 width=25) (actual time=15.609..319.749 rows=1966 loops=1)
                                 Join Filter: (t.kind_id = kt.id)
                                 Rows Removed by Join Filter: 616
                                 ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.012..0.014 rows=1 loops=1)
                                       Filter: ((kind)::text = 'movie'::text)
                                       Rows Removed by Filter: 6
                                 ->  Nested Loop  (cost=7.18..7370.44 rows=21 width=29) (actual time=4.821..319.338 rows=2582 loops=1)
                                       ->  Nested Loop  (cost=6.75..7304.56 rows=135 width=4) (actual time=4.561..144.865 rows=37091 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.208..21.344 rows=3 loops=1)
                                                   Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                   Rows Removed by Filter: 134167
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1082.76 rows=299 width=8) (actual time=3.380..39.716 rows=12364 loops=3)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=26312
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.851..1.851 rows=12364 loops=3)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.004..0.004 rows=0 loops=37091)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: (production_year > 2010)
                                             Rows Removed by Filter: 1
                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=14) (actual time=0.006..0.006 rows=2 loops=1966)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((info)::text < '8.5'::text)
                                 Rows Removed by Filter: 0
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.065..0.076 rows=1 loops=1147)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,USA,American}'::text[]))
                     Rows Removed by Filter: 69
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=878)
               Filter: ((info)::text = 'countries'::text)
               Rows Removed by Filter: 21
 Planning Time: 6.738 ms
 Execution Time: 425.090 ms
(47 rows)

SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4867.25..4867.26 rows=1 width=64) (actual time=187.496..187.496 rows=1 loops=1)
   ->  Nested Loop  (cost=8.04..4867.24 rows=1 width=23) (actual time=125.728..187.486 rows=1 loops=1)
         Join Filter: (t.kind_id = kt.id)
         Rows Removed by Join Filter: 1
         ->  Nested Loop  (cost=8.04..4866.14 rows=1 width=27) (actual time=8.459..187.471 rows=2 loops=1)
               Join Filter: (mi_idx.info_type_id = it2.id)
               Rows Removed by Join Filter: 1
               ->  Nested Loop  (cost=8.04..4863.72 rows=1 width=31) (actual time=8.439..187.442 rows=3 loops=1)
                     Join Filter: (t.id = mi_idx.movie_id)
                     ->  Nested Loop  (cost=7.61..4863.21 rows=1 width=33) (actual time=8.417..187.341 rows=8 loops=1)
                           Join Filter: (mi.info_type_id = it1.id)
                           ->  Nested Loop  (cost=7.61..4860.78 rows=1 width=37) (actual time=8.411..187.306 rows=8 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=7.18..4858.88 rows=1 width=29) (actual time=8.270..186.566 rows=15 loops=1)
                                       ->  Nested Loop  (cost=6.75..4825.68 rows=67 width=4) (actual time=6.291..84.288 rows=19528 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=2 width=4) (actual time=1.185..16.574 rows=1 loops=1)
                                                   Filter: ((keyword)::text = ANY ('{murder,murder-in-title}'::text[]))
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1096.79 rows=299 width=8) (actual time=5.103..65.564 rows=19528 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=12389
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=2.915..2.915 rows=19528 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.50 rows=1 width=25) (actual time=0.005..0.005 rows=0 loops=19528)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: ((production_year > 2010) AND (((title)::text ~~ '%murder%'::text) OR ((title)::text ~~ '%Murder%'::text) OR ((title)::text ~~ '%Mord%'::text)))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.045..0.049 rows=1 loops=15)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,USA,American}'::text[]))
                                       Rows Removed by Filter: 12
                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=8)
                                 Filter: ((info)::text = 'countries'::text)
                                 Rows Removed by Filter: 7
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=14) (actual time=0.011..0.012 rows=0 loops=8)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((info)::text > '6.0'::text)
                           Rows Removed by Filter: 1
               ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=3)
                     Filter: ((info)::text = 'rating'::text)
                     Rows Removed by Filter: 104
         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=2)
               Filter: ((kind)::text = 'movie'::text)
               Rows Removed by Filter: 3
 Planning Time: 6.572 ms
 Execution Time: 187.713 ms
(46 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7388.39..7388.40 rows=1 width=64) (actual time=764.390..764.391 rows=1 loops=1)
   ->  Nested Loop  (cost=8.04..7388.39 rows=1 width=23) (actual time=4.691..763.443 rows=4115 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         Rows Removed by Join Filter: 594
         ->  Nested Loop  (cost=8.04..7385.96 rows=1 width=27) (actual time=4.686..746.715 rows=4709 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=7.61..7384.06 rows=1 width=35) (actual time=4.619..359.604 rows=5949 loops=1)
                     Join Filter: (mi_idx.info_type_id = it2.id)
                     Rows Removed by Join Filter: 11839
                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=1)
                           Filter: ((info)::text = 'rating'::text)
                           Rows Removed by Filter: 112
                     ->  Nested Loop  (cost=7.61..7381.10 rows=44 width=39) (actual time=4.603..357.736 rows=17788 loops=1)
                           Join Filter: (t.id = mi_idx.movie_id)
                           ->  Nested Loop  (cost=7.18..7373.07 rows=15 width=25) (actual time=4.582..310.972 rows=8073 loops=1)
                                 Join Filter: (t.kind_id = kt.id)
                                 Rows Removed by Join Filter: 4332
                                 ->  Nested Loop  (cost=7.18..7370.44 rows=54 width=29) (actual time=4.515..307.535 rows=9739 loops=1)
                                       ->  Nested Loop  (cost=6.75..7304.56 rows=135 width=4) (actual time=4.492..137.532 rows=37091 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.154..21.511 rows=3 loops=1)
                                                   Filter: ((keyword IS NOT NULL) AND ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[])))
                                                   Rows Removed by Filter: 134167
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1082.76 rows=299 width=8) (actual time=3.373..37.208 rows=12364 loops=3)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=26312
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.850..1.850 rows=12364 loops=3)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.004..0.004 rows=0 loops=37091)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: (production_year > 2005)
                                             Rows Removed by Filter: 1
                                 ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=9739)
                                       ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.014..0.015 rows=2 loops=1)
                                             Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                             Rows Removed by Filter: 5
                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=14) (actual time=0.005..0.005 rows=2 loops=8073)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((info)::text < '8.5'::text)
                                 Rows Removed by Filter: 0
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.056..0.065 rows=1 loops=5949)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                     Rows Removed by Filter: 71
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=4709)
               Filter: ((info)::text = 'countries'::text)
               Rows Removed by Filter: 20
 Planning Time: 6.383 ms
 Execution Time: 764.563 ms
(48 rows)

SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=51520.30..51520.31 rows=1 width=64) (actual time=330.177..330.177 rows=1 loops=1)
   ->  Gather  (cost=51520.08..51520.29 rows=2 width=64) (actual time=329.720..334.395 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=50520.08..50520.09 rows=1 width=64) (actual time=326.903..326.903 rows=1 loops=3)
               ->  Nested Loop  (cost=5354.18..50520.04 rows=7 width=59) (actual time=103.873..326.869 rows=109 loops=3)
                     ->  Nested Loop  (cost=5353.76..50516.97 rows=7 width=63) (actual time=103.836..326.280 rows=109 loops=3)
                           ->  Nested Loop  (cost=5353.33..50515.14 rows=1 width=75) (actual time=51.371..326.039 rows=19 loops=3)
                                 ->  Nested Loop  (cost=5353.19..50514.85 rows=1 width=79) (actual time=51.345..325.969 rows=19 loops=3)
                                       ->  Nested Loop  (cost=5353.06..50514.70 rows=1 width=83) (actual time=51.315..325.894 rows=19 loops=3)
                                             ->  Nested Loop  (cost=5352.62..48271.71 rows=1133 width=33) (actual time=25.800..239.401 rows=1711 loops=3)
                                                   ->  Nested Loop  (cost=5352.19..46344.74 rows=2083 width=12) (actual time=25.741..215.344 rows=4566 loops=3)
                                                         ->  Parallel Hash Join  (cost=5351.77..40470.46 rows=3000 width=8) (actual time=25.040..170.618 rows=14612 loops=3)
                                                               Hash Cond: (mc.company_id = cn.id)
                                                               ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..35097.06 rows=8243 width=12) (actual time=0.024..139.482 rows=20555 loops=3)
                                                                     Filter: (((note)::text ~~ '%(200%)%'::text) AND ((note)::text ~~ '%(worldwide)%'::text))
                                                                     Rows Removed by Filter: 849155
                                                               ->  Parallel Hash  (cost=4722.92..4722.92 rows=50308 width=4) (actual time=24.455..24.455 rows=28281 loops=3)
                                                                     Buckets: 131072  Batches: 1  Memory Usage: 4352kB
                                                                     ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=50308 width=4) (actual time=0.021..17.256 rows=28281 loops=3)
                                                                           Filter: ((country_code)::text = '[us]'::text)
                                                                           Rows Removed by Filter: 50051
                                                         ->  Index Only Scan using movie_id_aka_title on aka_title at  (cost=0.42..1.93 rows=3 width=4) (actual time=0.002..0.003 rows=0 loops=43837)
                                                               Index Cond: (movie_id = mc.movie_id)
                                                               Heap Fetches: 13699
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.93 rows=1 width=21) (actual time=0.005..0.005 rows=0 loops=13699)
                                                         Index Cond: (id = at.movie_id)
                                                         Filter: (production_year > 2000)
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.97 rows=1 width=50) (actual time=0.050..0.050 rows=0 loops=5134)
                                                   Index Cond: (movie_id = t.id)
                                                   Filter: (((note)::text ~~ '%internet%'::text) AND ((info)::text ~~ 'USA:% 200%'::text))
                                                   Rows Removed by Filter: 72
                                       ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=57)
                                             Index Cond: (id = mc.company_type_id)
                                             Heap Fetches: 57
                                 ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.21 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=57)
                                       Index Cond: (id = mi.info_type_id)
                                       Filter: ((info)::text = 'release dates'::text)
                           ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.36 rows=47 width=8) (actual time=0.010..0.011 rows=6 loops=57)
                                 Index Cond: (movie_id = t.id)
                     ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=328)
                           Index Cond: (id = mk.keyword_id)
                           Heap Fetches: 328
 Planning Time: 14.766 ms
 Execution Time: 334.620 ms
(46 rows)

SET
                                                                                                      QUERY PLAN                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=6425.67..6425.68 rows=1 width=64) (actual time=31.507..31.507 rows=1 loops=1)
   ->  Gather  (cost=6425.55..6425.66 rows=1 width=64) (actual time=31.430..32.746 rows=2 loops=1)
         Workers Planned: 1
         Workers Launched: 1
         ->  Partial Aggregate  (cost=5425.55..5425.56 rows=1 width=64) (actual time=29.396..29.396 rows=1 loops=2)
               ->  Nested Loop  (cost=2.84..5425.53 rows=5 width=59) (actual time=21.491..29.386 rows=18 loops=2)
                     ->  Nested Loop  (cost=2.42..5423.34 rows=5 width=63) (actual time=21.479..29.196 rows=18 loops=2)
                           ->  Nested Loop  (cost=1.99..5421.40 rows=1 width=75) (actual time=18.830..29.154 rows=2 loops=2)
                                 ->  Nested Loop  (cost=1.85..5421.11 rows=1 width=79) (actual time=18.824..29.144 rows=2 loops=2)
                                       ->  Nested Loop  (cost=1.41..5418.58 rows=1 width=29) (actual time=16.844..28.177 rows=13 loops=2)
                                             ->  Nested Loop  (cost=0.98..5417.65 rows=1 width=8) (actual time=16.826..27.921 rows=14 loops=2)
                                                   ->  Nested Loop  (cost=0.85..5417.49 rows=1 width=12) (actual time=16.812..27.886 rows=14 loops=2)
                                                         ->  Nested Loop  (cost=0.43..5415.54 rows=1 width=8) (actual time=16.453..26.998 rows=139 loops=2)
                                                               ->  Parallel Seq Scan on company_name cn  (cost=0.00..5068.50 rows=1 width=4) (actual time=16.421..22.969 rows=0 loops=2)
                                                                     Filter: (((country_code)::text = '[us]'::text) AND ((name)::text = 'YouTube'::text))
                                                                     Rows Removed by Filter: 117498
                                                               ->  Index Scan using company_id_movie_companies on movie_companies mc  (cost=0.43..347.02 rows=1 width=12) (actual time=0.059..8.019 rows=278 loops=1)
                                                                     Index Cond: (company_id = cn.id)
                                                                     Filter: (((note)::text ~~ '%(200%)%'::text) AND ((note)::text ~~ '%(worldwide)%'::text))
                                                                     Rows Removed by Filter: 1180
                                                         ->  Index Only Scan using movie_id_aka_title on aka_title at  (cost=0.42..1.93 rows=3 width=4) (actual time=0.006..0.006 rows=0 loops=278)
                                                               Index Cond: (movie_id = mc.movie_id)
                                                               Heap Fetches: 27
                                                   ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=27)
                                                         Index Cond: (id = mc.company_type_id)
                                                         Heap Fetches: 27
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..0.93 rows=1 width=21) (actual time=0.018..0.018 rows=1 loops=27)
                                                   Index Cond: (id = at.movie_id)
                                                   Filter: ((production_year >= 2005) AND (production_year <= 2010))
                                                   Rows Removed by Filter: 0
                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.53 rows=1 width=50) (actual time=0.070..0.074 rows=0 loops=26)
                                             Index Cond: (movie_id = t.id)
                                             Filter: (((note)::text ~~ '%internet%'::text) AND ((info)::text ~~ 'USA:% 200%'::text))
                                             Rows Removed by Filter: 19
                                 ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.21 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=3)
                                       Index Cond: (id = mi.info_type_id)
                                       Filter: ((info)::text = 'release dates'::text)
                           ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.46 rows=47 width=8) (actual time=0.023..0.025 rows=12 loops=3)
                                 Index Cond: (movie_id = t.id)
                     ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=37)
                           Index Cond: (id = mk.keyword_id)
                           Heap Fetches: 37
 Planning Time: 15.284 ms
 Execution Time: 32.968 ms
(44 rows)

SET
                                                                                                          QUERY PLAN                                                                                                          
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=271194.30..271194.31 rows=1 width=64) (actual time=595.672..595.673 rows=1 loops=1)
   ->  Gather  (cost=271194.08..271194.29 rows=2 width=64) (actual time=595.540..600.172 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=270194.08..270194.09 rows=1 width=64) (actual time=592.867..592.867 rows=1 loops=3)
               ->  Nested Loop  (cost=5.11..270193.85 rows=46 width=59) (actual time=154.168..592.728 rows=757 loops=3)
                     Join Filter: (t.id = at.movie_id)
                     ->  Nested Loop  (cost=4.69..270184.51 rows=18 width=75) (actual time=145.691..587.972 rows=2655 loops=3)
                           ->  Nested Loop  (cost=4.27..270176.61 rows=18 width=79) (actual time=145.661..579.855 rows=2655 loops=3)
                                 ->  Nested Loop  (cost=3.84..270174.80 rows=1 width=71) (actual time=145.433..573.235 rows=882 loops=3)
                                       ->  Nested Loop  (cost=3.71..270174.65 rows=1 width=75) (actual time=145.406..571.967 rows=882 loops=3)
                                             ->  Nested Loop  (cost=3.29..270172.87 rows=4 width=79) (actual time=145.346..565.903 rows=961 loops=3)
                                                   ->  Nested Loop  (cost=2.86..270172.24 rows=1 width=67) (actual time=145.312..556.558 rows=594 loops=3)
                                                         ->  Hash Join  (cost=2.43..270163.87 rows=1 width=46) (actual time=145.270..547.978 rows=594 loops=3)
                                                               Hash Cond: (mi.info_type_id = it1.id)
                                                               ->  Parallel Seq Scan on movie_info mi  (cost=0.00..270161.12 rows=119 width=50) (actual time=145.145..547.683 rows=594 loops=3)
                                                                     Filter: ((info IS NOT NULL) AND ((note)::text ~~ '%internet%'::text) AND (((info)::text ~~ 'USA:% 199%'::text) OR ((info)::text ~~ 'USA:% 200%'::text)))
                                                                     Rows Removed by Filter: 4944646
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.029..0.029 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.017..0.023 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'release dates'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..8.37 rows=1 width=21) (actual time=0.014..0.014 rows=1 loops=1783)
                                                               Index Cond: (id = mi.movie_id)
                                                               Filter: (production_year > 1990)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.58 rows=5 width=12) (actual time=0.012..0.015 rows=2 loops=1782)
                                                         Index Cond: (movie_id = t.id)
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=2884)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((country_code)::text = '[us]'::text)
                                                   Rows Removed by Filter: 0
                                       ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=2647)
                                             Index Cond: (id = mc.company_type_id)
                                             Heap Fetches: 2647
                                 ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.34 rows=47 width=8) (actual time=0.006..0.007 rows=3 loops=2647)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=7964)
                                 Index Cond: (id = mk.keyword_id)
                                 Heap Fetches: 7964
                     ->  Index Only Scan using movie_id_aka_title on aka_title at  (cost=0.42..0.48 rows=3 width=4) (actual time=0.001..0.002 rows=0 loops=7964)
                           Index Cond: (movie_id = mk.movie_id)
                           Heap Fetches: 2271
 Planning Time: 14.971 ms
 Execution Time: 600.456 ms
(46 rows)

SET
                                                                                               QUERY PLAN                                                                                               
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=241312.72..241312.73 rows=1 width=64) (actual time=666.810..666.810 rows=1 loops=1)
   ->  Gather  (cost=241312.50..241312.71 rows=2 width=64) (actual time=666.683..673.044 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=240312.50..240312.51 rows=1 width=64) (actual time=663.964..663.965 rows=1 loops=3)
               ->  Nested Loop  (cost=6.07..240304.29 rows=1642 width=38) (actual time=139.989..663.373 rows=3782 loops=3)
                     Join Filter: (t.id = at.movie_id)
                     ->  Nested Loop  (cost=5.65..239970.15 rows=644 width=33) (actual time=135.194..649.064 rows=8521 loops=3)
                           ->  Nested Loop  (cost=5.23..239687.65 rows=644 width=37) (actual time=135.156..628.591 rows=8521 loops=3)
                                 ->  Hash Join  (cost=4.80..239595.35 rows=51 width=29) (actual time=135.069..610.161 rows=3286 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Nested Loop  (cost=3.71..239593.98 rows=51 width=33) (actual time=134.987..609.250 rows=3286 loops=3)
                                             ->  Nested Loop  (cost=3.29..239532.04 rows=139 width=37) (actual time=134.957..588.624 rows=4792 loops=3)
                                                   ->  Nested Loop  (cost=2.86..239514.48 rows=28 width=25) (actual time=134.866..554.176 rows=3554 loops=3)
                                                         ->  Hash Join  (cost=2.43..239268.23 rows=40 width=4) (actual time=134.828..518.910 rows=3560 loops=3)
                                                               Hash Cond: (mi.info_type_id = it1.id)
                                                               ->  Parallel Seq Scan on movie_info mi  (cost=0.00..239253.38 rows=4567 width=8) (actual time=22.702..517.987 rows=3603 loops=3)
                                                                     Filter: ((note)::text ~~ '%internet%'::text)
                                                                     Rows Removed by Filter: 4941637
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.028..0.028 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.016..0.023 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'release dates'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..6.16 rows=1 width=21) (actual time=0.009..0.009 rows=1 loops=10679)
                                                               Index Cond: (id = mi.movie_id)
                                                               Filter: (production_year > 1990)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.58 rows=5 width=12) (actual time=0.008..0.009 rows=1 loops=10662)
                                                         Index Cond: (movie_id = t.id)
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=14377)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((country_code)::text = '[us]'::text)
                                                   Rows Removed by Filter: 0
                                       ->  Hash  (cost=1.04..1.04 rows=4 width=4) (actual time=0.022..0.022 rows=4 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.015..0.016 rows=4 loops=3)
                                 ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.34 rows=47 width=8) (actual time=0.005..0.005 rows=3 loops=9857)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=25564)
                                 Index Cond: (id = mk.keyword_id)
                                 Heap Fetches: 25564
                     ->  Index Scan using movie_id_aka_title on aka_title at  (cost=0.42..0.48 rows=3 width=25) (actual time=0.001..0.001 rows=0 loops=25564)
                           Index Cond: (movie_id = mk.movie_id)
 Planning Time: 15.138 ms
 Execution Time: 673.300 ms
(46 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3786.91..3786.92 rows=1 width=64) (actual time=268.826..268.826 rows=1 loops=1)
   ->  Nested Loop  (cost=9.45..3786.52 rows=79 width=33) (actual time=16.762..268.746 rows=385 loops=1)
         Join Filter: (n.id = an.person_id)
         ->  Nested Loop  (cost=9.02..3770.95 rows=32 width=25) (actual time=16.731..266.491 rows=323 loops=1)
               ->  Nested Loop  (cost=8.59..3756.39 rows=32 width=21) (actual time=16.701..263.799 rows=323 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=8.03..3752.42 rows=2 width=29) (actual time=16.670..262.431 rows=25 loops=1)
                           ->  Nested Loop  (cost=7.61..3750.19 rows=5 width=33) (actual time=16.478..262.079 rows=54 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.18..3749.59 rows=1 width=25) (actual time=13.721..261.395 rows=146 loops=1)
                                       ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.650..76.222 rows=41840 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.644..11.763 rows=1 loops=1)
                                                   Filter: ((keyword)::text = 'character-name-in-title'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.002..60.087 rows=41840 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=11541
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=3.964..3.964 rows=41840 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.004..0.004 rows=0 loops=41840)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: ((episode_nr >= 50) AND (episode_nr < 100))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.004..0.004 rows=0 loops=146)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.006..0.006 rows=0 loops=54)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.013..0.052 rows=13 loops=25)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=323)
                     Index Cond: (id = ci.person_id)
                     Heap Fetches: 323
         ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.46 rows=2 width=20) (actual time=0.006..0.007 rows=1 loops=323)
               Index Cond: (person_id = ci.person_id)
 Planning Time: 8.373 ms
 Execution Time: 269.070 ms
(38 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=5116.99..5117.00 rows=1 width=64) (actual time=21521.546..21521.546 rows=1 loops=1)
   ->  Nested Loop  (cost=9.45..5102.20 rows=2957 width=33) (actual time=7.288..20970.906 rows=3710592 loops=1)
         Join Filter: (n.id = an.person_id)
         ->  Nested Loop  (cost=9.02..4515.45 rows=1206 width=25) (actual time=7.256..13394.812 rows=2832555 loops=1)
               ->  Nested Loop  (cost=8.59..3966.84 rows=1206 width=21) (actual time=7.224..4724.893 rows=2832555 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=8.03..3845.67 rows=61 width=29) (actual time=6.827..1130.449 rows=68316 loops=1)
                           ->  Nested Loop  (cost=7.61..3769.92 rows=170 width=33) (actual time=6.771..528.383 rows=148552 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.18..3749.42 rows=34 width=25) (actual time=6.720..309.711 rows=41840 loops=1)
                                       ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.703..85.224 rows=41840 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.661..11.651 rows=1 loops=1)
                                                   Filter: ((keyword)::text = 'character-name-in-title'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.039..66.203 rows=41840 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=11541
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=3.982..3.982 rows=41840 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.005..0.005 rows=1 loops=41840)
                                             Index Cond: (id = mk.movie_id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.003..0.004 rows=4 loops=41840)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=148552)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.004..0.046 rows=41 loops=68316)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=2832555)
                     Index Cond: (id = ci.person_id)
                     Heap Fetches: 2832555
         ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.46 rows=2 width=20) (actual time=0.002..0.002 rows=1 loops=2832555)
               Index Cond: (person_id = ci.person_id)
 Planning Time: 8.337 ms
 Execution Time: 21521.827 ms
(36 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4258.35..4258.36 rows=1 width=64) (actual time=1835.078..1835.079 rows=1 loops=1)
   ->  Nested Loop  (cost=9.45..4252.86 rows=1097 width=33) (actual time=7.337..1786.271 rows=319932 loops=1)
         Join Filter: (n.id = an.person_id)
         ->  Nested Loop  (cost=9.02..4034.90 rows=448 width=25) (actual time=7.310..1192.891 rows=221609 loops=1)
               ->  Nested Loop  (cost=8.59..3831.10 rows=448 width=21) (actual time=7.274..558.167 rows=221609 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=8.03..3785.41 rows=23 width=29) (actual time=7.248..276.468 rows=8538 loops=1)
                           ->  Nested Loop  (cost=7.61..3757.34 rows=63 width=33) (actual time=6.869..247.524 rows=11406 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.18..3749.50 rows=13 width=25) (actual time=6.785..222.549 rows=6926 loops=1)
                                       ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.767..68.998 rows=41840 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.678..11.753 rows=1 loops=1)
                                                   Filter: ((keyword)::text = 'character-name-in-title'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.085..52.454 rows=41840 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=11541
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=4.022..4.022 rows=41840 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.003..0.003 rows=0 loops=41840)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: (episode_nr < 100)
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.002..0.003 rows=2 loops=6926)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=11406)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.004..0.029 rows=26 loops=8538)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=221609)
                     Index Cond: (id = ci.person_id)
                     Heap Fetches: 221609
         ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.46 rows=2 width=20) (actual time=0.002..0.002 rows=1 loops=221609)
               Index Cond: (person_id = ci.person_id)
 Planning Time: 8.296 ms
 Execution Time: 1835.329 ms
(38 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4117.25..4117.26 rows=1 width=64) (actual time=1487.890..1487.890 rows=1 loops=1)
   ->  Nested Loop  (cost=9.45..4113.26 rows=798 width=33) (actual time=7.249..1450.089 rows=249455 loops=1)
         Join Filter: (n.id = an.person_id)
         ->  Nested Loop  (cost=9.02..3955.14 rows=325 width=25) (actual time=7.220..984.078 rows=169273 loops=1)
               ->  Nested Loop  (cost=8.59..3807.29 rows=325 width=21) (actual time=7.185..488.940 rows=169273 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=8.03..3775.51 rows=16 width=29) (actual time=7.156..266.767 rows=6766 loops=1)
                           ->  Nested Loop  (cost=7.61..3755.01 rows=46 width=33) (actual time=6.802..244.576 rows=8661 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.18..3749.59 rows=9 width=25) (actual time=6.719..224.493 rows=5385 loops=1)
                                       ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.700..69.043 rows=41840 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.655..11.744 rows=1 loops=1)
                                                   Filter: ((keyword)::text = 'character-name-in-title'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.042..52.692 rows=41840 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=11541
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=3.998..3.998 rows=41840 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.004..0.004 rows=0 loops=41840)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: ((episode_nr >= 5) AND (episode_nr < 100))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.002..0.003 rows=2 loops=5385)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=8661)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.004..0.029 rows=25 loops=6766)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=169273)
                     Index Cond: (id = ci.person_id)
                     Heap Fetches: 169273
         ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.46 rows=2 width=20) (actual time=0.002..0.002 rows=1 loops=169273)
               Index Cond: (person_id = ci.person_id)
 Planning Time: 8.487 ms
 Execution Time: 1488.138 ms
(38 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4518.95..4518.96 rows=1 width=64) (actual time=12736.416..12736.416 rows=1 loops=1)
   ->  Nested Loop  (cost=9.02..4518.46 rows=97 width=15) (actual time=7.329..12701.009 rows=258289 loops=1)
         ->  Nested Loop  (cost=8.59..3966.84 rows=1206 width=4) (actual time=7.266..4467.850 rows=2832555 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=8.03..3845.67 rows=61 width=12) (actual time=6.870..1050.697 rows=68316 loops=1)
                     ->  Nested Loop  (cost=7.61..3769.92 rows=170 width=16) (actual time=6.804..500.868 rows=148552 loops=1)
                           Join Filter: (t.id = mc.movie_id)
                           ->  Nested Loop  (cost=7.18..3749.42 rows=34 width=8) (actual time=6.749..292.241 rows=41840 loops=1)
                                 ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.729..81.654 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.666..11.822 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.057..63.010 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=3.992..3.992 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=41840)
                                       Index Cond: (id = mk.movie_id)
                                       Heap Fetches: 41840
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.003..0.004 rows=4 loops=41840)
                                 Index Cond: (movie_id = mk.movie_id)
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=148552)
                           Index Cond: (id = mc.company_id)
                           Filter: ((country_code)::text = '[us]'::text)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.004..0.044 rows=41 loops=68316)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.003..0.003 rows=0 loops=2832555)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ 'B%'::text)
               Rows Removed by Filter: 1
 Planning Time: 5.261 ms
 Execution Time: 12736.646 ms
(34 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4395.31..4395.32 rows=1 width=64) (actual time=9151.136..9151.136 rows=1 loops=1)
   ->  Nested Loop  (cost=9.02..4395.14 rows=33 width=15) (actual time=13.496..9143.897 rows=52306 loops=1)
         ->  Nested Loop  (cost=8.60..4380.52 rows=33 width=19) (actual time=13.480..8958.166 rows=52306 loops=1)
               ->  Nested Loop  (cost=8.17..4373.10 rows=13 width=27) (actual time=13.455..8899.416 rows=6642 loops=1)
                     ->  Nested Loop  (cost=7.74..4367.22 rows=13 width=23) (actual time=13.439..8858.006 rows=6642 loops=1)
                           ->  Nested Loop  (cost=7.31..3797.31 rows=1246 width=12) (actual time=6.847..3106.931 rows=1038393 loops=1)
                                 ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.821..79.216 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.686..11.744 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.131..60.205 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=4.065..4.065 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.006..0.069 rows=25 loops=41840)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.005..0.005 rows=0 loops=1038393)
                                 Index Cond: (id = ci.person_id)
                                 Filter: ((name)::text ~~ 'Z%'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.45 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=6642)
                           Index Cond: (id = ci.movie_id)
                           Heap Fetches: 6642
               ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.52 rows=5 width=8) (actual time=0.005..0.007 rows=8 loops=6642)
                     Index Cond: (movie_id = ci.movie_id)
         ->  Index Only Scan using company_name_pkey on company_name cn  (cost=0.42..0.44 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=52306)
               Index Cond: (id = mc.company_id)
               Heap Fetches: 52306
 Planning Time: 5.312 ms
 Execution Time: 9151.407 ms
(31 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4368.70..4368.71 rows=1 width=64) (actual time=8796.052..8796.052 rows=1 loops=1)
   ->  Nested Loop  (cost=9.02..4368.69 rows=1 width=15) (actual time=94.675..8795.628 rows=1918 loops=1)
         ->  Nested Loop  (cost=8.59..4368.24 rows=1 width=27) (actual time=94.653..8790.335 rows=1918 loops=1)
               ->  Nested Loop  (cost=8.17..4367.80 rows=1 width=31) (actual time=94.632..8779.404 rows=1918 loops=1)
                     ->  Nested Loop  (cost=7.74..4367.23 rows=1 width=23) (actual time=94.616..8775.763 rows=250 loops=1)
                           ->  Nested Loop  (cost=7.31..3797.31 rows=1246 width=12) (actual time=6.674..3084.155 rows=1038393 loops=1)
                                 ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.649..78.851 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.644..11.651 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.000..59.677 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=3.938..3.938 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.006..0.068 rows=25 loops=41840)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.005..0.005 rows=0 loops=1038393)
                                 Index Cond: (id = ci.person_id)
                                 Filter: ((name)::text ~~ 'X%'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.52 rows=5 width=8) (actual time=0.009..0.013 rows=8 loops=250)
                           Index Cond: (movie_id = ci.movie_id)
               ->  Index Only Scan using company_name_pkey on company_name cn  (cost=0.42..0.44 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=1918)
                     Index Cond: (id = mc.company_id)
                     Heap Fetches: 1918
         ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.45 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1918)
               Index Cond: (id = ci.movie_id)
               Heap Fetches: 1918
 Planning Time: 5.232 ms
 Execution Time: 8796.278 ms
(31 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4368.69..4368.70 rows=1 width=32) (actual time=8980.106..8980.106 rows=1 loops=1)
   ->  Nested Loop  (cost=9.02..4368.69 rows=1 width=15) (actual time=59.149..8978.165 rows=11538 loops=1)
         ->  Nested Loop  (cost=8.59..4368.24 rows=1 width=27) (actual time=59.123..8947.425 rows=11538 loops=1)
               ->  Nested Loop  (cost=8.17..4367.80 rows=1 width=31) (actual time=59.102..8890.487 rows=11538 loops=1)
                     ->  Nested Loop  (cost=7.74..4367.23 rows=1 width=23) (actual time=59.081..8870.103 rows=1972 loops=1)
                           ->  Nested Loop  (cost=7.31..3797.31 rows=1246 width=12) (actual time=6.705..3093.949 rows=1038393 loops=1)
                                 ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.679..79.137 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.655..11.739 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.021..60.131 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=3.968..3.968 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.006..0.068 rows=25 loops=41840)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.005..0.005 rows=0 loops=1038393)
                                 Index Cond: (id = ci.person_id)
                                 Filter: ((name)::text ~~ '%Bert%'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.52 rows=5 width=8) (actual time=0.006..0.009 rows=6 loops=1972)
                           Index Cond: (movie_id = ci.movie_id)
               ->  Index Only Scan using company_name_pkey on company_name cn  (cost=0.42..0.44 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=11538)
                     Index Cond: (id = mc.company_id)
                     Heap Fetches: 11538
         ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.45 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=11538)
               Index Cond: (id = ci.movie_id)
               Heap Fetches: 11538
 Planning Time: 5.297 ms
 Execution Time: 8980.331 ms
(31 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4518.46..4518.47 rows=1 width=32) (actual time=12746.769..12746.769 rows=1 loops=1)
   ->  Nested Loop  (cost=9.02..4515.45 rows=1206 width=15) (actual time=7.176..12421.352 rows=2832555 loops=1)
         ->  Nested Loop  (cost=8.59..3966.84 rows=1206 width=4) (actual time=7.140..4512.159 rows=2832555 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=8.03..3845.67 rows=61 width=12) (actual time=6.754..1044.331 rows=68316 loops=1)
                     ->  Nested Loop  (cost=7.61..3769.92 rows=170 width=16) (actual time=6.696..498.183 rows=148552 loops=1)
                           Join Filter: (t.id = mc.movie_id)
                           ->  Nested Loop  (cost=7.18..3749.42 rows=34 width=8) (actual time=6.655..290.885 rows=41840 loops=1)
                                 ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.638..81.389 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.648..11.814 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=5.987..62.735 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=3.928..3.928 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=41840)
                                       Index Cond: (id = mk.movie_id)
                                       Heap Fetches: 41840
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.003..0.004 rows=4 loops=41840)
                                 Index Cond: (movie_id = mk.movie_id)
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=148552)
                           Index Cond: (id = mc.company_id)
                           Filter: ((country_code)::text = '[us]'::text)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.004..0.044 rows=41 loops=68316)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=19) (actual time=0.003..0.003 rows=1 loops=2832555)
               Index Cond: (id = ci.person_id)
 Planning Time: 5.243 ms
 Execution Time: 12746.997 ms
(32 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4629.56..4629.57 rows=1 width=32) (actual time=12101.105..12101.106 rows=1 loops=1)
   ->  Nested Loop  (cost=9.02..4628.64 rows=368 width=15) (actual time=8.624..11987.167 rows=1113120 loops=1)
         ->  Nested Loop  (cost=8.60..4465.59 rows=368 width=19) (actual time=8.599..10045.098 rows=1113120 loops=1)
               ->  Nested Loop  (cost=8.17..4386.88 rows=138 width=27) (actual time=6.837..9399.470 rows=149494 loops=1)
                     ->  Nested Loop  (cost=7.74..3816.96 rows=1246 width=16) (actual time=6.809..3445.899 rows=1038393 loops=1)
                           Join Filter: (t.id = ci.movie_id)
                           ->  Nested Loop  (cost=7.18..3749.42 rows=34 width=8) (actual time=6.785..293.049 rows=41840 loops=1)
                                 ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.766..81.617 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.668..11.679 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.095..62.421 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=4.048..4.048 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=41840)
                                       Index Cond: (id = mk.movie_id)
                                       Heap Fetches: 41840
                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.006..0.070 rows=25 loops=41840)
                                 Index Cond: (movie_id = mk.movie_id)
                     ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.006..0.006 rows=0 loops=1038393)
                           Index Cond: (id = ci.person_id)
                           Filter: ((name)::text ~~ '%B%'::text)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.52 rows=5 width=8) (actual time=0.002..0.003 rows=7 loops=149494)
                     Index Cond: (movie_id = ci.movie_id)
         ->  Index Only Scan using company_name_pkey on company_name cn  (cost=0.42..0.44 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1113120)
               Index Cond: (id = mc.company_id)
               Heap Fetches: 1113120
 Planning Time: 5.327 ms
 Execution Time: 12101.335 ms
(32 rows)

SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=111123.79..111123.80 rows=1 width=96) (actual time=4611.764..4611.764 rows=1 loops=1)
   ->  Nested Loop  (cost=1006.71..111123.78 rows=1 width=65) (actual time=260.849..4611.440 rows=410 loops=1)
         ->  Gather  (cost=1006.28..111123.32 rows=1 width=60) (actual time=260.809..4611.311 rows=410 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Nested Loop  (cost=6.28..110123.22 rows=1 width=60) (actual time=144.226..4607.308 rows=137 loops=3)
                     ->  Nested Loop  (cost=5.85..108160.12 rows=3320 width=64) (actual time=1.141..4268.335 rows=35780 loops=3)
                           ->  Hash Join  (cost=5.29..74077.91 rows=1448 width=56) (actual time=0.515..1907.675 rows=15144 loops=3)
                                 Hash Cond: (mi.info_type_id = it1.id)
                                 ->  Nested Loop  (cost=2.86..73629.77 rows=163660 width=60) (actual time=0.089..1758.646 rows=2310111 loops=3)
                                       ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=10) (actual time=0.046..116.539 rows=153308 loops=3)
                                             Hash Cond: (mi_idx.info_type_id = it2.id)
                                             ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=14) (actual time=0.017..44.870 rows=460012 loops=3)
                                             ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.013..0.013 rows=1 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=3)
                                                         Filter: ((info)::text = 'votes'::text)
                                                         Rows Removed by Filter: 112
                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..11.05 rows=42 width=50) (actual time=0.003..0.009 rows=15 loops=459925)
                                             Index Cond: (movie_id = mi_idx.movie_id)
                                 ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.023..0.023 rows=1 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.018..0.019 rows=1 loops=3)
                                             Filter: ((info)::text = 'budget'::text)
                                             Rows Removed by Filter: 112
                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..23.52 rows=2 width=8) (actual time=0.091..0.155 rows=2 loops=45431)
                                 Index Cond: (movie_id = mi.movie_id)
                                 Filter: ((note)::text = ANY ('{(producer),"(executive producer)"}'::text[]))
                                 Rows Removed by Filter: 38
                     ->  Index Scan using name_pkey on name n  (cost=0.43..0.59 rows=1 width=4) (actual time=0.009..0.009 rows=0 loops=107339)
                           Index Cond: (id = ci.person_id)
                           Filter: (((name)::text ~~ '%Tim%'::text) AND ((gender)::text = 'm'::text))
                           Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.46 rows=1 width=21) (actual time=0.010..0.010 rows=1 loops=410)
               Index Cond: (id = mi.movie_id)
 Planning Time: 4.928 ms
 Execution Time: 4616.372 ms
(37 rows)

SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=17505.24..17505.25 rows=1 width=96) (actual time=190.837..190.837 rows=1 loops=1)
   ->  Nested Loop  (cost=1004.43..17505.23 rows=1 width=65) (actual time=102.904..190.816 rows=11 loops=1)
         ->  Nested Loop  (cost=1004.00..17504.55 rows=1 width=69) (actual time=32.320..187.840 rows=268 loops=1)
               ->  Gather  (cost=1003.43..17479.79 rows=1 width=77) (actual time=6.282..140.932 rows=358 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Nested Loop  (cost=3.43..16479.69 rows=1 width=77) (actual time=15.283..169.682 rows=119 loops=3)
                           ->  Nested Loop  (cost=3.29..16478.37 rows=8 width=81) (actual time=15.275..169.461 rows=119 loops=3)
                                 ->  Nested Loop  (cost=2.86..15808.49 rows=58 width=31) (actual time=0.805..105.910 rows=2051 loops=3)
                                       ->  Hash Join  (cost=2.43..15182.64 rows=187 width=10) (actual time=0.108..56.172 rows=5283 loops=3)
                                             Hash Cond: (mi_idx.info_type_id = it2.id)
                                             ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..15122.68 rows=21125 width=14) (actual time=0.025..54.112 rows=17543 loops=3)
                                                   Filter: ((info)::text > '8.0'::text)
                                                   Rows Removed by Filter: 442469
                                             ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.021..0.022 rows=1 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.015..0.017 rows=1 loops=3)
                                                         Filter: ((info)::text = 'rating'::text)
                                                         Rows Removed by Filter: 112
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..3.35 rows=1 width=21) (actual time=0.009..0.009 rows=0 loops=15849)
                                             Index Cond: (id = mi_idx.movie_id)
                                             Filter: ((production_year >= 2008) AND (production_year <= 2014))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..11.54 rows=1 width=50) (actual time=0.031..0.031 rows=0 loops=6152)
                                       Index Cond: (movie_id = t.id)
                                       Filter: ((note IS NULL) AND ((info)::text = ANY ('{Horror,Thriller}'::text[])))
                                       Rows Removed by Filter: 18
                           ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=358)
                                 Index Cond: (id = mi.info_type_id)
                                 Filter: ((info)::text = 'genres'::text)
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..24.75 rows=1 width=8) (actual time=0.113..0.146 rows=1 loops=358)
                     Index Cond: (movie_id = t.id)
                     Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                     Rows Removed by Filter: 34
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.68 rows=1 width=4) (actual time=0.011..0.011 rows=0 loops=268)
               Index Cond: (id = ci.person_id)
               Filter: ((gender IS NOT NULL) AND ((gender)::text = 'f'::text))
               Rows Removed by Filter: 1
 Planning Time: 4.890 ms
 Execution Time: 196.513 ms
(40 rows)

SET
                                                                                          QUERY PLAN                                                                                          
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=74638.17..74638.18 rows=1 width=96) (actual time=5852.932..5852.932 rows=1 loops=1)
   ->  Gather  (cost=74637.94..74638.15 rows=2 width=96) (actual time=5852.685..5857.258 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=73637.94..73637.95 rows=1 width=96) (actual time=5849.885..5849.885 rows=1 loops=3)
               ->  Nested Loop  (cost=6.71..73637.87 rows=10 width=65) (actual time=19.408..5845.925 rows=9358 loops=3)
                     ->  Nested Loop  (cost=6.28..73620.90 rows=25 width=69) (actual time=11.405..5696.868 rows=18052 loops=3)
                           ->  Nested Loop  (cost=5.72..73165.64 rows=19 width=77) (actual time=0.592..2012.710 rows=34172 loops=3)
                                 Join Filter: (mi.movie_id = t.id)
                                 ->  Hash Join  (cost=5.29..73154.54 rows=19 width=56) (actual time=0.553..1835.311 rows=34172 loops=3)
                                       Hash Cond: (mi.info_type_id = it1.id)
                                       ->  Nested Loop  (cost=2.86..73146.32 rows=2128 width=60) (actual time=0.470..1826.400 rows=34964 loops=3)
                                             ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=10) (actual time=0.049..117.359 rows=153308 loops=3)
                                                   Hash Cond: (mi_idx.info_type_id = it2.id)
                                                   ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=14) (actual time=0.020..45.427 rows=460012 loops=3)
                                                   ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.013..0.013 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=3)
                                                               Filter: ((info)::text = 'votes'::text)
                                                               Rows Removed by Filter: 112
                                             ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..11.37 rows=1 width=50) (actual time=0.011..0.011 rows=0 loops=459925)
                                                   Index Cond: (movie_id = mi_idx.movie_id)
                                                   Filter: ((info)::text = ANY ('{Horror,Action,Sci-Fi,Thriller,Crime,War}'::text[]))
                                                   Rows Removed by Filter: 15
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.027..0.027 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.015..0.023 rows=1 loops=3)
                                                   Filter: ((info)::text = 'genres'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=21) (actual time=0.005..0.005 rows=1 loops=102516)
                                       Index Cond: (id = mi_idx.movie_id)
                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..23.95 rows=1 width=8) (actual time=0.092..0.107 rows=1 loops=102516)
                                 Index Cond: (movie_id = t.id)
                                 Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                 Rows Removed by Filter: 39
                     ->  Index Scan using name_pkey on name n  (cost=0.43..0.68 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=54155)
                           Index Cond: (id = ci.person_id)
                           Filter: ((gender)::text = 'm'::text)
                           Rows Removed by Filter: 0
 Planning Time: 4.871 ms
 Execution Time: 5857.460 ms
(41 rows)

SET
                                                                                                QUERY PLAN                                                                                                 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=85372.10..85372.11 rows=1 width=64) (actual time=276.417..276.417 rows=1 loops=1)
   ->  Nested Loop  (cost=1004.44..85372.09 rows=1 width=32) (actual time=111.137..276.369 rows=184 loops=1)
         ->  Nested Loop  (cost=1004.30..85371.91 rows=1 width=36) (actual time=111.125..276.134 rows=184 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=1003.86..85344.51 rows=1 width=44) (actual time=111.084..270.101 rows=77 loops=1)
                     ->  Nested Loop  (cost=1003.44..85343.31 rows=1 width=48) (actual time=111.061..269.569 rows=79 loops=1)
                           Join Filter: (t.id = mc.movie_id)
                           ->  Nested Loop  (cost=1003.01..85340.60 rows=1 width=40) (actual time=110.790..268.287 rows=102 loops=1)
                                 ->  Gather  (cost=1002.58..85339.18 rows=1 width=44) (actual time=110.265..267.768 rows=115 loops=1)
                                       Workers Planned: 2
                                       Workers Launched: 2
                                       ->  Nested Loop  (cost=2.58..84339.08 rows=1 width=44) (actual time=109.803..269.777 rows=38 loops=3)
                                             ->  Hash Join  (cost=2.15..84336.29 rows=2 width=23) (actual time=107.188..268.353 rows=142 loops=3)
                                                   Hash Cond: (ci.role_id = rt.id)
                                                   ->  Nested Loop  (cost=0.99..84335.05 rows=21 width=27) (actual time=107.080..268.209 rows=142 loops=3)
                                                         Join Filter: (n.id = ci.person_id)
                                                         ->  Nested Loop  (cost=0.42..82155.29 rows=9 width=23) (actual time=104.097..257.175 rows=519 loops=3)
                                                               ->  Parallel Seq Scan on name n  (cost=0.00..81659.82 rows=40 width=19) (actual time=103.544..246.620 rows=2256 loops=3)
                                                                     Filter: (((name)::text ~~ '%Ang%'::text) AND ((gender)::text = 'f'::text))
                                                                     Rows Removed by Filter: 1386908
                                                               ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..12.37 rows=2 width=4) (actual time=0.004..0.004 rows=0 loops=6768)
                                                                     Index Cond: (person_id = n.id)
                                                                     Heap Fetches: 1558
                                                         ->  Index Scan using person_id_cast_info on cast_info ci  (cost=0.56..242.03 rows=13 width=16) (actual time=0.020..0.021 rows=0 loops=1558)
                                                               Index Cond: (person_id = an.person_id)
                                                               Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                               Rows Removed by Filter: 44
                                                   ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.025..0.025 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.017..0.018 rows=1 loops=3)
                                                               Filter: ((role)::text = 'actress'::text)
                                                               Rows Removed by Filter: 11
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..1.40 rows=1 width=21) (actual time=0.010..0.010 rows=0 loops=425)
                                                   Index Cond: (id = ci.movie_id)
                                                   Filter: ((production_year >= 2005) AND (production_year <= 2009))
                                                   Rows Removed by Filter: 1
                                 ->  Index Only Scan using char_name_pkey on char_name chn  (cost=0.43..1.42 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=115)
                                       Index Cond: (id = ci.person_role_id)
                                       Heap Fetches: 102
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.71 rows=1 width=8) (actual time=0.010..0.012 rows=1 loops=102)
                                 Index Cond: (movie_id = ci.movie_id)
                                 Filter: ((note IS NOT NULL) AND (((note)::text ~~ '%(USA)%'::text) OR ((note)::text ~~ '%(worldwide)%'::text)))
                                 Rows Removed by Filter: 6
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.20 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=79)
                           Index Cond: (id = mc.company_id)
                           Filter: ((country_code)::text = '[us]'::text)
                           Rows Removed by Filter: 0
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..27.38 rows=1 width=8) (actual time=0.021..0.078 rows=2 loops=77)
                     Index Cond: (movie_id = ci.movie_id)
                     Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%200%'::text) OR ((info)::text ~~ 'USA:%200%'::text)))
                     Rows Removed by Filter: 166
         ->  Index Scan using info_type_pkey on info_type it  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=184)
               Index Cond: (id = mi.info_type_id)
               Filter: ((info)::text = 'release dates'::text)
 Planning Time: 24.678 ms
 Execution Time: 276.995 ms
(56 rows)

SET
                                                                                                   QUERY PLAN                                                                                                   
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=55721.55..55721.56 rows=1 width=64) (actual time=120.001..120.001 rows=1 loops=1)
   ->  Nested Loop  (cost=1003.41..55721.55 rows=1 width=32) (actual time=101.611..119.986 rows=15 loops=1)
         ->  Nested Loop  (cost=1003.28..55721.37 rows=1 width=36) (actual time=101.585..119.937 rows=15 loops=1)
               Join Filter: (ci.person_id = n.id)
               ->  Nested Loop  (cost=1002.85..55719.84 rows=1 width=29) (actual time=91.992..118.825 rows=275 loops=1)
                     ->  Nested Loop  (cost=1002.70..55719.64 rows=1 width=33) (actual time=91.980..118.471 rows=275 loops=1)
                           Join Filter: (t.id = mi.movie_id)
                           ->  Nested Loop  (cost=1002.27..55692.13 rows=1 width=41) (actual time=91.918..99.263 rows=275 loops=1)
                                 ->  Nested Loop  (cost=1001.85..55690.86 rows=1 width=45) (actual time=91.892..98.671 rows=275 loops=1)
                                       ->  Nested Loop  (cost=1001.42..55689.20 rows=1 width=41) (actual time=91.861..97.689 rows=99 loops=1)
                                             ->  Nested Loop  (cost=1001.00..55687.75 rows=1 width=45) (actual time=91.826..96.611 rows=100 loops=1)
                                                   Join Filter: (t.id = ci.movie_id)
                                                   ->  Gather  (cost=1000.43..55645.55 rows=1 width=29) (actual time=91.780..95.845 rows=4 loops=1)
                                                         Workers Planned: 2
                                                         Workers Launched: 2
                                                         ->  Nested Loop  (cost=0.43..54645.45 rows=1 width=29) (actual time=98.704..109.235 rows=1 loops=3)
                                                               ->  Parallel Seq Scan on title t  (cost=0.00..54433.61 rows=10 width=21) (actual time=36.107..109.135 rows=2 loops=3)
                                                                     Filter: ((production_year >= 2007) AND (production_year <= 2008) AND ((title)::text ~~ '%Kung%Fu%Panda%'::text))
                                                                     Rows Removed by Filter: 842768
                                                               ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..21.17 rows=1 width=8) (actual time=0.037..0.040 rows=1 loops=7)
                                                                     Index Cond: (movie_id = t.id)
                                                                     Filter: (((note)::text ~~ '%(200%)%'::text) AND (((note)::text ~~ '%(USA)%'::text) OR ((note)::text ~~ '%(worldwide)%'::text)))
                                                                     Rows Removed by Filter: 6
                                                   ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..42.20 rows=1 width=16) (actual time=0.017..0.500 rows=25 loops=4)
                                                         Index Cond: (movie_id = mc.movie_id)
                                                         Filter: ((note)::text = '(voice)'::text)
                                                         Rows Removed by Filter: 127
                                             ->  Index Only Scan using char_name_pkey on char_name chn  (cost=0.43..1.45 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=100)
                                                   Index Cond: (id = ci.person_role_id)
                                                   Heap Fetches: 99
                                       ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..1.64 rows=2 width=4) (actual time=0.007..0.009 rows=3 loops=99)
                                             Index Cond: (person_id = ci.person_id)
                                             Heap Fetches: 275
                                 ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.27 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=275)
                                       Index Cond: (id = mc.company_id)
                                       Filter: ((country_code)::text = '[us]'::text)
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..27.50 rows=1 width=8) (actual time=0.011..0.069 rows=1 loops=275)
                                 Index Cond: (movie_id = ci.movie_id)
                                 Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%2007%'::text) OR ((info)::text ~~ 'USA:%2008%'::text)))
                                 Rows Removed by Filter: 295
                     ->  Index Scan using info_type_pkey on info_type it  (cost=0.14..0.17 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=275)
                           Index Cond: (id = mi.info_type_id)
                           Filter: ((info)::text = 'release dates'::text)
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.53 rows=1 width=19) (actual time=0.004..0.004 rows=0 loops=275)
                     Index Cond: (id = an.person_id)
                     Filter: (((name)::text ~~ '%Angel%'::text) AND ((gender)::text = 'f'::text))
                     Rows Removed by Filter: 1
         ->  Index Scan using role_type_pkey on role_type rt  (cost=0.14..0.16 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=15)
               Index Cond: (id = ci.role_id)
               Filter: ((role)::text = 'actress'::text)
 Planning Time: 23.288 ms
 Execution Time: 121.496 ms
(52 rows)

SET
                                                                                                  QUERY PLAN                                                                                                  
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=222418.16..222418.17 rows=1 width=64) (actual time=1742.027..1742.027 rows=1 loops=1)
   ->  Nested Loop  (cost=84856.43..222418.15 rows=2 width=32) (actual time=284.129..1741.402 rows=3575 loops=1)
         Join Filter: (n.id = an.person_id)
         ->  Nested Loop  (cost=84856.00..222416.50 rows=1 width=40) (actual time=270.223..1734.754 rows=2632 loops=1)
               ->  Nested Loop  (cost=84855.58..222414.17 rows=2 width=44) (actual time=270.195..1710.068 rows=8585 loops=1)
                     ->  Hash Join  (cost=84855.15..222411.47 rows=1 width=52) (actual time=270.163..1697.873 rows=2129 loops=1)
                           Hash Cond: (mi.info_type_id = it.id)
                           ->  Nested Loop  (cost=84852.73..222408.95 rows=36 width=56) (actual time=270.110..1697.187 rows=2129 loops=1)
                                 ->  Nested Loop  (cost=84852.29..219906.63 rows=92 width=48) (actual time=270.036..1627.065 rows=3349 loops=1)
                                       ->  Nested Loop  (cost=84851.86..219669.76 rows=170 width=27) (actual time=270.003..1589.498 rows=5686 loops=1)
                                             ->  Hash Join  (cost=84851.43..219172.23 rows=351 width=31) (actual time=269.962..1563.643 rows=6552 loops=1)
                                                   Hash Cond: (ci.person_id = n.id)
                                                   ->  Nested Loop  (cost=0.56..134124.20 rows=75106 width=12) (actual time=0.220..1272.486 rows=276166 loops=1)
                                                         ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.014..0.017 rows=1 loops=1)
                                                               Filter: ((role)::text = 'actress'::text)
                                                               Rows Removed by Filter: 11
                                                         ->  Index Scan using role_id_cast_info on cast_info ci  (cost=0.56..133303.71 rows=81934 width=16) (actual time=0.204..1249.068 rows=276166 loops=1)
                                                               Index Cond: (role_id = rt.id)
                                                               Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                               Rows Removed by Filter: 7175807
                                                   ->  Hash  (cost=84607.42..84607.42 rows=19476 width=19) (actual time=264.229..264.229 rows=50011 loops=1)
                                                         Buckets: 65536 (originally 32768)  Batches: 1 (originally 1)  Memory Usage: 3135kB
                                                         ->  Gather  (cost=1000.00..84607.42 rows=19476 width=19) (actual time=106.950..255.403 rows=50011 loops=1)
                                                               Workers Planned: 2
                                                               Workers Launched: 2
                                                               ->  Parallel Seq Scan on name n  (cost=0.00..81659.82 rows=8115 width=19) (actual time=104.924..249.940 rows=16670 loops=3)
                                                                     Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                                                     Rows Removed by Filter: 1372493
                                             ->  Index Only Scan using char_name_pkey on char_name chn  (cost=0.43..1.42 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=6552)
                                                   Index Cond: (id = ci.person_role_id)
                                                   Heap Fetches: 5686
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..1.39 rows=1 width=21) (actual time=0.006..0.006 rows=1 loops=5686)
                                             Index Cond: (id = ci.movie_id)
                                             Filter: (production_year > 2000)
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..27.19 rows=1 width=8) (actual time=0.014..0.021 rows=1 loops=3349)
                                       Index Cond: (movie_id = t.id)
                                       Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%200%'::text) OR ((info)::text ~~ 'USA:%200%'::text)))
                                       Rows Removed by Filter: 15
                           ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.024..0.024 rows=1 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                 ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.010..0.017 rows=1 loops=1)
                                       Filter: ((info)::text = 'release dates'::text)
                                       Rows Removed by Filter: 112
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.65 rows=5 width=8) (actual time=0.004..0.005 rows=4 loops=2129)
                           Index Cond: (movie_id = t.id)
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.16 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=8585)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text = '[us]'::text)
                     Rows Removed by Filter: 1
         ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..1.63 rows=2 width=4) (actual time=0.002..0.002 rows=1 loops=2632)
               Index Cond: (person_id = ci.person_id)
               Heap Fetches: 3575
 Planning Time: 24.236 ms
 Execution Time: 1742.436 ms
(55 rows)

SET
                                                                                                           QUERY PLAN                                                                                                           
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=283172.99..283173.00 rows=1 width=64) (actual time=7203.835..7203.836 rows=1 loops=1)
   ->  Gather  (cost=283172.77..283172.98 rows=2 width=64) (actual time=6412.184..7208.616 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=282172.77..282172.78 rows=1 width=64) (actual time=6770.121..6770.121 rows=1 loops=3)
               ->  Nested Loop  (cost=135435.02..282167.07 rows=1140 width=32) (actual time=2037.456..6691.998 rows=586882 loops=3)
                     ->  Nested Loop  (cost=135434.60..281402.94 rows=465 width=40) (actual time=2037.065..6101.787 rows=262348 loops=3)
                           ->  Nested Loop  (cost=135434.18..279915.09 rows=1278 width=44) (actual time=2036.981..3863.811 rows=1076352 loops=3)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Hash Join  (cost=135433.75..279235.89 rows=255 width=52) (actual time=2036.819..3303.929 rows=113945 loops=3)
                                       Hash Cond: (mi.info_type_id = it.id)
                                       ->  Nested Loop  (cost=135431.32..279154.95 rows=28832 width=56) (actual time=2036.728..3249.168 rows=540998 loops=3)
                                             ->  Nested Loop  (cost=135430.89..226932.18 rows=1906 width=48) (actual time=2036.703..2823.925 rows=53102 loops=3)
                                                   ->  Nested Loop  (cost=135430.46..221350.20 rows=3938 width=52) (actual time=2036.673..2582.862 rows=56088 loops=3)
                                                         ->  Hash Join  (cost=135430.03..195430.35 rows=17020 width=33) (actual time=2036.642..2362.059 rows=56136 loops=3)
                                                               Hash Cond: (t.id = ci.movie_id)
                                                               ->  Parallel Seq Scan on title t  (cost=0.00..49166.29 rows=572932 width=21) (actual time=0.019..120.667 rows=460484 loops=3)
                                                                     Filter: (production_year > 2000)
                                                                     Rows Removed by Filter: 382286
                                                               ->  Hash  (cost=134124.20..134124.20 rows=75106 width=12) (actual time=2035.797..2035.797 rows=276166 loops=3)
                                                                     Buckets: 131072 (originally 131072)  Batches: 4 (originally 2)  Memory Usage: 3984kB
                                                                     ->  Nested Loop  (cost=0.56..134124.20 rows=75106 width=12) (actual time=0.160..1981.695 rows=276166 loops=3)
                                                                           ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.019..0.022 rows=1 loops=3)
                                                                                 Filter: ((role)::text = 'actress'::text)
                                                                                 Rows Removed by Filter: 11
                                                                           ->  Index Scan using role_id_cast_info on cast_info ci  (cost=0.56..133303.71 rows=81934 width=16) (actual time=0.138..1958.545 rows=276166 loops=3)
                                                                                 Index Cond: (role_id = rt.id)
                                                                                 Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                                 Rows Removed by Filter: 7175807
                                                         ->  Index Scan using name_pkey on name n  (cost=0.43..1.52 rows=1 width=19) (actual time=0.004..0.004 rows=1 loops=168407)
                                                               Index Cond: (id = ci.person_id)
                                                               Filter: ((gender)::text = 'f'::text)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Only Scan using char_name_pkey on char_name chn  (cost=0.43..1.42 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=168264)
                                                         Index Cond: (id = ci.person_role_id)
                                                         Heap Fetches: 159307
                                             ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..26.98 rows=42 width=8) (actual time=0.003..0.007 rows=10 loops=159307)
                                                   Index Cond: (movie_id = t.id)
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.026..0.026 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.015..0.022 rows=1 loops=3)
                                                   Filter: ((info)::text = 'release dates'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.60 rows=5 width=8) (actual time=0.002..0.003 rows=9 loops=341836)
                                       Index Cond: (movie_id = mi.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.16 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=3229056)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..1.62 rows=2 width=4) (actual time=0.001..0.002 rows=2 loops=787043)
                           Index Cond: (person_id = n.id)
                           Heap Fetches: 1760645
 Planning Time: 25.368 ms
 Execution Time: 7209.004 ms
(54 rows)

SET
                                                                                                 QUERY PLAN                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=19539.97..19539.98 rows=1 width=68) (actual time=82.473..82.473 rows=1 loops=1)
   ->  Gather  (cost=19539.75..19539.96 rows=2 width=68) (actual time=77.722..83.604 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=18539.75..18539.76 rows=1 width=68) (actual time=75.127..75.127 rows=1 loops=3)
               ->  Nested Loop  (cost=4.35..18539.42 rows=44 width=45) (actual time=70.308..75.107 rows=47 loops=3)
                     Join Filter: (mc.movie_id = t.id)
                     ->  Hash Join  (cost=3.92..18513.70 rows=44 width=32) (actual time=70.279..74.363 rows=47 loops=3)
                           Hash Cond: (mc.company_type_id = ct.id)
                           ->  Nested Loop  (cost=2.86..18511.69 rows=177 width=36) (actual time=70.205..74.277 rows=49 loops=3)
                                 ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=4) (actual time=70.136..70.169 rows=83 loops=3)
                                       Hash Cond: (mi_idx.info_type_id = it.id)
                                       ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=8) (actual time=0.016..37.970 rows=460012 loops=3)
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.020..0.020 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.017..0.018 rows=1 loops=3)
                                                   Filter: ((info)::text = 'top 250 rank'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.63 rows=1 width=32) (actual time=0.048..0.049 rows=1 loops=250)
                                       Index Cond: (movie_id = mi_idx.movie_id)
                                       Filter: (((note)::text !~~ '%(as Metro-Goldwyn-Mayer Pictures)%'::text) AND (((note)::text ~~ '%(co-production)%'::text) OR ((note)::text ~~ '%(presents)%'::text)))
                                       Rows Removed by Filter: 33
                           ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.018..0.018 rows=1 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                 ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.013..0.014 rows=1 loops=3)
                                       Filter: ((kind)::text = 'production companies'::text)
                                       Rows Removed by Filter: 3
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=25) (actual time=0.015..0.015 rows=1 loops=142)
                           Index Cond: (id = mi_idx.movie_id)
 Planning Time: 2.341 ms
 Execution Time: 83.754 ms
(31 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=20131.19..20131.20 rows=1 width=68) (actual time=73.037..73.037 rows=1 loops=1)
   ->  Gather  (cost=20130.96..20131.17 rows=2 width=68) (actual time=72.443..73.797 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=19130.96..19130.97 rows=1 width=68) (actual time=70.267..70.267 rows=1 loops=3)
               ->  Hash Join  (cost=4.35..19124.19 rows=903 width=45) (actual time=70.260..70.261 rows=1 loops=3)
                     Hash Cond: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=3.29..19103.60 rows=3612 width=49) (actual time=70.113..70.189 rows=22 loops=3)
                           Join Filter: (t.id = mc.movie_id)
                           ->  Nested Loop  (cost=2.86..18189.65 rows=1422 width=29) (actual time=70.094..70.123 rows=1 loops=3)
                                 ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=4) (actual time=70.023..70.025 rows=3 loops=3)
                                       Hash Cond: (mi_idx.info_type_id = it.id)
                                       ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=8) (actual time=0.019..37.812 rows=460012 loops=3)
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.018..0.018 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=3)
                                                   Filter: ((info)::text = 'bottom 10 rank'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.58 rows=1 width=25) (actual time=0.029..0.029 rows=0 loops=10)
                                       Index Cond: (id = mi_idx.movie_id)
                                       Filter: ((production_year >= 2005) AND (production_year <= 2010))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.61 rows=3 width=32) (actual time=0.033..0.047 rows=16 loops=4)
                                 Index Cond: (movie_id = mi_idx.movie_id)
                                 Filter: ((note)::text !~~ '%(as Metro-Goldwyn-Mayer Pictures)%'::text)
                                 Rows Removed by Filter: 2
                     ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=3)
                                 Filter: ((kind)::text = 'production companies'::text)
                                 Rows Removed by Filter: 3
 Planning Time: 1.823 ms
 Execution Time: 73.943 ms
(33 rows)

SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=19461.56..19461.57 rows=1 width=68) (actual time=77.804..77.804 rows=1 loops=1)
   ->  Gather  (cost=19461.33..19461.54 rows=2 width=68) (actual time=75.084..79.079 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=18461.33..18461.34 rows=1 width=68) (actual time=72.698..72.698 rows=1 loops=3)
               ->  Nested Loop  (cost=4.35..18461.31 rows=3 width=45) (actual time=71.708..72.692 rows=1 loops=3)
                     Join Filter: (mc.movie_id = t.id)
                     ->  Hash Join  (cost=3.92..18449.57 rows=20 width=32) (actual time=70.730..72.647 rows=8 loops=3)
                           Hash Cond: (mc.company_type_id = ct.id)
                           ->  Nested Loop  (cost=2.86..18448.07 rows=81 width=36) (actual time=70.659..72.574 rows=8 loops=3)
                                 ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=4) (actual time=69.921..69.948 rows=83 loops=3)
                                       Hash Cond: (mi_idx.info_type_id = it.id)
                                       ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=8) (actual time=0.023..37.718 rows=460012 loops=3)
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.018..0.018 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=3)
                                                   Filter: ((info)::text = 'top 250 rank'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.62 rows=1 width=32) (actual time=0.031..0.031 rows=0 loops=250)
                                       Index Cond: (movie_id = mi_idx.movie_id)
                                       Filter: (((note)::text !~~ '%(as Metro-Goldwyn-Mayer Pictures)%'::text) AND ((note)::text ~~ '%(co-production)%'::text))
                                       Rows Removed by Filter: 33
                           ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                 ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=3)
                                       Filter: ((kind)::text = 'production companies'::text)
                                       Rows Removed by Filter: 3
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=25) (actual time=0.005..0.005 rows=0 loops=23)
                           Index Cond: (id = mi_idx.movie_id)
                           Filter: (production_year > 2010)
                           Rows Removed by Filter: 1
 Planning Time: 1.834 ms
 Execution Time: 79.227 ms
(33 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=20988.46..20988.47 rows=1 width=68) (actual time=72.884..72.884 rows=1 loops=1)
   ->  Gather  (cost=20988.24..20988.45 rows=2 width=68) (actual time=72.382..73.710 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=19988.24..19988.25 rows=1 width=68) (actual time=70.226..70.227 rows=1 loops=3)
               ->  Hash Join  (cost=4.35..19975.05 rows=1758 width=45) (actual time=70.208..70.221 rows=1 loops=3)
                     Hash Cond: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=3.29..19935.98 rows=7030 width=49) (actual time=70.060..70.154 rows=26 loops=3)
                           ->  Nested Loop  (cost=2.86..18176.93 rows=2768 width=29) (actual time=70.037..70.082 rows=2 loops=3)
                                 ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=4) (actual time=70.013..70.015 rows=3 loops=3)
                                       Hash Cond: (mi_idx.info_type_id = it.id)
                                       ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=8) (actual time=0.023..37.780 rows=460012 loops=3)
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.019..0.019 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.016..0.017 rows=1 loops=3)
                                                   Filter: ((info)::text = 'bottom 10 rank'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=25) (actual time=0.019..0.019 rows=1 loops=10)
                                       Index Cond: (id = mi_idx.movie_id)
                                       Filter: (production_year > 2000)
                                       Rows Removed by Filter: 0
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.61 rows=3 width=32) (actual time=0.025..0.034 rows=13 loops=6)
                                 Index Cond: (movie_id = t.id)
                                 Filter: ((note)::text !~~ '%(as Metro-Goldwyn-Mayer Pictures)%'::text)
                                 Rows Removed by Filter: 2
                     ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=3)
                                 Filter: ((kind)::text = 'production companies'::text)
                                 Rows Removed by Filter: 3
 Planning Time: 1.788 ms
 Execution Time: 73.863 ms
(32 rows)

SET
                                                                                             QUERY PLAN                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=12310.45..12310.46 rows=1 width=32) (actual time=3436.440..3436.440 rows=1 loops=1)
   ->  Nested Loop  (cost=9.02..12310.44 rows=1 width=17) (actual time=48.632..3436.404 rows=33 loops=1)
         ->  Nested Loop  (cost=8.59..12309.99 rows=1 width=21) (actual time=48.605..3436.018 rows=33 loops=1)
               ->  Nested Loop  (cost=8.16..12304.93 rows=11 width=25) (actual time=5.200..2048.297 rows=532809 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=7.60..12298.97 rows=3 width=29) (actual time=5.163..482.320 rows=6016 loops=1)
                           Join Filter: (t.kind_id = kt.id)
                           Rows Removed by Join Filter: 1347
                           ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.015..0.016 rows=1 loops=1)
                                 Filter: ((kind)::text = 'movie'::text)
                                 Rows Removed by Filter: 6
                           ->  Nested Loop  (cost=7.60..12297.62 rows=21 width=33) (actual time=1.055..480.685 rows=7363 loops=1)
                                 ->  Nested Loop  (cost=7.17..12286.40 rows=23 width=8) (actual time=1.027..417.220 rows=8765 loops=1)
                                       Join Filter: (cc.status_id = cct2.id)
                                       Rows Removed by Join Filter: 8765
                                       ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.010..0.011 rows=2 loops=1)
                                             Filter: ((kind)::text ~~ '%complete%'::text)
                                             Rows Removed by Filter: 2
                                       ->  Nested Loop  (cost=7.17..12284.17 rows=94 width=12) (actual time=0.846..207.119 rows=8765 loops=2)
                                             Join Filter: (cc.subject_id = cct1.id)
                                             Rows Removed by Join Filter: 4045
                                             ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.003 rows=1 loops=2)
                                                   Filter: ((kind)::text = 'cast'::text)
                                                   Rows Removed by Filter: 3
                                             ->  Nested Loop  (cost=7.17..12278.42 rows=376 width=16) (actual time=0.844..205.154 rows=12810 loops=2)
                                                   ->  Nested Loop  (cost=6.75..12149.91 rows=270 width=4) (actual time=0.616..132.026 rows=35548 loops=2)
                                                         ->  Seq Scan on keyword k  (cost=0.00..3632.40 rows=8 width=4) (actual time=0.113..29.911 rows=8 loops=2)
                                                               Filter: ((keyword)::text = ANY ('{superhero,sequel,second-part,marvel-comics,based-on-comic,tv-special,fight,violence}'::text[]))
                                                               Rows Removed by Filter: 134162
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1061.70 rows=299 width=8) (actual time=1.087..12.260 rows=4444 loops=16)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=46976
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.604..0.604 rows=4444 loops=16)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.002..0.002 rows=0 loops=71096)
                                                         Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.007..0.007 rows=1 loops=8765)
                                       Index Cond: (id = mk.movie_id)
                                       Filter: (production_year > 1950)
                                       Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.010..0.245 rows=89 loops=6016)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=532809)
                     Index Cond: (id = ci.person_role_id)
                     Filter: (((name)::text !~~ '%Sherlock%'::text) AND (((name)::text ~~ '%Tony%Stark%'::text) OR ((name)::text ~~ '%Iron%Man%'::text)))
                     Rows Removed by Filter: 0
         ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.011..0.011 rows=1 loops=33)
               Index Cond: (id = ci.person_id)
               Heap Fetches: 33
 Planning Time: 15.819 ms
 Execution Time: 3436.638 ms
(51 rows)

SET
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=12304.81..12304.82 rows=1 width=32) (actual time=2654.893..2654.894 rows=1 loops=1)
   ->  Nested Loop  (cost=9.02..12304.81 rows=1 width=17) (actual time=59.424..2654.865 rows=17 loops=1)
         ->  Nested Loop  (cost=8.59..12304.35 rows=1 width=21) (actual time=59.408..2654.541 rows=27 loops=1)
               ->  Nested Loop  (cost=8.16..12301.15 rows=7 width=25) (actual time=7.924..1318.032 rows=222518 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=7.60..12297.17 rows=2 width=29) (actual time=7.887..646.032 rows=1472 loops=1)
                           Join Filter: (cc.status_id = cct2.id)
                           Rows Removed by Join Filter: 1472
                           ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.012..0.013 rows=2 loops=1)
                                 Filter: ((kind)::text ~~ '%complete%'::text)
                                 Rows Removed by Filter: 2
                           ->  Nested Loop  (cost=7.60..12296.04 rows=7 width=33) (actual time=5.835..322.658 rows=1472 loops=2)
                                 Join Filter: (cc.subject_id = cct1.id)
                                 Rows Removed by Join Filter: 243
                                 ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.003 rows=1 loops=2)
                                       Filter: ((kind)::text = 'cast'::text)
                                       Rows Removed by Filter: 3
                                 ->  Nested Loop  (cost=7.60..12294.62 rows=29 width=37) (actual time=5.832..322.236 rows=1715 loops=2)
                                       ->  Nested Loop  (cost=7.18..12284.58 rows=21 width=25) (actual time=5.745..305.471 rows=6043 loops=2)
                                             Join Filter: (t.kind_id = kt.id)
                                             Rows Removed by Join Filter: 8122
                                             ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.001..0.003 rows=1 loops=2)
                                                   Filter: ((kind)::text = 'movie'::text)
                                                   Rows Removed by Filter: 6
                                             ->  Nested Loop  (cost=7.18..12281.66 rows=147 width=29) (actual time=0.629..303.667 rows=14165 loops=2)
                                                   ->  Nested Loop  (cost=6.75..12149.91 rows=270 width=4) (actual time=0.613..129.990 rows=35548 loops=2)
                                                         ->  Seq Scan on keyword k  (cost=0.00..3632.40 rows=8 width=4) (actual time=0.113..30.200 rows=8 loops=2)
                                                               Filter: ((keyword)::text = ANY ('{superhero,sequel,second-part,marvel-comics,based-on-comic,tv-special,fight,violence}'::text[]))
                                                               Rows Removed by Filter: 134162
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1061.70 rows=299 width=8) (actual time=1.082..11.983 rows=4444 loops=16)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=46976
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.599..0.599 rows=4444 loops=16)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.005..0.005 rows=0 loops=71096)
                                                         Index Cond: (id = mk.movie_id)
                                                         Filter: (production_year > 2000)
                                                         Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.002..0.002 rows=0 loops=12086)
                                             Index Cond: (movie_id = t.id)
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.012..0.425 rows=151 loops=1472)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=4) (actual time=0.006..0.006 rows=0 loops=222518)
                     Index Cond: (id = ci.person_id)
                     Filter: ((name)::text ~~ '%Downey%Robert%'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=4) (actual time=0.011..0.011 rows=1 loops=27)
               Index Cond: (id = ci.person_role_id)
               Filter: (((name)::text !~~ '%Sherlock%'::text) AND (((name)::text ~~ '%Tony%Stark%'::text) OR ((name)::text ~~ '%Iron%Man%'::text)))
               Rows Removed by Filter: 0
 Planning Time: 16.001 ms
 Execution Time: 2655.084 ms
(52 rows)

SET
                                                                                             QUERY PLAN                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=14665.13..14665.14 rows=1 width=64) (actual time=1499.310..1499.311 rows=1 loops=1)
   ->  Nested Loop  (cost=9.02..14665.12 rows=1 width=32) (actual time=7.746..1497.948 rows=5406 loops=1)
         ->  Nested Loop  (cost=8.59..14664.67 rows=1 width=21) (actual time=7.716..1454.284 rows=5406 loops=1)
               ->  Nested Loop  (cost=8.16..14661.01 rows=8 width=25) (actual time=7.414..1029.016 rows=189844 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=7.60..14657.03 rows=2 width=29) (actual time=7.372..493.418 rows=1267 loops=1)
                           Join Filter: (cc.status_id = cct2.id)
                           Rows Removed by Join Filter: 1267
                           ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.012..0.013 rows=2 loops=1)
                                 Filter: ((kind)::text ~~ '%complete%'::text)
                                 Rows Removed by Filter: 2
                           ->  Nested Loop  (cost=7.60..14655.87 rows=9 width=33) (actual time=5.537..246.443 rows=1267 loops=2)
                                 Join Filter: (cc.subject_id = cct1.id)
                                 Rows Removed by Join Filter: 218
                                 ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=2)
                                       Filter: ((kind)::text = 'cast'::text)
                                       Rows Removed by Filter: 3
                                 ->  Nested Loop  (cost=7.60..14654.36 rows=37 width=37) (actual time=5.534..246.095 rows=1485 loops=2)
                                       ->  Nested Loop  (cost=7.18..14641.93 rows=26 width=25) (actual time=5.453..232.460 rows=5032 loops=2)
                                             Join Filter: (t.kind_id = kt.id)
                                             Rows Removed by Join Filter: 5581
                                             ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.001..0.003 rows=1 loops=2)
                                                   Filter: ((kind)::text = 'movie'::text)
                                                   Rows Removed by Filter: 6
                                             ->  Nested Loop  (cost=7.18..14638.55 rows=183 width=29) (actual time=0.655..231.062 rows=10613 loops=2)
                                                   ->  Nested Loop  (cost=6.75..14474.11 rows=337 width=4) (actual time=0.639..108.593 rows=24091 loops=2)
                                                         ->  Seq Scan on keyword k  (cost=0.00..3967.82 rows=10 width=4) (actual time=0.139..36.049 rows=10 loops=2)
                                                               Filter: ((keyword)::text = ANY ('{superhero,marvel-comics,based-on-comic,tv-special,fight,violence,magnet,web,claw,laser}'::text[]))
                                                               Rows Removed by Filter: 134160
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1047.64 rows=299 width=8) (actual time=0.645..6.973 rows=2409 loops=20)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=34254
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.360..0.360 rows=2409 loops=20)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.005..0.005 rows=0 loops=48182)
                                                         Index Cond: (id = mk.movie_id)
                                                         Filter: (production_year > 2000)
                                                         Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.002..0.002 rows=0 loops=10064)
                                             Index Cond: (movie_id = t.id)
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.012..0.398 rows=150 loops=1267)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=189844)
                     Index Cond: (id = ci.person_role_id)
                     Filter: ((name IS NOT NULL) AND (((name)::text ~~ '%man%'::text) OR ((name)::text ~~ '%Man%'::text)))
                     Rows Removed by Filter: 0
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=19) (actual time=0.008..0.008 rows=1 loops=5406)
               Index Cond: (id = ci.person_id)
 Planning Time: 16.097 ms
 Execution Time: 1499.498 ms
(50 rows)

SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3753.11..3753.12 rows=1 width=96) (actual time=104.114..104.114 rows=1 loops=1)
   ->  Nested Loop  (cost=8.75..3753.10 rows=1 width=118) (actual time=3.770..103.790 rows=1410 loops=1)
         Join Filter: (ml.movie_id = t.id)
         ->  Nested Loop  (cost=8.32..3752.60 rows=1 width=117) (actual time=3.748..100.726 rows=1816 loops=1)
               Join Filter: (ml.movie_id = mi.movie_id)
               ->  Nested Loop  (cost=7.89..3750.82 rows=1 width=113) (actual time=3.702..95.725 rows=402 loops=1)
                     Join Filter: (mc.company_type_id = ct.id)
                     Rows Removed by Join Filter: 20
                     ->  Nested Loop  (cost=7.89..3749.75 rows=1 width=117) (actual time=3.690..95.255 rows=422 loops=1)
                           ->  Nested Loop  (cost=7.47..3749.30 rows=1 width=102) (actual time=3.310..92.824 rows=1021 loops=1)
                                 Join Filter: (ml.movie_id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.04..3748.73 rows=1 width=90) (actual time=3.280..91.648 rows=199 loops=1)
                                       Join Filter: (ml.link_type_id = lt.id)
                                       Rows Removed by Join Filter: 303
                                       ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.015..0.019 rows=2 loops=1)
                                             Filter: ((link)::text ~~ '%follow%'::text)
                                             Rows Removed by Filter: 16
                                       ->  Nested Loop  (cost=7.04..3747.37 rows=11 width=12) (actual time=3.006..45.785 rows=251 loops=2)
                                             ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=2.997..36.159 rows=10544 loops=2)
                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.683..10.401 rows=1 loops=2)
                                                         Filter: ((keyword)::text = 'sequel'::text)
                                                         Rows Removed by Filter: 134169
                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=2.295..24.725 rows=10544 loops=2)
                                                         Recheck Cond: (keyword_id = k.id)
                                                         Heap Blocks: exact=11140
                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.326..1.326 rows=10544 loops=2)
                                                               Index Cond: (keyword_id = k.id)
                                             ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.001..0.001 rows=0 loops=21088)
                                                   Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=2 width=12) (actual time=0.004..0.005 rows=5 loops=199)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: (note IS NULL)
                                       Rows Removed by Filter: 2
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=1021)
                                 Index Cond: (id = mc.company_id)
                                 Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                                 Rows Removed by Filter: 1
                     ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=422)
                           Filter: ((kind)::text = 'production companies'::text)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.77 rows=1 width=4) (actual time=0.009..0.012 rows=5 loops=402)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German}'::text[]))
                     Rows Removed by Filter: 16
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.001..0.001 rows=1 loops=1816)
               Index Cond: (id = mk.movie_id)
               Filter: ((production_year >= 1950) AND (production_year <= 2000))
               Rows Removed by Filter: 0
 Planning Time: 15.299 ms
 Execution Time: 104.302 ms
(50 rows)

SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3752.79..3752.80 rows=1 width=96) (actual time=70.450..70.450 rows=1 loops=1)
   ->  Nested Loop  (cost=8.75..3752.79 rows=1 width=118) (actual time=3.497..70.428 rows=38 loops=1)
         Join Filter: (ml.movie_id = t.id)
         ->  Nested Loop  (cost=8.32..3752.28 rows=1 width=117) (actual time=3.108..69.860 rows=308 loops=1)
               Join Filter: (ml.movie_id = mi.movie_id)
               ->  Nested Loop  (cost=7.89..3750.82 rows=1 width=113) (actual time=3.091..66.504 rows=402 loops=1)
                     Join Filter: (mc.company_type_id = ct.id)
                     Rows Removed by Join Filter: 20
                     ->  Nested Loop  (cost=7.89..3749.75 rows=1 width=117) (actual time=3.087..66.058 rows=422 loops=1)
                           ->  Nested Loop  (cost=7.47..3749.30 rows=1 width=102) (actual time=2.897..64.000 rows=1021 loops=1)
                                 Join Filter: (ml.movie_id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.04..3748.73 rows=1 width=90) (actual time=2.878..63.084 rows=199 loops=1)
                                       Join Filter: (ml.link_type_id = lt.id)
                                       Rows Removed by Join Filter: 303
                                       ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.005..0.009 rows=2 loops=1)
                                             Filter: ((link)::text ~~ '%follow%'::text)
                                             Rows Removed by Filter: 16
                                       ->  Nested Loop  (cost=7.04..3747.37 rows=11 width=12) (actual time=2.761..31.510 rows=251 loops=2)
                                             ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=2.755..22.393 rows=10544 loops=2)
                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.589..10.336 rows=1 loops=2)
                                                         Filter: ((keyword)::text = 'sequel'::text)
                                                         Rows Removed by Filter: 134169
                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=2.152..11.087 rows=10544 loops=2)
                                                         Recheck Cond: (keyword_id = k.id)
                                                         Heap Blocks: exact=11140
                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.240..1.240 rows=10544 loops=2)
                                                               Index Cond: (keyword_id = k.id)
                                             ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.001..0.001 rows=0 loops=21088)
                                                   Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=2 width=12) (actual time=0.002..0.004 rows=5 loops=199)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: (note IS NULL)
                                       Rows Removed by Filter: 2
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=1021)
                                 Index Cond: (id = mc.company_id)
                                 Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                                 Rows Removed by Filter: 1
                     ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.001 rows=1 loops=422)
                           Filter: ((kind)::text = 'production companies'::text)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.45 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=402)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Germany,German}'::text[]))
                     Rows Removed by Filter: 20
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.002..0.002 rows=0 loops=308)
               Index Cond: (id = mk.movie_id)
               Filter: ((production_year >= 2000) AND (production_year <= 2010))
               Rows Removed by Filter: 1
 Planning Time: 14.412 ms
 Execution Time: 70.629 ms
(50 rows)

SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3753.19..3753.20 rows=1 width=96) (actual time=71.762..71.763 rows=1 loops=1)
   ->  Nested Loop  (cost=8.75..3753.18 rows=1 width=118) (actual time=3.082..71.354 rows=1874 loops=1)
         Join Filter: (ml.movie_id = t.id)
         ->  Nested Loop  (cost=8.32..3752.68 rows=1 width=117) (actual time=3.071..68.215 rows=1874 loops=1)
               Join Filter: (ml.movie_id = mi.movie_id)
               ->  Nested Loop  (cost=7.89..3750.82 rows=1 width=113) (actual time=3.056..63.558 rows=402 loops=1)
                     Join Filter: (mc.company_type_id = ct.id)
                     Rows Removed by Join Filter: 20
                     ->  Nested Loop  (cost=7.89..3749.75 rows=1 width=117) (actual time=3.051..63.107 rows=422 loops=1)
                           ->  Nested Loop  (cost=7.47..3749.30 rows=1 width=102) (actual time=2.841..61.101 rows=1021 loops=1)
                                 Join Filter: (ml.movie_id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.04..3748.73 rows=1 width=90) (actual time=2.821..60.215 rows=199 loops=1)
                                       Join Filter: (ml.link_type_id = lt.id)
                                       Rows Removed by Join Filter: 303
                                       ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.005..0.009 rows=2 loops=1)
                                             Filter: ((link)::text ~~ '%follow%'::text)
                                             Rows Removed by Filter: 16
                                       ->  Nested Loop  (cost=7.04..3747.37 rows=11 width=12) (actual time=2.707..30.075 rows=251 loops=2)
                                             ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=2.700..20.976 rows=10544 loops=2)
                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.561..9.906 rows=1 loops=2)
                                                         Filter: ((keyword)::text = 'sequel'::text)
                                                         Rows Removed by Filter: 134169
                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=2.125..10.092 rows=10544 loops=2)
                                                         Recheck Cond: (keyword_id = k.id)
                                                         Heap Blocks: exact=11140
                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.220..1.220 rows=10544 loops=2)
                                                               Index Cond: (keyword_id = k.id)
                                             ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.001..0.001 rows=0 loops=21088)
                                                   Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=2 width=12) (actual time=0.002..0.004 rows=5 loops=199)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: (note IS NULL)
                                       Rows Removed by Filter: 2
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=1021)
                                 Index Cond: (id = mc.company_id)
                                 Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                                 Rows Removed by Filter: 1
                     ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.001 rows=1 loops=422)
                           Filter: ((kind)::text = 'production companies'::text)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.82 rows=3 width=4) (actual time=0.008..0.011 rows=5 loops=402)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,English}'::text[]))
                     Rows Removed by Filter: 16
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.001..0.001 rows=1 loops=1874)
               Index Cond: (id = mk.movie_id)
               Filter: ((production_year >= 1950) AND (production_year <= 2010))
 Planning Time: 14.545 ms
 Execution Time: 71.980 ms
(49 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7386.84..7386.85 rows=1 width=96) (actual time=547.455..547.455 rows=1 loops=1)
   ->  Nested Loop  (cost=8.89..7386.83 rows=1 width=42) (actual time=14.667..546.676 rows=2851 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         Rows Removed by Join Filter: 191
         ->  Nested Loop  (cost=8.89..7384.41 rows=1 width=46) (actual time=14.662..537.227 rows=3042 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=8.46..7382.82 rows=1 width=58) (actual time=6.476..395.267 rows=2958 loops=1)
                     Join Filter: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=8.46..7381.73 rows=1 width=62) (actual time=6.469..392.457 rows=2958 loops=1)
                           ->  Nested Loop  (cost=8.04..7381.19 rows=1 width=47) (actual time=6.453..379.017 rows=3374 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.61..7380.61 rows=1 width=35) (actual time=6.424..342.713 rows=2378 loops=1)
                                       Join Filter: (mi_idx.info_type_id = it2.id)
                                       Rows Removed by Join Filter: 6322
                                       ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=1)
                                             Filter: ((info)::text = 'rating'::text)
                                             Rows Removed by Filter: 112
                                       ->  Nested Loop  (cost=7.61..7377.88 rows=25 width=39) (actual time=4.385..341.827 rows=8700 loops=1)
                                             Join Filter: (t.id = mi_idx.movie_id)
                                             ->  Nested Loop  (cost=7.18..7372.53 rows=10 width=25) (actual time=4.364..311.658 rows=4832 loops=1)
                                                   Join Filter: (t.kind_id = kt.id)
                                                   Rows Removed by Join Filter: 2286
                                                   ->  Nested Loop  (cost=7.18..7370.44 rows=35 width=29) (actual time=4.345..309.791 rows=5606 loops=1)
                                                         ->  Nested Loop  (cost=6.75..7304.56 rows=135 width=4) (actual time=4.274..136.014 rows=37091 loops=1)
                                                               ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=0.932..20.737 rows=3 loops=1)
                                                                     Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                     Rows Removed by Filter: 134167
                                                               ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1082.76 rows=299 width=8) (actual time=3.375..36.968 rows=12364 loops=3)
                                                                     Recheck Cond: (keyword_id = k.id)
                                                                     Heap Blocks: exact=26312
                                                                     ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.847..1.847 rows=12364 loops=3)
                                                                           Index Cond: (keyword_id = k.id)
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.004..0.004 rows=0 loops=37091)
                                                               Index Cond: (id = mk.movie_id)
                                                               Filter: (production_year > 2008)
                                                               Rows Removed by Filter: 1
                                                   ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=5606)
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.013..0.015 rows=2 loops=1)
                                                               Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                               Rows Removed by Filter: 5
                                             ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=14) (actual time=0.005..0.006 rows=2 loops=4832)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((info)::text < '7.0'::text)
                                                   Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.013..0.015 rows=1 loops=2378)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                                       Rows Removed by Filter: 10
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.004..0.004 rows=1 loops=3374)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text <> '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.000..0.000 rows=1 loops=2958)
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.56 rows=2 width=8) (actual time=0.043..0.048 rows=1 loops=2958)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Germany,German,USA,American}'::text[]))
                     Rows Removed by Filter: 155
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=3042)
               Filter: ((info)::text = 'countries'::text)
               Rows Removed by Filter: 14
 Planning Time: 37.311 ms
 Execution Time: 547.776 ms
(62 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7385.52..7385.53 rows=1 width=96) (actual time=367.844..367.844 rows=1 loops=1)
   ->  Nested Loop  (cost=8.89..7385.51 rows=1 width=42) (actual time=18.293..367.814 rows=31 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         Rows Removed by Join Filter: 3
         ->  Nested Loop  (cost=8.89..7383.09 rows=1 width=46) (actual time=18.288..367.676 rows=34 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=8.46..7381.50 rows=1 width=58) (actual time=18.194..364.398 rows=50 loops=1)
                     Join Filter: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=8.46..7380.41 rows=1 width=62) (actual time=18.188..364.309 rows=50 loops=1)
                           ->  Nested Loop  (cost=8.04..7379.87 rows=1 width=47) (actual time=18.173..363.690 rows=78 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.61..7379.29 rows=1 width=35) (actual time=8.056..339.327 rows=1615 loops=1)
                                       Join Filter: (mi_idx.info_type_id = it2.id)
                                       Rows Removed by Join Filter: 4362
                                       ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=1)
                                             Filter: ((info)::text = 'rating'::text)
                                             Rows Removed by Filter: 112
                                       ->  Nested Loop  (cost=7.61..7376.61 rows=21 width=39) (actual time=4.552..338.691 rows=5977 loops=1)
                                             Join Filter: (t.id = mi_idx.movie_id)
                                             ->  Nested Loop  (cost=7.18..7372.33 rows=8 width=25) (actual time=4.530..316.503 rows=3517 loops=1)
                                                   Join Filter: (t.kind_id = kt.id)
                                                   Rows Removed by Join Filter: 1618
                                                   ->  Nested Loop  (cost=7.18..7370.44 rows=28 width=29) (actual time=4.513..315.112 rows=4040 loops=1)
                                                         ->  Nested Loop  (cost=6.75..7304.56 rows=135 width=4) (actual time=4.445..144.249 rows=37091 loops=1)
                                                               ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.118..20.857 rows=3 loops=1)
                                                                     Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                     Rows Removed by Filter: 134167
                                                               ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1082.76 rows=299 width=8) (actual time=3.370..39.595 rows=12364 loops=3)
                                                                     Recheck Cond: (keyword_id = k.id)
                                                                     Heap Blocks: exact=26312
                                                                     ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.841..1.841 rows=12364 loops=3)
                                                                           Index Cond: (keyword_id = k.id)
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.004..0.004 rows=0 loops=37091)
                                                               Index Cond: (id = mk.movie_id)
                                                               Filter: (production_year > 2009)
                                                               Rows Removed by Filter: 1
                                                   ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=4040)
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.010..0.012 rows=2 loops=1)
                                                               Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                               Rows Removed by Filter: 5
                                             ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=14) (actual time=0.005..0.006 rows=2 loops=3517)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((info)::text < '7.0'::text)
                                                   Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.015..0.015 rows=0 loops=1615)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                                       Rows Removed by Filter: 12
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.007..0.007 rows=1 loops=78)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text <> '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.001..0.001 rows=1 loops=50)
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.56 rows=2 width=8) (actual time=0.060..0.065 rows=1 loops=50)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Germany,German,USA,American}'::text[]))
                     Rows Removed by Filter: 53
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=34)
               Filter: ((info)::text = 'countries'::text)
               Rows Removed by Filter: 16
 Planning Time: 38.484 ms
 Execution Time: 368.078 ms
(62 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7390.61..7390.62 rows=1 width=96) (actual time=2358.730..2358.730 rows=1 loops=1)
   ->  Nested Loop  (cost=8.89..7390.60 rows=1 width=42) (actual time=6.120..2353.212 rows=21489 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         Rows Removed by Join Filter: 3123
         ->  Nested Loop  (cost=8.89..7388.18 rows=1 width=46) (actual time=6.115..2267.730 rows=24612 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=8.46..7386.28 rows=1 width=58) (actual time=6.053..550.093 rows=23425 loops=1)
                     Join Filter: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=8.46..7385.19 rows=1 width=62) (actual time=6.039..528.710 rows=23425 loops=1)
                           ->  Nested Loop  (cost=8.04..7384.64 rows=1 width=47) (actual time=6.027..458.336 rows=25316 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.61..7384.06 rows=1 width=35) (actual time=4.626..371.478 rows=5949 loops=1)
                                       Join Filter: (mi_idx.info_type_id = it2.id)
                                       Rows Removed by Join Filter: 11839
                                       ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.012..0.014 rows=1 loops=1)
                                             Filter: ((info)::text = 'rating'::text)
                                             Rows Removed by Filter: 112
                                       ->  Nested Loop  (cost=7.61..7381.10 rows=44 width=39) (actual time=4.609..369.573 rows=17788 loops=1)
                                             Join Filter: (t.id = mi_idx.movie_id)
                                             ->  Nested Loop  (cost=7.18..7373.07 rows=15 width=25) (actual time=4.587..321.235 rows=8073 loops=1)
                                                   Join Filter: (t.kind_id = kt.id)
                                                   Rows Removed by Join Filter: 4332
                                                   ->  Nested Loop  (cost=7.18..7370.44 rows=54 width=29) (actual time=4.519..317.856 rows=9739 loops=1)
                                                         ->  Nested Loop  (cost=6.75..7304.56 rows=135 width=4) (actual time=4.491..141.060 rows=37091 loops=1)
                                                               ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.151..21.168 rows=3 loops=1)
                                                                     Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                     Rows Removed by Filter: 134167
                                                               ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1082.76 rows=299 width=8) (actual time=3.385..38.517 rows=12364 loops=3)
                                                                     Recheck Cond: (keyword_id = k.id)
                                                                     Heap Blocks: exact=26312
                                                                     ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.851..1.851 rows=12364 loops=3)
                                                                           Index Cond: (keyword_id = k.id)
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.004..0.004 rows=0 loops=37091)
                                                               Index Cond: (id = mk.movie_id)
                                                               Filter: (production_year > 2005)
                                                               Rows Removed by Filter: 1
                                                   ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=9739)
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.011..0.013 rows=2 loops=1)
                                                               Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                               Rows Removed by Filter: 5
                                             ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=14) (actual time=0.005..0.005 rows=2 loops=8073)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((info)::text < '8.5'::text)
                                                   Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.009..0.014 rows=4 loops=5949)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                                       Rows Removed by Filter: 8
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=25316)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text <> '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.000..0.000 rows=1 loops=23425)
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.061..0.073 rows=1 loops=23425)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                     Rows Removed by Filter: 180
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=24612)
               Filter: ((info)::text = 'countries'::text)
               Rows Removed by Filter: 20
 Planning Time: 38.461 ms
 Execution Time: 2358.955 ms
(62 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7390.53..7390.54 rows=1 width=96) (actual time=1038.608..1038.608 rows=1 loops=1)
   ->  Nested Loop  (cost=8.89..7390.53 rows=1 width=42) (actual time=6.265..1028.582 rows=46281 loops=1)
         Join Filter: (mc.company_type_id = ct.id)
         Rows Removed by Join Filter: 4783
         ->  Nested Loop  (cost=8.89..7389.44 rows=1 width=46) (actual time=6.250..991.510 rows=46281 loops=1)
               ->  Nested Loop  (cost=8.47..7388.99 rows=1 width=31) (actual time=4.639..830.124 rows=64848 loops=1)
                     Join Filter: (t.id = mc.movie_id)
                     ->  Nested Loop  (cost=8.04..7388.39 rows=1 width=39) (actual time=4.625..772.531 rows=4115 loops=1)
                           Join Filter: (mi.info_type_id = it1.id)
                           Rows Removed by Join Filter: 594
                           ->  Nested Loop  (cost=8.04..7385.96 rows=1 width=43) (actual time=4.620..755.214 rows=4709 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=7.61..7384.06 rows=1 width=35) (actual time=4.577..364.607 rows=5949 loops=1)
                                       Join Filter: (mi_idx.info_type_id = it2.id)
                                       Rows Removed by Join Filter: 11839
                                       ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.012..0.014 rows=1 loops=1)
                                             Filter: ((info)::text = 'rating'::text)
                                             Rows Removed by Filter: 112
                                       ->  Nested Loop  (cost=7.61..7381.10 rows=44 width=39) (actual time=4.561..362.721 rows=17788 loops=1)
                                             Join Filter: (t.id = mi_idx.movie_id)
                                             ->  Nested Loop  (cost=7.18..7373.07 rows=15 width=25) (actual time=4.546..315.349 rows=8073 loops=1)
                                                   Join Filter: (t.kind_id = kt.id)
                                                   Rows Removed by Join Filter: 4332
                                                   ->  Nested Loop  (cost=7.18..7370.44 rows=54 width=29) (actual time=4.496..312.027 rows=9739 loops=1)
                                                         ->  Nested Loop  (cost=6.75..7304.56 rows=135 width=4) (actual time=4.477..138.140 rows=37091 loops=1)
                                                               ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.134..21.036 rows=3 loops=1)
                                                                     Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                     Rows Removed by Filter: 134167
                                                               ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1082.76 rows=299 width=8) (actual time=3.388..37.661 rows=12364 loops=3)
                                                                     Recheck Cond: (keyword_id = k.id)
                                                                     Heap Blocks: exact=26312
                                                                     ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.853..1.853 rows=12364 loops=3)
                                                                           Index Cond: (keyword_id = k.id)
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.004..0.004 rows=0 loops=37091)
                                                               Index Cond: (id = mk.movie_id)
                                                               Filter: (production_year > 2005)
                                                               Rows Removed by Filter: 1
                                                   ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=9739)
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.009..0.011 rows=2 loops=1)
                                                               Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                               Rows Removed by Filter: 5
                                             ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=14) (actual time=0.005..0.005 rows=2 loops=8073)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((info)::text < '8.5'::text)
                                                   Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.056..0.065 rows=1 loops=5949)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                                       Rows Removed by Filter: 71
                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=4709)
                                 Filter: ((info)::text = 'countries'::text)
                                 Rows Removed by Filter: 20
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=12) (actual time=0.006..0.011 rows=16 loops=4115)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=64848)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text <> '[us]'::text)
                     Rows Removed by Filter: 0
         ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.000..0.000 rows=1 loops=46281)
 Planning Time: 40.057 ms
 Execution Time: 1038.851 ms
(61 rows)

SET
                                                                                                    QUERY PLAN                                                                                                    
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=57942.47..57942.48 rows=1 width=64) (actual time=255.479..255.479 rows=1 loops=1)
   ->  Nested Loop  (cost=4238.90..57942.46 rows=1 width=65) (actual time=225.847..255.356 rows=618 loops=1)
         ->  Nested Loop  (cost=4238.48..57942.02 rows=1 width=69) (actual time=225.818..252.835 rows=618 loops=1)
               ->  Nested Loop  (cost=4238.35..57941.87 rows=1 width=73) (actual time=225.783..252.147 rows=618 loops=1)
                     ->  Nested Loop  (cost=4237.93..57941.42 rows=1 width=77) (actual time=225.760..251.110 rows=618 loops=1)
                           Join Filter: (t.id = mc.movie_id)
                           ->  Nested Loop  (cost=4237.50..57940.82 rows=1 width=85) (actual time=225.730..249.930 rows=615 loops=1)
                                 ->  Gather  (cost=4237.06..57938.99 rows=1 width=77) (actual time=225.696..253.785 rows=5 loops=1)
                                       Workers Planned: 2
                                       Workers Launched: 2
                                       ->  Nested Loop  (cost=3237.06..56938.89 rows=1 width=77) (actual time=235.381..250.903 rows=2 loops=3)
                                             ->  Nested Loop  (cost=3236.92..56938.62 rows=1 width=81) (actual time=235.365..250.885 rows=2 loops=3)
                                                   ->  Hash Join  (cost=3236.49..54660.05 rows=1093 width=73) (actual time=131.725..187.886 rows=344 loops=3)
                                                         Hash Cond: (t.kind_id = kt.id)
                                                         ->  Hash Join  (cost=3235.39..54626.70 rows=7653 width=29) (actual time=29.064..187.671 rows=694 loops=3)
                                                               Hash Cond: (t.id = cc.movie_id)
                                                               ->  Parallel Seq Scan on title t  (cost=0.00..49166.29 rows=572932 width=25) (actual time=0.018..112.281 rows=460484 loops=3)
                                                                     Filter: (production_year > 2000)
                                                                     Rows Removed by Filter: 382286
                                                               ->  Hash  (cost=2813.24..2813.24 rows=33772 width=4) (actual time=28.439..28.439 rows=24592 loops=3)
                                                                     Buckets: 65536  Batches: 1  Memory Usage: 1377kB
                                                                     ->  Hash Join  (cost=1.06..2813.24 rows=33772 width=4) (actual time=0.036..25.125 rows=24592 loops=3)
                                                                           Hash Cond: (cc.status_id = cct1.id)
                                                                           ->  Seq Scan on complete_cast cc  (cost=0.00..2081.86 rows=135086 width=8) (actual time=0.012..12.517 rows=135086 loops=3)
                                                                           ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=3)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=3)
                                                                                       Filter: ((kind)::text = 'complete+verified'::text)
                                                                                       Rows Removed by Filter: 3
                                                         ->  Hash  (cost=1.09..1.09 rows=1 width=52) (actual time=0.024..0.024 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=52) (actual time=0.018..0.019 rows=1 loops=3)
                                                                     Filter: ((kind)::text = 'movie'::text)
                                                                     Rows Removed by Filter: 6
                                                   ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.07 rows=1 width=8) (actual time=0.183..0.183 rows=0 loops=1033)
                                                         Index Cond: (movie_id = t.id)
                                                         Filter: ((info IS NOT NULL) AND ((note)::text ~~ '%internet%'::text) AND (((info)::text ~~ 'USA:% 199%'::text) OR ((info)::text ~~ 'USA:% 200%'::text)))
                                                         Rows Removed by Filter: 211
                                             ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.20 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=5)
                                                   Index Cond: (id = mi.info_type_id)
                                                   Filter: ((info)::text = 'release dates'::text)
                                 ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.36 rows=47 width=8) (actual time=0.013..0.035 rows=123 loops=5)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=12) (actual time=0.001..0.002 rows=1 loops=615)
                                 Index Cond: (movie_id = mk.movie_id)
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=618)
                           Index Cond: (id = mc.company_id)
                           Filter: ((country_code)::text = '[us]'::text)
               ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=618)
                     Index Cond: (id = mc.company_type_id)
                     Heap Fetches: 618
         ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=618)
               Index Cond: (id = mk.keyword_id)
               Heap Fetches: 618
 Planning Time: 37.495 ms
 Execution Time: 260.009 ms
(56 rows)

SET
                                                                                              QUERY PLAN                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7387.30..7387.31 rows=1 width=64) (actual time=75.926..75.926 rows=1 loops=1)
   ->  Nested Loop  (cost=8.88..7387.29 rows=1 width=65) (actual time=20.682..75.910 rows=16 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         ->  Nested Loop  (cost=8.88..7384.87 rows=1 width=69) (actual time=20.675..75.849 rows=16 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=8.45..7383.30 rows=1 width=81) (actual time=4.180..56.533 rows=315 loops=1)
                     Join Filter: (mc.company_type_id = ct.id)
                     Rows Removed by Join Filter: 140
                     ->  Nested Loop  (cost=8.45..7382.21 rows=1 width=85) (actual time=4.166..56.191 rows=315 loops=1)
                           ->  Nested Loop  (cost=8.03..7380.87 rows=3 width=89) (actual time=4.102..50.508 rows=1218 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.60..7378.46 rows=4 width=77) (actual time=4.074..48.879 rows=60 loops=1)
                                       Join Filter: (cc.status_id = cct1.id)
                                       Rows Removed by Join Filter: 81
                                       ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=1)
                                             Filter: ((kind)::text = 'complete+verified'::text)
                                             Rows Removed by Filter: 3
                                       ->  Nested Loop  (cost=7.60..7377.22 rows=15 width=81) (actual time=4.046..48.839 rows=141 loops=1)
                                             ->  Nested Loop  (cost=7.18..7372.44 rows=10 width=73) (actual time=3.819..46.496 rows=401 loops=1)
                                                   Join Filter: (t.kind_id = kt.id)
                                                   Rows Removed by Join Filter: 156
                                                   ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=52) (actual time=0.007..0.008 rows=1 loops=1)
                                                         Filter: ((kind)::text = 'movie'::text)
                                                         Rows Removed by Filter: 6
                                                   ->  Nested Loop  (cost=7.18..7370.44 rows=73 width=29) (actual time=0.956..46.398 rows=557 loops=1)
                                                         ->  Nested Loop  (cost=6.75..7304.56 rows=135 width=4) (actual time=0.933..31.868 rows=1133 loops=1)
                                                               ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=0.707..23.595 rows=4 loops=1)
                                                                     Filter: ((keyword)::text = ANY ('{nerd,loner,alienation,dignity}'::text[]))
                                                                     Rows Removed by Filter: 134166
                                                               ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1082.76 rows=299 width=8) (actual time=0.106..2.030 rows=283 loops=4)
                                                                     Recheck Cond: (keyword_id = k.id)
                                                                     Heap Blocks: exact=1083
                                                                     ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.063..0.063 rows=283 loops=4)
                                                                           Index Cond: (keyword_id = k.id)
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.012..0.012 rows=0 loops=1133)
                                                               Index Cond: (id = mk.movie_id)
                                                               Filter: (production_year > 2000)
                                                               Rows Removed by Filter: 1
                                             ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=8) (actual time=0.005..0.006 rows=0 loops=401)
                                                   Index Cond: (movie_id = t.id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=12) (actual time=0.014..0.023 rows=20 loops=60)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=1218)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.000..0.000 rows=1 loops=315)
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.56 rows=1 width=8) (actual time=0.061..0.061 rows=0 loops=315)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: (((note)::text ~~ '%internet%'::text) AND ((info)::text ~~ 'USA:% 200%'::text))
                     Rows Removed by Filter: 268
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=16)
               Filter: ((info)::text = 'release dates'::text)
               Rows Removed by Filter: 15
 Planning Time: 37.540 ms
 Execution Time: 76.180 ms
(56 rows)

SET
                                                                                                       QUERY PLAN                                                                                                       
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=67112.66..67112.67 rows=1 width=64) (actual time=357.528..357.529 rows=1 loops=1)
   ->  Gather  (cost=67112.44..67112.65 rows=2 width=64) (actual time=357.310..363.589 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=66112.44..66112.45 rows=1 width=64) (actual time=354.453..354.453 rows=1 loops=3)
               ->  Nested Loop  (cost=3238.95..66112.43 rows=2 width=65) (actual time=289.444..354.408 rows=209 loops=3)
                     ->  Nested Loop  (cost=3238.53..66111.55 rows=2 width=69) (actual time=289.424..353.675 rows=209 loops=3)
                           ->  Nested Loop  (cost=3238.10..66109.74 rows=1 width=81) (actual time=289.397..353.581 rows=2 loops=3)
                                 ->  Nested Loop  (cost=3237.97..66109.58 rows=1 width=85) (actual time=289.378..353.558 rows=2 loops=3)
                                       ->  Nested Loop  (cost=3237.55..66109.14 rows=1 width=89) (actual time=289.345..353.510 rows=2 loops=3)
                                             ->  Nested Loop  (cost=3237.12..66108.51 rows=1 width=77) (actual time=289.318..353.471 rows=2 loops=3)
                                                   ->  Nested Loop  (cost=3236.98..66107.43 rows=5 width=81) (actual time=289.305..353.454 rows=2 loops=3)
                                                         ->  Hash Join  (cost=3236.54..55258.37 rows=5532 width=73) (actual time=134.753..202.841 rows=1684 loops=3)
                                                               Hash Cond: (t.kind_id = kt.id)
                                                               ->  Hash Join  (cost=3235.39..55216.42 rows=9681 width=29) (actual time=28.678..202.287 rows=2141 loops=3)
                                                                     Hash Cond: (t.id = cc.movie_id)
                                                                     ->  Parallel Seq Scan on title t  (cost=0.00..49166.29 rows=724782 width=25) (actual time=0.024..114.638 rows=583011 loops=3)
                                                                           Filter: (production_year > 1990)
                                                                           Rows Removed by Filter: 259760
                                                                     ->  Hash  (cost=2813.24..2813.24 rows=33772 width=4) (actual time=28.150..28.150 rows=24592 loops=3)
                                                                           Buckets: 65536  Batches: 1  Memory Usage: 1377kB
                                                                           ->  Hash Join  (cost=1.06..2813.24 rows=33772 width=4) (actual time=0.034..24.864 rows=24592 loops=3)
                                                                                 Hash Cond: (cc.status_id = cct1.id)
                                                                                 ->  Seq Scan on complete_cast cc  (cost=0.00..2081.86 rows=135086 width=8) (actual time=0.011..12.298 rows=135086 loops=3)
                                                                                 ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=3)
                                                                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                       ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=3)
                                                                                             Filter: ((kind)::text = 'complete+verified'::text)
                                                                                             Rows Removed by Filter: 3
                                                               ->  Hash  (cost=1.10..1.10 rows=4 width=52) (actual time=0.023..0.023 rows=4 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on kind_type kt  (cost=0.00..1.10 rows=4 width=52) (actual time=0.013..0.016 rows=4 loops=3)
                                                                           Filter: ((kind)::text = ANY ('{movie,"tv movie","video movie","video game"}'::text[]))
                                                                           Rows Removed by Filter: 3
                                                         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.95 rows=1 width=8) (actual time=0.089..0.089 rows=0 loops=5053)
                                                               Index Cond: (movie_id = t.id)
                                                               Filter: ((info IS NOT NULL) AND ((note)::text ~~ '%internet%'::text) AND (((info)::text ~~ 'USA:% 199%'::text) OR ((info)::text ~~ 'USA:% 200%'::text)))
                                                               Rows Removed by Filter: 123
                                                   ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.20 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=6)
                                                         Index Cond: (id = mi.info_type_id)
                                                         Filter: ((info)::text = 'release dates'::text)
                                             ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.58 rows=5 width=12) (actual time=0.017..0.018 rows=1 loops=6)
                                                   Index Cond: (movie_id = t.id)
                                       ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.019..0.019 rows=1 loops=7)
                                             Index Cond: (id = mc.company_id)
                                             Filter: ((country_code)::text = '[us]'::text)
                                 ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=7)
                                       Index Cond: (id = mc.company_type_id)
                                       Heap Fetches: 7
                           ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.34 rows=47 width=8) (actual time=0.015..0.029 rows=90 loops=7)
                                 Index Cond: (movie_id = t.id)
                     ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=628)
                           Index Cond: (id = mk.keyword_id)
                           Heap Fetches: 628
 Planning Time: 36.040 ms
 Execution Time: 363.907 ms
(56 rows)

SET
                                                                                                  QUERY PLAN                                                                                                  
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=6625.30..6625.31 rows=1 width=96) (actual time=443.008..443.009 rows=1 loops=1)
   ->  Nested Loop  (cost=10.31..6625.29 rows=1 width=48) (actual time=82.300..442.922 rows=275 loops=1)
         ->  Nested Loop  (cost=9.88..6623.49 rows=1 width=41) (actual time=2.304..429.460 rows=6518 loops=1)
               Join Filter: (it.id = mi.info_type_id)
               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.007..0.014 rows=1 loops=1)
                     Filter: ((info)::text = 'release dates'::text)
                     Rows Removed by Filter: 112
               ->  Nested Loop  (cost=9.88..6621.07 rows=1 width=45) (actual time=2.295..428.515 rows=6518 loops=1)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=9.45..6555.77 rows=2 width=57) (actual time=2.247..355.285 rows=4044 loops=1)
                           ->  Nested Loop  (cost=9.02..6553.68 rows=1 width=53) (actual time=2.214..348.681 rows=1578 loops=1)
                                 ->  Nested Loop  (cost=8.59..6551.98 rows=1 width=41) (actual time=2.181..342.221 rows=1608 loops=1)
                                       Join Filter: (rt.id = ci.role_id)
                                       Rows Removed by Join Filter: 5708
                                       ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=1)
                                             Filter: ((role)::text = 'actress'::text)
                                             Rows Removed by Filter: 11
                                       ->  Nested Loop  (cost=8.59..6550.80 rows=2 width=45) (actual time=2.150..341.586 rows=7316 loops=1)
                                             Join Filter: (t.id = ci.movie_id)
                                             ->  Nested Loop  (cost=8.03..6311.77 rows=6 width=29) (actual time=1.248..156.979 rows=1576 loops=1)
                                                   ->  Nested Loop  (cost=7.61..6286.76 rows=17 width=33) (actual time=1.225..134.872 rows=5566 loops=1)
                                                         Join Filter: (t.id = mc.movie_id)
                                                         ->  Nested Loop  (cost=7.18..6231.61 rows=16 width=25) (actual time=1.202..126.604 rows=495 loops=1)
                                                               ->  Nested Loop  (cost=6.75..6072.14 rows=101 width=4) (actual time=1.022..58.811 rows=9696 loops=1)
                                                                     ->  Seq Scan on keyword k  (cost=0.00..2793.84 rows=3 width=4) (actual time=0.021..18.583 rows=3 loops=1)
                                                                           Filter: ((keyword)::text = ANY ('{hero,martial-arts,hand-to-hand-combat}'::text[]))
                                                                           Rows Removed by Filter: 134167
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1089.78 rows=299 width=8) (actual time=0.940..12.994 rows=3232 loops=3)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=7446
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.550..0.550 rows=3232 loops=3)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using title_pkey on title t  (cost=0.43..1.58 rows=1 width=21) (actual time=0.007..0.007 rows=0 loops=9696)
                                                                     Index Cond: (id = mk.movie_id)
                                                                     Filter: (production_year > 2010)
                                                                     Rows Removed by Filter: 1
                                                         ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..3.38 rows=5 width=8) (actual time=0.009..0.014 rows=11 loops=495)
                                                               Index Cond: (movie_id = mk.movie_id)
                                                   ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.47 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=5566)
                                                         Index Cond: (id = mc.company_id)
                                                         Filter: ((country_code)::text = '[us]'::text)
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..39.83 rows=1 width=16) (actual time=0.078..0.116 rows=5 loops=1576)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                   Rows Removed by Filter: 136
                                 ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..1.70 rows=1 width=20) (actual time=0.004..0.004 rows=1 loops=1608)
                                       Index Cond: (id = ci.person_role_id)
                           ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.08 rows=2 width=4) (actual time=0.003..0.004 rows=3 loops=1578)
                                 Index Cond: (person_id = ci.person_id)
                                 Heap Fetches: 4044
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..32.63 rows=1 width=8) (actual time=0.004..0.018 rows=2 loops=4044)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%201%'::text) OR ((info)::text ~~ 'USA:%201%'::text)))
                           Rows Removed by Filter: 57
         ->  Index Scan using name_pkey on name n  (cost=0.43..1.80 rows=1 width=19) (actual time=0.002..0.002 rows=0 loops=6518)
               Index Cond: (id = ci.person_id)
               Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
               Rows Removed by Filter: 1
 Planning Time: 81.989 ms
 Execution Time: 443.258 ms
(61 rows)

SET
                                                                                                            QUERY PLAN                                                                                                            
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=6509.33..6509.34 rows=1 width=96) (actual time=28.564..28.564 rows=1 loops=1)
   ->  Nested Loop  (cost=1004.27..6509.32 rows=1 width=48) (actual time=26.658..28.543 rows=45 loops=1)
         ->  Nested Loop  (cost=1003.84..6507.62 rows=1 width=36) (actual time=26.644..28.464 rows=45 loops=1)
               Join Filter: (n.id = an.person_id)
               ->  Nested Loop  (cost=1003.42..6505.51 rows=1 width=44) (actual time=26.623..28.408 rows=9 loops=1)
                     ->  Nested Loop  (cost=1003.28..6505.34 rows=1 width=48) (actual time=26.600..28.376 rows=9 loops=1)
                           ->  Nested Loop  (cost=1002.86..6503.54 rows=1 width=29) (actual time=25.999..27.289 rows=244 loops=1)
                                 Join Filter: (t.id = ci.movie_id)
                                 ->  Nested Loop  (cost=1002.29..6463.70 rows=1 width=33) (actual time=25.956..26.141 rows=9 loops=1)
                                       ->  Nested Loop  (cost=1002.15..6463.52 rows=1 width=37) (actual time=25.948..26.121 rows=9 loops=1)
                                             Join Filter: (t.id = mi.movie_id)
                                             ->  Gather  (cost=1001.71..6430.87 rows=1 width=29) (actual time=25.793..25.855 rows=6 loops=1)
                                                   Workers Planned: 1
                                                   Workers Launched: 1
                                                   ->  Nested Loop  (cost=1.71..5430.77 rows=1 width=29) (actual time=15.350..23.959 rows=3 loops=2)
                                                         ->  Nested Loop  (cost=1.29..5428.89 rows=1 width=33) (actual time=15.293..23.601 rows=42 loops=2)
                                                               Join Filter: (t.id = mk.movie_id)
                                                               ->  Nested Loop  (cost=0.86..5425.84 rows=1 width=25) (actual time=15.270..23.545 rows=2 loops=2)
                                                                     ->  Nested Loop  (cost=0.43..5416.18 rows=6 width=4) (actual time=15.070..22.823 rows=50 loops=2)
                                                                           ->  Parallel Seq Scan on company_name cn  (cost=0.00..5068.50 rows=1 width=4) (actual time=15.044..22.527 rows=0 loops=2)
                                                                                 Filter: (((country_code)::text = '[us]'::text) AND ((name)::text = 'DreamWorks Animation'::text))
                                                                                 Rows Removed by Filter: 117498
                                                                           ->  Index Scan using company_id_movie_companies on movie_companies mc  (cost=0.43..346.37 rows=130 width=8) (actual time=0.048..0.575 rows=99 loops=1)
                                                                                 Index Cond: (company_id = cn.id)
                                                                     ->  Index Scan using title_pkey on title t  (cost=0.43..1.60 rows=1 width=21) (actual time=0.014..0.014 rows=0 loops=99)
                                                                           Index Cond: (id = mc.movie_id)
                                                                           Filter: ((production_year > 2010) AND ((title)::text ~~ 'Kung Fu Panda%'::text))
                                                                           Rows Removed by Filter: 1
                                                               ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..2.47 rows=47 width=8) (actual time=0.018..0.023 rows=21 loops=4)
                                                                     Index Cond: (movie_id = mc.movie_id)
                                                         ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..1.46 rows=1 width=4) (actual time=0.008..0.008 rows=0 loops=83)
                                                               Index Cond: (id = mk.keyword_id)
                                                               Filter: ((keyword)::text = ANY ('{hero,martial-arts,hand-to-hand-combat,computer-animated-movie}'::text[]))
                                                               Rows Removed by Filter: 1
                                             ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..32.63 rows=1 width=8) (actual time=0.028..0.052 rows=2 loops=6)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%201%'::text) OR ((info)::text ~~ 'USA:%201%'::text)))
                                                   Rows Removed by Filter: 89
                                       ->  Index Scan using info_type_pkey on info_type it  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=9)
                                             Index Cond: (id = mi.info_type_id)
                                             Filter: ((info)::text = 'release dates'::text)
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..39.83 rows=1 width=16) (actual time=0.010..0.123 rows=27 loops=9)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                       Rows Removed by Filter: 91
                           ->  Index Scan using name_pkey on name n  (cost=0.43..1.80 rows=1 width=19) (actual time=0.004..0.004 rows=0 loops=244)
                                 Index Cond: (id = ci.person_id)
                                 Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                 Rows Removed by Filter: 1
                     ->  Index Scan using role_type_pkey on role_type rt  (cost=0.14..0.16 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=9)
                           Index Cond: (id = ci.role_id)
                           Filter: ((role)::text = 'actress'::text)
               ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.08 rows=2 width=4) (actual time=0.004..0.005 rows=5 loops=9)
                     Index Cond: (person_id = ci.person_id)
                     Heap Fetches: 45
         ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..1.70 rows=1 width=20) (actual time=0.001..0.001 rows=1 loops=45)
               Index Cond: (id = ci.person_role_id)
 Planning Time: 79.755 ms
 Execution Time: 28.875 ms
(59 rows)

SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7497.91..7497.92 rows=1 width=128) (actual time=2619.127..2619.127 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.02..7497.90 rows=1 width=80) (actual time=24.247..2616.893 rows=4407 loops=1)
         Join Filter: (mi.movie_id = t.id)
         ->  Nested Loop  (cost=1011.59..7497.08 rows=1 width=79) (actual time=24.209..2583.456 rows=4407 loops=1)
               ->  Nested Loop  (cost=1011.16..7496.06 rows=1 width=68) (actual time=12.302..2512.288 rows=7112 loops=1)
                     ->  Nested Loop  (cost=1011.02..7495.88 rows=1 width=72) (actual time=12.293..2499.661 rows=7740 loops=1)
                           Join Filter: (mi.movie_id = ci.movie_id)
                           ->  Gather  (cost=1010.46..7466.93 rows=1 width=64) (actual time=6.220..626.658 rows=12260 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Nested Loop  (cost=10.46..6466.83 rows=1 width=64) (actual time=6.049..850.710 rows=4087 loops=3)
                                       Join Filter: (mi_idx.movie_id = mi.movie_id)
                                       ->  Hash Join  (cost=10.02..6431.17 rows=2 width=14) (actual time=4.637..194.649 rows=16920 loops=3)
                                             Hash Cond: (mi_idx.info_type_id = it2.id)
                                             ->  Nested Loop  (cost=7.60..6428.17 rows=211 width=18) (actual time=4.556..186.735 rows=50907 loops=3)
                                                   ->  Nested Loop  (cost=7.17..6372.12 rows=70 width=4) (actual time=4.514..93.628 rows=20699 loops=3)
                                                         ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4207.64 rows=2 width=4) (actual time=0.215..18.993 rows=2 loops=3)
                                                               Filter: ((keyword)::text = ANY ('{murder,blood,gore,death,female-nudity}'::text[]))
                                                               Rows Removed by Filter: 44722
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1079.25 rows=299 width=8) (actual time=3.469..43.247 rows=12419 loops=5)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=12389
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=2.013..2.013 rows=12419 loops=5)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.77 rows=3 width=14) (actual time=0.004..0.004 rows=2 loops=62096)
                                                         Index Cond: (movie_id = mk.movie_id)
                                             ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.025..0.026 rows=1 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.020..0.021 rows=1 loops=3)
                                                         Filter: ((info)::text = 'votes'::text)
                                                         Rows Removed by Filter: 112
                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..17.82 rows=1 width=50) (actual time=0.038..0.039 rows=0 loops=50760)
                                             Index Cond: (movie_id = mk.movie_id)
                                             Filter: ((info)::text = 'Horror'::text)
                                             Rows Removed by Filter: 56
                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..28.93 rows=1 width=8) (actual time=0.125..0.152 rows=1 loops=12260)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                 Rows Removed by Filter: 47
                     ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=7740)
                           Index Cond: (id = mi.info_type_id)
                           Filter: ((info)::text = 'genres'::text)
                           Rows Removed by Filter: 0
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.02 rows=1 width=19) (actual time=0.010..0.010 rows=1 loops=7112)
                     Index Cond: (id = ci.person_id)
                     Filter: ((gender)::text = 'm'::text)
                     Rows Removed by Filter: 0
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.81 rows=1 width=21) (actual time=0.007..0.007 rows=1 loops=4407)
               Index Cond: (id = mk.movie_id)
 Planning Time: 12.890 ms
 Execution Time: 2619.516 ms
(51 rows)

SET
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7478.04..7478.05 rows=1 width=128) (actual time=246.515..246.515 rows=1 loops=1)
   ->  Nested Loop  (cost=1009.74..7478.03 rows=1 width=80) (actual time=142.092..246.496 rows=6 loops=1)
         ->  Nested Loop  (cost=1009.31..7477.01 rows=1 width=69) (actual time=142.061..246.415 rows=6 loops=1)
               ->  Nested Loop  (cost=1009.17..7476.82 rows=1 width=73) (actual time=142.052..246.381 rows=18 loops=1)
                     Join Filter: (t.id = mi_idx.movie_id)
                     ->  Nested Loop  (cost=1008.74..7476.02 rows=1 width=79) (actual time=142.016..246.310 rows=6 loops=1)
                           ->  Nested Loop  (cost=1008.60..7475.83 rows=1 width=83) (actual time=141.995..246.277 rows=6 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=1008.16..7458.00 rows=1 width=33) (actual time=141.889..245.975 rows=6 loops=1)
                                       Join Filter: (t.id = ci.movie_id)
                                       ->  Gather  (cost=1007.60..7429.06 rows=1 width=25) (actual time=141.591..249.668 rows=9 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Nested Loop  (cost=7.60..6428.96 rows=1 width=25) (actual time=148.419..199.785 rows=3 loops=3)
                                                   ->  Nested Loop  (cost=7.17..6372.12 rows=70 width=4) (actual time=4.409..96.165 rows=20699 loops=3)
                                                         ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4207.64 rows=2 width=4) (actual time=0.166..23.127 rows=2 loops=3)
                                                               Filter: ((keyword)::text = ANY ('{murder,blood,gore,death,female-nudity}'::text[]))
                                                               Rows Removed by Filter: 44722
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1079.25 rows=299 width=8) (actual time=3.445..42.510 rows=12419 loops=5)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=12389
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.993..1.993 rows=12419 loops=5)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.81 rows=1 width=21) (actual time=0.005..0.005 rows=0 loops=62096)
                                                         Index Cond: (id = mk.movie_id)
                                                         Filter: ((production_year > 2010) AND ((title)::text ~~ 'Vampire%'::text))
                                                         Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..28.93 rows=1 width=8) (actual time=0.069..0.082 rows=1 loops=9)
                                             Index Cond: (movie_id = mk.movie_id)
                                             Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                             Rows Removed by Filter: 21
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..17.82 rows=1 width=50) (actual time=0.049..0.049 rows=1 loops=6)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = 'Horror'::text)
                                       Rows Removed by Filter: 20
                           ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=6)
                                 Index Cond: (id = mi.info_type_id)
                                 Filter: ((info)::text = 'genres'::text)
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.77 rows=3 width=14) (actual time=0.010..0.010 rows=3 loops=6)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=18)
                     Index Cond: (id = mi_idx.info_type_id)
                     Filter: ((info)::text = 'votes'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using name_pkey on name n  (cost=0.43..1.02 rows=1 width=19) (actual time=0.013..0.013 rows=1 loops=6)
               Index Cond: (id = ci.person_id)
               Filter: ((gender)::text = 'm'::text)
 Planning Time: 13.747 ms
 Execution Time: 251.206 ms
(49 rows)

SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8700.85..8700.86 rows=1 width=128) (actual time=9067.800..9067.800 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.02..8700.84 rows=1 width=80) (actual time=7.722..9056.248 rows=26153 loops=1)
         Join Filter: (mi.movie_id = t.id)
         ->  Nested Loop  (cost=1011.59..8700.02 rows=1 width=79) (actual time=7.695..8934.594 rows=26153 loops=1)
               ->  Nested Loop  (cost=1011.16..8699.00 rows=1 width=68) (actual time=7.660..8660.915 rows=42900 loops=1)
                     Join Filter: (mi.movie_id = ci.movie_id)
                     ->  Gather  (cost=1010.60..8670.06 rows=1 width=60) (actual time=6.052..785.713 rows=63386 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop  (cost=10.60..7669.96 rows=1 width=60) (actual time=4.770..1270.057 rows=21129 loops=3)
                                 ->  Nested Loop  (cost=10.46..7669.77 rows=1 width=64) (actual time=4.762..1242.541 rows=22577 loops=3)
                                       Join Filter: (mi_idx.movie_id = mi.movie_id)
                                       ->  Hash Join  (cost=10.02..7633.70 rows=2 width=14) (actual time=4.655..243.982 rows=21234 loops=3)
                                             Hash Cond: (mi_idx.info_type_id = it2.id)
                                             ->  Nested Loop  (cost=7.60..7630.47 rows=294 width=18) (actual time=4.566..233.947 rows=63896 loops=3)
                                                   ->  Nested Loop  (cost=7.17..7552.00 rows=98 width=4) (actual time=4.533..115.385 rows=25571 loops=3)
                                                         ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4347.40 rows=3 width=4) (actual time=0.275..22.512 rows=2 loops=3)
                                                               Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                               Rows Removed by Filter: 44721
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1065.21 rows=299 width=8) (actual time=3.158..38.456 rows=10959 loops=7)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=12389
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.824..1.824 rows=10959 loops=7)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.77 rows=3 width=14) (actual time=0.004..0.004 rows=2 loops=76714)
                                                         Index Cond: (movie_id = mk.movie_id)
                                             ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.028..0.028 rows=1 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.022..0.023 rows=1 loops=3)
                                                         Filter: ((info)::text = 'votes'::text)
                                                         Rows Removed by Filter: 112
                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..18.03 rows=1 width=50) (actual time=0.045..0.047 rows=1 loops=63701)
                                             Index Cond: (movie_id = mk.movie_id)
                                             Filter: ((info)::text = ANY ('{Horror,Action,Sci-Fi,Thriller,Crime,War}'::text[]))
                                             Rows Removed by Filter: 58
                                 ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=67732)
                                       Index Cond: (id = mi.info_type_id)
                                       Filter: ((info)::text = 'genres'::text)
                                       Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..28.93 rows=1 width=8) (actual time=0.098..0.124 rows=1 loops=63386)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                           Rows Removed by Filter: 63
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.02 rows=1 width=19) (actual time=0.006..0.006 rows=1 loops=42900)
                     Index Cond: (id = ci.person_id)
                     Filter: ((gender)::text = 'm'::text)
                     Rows Removed by Filter: 0
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.81 rows=1 width=21) (actual time=0.004..0.004 rows=1 loops=26153)
               Index Cond: (id = mk.movie_id)
 Planning Time: 13.784 ms
 Execution Time: 9068.195 ms
(51 rows)

SET
                                                                                                   QUERY PLAN                                                                                                   
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=10239.97..10239.98 rows=1 width=128) (actual time=1133.347..1133.347 rows=1 loops=1)
   ->  Nested Loop  (cost=5.26..10239.96 rows=1 width=54) (actual time=12.398..1132.624 rows=1728 loops=1)
         ->  Nested Loop  (cost=4.83..10233.55 rows=14 width=42) (actual time=1.507..1009.508 rows=58947 loops=1)
               ->  Nested Loop  (cost=4.40..10227.18 rows=14 width=31) (actual time=1.482..706.279 rows=58947 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=3.84..10225.20 rows=1 width=39) (actual time=1.444..563.658 rows=326 loops=1)
                           ->  Nested Loop  (cost=3.42..10223.39 rows=4 width=43) (actual time=0.538..376.142 rows=79039 loops=1)
                                 ->  Nested Loop  (cost=2.98..10219.72 rows=2 width=35) (actual time=0.508..347.536 rows=647 loops=1)
                                       Join Filter: (kt.id = t.kind_id)
                                       Rows Removed by Join Filter: 5355
                                       ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.015..0.016 rows=1 loops=1)
                                             Filter: ((kind)::text = 'movie'::text)
                                             Rows Removed by Filter: 6
                                       ->  Nested Loop  (cost=2.98..10218.42 rows=17 width=39) (actual time=0.384..346.885 rows=6002 loops=1)
                                             Join Filter: (cc.movie_id = t.id)
                                             ->  Nested Loop  (cost=2.55..10175.60 rows=32 width=14) (actual time=0.267..259.353 rows=17898 loops=1)
                                                   Join Filter: (it2.id = mi_idx.info_type_id)
                                                   Rows Removed by Join Filter: 8960
                                                   ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.010..0.013 rows=1 loops=1)
                                                         Filter: ((info)::text = 'rating'::text)
                                                         Rows Removed by Filter: 112
                                                   ->  Nested Loop  (cost=2.55..10128.32 rows=3590 width=18) (actual time=0.146..255.873 rows=26858 loops=1)
                                                         ->  Hash Join  (cost=2.12..2996.88 rows=8443 width=4) (actual time=0.077..48.552 rows=85941 loops=1)
                                                               Hash Cond: (cc.status_id = cct2.id)
                                                               ->  Hash Join  (cost=1.06..2813.24 rows=33772 width=8) (actual time=0.030..34.186 rows=85941 loops=1)
                                                                     Hash Cond: (cc.subject_id = cct1.id)
                                                                     ->  Seq Scan on complete_cast cc  (cost=0.00..2081.86 rows=135086 width=12) (actual time=0.011..12.152 rows=135086 loops=1)
                                                                     ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=1)
                                                                                 Filter: ((kind)::text = 'cast'::text)
                                                                                 Rows Removed by Filter: 3
                                                               ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.021..0.021 rows=2 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.015..0.016 rows=2 loops=1)
                                                                           Filter: ((kind)::text ~~ '%complete%'::text)
                                                                           Rows Removed by Filter: 2
                                                         ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.83 rows=1 width=14) (actual time=0.002..0.002 rows=0 loops=85941)
                                                               Index Cond: (movie_id = cc.movie_id)
                                                               Filter: ((info)::text > '7.0'::text)
                                                               Rows Removed by Filter: 2
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..1.33 rows=1 width=25) (actual time=0.005..0.005 rows=0 loops=17898)
                                                   Index Cond: (id = mi_idx.movie_id)
                                                   Filter: (production_year > 2000)
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.36 rows=47 width=8) (actual time=0.010..0.029 rows=122 loops=647)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.45 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=79039)
                                 Index Cond: (id = mk.keyword_id)
                                 Filter: ((keyword)::text = ANY ('{superhero,marvel-comics,based-on-comic,tv-special,fight,violence,magnet,web,claw,laser}'::text[]))
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.011..0.403 rows=181 loops=326)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=19) (actual time=0.005..0.005 rows=1 loops=58947)
                     Index Cond: (id = ci.person_id)
         ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=20) (actual time=0.002..0.002 rows=0 loops=58947)
               Index Cond: (id = ci.person_role_id)
               Filter: ((name IS NOT NULL) AND (((name)::text ~~ '%man%'::text) OR ((name)::text ~~ '%Man%'::text)))
               Rows Removed by Filter: 0
 Planning Time: 68.954 ms
 Execution Time: 1133.585 ms
(61 rows)

SET
                                                                                                      QUERY PLAN                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7388.77..7388.78 rows=1 width=96) (actual time=280.102..280.103 rows=1 loops=1)
   ->  Nested Loop  (cost=9.45..7388.76 rows=1 width=39) (actual time=30.700..280.058 rows=93 loops=1)
         Join Filter: (cct1.id = cc.subject_id)
         Rows Removed by Join Filter: 87
         ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.013..0.014 rows=1 loops=1)
               Filter: ((kind)::text = 'cast'::text)
               Rows Removed by Filter: 3
         ->  Nested Loop  (cost=9.45..7387.70 rows=1 width=43) (actual time=30.684..280.018 rows=180 loops=1)
               Join Filter: (cct2.id = cc.status_id)
               Rows Removed by Join Filter: 180
               ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.004 rows=2 loops=1)
                     Filter: ((kind)::text ~~ '%complete%'::text)
                     Rows Removed by Filter: 2
               ->  Nested Loop  (cost=9.45..7386.64 rows=1 width=47) (actual time=21.857..139.983 rows=180 loops=2)
                     ->  Nested Loop  (cost=9.03..7386.16 rows=1 width=55) (actual time=19.262..139.537 rows=191 loops=2)
                           ->  Nested Loop  (cost=8.60..7385.70 rows=1 width=59) (actual time=19.246..138.256 rows=191 loops=2)
                                 ->  Nested Loop  (cost=8.17..7379.30 rows=14 width=47) (actual time=19.183..124.207 rows=7981 loops=2)
                                       Join Filter: (t.id = ci.movie_id)
                                       ->  Nested Loop  (cost=7.61..7377.31 rows=1 width=35) (actual time=19.164..106.951 rows=31 loops=2)
                                             Join Filter: (kt.id = t.kind_id)
                                             Rows Removed by Join Filter: 167
                                             ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=2)
                                                   Filter: ((kind)::text = 'movie'::text)
                                                   Rows Removed by Filter: 6
                                             ->  Nested Loop  (cost=7.61..7376.21 rows=1 width=39) (actual time=0.822..106.915 rows=198 loops=2)
                                                   ->  Nested Loop  (cost=7.18..7375.73 rows=1 width=14) (actual time=0.806..104.080 rows=313 loops=2)
                                                         Join Filter: (mi_idx.info_type_id = it2.id)
                                                         Rows Removed by Join Filter: 612
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.011 rows=1 loops=2)
                                                               Filter: ((info)::text = 'rating'::text)
                                                               Rows Removed by Filter: 112
                                                         ->  Nested Loop  (cost=7.18..7373.13 rows=15 width=18) (actual time=0.688..103.948 rows=925 loops=2)
                                                               ->  Nested Loop  (cost=6.75..7304.56 rows=135 width=4) (actual time=0.586..57.346 rows=9984 loops=2)
                                                                     ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=0.074..20.958 rows=4 loops=2)
                                                                           Filter: ((keyword)::text = ANY ('{superhero,marvel-comics,based-on-comic,fight}'::text[]))
                                                                           Rows Removed by Filter: 134166
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1082.76 rows=299 width=8) (actual time=0.691..8.817 rows=2496 loops=8)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=15372
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.387..0.387 rows=2496 loops=8)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=14) (actual time=0.004..0.004 rows=0 loops=19968)
                                                                     Index Cond: (movie_id = mk.movie_id)
                                                                     Filter: ((info)::text > '8.0'::text)
                                                                     Rows Removed by Filter: 2
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.009..0.009 rows=1 loops=626)
                                                         Index Cond: (id = mk.movie_id)
                                                         Filter: (production_year > 2005)
                                                         Rows Removed by Filter: 0
                                       ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.013..0.515 rows=257 loops=62)
                                             Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=20) (actual time=0.002..0.002 rows=0 loops=15962)
                                       Index Cond: (id = ci.person_role_id)
                                       Filter: ((name IS NOT NULL) AND (((name)::text ~~ '%man%'::text) OR ((name)::text ~~ '%Man%'::text)))
                                       Rows Removed by Filter: 0
                           ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=382)
                                 Index Cond: (id = ci.person_id)
                                 Heap Fetches: 382
                     ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.002..0.002 rows=1 loops=382)
                           Index Cond: (movie_id = t.id)
 Planning Time: 70.666 ms
 Execution Time: 280.316 ms
(62 rows)

SET
                                                                                                   QUERY PLAN                                                                                                   
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=14668.28..14668.29 rows=1 width=96) (actual time=1535.484..1535.484 rows=1 loops=1)
   ->  Nested Loop  (cost=9.45..14668.27 rows=1 width=39) (actual time=8.223..1533.679 rows=5400 loops=1)
         ->  Nested Loop  (cost=9.02..14667.82 rows=1 width=43) (actual time=8.195..1489.435 rows=5400 loops=1)
               Join Filter: (it2.id = mi_idx.info_type_id)
               Rows Removed by Join Filter: 11196
               ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.013..0.015 rows=1 loops=1)
                     Filter: ((info)::text = 'rating'::text)
                     Rows Removed by Filter: 112
               ->  Nested Loop  (cost=9.02..14665.39 rows=1 width=47) (actual time=8.179..1487.489 rows=16596 loops=1)
                     Join Filter: (t.id = mi_idx.movie_id)
                     ->  Nested Loop  (cost=8.59..14664.88 rows=1 width=53) (actual time=8.159..1465.352 rows=5406 loops=1)
                           ->  Nested Loop  (cost=8.16..14658.47 rows=14 width=41) (actual time=7.857..1038.672 rows=189844 loops=1)
                                 Join Filter: (t.id = ci.movie_id)
                                 ->  Nested Loop  (cost=7.60..14656.48 rows=1 width=29) (actual time=7.821..498.429 rows=1267 loops=1)
                                       Join Filter: (cct2.id = cc.status_id)
                                       Rows Removed by Join Filter: 1267
                                       ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.008..0.009 rows=2 loops=1)
                                             Filter: ((kind)::text ~~ '%complete%'::text)
                                             Rows Removed by Filter: 2
                                       ->  Nested Loop  (cost=7.60..14655.42 rows=1 width=33) (actual time=5.759..248.939 rows=1267 loops=2)
                                             Join Filter: (cct1.id = cc.subject_id)
                                             Rows Removed by Join Filter: 218
                                             ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=2)
                                                   Filter: ((kind)::text = 'cast'::text)
                                                   Rows Removed by Filter: 3
                                             ->  Nested Loop  (cost=7.60..14654.36 rows=1 width=37) (actual time=5.756..248.591 rows=1485 loops=2)
                                                   ->  Nested Loop  (cost=7.18..14641.93 rows=26 width=25) (actual time=5.675..234.861 rows=5032 loops=2)
                                                         Join Filter: (kt.id = t.kind_id)
                                                         Rows Removed by Join Filter: 5581
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.004..0.005 rows=1 loops=2)
                                                               Filter: ((kind)::text = 'movie'::text)
                                                               Rows Removed by Filter: 6
                                                         ->  Nested Loop  (cost=7.18..14638.55 rows=183 width=29) (actual time=0.653..233.481 rows=10613 loops=2)
                                                               ->  Nested Loop  (cost=6.75..14474.11 rows=337 width=4) (actual time=0.636..109.675 rows=24091 loops=2)
                                                                     ->  Seq Scan on keyword k  (cost=0.00..3967.82 rows=10 width=4) (actual time=0.135..36.355 rows=10 loops=2)
                                                                           Filter: ((keyword)::text = ANY ('{superhero,marvel-comics,based-on-comic,tv-special,fight,violence,magnet,web,claw,laser}'::text[]))
                                                                           Rows Removed by Filter: 134160
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1047.64 rows=299 width=8) (actual time=0.650..7.031 rows=2409 loops=20)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=34254
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.365..0.365 rows=2409 loops=20)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.005..0.005 rows=0 loops=48182)
                                                                     Index Cond: (id = mk.movie_id)
                                                                     Filter: (production_year > 2000)
                                                                     Rows Removed by Filter: 1
                                                   ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.002..0.002 rows=0 loops=10064)
                                                         Index Cond: (movie_id = t.id)
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.012..0.400 rows=150 loops=1267)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=20) (actual time=0.002..0.002 rows=0 loops=189844)
                                 Index Cond: (id = ci.person_role_id)
                                 Filter: ((name IS NOT NULL) AND (((name)::text ~~ '%man%'::text) OR ((name)::text ~~ '%Man%'::text)))
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.48 rows=3 width=14) (actual time=0.003..0.003 rows=3 loops=5406)
                           Index Cond: (movie_id = ci.movie_id)
         ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=5400)
               Index Cond: (id = ci.person_id)
               Heap Fetches: 5400
 Planning Time: 68.887 ms
 Execution Time: 1535.709 ms
(61 rows)

SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3308.26..3308.27 rows=1 width=96) (actual time=26.516..26.516 rows=1 loops=1)
   ->  Nested Loop  (cost=6.00..3308.26 rows=1 width=118) (actual time=3.511..26.394 rows=477 loops=1)
         ->  Nested Loop  (cost=5.58..3307.80 rows=1 width=103) (actual time=3.485..24.326 rows=1106 loops=1)
               Join Filter: (ct.id = mc.company_type_id)
               Rows Removed by Join Filter: 57
               ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.016..0.017 rows=1 loops=1)
                     Filter: ((kind)::text = 'production companies'::text)
                     Rows Removed by Filter: 3
               ->  Nested Loop  (cost=5.58..3306.72 rows=2 width=107) (actual time=3.467..24.184 rows=1163 loops=1)
                     Join Filter: (ml.movie_id = mc.movie_id)
                     ->  Nested Loop  (cost=5.15..3306.16 rows=1 width=119) (actual time=3.444..23.477 rows=154 loops=1)
                           ->  Nested Loop  (cost=4.73..2463.07 rows=1911 width=123) (actual time=3.408..20.362 rows=1853 loops=1)
                                 Join Filter: (ml.movie_id = mk.movie_id)
                                 ->  Nested Loop  (cost=4.29..2380.91 rows=41 width=115) (actual time=3.384..19.423 rows=213 loops=1)
                                       Join Filter: (ml.movie_id = mi.movie_id)
                                       ->  Nested Loop  (cost=3.86..2105.18 rows=121 width=111) (actual time=0.966..14.258 rows=179 loops=1)
                                             Join Filter: (ml.movie_id = t.id)
                                             ->  Hash Join  (cost=3.43..1527.00 rows=333 width=90) (actual time=0.942..13.265 rows=189 loops=1)
                                                   Hash Cond: (ml.link_type_id = lt.id)
                                                   ->  Merge Join  (cost=2.19..1506.31 rows=6002 width=12) (actual time=0.065..12.980 rows=3346 loops=1)
                                                         Merge Cond: (cc.movie_id = ml.movie_id)
                                                         ->  Nested Loop  (cost=0.42..9294.58 rows=16886 width=4) (actual time=0.029..5.121 rows=5561 loops=1)
                                                               Join Filter: (cc.subject_id = cct1.id)
                                                               Rows Removed by Join Filter: 2227
                                                               ->  Nested Loop  (cost=0.42..8364.79 rows=33772 width=8) (actual time=0.021..3.734 rows=5561 loops=1)
                                                                     Join Filter: (cct2.id = cc.status_id)
                                                                     Rows Removed by Join Filter: 432
                                                                     ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..6337.45 rows=135086 width=12) (actual time=0.008..2.330 rows=5993 loops=1)
                                                                     ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=5993)
                                                                           ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                                                                 Filter: ((kind)::text = 'complete'::text)
                                                                                 Rows Removed by Filter: 3
                                                               ->  Materialize  (cost=0.00..1.06 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=5561)
                                                                     ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=2 width=4) (actual time=0.002..0.002 rows=2 loops=1)
                                                                           Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
                                                         ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..959.51 rows=29997 width=8) (actual time=0.007..5.262 rows=30638 loops=1)
                                                   ->  Hash  (cost=1.23..1.23 rows=1 width=86) (actual time=0.018..0.018 rows=2 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.009..0.013 rows=2 loops=1)
                                                               Filter: ((link)::text ~~ '%follow%'::text)
                                                               Rows Removed by Filter: 16
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..1.72 rows=1 width=21) (actual time=0.005..0.005 rows=1 loops=189)
                                                   Index Cond: (id = cc.movie_id)
                                                   Filter: ((production_year >= 1950) AND (production_year <= 2000))
                                                   Rows Removed by Filter: 0
                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.27 rows=1 width=4) (actual time=0.027..0.028 rows=1 loops=179)
                                             Index Cond: (movie_id = t.id)
                                             Filter: ((info)::text = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
                                             Rows Removed by Filter: 27
                                 ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.42 rows=47 width=8) (actual time=0.002..0.003 rows=9 loops=213)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=1853)
                                 Index Cond: (id = mk.keyword_id)
                                 Filter: ((keyword)::text = 'sequel'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=2 width=12) (actual time=0.002..0.004 rows=8 loops=154)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: (note IS NULL)
                           Rows Removed by Filter: 1
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=1106)
               Index Cond: (id = mc.company_id)
               Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
               Rows Removed by Filter: 1
 Planning Time: 70.388 ms
 Execution Time: 26.770 ms
(65 rows)

SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=2420.10..2420.11 rows=1 width=96) (actual time=35.884..35.884 rows=1 loops=1)
   ->  Nested Loop  (cost=3.52..2420.10 rows=1 width=118) (actual time=25.654..35.815 rows=247 loops=1)
         Join Filter: (ml.movie_id = mi.movie_id)
         ->  Nested Loop  (cost=3.08..2418.52 rows=1 width=138) (actual time=25.630..35.146 rows=95 loops=1)
               ->  Nested Loop  (cost=2.66..2397.77 rows=47 width=142) (actual time=25.582..33.984 rows=703 loops=1)
                     Join Filter: (ml.movie_id = mk.movie_id)
                     ->  Nested Loop  (cost=2.23..2395.81 rows=1 width=134) (actual time=25.561..33.610 rows=95 loops=1)
                           ->  Nested Loop  (cost=1.81..2395.35 rows=1 width=119) (actual time=25.547..33.248 rows=190 loops=1)
                                 Join Filter: (ml.movie_id = t.id)
                                 ->  Nested Loop  (cost=1.38..2375.69 rows=33 width=98) (actual time=1.920..31.858 rows=705 loops=1)
                                       Join Filter: (lt.id = ml.link_type_id)
                                       Rows Removed by Join Filter: 10769
                                       ->  Merge Join  (cost=1.38..2365.44 rows=601 width=20) (actual time=0.443..29.889 rows=5794 loops=1)
                                             Merge Cond: (mc.movie_id = ml.movie_id)
                                             ->  Nested Loop  (cost=0.85..33746.92 rows=10432 width=12) (actual time=0.408..22.269 rows=4702 loops=1)
                                                   Join Filter: (ct.id = mc.company_type_id)
                                                   Rows Removed by Join Filter: 109
                                                   ->  Nested Loop  (cost=0.85..33119.98 rows=41726 width=16) (actual time=0.403..21.156 rows=4811 loops=1)
                                                         ->  Nested Loop  (cost=0.42..11067.56 rows=16886 width=4) (actual time=0.021..5.060 rows=5561 loops=1)
                                                               Join Filter: (cc.status_id = cct2.id)
                                                               Rows Removed by Join Filter: 432
                                                               ->  Nested Loop  (cost=0.42..10053.37 rows=67543 width=8) (actual time=0.016..3.756 rows=5993 loops=1)
                                                                     Join Filter: (cct1.id = cc.subject_id)
                                                                     Rows Removed by Join Filter: 2305
                                                                     ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..6337.45 rows=135086 width=12) (actual time=0.005..1.920 rows=5993 loops=1)
                                                                     ->  Materialize  (cost=0.00..1.06 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=5993)
                                                                           ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=2 width=4) (actual time=0.005..0.005 rows=2 loops=1)
                                                                                 Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
                                                               ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=5993)
                                                                     ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1)
                                                                           Filter: ((kind)::text = 'complete'::text)
                                                                           Rows Removed by Filter: 3
                                                         ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..1.29 rows=2 width=12) (actual time=0.002..0.003 rows=1 loops=5561)
                                                               Index Cond: (movie_id = cc.movie_id)
                                                               Filter: (note IS NULL)
                                                               Rows Removed by Filter: 2
                                                   ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=4811)
                                                         ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=1)
                                                               Filter: ((kind)::text = 'production companies'::text)
                                                               Rows Removed by Filter: 3
                                             ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..959.51 rows=29997 width=8) (actual time=0.008..4.608 rows=33634 loops=1)
                                       ->  Materialize  (cost=0.00..1.23 rows=1 width=86) (actual time=0.000..0.000 rows=2 loops=5794)
                                             ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.003..0.006 rows=2 loops=1)
                                                   Filter: ((link)::text ~~ '%follow%'::text)
                                                   Rows Removed by Filter: 16
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.58 rows=1 width=21) (actual time=0.002..0.002 rows=0 loops=705)
                                       Index Cond: (id = mc.movie_id)
                                       Filter: (production_year = 1998)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=190)
                                 Index Cond: (id = mc.company_id)
                                 Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.37 rows=47 width=8) (actual time=0.002..0.003 rows=7 loops=95)
                           Index Cond: (movie_id = mc.movie_id)
               ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=703)
                     Index Cond: (id = mk.keyword_id)
                     Filter: ((keyword)::text = 'sequel'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.56 rows=1 width=4) (actual time=0.005..0.006 rows=3 loops=95)
               Index Cond: (movie_id = mk.movie_id)
               Filter: ((info)::text = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
               Rows Removed by Filter: 10
 Planning Time: 69.530 ms
 Execution Time: 36.112 ms
(65 rows)

SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3422.73..3422.74 rows=1 width=96) (actual time=41.377..41.378 rows=1 loops=1)
   ->  Nested Loop  (cost=3.38..3422.71 rows=3 width=118) (actual time=6.141..41.219 rows=743 loops=1)
         Join Filter: (ml.movie_id = mi.movie_id)
         ->  Nested Loop  (cost=2.94..3420.85 rows=1 width=138) (actual time=6.120..39.317 rows=172 loops=1)
               Join Filter: (mc.company_type_id = ct.id)
               Rows Removed by Join Filter: 19
               ->  Nested Loop  (cost=2.94..3419.79 rows=1 width=142) (actual time=6.116..39.114 rows=191 loops=1)
                     ->  Nested Loop  (cost=2.52..3378.74 rows=93 width=146) (actual time=3.393..33.386 rows=3396 loops=1)
                           Join Filter: (ml.movie_id = mk.movie_id)
                           ->  Nested Loop  (cost=2.09..3374.90 rows=2 width=138) (actual time=3.366..31.786 rows=298 loops=1)
                                 Join Filter: (lt.id = ml.link_type_id)
                                 Rows Removed by Join Filter: 1113
                                 ->  Merge Join  (cost=2.09..3373.07 rows=40 width=60) (actual time=2.468..31.507 rows=720 loops=1)
                                       Merge Cond: (t.id = ml.movie_id)
                                       ->  Nested Loop  (cost=1.70..32069.95 rows=3391 width=52) (actual time=1.346..25.585 rows=161 loops=1)
                                             ->  Nested Loop  (cost=1.27..29418.97 rows=4524 width=31) (actual time=1.323..23.967 rows=174 loops=1)
                                                   ->  Nested Loop  (cost=0.85..19898.64 rows=20863 width=16) (actual time=0.265..14.382 rows=3375 loops=1)
                                                         ->  Nested Loop  (cost=0.42..8872.43 rows=8443 width=4) (actual time=0.025..4.620 rows=3834 loops=1)
                                                               Join Filter: (cct2.id = cc.status_id)
                                                               Rows Removed by Join Filter: 372
                                                               ->  Nested Loop  (cost=0.42..8364.79 rows=33772 width=8) (actual time=0.015..3.702 rows=3834 loops=1)
                                                                     Join Filter: (cct1.id = cc.subject_id)
                                                                     Rows Removed by Join Filter: 2385
                                                                     ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..6337.45 rows=135086 width=12) (actual time=0.004..2.055 rows=6219 loops=1)
                                                                     ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=6219)
                                                                           ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.004..0.005 rows=1 loops=1)
                                                                                 Filter: ((kind)::text = 'cast'::text)
                                                                                 Rows Removed by Filter: 3
                                                               ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=3834)
                                                                     ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.007..0.008 rows=2 loops=1)
                                                                           Filter: ((kind)::text ~~ 'complete%'::text)
                                                                           Rows Removed by Filter: 2
                                                         ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..1.29 rows=2 width=12) (actual time=0.002..0.002 rows=1 loops=3834)
                                                               Index Cond: (movie_id = cc.movie_id)
                                                               Filter: (note IS NULL)
                                                               Rows Removed by Filter: 2
                                                   ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=3375)
                                                         Index Cond: (id = mc.company_id)
                                                         Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..0.59 rows=1 width=21) (actual time=0.009..0.009 rows=1 loops=174)
                                                   Index Cond: (id = mc.movie_id)
                                                   Filter: ((production_year >= 1950) AND (production_year <= 2010))
                                                   Rows Removed by Filter: 0
                                       ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..959.51 rows=29997 width=8) (actual time=0.008..3.913 rows=30313 loops=1)
                                 ->  Materialize  (cost=0.00..1.23 rows=1 width=86) (actual time=0.000..0.000 rows=2 loops=720)
                                       ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.003..0.006 rows=2 loops=1)
                                             Filter: ((link)::text ~~ '%follow%'::text)
                                             Rows Removed by Filter: 16
                           ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.33 rows=47 width=8) (actual time=0.002..0.003 rows=11 loops=298)
                                 Index Cond: (movie_id = t.id)
                     ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=3396)
                           Index Cond: (id = mk.keyword_id)
                           Filter: ((keyword)::text = 'sequel'::text)
                           Rows Removed by Filter: 1
               ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.001 rows=1 loops=191)
                     Filter: ((kind)::text = 'production companies'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.82 rows=3 width=4) (actual time=0.008..0.010 rows=4 loops=172)
               Index Cond: (movie_id = mk.movie_id)
               Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,English}'::text[]))
               Rows Removed by Filter: 15
 Planning Time: 70.149 ms
 Execution Time: 41.604 ms
(64 rows)

SET
                                                                                                            QUERY PLAN                                                                                                            
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7394.90..7394.91 rows=1 width=96) (actual time=500.511..500.512 rows=1 loops=1)
   ->  Nested Loop  (cost=9.31..7394.89 rows=1 width=42) (actual time=6.057..499.388 rows=4803 loops=1)
         Join Filter: (ct.id = mc.company_type_id)
         ->  Nested Loop  (cost=9.31..7393.80 rows=1 width=46) (actual time=6.050..495.420 rows=4803 loops=1)
               ->  Nested Loop  (cost=8.89..7393.26 rows=1 width=31) (actual time=6.039..480.415 rows=4955 loops=1)
                     Join Filter: (t.id = mc.movie_id)
                     ->  Nested Loop  (cost=8.46..7392.68 rows=1 width=43) (actual time=6.013..470.768 rows=432 loops=1)
                           Join Filter: (it1.id = mi.info_type_id)
                           Rows Removed by Join Filter: 49
                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.007..0.014 rows=1 loops=1)
                                 Filter: ((info)::text = 'countries'::text)
                                 Rows Removed by Filter: 112
                           ->  Nested Loop  (cost=8.46..7390.25 rows=1 width=47) (actual time=6.004..470.638 rows=481 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=8.03..7388.35 rows=1 width=39) (actual time=5.944..414.842 rows=473 loops=1)
                                       Join Filter: (cc.status_id = cct2.id)
                                       Rows Removed by Join Filter: 1159
                                       ->  Nested Loop  (cost=8.03..7387.27 rows=1 width=43) (actual time=5.941..413.921 rows=544 loops=1)
                                             Join Filter: (kt.id = t.kind_id)
                                             Rows Removed by Join Filter: 244
                                             ->  Nested Loop  (cost=8.03..7386.15 rows=1 width=47) (actual time=5.927..412.847 rows=596 loops=1)
                                                   ->  Nested Loop  (cost=7.60..7385.67 rows=1 width=22) (actual time=5.903..373.424 rows=5973 loops=1)
                                                         Join Filter: (cct1.id = cc.subject_id)
                                                         Rows Removed by Join Filter: 13371
                                                         ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1)
                                                               Filter: ((kind)::text = 'crew'::text)
                                                               Rows Removed by Filter: 3
                                                         ->  Nested Loop  (cost=7.60..7384.57 rows=4 width=26) (actual time=5.363..371.376 rows=19344 loops=1)
                                                               ->  Nested Loop  (cost=7.18..7383.14 rows=3 width=14) (actual time=4.508..309.813 rows=31800 loops=1)
                                                                     Join Filter: (mi_idx.info_type_id = it2.id)
                                                                     Rows Removed by Join Filter: 62093
                                                                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.008..0.010 rows=1 loops=1)
                                                                           Filter: ((info)::text = 'rating'::text)
                                                                           Rows Removed by Filter: 112
                                                                     ->  Nested Loop  (cost=7.18..7375.83 rows=392 width=18) (actual time=4.496..301.151 rows=93893 loops=1)
                                                                           ->  Nested Loop  (cost=6.75..7304.56 rows=135 width=4) (actual time=4.471..145.912 rows=37091 loops=1)
                                                                                 ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.100..20.652 rows=3 loops=1)
                                                                                       Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                       Rows Removed by Filter: 134167
                                                                                 ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1082.76 rows=299 width=8) (actual time=3.397..40.240 rows=12364 loops=3)
                                                                                       Recheck Cond: (keyword_id = k.id)
                                                                                       Heap Blocks: exact=26312
                                                                                       ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.866..1.866 rows=12364 loops=3)
                                                                                             Index Cond: (keyword_id = k.id)
                                                                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=14) (actual time=0.003..0.004 rows=3 loops=37091)
                                                                                 Index Cond: (movie_id = mk.movie_id)
                                                                                 Filter: ((info)::text < '8.5'::text)
                                                                                 Rows Removed by Filter: 0
                                                               ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.001..0.002 rows=1 loops=31800)
                                                                     Index Cond: (movie_id = mk.movie_id)
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.006..0.006 rows=0 loops=5973)
                                                         Index Cond: (id = mk.movie_id)
                                                         Filter: (production_year > 2000)
                                                         Rows Removed by Filter: 1
                                             ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.001..0.001 rows=1 loops=596)
                                                   Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                   Rows Removed by Filter: 2
                                       ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=3 width=4) (actual time=0.000..0.001 rows=3 loops=544)
                                             Filter: ((kind)::text <> 'complete+verified'::text)
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.101..0.117 rows=1 loops=473)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                                       Rows Removed by Filter: 139
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.010..0.020 rows=11 loops=432)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                           Rows Removed by Filter: 10
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.003..0.003 rows=1 loops=4955)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text <> '[us]'::text)
                     Rows Removed by Filter: 0
         ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.000..0.000 rows=1 loops=4803)
 Planning Time: 86.632 ms
 Execution Time: 500.747 ms
(75 rows)

SET
                                                                                                            QUERY PLAN                                                                                                            
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7387.11..7387.12 rows=1 width=96) (actual time=381.332..381.332 rows=1 loops=1)
   ->  Nested Loop  (cost=9.31..7387.10 rows=1 width=42) (actual time=8.226..381.277 rows=148 loops=1)
         ->  Nested Loop  (cost=8.89..7386.56 rows=1 width=27) (actual time=8.205..380.506 rows=150 loops=1)
               Join Filter: (ct.id = mc.company_type_id)
               ->  Nested Loop  (cost=8.89..7385.47 rows=1 width=31) (actual time=8.196..380.355 rows=150 loops=1)
                     Join Filter: (t.id = mc.movie_id)
                     ->  Nested Loop  (cost=8.46..7384.89 rows=1 width=43) (actual time=8.168..379.911 rows=13 loops=1)
                           Join Filter: (it1.id = mi.info_type_id)
                           Rows Removed by Join Filter: 7
                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.006..0.013 rows=1 loops=1)
                                 Filter: ((info)::text = 'countries'::text)
                                 Rows Removed by Filter: 112
                           ->  Nested Loop  (cost=8.46..7382.46 rows=1 width=47) (actual time=8.160..379.890 rows=20 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=8.03..7380.89 rows=1 width=39) (actual time=6.384..365.113 rows=179 loops=1)
                                       Join Filter: (cct2.id = cc.status_id)
                                       Rows Removed by Join Filter: 394
                                       ->  Nested Loop  (cost=8.03..7379.81 rows=1 width=43) (actual time=6.381..364.800 rows=191 loops=1)
                                             Join Filter: (cct1.id = cc.subject_id)
                                             Rows Removed by Join Filter: 689
                                             ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=1)
                                                   Filter: ((kind)::text = 'crew'::text)
                                                   Rows Removed by Filter: 3
                                             ->  Nested Loop  (cost=8.03..7378.74 rows=1 width=47) (actual time=6.370..364.665 rows=880 loops=1)
                                                   ->  Nested Loop  (cost=7.61..7378.26 rows=1 width=35) (actual time=4.659..357.766 rows=2312 loops=1)
                                                         Join Filter: (kt.id = t.kind_id)
                                                         Rows Removed by Join Filter: 1695
                                                         ->  Nested Loop  (cost=7.61..7377.15 rows=1 width=39) (actual time=4.556..353.798 rows=2835 loops=1)
                                                               ->  Nested Loop  (cost=7.18..7376.66 rows=1 width=14) (actual time=4.534..281.699 rows=11708 loops=1)
                                                                     Join Filter: (it2.id = mi_idx.info_type_id)
                                                                     Rows Removed by Join Filter: 6993
                                                                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.008..0.010 rows=1 loops=1)
                                                                           Filter: ((info)::text = 'rating'::text)
                                                                           Rows Removed by Filter: 112
                                                                     ->  Nested Loop  (cost=7.18..7373.13 rows=90 width=18) (actual time=4.524..279.105 rows=18701 loops=1)
                                                                           ->  Nested Loop  (cost=6.75..7304.56 rows=135 width=4) (actual time=4.499..141.924 rows=37091 loops=1)
                                                                                 ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.135..20.837 rows=3 loops=1)
                                                                                       Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                       Rows Removed by Filter: 134167
                                                                                 ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1082.76 rows=299 width=8) (actual time=3.387..38.960 rows=12364 loops=3)
                                                                                       Recheck Cond: (keyword_id = k.id)
                                                                                       Heap Blocks: exact=26312
                                                                                       ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.855..1.855 rows=12364 loops=3)
                                                                                             Index Cond: (keyword_id = k.id)
                                                                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=14) (actual time=0.003..0.003 rows=1 loops=37091)
                                                                                 Index Cond: (movie_id = mk.movie_id)
                                                                                 Filter: ((info)::text > '6.5'::text)
                                                                                 Rows Removed by Filter: 2
                                                               ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.006..0.006 rows=0 loops=11708)
                                                                     Index Cond: (id = mk.movie_id)
                                                                     Filter: (production_year > 2005)
                                                                     Rows Removed by Filter: 1
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.000..0.001 rows=1 loops=2835)
                                                               Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                               Rows Removed by Filter: 2
                                                   ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.003..0.003 rows=0 loops=2312)
                                                         Index Cond: (movie_id = t.id)
                                       ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=3 width=4) (actual time=0.000..0.001 rows=3 loops=191)
                                             Filter: ((kind)::text <> 'complete+verified'::text)
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.56 rows=1 width=8) (actual time=0.079..0.082 rows=0 loops=179)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
                                       Rows Removed by Filter: 130
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.016..0.031 rows=12 loops=13)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                           Rows Removed by Filter: 17
               ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.000..0.000 rows=1 loops=150)
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.005..0.005 rows=1 loops=150)
               Index Cond: (id = mc.company_id)
               Filter: ((country_code)::text <> '[us]'::text)
               Rows Removed by Filter: 0
 Planning Time: 86.690 ms
 Execution Time: 381.584 ms
(75 rows)

SET
                                                                                                         QUERY PLAN                                                                                                         
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7394.43..7394.44 rows=1 width=96) (actual time=2377.682..2377.682 rows=1 loops=1)
   ->  Nested Loop  (cost=9.31..7394.42 rows=1 width=42) (actual time=10.569..2375.458 rows=8373 loops=1)
         Join Filter: (it2.id = mi_idx.info_type_id)
         Rows Removed by Join Filter: 16430
         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=1)
               Filter: ((info)::text = 'rating'::text)
               Rows Removed by Filter: 112
         ->  Nested Loop  (cost=9.31..7391.99 rows=1 width=46) (actual time=10.554..2373.080 rows=24803 loops=1)
               Join Filter: (t.id = mi_idx.movie_id)
               ->  Nested Loop  (cost=8.88..7391.46 rows=1 width=56) (actual time=10.527..2346.072 rows=8493 loops=1)
                     Join Filter: (kt.id = t.kind_id)
                     Rows Removed by Join Filter: 712
                     ->  Nested Loop  (cost=8.88..7390.35 rows=1 width=60) (actual time=10.518..2335.689 rows=8788 loops=1)
                           Join Filter: (mi.movie_id = t.id)
                           ->  Nested Loop  (cost=8.45..7389.84 rows=1 width=35) (actual time=5.315..2282.165 rows=22323 loops=1)
                                 Join Filter: (it1.id = mi.info_type_id)
                                 Rows Removed by Join Filter: 5071
                                 ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.003..0.010 rows=1 loops=1)
                                       Filter: ((info)::text = 'countries'::text)
                                       Rows Removed by Filter: 112
                                 ->  Nested Loop  (cost=8.45..7387.38 rows=4 width=39) (actual time=5.311..2278.189 rows=27394 loops=1)
                                       ->  Nested Loop  (cost=8.02..7383.59 rows=2 width=31) (actual time=5.052..388.575 rows=22725 loops=1)
                                             ->  Nested Loop  (cost=7.60..7381.96 rows=3 width=16) (actual time=5.039..323.183 rows=24082 loops=1)
                                                   Join Filter: (ct.id = mc.company_type_id)
                                                   Rows Removed by Join Filter: 7
                                                   ->  Nested Loop  (cost=7.60..7380.76 rows=3 width=20) (actual time=5.026..316.190 rows=24082 loops=1)
                                                         ->  Nested Loop  (cost=7.17..7373.86 rows=12 width=8) (actual time=4.966..223.740 rows=6704 loops=1)
                                                               Join Filter: (cc.subject_id = cct1.id)
                                                               Rows Removed by Join Filter: 3832
                                                               ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=1)
                                                                     Filter: ((kind)::text = 'cast'::text)
                                                                     Rows Removed by Filter: 3
                                                               ->  Nested Loop  (cost=7.17..7372.22 rows=47 width=12) (actual time=4.959..222.273 rows=10536 loops=1)
                                                                     Join Filter: (cct2.id = cc.status_id)
                                                                     Rows Removed by Join Filter: 9488
                                                                     ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.003..0.004 rows=1 loops=1)
                                                                           Filter: ((kind)::text = 'complete'::text)
                                                                           Rows Removed by Filter: 3
                                                                     ->  Nested Loop  (cost=7.17..7368.82 rows=188 width=16) (actual time=4.942..219.526 rows=20024 loops=1)
                                                                           ->  Nested Loop  (cost=6.75..7304.56 rows=135 width=4) (actual time=4.486..143.318 rows=37091 loops=1)
                                                                                 ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.130..20.906 rows=3 loops=1)
                                                                                       Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                       Rows Removed by Filter: 134167
                                                                                 ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1082.76 rows=299 width=8) (actual time=3.387..39.480 rows=12364 loops=3)
                                                                                       Recheck Cond: (keyword_id = k.id)
                                                                                       Heap Blocks: exact=26312
                                                                                       ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.867..1.867 rows=12364 loops=3)
                                                                                             Index Cond: (keyword_id = k.id)
                                                                           ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.002..0.002 rows=1 loops=37091)
                                                                                 Index Cond: (movie_id = mk.movie_id)
                                                         ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.009..0.013 rows=4 loops=6704)
                                                               Index Cond: (movie_id = mk.movie_id)
                                                               Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                                                               Rows Removed by Filter: 8
                                                   ->  Materialize  (cost=0.00..1.06 rows=4 width=4) (actual time=0.000..0.000 rows=1 loops=24082)
                                                         ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.008..0.009 rows=2 loops=1)
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=24082)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((country_code)::text <> '[us]'::text)
                                                   Rows Removed by Filter: 0
                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.070..0.083 rows=1 loops=22725)
                                             Index Cond: (movie_id = mk.movie_id)
                                             Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                                             Rows Removed by Filter: 203
                           ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=22323)
                                 Index Cond: (id = mk.movie_id)
                                 Filter: (production_year > 2005)
                                 Rows Removed by Filter: 1
                     ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.001..0.001 rows=1 loops=8788)
                           Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                           Rows Removed by Filter: 0
               ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=14) (actual time=0.002..0.003 rows=3 loops=8493)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text < '8.5'::text)
                     Rows Removed by Filter: 0
 Planning Time: 88.775 ms
 Execution Time: 2377.941 ms
(77 rows)

SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3945.49..3945.50 rows=1 width=96) (actual time=26.520..26.520 rows=1 loops=1)
   ->  Nested Loop  (cost=11.16..3945.49 rows=1 width=48) (actual time=7.927..26.238 rows=1620 loops=1)
         Join Filter: (it3.id = pi.info_type_id)
         Rows Removed by Join Filter: 3270
         ->  Seq Scan on info_type it3  (cost=0.00..2.41 rows=1 width=4) (actual time=0.008..0.014 rows=1 loops=1)
               Filter: ((info)::text = 'trivia'::text)
               Rows Removed by Filter: 112
         ->  Nested Loop  (cost=11.16..3943.06 rows=1 width=52) (actual time=7.902..25.900 rows=4890 loops=1)
               Join Filter: (n.id = pi.person_id)
               ->  Nested Loop  (cost=10.73..3922.80 rows=1 width=60) (actual time=7.874..24.473 rows=30 loops=1)
                     Join Filter: (cc.subject_id = cct1.id)
                     ->  Nested Loop  (cost=10.73..3921.74 rows=1 width=64) (actual time=7.872..24.437 rows=30 loops=1)
                           ->  Nested Loop  (cost=10.30..3919.44 rows=1 width=45) (actual time=7.843..24.343 rows=30 loops=1)
                                 Join Filter: (ci.role_id = rt.id)
                                 ->  Nested Loop  (cost=10.30..3918.28 rows=1 width=49) (actual time=7.829..24.290 rows=30 loops=1)
                                       Join Filter: (mi.info_type_id = it.id)
                                       ->  Nested Loop  (cost=10.30..3915.85 rows=1 width=53) (actual time=7.822..24.179 rows=30 loops=1)
                                             ->  Nested Loop  (cost=9.88..3913.83 rows=1 width=57) (actual time=7.809..23.748 rows=132 loops=1)
                                                   Join Filter: (t.id = mc.movie_id)
                                                   ->  Nested Loop  (cost=9.45..3908.99 rows=1 width=73) (actual time=7.781..23.652 rows=6 loops=1)
                                                         ->  Nested Loop  (cost=9.02..3902.76 rows=2 width=61) (actual time=6.948..23.010 rows=132 loops=1)
                                                               ->  Nested Loop  (cost=8.60..3899.85 rows=1 width=57) (actual time=6.889..22.375 rows=76 loops=1)
                                                                     Join Filter: (t.id = ci.movie_id)
                                                                     ->  Nested Loop  (cost=8.03..3852.25 rows=1 width=41) (actual time=6.858..20.718 rows=2 loops=1)
                                                                           Join Filter: (t.id = mi.movie_id)
                                                                           ->  Nested Loop  (cost=7.60..3809.27 rows=1 width=33) (actual time=6.788..20.355 rows=1 loops=1)
                                                                                 Join Filter: (cct2.id = cc.status_id)
                                                                                 ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=1)
                                                                                       Filter: ((kind)::text = 'complete+verified'::text)
                                                                                       Rows Removed by Filter: 3
                                                                                 ->  Nested Loop  (cost=7.60..3808.21 rows=1 width=37) (actual time=6.780..20.346 rows=1 loops=1)
                                                                                       Join Filter: (t.id = cc.movie_id)
                                                                                       ->  Nested Loop  (cost=7.18..3805.41 rows=1 width=25) (actual time=6.751..20.316 rows=1 loops=1)
                                                                                             ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=0.188..14.483 rows=414 loops=1)
                                                                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.053..11.570 rows=1 loops=1)
                                                                                                         Filter: ((keyword)::text = 'computer-animation'::text)
                                                                                                         Rows Removed by Filter: 134169
                                                                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=0.133..2.857 rows=414 loops=1)
                                                                                                         Recheck Cond: (keyword_id = k.id)
                                                                                                         Heap Blocks: exact=358
                                                                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.074..0.074 rows=414 loops=1)
                                                                                                               Index Cond: (keyword_id = k.id)
                                                                                             ->  Index Scan using title_pkey on title t  (cost=0.43..2.12 rows=1 width=21) (actual time=0.014..0.014 rows=0 loops=414)
                                                                                                   Index Cond: (id = mk.movie_id)
                                                                                                   Filter: ((production_year >= 2000) AND (production_year <= 2010) AND ((title)::text = 'Shrek 2'::text))
                                                                                                   Rows Removed by Filter: 1
                                                                                       ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..2.77 rows=2 width=12) (actual time=0.026..0.027 rows=1 loops=1)
                                                                                             Index Cond: (movie_id = mk.movie_id)
                                                                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..42.97 rows=1 width=8) (actual time=0.068..0.361 rows=2 loops=1)
                                                                                 Index Cond: (movie_id = mk.movie_id)
                                                                                 Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%200%'::text) OR ((info)::text ~~ 'USA:%200%'::text)))
                                                                                 Rows Removed by Filter: 455
                                                                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..47.58 rows=1 width=16) (actual time=0.017..0.819 rows=38 loops=2)
                                                                           Index Cond: (movie_id = mk.movie_id)
                                                                           Filter: ((note)::text = ANY ('{(voice),"(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                           Rows Removed by Filter: 191
                                                               ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.89 rows=2 width=4) (actual time=0.006..0.008 rows=2 loops=76)
                                                                     Index Cond: (person_id = ci.person_id)
                                                                     Heap Fetches: 132
                                                         ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..2.22 rows=1 width=20) (actual time=0.005..0.005 rows=0 loops=132)
                                                               Index Cond: (id = ci.person_role_id)
                                                               Filter: ((name)::text = 'Queen'::text)
                                                               Rows Removed by Filter: 1
                                                   ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..4.77 rows=5 width=8) (actual time=0.007..0.012 rows=22 loops=6)
                                                         Index Cond: (movie_id = mk.movie_id)
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..2.03 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=132)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((country_code)::text = '[us]'::text)
                                                   Rows Removed by Filter: 1
                                       ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=30)
                                             Filter: ((info)::text = 'release dates'::text)
                                             Rows Removed by Filter: 15
                                 ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=30)
                                       Filter: ((role)::text = 'actress'::text)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using name_pkey on name n  (cost=0.43..2.30 rows=1 width=19) (actual time=0.003..0.003 rows=1 loops=30)
                                 Index Cond: (id = ci.person_id)
                                 Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                     ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=30)
                           Filter: ((kind)::text = 'cast'::text)
               ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..19.93 rows=26 width=8) (actual time=0.002..0.027 rows=163 loops=30)
                     Index Cond: (person_id = an.person_id)
 Planning Time: 118.625 ms
 Execution Time: 26.890 ms
(84 rows)

SET
                                                                                                                 QUERY PLAN                                                                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4148.76..4148.77 rows=1 width=96) (actual time=179.220..179.220 rows=1 loops=1)
   ->  Nested Loop  (cost=11.16..4148.76 rows=1 width=48) (actual time=27.877..179.203 rows=15 loops=1)
         ->  Nested Loop  (cost=10.74..4146.73 rows=1 width=52) (actual time=27.863..178.956 rows=66 loops=1)
               Join Filter: (pi.info_type_id = it3.id)
               Rows Removed by Join Filter: 10692
               ->  Nested Loop  (cost=10.74..4144.31 rows=1 width=56) (actual time=26.580..86.498 rows=10758 loops=1)
                     Join Filter: (mi.info_type_id = it.id)
                     ->  Nested Loop  (cost=10.74..4141.88 rows=1 width=60) (actual time=26.574..53.742 rows=10758 loops=1)
                           Join Filter: (n.id = pi.person_id)
                           ->  Nested Loop  (cost=10.31..4121.62 rows=1 width=68) (actual time=26.559..50.163 rows=66 loops=1)
                                 ->  Nested Loop  (cost=9.88..4117.61 rows=1 width=56) (actual time=26.544..50.021 rows=66 loops=1)
                                       Join Filter: (n.id = an.person_id)
                                       ->  Nested Loop  (cost=9.46..4114.69 rows=1 width=52) (actual time=26.530..49.929 rows=22 loops=1)
                                             Join Filter: (mi.movie_id = t.id)
                                             ->  Nested Loop  (cost=9.03..4110.43 rows=2 width=55) (actual time=9.098..49.532 rows=193 loops=1)
                                                   Join Filter: (mc.movie_id = mi.movie_id)
                                                   ->  Nested Loop  (cost=8.59..3981.80 rows=3 width=47) (actual time=3.257..35.825 rows=167 loops=1)
                                                         Join Filter: (ci.movie_id = mc.movie_id)
                                                         ->  Nested Loop  (cost=8.16..3976.97 rows=1 width=39) (actual time=3.222..35.586 rows=6 loops=1)
                                                               ->  Nested Loop  (cost=7.73..3974.67 rows=1 width=20) (actual time=1.350..33.174 rows=175 loops=1)
                                                                     Join Filter: (rt.id = ci.role_id)
                                                                     Rows Removed by Join Filter: 528
                                                                     ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.014..0.016 rows=1 loops=1)
                                                                           Filter: ((role)::text = 'actress'::text)
                                                                           Rows Removed by Filter: 11
                                                                     ->  Nested Loop  (cost=7.73..3973.48 rows=3 width=24) (actual time=1.021..33.088 rows=703 loops=1)
                                                                           ->  Nested Loop  (cost=7.17..3830.71 rows=3 width=8) (actual time=0.979..15.407 rows=23 loops=1)
                                                                                 Join Filter: (cc.status_id = cct2.id)
                                                                                 Rows Removed by Join Filter: 51
                                                                                 ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=1)
                                                                                       Filter: ((kind)::text = 'complete+verified'::text)
                                                                                       Rows Removed by Filter: 3
                                                                                 ->  Nested Loop  (cost=7.17..3829.51 rows=12 width=12) (actual time=0.380..15.384 rows=74 loops=1)
                                                                                       Join Filter: (cc.subject_id = cct1.id)
                                                                                       Rows Removed by Join Filter: 16
                                                                                       ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=1)
                                                                                             Filter: ((kind)::text = 'cast'::text)
                                                                                             Rows Removed by Filter: 3
                                                                                       ->  Nested Loop  (cost=7.17..3827.87 rows=47 width=16) (actual time=0.378..15.362 rows=90 loops=1)
                                                                                             ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=0.154..13.017 rows=414 loops=1)
                                                                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.035..11.269 rows=1 loops=1)
                                                                                                         Filter: ((keyword)::text = 'computer-animation'::text)
                                                                                                         Rows Removed by Filter: 134169
                                                                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=0.118..1.700 rows=414 loops=1)
                                                                                                         Recheck Cond: (keyword_id = k.id)
                                                                                                         Heap Blocks: exact=358
                                                                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.056..0.056 rows=414 loops=1)
                                                                                                               Index Cond: (keyword_id = k.id)
                                                                                             ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..2.77 rows=2 width=12) (actual time=0.005..0.005 rows=0 loops=414)
                                                                                                   Index Cond: (movie_id = mk.movie_id)
                                                                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..47.58 rows=1 width=16) (actual time=0.092..0.764 rows=31 loops=23)
                                                                                 Index Cond: (movie_id = mk.movie_id)
                                                                                 Filter: ((note)::text = ANY ('{(voice),"(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                                 Rows Removed by Filter: 116
                                                               ->  Index Scan using name_pkey on name n  (cost=0.43..2.30 rows=1 width=19) (actual time=0.013..0.013 rows=0 loops=175)
                                                                     Index Cond: (id = ci.person_id)
                                                                     Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                                                     Rows Removed by Filter: 1
                                                         ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..4.77 rows=5 width=8) (actual time=0.020..0.033 rows=28 loops=6)
                                                               Index Cond: (movie_id = mk.movie_id)
                                                   ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..42.86 rows=1 width=8) (actual time=0.018..0.082 rows=1 loops=167)
                                                         Index Cond: (movie_id = mk.movie_id)
                                                         Filter: ((info)::text ~~ 'USA:%200%'::text)
                                                         Rows Removed by Filter: 422
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..2.12 rows=1 width=21) (actual time=0.002..0.002 rows=0 loops=193)
                                                   Index Cond: (id = mk.movie_id)
                                                   Filter: ((production_year >= 2000) AND (production_year <= 2005) AND ((title)::text = 'Shrek 2'::text))
                                                   Rows Removed by Filter: 1
                                       ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.89 rows=2 width=4) (actual time=0.002..0.003 rows=3 loops=22)
                                             Index Cond: (person_id = ci.person_id)
                                             Heap Fetches: 66
                                 ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..2.22 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=66)
                                       Index Cond: (id = ci.person_role_id)
                                       Filter: ((name)::text = 'Queen'::text)
                           ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..19.93 rows=26 width=8) (actual time=0.002..0.028 rows=163 loops=66)
                                 Index Cond: (person_id = an.person_id)
                     ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=10758)
                           Filter: ((info)::text = 'release dates'::text)
                           Rows Removed by Filter: 15
               ->  Seq Scan on info_type it3  (cost=0.00..2.41 rows=1 width=4) (actual time=0.003..0.008 rows=1 loops=10758)
                     Filter: ((info)::text = 'height'::text)
                     Rows Removed by Filter: 111
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..2.03 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=66)
               Index Cond: (id = mc.company_id)
               Filter: ((country_code)::text = '[us]'::text)
               Rows Removed by Filter: 1
 Planning Time: 116.974 ms
 Execution Time: 179.536 ms
(88 rows)

SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4547.37..4547.38 rows=1 width=96) (actual time=562.606..562.606 rows=1 loops=1)
   ->  Nested Loop  (cost=11.16..4547.36 rows=1 width=48) (actual time=74.992..559.292 rows=16308 loops=1)
         Join Filter: (cc.status_id = cct2.id)
         Rows Removed by Join Filter: 11714
         ->  Nested Loop  (cost=11.16..4546.30 rows=1 width=52) (actual time=18.096..531.488 rows=28022 loops=1)
               ->  Nested Loop  (cost=10.74..4544.27 rows=1 width=56) (actual time=17.703..308.092 rows=149974 loops=1)
                     Join Filter: (n.id = an.person_id)
                     ->  Nested Loop  (cost=10.32..4541.38 rows=1 width=68) (actual time=17.671..199.400 rows=36250 loops=1)
                           Join Filter: (it3.id = pi.info_type_id)
                           Rows Removed by Join Filter: 117713
                           ->  Seq Scan on info_type it3  (cost=0.00..2.41 rows=1 width=4) (actual time=0.007..0.014 rows=1 loops=1)
                                 Filter: ((info)::text = 'trivia'::text)
                                 Rows Removed by Filter: 112
                           ->  Nested Loop  (cost=10.32..4538.95 rows=1 width=72) (actual time=17.660..188.118 rows=153963 loops=1)
                                 Join Filter: (n.id = pi.person_id)
                                 ->  Nested Loop  (cost=9.89..4518.69 rows=1 width=64) (actual time=17.626..143.380 rows=1206 loops=1)
                                       Join Filter: (ci.role_id = rt.id)
                                       ->  Nested Loop  (cost=9.89..4517.53 rows=1 width=68) (actual time=17.623..142.009 rows=1206 loops=1)
                                             ->  Nested Loop  (cost=9.46..4515.32 rows=1 width=56) (actual time=17.593..139.434 rows=1455 loops=1)
                                                   Join Filter: (cc.subject_id = cct1.id)
                                                   ->  Nested Loop  (cost=9.46..4514.26 rows=1 width=60) (actual time=17.589..138.086 rows=1455 loops=1)
                                                         Join Filter: (t.id = mc.movie_id)
                                                         ->  Nested Loop  (cost=9.03..4509.42 rows=1 width=76) (actual time=17.556..137.022 rows=58 loops=1)
                                                               Join Filter: (mi.info_type_id = it.id)
                                                               ->  Nested Loop  (cost=9.03..4506.99 rows=1 width=80) (actual time=17.549..136.789 rows=58 loops=1)
                                                                     ->  Nested Loop  (cost=8.61..4504.20 rows=1 width=68) (actual time=15.491..136.448 rows=75 loops=1)
                                                                           ->  Nested Loop  (cost=8.18..4501.91 rows=1 width=49) (actual time=2.619..100.619 rows=7505 loops=1)
                                                                                 Join Filter: (t.id = ci.movie_id)
                                                                                 ->  Nested Loop  (cost=7.61..4406.63 rows=2 width=33) (actual time=0.771..42.995 rows=357 loops=1)
                                                                                       Join Filter: (t.id = mi.movie_id)
                                                                                       ->  Nested Loop  (cost=7.18..3804.91 rows=14 width=25) (actual time=0.164..18.067 rows=249 loops=1)
                                                                                             ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=0.144..14.173 rows=414 loops=1)
                                                                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.034..12.606 rows=1 loops=1)
                                                                                                         Filter: ((keyword)::text = 'computer-animation'::text)
                                                                                                         Rows Removed by Filter: 134169
                                                                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=0.107..1.500 rows=414 loops=1)
                                                                                                         Recheck Cond: (keyword_id = k.id)
                                                                                                         Heap Blocks: exact=358
                                                                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.053..0.053 rows=414 loops=1)
                                                                                                               Index Cond: (keyword_id = k.id)
                                                                                             ->  Index Scan using title_pkey on title t  (cost=0.43..2.12 rows=1 width=21) (actual time=0.009..0.009 rows=1 loops=414)
                                                                                                   Index Cond: (id = mk.movie_id)
                                                                                                   Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                                                                                   Rows Removed by Filter: 0
                                                                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..42.97 rows=1 width=8) (actual time=0.045..0.099 rows=1 loops=249)
                                                                                             Index Cond: (movie_id = mk.movie_id)
                                                                                             Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%200%'::text) OR ((info)::text ~~ 'USA:%200%'::text)))
                                                                                             Rows Removed by Filter: 88
                                                                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..47.63 rows=1 width=16) (actual time=0.028..0.158 rows=21 loops=357)
                                                                                       Index Cond: (movie_id = mk.movie_id)
                                                                                       Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                                       Rows Removed by Filter: 72
                                                                           ->  Index Scan using name_pkey on name n  (cost=0.43..2.29 rows=1 width=19) (actual time=0.005..0.005 rows=0 loops=7505)
                                                                                 Index Cond: (id = ci.person_id)
                                                                                 Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                                                                 Rows Removed by Filter: 1
                                                                     ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..2.77 rows=2 width=12) (actual time=0.004..0.004 rows=1 loops=75)
                                                                           Index Cond: (movie_id = t.id)
                                                               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=58)
                                                                     Filter: ((info)::text = 'release dates'::text)
                                                                     Rows Removed by Filter: 15
                                                         ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..4.77 rows=5 width=8) (actual time=0.007..0.013 rows=25 loops=58)
                                                               Index Cond: (movie_id = mk.movie_id)
                                                   ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=1455)
                                                         Filter: ((kind)::text = 'cast'::text)
                                             ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..2.21 rows=1 width=20) (actual time=0.001..0.001 rows=1 loops=1455)
                                                   Index Cond: (id = ci.person_role_id)
                                       ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1206)
                                             Filter: ((role)::text = 'actress'::text)
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..19.93 rows=26 width=8) (actual time=0.002..0.019 rows=128 loops=1206)
                                       Index Cond: (person_id = ci.person_id)
                     ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.87 rows=2 width=4) (actual time=0.001..0.002 rows=4 loops=36250)
                           Index Cond: (person_id = pi.person_id)
                           Heap Fetches: 149974
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..2.03 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=149974)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text = '[us]'::text)
                     Rows Removed by Filter: 1
         ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=28022)
               Filter: ((kind)::text = 'complete+verified'::text)
               Rows Removed by Filter: 3
 Planning Time: 119.692 ms
 Execution Time: 562.944 ms
(84 rows)

SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3832.24..3832.25 rows=1 width=32) (actual time=594.734..594.734 rows=1 loops=1)
   ->  Nested Loop  (cost=8.03..3832.22 rows=7 width=17) (actual time=7.377..593.548 rows=7834 loops=1)
         Join Filter: (mc.movie_id = t.id)
         ->  Nested Loop  (cost=7.60..3828.74 rows=7 width=8) (actual time=7.359..557.979 rows=7834 loops=1)
               ->  Nested Loop  (cost=7.18..3752.99 rows=170 width=12) (actual time=6.638..268.503 rows=148552 loops=1)
                     ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.600..81.686 rows=41840 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.515..11.584 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'character-name-in-title'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.082..65.699 rows=41840 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=11541
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=4.025..4.025 rows=41840 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.003..0.004 rows=4 loops=41840)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=148552)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text = '[de]'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.004..0.004 rows=1 loops=7834)
               Index Cond: (id = mk.movie_id)
 Planning Time: 2.269 ms
 Execution Time: 594.935 ms
(24 rows)

SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3829.74..3829.75 rows=1 width=32) (actual time=566.888..566.889 rows=1 loops=1)
   ->  Nested Loop  (cost=8.03..3829.73 rows=2 width=17) (actual time=9.215..566.123 rows=5228 loops=1)
         Join Filter: (mc.movie_id = t.id)
         ->  Nested Loop  (cost=7.60..3828.74 rows=2 width=8) (actual time=9.195..542.221 rows=5228 loops=1)
               ->  Nested Loop  (cost=7.18..3752.99 rows=170 width=12) (actual time=6.743..263.547 rows=148552 loops=1)
                     ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.702..80.521 rows=41840 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.658..11.835 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'character-name-in-title'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.042..64.324 rows=41840 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=11541
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=3.988..3.988 rows=41840 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.003..0.004 rows=4 loops=41840)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=148552)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text = '[nl]'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.004..0.004 rows=1 loops=5228)
               Index Cond: (id = mk.movie_id)
 Planning Time: 2.505 ms
 Execution Time: 567.077 ms
(24 rows)

SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3829.24..3829.25 rows=1 width=32) (actual time=543.649..543.650 rows=1 loops=1)
   ->  Nested Loop  (cost=8.03..3829.24 rows=1 width=17) (actual time=543.645..543.645 rows=0 loops=1)
         Join Filter: (mc.movie_id = t.id)
         ->  Nested Loop  (cost=7.60..3828.74 rows=1 width=8) (actual time=543.645..543.645 rows=0 loops=1)
               ->  Nested Loop  (cost=7.18..3752.99 rows=170 width=12) (actual time=6.714..266.341 rows=148552 loops=1)
                     ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.673..81.546 rows=41840 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.655..11.796 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'character-name-in-title'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.015..65.428 rows=41840 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=11541
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=3.961..3.961 rows=41840 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.003..0.004 rows=4 loops=41840)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=148552)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text = '[sm]'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (never executed)
               Index Cond: (id = mk.movie_id)
 Planning Time: 2.475 ms
 Execution Time: 543.843 ms
(24 rows)

SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3845.82..3845.83 rows=1 width=32) (actual time=727.278..727.279 rows=1 loops=1)
   ->  Nested Loop  (cost=8.03..3845.67 rows=61 width=17) (actual time=6.862..718.956 rows=68316 loops=1)
         ->  Nested Loop  (cost=7.61..3769.92 rows=170 width=21) (actual time=6.801..430.419 rows=148552 loops=1)
               Join Filter: (t.id = mc.movie_id)
               ->  Nested Loop  (cost=7.18..3749.42 rows=34 width=25) (actual time=6.750..248.966 rows=41840 loops=1)
                     ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.729..76.416 rows=41840 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.679..11.762 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'character-name-in-title'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.047..59.947 rows=41840 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=11541
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=4.007..4.007 rows=41840 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.004..0.004 rows=1 loops=41840)
                           Index Cond: (id = mk.movie_id)
               ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.002..0.004 rows=4 loops=41840)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=148552)
               Index Cond: (id = mc.company_id)
               Filter: ((country_code)::text = '[us]'::text)
               Rows Removed by Filter: 1
 Planning Time: 2.496 ms
 Execution Time: 727.468 ms
(24 rows)

SET
                                                                                                         QUERY PLAN                                                                                                         
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8691.91..8691.92 rows=1 width=128) (actual time=1343.500..1343.500 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.70..8691.90 rows=1 width=80) (actual time=25.982..1343.010 rows=757 loops=1)
         ->  Nested Loop  (cost=1012.27..8690.88 rows=1 width=69) (actual time=25.944..1332.820 rows=1021 loops=1)
               ->  Nested Loop  (cost=1012.13..8690.69 rows=1 width=73) (actual time=25.935..1330.962 rows=1021 loops=1)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=1011.70..8672.67 rows=1 width=47) (actual time=13.654..1150.492 rows=1736 loops=1)
                           Join Filter: (t.id = ci.movie_id)
                           ->  Nested Loop  (cost=1011.13..8643.58 rows=1 width=39) (actual time=7.012..316.584 rows=2023 loops=1)
                                 Join Filter: (mi_idx.movie_id = t.id)
                                 ->  Nested Loop  (cost=1010.70..8642.75 rows=1 width=18) (actual time=6.988..221.437 rows=16283 loops=1)
                                       ->  Gather  (cost=1010.57..8642.58 rows=1 width=22) (actual time=6.257..184.105 rows=35346 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Nested Loop  (cost=10.57..7642.48 rows=1 width=22) (actual time=4.964..313.171 rows=11782 loops=3)
                                                   ->  Nested Loop  (cost=10.44..7642.32 rows=1 width=26) (actual time=4.948..299.984 rows=11782 loops=3)
                                                         ->  Hash Join  (cost=10.02..7640.66 rows=2 width=14) (actual time=4.644..253.620 rows=21234 loops=3)
                                                               Hash Cond: (mi_idx.info_type_id = it2.id)
                                                               ->  Nested Loop  (cost=7.60..7637.43 rows=294 width=18) (actual time=4.554..244.691 rows=63896 loops=3)
                                                                     ->  Nested Loop  (cost=7.17..7557.95 rows=98 width=4) (actual time=4.516..125.068 rows=25571 loops=3)
                                                                           ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4353.35 rows=3 width=4) (actual time=0.277..23.140 rows=2 loops=3)
                                                                                 Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                                 Rows Removed by Filter: 44721
                                                                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1065.21 rows=299 width=8) (actual time=3.144..42.446 rows=10959 loops=7)
                                                                                 Recheck Cond: (keyword_id = k.id)
                                                                                 Heap Blocks: exact=12389
                                                                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.810..1.810 rows=10959 loops=7)
                                                                                       Index Cond: (keyword_id = k.id)
                                                                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.78 rows=3 width=14) (actual time=0.004..0.004 rows=2 loops=76714)
                                                                           Index Cond: (movie_id = mk.movie_id)
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.025..0.025 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.018..0.020 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'votes'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.81 rows=2 width=12) (actual time=0.002..0.002 rows=1 loops=63701)
                                                               Index Cond: (movie_id = mi_idx.movie_id)
                                                   ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=35346)
                                                         Index Cond: (id = cc.subject_id)
                                                         Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
                                       ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=35346)
                                             Index Cond: (id = cc.status_id)
                                             Filter: ((kind)::text = 'complete+verified'::text)
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.82 rows=1 width=21) (actual time=0.006..0.006 rows=0 loops=16283)
                                       Index Cond: (id = mk.movie_id)
                                       Filter: (production_year > 2000)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..29.08 rows=1 width=8) (actual time=0.290..0.412 rows=1 loops=2023)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                 Rows Removed by Filter: 137
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..18.01 rows=1 width=50) (actual time=0.103..0.103 rows=1 loops=1736)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((info)::text = ANY ('{Horror,Thriller}'::text[]))
                           Rows Removed by Filter: 226
               ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1021)
                     Index Cond: (id = mi.info_type_id)
                     Filter: ((info)::text = 'genres'::text)
         ->  Index Scan using name_pkey on name n  (cost=0.43..1.03 rows=1 width=19) (actual time=0.009..0.009 rows=1 loops=1021)
               Index Cond: (id = ci.person_id)
               Filter: ((gender)::text = 'm'::text)
               Rows Removed by Filter: 0
 Planning Time: 73.154 ms
 Execution Time: 1343.932 ms
(64 rows)

SET
                                                                                                           QUERY PLAN                                                                                                            
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8689.58..8689.59 rows=1 width=128) (actual time=323.390..323.391 rows=1 loops=1)
   ->  Nested Loop  (cost=1010.42..8689.57 rows=1 width=80) (actual time=74.929..323.358 rows=28 loops=1)
         ->  Nested Loop  (cost=1010.29..8689.41 rows=1 width=84) (actual time=74.920..323.314 rows=28 loops=1)
               ->  Nested Loop  (cost=1010.16..8689.23 rows=1 width=88) (actual time=74.912..323.166 rows=108 loops=1)
                     Join Filter: (t.id = cc.movie_id)
                     ->  Nested Loop  (cost=1009.74..8688.40 rows=1 width=100) (actual time=74.887..322.834 rows=108 loops=1)
                           ->  Nested Loop  (cost=1009.31..8687.37 rows=1 width=89) (actual time=74.863..322.265 rows=108 loops=1)
                                 ->  Nested Loop  (cost=1009.17..8687.19 rows=1 width=93) (actual time=74.851..321.891 rows=324 loops=1)
                                       Join Filter: (t.id = mi_idx.movie_id)
                                       ->  Nested Loop  (cost=1008.74..8686.37 rows=1 width=79) (actual time=74.819..321.437 rows=108 loops=1)
                                             ->  Nested Loop  (cost=1008.60..8686.19 rows=1 width=83) (actual time=74.814..321.267 rows=108 loops=1)
                                                   Join Filter: (t.id = mi.movie_id)
                                                   ->  Nested Loop  (cost=1008.16..8668.17 rows=1 width=33) (actual time=74.522..314.893 rows=77 loops=1)
                                                         Join Filter: (t.id = ci.movie_id)
                                                         ->  Gather  (cost=1007.60..8639.08 rows=1 width=25) (actual time=59.359..308.063 rows=49 loops=1)
                                                               Workers Planned: 2
                                                               Workers Launched: 2
                                                               ->  Nested Loop  (cost=7.60..7638.98 rows=1 width=25) (actual time=65.210..246.303 rows=16 loops=3)
                                                                     ->  Nested Loop  (cost=7.17..7557.95 rows=98 width=4) (actual time=4.438..115.660 rows=25571 loops=3)
                                                                           ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4353.35 rows=3 width=4) (actual time=0.190..23.355 rows=2 loops=3)
                                                                                 Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                                 Rows Removed by Filter: 44721
                                                                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1065.21 rows=299 width=8) (actual time=3.143..38.395 rows=10959 loops=7)
                                                                                 Recheck Cond: (keyword_id = k.id)
                                                                                 Heap Blocks: exact=12389
                                                                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.813..1.813 rows=10959 loops=7)
                                                                                       Index Cond: (keyword_id = k.id)
                                                                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.83 rows=1 width=21) (actual time=0.005..0.005 rows=0 loops=76714)
                                                                           Index Cond: (id = mk.movie_id)
                                                                           Filter: ((production_year > 2000) AND (((title)::text ~~ '%Freddy%'::text) OR ((title)::text ~~ '%Jason%'::text) OR ((title)::text ~~ 'Saw%'::text)))
                                                                           Rows Removed by Filter: 1
                                                         ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..29.08 rows=1 width=8) (actual time=0.154..0.229 rows=2 loops=49)
                                                               Index Cond: (movie_id = mk.movie_id)
                                                               Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                                               Rows Removed by Filter: 82
                                                   ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..18.01 rows=1 width=50) (actual time=0.082..0.082 rows=1 loops=77)
                                                         Index Cond: (movie_id = mk.movie_id)
                                                         Filter: ((info)::text = ANY ('{Horror,Thriller}'::text[]))
                                                         Rows Removed by Filter: 279
                                             ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=108)
                                                   Index Cond: (id = mi.info_type_id)
                                                   Filter: ((info)::text = 'genres'::text)
                                       ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.78 rows=3 width=14) (actual time=0.003..0.003 rows=3 loops=108)
                                             Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=324)
                                       Index Cond: (id = mi_idx.info_type_id)
                                       Filter: ((info)::text = 'votes'::text)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using name_pkey on name n  (cost=0.43..1.03 rows=1 width=19) (actual time=0.005..0.005 rows=1 loops=108)
                                 Index Cond: (id = ci.person_id)
                                 Filter: ((gender)::text = 'm'::text)
                     ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.81 rows=2 width=12) (actual time=0.002..0.003 rows=1 loops=108)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=108)
                     Index Cond: (id = cc.status_id)
                     Filter: ((kind)::text = 'complete+verified'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=28)
               Index Cond: (id = cc.subject_id)
               Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
 Planning Time: 73.558 ms
 Execution Time: 328.107 ms
(62 rows)

SET
                                                                                                         QUERY PLAN                                                                                                         
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8709.53..8709.54 rows=1 width=128) (actual time=4009.589..4009.589 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.70..8709.52 rows=1 width=80) (actual time=12.262..4005.752 rows=8024 loops=1)
         ->  Nested Loop  (cost=1012.27..8708.49 rows=1 width=69) (actual time=12.227..3925.185 rows=11863 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=1011.71..8679.40 rows=1 width=85) (actual time=10.078..1286.539 rows=14655 loops=1)
                     ->  Nested Loop  (cost=1011.58..8679.23 rows=1 width=89) (actual time=7.561..1257.678 rows=27522 loops=1)
                           ->  Nested Loop  (cost=1011.45..8679.06 rows=1 width=93) (actual time=7.545..1212.357 rows=37669 loops=1)
                                 ->  Nested Loop  (cost=1011.03..8678.23 rows=1 width=81) (actual time=6.078..1070.250 rows=63386 loops=1)
                                       Join Filter: (mi.movie_id = t.id)
                                       ->  Gather  (cost=1010.60..8677.40 rows=1 width=60) (actual time=6.047..776.747 rows=63386 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Nested Loop  (cost=10.60..7677.30 rows=1 width=60) (actual time=4.720..1291.557 rows=21129 loops=3)
                                                   ->  Nested Loop  (cost=10.46..7677.12 rows=1 width=64) (actual time=4.707..1263.190 rows=22577 loops=3)
                                                         Join Filter: (mi_idx.movie_id = mi.movie_id)
                                                         ->  Hash Join  (cost=10.02..7640.66 rows=2 width=14) (actual time=4.608..247.781 rows=21234 loops=3)
                                                               Hash Cond: (mi_idx.info_type_id = it2.id)
                                                               ->  Nested Loop  (cost=7.60..7637.43 rows=294 width=18) (actual time=4.521..237.871 rows=63896 loops=3)
                                                                     ->  Nested Loop  (cost=7.17..7557.95 rows=98 width=4) (actual time=4.479..118.136 rows=25571 loops=3)
                                                                           ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4353.35 rows=3 width=4) (actual time=0.247..22.662 rows=2 loops=3)
                                                                                 Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                                 Rows Removed by Filter: 44721
                                                                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1065.21 rows=299 width=8) (actual time=3.147..39.607 rows=10959 loops=7)
                                                                                 Recheck Cond: (keyword_id = k.id)
                                                                                 Heap Blocks: exact=12389
                                                                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.810..1.810 rows=10959 loops=7)
                                                                                       Index Cond: (keyword_id = k.id)
                                                                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.78 rows=3 width=14) (actual time=0.004..0.004 rows=2 loops=76714)
                                                                           Index Cond: (movie_id = mk.movie_id)
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.028..0.029 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.023..0.024 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'votes'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..18.22 rows=1 width=50) (actual time=0.046..0.047 rows=1 loops=63701)
                                                               Index Cond: (movie_id = mk.movie_id)
                                                               Filter: ((info)::text = ANY ('{Horror,Action,Sci-Fi,Thriller,Crime,War}'::text[]))
                                                               Rows Removed by Filter: 58
                                                   ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=67732)
                                                         Index Cond: (id = mi.info_type_id)
                                                         Filter: ((info)::text = 'genres'::text)
                                                         Rows Removed by Filter: 0
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.82 rows=1 width=21) (actual time=0.004..0.004 rows=1 loops=63386)
                                             Index Cond: (id = mk.movie_id)
                                 ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.81 rows=2 width=12) (actual time=0.002..0.002 rows=1 loops=63386)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=37669)
                                 Index Cond: (id = cc.subject_id)
                                 Filter: ((kind)::text = 'cast'::text)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=27522)
                           Index Cond: (id = cc.status_id)
                           Filter: ((kind)::text = 'complete+verified'::text)
                           Rows Removed by Filter: 0
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..29.08 rows=1 width=8) (actual time=0.135..0.180 rows=1 loops=14655)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                     Rows Removed by Filter: 83
         ->  Index Scan using name_pkey on name n  (cost=0.43..1.03 rows=1 width=19) (actual time=0.006..0.006 rows=1 loops=11863)
               Index Cond: (id = ci.person_id)
               Filter: ((gender)::text = 'm'::text)
               Rows Removed by Filter: 0
 Planning Time: 74.050 ms
 Execution Time: 4010.026 ms
(64 rows)

SET
                                                                                                      QUERY PLAN                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8954.40..8954.41 rows=1 width=128) (actual time=1373.085..1373.085 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.87..8954.39 rows=1 width=80) (actual time=59.607..1372.547 rows=1273 loops=1)
         Join Filter: (mi.movie_id = t.id)
         ->  Nested Loop  (cost=1012.44..8953.28 rows=1 width=83) (actual time=59.578..1366.932 rows=1273 loops=1)
               ->  Nested Loop  (cost=1012.01..8951.99 rows=1 width=72) (actual time=59.549..1357.655 rows=1556 loops=1)
                     ->  Nested Loop  (cost=1011.87..8951.81 rows=1 width=76) (actual time=59.539..1355.158 rows=1616 loops=1)
                           Join Filter: (mi_idx.movie_id = mi.movie_id)
                           ->  Nested Loop  (cost=1011.44..8928.44 rows=1 width=26) (actual time=28.952..1259.959 rows=1471 loops=1)
                                 Join Filter: (mi_idx.movie_id = ci.movie_id)
                                 ->  Gather  (cost=1010.87..8895.40 rows=1 width=18) (actual time=28.669..913.138 rows=1547 loops=1)
                                       Workers Planned: 2
                                       Workers Launched: 2
                                       ->  Nested Loop  (cost=10.87..7895.30 rows=1 width=18) (actual time=17.184..953.880 rows=516 loops=3)
                                             ->  Nested Loop  (cost=10.45..7882.53 rows=13 width=22) (actual time=4.538..457.895 rows=199419 loops=3)
                                                   Join Filter: (mi_idx.movie_id = mc.movie_id)
                                                   ->  Hash Join  (cost=10.02..7878.13 rows=2 width=14) (actual time=4.505..252.664 rows=21234 loops=3)
                                                         Hash Cond: (mi_idx.info_type_id = it2.id)
                                                         ->  Nested Loop  (cost=7.60..7874.90 rows=294 width=18) (actual time=4.421..243.360 rows=63896 loops=3)
                                                               ->  Nested Loop  (cost=7.17..7767.34 rows=98 width=4) (actual time=4.378..125.318 rows=25571 loops=3)
                                                                     ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4562.73 rows=3 width=4) (actual time=0.177..22.322 rows=2 loops=3)
                                                                           Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                           Rows Removed by Filter: 44721
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1065.21 rows=299 width=8) (actual time=3.131..42.861 rows=10959 loops=7)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=12389
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.795..1.795 rows=10959 loops=7)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..1.07 rows=3 width=14) (actual time=0.004..0.004 rows=2 loops=76714)
                                                                     Index Cond: (movie_id = mk.movie_id)
                                                         ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.027..0.027 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.022..0.023 rows=1 loops=3)
                                                                     Filter: ((info)::text = 'votes'::text)
                                                                     Rows Removed by Filter: 112
                                                   ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.14 rows=5 width=8) (actual time=0.005..0.008 rows=9 loops=63701)
                                                         Index Cond: (movie_id = mk.movie_id)
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.98 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=598256)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((name)::text ~~ 'Lionsgate%'::text)
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..33.03 rows=1 width=8) (actual time=0.164..0.227 rows=1 loops=1547)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                       Rows Removed by Filter: 119
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..23.36 rows=1 width=50) (actual time=0.063..0.064 rows=1 loops=1471)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((info)::text = ANY ('{Horror,Thriller}'::text[]))
                                 Rows Removed by Filter: 173
                     ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1616)
                           Index Cond: (id = mi.info_type_id)
                           Filter: ((info)::text = 'genres'::text)
                           Rows Removed by Filter: 0
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.29 rows=1 width=19) (actual time=0.006..0.006 rows=1 loops=1556)
                     Index Cond: (id = ci.person_id)
                     Filter: ((gender)::text = 'm'::text)
                     Rows Removed by Filter: 0
         ->  Index Scan using title_pkey on title t  (cost=0.43..1.10 rows=1 width=21) (actual time=0.004..0.004 rows=1 loops=1273)
               Index Cond: (id = mk.movie_id)
 Planning Time: 51.256 ms
 Execution Time: 1377.955 ms
(60 rows)

SET
                                                                                                        QUERY PLAN                                                                                                         
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8939.01..8939.02 rows=1 width=128) (actual time=322.930..322.930 rows=1 loops=1)
   ->  Nested Loop  (cost=1010.59..8939.00 rows=1 width=80) (actual time=117.434..322.876 rows=84 loops=1)
         ->  Nested Loop  (cost=1010.16..8937.71 rows=1 width=69) (actual time=117.406..322.469 rows=84 loops=1)
               ->  Nested Loop  (cost=1010.02..8937.53 rows=1 width=73) (actual time=117.393..322.177 rows=252 loops=1)
                     Join Filter: (t.id = mi_idx.movie_id)
                     ->  Nested Loop  (cost=1009.59..8936.42 rows=1 width=83) (actual time=117.362..321.879 rows=84 loops=1)
                           ->  Nested Loop  (cost=1009.45..8936.24 rows=1 width=87) (actual time=117.346..321.737 rows=84 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=1009.01..8912.87 rows=1 width=37) (actual time=117.047..317.637 rows=53 loops=1)
                                       ->  Nested Loop  (cost=1008.59..8911.15 rows=1 width=41) (actual time=116.997..317.248 rows=119 loops=1)
                                             Join Filter: (t.id = mc.movie_id)
                                             ->  Nested Loop  (cost=1008.16..8908.99 rows=1 width=33) (actual time=74.242..316.176 rows=77 loops=1)
                                                   Join Filter: (t.id = ci.movie_id)
                                                   ->  Gather  (cost=1007.60..8875.95 rows=1 width=25) (actual time=58.940..309.368 rows=49 loops=1)
                                                         Workers Planned: 2
                                                         Workers Launched: 2
                                                         ->  Nested Loop  (cost=7.60..7875.85 rows=1 width=25) (actual time=64.523..246.427 rows=16 loops=3)
                                                               ->  Nested Loop  (cost=7.17..7767.34 rows=98 width=4) (actual time=4.448..115.631 rows=25571 loops=3)
                                                                     ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4562.73 rows=3 width=4) (actual time=0.182..23.419 rows=2 loops=3)
                                                                           Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                           Rows Removed by Filter: 44721
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1065.21 rows=299 width=8) (actual time=3.148..38.342 rows=10959 loops=7)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=12389
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.810..1.810 rows=10959 loops=7)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using title_pkey on title t  (cost=0.43..1.11 rows=1 width=21) (actual time=0.005..0.005 rows=0 loops=76714)
                                                                     Index Cond: (id = mk.movie_id)
                                                                     Filter: ((production_year > 2000) AND (((title)::text ~~ '%Freddy%'::text) OR ((title)::text ~~ '%Jason%'::text) OR ((title)::text ~~ 'Saw%'::text)))
                                                                     Rows Removed by Filter: 1
                                                   ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..33.03 rows=1 width=8) (actual time=0.152..0.227 rows=2 loops=49)
                                                         Index Cond: (movie_id = mk.movie_id)
                                                         Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                                         Rows Removed by Filter: 82
                                             ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.15 rows=1 width=8) (actual time=0.009..0.013 rows=2 loops=77)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((note)::text ~~ '%(Blu-ray)%'::text)
                                                   Rows Removed by Filter: 24
                                       ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.61 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=119)
                                             Index Cond: (id = mc.company_id)
                                             Filter: ((name)::text ~~ 'Lionsgate%'::text)
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..23.36 rows=1 width=50) (actual time=0.076..0.077 rows=2 loops=53)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Horror,Thriller}'::text[]))
                                       Rows Removed by Filter: 292
                           ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=84)
                                 Index Cond: (id = mi.info_type_id)
                                 Filter: ((info)::text = 'genres'::text)
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..1.07 rows=3 width=14) (actual time=0.002..0.003 rows=3 loops=84)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=252)
                     Index Cond: (id = mi_idx.info_type_id)
                     Filter: ((info)::text = 'votes'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using name_pkey on name n  (cost=0.43..1.29 rows=1 width=19) (actual time=0.004..0.004 rows=1 loops=84)
               Index Cond: (id = ci.person_id)
               Filter: ((gender)::text = 'm'::text)
 Planning Time: 50.612 ms
 Execution Time: 327.579 ms
(60 rows)

SET
                                                                                                      QUERY PLAN                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8954.61..8954.62 rows=1 width=128) (actual time=1382.679..1382.679 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.87..8954.60 rows=1 width=80) (actual time=58.172..1381.623 rows=2825 loops=1)
         Join Filter: (mi.movie_id = t.id)
         ->  Nested Loop  (cost=1012.44..8953.49 rows=1 width=83) (actual time=58.150..1372.634 rows=2825 loops=1)
               ->  Nested Loop  (cost=1012.01..8952.20 rows=1 width=72) (actual time=58.121..1360.659 rows=2825 loops=1)
                     ->  Nested Loop  (cost=1011.87..8952.02 rows=1 width=76) (actual time=58.112..1356.537 rows=3007 loops=1)
                           Join Filter: (mi_idx.movie_id = mi.movie_id)
                           ->  Nested Loop  (cost=1011.44..8928.44 rows=1 width=26) (actual time=28.711..1242.385 rows=1471 loops=1)
                                 Join Filter: (mi_idx.movie_id = ci.movie_id)
                                 ->  Gather  (cost=1010.87..8895.40 rows=1 width=18) (actual time=28.437..897.872 rows=1547 loops=1)
                                       Workers Planned: 2
                                       Workers Launched: 2
                                       ->  Nested Loop  (cost=10.87..7895.30 rows=1 width=18) (actual time=17.251..960.723 rows=516 loops=3)
                                             ->  Nested Loop  (cost=10.45..7882.53 rows=13 width=22) (actual time=4.700..457.761 rows=199419 loops=3)
                                                   Join Filter: (mi_idx.movie_id = mc.movie_id)
                                                   ->  Hash Join  (cost=10.02..7878.13 rows=2 width=14) (actual time=4.664..252.837 rows=21234 loops=3)
                                                         Hash Cond: (mi_idx.info_type_id = it2.id)
                                                         ->  Nested Loop  (cost=7.60..7874.90 rows=294 width=18) (actual time=4.579..243.499 rows=63896 loops=3)
                                                               ->  Nested Loop  (cost=7.17..7767.34 rows=98 width=4) (actual time=4.541..125.679 rows=25571 loops=3)
                                                                     ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4562.73 rows=3 width=4) (actual time=0.278..22.693 rows=2 loops=3)
                                                                           Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                           Rows Removed by Filter: 44721
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1065.21 rows=299 width=8) (actual time=3.162..42.837 rows=10959 loops=7)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=12389
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.822..1.822 rows=10959 loops=7)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..1.07 rows=3 width=14) (actual time=0.004..0.004 rows=2 loops=76714)
                                                                     Index Cond: (movie_id = mk.movie_id)
                                                         ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.028..0.028 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.022..0.024 rows=1 loops=3)
                                                                     Filter: ((info)::text = 'votes'::text)
                                                                     Rows Removed by Filter: 112
                                                   ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.14 rows=5 width=8) (actual time=0.005..0.008 rows=9 loops=63701)
                                                         Index Cond: (movie_id = mk.movie_id)
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.98 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=598256)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((name)::text ~~ 'Lionsgate%'::text)
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..33.03 rows=1 width=8) (actual time=0.163..0.225 rows=1 loops=1547)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                       Rows Removed by Filter: 119
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..23.57 rows=1 width=50) (actual time=0.074..0.077 rows=2 loops=1471)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((info)::text = ANY ('{Horror,Action,Sci-Fi,Thriller,Crime,War}'::text[]))
                                 Rows Removed by Filter: 172
                     ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=3007)
                           Index Cond: (id = mi.info_type_id)
                           Filter: ((info)::text = 'genres'::text)
                           Rows Removed by Filter: 0
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.29 rows=1 width=19) (actual time=0.004..0.004 rows=1 loops=2825)
                     Index Cond: (id = ci.person_id)
         ->  Index Scan using title_pkey on title t  (cost=0.43..1.10 rows=1 width=21) (actual time=0.003..0.003 rows=1 loops=2825)
               Index Cond: (id = mk.movie_id)
 Planning Time: 51.121 ms
 Execution Time: 1387.464 ms
(58 rows)

SET
                                                                              QUERY PLAN                                                                               
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3802.90..3802.91 rows=1 width=96) (actual time=15.880..15.880 rows=1 loops=1)
   ->  Nested Loop  (cost=7.90..3802.82 rows=11 width=116) (actual time=15.877..15.877 rows=0 loops=1)
         ->  Nested Loop  (cost=7.47..3756.66 rows=11 width=103) (actual time=15.877..15.877 rows=0 loops=1)
               ->  Nested Loop  (cost=7.04..3751.32 rows=11 width=94) (actual time=15.877..15.877 rows=0 loops=1)
                     Join Filter: (ml.link_type_id = lt.id)
                     ->  Nested Loop  (cost=7.04..3747.37 rows=11 width=16) (actual time=15.877..15.877 rows=0 loops=1)
                           ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=15.515..15.866 rows=1 loops=1)
                                 ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=15.482..15.833 rows=1 loops=1)
                                       Filter: ((keyword)::text = '10,000-mile-club'::text)
                                       Rows Removed by Filter: 134169
                                 ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=0.028..0.029 rows=1 loops=1)
                                       Recheck Cond: (keyword_id = k.id)
                                       Heap Blocks: exact=1
                                       ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.012..0.012 rows=1 loops=1)
                                             Index Cond: (keyword_id = k.id)
                           ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=12) (actual time=0.009..0.009 rows=0 loops=1)
                                 Index Cond: (movie_id = mk.movie_id)
                     ->  Materialize  (cost=0.00..1.27 rows=18 width=86) (never executed)
                           ->  Seq Scan on link_type lt  (cost=0.00..1.18 rows=18 width=86) (never executed)
               ->  Index Scan using title_pkey on title t1  (cost=0.43..0.49 rows=1 width=21) (never executed)
                     Index Cond: (id = mk.movie_id)
         ->  Index Scan using title_pkey on title t2  (cost=0.43..4.20 rows=1 width=21) (never executed)
               Index Cond: (id = ml.linked_movie_id)
 Planning Time: 2.954 ms
 Execution Time: 16.019 ms
(25 rows)

SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3802.90..3802.91 rows=1 width=96) (actual time=185.130..185.130 rows=1 loops=1)
   ->  Nested Loop  (cost=7.90..3802.82 rows=11 width=116) (actual time=6.817..184.027 rows=4388 loops=1)
         ->  Nested Loop  (cost=7.47..3756.66 rows=11 width=103) (actual time=6.787..140.728 rows=4388 loops=1)
               ->  Nested Loop  (cost=7.04..3751.32 rows=11 width=94) (actual time=6.764..129.257 rows=4388 loops=1)
                     Join Filter: (ml.link_type_id = lt.id)
                     Rows Removed by Join Filter: 30206
                     ->  Nested Loop  (cost=7.04..3747.37 rows=11 width=16) (actual time=6.743..124.517 rows=4388 loops=1)
                           ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.638..85.129 rows=41840 loops=1)
                                 ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.493..11.935 rows=1 loops=1)
                                       Filter: ((keyword)::text = 'character-name-in-title'::text)
                                       Rows Removed by Filter: 134169
                                 ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.142..69.262 rows=41840 loops=1)
                                       Recheck Cond: (keyword_id = k.id)
                                       Heap Blocks: exact=11541
                                       ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=4.068..4.068 rows=41840 loops=1)
                                             Index Cond: (keyword_id = k.id)
                           ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=12) (actual time=0.001..0.001 rows=0 loops=41840)
                                 Index Cond: (movie_id = mk.movie_id)
                     ->  Materialize  (cost=0.00..1.27 rows=18 width=86) (actual time=0.000..0.000 rows=8 loops=4388)
                           ->  Seq Scan on link_type lt  (cost=0.00..1.18 rows=18 width=86) (actual time=0.009..0.011 rows=17 loops=1)
               ->  Index Scan using title_pkey on title t1  (cost=0.43..0.49 rows=1 width=21) (actual time=0.002..0.002 rows=1 loops=4388)
                     Index Cond: (id = mk.movie_id)
         ->  Index Scan using title_pkey on title t2  (cost=0.43..4.20 rows=1 width=21) (actual time=0.010..0.010 rows=1 loops=4388)
               Index Cond: (id = ml.linked_movie_id)
 Planning Time: 2.424 ms
 Execution Time: 185.323 ms
(26 rows)

SET
                                                                                                                  QUERY PLAN                                                                                                                   
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4451.76..4451.77 rows=1 width=192) (actual time=71.651..71.651 rows=1 loops=1)
   ->  Nested Loop  (cost=6.44..4451.74 rows=1 width=84) (actual time=11.938..71.638 rows=8 loops=1)
         ->  Nested Loop  (cost=6.02..4451.30 rows=1 width=69) (actual time=11.929..71.583 rows=8 loops=1)
               Join Filter: (t2.id = mc2.movie_id)
               ->  Nested Loop  (cost=5.59..4450.56 rows=1 width=77) (actual time=11.910..71.549 rows=2 loops=1)
                     Join Filter: ((ml.linked_movie_id = t2.id) AND (kt2.id = t2.kind_id))
                     ->  Nested Loop  (cost=5.16..4449.84 rows=1 width=60) (actual time=11.884..71.447 rows=12 loops=1)
                           ->  Nested Loop  (cost=4.74..4449.40 rows=1 width=45) (actual time=11.847..70.958 rows=81 loops=1)
                                 ->  Nested Loop  (cost=4.31..4448.79 rows=1 width=53) (actual time=11.824..70.595 rows=28 loops=1)
                                       Join Filter: (it2.id = mi_idx2.info_type_id)
                                       Rows Removed by Join Filter: 1595
                                       ->  Nested Loop  (cost=3.88..4409.59 rows=19 width=47) (actual time=0.209..62.603 rows=1220 loops=1)
                                             Join Filter: (kt1.id = t1.kind_id)
                                             Rows Removed by Join Filter: 844
                                             ->  Nested Loop  (cost=0.00..2.18 rows=1 width=8) (actual time=0.018..0.020 rows=1 loops=1)
                                                   ->  Seq Scan on kind_type kt1  (cost=0.00..1.09 rows=1 width=4) (actual time=0.015..0.016 rows=1 loops=1)
                                                         Filter: ((kind)::text = 'tv series'::text)
                                                         Rows Removed by Filter: 6
                                                   ->  Seq Scan on kind_type kt2  (cost=0.00..1.09 rows=1 width=4) (actual time=0.001..0.003 rows=1 loops=1)
                                                         Filter: ((kind)::text = 'tv series'::text)
                                                         Rows Removed by Filter: 6
                                             ->  Nested Loop  (cost=3.88..4405.75 rows=132 width=47) (actual time=0.190..62.322 rows=2064 loops=1)
                                                   Join Filter: (ml.movie_id = t1.id)
                                                   ->  Nested Loop  (cost=3.45..4328.60 rows=132 width=22) (actual time=0.170..54.782 rows=2064 loops=1)
                                                         Join Filter: (ml.link_type_id = lt.id)
                                                         Rows Removed by Join Filter: 38685
                                                         ->  Nested Loop  (cost=3.45..4292.61 rows=794 width=26) (actual time=0.068..47.869 rows=20890 loops=1)
                                                               ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.010..0.012 rows=1 loops=1)
                                                                     Filter: ((info)::text = 'rating'::text)
                                                                     Rows Removed by Filter: 112
                                                               ->  Hash Join  (cost=3.45..4282.26 rows=794 width=22) (actual time=0.057..45.985 rows=20890 loops=1)
                                                                     Hash Cond: (mi_idx1.info_type_id = it1.id)
                                                                     ->  Merge Join  (cost=1.03..4035.43 rows=89741 width=26) (actual time=0.016..39.586 rows=62670 loops=1)
                                                                           Merge Cond: (ml.movie_id = mi_idx1.movie_id)
                                                                           ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..959.51 rows=29997 width=12) (actual time=0.005..5.229 rows=29997 loops=1)
                                                                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43820.38 rows=1380035 width=14) (actual time=0.008..18.721 rows=114373 loops=1)
                                                                     ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.016..0.016 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=1)
                                                                                 Filter: ((info)::text = 'rating'::text)
                                                                                 Rows Removed by Filter: 112
                                                         ->  Materialize  (cost=0.00..1.26 rows=3 width=4) (actual time=0.000..0.000 rows=2 loops=20890)
                                                               ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=3 width=4) (actual time=0.012..0.015 rows=2 loops=1)
                                                                     Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                     Rows Removed by Filter: 16
                                                   ->  Index Scan using title_pkey on title t1  (cost=0.43..0.57 rows=1 width=25) (actual time=0.003..0.003 rows=1 loops=2064)
                                                         Index Cond: (id = mi_idx1.movie_id)
                                       ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=1 width=14) (actual time=0.006..0.006 rows=1 loops=1220)
                                             Index Cond: (movie_id = ml.linked_movie_id)
                                             Filter: ((info)::text < '3.0'::text)
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.009..0.012 rows=3 loops=28)
                                       Index Cond: (movie_id = t1.id)
                           ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.006..0.006 rows=0 loops=81)
                                 Index Cond: (id = mc1.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using title_pkey on title t2  (cost=0.43..0.71 rows=1 width=25) (actual time=0.008..0.008 rows=0 loops=12)
                           Index Cond: (id = mi_idx2.movie_id)
                           Filter: ((production_year >= 2005) AND (production_year <= 2008))
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.67 rows=5 width=8) (actual time=0.010..0.015 rows=4 loops=2)
                     Index Cond: (movie_id = mi_idx2.movie_id)
         ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.006..0.006 rows=1 loops=8)
               Index Cond: (id = mc2.company_id)
 Planning Time: 92.285 ms
 Execution Time: 71.928 ms
(67 rows)

SET
                                                                                                                 QUERY PLAN                                                                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=2681.30..2681.31 rows=1 width=192) (actual time=46.200..46.201 rows=1 loops=1)
   ->  Nested Loop  (cost=340.64..2681.28 rows=1 width=84) (actual time=8.554..46.189 rows=4 loops=1)
         Join Filter: ((t2.id = mi_idx2.movie_id) AND (it2.id = mi_idx2.info_type_id))
         Rows Removed by Join Filter: 4
         ->  Nested Loop  (cost=340.21..2680.76 rows=1 width=94) (actual time=8.542..46.168 rows=4 loops=1)
               ->  Nested Loop  (cost=340.08..2680.59 rows=1 width=98) (actual time=8.535..46.156 rows=4 loops=1)
                     Join Filter: (ml.movie_id = t1.id)
                     ->  Nested Loop  (cost=339.65..2680.06 rows=1 width=89) (actual time=8.525..46.139 rows=4 loops=1)
                           ->  Nested Loop  (cost=339.23..2679.62 rows=1 width=74) (actual time=8.520..46.128 rows=4 loops=1)
                                 ->  Nested Loop  (cost=338.80..2678.21 rows=1 width=66) (actual time=8.516..46.121 rows=1 loops=1)
                                       ->  Nested Loop  (cost=338.67..2678.04 rows=1 width=70) (actual time=2.055..46.093 rows=6 loops=1)
                                             ->  Nested Loop  (cost=338.24..2669.65 rows=2 width=45) (actual time=2.027..43.811 rows=477 loops=1)
                                                   ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..14.12 rows=1 width=4) (actual time=0.016..0.019 rows=1 loops=1)
                                                         Filter: ((info)::text = 'rating'::text)
                                                         Rows Removed by Filter: 112
                                                   ->  Nested Loop  (cost=338.09..2655.51 rows=2 width=41) (actual time=2.009..43.737 rows=477 loops=1)
                                                         ->  Nested Loop  (cost=337.67..2557.48 rows=220 width=26) (actual time=1.951..25.616 rows=9674 loops=1)
                                                               Join Filter: (ml.movie_id = mc1.movie_id)
                                                               ->  Hash Join  (cost=337.24..2528.65 rows=44 width=18) (actual time=1.944..16.363 rows=2064 loops=1)
                                                                     Hash Cond: (mi_idx1.info_type_id = it1.id)
                                                                     ->  Merge Join  (cost=334.82..2512.65 rows=4984 width=22) (actual time=1.907..15.674 rows=6192 loops=1)
                                                                           Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43820.38 rows=1380035 width=14) (actual time=0.007..8.305 rows=63901 loops=1)
                                                                           ->  Sort  (cost=334.38..338.55 rows=1666 width=8) (actual time=1.878..2.200 rows=6443 loops=1)
                                                                                 Sort Key: ml.movie_id
                                                                                 Sort Method: quicksort  Memory: 205kB
                                                                                 ->  Nested Loop  (cost=38.82..245.23 rows=1666 width=8) (actual time=0.120..1.363 rows=2315 loops=1)
                                                                                       ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=4) (actual time=0.012..0.015 rows=2 loops=1)
                                                                                             Filter: ((link)::text ~~ '%follow%'::text)
                                                                                             Rows Removed by Filter: 16
                                                                                       ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..225.26 rows=1875 width=12) (actual time=0.090..0.563 rows=1158 loops=2)
                                                                                             Recheck Cond: (link_type_id = lt.id)
                                                                                             Heap Blocks: exact=191
                                                                                             ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.074..0.074 rows=1158 loops=2)
                                                                                                   Index Cond: (link_type_id = lt.id)
                                                                     ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.014..0.015 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=1)
                                                                                 Filter: ((info)::text = 'rating'::text)
                                                                                 Rows Removed by Filter: 112
                                                               ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.59 rows=5 width=8) (actual time=0.002..0.004 rows=5 loops=2064)
                                                                     Index Cond: (movie_id = mi_idx1.movie_id)
                                                         ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=9674)
                                                               Index Cond: (id = mc1.company_id)
                                                               Filter: ((country_code)::text = '[nl]'::text)
                                                               Rows Removed by Filter: 1
                                             ->  Index Scan using title_pkey on title t2  (cost=0.43..4.20 rows=1 width=25) (actual time=0.005..0.005 rows=0 loops=477)
                                                   Index Cond: (id = ml.linked_movie_id)
                                                   Filter: (production_year = 2007)
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=6)
                                             Index Cond: (id = t2.kind_id)
                                             Filter: ((kind)::text = 'tv series'::text)
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..1.35 rows=5 width=8) (actual time=0.003..0.005 rows=4 loops=1)
                                       Index Cond: (movie_id = t2.id)
                           ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=4)
                                 Index Cond: (id = mc2.company_id)
                     ->  Index Scan using title_pkey on title t1  (cost=0.43..0.51 rows=1 width=25) (actual time=0.003..0.003 rows=1 loops=4)
                           Index Cond: (id = mc1.movie_id)
               ->  Index Scan using kind_type_pkey on kind_type kt1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=4)
                     Index Cond: (id = t1.kind_id)
                     Filter: ((kind)::text = 'tv series'::text)
         ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..0.51 rows=1 width=14) (actual time=0.004..0.004 rows=2 loops=4)
               Index Cond: (movie_id = mc2.movie_id)
               Filter: ((info)::text < '3.0'::text)
               Rows Removed by Filter: 1
 Planning Time: 92.120 ms
 Execution Time: 46.492 ms
(69 rows)

SET
                                                                                                                 QUERY PLAN                                                                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3851.97..3851.98 rows=1 width=192) (actual time=36.170..36.170 rows=1 loops=1)
   ->  Nested Loop  (cost=875.97..3851.96 rows=1 width=84) (actual time=10.172..36.111 rows=114 loops=1)
         ->  Nested Loop  (cost=875.55..3851.51 rows=1 width=69) (actual time=10.163..35.766 rows=131 loops=1)
               ->  Nested Loop  (cost=875.12..3850.90 rows=1 width=77) (actual time=10.155..35.598 rows=44 loops=1)
                     ->  Nested Loop  (cost=874.70..3850.46 rows=1 width=62) (actual time=10.143..35.439 rows=44 loops=1)
                           ->  Nested Loop  (cost=874.27..3849.79 rows=1 width=70) (actual time=10.134..35.258 rows=19 loops=1)
                                 ->  Nested Loop  (cost=874.14..3849.63 rows=1 width=74) (actual time=9.325..35.209 rows=27 loops=1)
                                       Join Filter: (it2.id = mi_idx2.info_type_id)
                                       Rows Removed by Join Filter: 1170
                                       ->  Nested Loop  (cost=873.71..3841.45 rows=15 width=68) (actual time=5.951..32.620 rows=851 loops=1)
                                             ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..14.12 rows=1 width=4) (actual time=0.016..0.019 rows=1 loops=1)
                                                   Filter: ((info)::text = 'rating'::text)
                                                   Rows Removed by Filter: 112
                                             ->  Hash Join  (cost=873.57..3827.18 rows=15 width=64) (actual time=5.933..32.489 rows=851 loops=1)
                                                   Hash Cond: (t1.kind_id = kt1.id)
                                                   ->  Nested Loop  (cost=872.46..3825.83 rows=54 width=68) (actual time=5.897..32.273 rows=851 loops=1)
                                                         Join Filter: (ml.movie_id = t1.id)
                                                         ->  Nested Loop  (cost=872.03..3794.27 rows=54 width=43) (actual time=5.891..30.452 rows=851 loops=1)
                                                               ->  Hash Join  (cost=871.60..3239.76 rows=132 width=18) (actual time=5.862..20.170 rows=2064 loops=1)
                                                                     Hash Cond: (mi_idx1.info_type_id = it1.id)
                                                                     ->  Merge Join  (cost=869.17..3196.60 rows=14958 width=22) (actual time=5.833..19.486 rows=6192 loops=1)
                                                                           Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43820.38 rows=1380035 width=14) (actual time=0.008..8.170 rows=63901 loops=1)
                                                                           ->  Sort  (cost=868.72..881.22 rows=5000 width=8) (actual time=5.804..6.123 rows=6443 loops=1)
                                                                                 Sort Key: ml.movie_id
                                                                                 Sort Method: quicksort  Memory: 205kB
                                                                                 ->  Hash Join  (cost=1.29..561.53 rows=5000 width=8) (actual time=0.035..5.297 rows=2315 loops=1)
                                                                                       Hash Cond: (ml.link_type_id = lt.id)
                                                                                       ->  Seq Scan on movie_link ml  (cost=0.00..462.97 rows=29997 width=12) (actual time=0.003..2.883 rows=29997 loops=1)
                                                                                       ->  Hash  (cost=1.25..1.25 rows=3 width=4) (actual time=0.015..0.015 rows=2 loops=1)
                                                                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                             ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=3 width=4) (actual time=0.010..0.012 rows=2 loops=1)
                                                                                                   Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                                   Rows Removed by Filter: 16
                                                                     ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.012..0.012 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=1)
                                                                                 Filter: ((info)::text = 'rating'::text)
                                                                                 Rows Removed by Filter: 112
                                                               ->  Index Scan using title_pkey on title t2  (cost=0.43..4.20 rows=1 width=25) (actual time=0.005..0.005 rows=0 loops=2064)
                                                                     Index Cond: (id = ml.linked_movie_id)
                                                                     Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                                                     Rows Removed by Filter: 1
                                                         ->  Index Scan using title_pkey on title t1  (cost=0.43..0.57 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=851)
                                                               Index Cond: (id = mi_idx1.movie_id)
                                                   ->  Hash  (cost=1.09..1.09 rows=2 width=4) (actual time=0.015..0.015 rows=2 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on kind_type kt1  (cost=0.00..1.09 rows=2 width=4) (actual time=0.008..0.010 rows=2 loops=1)
                                                               Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                                                               Rows Removed by Filter: 5
                                       ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..0.53 rows=1 width=14) (actual time=0.002..0.003 rows=1 loops=851)
                                             Index Cond: (movie_id = t2.id)
                                             Filter: ((info)::text < '3.5'::text)
                                             Rows Removed by Filter: 2
                                 ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=27)
                                       Index Cond: (id = t2.kind_id)
                                       Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                                       Rows Removed by Filter: 0
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.62 rows=5 width=8) (actual time=0.007..0.009 rows=2 loops=19)
                                 Index Cond: (movie_id = t2.id)
                     ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.003..0.003 rows=1 loops=44)
                           Index Cond: (id = mc2.company_id)
               ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.002..0.003 rows=3 loops=44)
                     Index Cond: (movie_id = t1.id)
         ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=131)
               Index Cond: (id = mc1.company_id)
               Filter: ((country_code)::text <> '[us]'::text)
               Rows Removed by Filter: 0
 Planning Time: 89.657 ms
 Execution Time: 36.452 ms
(70 rows)

SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16579.47..16579.48 rows=1 width=32) (actual time=227.233..227.233 rows=1 loops=1)
   ->  Nested Loop  (cost=7.61..16579.31 rows=65 width=17) (actual time=6.909..227.169 rows=206 loops=1)
         Join Filter: (t.id = mi.movie_id)
         ->  Nested Loop  (cost=7.18..16269.29 rows=174 width=25) (actual time=5.141..129.618 rows=2235 loops=1)
               ->  Nested Loop  (cost=6.75..16055.56 rows=438 width=4) (actual time=3.582..59.815 rows=12951 loops=1)
                     ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=1.190..21.915 rows=30 loops=1)
                           Filter: ((keyword)::text ~~ '%sequel%'::text)
                           Rows Removed by Filter: 134140
                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1030.04 rows=299 width=8) (actual time=0.101..1.213 rows=432 loops=30)
                           Recheck Cond: (keyword_id = k.id)
                           Heap Blocks: exact=6979
                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.062..0.062 rows=432 loops=30)
                                 Index Cond: (keyword_id = k.id)
               ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.005..0.005 rows=0 loops=12951)
                     Index Cond: (id = mk.movie_id)
                     Filter: (production_year > 2005)
                     Rows Removed by Filter: 1
         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.77 rows=1 width=4) (actual time=0.041..0.043 rows=0 loops=2235)
               Index Cond: (movie_id = mk.movie_id)
               Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German}'::text[]))
               Rows Removed by Filter: 45
 Planning Time: 1.873 ms
 Execution Time: 227.332 ms
(23 rows)

SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16369.03..16369.04 rows=1 width=32) (actual time=146.881..146.881 rows=1 loops=1)
   ->  Nested Loop  (cost=7.61..16369.03 rows=1 width=17) (actual time=10.987..146.868 rows=5 loops=1)
         Join Filter: (t.id = mi.movie_id)
         ->  Nested Loop  (cost=7.18..16269.29 rows=68 width=25) (actual time=5.458..126.018 rows=405 loops=1)
               ->  Nested Loop  (cost=6.75..16055.56 rows=438 width=4) (actual time=3.720..59.396 rows=12951 loops=1)
                     ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=1.345..22.325 rows=30 loops=1)
                           Filter: ((keyword)::text ~~ '%sequel%'::text)
                           Rows Removed by Filter: 134140
                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1030.04 rows=299 width=8) (actual time=0.099..1.187 rows=432 loops=30)
                           Recheck Cond: (keyword_id = k.id)
                           Heap Blocks: exact=6979
                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.060..0.060 rows=432 loops=30)
                                 Index Cond: (keyword_id = k.id)
               ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.005..0.005 rows=0 loops=12951)
                     Index Cond: (id = mk.movie_id)
                     Filter: (production_year > 2010)
                     Rows Removed by Filter: 1
         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.45 rows=1 width=4) (actual time=0.050..0.051 rows=0 loops=405)
               Index Cond: (movie_id = mk.movie_id)
               Filter: ((info)::text = 'Bulgaria'::text)
               Rows Removed by Filter: 63
 Planning Time: 1.978 ms
 Execution Time: 146.993 ms
(23 rows)

SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16842.39..16842.40 rows=1 width=32) (actual time=391.469..391.469 rows=1 loops=1)
   ->  Nested Loop  (cost=7.61..16840.96 rows=570 width=17) (actual time=4.051..390.410 rows=7250 loops=1)
         Join Filter: (t.id = mi.movie_id)
         ->  Nested Loop  (cost=7.18..16269.29 rows=301 width=25) (actual time=3.780..121.177 rows=7874 loops=1)
               ->  Nested Loop  (cost=6.75..16055.56 rows=438 width=4) (actual time=3.755..56.328 rows=12951 loops=1)
                     ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=1.345..21.987 rows=30 loops=1)
                           Filter: ((keyword)::text ~~ '%sequel%'::text)
                           Rows Removed by Filter: 134140
                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1030.04 rows=299 width=8) (actual time=0.102..1.090 rows=432 loops=30)
                           Recheck Cond: (keyword_id = k.id)
                           Heap Blocks: exact=6979
                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.062..0.062 rows=432 loops=30)
                                 Index Cond: (keyword_id = k.id)
               ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.005..0.005 rows=1 loops=12951)
                     Index Cond: (id = mk.movie_id)
                     Filter: (production_year > 1990)
                     Rows Removed by Filter: 0
         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=4) (actual time=0.029..0.034 rows=1 loops=7874)
               Index Cond: (movie_id = mk.movie_id)
               Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,USA,American}'::text[]))
               Rows Removed by Filter: 35
 Planning Time: 2.078 ms
 Execution Time: 391.575 ms
(23 rows)

SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16288.57..16288.58 rows=1 width=64) (actual time=160.051..160.052 rows=1 loops=1)
   ->  Nested Loop  (cost=7.61..16288.56 rows=2 width=23) (actual time=6.042..159.878 rows=740 loops=1)
         Join Filter: (mi_idx.movie_id = t.id)
         ->  Nested Loop  (cost=7.18..16286.56 rows=4 width=14) (actual time=3.780..118.452 rows=5820 loops=1)
               Join Filter: (mi_idx.info_type_id = it.id)
               Rows Removed by Join Filter: 2613
               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.011..0.013 rows=1 loops=1)
                     Filter: ((info)::text = 'rating'::text)
                     Rows Removed by Filter: 112
               ->  Nested Loop  (cost=7.18..16278.01 rows=491 width=18) (actual time=3.766..117.311 rows=8433 loops=1)
                     ->  Nested Loop  (cost=6.75..16055.56 rows=438 width=4) (actual time=3.742..63.570 rows=12951 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=1.347..22.771 rows=30 loops=1)
                                 Filter: ((keyword)::text ~~ '%sequel%'::text)
                                 Rows Removed by Filter: 134140
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1030.04 rows=299 width=8) (actual time=0.101..1.309 rows=432 loops=30)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=6979
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.062..0.062 rows=432 loops=30)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=14) (actual time=0.004..0.004 rows=1 loops=12951)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((info)::text > '5.0'::text)
                           Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.007..0.007 rows=0 loops=5820)
               Index Cond: (id = mk.movie_id)
               Filter: (production_year > 2005)
               Rows Removed by Filter: 1
 Planning Time: 2.377 ms
 Execution Time: 160.180 ms
(29 rows)

SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16281.03..16281.04 rows=1 width=64) (actual time=92.036..92.036 rows=1 loops=1)
   ->  Nested Loop  (cost=7.61..16281.02 rows=1 width=23) (actual time=14.957..92.023 rows=6 loops=1)
         Join Filter: (mi_idx.movie_id = t.id)
         ->  Nested Loop  (cost=7.18..16280.52 rows=1 width=14) (actual time=13.127..91.836 rows=21 loops=1)
               Join Filter: (mi_idx.info_type_id = it.id)
               Rows Removed by Join Filter: 285
               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.012..0.014 rows=1 loops=1)
                     Filter: ((info)::text = 'rating'::text)
                     Rows Removed by Filter: 112
               ->  Nested Loop  (cost=7.18..16278.01 rows=8 width=18) (actual time=4.102..91.785 rows=306 loops=1)
                     ->  Nested Loop  (cost=6.75..16055.56 rows=438 width=4) (actual time=3.746..51.100 rows=12951 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=1.338..20.665 rows=30 loops=1)
                                 Filter: ((keyword)::text ~~ '%sequel%'::text)
                                 Rows Removed by Filter: 134140
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1030.04 rows=299 width=8) (actual time=0.095..0.970 rows=432 loops=30)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=6979
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.057..0.057 rows=432 loops=30)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=14) (actual time=0.003..0.003 rows=0 loops=12951)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((info)::text > '9.0'::text)
                           Rows Removed by Filter: 2
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.008..0.008 rows=0 loops=21)
               Index Cond: (id = mk.movie_id)
               Filter: (production_year > 2010)
               Rows Removed by Filter: 1
 Planning Time: 2.173 ms
 Execution Time: 92.159 ms
(29 rows)

SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16297.85..16297.86 rows=1 width=64) (actual time=131.241..131.241 rows=1 loops=1)
   ->  Nested Loop  (cost=7.61..16297.83 rows=5 width=23) (actual time=3.452..130.334 rows=4700 loops=1)
         Join Filter: (mi_idx.movie_id = t.id)
         ->  Nested Loop  (cost=7.18..16294.33 rows=7 width=14) (actual time=3.415..82.870 rows=8092 loops=1)
               Join Filter: (mi_idx.info_type_id = it.id)
               Rows Removed by Join Filter: 6507
               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.012..0.014 rows=1 loops=1)
                     Filter: ((info)::text = 'rating'::text)
                     Rows Removed by Filter: 112
               ->  Nested Loop  (cost=7.18..16282.39 rows=762 width=18) (actual time=3.401..81.276 rows=14599 loops=1)
                     ->  Nested Loop  (cost=6.75..16055.56 rows=438 width=4) (actual time=3.390..44.045 rows=12951 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=1.165..22.647 rows=30 loops=1)
                                 Filter: ((keyword)::text ~~ '%sequel%'::text)
                                 Rows Removed by Filter: 134140
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1030.04 rows=299 width=8) (actual time=0.094..0.664 rows=432 loops=30)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=6979
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.056..0.056 rows=432 loops=30)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=2 width=14) (actual time=0.002..0.003 rows=1 loops=12951)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((info)::text > '2.0'::text)
                           Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.006..0.006 rows=1 loops=8092)
               Index Cond: (id = mk.movie_id)
               Filter: (production_year > 1990)
               Rows Removed by Filter: 0
 Planning Time: 1.915 ms
 Execution Time: 131.362 ms
(29 rows)

SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=38740.79..38740.80 rows=1 width=32) (actual time=135.252..135.252 rows=1 loops=1)
   ->  Gather  (cost=38740.58..38740.79 rows=2 width=32) (actual time=135.188..135.915 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=37740.58..37740.59 rows=1 width=32) (actual time=132.729..132.729 rows=1 loops=3)
               ->  Hash Join  (cost=5.47..37740.50 rows=31 width=17) (actual time=132.726..132.726 rows=0 loops=3)
                     Hash Cond: (mi.info_type_id = it.id)
                     ->  Nested Loop  (cost=1.93..37736.88 rows=31 width=21) (actual time=132.725..132.725 rows=0 loops=3)
                           ->  Nested Loop  (cost=1.49..37442.96 rows=122 width=25) (actual time=132.725..132.725 rows=0 loops=3)
                                 ->  Hash Join  (cost=1.06..35104.78 rows=308 width=4) (actual time=132.725..132.725 rows=0 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..35097.06 rows=1231 width=8) (actual time=2.726..132.082 rows=8008 loops=3)
                                             Filter: (((note)::text ~~ '%(theatrical)%'::text) AND ((note)::text ~~ '%(France)%'::text))
                                             Rows Removed by Filter: 861701
                                       ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.022..0.022 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.013..0.014 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..7.59 rows=1 width=21) (never executed)
                                       Index Cond: (id = mc.movie_id)
                                       Filter: (production_year > 2005)
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.40 rows=1 width=8) (never executed)
                                 Index Cond: (movie_id = t.id)
                                 Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German}'::text[]))
                     ->  Hash  (cost=2.13..2.13 rows=113 width=4) (never executed)
                           ->  Seq Scan on info_type it  (cost=0.00..2.13 rows=113 width=4) (never executed)
 Planning Time: 2.374 ms
 Execution Time: 136.084 ms
(29 rows)

SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=38870.51..38870.52 rows=1 width=32) (actual time=127.646..127.646 rows=1 loops=1)
   ->  Gather  (cost=1002.07..38870.50 rows=2 width=17) (actual time=127.643..128.322 rows=0 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Nested Loop  (cost=2.07..37870.30 rows=1 width=17) (actual time=125.253..125.253 rows=0 loops=3)
               ->  Nested Loop  (cost=1.93..37870.14 rows=1 width=21) (actual time=125.253..125.253 rows=0 loops=3)
                     ->  Nested Loop  (cost=1.49..37866.79 rows=1 width=25) (actual time=125.253..125.253 rows=0 loops=3)
                           ->  Hash Join  (cost=1.06..37816.09 rows=6 width=4) (actual time=125.252..125.252 rows=0 loops=3)
                                 Hash Cond: (mc.company_type_id = ct.id)
                                 ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..37814.90 rows=25 width=8) (actual time=6.066..125.122 rows=473 loops=3)
                                       Filter: (((note)::text ~~ '%(VHS)%'::text) AND ((note)::text ~~ '%(USA)%'::text) AND ((note)::text ~~ '%(1994)%'::text))
                                       Rows Removed by Filter: 869237
                                 ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.018..0.018 rows=1 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.013..0.014 rows=1 loops=3)
                                             Filter: ((kind)::text = 'production companies'::text)
                                             Rows Removed by Filter: 3
                           ->  Index Scan using title_pkey on title t  (cost=0.43..8.45 rows=1 width=21) (never executed)
                                 Index Cond: (id = mc.movie_id)
                                 Filter: (production_year > 2010)
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..3.33 rows=2 width=8) (never executed)
                           Index Cond: (movie_id = t.id)
                           Filter: ((info)::text = ANY ('{USA,America}'::text[]))
               ->  Index Only Scan using info_type_pkey on info_type it  (cost=0.14..0.16 rows=1 width=4) (never executed)
                     Index Cond: (id = mi.info_type_id)
                     Heap Fetches: 0
 Planning Time: 2.092 ms
 Execution Time: 128.440 ms
(28 rows)

SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=88991.12..88991.13 rows=1 width=32) (actual time=188.234..188.234 rows=1 loops=1)
   ->  Gather  (cost=88990.90..88991.11 rows=2 width=32) (actual time=188.131..190.606 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=87990.90..87990.91 rows=1 width=32) (actual time=185.770..185.770 rows=1 loops=3)
               ->  Hash Join  (cost=5.47..87951.49 rows=15766 width=17) (actual time=118.436..185.721 rows=223 loops=3)
                     Hash Cond: (mi.info_type_id = it.id)
                     ->  Nested Loop  (cost=1.93..87905.00 rows=15766 width=21) (actual time=118.381..185.604 rows=223 loops=3)
                           ->  Nested Loop  (cost=1.49..61336.48 rows=12181 width=25) (actual time=118.314..165.848 rows=256 loops=3)
                                 ->  Hash Join  (cost=1.06..35481.01 rows=17705 width=4) (actual time=118.256..161.314 rows=266 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..35097.06 rows=70822 width=8) (actual time=0.029..154.589 rows=98543 loops=3)
                                             Filter: (((note)::text !~~ '%(TV)%'::text) AND ((note)::text ~~ '%(USA)%'::text))
                                             Rows Removed by Filter: 771167
                                       ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.016..0.017 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.011..0.011 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..1.46 rows=1 width=21) (actual time=0.017..0.017 rows=1 loops=798)
                                       Index Cond: (id = mc.movie_id)
                                       Filter: (production_year > 1990)
                                       Rows Removed by Filter: 0
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.16 rows=2 width=8) (actual time=0.069..0.077 rows=1 loops=767)
                                 Index Cond: (movie_id = t.id)
                                 Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,USA,American}'::text[]))
                                 Rows Removed by Filter: 10
                     ->  Hash  (cost=2.13..2.13 rows=113 width=4) (actual time=0.036..0.037 rows=113 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 12kB
                           ->  Seq Scan on info_type it  (cost=0.00..2.13 rows=113 width=4) (actual time=0.011..0.019 rows=113 loops=3)
 Planning Time: 2.078 ms
 Execution Time: 190.739 ms
(32 rows)

SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3848.64..3848.65 rows=1 width=96) (actual time=38.822..38.822 rows=1 loops=1)
   ->  Nested Loop  (cost=8.17..3848.63 rows=1 width=48) (actual time=4.762..38.809 rows=6 loops=1)
         ->  Nested Loop  (cost=7.74..3759.44 rows=195 width=37) (actual time=0.481..23.280 rows=1224 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.18..3749.50 rows=5 width=41) (actual time=0.456..15.713 rows=11 loops=1)
                     ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=20) (actual time=0.431..15.412 rows=14 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=20) (actual time=0.394..15.267 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'marvel-cinematic-universe'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=0.033..0.137 rows=14 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=12
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.019..0.019 rows=14 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.021..0.021 rows=1 loops=14)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2010)
                           Rows Removed by Filter: 0
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.020..0.666 rows=111 loops=11)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.012..0.012 rows=0 loops=1224)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ '%Downey%Robert%'::text)
               Rows Removed by Filter: 1
 Planning Time: 2.336 ms
 Execution Time: 38.953 ms
(26 rows)

SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=12284.11..12284.12 rows=1 width=96) (actual time=297.626..297.626 rows=1 loops=1)
   ->  Nested Loop  (cost=8.17..12284.10 rows=1 width=48) (actual time=31.160..297.602 rows=12 loops=1)
         ->  Nested Loop  (cost=7.74..12283.65 rows=1 width=37) (actual time=9.505..295.228 rows=383 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.18..12281.66 rows=1 width=41) (actual time=9.492..293.876 rows=36 loops=1)
                     ->  Nested Loop  (cost=6.75..12149.91 rows=270 width=20) (actual time=0.693..130.558 rows=35548 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..3632.40 rows=8 width=20) (actual time=0.098..29.753 rows=8 loops=1)
                                 Filter: ((keyword)::text = ANY ('{superhero,sequel,second-part,marvel-comics,based-on-comic,tv-special,fight,violence}'::text[]))
                                 Rows Removed by Filter: 134162
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1061.70 rows=299 width=8) (actual time=1.142..12.087 rows=4444 loops=8)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=23488
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.652..0.652 rows=4444 loops=8)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.004..0.004 rows=0 loops=35548)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2014)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.012..0.035 rows=11 loops=36)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.006..0.006 rows=0 loops=383)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ '%Downey%Robert%'::text)
               Rows Removed by Filter: 1
 Planning Time: 2.110 ms
 Execution Time: 297.751 ms
(26 rows)

SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3751.96..3751.97 rows=1 width=96) (actual time=11.603..11.603 rows=1 loops=1)
   ->  Nested Loop  (cost=8.17..3751.95 rows=1 width=48) (actual time=0.828..11.595 rows=2 loops=1)
         ->  Nested Loop  (cost=7.74..3751.49 rows=1 width=37) (actual time=0.472..11.408 rows=33 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.18..3749.51 rows=1 width=41) (actual time=0.448..11.272 rows=2 loops=1)
                     ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=20) (actual time=0.405..11.027 rows=14 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=20) (actual time=0.377..10.923 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'marvel-cinematic-universe'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=0.025..0.099 rows=14 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=12
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.019..0.019 rows=14 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.017..0.017 rows=0 loops=14)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2014)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.021..0.064 rows=16 loops=2)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.005..0.005 rows=0 loops=33)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ '%Downey%Robert%'::text)
               Rows Removed by Filter: 1
 Planning Time: 2.502 ms
 Execution Time: 11.734 ms
(26 rows)

SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=15053.68..15053.69 rows=1 width=96) (actual time=6885.121..6885.121 rows=1 loops=1)
   ->  Nested Loop  (cost=8.17..15053.68 rows=1 width=48) (actual time=191.245..6884.992 rows=88 loops=1)
         ->  Nested Loop  (cost=7.74..12573.66 rows=5422 width=37) (actual time=0.747..2576.841 rows=785477 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.18..12281.66 rows=147 width=41) (actual time=0.724..337.039 rows=14165 loops=1)
                     ->  Nested Loop  (cost=6.75..12149.91 rows=270 width=20) (actual time=0.702..139.892 rows=35548 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..3632.40 rows=8 width=20) (actual time=0.099..30.173 rows=8 loops=1)
                                 Filter: ((keyword)::text = ANY ('{superhero,sequel,second-part,marvel-comics,based-on-comic,tv-special,fight,violence}'::text[]))
                                 Rows Removed by Filter: 134162
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1061.70 rows=299 width=8) (actual time=1.149..13.006 rows=4444 loops=8)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=23488
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.663..0.663 rows=4444 loops=8)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.005..0.005 rows=0 loops=35548)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2000)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.008..0.148 rows=55 loops=14165)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.005..0.005 rows=0 loops=785477)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ '%Downey%Robert%'::text)
               Rows Removed by Filter: 1
 Planning Time: 2.083 ms
 Execution Time: 6885.241 ms
(26 rows)

SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4095.38..4095.39 rows=1 width=96) (actual time=25.304..25.304 rows=1 loops=1)
   ->  Nested Loop  (cost=8.17..4095.38 rows=1 width=48) (actual time=4.189..25.291 rows=6 loops=1)
         ->  Nested Loop  (cost=7.74..3785.26 rows=678 width=37) (actual time=0.471..15.436 rows=1224 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.18..3749.50 rows=18 width=41) (actual time=0.438..10.785 rows=11 loops=1)
                     ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=20) (actual time=0.416..10.574 rows=14 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=20) (actual time=0.379..10.457 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'marvel-cinematic-universe'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=0.034..0.110 rows=14 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=12
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.022..0.022 rows=14 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.014..0.014 rows=1 loops=14)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2000)
                           Rows Removed by Filter: 0
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.017..0.404 rows=111 loops=11)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.008..0.008 rows=0 loops=1224)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ '%Downey%Robert%'::text)
               Rows Removed by Filter: 1
 Planning Time: 2.529 ms
 Execution Time: 25.435 ms
(26 rows)

SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=15080.79..15080.80 rows=1 width=96) (actual time=6955.526..6955.526 rows=1 loops=1)
   ->  Nested Loop  (cost=8.17..15040.12 rows=5422 width=48) (actual time=0.756..6779.244 rows=785477 loops=1)
         ->  Nested Loop  (cost=7.74..12573.66 rows=5422 width=37) (actual time=0.728..2591.737 rows=785477 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.18..12281.66 rows=147 width=41) (actual time=0.706..336.118 rows=14165 loops=1)
                     ->  Nested Loop  (cost=6.75..12149.91 rows=270 width=20) (actual time=0.683..139.112 rows=35548 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..3632.40 rows=8 width=20) (actual time=0.103..29.631 rows=8 loops=1)
                                 Filter: ((keyword)::text = ANY ('{superhero,sequel,second-part,marvel-comics,based-on-comic,tv-special,fight,violence}'::text[]))
                                 Rows Removed by Filter: 134162
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1061.70 rows=299 width=8) (actual time=1.151..12.973 rows=4444 loops=8)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=23488
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.664..0.664 rows=4444 loops=8)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.005..0.005 rows=0 loops=35548)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2000)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.008..0.149 rows=55 loops=14165)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=19) (actual time=0.005..0.005 rows=1 loops=785477)
               Index Cond: (id = ci.person_id)
 Planning Time: 2.100 ms
 Execution Time: 6955.685 ms
(24 rows)

SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=13450.44..13450.45 rows=1 width=64) (actual time=1016.271..1016.272 rows=1 loops=1)
   ->  Nested Loop  (cost=41.24..13450.44 rows=1 width=32) (actual time=58.873..1016.240 rows=32 loops=1)
         ->  Nested Loop  (cost=41.10..13449.36 rows=1 width=36) (actual time=58.856..1016.147 rows=32 loops=1)
               Join Filter: (n.id = an.person_id)
               ->  Nested Loop  (cost=40.67..13448.87 rows=1 width=48) (actual time=58.832..1015.937 rows=14 loops=1)
                     Join Filter: (n.id = pi.person_id)
                     ->  Nested Loop  (cost=40.24..12494.38 rows=985 width=40) (actual time=0.400..866.553 rows=17559 loops=1)
                           ->  Nested Loop  (cost=39.81..8533.64 rows=8474 width=21) (actual time=0.372..305.843 rows=105262 loops=1)
                                 ->  Nested Loop  (cost=39.25..7243.89 rows=229 width=25) (actual time=0.341..38.744 rows=1467 loops=1)
                                       ->  Nested Loop  (cost=38.82..245.23 rows=1666 width=4) (actual time=0.310..2.562 rows=5186 loops=1)
                                             ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=4) (actual time=0.016..0.019 rows=1 loops=1)
                                                   Filter: ((link)::text = 'features'::text)
                                                   Rows Removed by Filter: 17
                                             ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..225.26 rows=1875 width=8) (actual time=0.292..1.591 rows=5186 loops=1)
                                                   Recheck Cond: (link_type_id = lt.id)
                                                   Heap Blocks: exact=132
                                                   ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.264..0.264 rows=5186 loops=1)
                                                         Index Cond: (link_type_id = lt.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..4.20 rows=1 width=21) (actual time=0.007..0.007 rows=0 loops=5186)
                                             Index Cond: (id = ml.linked_movie_id)
                                             Filter: ((production_year >= 1980) AND (production_year <= 1995))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..5.26 rows=37 width=8) (actual time=0.010..0.173 rows=72 loops=1467)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Scan using name_pkey on name n  (cost=0.43..0.47 rows=1 width=19) (actual time=0.005..0.005 rows=0 loops=105262)
                                 Index Cond: (id = ci.person_id)
                                 Filter: (((name_pcode_cf)::text >= 'A'::text) AND ((name_pcode_cf)::text <= 'F'::text) AND (((gender)::text = 'm'::text) OR (((gender)::text = 'f'::text) AND ((name)::text ~~ 'B%'::text))))
                                 Rows Removed by Filter: 1
                     ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..0.96 rows=1 width=8) (actual time=0.008..0.008 rows=0 loops=17559)
                           Index Cond: (person_id = ci.person_id)
                           Filter: ((note)::text = 'Volker Boehm'::text)
                           Rows Removed by Filter: 20
               ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.47 rows=2 width=4) (actual time=0.010..0.013 rows=2 loops=14)
                     Index Cond: (person_id = ci.person_id)
                     Filter: ((name)::text ~~ '%a%'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using info_type_pkey on info_type it  (cost=0.14..0.61 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=32)
               Index Cond: (id = pi.info_type_id)
               Filter: ((info)::text = 'mini biography'::text)
 Planning Time: 7.487 ms
 Execution Time: 1016.468 ms
(41 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=9049.69..9049.70 rows=1 width=64) (actual time=286.034..286.034 rows=1 loops=1)
   ->  Nested Loop  (cost=41.24..9049.68 rows=1 width=32) (actual time=12.777..286.014 rows=16 loops=1)
         ->  Nested Loop  (cost=41.10..9048.61 rows=1 width=36) (actual time=12.762..285.962 rows=16 loops=1)
               Join Filter: (n.id = an.person_id)
               ->  Nested Loop  (cost=40.67..9048.12 rows=1 width=48) (actual time=12.750..285.878 rows=8 loops=1)
                     Join Filter: (n.id = pi.person_id)
                     ->  Nested Loop  (cost=40.24..9005.48 rows=44 width=40) (actual time=0.671..277.429 rows=1076 loops=1)
                           ->  Nested Loop  (cost=39.81..8134.43 rows=1894 width=21) (actual time=0.381..112.827 rows=33415 loops=1)
                                 ->  Nested Loop  (cost=39.25..7243.89 rows=51 width=25) (actual time=0.353..36.055 rows=435 loops=1)
                                       ->  Nested Loop  (cost=38.82..245.23 rows=1666 width=4) (actual time=0.321..2.241 rows=5186 loops=1)
                                             ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=4) (actual time=0.015..0.018 rows=1 loops=1)
                                                   Filter: ((link)::text = 'features'::text)
                                                   Rows Removed by Filter: 17
                                             ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..225.26 rows=1875 width=8) (actual time=0.304..1.488 rows=5186 loops=1)
                                                   Recheck Cond: (link_type_id = lt.id)
                                                   Heap Blocks: exact=132
                                                   ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.277..0.277 rows=5186 loops=1)
                                                         Index Cond: (link_type_id = lt.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..4.20 rows=1 width=21) (actual time=0.006..0.006 rows=0 loops=5186)
                                             Index Cond: (id = ml.linked_movie_id)
                                             Filter: ((production_year >= 1980) AND (production_year <= 1984))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..17.09 rows=37 width=8) (actual time=0.010..0.167 rows=77 loops=435)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.005..0.005 rows=0 loops=33415)
                                 Index Cond: (id = ci.person_id)
                                 Filter: (((name_pcode_cf)::text ~~ 'D%'::text) AND ((gender)::text = 'm'::text))
                                 Rows Removed by Filter: 1
                     ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..0.96 rows=1 width=8) (actual time=0.007..0.008 rows=0 loops=1076)
                           Index Cond: (person_id = ci.person_id)
                           Filter: ((note)::text = 'Volker Boehm'::text)
                           Rows Removed by Filter: 16
               ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.47 rows=2 width=4) (actual time=0.006..0.009 rows=2 loops=8)
                     Index Cond: (person_id = ci.person_id)
                     Filter: ((name)::text ~~ '%a%'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using info_type_pkey on info_type it  (cost=0.14..0.61 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=16)
               Index Cond: (id = pi.info_type_id)
               Filter: ((info)::text = 'mini biography'::text)
 Planning Time: 7.418 ms
 Execution Time: 286.217 ms
(41 rows)

SET
                                                                                                             QUERY PLAN                                                                                                              
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=58025.67..58025.68 rows=1 width=64) (actual time=3309.721..3309.722 rows=1 loops=1)
   ->  Nested Loop  (cost=2495.15..58025.64 rows=6 width=111) (actual time=20.107..3069.375 rows=68185 loops=1)
         ->  Hash Join  (cost=2494.72..58021.06 rows=10 width=119) (actual time=20.069..2818.928 rows=109842 loops=1)
               Hash Cond: (ml.link_type_id = lt.id)
               ->  Nested Loop  (cost=2493.40..58019.61 rows=44 width=123) (actual time=20.025..2795.603 rows=127027 loops=1)
                     ->  Nested Loop  (cost=2493.11..57531.16 rows=1426 width=115) (actual time=19.991..1167.592 rows=1618304 loops=1)
                           ->  Nested Loop  (cost=2492.55..57287.95 rows=14 width=123) (actual time=19.967..659.227 rows=12595 loops=1)
                                 ->  Nested Loop  (cost=2492.12..56107.25 rows=1430 width=104) (actual time=19.865..412.668 rows=72979 loops=1)
                                       ->  Nested Loop  (cost=2491.69..55264.82 rows=717 width=100) (actual time=19.812..188.720 rows=84183 loops=1)
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.011..0.019 rows=1 loops=1)
                                                   Filter: ((info)::text = 'mini biography'::text)
                                                   Rows Removed by Filter: 112
                                             ->  Bitmap Heap Scan on person_info pi  (cost=2491.69..55225.59 rows=3682 width=104) (actual time=19.798..180.219 rows=84183 loops=1)
                                                   Recheck Cond: (info_type_id = it.id)
                                                   Filter: (note IS NOT NULL)
                                                   Rows Removed by Filter: 1
                                                   Heap Blocks: exact=40537
                                                   ->  Bitmap Index Scan on info_type_id_person_info  (cost=0.00..2490.77 rows=134712 width=0) (actual time=11.478..11.478 rows=84184 loops=1)
                                                         Index Cond: (info_type_id = it.id)
                                       ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..1.15 rows=2 width=4) (actual time=0.002..0.002 rows=1 loops=84183)
                                             Index Cond: (person_id = pi.person_id)
                                             Filter: ((name IS NOT NULL) AND (((name)::text ~~ '%a%'::text) OR ((name)::text ~~ 'A%'::text)))
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using name_pkey on name n  (cost=0.43..0.83 rows=1 width=19) (actual time=0.003..0.003 rows=0 loops=72979)
                                       Index Cond: (id = an.person_id)
                                       Filter: (((name_pcode_cf)::text >= 'A'::text) AND ((name_pcode_cf)::text <= 'F'::text) AND (((gender)::text = 'm'::text) OR (((gender)::text = 'f'::text) AND ((name)::text ~~ 'A%'::text))))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using person_id_cast_info on cast_info ci  (cost=0.56..12.33 rows=504 width=8) (actual time=0.005..0.027 rows=128 loops=12595)
                                 Index Cond: (person_id = n.id)
                     ->  Index Scan using linked_movie_id_movie_link on movie_link ml  (cost=0.29..0.32 rows=2 width=8) (actual time=0.001..0.001 rows=0 loops=1618304)
                           Index Cond: (linked_movie_id = ci.movie_id)
               ->  Hash  (cost=1.27..1.27 rows=4 width=4) (actual time=0.018..0.018 rows=4 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                     ->  Seq Scan on link_type lt  (cost=0.00..1.27 rows=4 width=4) (actual time=0.010..0.013 rows=4 loops=1)
                           Filter: ((link)::text = ANY ('{references,"referenced in",features,"featured in"}'::text[]))
                           Rows Removed by Filter: 14
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.46 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=109842)
               Index Cond: (id = ci.movie_id)
               Filter: ((production_year >= 1980) AND (production_year <= 2010))
               Rows Removed by Filter: 0
 Planning Time: 7.600 ms
 Execution Time: 3310.274 ms
(42 rows)

SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=42962.65..42962.66 rows=1 width=64) (actual time=1446.934..1446.935 rows=1 loops=1)
   ->  Gather  (cost=5775.17..42962.64 rows=1 width=33) (actual time=125.095..1451.247 rows=62 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Nested Loop  (cost=4775.17..41962.54 rows=1 width=33) (actual time=170.426..1444.169 rows=21 loops=3)
               ->  Nested Loop  (cost=4774.74..41958.79 rows=5 width=41) (actual time=16.814..1429.519 rows=5793 loops=3)
                     ->  Hash Join  (cost=4774.31..41956.44 rows=2 width=21) (actual time=16.778..1417.076 rows=2479 loops=3)
                           Hash Cond: (ci.role_id = rt.id)
                           ->  Nested Loop  (cost=4773.15..41955.18 rows=27 width=25) (actual time=16.677..1416.077 rows=6533 loops=3)
                                 ->  Nested Loop  (cost=4772.59..41333.61 rows=332 width=25) (actual time=16.425..240.344 rows=16109 loops=3)
                                       ->  Parallel Hash Join  (cost=4772.16..39899.83 rows=332 width=4) (actual time=16.377..155.701 rows=16109 loops=3)
                                             Hash Cond: (mc.company_id = cn.id)
                                             ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..35097.06 rows=11664 width=8) (actual time=0.058..133.555 rows=16299 loops=3)
                                                   Filter: (((note)::text ~~ '%(Japan)%'::text) AND ((note)::text !~~ '%(USA)%'::text))
                                                   Rows Removed by Filter: 853411
                                             ->  Parallel Hash  (cost=4722.92..4722.92 rows=3939 width=4) (actual time=16.141..16.142 rows=2251 loops=3)
                                                   Buckets: 8192  Batches: 1  Memory Usage: 384kB
                                                   ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=3939 width=4) (actual time=0.021..15.485 rows=2251 loops=3)
                                                         Filter: ((country_code)::text = '[jp]'::text)
                                                         Rows Removed by Filter: 76082
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..4.32 rows=1 width=21) (actual time=0.005..0.005 rows=1 loops=48328)
                                             Index Cond: (id = mc.movie_id)
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.86 rows=1 width=12) (actual time=0.070..0.073 rows=0 loops=48328)
                                       Index Cond: (movie_id = t.id)
                                       Filter: ((note)::text = '(voice: English version)'::text)
                                       Rows Removed by Filter: 32
                           ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.019..0.019 rows=1 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                 ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.014..0.015 rows=1 loops=3)
                                       Filter: ((role)::text = 'actress'::text)
                                       Rows Removed by Filter: 11
                     ->  Index Scan using person_id_aka_name on aka_name an1  (cost=0.42..1.16 rows=2 width=20) (actual time=0.004..0.005 rows=2 loops=7438)
                           Index Cond: (person_id = ci.person_id)
               ->  Index Scan using name_pkey on name n1  (cost=0.43..0.75 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=17379)
                     Index Cond: (id = an1.person_id)
                     Filter: (((name)::text ~~ '%Yo%'::text) AND ((name)::text !~~ '%Yu%'::text))
                     Rows Removed by Filter: 1
 Planning Time: 4.812 ms
 Execution Time: 1451.491 ms
(39 rows)

SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=44409.00..44409.01 rows=1 width=64) (actual time=171.250..171.250 rows=1 loops=1)
   ->  Nested Loop  (cost=1002.40..44409.00 rows=1 width=33) (actual time=100.762..171.235 rows=6 loops=1)
         ->  Nested Loop  (cost=1002.27..44408.82 rows=1 width=37) (actual time=100.732..171.197 rows=6 loops=1)
               ->  Nested Loop  (cost=1001.84..44408.07 rows=1 width=45) (actual time=99.987..170.275 rows=171 loops=1)
                     ->  Nested Loop  (cost=1001.42..44406.90 rows=1 width=25) (actual time=99.959..169.289 rows=104 loops=1)
                           Join Filter: (t.id = ci.movie_id)
                           ->  Gather  (cost=1000.85..44264.09 rows=1 width=25) (actual time=99.709..171.246 rows=4 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Nested Loop  (cost=0.85..43263.99 rows=1 width=25) (actual time=111.545..167.817 rows=1 loops=3)
                                       ->  Nested Loop  (cost=0.42..43166.10 rows=12 width=4) (actual time=0.093..139.277 rows=2832 loops=3)
                                             ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..40532.74 rows=434 width=8) (actual time=0.058..129.669 rows=2856 loops=3)
                                                   Filter: (((note)::text ~~ '%(Japan)%'::text) AND ((note)::text !~~ '%(USA)%'::text) AND (((note)::text ~~ '%(2006)%'::text) OR ((note)::text ~~ '%(2007)%'::text)))
                                                   Rows Removed by Filter: 866853
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..6.07 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=8569)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((country_code)::text = '[jp]'::text)
                                                   Rows Removed by Filter: 0
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..8.13 rows=1 width=21) (actual time=0.010..0.010 rows=0 loops=8495)
                                             Index Cond: (id = mc.movie_id)
                                             Filter: ((production_year >= 2006) AND (production_year <= 2007) AND (((title)::text ~~ 'One Piece%'::text) OR ((title)::text ~~ 'Dragon Ball Z%'::text)))
                                             Rows Removed by Filter: 1
                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..142.80 rows=1 width=12) (actual time=0.066..0.217 rows=26 loops=4)
                                 Index Cond: (movie_id = mc.movie_id)
                                 Filter: ((note)::text = '(voice: English version)'::text)
                                 Rows Removed by Filter: 17
                     ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..1.16 rows=2 width=20) (actual time=0.008..0.009 rows=2 loops=104)
                           Index Cond: (person_id = ci.person_id)
               ->  Index Scan using name_pkey on name n  (cost=0.43..0.75 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=171)
                     Index Cond: (id = an.person_id)
                     Filter: (((name)::text ~~ '%Yo%'::text) AND ((name)::text !~~ '%Yu%'::text))
                     Rows Removed by Filter: 1
         ->  Index Scan using role_type_pkey on role_type rt  (cost=0.14..0.16 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=6)
               Index Cond: (id = ci.role_id)
               Filter: ((role)::text = 'actress'::text)
 Planning Time: 4.774 ms
 Execution Time: 174.277 ms
(37 rows)

SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=529735.54..529735.55 rows=1 width=64) (actual time=3485.258..3485.258 rows=1 loops=1)
   ->  Gather  (cost=529735.32..529735.53 rows=2 width=64) (actual time=3483.738..3586.336 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=528735.32..528735.33 rows=1 width=64) (actual time=3480.892..3480.892 rows=1 loops=3)
               ->  Parallel Hash Join  (cost=483413.83..513803.80 rows=2986304 width=33) (actual time=3211.162..3377.041 rows=829204 loops=3)
                     Hash Cond: (a1.person_id = n1.id)
                     ->  Parallel Seq Scan on aka_name a1  (cost=0.00..15151.60 rows=375560 width=20) (actual time=0.030..39.076 rows=300448 loops=3)
                     ->  Parallel Hash  (cost=459853.10..459853.10 rows=1218458 width=25) (actual time=3112.507..3112.507 rows=656886 loops=3)
                           Buckets: 65536  Batches: 64  Memory Usage: 2848kB
                           ->  Parallel Hash Join  (cost=345158.80..459853.10 rows=1218458 width=25) (actual time=2777.528..2977.351 rows=656886 loops=3)
                                 Hash Cond: (ci.person_id = n1.id)
                                 ->  Hash Join  (cost=243691.57..334123.41 rows=1218458 width=21) (actual time=1936.447..2218.502 rows=656886 loops=3)
                                       Hash Cond: (t.id = ci.movie_id)
                                       ->  Parallel Hash Join  (cost=44358.48..110382.12 rows=395644 width=25) (actual time=591.323..792.532 rows=384599 loops=3)
                                             Hash Cond: (t.id = mc.movie_id)
                                             ->  Parallel Seq Scan on title t  (cost=0.00..46532.63 rows=1053463 width=21) (actual time=0.017..114.413 rows=842771 loops=3)
                                             ->  Parallel Hash  (cost=37866.93..37866.93 rows=395644 width=4) (actual time=298.097..298.097 rows=384599 loops=3)
                                                   Buckets: 131072  Batches: 16  Memory Usage: 3872kB
                                                   ->  Parallel Hash Join  (cost=5351.77..37866.93 rows=395644 width=4) (actual time=25.246..244.926 rows=384599 loops=3)
                                                         Hash Cond: (mc.company_id = cn.id)
                                                         ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=8) (actual time=0.014..78.099 rows=869710 loops=3)
                                                         ->  Parallel Hash  (cost=4722.92..4722.92 rows=50308 width=4) (actual time=24.887..24.888 rows=28281 loops=3)
                                                               Buckets: 131072  Batches: 1  Memory Usage: 4384kB
                                                               ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=50308 width=4) (actual time=0.016..17.034 rows=28281 loops=3)
                                                                     Filter: ((country_code)::text = '[us]'::text)
                                                                     Rows Removed by Filter: 50051
                                       ->  Hash  (cost=149779.57..149779.57 rows=3020362 width=8) (actual time=1142.117..1142.117 rows=2728943 loops=3)
                                             Buckets: 131072  Batches: 64  Memory Usage: 2675kB
                                             ->  Nested Loop  (cost=0.56..149779.57 rows=3020362 width=8) (actual time=0.041..766.793 rows=2728943 loops=3)
                                                   ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.009..0.013 rows=1 loops=3)
                                                         Filter: ((role)::text = 'writer'::text)
                                                         Rows Removed by Filter: 11
                                                   ->  Index Scan using role_id_cast_info on cast_info ci  (cost=0.56..116829.02 rows=3294940 width=12) (actual time=0.028..513.570 rows=2728943 loops=3)
                                                         Index Cond: (role_id = rt.id)
                                 ->  Parallel Hash  (cost=72977.55..72977.55 rows=1736455 width=4) (actual time=352.240..352.240 rows=1389164 loops=3)
                                       Buckets: 131072  Batches: 64  Memory Usage: 3616kB
                                       ->  Parallel Seq Scan on name n1  (cost=0.00..72977.55 rows=1736455 width=4) (actual time=0.023..171.029 rows=1389164 loops=3)
 Planning Time: 4.189 ms
 Execution Time: 3586.598 ms
(40 rows)

SET
                                                                                               QUERY PLAN                                                                                               
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=529735.54..529735.55 rows=1 width=64) (actual time=1727.353..1727.354 rows=1 loops=1)
   ->  Gather  (cost=529735.32..529735.53 rows=2 width=64) (actual time=1725.413..1799.957 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=528735.32..528735.33 rows=1 width=64) (actual time=1722.954..1722.954 rows=1 loops=3)
               ->  Parallel Hash Join  (cost=483413.83..513803.80 rows=2986304 width=33) (actual time=1663.878..1709.370 rows=107668 loops=3)
                     Hash Cond: (an1.person_id = n1.id)
                     ->  Parallel Seq Scan on aka_name an1  (cost=0.00..15151.60 rows=375560 width=20) (actual time=0.024..39.226 rows=300448 loops=3)
                     ->  Parallel Hash  (cost=459853.10..459853.10 rows=1218458 width=25) (actual time=1566.443..1566.443 rows=95179 loops=3)
                           Buckets: 65536  Batches: 64  Memory Usage: 992kB
                           ->  Parallel Hash Join  (cost=345158.80..459853.10 rows=1218458 width=25) (actual time=1445.044..1545.564 rows=95179 loops=3)
                                 Hash Cond: (ci.person_id = n1.id)
                                 ->  Hash Join  (cost=243691.57..334123.41 rows=1218458 width=21) (actual time=895.943..1061.886 rows=95179 loops=3)
                                       Hash Cond: (t.id = ci.movie_id)
                                       ->  Parallel Hash Join  (cost=44358.48..110382.12 rows=395644 width=25) (actual time=590.060..794.362 rows=384599 loops=3)
                                             Hash Cond: (t.id = mc.movie_id)
                                             ->  Parallel Seq Scan on title t  (cost=0.00..46532.63 rows=1053463 width=21) (actual time=0.020..110.875 rows=842771 loops=3)
                                             ->  Parallel Hash  (cost=37866.93..37866.93 rows=395644 width=4) (actual time=300.455..300.455 rows=384599 loops=3)
                                                   Buckets: 131072  Batches: 16  Memory Usage: 3872kB
                                                   ->  Parallel Hash Join  (cost=5351.77..37866.93 rows=395644 width=4) (actual time=26.487..246.804 rows=384599 loops=3)
                                                         Hash Cond: (mc.company_id = cn.id)
                                                         ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=8) (actual time=0.015..78.135 rows=869710 loops=3)
                                                         ->  Parallel Hash  (cost=4722.92..4722.92 rows=50308 width=4) (actual time=26.123..26.124 rows=28281 loops=3)
                                                               Buckets: 131072  Batches: 1  Memory Usage: 4384kB
                                                               ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=50308 width=4) (actual time=0.028..17.994 rows=28281 loops=3)
                                                                     Filter: ((country_code)::text = '[us]'::text)
                                                                     Rows Removed by Filter: 50051
                                       ->  Hash  (cost=149779.57..149779.57 rows=3020362 width=8) (actual time=112.649..112.650 rows=276403 loops=3)
                                             Buckets: 131072  Batches: 64  Memory Usage: 1193kB
                                             ->  Nested Loop  (cost=0.56..149779.57 rows=3020362 width=8) (actual time=0.065..74.320 rows=276403 loops=3)
                                                   ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.017..0.019 rows=1 loops=3)
                                                         Filter: ((role)::text = 'costume designer'::text)
                                                         Rows Removed by Filter: 11
                                                   ->  Index Scan using role_id_cast_info on cast_info ci  (cost=0.56..116829.02 rows=3294940 width=12) (actual time=0.043..48.605 rows=276403 loops=3)
                                                         Index Cond: (role_id = rt.id)
                                 ->  Parallel Hash  (cost=72977.55..72977.55 rows=1736455 width=4) (actual time=352.805..352.805 rows=1389164 loops=3)
                                       Buckets: 131072  Batches: 64  Memory Usage: 3616kB
                                       ->  Parallel Seq Scan on name n1  (cost=0.00..72977.55 rows=1736455 width=4) (actual time=0.019..170.874 rows=1389164 loops=3)
 Planning Time: 4.803 ms
 Execution Time: 1800.167 ms
(40 rows)

SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=83282.38..83282.39 rows=1 width=96) (actual time=274.801..274.801 rows=1 loops=1)
   ->  Nested Loop  (cost=1003.86..83282.37 rows=1 width=49) (actual time=115.557..274.748 rows=121 loops=1)
         ->  Nested Loop  (cost=1003.44..83281.88 rows=1 width=53) (actual time=115.528..274.041 rows=123 loops=1)
               Join Filter: (ci.movie_id = mc.movie_id)
               ->  Gather  (cost=1003.01..83281.24 rows=1 width=57) (actual time=110.359..274.159 rows=139 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Nested Loop  (cost=3.01..82281.14 rows=1 width=57) (actual time=108.757..271.162 rows=46 loops=3)
                           ->  Nested Loop  (cost=2.58..82280.49 rows=1 width=45) (actual time=108.567..270.758 rows=52 loops=3)
                                 ->  Hash Join  (cost=2.15..82279.20 rows=2 width=24) (actual time=107.509..269.313 rows=142 loops=3)
                                       Hash Cond: (ci.role_id = rt.id)
                                       ->  Nested Loop  (cost=0.99..82277.96 rows=21 width=28) (actual time=107.403..269.170 rows=142 loops=3)
                                             Join Filter: (n.id = ci.person_id)
                                             ->  Nested Loop  (cost=0.42..82155.29 rows=9 width=24) (actual time=104.316..257.913 rows=519 loops=3)
                                                   ->  Parallel Seq Scan on name n  (cost=0.00..81659.82 rows=40 width=4) (actual time=103.820..247.278 rows=2256 loops=3)
                                                         Filter: (((name)::text ~~ '%Ang%'::text) AND ((gender)::text = 'f'::text))
                                                         Rows Removed by Filter: 1386908
                                                   ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..12.37 rows=2 width=20) (actual time=0.004..0.004 rows=0 loops=6768)
                                                         Index Cond: (person_id = n.id)
                                             ->  Index Scan using person_id_cast_info on cast_info ci  (cost=0.56..13.47 rows=13 width=16) (actual time=0.020..0.021 rows=0 loops=1558)
                                                   Index Cond: (person_id = an.person_id)
                                                   Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                   Rows Removed by Filter: 44
                                       ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.026..0.026 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.017..0.018 rows=1 loops=3)
                                                   Filter: ((role)::text = 'actress'::text)
                                                   Rows Removed by Filter: 11
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.64 rows=1 width=21) (actual time=0.010..0.010 rows=0 loops=425)
                                       Index Cond: (id = ci.movie_id)
                                       Filter: ((production_year >= 2005) AND (production_year <= 2015))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.65 rows=1 width=20) (actual time=0.007..0.007 rows=1 loops=155)
                                 Index Cond: (id = ci.person_role_id)
               ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.64 rows=1 width=8) (actual time=0.009..0.012 rows=1 loops=139)
                     Index Cond: (movie_id = t.id)
                     Filter: ((note IS NOT NULL) AND (((note)::text ~~ '%(USA)%'::text) OR ((note)::text ~~ '%(worldwide)%'::text)))
                     Rows Removed by Filter: 5
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.49 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=123)
               Index Cond: (id = mc.company_id)
               Filter: ((country_code)::text = '[us]'::text)
               Rows Removed by Filter: 0
 Planning Time: 7.553 ms
 Execution Time: 276.803 ms
(44 rows)

SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=83270.97..83270.98 rows=1 width=128) (actual time=261.815..261.816 rows=1 loops=1)
   ->  Nested Loop  (cost=1003.86..83270.96 rows=1 width=64) (actual time=112.215..261.785 rows=40 loops=1)
         ->  Nested Loop  (cost=1003.44..83270.37 rows=1 width=68) (actual time=112.204..261.634 rows=40 loops=1)
               ->  Nested Loop  (cost=1003.01..83269.66 rows=1 width=72) (actual time=112.144..261.113 rows=60 loops=1)
                     ->  Gather  (cost=1002.58..83268.98 rows=1 width=60) (actual time=108.466..263.322 rows=65 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop  (cost=2.58..82268.88 rows=1 width=60) (actual time=111.207..259.003 rows=22 loops=3)
                                 ->  Hash Join  (cost=2.15..82267.52 rows=2 width=39) (actual time=105.893..258.459 rows=88 loops=3)
                                       Hash Cond: (ci.role_id = rt.id)
                                       ->  Nested Loop  (cost=0.99..82266.28 rows=18 width=43) (actual time=105.788..258.331 rows=88 loops=3)
                                             Join Filter: (n.id = ci.person_id)
                                             ->  Nested Loop  (cost=0.42..82155.29 rows=9 width=39) (actual time=103.275..252.447 rows=432 loops=3)
                                                   ->  Parallel Seq Scan on name n  (cost=0.00..81659.82 rows=40 width=19) (actual time=102.795..245.566 rows=1803 loops=3)
                                                         Filter: (((name)::text ~~ '%Angel%'::text) AND ((gender)::text = 'f'::text))
                                                         Rows Removed by Filter: 1387361
                                                   ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..12.37 rows=2 width=20) (actual time=0.003..0.004 rows=0 loops=5409)
                                                         Index Cond: (person_id = n.id)
                                             ->  Index Scan using person_id_cast_info on cast_info ci  (cost=0.56..12.21 rows=10 width=16) (actual time=0.012..0.013 rows=0 loops=1296)
                                                   Index Cond: (person_id = an.person_id)
                                                   Filter: ((note)::text = '(voice)'::text)
                                                   Rows Removed by Filter: 43
                                       ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.024..0.024 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.018..0.019 rows=1 loops=3)
                                                   Filter: ((role)::text = 'actress'::text)
                                                   Rows Removed by Filter: 11
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.68 rows=1 width=21) (actual time=0.006..0.006 rows=0 loops=265)
                                       Index Cond: (id = ci.movie_id)
                                       Filter: ((production_year >= 2007) AND (production_year <= 2010))
                                       Rows Removed by Filter: 1
                     ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.69 rows=1 width=20) (actual time=0.003..0.003 rows=1 loops=65)
                           Index Cond: (id = ci.person_role_id)
               ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.69 rows=1 width=8) (actual time=0.007..0.008 rows=1 loops=60)
                     Index Cond: (movie_id = ci.movie_id)
                     Filter: (((note)::text ~~ '%(200%)%'::text) AND (((note)::text ~~ '%(USA)%'::text) OR ((note)::text ~~ '%(worldwide)%'::text)))
                     Rows Removed by Filter: 7
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.59 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=40)
               Index Cond: (id = mc.company_id)
               Filter: ((country_code)::text = '[us]'::text)
 Planning Time: 7.077 ms
 Execution Time: 264.482 ms
(42 rows)

SET
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=123482.63..123482.64 rows=1 width=128) (actual time=457.362..457.362 rows=1 loops=1)
   ->  Gather  (cost=123482.40..123482.61 rows=2 width=128) (actual time=456.819..461.214 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=122482.40..122482.41 rows=1 width=128) (actual time=454.112..454.113 rows=1 loops=3)
               ->  Nested Loop  (cost=81764.69..122480.72 rows=168 width=64) (actual time=259.912..453.303 rows=2715 loops=3)
                     Join Filter: (ci.movie_id = t.id)
                     ->  Nested Loop  (cost=81764.26..122392.38 rows=168 width=55) (actual time=259.854..444.760 rows=2715 loops=3)
                           ->  Nested Loop  (cost=81763.84..122186.52 rows=462 width=59) (actual time=258.986..426.935 rows=6115 loops=3)
                                 ->  Nested Loop  (cost=81763.41..122068.42 rows=173 width=51) (actual time=258.931..414.841 rows=2575 loops=3)
                                       ->  Hash Join  (cost=81762.98..121836.61 rows=358 width=39) (actual time=258.873..405.223 rows=2735 loops=3)
                                             Hash Cond: (ci.role_id = rt.id)
                                             ->  Nested Loop  (cost=81761.82..121820.18 rows=4301 width=43) (actual time=258.797..404.585 rows=2735 loops=3)
                                                   Join Filter: (n.id = ci.person_id)
                                                   ->  Parallel Hash Join  (cost=81761.26..97898.70 rows=1755 width=39) (actual time=257.191..334.213 rows=3508 loops=3)
                                                         Hash Cond: (an.person_id = n.id)
                                                         ->  Parallel Seq Scan on aka_name an  (cost=0.00..15151.60 rows=375560 width=20) (actual time=0.014..32.472 rows=300448 loops=3)
                                                         ->  Parallel Hash  (cost=81659.82..81659.82 rows=8115 width=19) (actual time=256.856..256.856 rows=16670 loops=3)
                                                               Buckets: 65536 (originally 32768)  Batches: 1 (originally 1)  Memory Usage: 3584kB
                                                               ->  Parallel Seq Scan on name n  (cost=0.00..81659.82 rows=8115 width=19) (actual time=104.192..247.838 rows=16670 loops=3)
                                                                     Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                                                     Rows Removed by Filter: 1372493
                                                   ->  Index Scan using person_id_cast_info on cast_info ci  (cost=0.56..13.47 rows=13 width=16) (actual time=0.018..0.020 rows=1 loops=10525)
                                                         Index Cond: (person_id = an.person_id)
                                                         Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                         Rows Removed by Filter: 44
                                             ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.024..0.024 rows=1 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.017..0.019 rows=1 loops=3)
                                                         Filter: ((role)::text = 'actress'::text)
                                                         Rows Removed by Filter: 11
                                       ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.65 rows=1 width=20) (actual time=0.003..0.003 rows=1 loops=8204)
                                             Index Cond: (id = ci.person_role_id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.63 rows=5 width=8) (actual time=0.003..0.004 rows=2 loops=7726)
                                       Index Cond: (movie_id = ci.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=18345)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.51 rows=1 width=21) (actual time=0.003..0.003 rows=1 loops=8144)
                           Index Cond: (id = mc.movie_id)
 Planning Time: 7.218 ms
 Execution Time: 461.448 ms
(43 rows)

SET
                                                                                                  QUERY PLAN                                                                                                  
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=211411.33..211411.34 rows=1 width=128) (actual time=3734.323..3734.323 rows=1 loops=1)
   ->  Gather  (cost=211411.10..211411.31 rows=2 width=128) (actual time=2882.746..3738.709 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=210411.10..210411.11 rows=1 width=128) (actual time=3171.817..3171.818 rows=1 loops=3)
               ->  Nested Loop  (cost=140783.51..210327.94 rows=8316 width=64) (actual time=2085.669..3134.080 rows=161027 loops=3)
                     ->  Nested Loop  (cost=140783.09..208504.03 rows=3393 width=56) (actual time=2085.448..2966.369 rows=57856 loops=3)
                           Join Filter: (ci.movie_id = t.id)
                           ->  Nested Loop  (cost=140782.66..206719.92 rows=3393 width=47) (actual time=2085.426..2817.859 rows=57856 loops=3)
                                 ->  Nested Loop  (cost=140782.23..202181.65 rows=7009 width=35) (actual time=2085.405..2623.399 rows=63155 loops=3)
                                       ->  Hash Join  (cost=140781.80..179531.73 rows=30299 width=16) (actual time=2085.373..2434.107 rows=63185 loops=3)
                                             Hash Cond: (mc.movie_id = ci.movie_id)
                                             ->  Parallel Hash Join  (cost=5351.77..37866.93 rows=395644 width=4) (actual time=23.826..252.540 rows=384599 loops=3)
                                                   Hash Cond: (mc.company_id = cn.id)
                                                   ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=8) (actual time=0.015..77.400 rows=869710 loops=3)
                                                   ->  Parallel Hash  (cost=4722.92..4722.92 rows=50308 width=4) (actual time=23.279..23.279 rows=28281 loops=3)
                                                         Buckets: 131072  Batches: 1  Memory Usage: 4416kB
                                                         ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=50308 width=4) (actual time=0.023..16.327 rows=28281 loops=3)
                                                               Filter: ((country_code)::text = '[us]'::text)
                                                               Rows Removed by Filter: 50051
                                             ->  Hash  (cost=134124.20..134124.20 rows=75106 width=12) (actual time=2060.550..2060.550 rows=276166 loops=3)
                                                   Buckets: 131072 (originally 131072)  Batches: 4 (originally 2)  Memory Usage: 3984kB
                                                   ->  Nested Loop  (cost=0.56..134124.20 rows=75106 width=12) (actual time=0.262..2006.046 rows=276166 loops=3)
                                                         ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.010..0.014 rows=1 loops=3)
                                                               Filter: ((role)::text = 'actress'::text)
                                                               Rows Removed by Filter: 11
                                                         ->  Index Scan using role_id_cast_info on cast_info ci  (cost=0.56..133303.71 rows=81934 width=16) (actual time=0.248..1982.906 rows=276166 loops=3)
                                                               Index Cond: (role_id = rt.id)
                                                               Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                               Rows Removed by Filter: 7175807
                                       ->  Index Scan using name_pkey on name n  (cost=0.43..0.75 rows=1 width=19) (actual time=0.003..0.003 rows=1 loops=189554)
                                             Index Cond: (id = ci.person_id)
                                             Filter: ((gender)::text = 'f'::text)
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.65 rows=1 width=20) (actual time=0.003..0.003 rows=1 loops=189464)
                                       Index Cond: (id = ci.person_role_id)
                           ->  Index Scan using title_pkey on title t  (cost=0.43..0.51 rows=1 width=21) (actual time=0.002..0.002 rows=1 loops=173567)
                                 Index Cond: (id = mc.movie_id)
                     ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.52 rows=2 width=20) (actual time=0.002..0.002 rows=3 loops=173567)
                           Index Cond: (person_id = n.id)
 Planning Time: 7.558 ms
 Execution Time: 3738.979 ms
(42 rows)

