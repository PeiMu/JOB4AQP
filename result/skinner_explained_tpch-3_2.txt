SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=46680.35..46680.36 rows=1 width=64) (actual time=440.609..440.609 rows=1 loops=1)
   ->  Gather  (cost=46680.13..46680.34 rows=2 width=64) (actual time=440.456..453.898 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=45680.13..45680.14 rows=1 width=64) (actual time=437.656..437.656 rows=1 loops=3)
               ->  Nested Loop  (cost=4736.00..45680.12 rows=2 width=33) (actual time=66.456..437.623 rows=35 loops=3)
                     ->  Nested Loop  (cost=4735.87..45679.82 rows=2 width=37) (actual time=66.422..437.510 rows=35 loops=3)
                           ->  Hash Join  (cost=4735.44..45655.14 rows=5 width=25) (actual time=66.381..437.080 rows=37 loops=3)
                                 Hash Cond: (ci.role_id = rt.id)
                                 ->  Nested Loop  (cost=4734.28..45653.76 rows=62 width=29) (actual time=65.941..436.975 rows=50 loops=3)
                                       Join Filter: (t.id = ci.movie_id)
                                       ->  Nested Loop  (cost=4733.71..40613.13 rows=2585 width=29) (actual time=16.474..200.934 rows=1513 loops=3)
                                             ->  Parallel Hash Join  (cost=4733.28..37248.44 rows=6523 width=8) (actual time=16.382..177.460 rows=2930 loops=3)
                                                   Hash Cond: (mc.company_id = cn.id)
                                                   ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=12) (actual time=0.022..76.768 rows=869710 loops=3)
                                                   ->  Parallel Hash  (cost=4722.92..4722.92 rows=829 width=4) (actual time=15.934..15.935 rows=454 loops=3)
                                                         Buckets: 2048  Batches: 1  Memory Usage: 112kB
                                                         ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=829 width=4) (actual time=0.022..15.764 rows=454 loops=3)
                                                               Filter: ((country_code)::text = '[ru]'::text)
                                                               Rows Removed by Filter: 77879
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..0.52 rows=1 width=21) (actual time=0.008..0.008 rows=1 loops=8790)
                                                   Index Cond: (id = mc.movie_id)
                                                   Filter: (production_year > 2005)
                                                   Rows Removed by Filter: 0
                                       ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.94 rows=1 width=12) (actual time=0.146..0.156 rows=0 loops=4539)
                                             Index Cond: (movie_id = mc.movie_id)
                                             Filter: (((note)::text ~~ '%(voice)%'::text) AND ((note)::text ~~ '%(uncredited)%'::text))
                                             Rows Removed by Filter: 50
                                 ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.021..0.021 rows=1 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.015..0.016 rows=1 loops=3)
                                             Filter: ((role)::text = 'actor'::text)
                                             Rows Removed by Filter: 11
                           ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..4.94 rows=1 width=20) (actual time=0.011..0.011 rows=1 loops=112)
                                 Index Cond: (id = ci.person_role_id)
                     ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=104)
                           Index Cond: (id = mc.company_type_id)
                           Heap Fetches: 104
 Planning Time: 4.246 ms
 Execution Time: 454.129 ms
(40 rows)

SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=43581.05..43581.06 rows=1 width=64) (actual time=270.937..270.937 rows=1 loops=1)
   ->  Gather  (cost=43580.83..43581.04 rows=2 width=64) (actual time=270.777..276.456 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=42580.83..42580.84 rows=1 width=64) (actual time=268.136..268.136 rows=1 loops=3)
               ->  Hash Join  (cost=4736.96..42580.54 rows=58 width=33) (actual time=268.132..268.132 rows=0 loops=3)
                     Hash Cond: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=4735.87..42579.14 rows=58 width=37) (actual time=268.057..268.057 rows=0 loops=3)
                           ->  Hash Join  (cost=4735.44..42510.24 rows=119 width=25) (actual time=268.057..268.057 rows=0 loops=3)
                                 Hash Cond: (ci.role_id = rt.id)
                                 ->  Nested Loop  (cost=4734.28..42504.02 rows=1424 width=29) (actual time=18.299..267.932 rows=871 loops=3)
                                       Join Filter: (t.id = ci.movie_id)
                                       ->  Nested Loop  (cost=4733.71..40613.13 rows=1018 width=29) (actual time=17.404..202.070 rows=420 loops=3)
                                             ->  Parallel Hash Join  (cost=4733.28..37248.44 rows=6523 width=8) (actual time=16.327..176.157 rows=2930 loops=3)
                                                   Hash Cond: (mc.company_id = cn.id)
                                                   ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=12) (actual time=0.022..76.860 rows=869710 loops=3)
                                                   ->  Parallel Hash  (cost=4722.92..4722.92 rows=829 width=4) (actual time=15.720..15.720 rows=454 loops=3)
                                                         Buckets: 2048  Batches: 1  Memory Usage: 112kB
                                                         ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=829 width=4) (actual time=0.032..15.552 rows=454 loops=3)
                                                               Filter: ((country_code)::text = '[ru]'::text)
                                                               Rows Removed by Filter: 77879
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..0.52 rows=1 width=21) (actual time=0.009..0.009 rows=0 loops=8790)
                                                   Index Cond: (id = mc.movie_id)
                                                   Filter: (production_year > 2010)
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.84 rows=1 width=12) (actual time=0.083..0.156 rows=2 loops=1259)
                                             Index Cond: (movie_id = mc.movie_id)
                                             Filter: ((note)::text ~~ '%(producer)%'::text)
                                             Rows Removed by Filter: 44
                                 ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.016..0.016 rows=1 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.012..0.014 rows=1 loops=3)
                                             Filter: ((role)::text = 'actor'::text)
                                             Rows Removed by Filter: 11
                           ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.58 rows=1 width=20) (never executed)
                                 Index Cond: (id = ci.person_role_id)
                     ->  Hash  (cost=1.04..1.04 rows=4 width=4) (actual time=0.027..0.028 rows=4 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.022..0.023 rows=4 loops=3)
 Planning Time: 4.286 ms
 Execution Time: 276.663 ms
(41 rows)

SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=652454.39..652454.40 rows=1 width=64) (actual time=2649.267..2649.267 rows=1 loops=1)
   ->  Gather  (cost=652454.17..652454.38 rows=2 width=64) (actual time=2646.597..2710.097 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=651454.17..651454.18 rows=1 width=64) (actual time=2644.184..2644.184 rows=1 loops=3)
               ->  Hash Join  (cost=186238.47..650533.03 rows=184228 width=33) (actual time=2632.172..2644.171 rows=3 loops=3)
                     Hash Cond: (ci.role_id = rt.id)
                     ->  Hash Join  (cost=186237.20..649877.37 rows=184228 width=37) (actual time=2632.055..2644.052 rows=3 loops=3)
                           Hash Cond: (mc.company_type_id = ct.id)
                           ->  Parallel Hash Join  (cost=186236.11..648880.30 rows=184228 width=41) (actual time=2632.030..2644.025 rows=3 loops=3)
                                 Hash Cond: (ci.movie_id = t.id)
                                 ->  Parallel Hash Join  (cost=73555.68..529761.99 rows=276569 width=24) (actual time=1835.061..1873.065 rows=5 loops=3)
                                       Hash Cond: (ci.person_role_id = chn.id)
                                       ->  Parallel Seq Scan on cast_info ci  (cost=0.00..441459.62 rows=571306 width=12) (actual time=202.891..1412.660 rows=478480 loops=3)
                                             Filter: ((note)::text ~~ '%(producer)%'::text)
                                             Rows Removed by Filter: 11602968
                                       ->  Parallel Hash  (cost=49532.75..49532.75 rows=1308475 width=20) (actual time=364.705..364.705 rows=1046780 loops=3)
                                             Buckets: 65536  Batches: 64  Memory Usage: 3264kB
                                             ->  Parallel Seq Scan on char_name chn  (cost=0.00..49532.75 rows=1308475 width=20) (actual time=0.023..130.575 rows=1046780 loops=3)
                                 ->  Parallel Hash  (cost=107416.88..107416.88 rows=272203 width=29) (actual time=755.327..755.327 rows=198750 loops=3)
                                       Buckets: 65536  Batches: 16  Memory Usage: 3008kB
                                       ->  Parallel Hash Join  (cost=44358.48..107416.88 rows=272203 width=29) (actual time=566.492..713.484 rows=198750 loops=3)
                                             Hash Cond: (t.id = mc.movie_id)
                                             ->  Parallel Seq Scan on title t  (cost=0.00..49166.29 rows=724782 width=21) (actual time=0.023..128.397 rows=583011 loops=3)
                                                   Filter: (production_year > 1990)
                                                   Rows Removed by Filter: 259760
                                             ->  Parallel Hash  (cost=37866.93..37866.93 rows=395644 width=8) (actual time=309.514..309.514 rows=384599 loops=3)
                                                   Buckets: 131072  Batches: 16  Memory Usage: 3904kB
                                                   ->  Parallel Hash Join  (cost=5351.77..37866.93 rows=395644 width=8) (actual time=25.018..252.381 rows=384599 loops=3)
                                                         Hash Cond: (mc.company_id = cn.id)
                                                         ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=12) (actual time=0.015..78.052 rows=869710 loops=3)
                                                         ->  Parallel Hash  (cost=4722.92..4722.92 rows=50308 width=4) (actual time=24.742..24.743 rows=28281 loops=3)
                                                               Buckets: 131072  Batches: 1  Memory Usage: 4416kB
                                                               ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=50308 width=4) (actual time=0.020..17.404 rows=28281 loops=3)
                                                                     Filter: ((country_code)::text = '[us]'::text)
                                                                     Rows Removed by Filter: 50051
                           ->  Hash  (cost=1.04..1.04 rows=4 width=4) (actual time=0.009..0.011 rows=4 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                 ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.006..0.006 rows=4 loops=3)
                     ->  Hash  (cost=1.12..1.12 rows=12 width=4) (actual time=0.016..0.016 rows=12 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on role_type rt  (cost=0.00..1.12 rows=12 width=4) (actual time=0.009..0.011 rows=12 loops=3)
 Planning Time: 4.267 ms
 Execution Time: 2711.271 ms
(44 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3751.33..3751.34 rows=1 width=96) (actual time=100.370..100.370 rows=1 loops=1)
   ->  Nested Loop  (cost=8.32..3751.32 rows=1 width=118) (actual time=3.945..100.288 rows=310 loops=1)
         Join Filter: (ml.movie_id = t.id)
         ->  Nested Loop  (cost=7.89..3750.82 rows=1 width=113) (actual time=3.916..99.441 rows=402 loops=1)
               Join Filter: (mc.company_type_id = ct.id)
               Rows Removed by Join Filter: 20
               ->  Nested Loop  (cost=7.89..3749.75 rows=1 width=117) (actual time=3.912..99.013 rows=422 loops=1)
                     ->  Nested Loop  (cost=7.47..3749.30 rows=1 width=102) (actual time=3.454..96.631 rows=1021 loops=1)
                           Join Filter: (ml.movie_id = mc.movie_id)
                           ->  Nested Loop  (cost=7.04..3748.73 rows=1 width=90) (actual time=3.425..95.388 rows=199 loops=1)
                                 Join Filter: (ml.link_type_id = lt.id)
                                 Rows Removed by Join Filter: 303
                                 ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.021..0.025 rows=2 loops=1)
                                       Filter: ((link)::text ~~ '%follow%'::text)
                                       Rows Removed by Filter: 16
                                 ->  Nested Loop  (cost=7.04..3747.37 rows=11 width=12) (actual time=3.050..47.653 rows=251 loops=2)
                                       ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=3.044..38.027 rows=10544 loops=2)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.752..12.177 rows=1 loops=2)
                                                   Filter: ((keyword)::text = 'sequel'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=2.270..24.831 rows=10544 loops=2)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=11140
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.348..1.348 rows=10544 loops=2)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.001..0.001 rows=0 loops=21088)
                                             Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=2 width=12) (actual time=0.004..0.005 rows=5 loops=199)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: (note IS NULL)
                                 Rows Removed by Filter: 2
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=1021)
                           Index Cond: (id = mc.company_id)
                           Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                           Rows Removed by Filter: 1
               ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=422)
                     Filter: ((kind)::text = 'production companies'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.002..0.002 rows=1 loops=402)
               Index Cond: (id = mk.movie_id)
               Filter: ((production_year >= 1950) AND (production_year <= 2000))
               Rows Removed by Filter: 0
 Planning Time: 6.860 ms
 Execution Time: 100.593 ms
(44 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3751.33..3751.34 rows=1 width=96) (actual time=34.168..34.168 rows=1 loops=1)
   ->  Nested Loop  (cost=8.32..3751.32 rows=1 width=118) (actual time=4.803..34.154 rows=14 loops=1)
         Join Filter: (ml.movie_id = t.id)
         ->  Nested Loop  (cost=7.89..3750.82 rows=1 width=113) (actual time=3.452..33.927 rows=102 loops=1)
               Join Filter: (mc.company_type_id = ct.id)
               Rows Removed by Join Filter: 1
               ->  Nested Loop  (cost=7.89..3749.75 rows=1 width=117) (actual time=3.448..33.825 rows=103 loops=1)
                     ->  Nested Loop  (cost=7.47..3749.30 rows=1 width=102) (actual time=3.132..32.972 rows=288 loops=1)
                           Join Filter: (ml.movie_id = mc.movie_id)
                           ->  Nested Loop  (cost=7.04..3748.73 rows=1 width=90) (actual time=3.115..32.490 rows=64 loops=1)
                                 Join Filter: (ml.link_type_id = lt.id)
                                 Rows Removed by Join Filter: 187
                                 ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.009..0.014 rows=1 loops=1)
                                       Filter: ((link)::text ~~ '%follows%'::text)
                                       Rows Removed by Filter: 17
                                 ->  Nested Loop  (cost=7.04..3747.37 rows=11 width=12) (actual time=3.102..32.452 rows=251 loops=1)
                                       ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=3.095..23.474 rows=10544 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.757..10.153 rows=1 loops=1)
                                                   Filter: ((keyword)::text = 'sequel'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=2.334..12.354 rows=10544 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=5570
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.415..1.415 rows=10544 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.001..0.001 rows=0 loops=10544)
                                             Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=2 width=12) (actual time=0.005..0.007 rows=4 loops=64)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: (note IS NULL)
                                 Rows Removed by Filter: 2
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=288)
                           Index Cond: (id = mc.company_id)
                           Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                           Rows Removed by Filter: 1
               ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=103)
                     Filter: ((kind)::text = 'production companies'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.002..0.002 rows=0 loops=102)
               Index Cond: (id = mk.movie_id)
               Filter: (((title)::text ~~ '%Money%'::text) AND (production_year = 1998))
               Rows Removed by Filter: 1
 Planning Time: 6.672 ms
 Execution Time: 34.372 ms
(44 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=6166.44..6166.45 rows=1 width=96) (actual time=222.637..222.637 rows=1 loops=1)
   ->  Nested Loop  (cost=8.32..6166.44 rows=1 width=60) (actual time=3.497..220.985 rows=6946 loops=1)
         Join Filter: (ml.movie_id = t.id)
         ->  Nested Loop  (cost=7.89..6165.94 rows=1 width=55) (actual time=3.477..209.449 rows=6946 loops=1)
               Join Filter: (ml.link_type_id = lt.id)
               Rows Removed by Join Filter: 42158
               ->  Nested Loop  (cost=7.89..6164.53 rows=1 width=59) (actual time=3.468..196.595 rows=6946 loops=1)
                     ->  Nested Loop  (cost=7.47..6137.17 rows=60 width=44) (actual time=3.117..170.476 rows=14916 loops=1)
                           Join Filter: (mc.company_type_id = ct.id)
                           Rows Removed by Join Filter: 1782
                           ->  Nested Loop  (cost=7.47..6133.01 rows=79 width=48) (actual time=3.108..166.700 rows=15510 loops=1)
                                 Join Filter: (ml.movie_id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.04..6115.09 rows=31 width=12) (actual time=3.086..157.703 rows=1460 loops=1)
                                       ->  Nested Loop  (cost=6.75..6072.14 rows=101 width=4) (actual time=3.080..115.614 rows=47403 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2793.84 rows=3 width=4) (actual time=0.787..17.255 rows=3 loops=1)
                                                   Filter: ((keyword)::text = ANY ('{sequel,revenge,based-on-novel}'::text[]))
                                                   Rows Removed by Filter: 134167
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1089.78 rows=299 width=8) (actual time=3.284..31.226 rows=15801 loops=3)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=23953
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.920..1.920 rows=15801 loops=3)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.001..0.001 rows=0 loops=47403)
                                             Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=36) (actual time=0.002..0.005 rows=11 loops=1460)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: (note IS NOT NULL)
                                       Rows Removed by Filter: 2
                           ->  Materialize  (cost=0.00..1.06 rows=3 width=4) (actual time=0.000..0.000 rows=1 loops=15510)
                                 ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=3 width=4) (actual time=0.005..0.006 rows=3 loops=1)
                                       Filter: ((kind IS NOT NULL) AND ((kind)::text <> 'production companies'::text))
                                       Rows Removed by Filter: 1
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=14916)
                           Index Cond: (id = mc.company_id)
                           Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '20th Century Fox%'::text) OR ((name)::text ~~ 'Twentieth Century Fox%'::text)))
                           Rows Removed by Filter: 1
               ->  Seq Scan on link_type lt  (cost=0.00..1.18 rows=18 width=4) (actual time=0.001..0.001 rows=7 loops=6946)
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.001..0.001 rows=1 loops=6946)
               Index Cond: (id = mk.movie_id)
               Filter: (production_year > 1950)
 Planning Time: 6.547 ms
 Execution Time: 222.814 ms
(42 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=6183.65..6183.66 rows=1 width=96) (actual time=199.786..199.786 rows=1 loops=1)
   ->  Nested Loop  (cost=8.32..6183.29 rows=48 width=60) (actual time=3.191..196.713 rows=14899 loops=1)
         ->  Nested Loop  (cost=7.90..6158.94 rows=54 width=45) (actual time=3.184..173.008 rows=14916 loops=1)
               Join Filter: (mc.company_type_id = ct.id)
               Rows Removed by Join Filter: 1782
               ->  Nested Loop  (cost=7.90..6155.09 rows=71 width=49) (actual time=3.180..169.636 rows=15510 loops=1)
                     Join Filter: (ml.movie_id = mc.movie_id)
                     ->  Nested Loop  (cost=7.47..6138.91 rows=28 width=29) (actual time=3.173..161.664 rows=1460 loops=1)
                           Join Filter: (ml.link_type_id = lt.id)
                           Rows Removed by Join Filter: 10576
                           ->  Nested Loop  (cost=7.47..6130.60 rows=28 width=33) (actual time=3.161..160.168 rows=1460 loops=1)
                                 Join Filter: (ml.movie_id = t.id)
                                 ->  Nested Loop  (cost=7.04..6115.09 rows=31 width=12) (actual time=3.135..156.470 rows=1460 loops=1)
                                       ->  Nested Loop  (cost=6.75..6072.14 rows=101 width=4) (actual time=3.128..114.074 rows=47403 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2793.84 rows=3 width=4) (actual time=0.813..20.053 rows=3 loops=1)
                                                   Filter: ((keyword)::text = ANY ('{sequel,revenge,based-on-novel}'::text[]))
                                                   Rows Removed by Filter: 134167
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1089.78 rows=299 width=8) (actual time=3.268..29.800 rows=15801 loops=3)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=23953
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.905..1.905 rows=15801 loops=3)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.001..0.001 rows=0 loops=47403)
                                             Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.002..0.002 rows=1 loops=1460)
                                       Index Cond: (id = mk.movie_id)
                                       Filter: (production_year > 1950)
                           ->  Materialize  (cost=0.00..1.27 rows=18 width=4) (actual time=0.000..0.000 rows=8 loops=1460)
                                 ->  Seq Scan on link_type lt  (cost=0.00..1.18 rows=18 width=4) (actual time=0.007..0.009 rows=16 loops=1)
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=36) (actual time=0.002..0.004 rows=11 loops=1460)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: (note IS NOT NULL)
                           Rows Removed by Filter: 2
               ->  Materialize  (cost=0.00..1.06 rows=3 width=4) (actual time=0.000..0.000 rows=1 loops=15510)
                     ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=3 width=4) (actual time=0.003..0.004 rows=3 loops=1)
                           Filter: ((kind IS NOT NULL) AND ((kind)::text <> 'production companies'::text))
                           Rows Removed by Filter: 1
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.001..0.001 rows=1 loops=14916)
               Index Cond: (id = mc.company_id)
               Filter: ((country_code)::text <> '[pl]'::text)
               Rows Removed by Filter: 0
 Planning Time: 6.916 ms
 Execution Time: 199.960 ms
(43 rows)

SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16845.82..16845.83 rows=1 width=96) (actual time=206.367..206.367 rows=1 loops=1)
   ->  Gather  (cost=1005.35..16845.81 rows=1 width=42) (actual time=20.021..211.643 rows=397 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Nested Loop  (cost=5.34..15845.71 rows=1 width=42) (actual time=18.408..203.455 rows=132 loops=3)
               ->  Nested Loop  (cost=5.20..15844.23 rows=9 width=46) (actual time=18.397..203.218 rows=132 loops=3)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=4.77..15820.25 rows=15 width=54) (actual time=1.062..156.309 rows=1891 loops=3)
                           ->  Nested Loop  (cost=4.35..15801.98 rows=41 width=39) (actual time=1.022..146.647 rows=2203 loops=3)
                                 Join Filter: (mi_idx.movie_id = t.id)
                                 ->  Hash Join  (cost=3.92..15677.77 rows=234 width=18) (actual time=0.179..99.092 rows=8078 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Nested Loop  (cost=2.86..15671.64 rows=938 width=22) (actual time=0.094..96.359 rows=21569 loops=3)
                                             ->  Hash Join  (cost=2.43..15182.64 rows=187 width=10) (actual time=0.056..56.301 rows=5283 loops=3)
                                                   Hash Cond: (mi_idx.info_type_id = it2.id)
                                                   ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..15122.68 rows=21125 width=14) (actual time=0.022..54.307 rows=17543 loops=3)
                                                         Filter: ((info)::text > '8.0'::text)
                                                         Rows Removed by Filter: 442469
                                                   ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.019..0.020 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.015..0.016 rows=1 loops=3)
                                                               Filter: ((info)::text = 'rating'::text)
                                                               Rows Removed by Filter: 112
                                             ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.56 rows=5 width=12) (actual time=0.005..0.007 rows=4 loops=15849)
                                                   Index Cond: (movie_id = mi_idx.movie_id)
                                       ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.52 rows=1 width=21) (actual time=0.006..0.006 rows=0 loops=24233)
                                       Index Cond: (id = mc.movie_id)
                                       Filter: ((production_year >= 2005) AND (production_year <= 2008))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.004..0.004 rows=1 loops=6610)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.59 rows=1 width=8) (actual time=0.025..0.025 rows=0 loops=5674)
                           Index Cond: (movie_id = mc.movie_id)
                           Filter: ((info)::text = ANY ('{Drama,Horror}'::text[]))
                           Rows Removed by Filter: 28
               ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=397)
                     Index Cond: (id = mi.info_type_id)
                     Filter: ((info)::text = 'genres'::text)
 Planning Time: 6.783 ms
 Execution Time: 211.974 ms
(47 rows)

SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=19208.36..19208.37 rows=1 width=64) (actual time=75.871..75.871 rows=1 loops=1)
   ->  Gather  (cost=1004.41..19208.36 rows=1 width=59) (actual time=73.563..76.783 rows=10 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Nested Loop  (cost=4.41..18208.26 rows=1 width=59) (actual time=70.616..71.352 rows=3 loops=3)
               ->  Nested Loop  (cost=4.27..18205.80 rows=15 width=63) (actual time=70.556..70.960 rows=403 loops=3)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=3.84..18203.79 rows=1 width=29) (actual time=70.546..70.710 rows=3 loops=3)
                           ->  Nested Loop  (cost=3.42..18203.35 rows=1 width=33) (actual time=70.533..70.587 rows=11 loops=3)
                                 ->  Nested Loop  (cost=3.29..18203.03 rows=2 width=37) (actual time=70.521..70.562 rows=11 loops=3)
                                       Join Filter: (t.id = mc.movie_id)
                                       ->  Nested Loop  (cost=2.86..18202.37 rows=1 width=25) (actual time=70.506..70.528 rows=1 loops=3)
                                             ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=4) (actual time=70.428..70.430 rows=3 loops=3)
                                                   Hash Cond: (mi_idx.info_type_id = it2.id)
                                                   ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=8) (actual time=0.017..38.233 rows=460012 loops=3)
                                                   ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.026..0.026 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.021..0.022 rows=1 loops=3)
                                                               Filter: ((info)::text = 'bottom 10 rank'::text)
                                                               Rows Removed by Filter: 112
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..0.58 rows=1 width=21) (actual time=0.029..0.029 rows=0 loops=10)
                                                   Index Cond: (id = mi_idx.movie_id)
                                                   Filter: ((production_year > 2000) AND (((title)::text ~~ 'Birdemic%'::text) OR ((title)::text ~~ '%Movie%'::text)))
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.59 rows=5 width=12) (actual time=0.035..0.045 rows=16 loops=2)
                                             Index Cond: (movie_id = mi_idx.movie_id)
                                 ->  Index Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=33)
                                       Index Cond: (id = mc.company_type_id)
                                       Filter: ((kind IS NOT NULL) AND (((kind)::text = 'production companies'::text) OR ((kind)::text = 'distributors'::text)))
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.011..0.011 rows=0 loops=33)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.48 rows=42 width=50) (actual time=0.007..0.056 rows=121 loops=10)
                           Index Cond: (movie_id = mc.movie_id)
               ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=1210)
                     Index Cond: (id = mi.info_type_id)
                     Filter: ((info)::text = 'budget'::text)
                     Rows Removed by Filter: 1
 Planning Time: 7.242 ms
 Execution Time: 77.055 ms
(41 rows)

SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=17912.37..17912.38 rows=1 width=96) (actual time=684.581..684.581 rows=1 loops=1)
   ->  Gather  (cost=1007.63..17912.35 rows=2 width=42) (actual time=3.088..695.108 rows=4711 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Hash Join  (cost=7.63..16912.15 rows=1 width=42) (actual time=3.794..680.678 rows=1570 loops=3)
               Hash Cond: (mi.info_type_id = it1.id)
               ->  Nested Loop  (cost=5.20..16909.46 rows=98 width=46) (actual time=3.717..680.187 rows=1570 loops=3)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=4.77..16679.52 rows=135 width=54) (actual time=0.359..416.680 rows=14111 loops=3)
                           ->  Hash Join  (cost=4.35..16514.65 rows=370 width=39) (actual time=0.176..343.297 rows=22822 loops=3)
                                 Hash Cond: (mc.company_type_id = ct.id)
                                 ->  Nested Loop  (cost=3.29..16505.58 rows=1482 width=43) (actual time=0.132..335.677 rows=56386 loops=3)
                                       ->  Nested Loop  (cost=2.86..16307.87 rows=296 width=31) (actual time=0.105..247.631 rows=17435 loops=3)
                                             ->  Hash Join  (cost=2.43..15347.68 rows=723 width=10) (actual time=0.061..72.033 rows=40524 loops=3)
                                                   Hash Cond: (mi_idx.info_type_id = it2.id)
                                                   ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..15122.68 rows=81724 width=14) (actual time=0.033..62.397 rows=64280 loops=3)
                                                         Filter: ((info)::text > '7.0'::text)
                                                         Rows Removed by Filter: 395732
                                                   ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.012..0.012 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=3)
                                                               Filter: ((info)::text = 'rating'::text)
                                                               Rows Removed by Filter: 112
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..1.33 rows=1 width=21) (actual time=0.004..0.004 rows=0 loops=121572)
                                                   Index Cond: (id = mi_idx.movie_id)
                                                   Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.62 rows=5 width=12) (actual time=0.003..0.004 rows=3 loops=52304)
                                             Index Cond: (movie_id = t.id)
                                 ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=3)
                                             Filter: ((kind)::text = 'production companies'::text)
                                             Rows Removed by Filter: 3
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.003..0.003 rows=1 loops=68466)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.69 rows=1 width=8) (actual time=0.018..0.018 rows=0 loops=42332)
                           Index Cond: (movie_id = mc.movie_id)
                           Filter: ((info)::text = ANY ('{Drama,Horror,Western,Family}'::text[]))
                           Rows Removed by Filter: 29
               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.027..0.027 rows=1 loops=3)
                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                     ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.016..0.023 rows=1 loops=3)
                           Filter: ((info)::text = 'genres'::text)
                           Rows Removed by Filter: 112
 Planning Time: 6.563 ms
 Execution Time: 696.487 ms
(49 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=20132.55..20132.56 rows=1 width=96) (actual time=1318.655..1318.655 rows=1 loops=1)
   ->  Gather  (cost=20132.32..20132.53 rows=2 width=96) (actual time=1318.636..1326.298 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=19132.32..19132.33 rows=1 width=96) (actual time=1315.436..1315.436 rows=1 loops=3)
               ->  Hash Join  (cost=8.73..19132.25 rows=10 width=65) (actual time=267.400..1308.539 rows=37034 loops=3)
                     Hash Cond: (mi.info_type_id = it2.id)
                     ->  Nested Loop  (cost=6.30..19126.56 rows=1197 width=69) (actual time=267.281..1292.976 rows=172109 loops=3)
                           ->  Nested Loop  (cost=5.87..19055.86 rows=37 width=35) (actual time=267.249..1149.970 rows=5490 loops=3)
                                 ->  Hash Join  (cost=5.45..18649.93 rows=911 width=39) (actual time=266.176..879.495 rows=100870 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Nested Loop  (cost=4.39..18629.17 rows=3643 width=43) (actual time=266.147..849.090 rows=257695 loops=3)
                                             ->  Hash Join  (cost=3.96..18186.75 rows=727 width=31) (actual time=266.095..597.974 rows=69960 loops=3)
                                                   Hash Cond: (t.kind_id = kt.id)
                                                   ->  Nested Loop  (cost=2.86..18164.20 rows=5089 width=35) (actual time=0.089..578.170 rows=153308 loops=3)
                                                         ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=10) (actual time=0.048..109.978 rows=153308 loops=3)
                                                               Hash Cond: (miidx.info_type_id = it.id)
                                                               ->  Parallel Seq Scan on movie_info_idx miidx  (cost=0.00..13685.15 rows=575015 width=14) (actual time=0.018..43.281 rows=460012 loops=3)
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.013..0.013 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'rating'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=25) (actual time=0.003..0.003 rows=1 loops=459925)
                                                               Index Cond: (id = miidx.movie_id)
                                                   ->  Hash  (cost=1.09..1.09 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=3)
                                                               Filter: ((kind)::text = 'movie'::text)
                                                               Rows Removed by Filter: 6
                                             ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.56 rows=5 width=12) (actual time=0.002..0.003 rows=4 loops=209880)
                                                   Index Cond: (movie_id = t.id)
                                       ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                 ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=302610)
                                       Index Cond: (id = mc.company_id)
                                       Filter: ((country_code)::text = '[de]'::text)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.49 rows=42 width=50) (actual time=0.005..0.022 rows=31 loops=16470)
                                 Index Cond: (movie_id = t.id)
                     ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.028..0.028 rows=1 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.017..0.023 rows=1 loops=3)
                                 Filter: ((info)::text = 'release dates'::text)
                                 Rows Removed by Filter: 112
 Planning Time: 10.250 ms
 Execution Time: 1326.566 ms
(50 rows)

SET
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=19206.33..19206.34 rows=1 width=96) (actual time=634.520..634.521 rows=1 loops=1)
   ->  Gather  (cost=1004.54..19206.32 rows=1 width=42) (actual time=282.053..640.155 rows=372 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Nested Loop  (cost=4.54..18206.22 rows=1 width=42) (actual time=304.426..631.520 rows=124 loops=3)
               ->  Nested Loop  (cost=4.40..18205.87 rows=2 width=46) (actual time=304.383..630.754 rows=707 loops=3)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=3.97..18203.87 rows=1 width=54) (actual time=304.348..629.807 rows=20 loops=3)
                           ->  Nested Loop  (cost=3.84..18203.70 rows=1 width=58) (actual time=304.269..629.716 rows=54 loops=3)
                                 ->  Nested Loop  (cost=3.42..18203.25 rows=1 width=43) (actual time=291.815..628.915 rows=104 loops=3)
                                       Join Filter: (t.id = mc.movie_id)
                                       ->  Nested Loop  (cost=2.99..18202.60 rows=1 width=31) (actual time=291.369..628.468 rows=30 loops=3)
                                             ->  Nested Loop  (cost=2.86..18202.37 rows=1 width=35) (actual time=2.276..628.251 rows=117 loops=3)
                                                   ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=10) (actual time=0.121..107.487 rows=153308 loops=3)
                                                         Hash Cond: (miidx.info_type_id = it.id)
                                                         ->  Parallel Seq Scan on movie_info_idx miidx  (cost=0.00..13685.15 rows=575015 width=14) (actual time=0.020..41.390 rows=460012 loops=3)
                                                         ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.023..0.024 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.018..0.019 rows=1 loops=3)
                                                                     Filter: ((info)::text = 'rating'::text)
                                                                     Rows Removed by Filter: 112
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.58 rows=1 width=25) (actual time=0.003..0.003 rows=0 loops=459925)
                                                         Index Cond: (id = miidx.movie_id)
                                                         Filter: (((title)::text <> ''::text) AND (((title)::text ~~ '%Champion%'::text) OR ((title)::text ~~ '%Loser%'::text)))
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using kind_type_pkey on kind_type kt  (cost=0.13..0.18 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=352)
                                                   Index Cond: (id = t.kind_id)
                                                   Filter: ((kind)::text = 'movie'::text)
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.59 rows=5 width=12) (actual time=0.011..0.013 rows=3 loops=90)
                                             Index Cond: (movie_id = miidx.movie_id)
                                 ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.007..0.007 rows=1 loops=313)
                                       Index Cond: (id = mc.company_id)
                                       Filter: ((country_code)::text = '[us]'::text)
                                       Rows Removed by Filter: 0
                           ->  Index Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=161)
                                 Index Cond: (id = mc.company_type_id)
                                 Filter: ((kind)::text = 'production companies'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.48 rows=42 width=8) (actual time=0.010..0.041 rows=35 loops=61)
                           Index Cond: (movie_id = mc.movie_id)
               ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=2122)
                     Index Cond: (id = mi.info_type_id)
                     Filter: ((info)::text = 'release dates'::text)
                     Rows Removed by Filter: 1
 Planning Time: 10.736 ms
 Execution Time: 640.464 ms
(47 rows)

SET
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=19206.33..19206.34 rows=1 width=96) (actual time=613.839..613.839 rows=1 loops=1)
   ->  Gather  (cost=1004.54..19206.32 rows=1 width=42) (actual time=443.783..620.130 rows=53 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Nested Loop  (cost=4.54..18206.22 rows=1 width=42) (actual time=457.112..610.850 rows=18 loops=3)
               ->  Nested Loop  (cost=4.40..18205.87 rows=2 width=46) (actual time=457.086..610.760 rows=73 loops=3)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=3.97..18203.87 rows=1 width=54) (actual time=457.061..610.626 rows=5 loops=3)
                           ->  Nested Loop  (cost=3.84..18203.70 rows=1 width=58) (actual time=456.995..610.597 rows=16 loops=3)
                                 ->  Nested Loop  (cost=3.42..18203.25 rows=1 width=43) (actual time=456.969..610.345 rows=32 loops=3)
                                       Join Filter: (t.id = mc.movie_id)
                                       ->  Nested Loop  (cost=2.99..18202.60 rows=1 width=31) (actual time=456.937..610.272 rows=10 loops=3)
                                             ->  Nested Loop  (cost=2.86..18202.37 rows=1 width=35) (actual time=25.655..610.219 rows=22 loops=3)
                                                   ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=10) (actual time=0.127..107.053 rows=153308 loops=3)
                                                         Hash Cond: (miidx.info_type_id = it.id)
                                                         ->  Parallel Seq Scan on movie_info_idx miidx  (cost=0.00..13685.15 rows=575015 width=14) (actual time=0.019..41.270 rows=460012 loops=3)
                                                         ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.026..0.026 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.021..0.022 rows=1 loops=3)
                                                                     Filter: ((info)::text = 'rating'::text)
                                                                     Rows Removed by Filter: 112
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.58 rows=1 width=25) (actual time=0.003..0.003 rows=0 loops=459925)
                                                         Index Cond: (id = miidx.movie_id)
                                                         Filter: (((title)::text <> ''::text) AND (((title)::text ~~ 'Champion%'::text) OR ((title)::text ~~ 'Loser%'::text)))
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using kind_type_pkey on kind_type kt  (cost=0.13..0.18 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=66)
                                                   Index Cond: (id = t.kind_id)
                                                   Filter: ((kind)::text = 'movie'::text)
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.59 rows=5 width=12) (actual time=0.005..0.006 rows=3 loops=29)
                                             Index Cond: (movie_id = miidx.movie_id)
                                 ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.008..0.008 rows=0 loops=95)
                                       Index Cond: (id = mc.company_id)
                                       Filter: ((country_code)::text = '[us]'::text)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=47)
                                 Index Cond: (id = mc.company_type_id)
                                 Filter: ((kind)::text = 'production companies'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.48 rows=42 width=8) (actual time=0.008..0.025 rows=16 loops=14)
                           Index Cond: (movie_id = mc.movie_id)
               ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=218)
                     Index Cond: (id = mi.info_type_id)
                     Filter: ((info)::text = 'release dates'::text)
                     Rows Removed by Filter: 1
 Planning Time: 10.676 ms
 Execution Time: 620.377 ms
(47 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=20720.69..20720.70 rows=1 width=96) (actual time=2030.449..2030.449 rows=1 loops=1)
   ->  Gather  (cost=20720.46..20720.67 rows=2 width=96) (actual time=2030.423..2044.400 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=19720.46..19720.47 rows=1 width=96) (actual time=2027.473..2027.473 rows=1 loops=3)
               ->  Hash Join  (cost=8.73..19719.76 rows=94 width=42) (actual time=265.416..1987.106 rows=223463 loops=3)
                     Hash Cond: (mi.info_type_id = it2.id)
                     ->  Nested Loop  (cost=6.30..19688.31 rows=10660 width=46) (actual time=265.298..1872.559 rows=1438861 loops=3)
                           ->  Nested Loop  (cost=5.87..19055.86 rows=331 width=54) (actual time=265.260..1164.851 rows=29098 loops=3)
                                 ->  Hash Join  (cost=5.45..18649.93 rows=911 width=39) (actual time=265.197..878.619 rows=100870 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Nested Loop  (cost=4.39..18629.17 rows=3643 width=43) (actual time=265.171..846.993 rows=257695 loops=3)
                                             ->  Hash Join  (cost=3.96..18186.75 rows=727 width=31) (actual time=265.117..596.593 rows=69960 loops=3)
                                                   Hash Cond: (t.kind_id = kt.id)
                                                   ->  Nested Loop  (cost=2.86..18164.20 rows=5089 width=35) (actual time=0.114..576.345 rows=153308 loops=3)
                                                         ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=10) (actual time=0.049..111.303 rows=153308 loops=3)
                                                               Hash Cond: (miidx.info_type_id = it.id)
                                                               ->  Parallel Seq Scan on movie_info_idx miidx  (cost=0.00..13685.15 rows=575015 width=14) (actual time=0.018..44.090 rows=460012 loops=3)
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.013..0.013 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'rating'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=25) (actual time=0.003..0.003 rows=1 loops=459925)
                                                               Index Cond: (id = miidx.movie_id)
                                                   ->  Hash  (cost=1.09..1.09 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.011..0.011 rows=1 loops=3)
                                                               Filter: ((kind)::text = 'movie'::text)
                                                               Rows Removed by Filter: 6
                                             ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.56 rows=5 width=12) (actual time=0.002..0.003 rows=4 loops=209880)
                                                   Index Cond: (movie_id = t.id)
                                       ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.011..0.011 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                 ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=302610)
                                       Index Cond: (id = mc.company_id)
                                       Filter: ((country_code)::text = '[us]'::text)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.49 rows=42 width=8) (actual time=0.004..0.019 rows=49 loops=87293)
                                 Index Cond: (movie_id = t.id)
                     ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.026..0.027 rows=1 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.016..0.023 rows=1 loops=3)
                                 Filter: ((info)::text = 'release dates'::text)
                                 Rows Removed by Filter: 112
 Planning Time: 10.462 ms
 Execution Time: 2044.659 ms
(50 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7380.25..7380.26 rows=1 width=64) (actual time=423.830..423.830 rows=1 loops=1)
   ->  Nested Loop  (cost=8.04..7380.24 rows=1 width=23) (actual time=16.565..423.599 rows=761 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         Rows Removed by Join Filter: 117
         ->  Nested Loop  (cost=8.04..7377.82 rows=1 width=27) (actual time=16.559..420.269 rows=878 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=7.61..7375.92 rows=1 width=35) (actual time=16.007..332.703 rows=1147 loops=1)
                     Join Filter: (mi_idx.info_type_id = it2.id)
                     Rows Removed by Join Filter: 2233
                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=1)
                           Filter: ((info)::text = 'rating'::text)
                           Rows Removed by Filter: 112
                     ->  Nested Loop  (cost=7.61..7373.39 rows=9 width=39) (actual time=15.605..332.310 rows=3380 loops=1)
                           Join Filter: (t.id = mi_idx.movie_id)
                           ->  Nested Loop  (cost=7.18..7371.79 rows=3 width=25) (actual time=15.573..318.725 rows=1966 loops=1)
                                 Join Filter: (t.kind_id = kt.id)
                                 Rows Removed by Join Filter: 616
                                 ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.013..0.014 rows=1 loops=1)
                                       Filter: ((kind)::text = 'movie'::text)
                                       Rows Removed by Filter: 6
                                 ->  Nested Loop  (cost=7.18..7370.44 rows=21 width=29) (actual time=4.785..318.274 rows=2582 loops=1)
                                       ->  Nested Loop  (cost=6.75..7304.56 rows=135 width=4) (actual time=4.522..143.997 rows=37091 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.163..20.891 rows=3 loops=1)
                                                   Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                   Rows Removed by Filter: 134167
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1082.76 rows=299 width=8) (actual time=3.390..39.593 rows=12364 loops=3)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=26312
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.859..1.859 rows=12364 loops=3)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.004..0.004 rows=0 loops=37091)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: (production_year > 2010)
                                             Rows Removed by Filter: 1
                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=14) (actual time=0.006..0.006 rows=2 loops=1966)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((info)::text < '8.5'::text)
                                 Rows Removed by Filter: 0
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.065..0.076 rows=1 loops=1147)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,USA,American}'::text[]))
                     Rows Removed by Filter: 69
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=878)
               Filter: ((info)::text = 'countries'::text)
               Rows Removed by Filter: 21
 Planning Time: 6.597 ms
 Execution Time: 423.995 ms
(47 rows)

SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4867.25..4867.26 rows=1 width=64) (actual time=188.803..188.803 rows=1 loops=1)
   ->  Nested Loop  (cost=8.04..4867.24 rows=1 width=23) (actual time=126.627..188.792 rows=1 loops=1)
         Join Filter: (t.kind_id = kt.id)
         Rows Removed by Join Filter: 1
         ->  Nested Loop  (cost=8.04..4866.14 rows=1 width=27) (actual time=8.404..188.776 rows=2 loops=1)
               Join Filter: (mi_idx.info_type_id = it2.id)
               Rows Removed by Join Filter: 1
               ->  Nested Loop  (cost=8.04..4863.72 rows=1 width=31) (actual time=8.384..188.748 rows=3 loops=1)
                     Join Filter: (t.id = mi_idx.movie_id)
                     ->  Nested Loop  (cost=7.61..4863.21 rows=1 width=33) (actual time=8.362..188.644 rows=8 loops=1)
                           Join Filter: (mi.info_type_id = it1.id)
                           ->  Nested Loop  (cost=7.61..4860.78 rows=1 width=37) (actual time=8.356..188.607 rows=8 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=7.18..4858.88 rows=1 width=29) (actual time=8.199..187.853 rows=15 loops=1)
                                       ->  Nested Loop  (cost=6.75..4825.68 rows=67 width=4) (actual time=6.275..84.846 rows=19528 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=2 width=4) (actual time=1.179..16.608 rows=1 loops=1)
                                                   Filter: ((keyword)::text = ANY ('{murder,murder-in-title}'::text[]))
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1096.79 rows=299 width=8) (actual time=5.093..66.088 rows=19528 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=12389
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=2.904..2.904 rows=19528 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.50 rows=1 width=25) (actual time=0.005..0.005 rows=0 loops=19528)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: ((production_year > 2010) AND (((title)::text ~~ '%murder%'::text) OR ((title)::text ~~ '%Murder%'::text) OR ((title)::text ~~ '%Mord%'::text)))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.046..0.049 rows=1 loops=15)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,USA,American}'::text[]))
                                       Rows Removed by Filter: 12
                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=8)
                                 Filter: ((info)::text = 'countries'::text)
                                 Rows Removed by Filter: 7
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=14) (actual time=0.012..0.012 rows=0 loops=8)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((info)::text > '6.0'::text)
                           Rows Removed by Filter: 1
               ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=3)
                     Filter: ((info)::text = 'rating'::text)
                     Rows Removed by Filter: 104
         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=2)
               Filter: ((kind)::text = 'movie'::text)
               Rows Removed by Filter: 3
 Planning Time: 6.504 ms
 Execution Time: 189.033 ms
(46 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7388.39..7388.40 rows=1 width=64) (actual time=763.713..763.713 rows=1 loops=1)
   ->  Nested Loop  (cost=8.04..7388.39 rows=1 width=23) (actual time=4.757..762.768 rows=4115 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         Rows Removed by Join Filter: 594
         ->  Nested Loop  (cost=8.04..7385.96 rows=1 width=27) (actual time=4.752..746.048 rows=4709 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=7.61..7384.06 rows=1 width=35) (actual time=4.684..359.186 rows=5949 loops=1)
                     Join Filter: (mi_idx.info_type_id = it2.id)
                     Rows Removed by Join Filter: 11839
                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.011..0.013 rows=1 loops=1)
                           Filter: ((info)::text = 'rating'::text)
                           Rows Removed by Filter: 112
                     ->  Nested Loop  (cost=7.61..7381.10 rows=44 width=39) (actual time=4.669..357.324 rows=17788 loops=1)
                           Join Filter: (t.id = mi_idx.movie_id)
                           ->  Nested Loop  (cost=7.18..7373.07 rows=15 width=25) (actual time=4.647..310.607 rows=8073 loops=1)
                                 Join Filter: (t.kind_id = kt.id)
                                 Rows Removed by Join Filter: 4332
                                 ->  Nested Loop  (cost=7.18..7370.44 rows=54 width=29) (actual time=4.582..307.321 rows=9739 loops=1)
                                       ->  Nested Loop  (cost=6.75..7304.56 rows=135 width=4) (actual time=4.557..137.444 rows=37091 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.193..21.520 rows=3 loops=1)
                                                   Filter: ((keyword IS NOT NULL) AND ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[])))
                                                   Rows Removed by Filter: 134167
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1082.76 rows=299 width=8) (actual time=3.395..37.178 rows=12364 loops=3)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=26312
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.861..1.861 rows=12364 loops=3)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.004..0.004 rows=0 loops=37091)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: (production_year > 2005)
                                             Rows Removed by Filter: 1
                                 ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=9739)
                                       ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.010..0.012 rows=2 loops=1)
                                             Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                             Rows Removed by Filter: 5
                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=14) (actual time=0.005..0.005 rows=2 loops=8073)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((info)::text < '8.5'::text)
                                 Rows Removed by Filter: 0
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.056..0.065 rows=1 loops=5949)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                     Rows Removed by Filter: 71
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=4709)
               Filter: ((info)::text = 'countries'::text)
               Rows Removed by Filter: 20
 Planning Time: 6.386 ms
 Execution Time: 763.885 ms
(48 rows)

SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=51520.30..51520.31 rows=1 width=64) (actual time=331.013..331.013 rows=1 loops=1)
   ->  Gather  (cost=51520.08..51520.29 rows=2 width=64) (actual time=330.425..335.294 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=50520.08..50520.09 rows=1 width=64) (actual time=327.643..327.644 rows=1 loops=3)
               ->  Nested Loop  (cost=5354.18..50520.04 rows=7 width=59) (actual time=44.990..327.609 rows=109 loops=3)
                     ->  Nested Loop  (cost=5353.76..50516.97 rows=7 width=63) (actual time=44.954..326.998 rows=109 loops=3)
                           ->  Nested Loop  (cost=5353.33..50515.14 rows=1 width=75) (actual time=44.531..326.758 rows=19 loops=3)
                                 ->  Nested Loop  (cost=5353.19..50514.85 rows=1 width=79) (actual time=44.509..326.691 rows=19 loops=3)
                                       ->  Nested Loop  (cost=5353.06..50514.70 rows=1 width=83) (actual time=44.478..326.617 rows=19 loops=3)
                                             ->  Nested Loop  (cost=5352.62..48271.71 rows=1133 width=33) (actual time=26.238..239.850 rows=1711 loops=3)
                                                   ->  Nested Loop  (cost=5352.19..46344.74 rows=2083 width=12) (actual time=25.735..215.621 rows=4566 loops=3)
                                                         ->  Parallel Hash Join  (cost=5351.77..40470.46 rows=3000 width=8) (actual time=25.008..170.820 rows=14612 loops=3)
                                                               Hash Cond: (mc.company_id = cn.id)
                                                               ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..35097.06 rows=8243 width=12) (actual time=0.025..139.656 rows=20555 loops=3)
                                                                     Filter: (((note)::text ~~ '%(200%)%'::text) AND ((note)::text ~~ '%(worldwide)%'::text))
                                                                     Rows Removed by Filter: 849155
                                                               ->  Parallel Hash  (cost=4722.92..4722.92 rows=50308 width=4) (actual time=24.413..24.414 rows=28281 loops=3)
                                                                     Buckets: 131072  Batches: 1  Memory Usage: 4352kB
                                                                     ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=50308 width=4) (actual time=0.021..17.230 rows=28281 loops=3)
                                                                           Filter: ((country_code)::text = '[us]'::text)
                                                                           Rows Removed by Filter: 50051
                                                         ->  Index Only Scan using movie_id_aka_title on aka_title at  (cost=0.42..1.93 rows=3 width=4) (actual time=0.002..0.003 rows=0 loops=43837)
                                                               Index Cond: (movie_id = mc.movie_id)
                                                               Heap Fetches: 13699
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.93 rows=1 width=21) (actual time=0.005..0.005 rows=0 loops=13699)
                                                         Index Cond: (id = at.movie_id)
                                                         Filter: (production_year > 2000)
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.97 rows=1 width=50) (actual time=0.050..0.050 rows=0 loops=5134)
                                                   Index Cond: (movie_id = t.id)
                                                   Filter: (((note)::text ~~ '%internet%'::text) AND ((info)::text ~~ 'USA:% 200%'::text))
                                                   Rows Removed by Filter: 72
                                       ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=57)
                                             Index Cond: (id = mc.company_type_id)
                                             Heap Fetches: 57
                                 ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.21 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=57)
                                       Index Cond: (id = mi.info_type_id)
                                       Filter: ((info)::text = 'release dates'::text)
                           ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.36 rows=47 width=8) (actual time=0.010..0.011 rows=6 loops=57)
                                 Index Cond: (movie_id = t.id)
                     ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=328)
                           Index Cond: (id = mk.keyword_id)
                           Heap Fetches: 328
 Planning Time: 14.958 ms
 Execution Time: 335.524 ms
(46 rows)

SET
                                                                                                      QUERY PLAN                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=6425.67..6425.68 rows=1 width=64) (actual time=31.540..31.540 rows=1 loops=1)
   ->  Gather  (cost=6425.55..6425.66 rows=1 width=64) (actual time=31.470..33.112 rows=2 loops=1)
         Workers Planned: 1
         Workers Launched: 1
         ->  Partial Aggregate  (cost=5425.55..5425.56 rows=1 width=64) (actual time=29.341..29.341 rows=1 loops=2)
               ->  Nested Loop  (cost=2.84..5425.53 rows=5 width=59) (actual time=21.500..29.331 rows=18 loops=2)
                     ->  Nested Loop  (cost=2.42..5423.34 rows=5 width=63) (actual time=21.483..29.127 rows=18 loops=2)
                           ->  Nested Loop  (cost=1.99..5421.40 rows=1 width=75) (actual time=18.780..29.077 rows=2 loops=2)
                                 ->  Nested Loop  (cost=1.85..5421.11 rows=1 width=79) (actual time=18.773..29.066 rows=2 loops=2)
                                       ->  Nested Loop  (cost=1.41..5418.58 rows=1 width=29) (actual time=16.842..28.066 rows=13 loops=2)
                                             ->  Nested Loop  (cost=0.98..5417.65 rows=1 width=8) (actual time=16.813..27.800 rows=14 loops=2)
                                                   ->  Nested Loop  (cost=0.85..5417.49 rows=1 width=12) (actual time=16.802..27.769 rows=14 loops=2)
                                                         ->  Nested Loop  (cost=0.43..5415.54 rows=1 width=8) (actual time=16.432..26.866 rows=139 loops=2)
                                                               ->  Parallel Seq Scan on company_name cn  (cost=0.00..5068.50 rows=1 width=4) (actual time=16.388..22.844 rows=0 loops=2)
                                                                     Filter: (((country_code)::text = '[us]'::text) AND ((name)::text = 'YouTube'::text))
                                                                     Rows Removed by Filter: 117498
                                                               ->  Index Scan using company_id_movie_companies on movie_companies mc  (cost=0.43..347.02 rows=1 width=12) (actual time=0.084..8.007 rows=278 loops=1)
                                                                     Index Cond: (company_id = cn.id)
                                                                     Filter: (((note)::text ~~ '%(200%)%'::text) AND ((note)::text ~~ '%(worldwide)%'::text))
                                                                     Rows Removed by Filter: 1180
                                                         ->  Index Only Scan using movie_id_aka_title on aka_title at  (cost=0.42..1.93 rows=3 width=4) (actual time=0.006..0.006 rows=0 loops=278)
                                                               Index Cond: (movie_id = mc.movie_id)
                                                               Heap Fetches: 27
                                                   ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=27)
                                                         Index Cond: (id = mc.company_type_id)
                                                         Heap Fetches: 27
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..0.93 rows=1 width=21) (actual time=0.019..0.019 rows=1 loops=27)
                                                   Index Cond: (id = at.movie_id)
                                                   Filter: ((production_year >= 2005) AND (production_year <= 2010))
                                                   Rows Removed by Filter: 0
                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.53 rows=1 width=50) (actual time=0.073..0.077 rows=0 loops=26)
                                             Index Cond: (movie_id = t.id)
                                             Filter: (((note)::text ~~ '%internet%'::text) AND ((info)::text ~~ 'USA:% 200%'::text))
                                             Rows Removed by Filter: 19
                                 ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.21 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=3)
                                       Index Cond: (id = mi.info_type_id)
                                       Filter: ((info)::text = 'release dates'::text)
                           ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.46 rows=47 width=8) (actual time=0.029..0.031 rows=12 loops=3)
                                 Index Cond: (movie_id = t.id)
                     ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.011..0.011 rows=1 loops=37)
                           Index Cond: (id = mk.keyword_id)
                           Heap Fetches: 37
 Planning Time: 15.282 ms
 Execution Time: 33.326 ms
(44 rows)

SET
                                                                                                          QUERY PLAN                                                                                                          
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=271194.30..271194.31 rows=1 width=64) (actual time=594.338..594.338 rows=1 loops=1)
   ->  Gather  (cost=271194.08..271194.29 rows=2 width=64) (actual time=594.217..599.409 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=270194.08..270194.09 rows=1 width=64) (actual time=591.481..591.482 rows=1 loops=3)
               ->  Nested Loop  (cost=5.11..270193.85 rows=46 width=59) (actual time=149.688..591.343 rows=757 loops=3)
                     Join Filter: (t.id = at.movie_id)
                     ->  Nested Loop  (cost=4.69..270184.51 rows=18 width=75) (actual time=145.691..586.627 rows=2655 loops=3)
                           ->  Nested Loop  (cost=4.27..270176.61 rows=18 width=79) (actual time=145.658..578.397 rows=2655 loops=3)
                                 ->  Nested Loop  (cost=3.84..270174.80 rows=1 width=71) (actual time=145.522..571.793 rows=882 loops=3)
                                       ->  Nested Loop  (cost=3.71..270174.65 rows=1 width=75) (actual time=145.498..570.539 rows=882 loops=3)
                                             ->  Nested Loop  (cost=3.29..270172.87 rows=4 width=79) (actual time=145.400..564.486 rows=961 loops=3)
                                                   ->  Nested Loop  (cost=2.86..270172.24 rows=1 width=67) (actual time=145.359..555.219 rows=594 loops=3)
                                                         ->  Hash Join  (cost=2.43..270163.87 rows=1 width=46) (actual time=145.312..546.687 rows=594 loops=3)
                                                               Hash Cond: (mi.info_type_id = it1.id)
                                                               ->  Parallel Seq Scan on movie_info mi  (cost=0.00..270161.12 rows=119 width=50) (actual time=145.173..546.379 rows=594 loops=3)
                                                                     Filter: ((info IS NOT NULL) AND ((note)::text ~~ '%internet%'::text) AND (((info)::text ~~ 'USA:% 199%'::text) OR ((info)::text ~~ 'USA:% 200%'::text)))
                                                                     Rows Removed by Filter: 4944646
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.029..0.029 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.017..0.023 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'release dates'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..8.37 rows=1 width=21) (actual time=0.014..0.014 rows=1 loops=1783)
                                                               Index Cond: (id = mi.movie_id)
                                                               Filter: (production_year > 1990)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.58 rows=5 width=12) (actual time=0.012..0.015 rows=2 loops=1782)
                                                         Index Cond: (movie_id = t.id)
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=2884)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((country_code)::text = '[us]'::text)
                                                   Rows Removed by Filter: 0
                                       ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=2647)
                                             Index Cond: (id = mc.company_type_id)
                                             Heap Fetches: 2647
                                 ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.34 rows=47 width=8) (actual time=0.006..0.007 rows=3 loops=2647)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=7964)
                                 Index Cond: (id = mk.keyword_id)
                                 Heap Fetches: 7964
                     ->  Index Only Scan using movie_id_aka_title on aka_title at  (cost=0.42..0.48 rows=3 width=4) (actual time=0.001..0.002 rows=0 loops=7964)
                           Index Cond: (movie_id = mk.movie_id)
                           Heap Fetches: 2271
 Planning Time: 14.982 ms
 Execution Time: 599.675 ms
(46 rows)

SET
                                                                                               QUERY PLAN                                                                                               
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=241312.72..241312.73 rows=1 width=64) (actual time=668.369..668.369 rows=1 loops=1)
   ->  Gather  (cost=241312.50..241312.71 rows=2 width=64) (actual time=668.259..672.685 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=240312.50..240312.51 rows=1 width=64) (actual time=665.463..665.463 rows=1 loops=3)
               ->  Nested Loop  (cost=6.07..240304.29 rows=1642 width=38) (actual time=140.284..664.869 rows=3782 loops=3)
                     Join Filter: (t.id = at.movie_id)
                     ->  Nested Loop  (cost=5.65..239970.15 rows=644 width=33) (actual time=135.276..650.545 rows=8521 loops=3)
                           ->  Nested Loop  (cost=5.23..239687.65 rows=644 width=37) (actual time=135.240..630.024 rows=8521 loops=3)
                                 ->  Hash Join  (cost=4.80..239595.35 rows=51 width=29) (actual time=135.050..611.551 rows=3286 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Nested Loop  (cost=3.71..239593.98 rows=51 width=33) (actual time=134.964..610.641 rows=3286 loops=3)
                                             ->  Nested Loop  (cost=3.29..239532.04 rows=139 width=37) (actual time=134.942..589.868 rows=4792 loops=3)
                                                   ->  Nested Loop  (cost=2.86..239514.48 rows=28 width=25) (actual time=134.830..555.062 rows=3554 loops=3)
                                                         ->  Hash Join  (cost=2.43..239268.23 rows=40 width=4) (actual time=134.781..519.477 rows=3560 loops=3)
                                                               Hash Cond: (mi.info_type_id = it1.id)
                                                               ->  Parallel Seq Scan on movie_info mi  (cost=0.00..239253.38 rows=4567 width=8) (actual time=19.485..518.550 rows=3603 loops=3)
                                                                     Filter: ((note)::text ~~ '%internet%'::text)
                                                                     Rows Removed by Filter: 4941637
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.026..0.027 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.015..0.022 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'release dates'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..6.16 rows=1 width=21) (actual time=0.010..0.010 rows=1 loops=10679)
                                                               Index Cond: (id = mi.movie_id)
                                                               Filter: (production_year > 1990)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.58 rows=5 width=12) (actual time=0.008..0.009 rows=1 loops=10662)
                                                         Index Cond: (movie_id = t.id)
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=14377)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((country_code)::text = '[us]'::text)
                                                   Rows Removed by Filter: 0
                                       ->  Hash  (cost=1.04..1.04 rows=4 width=4) (actual time=0.022..0.022 rows=4 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.015..0.016 rows=4 loops=3)
                                 ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.34 rows=47 width=8) (actual time=0.005..0.005 rows=3 loops=9857)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=25564)
                                 Index Cond: (id = mk.keyword_id)
                                 Heap Fetches: 25564
                     ->  Index Scan using movie_id_aka_title on aka_title at  (cost=0.42..0.48 rows=3 width=25) (actual time=0.001..0.001 rows=0 loops=25564)
                           Index Cond: (movie_id = mk.movie_id)
 Planning Time: 15.057 ms
 Execution Time: 672.943 ms
(46 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3786.91..3786.92 rows=1 width=64) (actual time=269.604..269.604 rows=1 loops=1)
   ->  Nested Loop  (cost=9.45..3786.52 rows=79 width=33) (actual time=17.058..269.523 rows=385 loops=1)
         Join Filter: (n.id = an.person_id)
         ->  Nested Loop  (cost=9.02..3770.95 rows=32 width=25) (actual time=17.025..267.280 rows=323 loops=1)
               ->  Nested Loop  (cost=8.59..3756.39 rows=32 width=21) (actual time=16.990..264.531 rows=323 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=8.03..3752.42 rows=2 width=29) (actual time=16.962..263.090 rows=25 loops=1)
                           ->  Nested Loop  (cost=7.61..3750.19 rows=5 width=33) (actual time=16.760..262.732 rows=54 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.18..3749.59 rows=1 width=25) (actual time=13.993..262.044 rows=146 loops=1)
                                       ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.689..76.327 rows=41840 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.664..11.830 rows=1 loops=1)
                                                   Filter: ((keyword)::text = 'character-name-in-title'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.022..60.165 rows=41840 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=11541
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=3.984..3.984 rows=41840 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.004..0.004 rows=0 loops=41840)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: ((episode_nr >= 50) AND (episode_nr < 100))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.004..0.004 rows=0 loops=146)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.006..0.006 rows=0 loops=54)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.015..0.055 rows=13 loops=25)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=323)
                     Index Cond: (id = ci.person_id)
                     Heap Fetches: 323
         ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.46 rows=2 width=20) (actual time=0.006..0.007 rows=1 loops=323)
               Index Cond: (person_id = ci.person_id)
 Planning Time: 8.373 ms
 Execution Time: 269.856 ms
(38 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=5116.99..5117.00 rows=1 width=64) (actual time=21566.181..21566.181 rows=1 loops=1)
   ->  Nested Loop  (cost=9.45..5102.20 rows=2957 width=33) (actual time=7.294..21014.512 rows=3710592 loops=1)
         Join Filter: (n.id = an.person_id)
         ->  Nested Loop  (cost=9.02..4515.45 rows=1206 width=25) (actual time=7.256..13434.306 rows=2832555 loops=1)
               ->  Nested Loop  (cost=8.59..3966.84 rows=1206 width=21) (actual time=7.223..4737.055 rows=2832555 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=8.03..3845.67 rows=61 width=29) (actual time=6.835..1132.980 rows=68316 loops=1)
                           ->  Nested Loop  (cost=7.61..3769.92 rows=170 width=33) (actual time=6.778..532.597 rows=148552 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.18..3749.42 rows=34 width=25) (actual time=6.726..311.964 rows=41840 loops=1)
                                       ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.708..86.068 rows=41840 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.665..11.769 rows=1 loops=1)
                                                   Filter: ((keyword)::text = 'character-name-in-title'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.040..66.896 rows=41840 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=11541
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=3.969..3.969 rows=41840 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.005..0.005 rows=1 loops=41840)
                                             Index Cond: (id = mk.movie_id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.003..0.004 rows=4 loops=41840)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=148552)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.004..0.046 rows=41 loops=68316)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=2832555)
                     Index Cond: (id = ci.person_id)
                     Heap Fetches: 2832555
         ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.46 rows=2 width=20) (actual time=0.002..0.002 rows=1 loops=2832555)
               Index Cond: (person_id = ci.person_id)
 Planning Time: 8.292 ms
 Execution Time: 21566.428 ms
(36 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4258.35..4258.36 rows=1 width=64) (actual time=1834.595..1834.595 rows=1 loops=1)
   ->  Nested Loop  (cost=9.45..4252.86 rows=1097 width=33) (actual time=7.256..1785.005 rows=319932 loops=1)
         Join Filter: (n.id = an.person_id)
         ->  Nested Loop  (cost=9.02..4034.90 rows=448 width=25) (actual time=7.228..1192.128 rows=221609 loops=1)
               ->  Nested Loop  (cost=8.59..3831.10 rows=448 width=21) (actual time=7.197..557.604 rows=221609 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=8.03..3785.41 rows=23 width=29) (actual time=7.169..276.220 rows=8538 loops=1)
                           ->  Nested Loop  (cost=7.61..3757.34 rows=63 width=33) (actual time=6.781..247.456 rows=11406 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.18..3749.50 rows=13 width=25) (actual time=6.696..222.386 rows=6926 loops=1)
                                       ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.677..68.759 rows=41840 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.662..11.728 rows=1 loops=1)
                                                   Filter: ((keyword)::text = 'character-name-in-title'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.012..52.314 rows=41840 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=11541
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=3.973..3.973 rows=41840 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.003..0.003 rows=0 loops=41840)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: (episode_nr < 100)
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.002..0.003 rows=2 loops=6926)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=11406)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.004..0.029 rows=26 loops=8538)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=221609)
                     Index Cond: (id = ci.person_id)
                     Heap Fetches: 221609
         ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.46 rows=2 width=20) (actual time=0.002..0.002 rows=1 loops=221609)
               Index Cond: (person_id = ci.person_id)
 Planning Time: 8.353 ms
 Execution Time: 1834.855 ms
(38 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4117.25..4117.26 rows=1 width=64) (actual time=1484.760..1484.760 rows=1 loops=1)
   ->  Nested Loop  (cost=9.45..4113.26 rows=798 width=33) (actual time=7.251..1447.165 rows=249455 loops=1)
         Join Filter: (n.id = an.person_id)
         ->  Nested Loop  (cost=9.02..3955.14 rows=325 width=25) (actual time=7.223..982.592 rows=169273 loops=1)
               ->  Nested Loop  (cost=8.59..3807.29 rows=325 width=21) (actual time=7.189..487.797 rows=169273 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=8.03..3775.51 rows=16 width=29) (actual time=7.161..266.332 rows=6766 loops=1)
                           ->  Nested Loop  (cost=7.61..3755.01 rows=46 width=33) (actual time=6.809..244.008 rows=8661 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.18..3749.59 rows=9 width=25) (actual time=6.723..223.854 rows=5385 loops=1)
                                       ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.704..68.841 rows=41840 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.658..11.728 rows=1 loops=1)
                                                   Filter: ((keyword)::text = 'character-name-in-title'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.043..52.524 rows=41840 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=11541
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=3.981..3.981 rows=41840 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.003..0.003 rows=0 loops=41840)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: ((episode_nr >= 5) AND (episode_nr < 100))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.002..0.003 rows=2 loops=5385)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=8661)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.004..0.029 rows=25 loops=6766)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=169273)
                     Index Cond: (id = ci.person_id)
                     Heap Fetches: 169273
         ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.46 rows=2 width=20) (actual time=0.002..0.002 rows=1 loops=169273)
               Index Cond: (person_id = ci.person_id)
 Planning Time: 8.438 ms
 Execution Time: 1485.007 ms
(38 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4518.95..4518.96 rows=1 width=64) (actual time=12797.800..12797.800 rows=1 loops=1)
   ->  Nested Loop  (cost=9.02..4518.46 rows=97 width=15) (actual time=7.330..12763.431 rows=258289 loops=1)
         ->  Nested Loop  (cost=8.59..3966.84 rows=1206 width=4) (actual time=7.262..4489.055 rows=2832555 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=8.03..3845.67 rows=61 width=12) (actual time=6.872..1057.762 rows=68316 loops=1)
                     ->  Nested Loop  (cost=7.61..3769.92 rows=170 width=16) (actual time=6.809..503.926 rows=148552 loops=1)
                           Join Filter: (t.id = mc.movie_id)
                           ->  Nested Loop  (cost=7.18..3749.42 rows=34 width=8) (actual time=6.752..295.130 rows=41840 loops=1)
                                 ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.735..82.370 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.670..11.775 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.061..63.613 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=4.009..4.009 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=41840)
                                       Index Cond: (id = mk.movie_id)
                                       Heap Fetches: 41840
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.003..0.004 rows=4 loops=41840)
                                 Index Cond: (movie_id = mk.movie_id)
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=148552)
                           Index Cond: (id = mc.company_id)
                           Filter: ((country_code)::text = '[us]'::text)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.004..0.044 rows=41 loops=68316)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.003..0.003 rows=0 loops=2832555)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ 'B%'::text)
               Rows Removed by Filter: 1
 Planning Time: 5.324 ms
 Execution Time: 12798.035 ms
(34 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4395.31..4395.32 rows=1 width=64) (actual time=9129.035..9129.036 rows=1 loops=1)
   ->  Nested Loop  (cost=9.02..4395.14 rows=33 width=15) (actual time=13.587..9121.840 rows=52306 loops=1)
         ->  Nested Loop  (cost=8.60..4380.52 rows=33 width=19) (actual time=13.572..8936.330 rows=52306 loops=1)
               ->  Nested Loop  (cost=8.17..4373.10 rows=13 width=27) (actual time=13.547..8877.955 rows=6642 loops=1)
                     ->  Nested Loop  (cost=7.74..4367.22 rows=13 width=23) (actual time=13.526..8836.889 rows=6642 loops=1)
                           ->  Nested Loop  (cost=7.31..3797.31 rows=1246 width=12) (actual time=6.782..3097.927 rows=1038393 loops=1)
                                 ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.757..79.070 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.660..11.647 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.093..60.141 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=4.025..4.025 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.006..0.069 rows=25 loops=41840)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.005..0.005 rows=0 loops=1038393)
                                 Index Cond: (id = ci.person_id)
                                 Filter: ((name)::text ~~ 'Z%'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.45 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=6642)
                           Index Cond: (id = ci.movie_id)
                           Heap Fetches: 6642
               ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.52 rows=5 width=8) (actual time=0.005..0.007 rows=8 loops=6642)
                     Index Cond: (movie_id = ci.movie_id)
         ->  Index Only Scan using company_name_pkey on company_name cn  (cost=0.42..0.44 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=52306)
               Index Cond: (id = mc.company_id)
               Heap Fetches: 52306
 Planning Time: 5.213 ms
 Execution Time: 9129.256 ms
(31 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4368.70..4368.71 rows=1 width=64) (actual time=8776.451..8776.451 rows=1 loops=1)
   ->  Nested Loop  (cost=9.02..4368.69 rows=1 width=15) (actual time=94.460..8776.039 rows=1918 loops=1)
         ->  Nested Loop  (cost=8.59..4368.24 rows=1 width=27) (actual time=94.439..8770.787 rows=1918 loops=1)
               ->  Nested Loop  (cost=8.17..4367.80 rows=1 width=31) (actual time=94.422..8759.849 rows=1918 loops=1)
                     ->  Nested Loop  (cost=7.74..4367.23 rows=1 width=23) (actual time=94.405..8756.206 rows=250 loops=1)
                           ->  Nested Loop  (cost=7.31..3797.31 rows=1246 width=12) (actual time=6.706..3077.956 rows=1038393 loops=1)
                                 ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.679..78.920 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.639..11.622 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.036..59.818 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=3.971..3.971 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.006..0.068 rows=25 loops=41840)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.005..0.005 rows=0 loops=1038393)
                                 Index Cond: (id = ci.person_id)
                                 Filter: ((name)::text ~~ 'X%'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.52 rows=5 width=8) (actual time=0.009..0.013 rows=8 loops=250)
                           Index Cond: (movie_id = ci.movie_id)
               ->  Index Only Scan using company_name_pkey on company_name cn  (cost=0.42..0.44 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=1918)
                     Index Cond: (id = mc.company_id)
                     Heap Fetches: 1918
         ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.45 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1918)
               Index Cond: (id = ci.movie_id)
               Heap Fetches: 1918
 Planning Time: 5.270 ms
 Execution Time: 8776.709 ms
(31 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4368.69..4368.70 rows=1 width=32) (actual time=8970.875..8970.875 rows=1 loops=1)
   ->  Nested Loop  (cost=9.02..4368.69 rows=1 width=15) (actual time=59.148..8968.937 rows=11538 loops=1)
         ->  Nested Loop  (cost=8.59..4368.24 rows=1 width=27) (actual time=59.121..8938.439 rows=11538 loops=1)
               ->  Nested Loop  (cost=8.17..4367.80 rows=1 width=31) (actual time=59.100..8881.593 rows=11538 loops=1)
                     ->  Nested Loop  (cost=7.74..4367.23 rows=1 width=23) (actual time=59.080..8861.338 rows=1972 loops=1)
                           ->  Nested Loop  (cost=7.31..3797.31 rows=1246 width=12) (actual time=6.681..3090.101 rows=1038393 loops=1)
                                 ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.654..79.060 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.661..11.696 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=5.990..60.119 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=3.949..3.949 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.006..0.068 rows=25 loops=41840)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.005..0.005 rows=0 loops=1038393)
                                 Index Cond: (id = ci.person_id)
                                 Filter: ((name)::text ~~ '%Bert%'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.52 rows=5 width=8) (actual time=0.006..0.009 rows=6 loops=1972)
                           Index Cond: (movie_id = ci.movie_id)
               ->  Index Only Scan using company_name_pkey on company_name cn  (cost=0.42..0.44 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=11538)
                     Index Cond: (id = mc.company_id)
                     Heap Fetches: 11538
         ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.45 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=11538)
               Index Cond: (id = ci.movie_id)
               Heap Fetches: 11538
 Planning Time: 5.299 ms
 Execution Time: 8971.098 ms
(31 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4518.46..4518.47 rows=1 width=32) (actual time=12801.980..12801.980 rows=1 loops=1)
   ->  Nested Loop  (cost=9.02..4515.45 rows=1206 width=15) (actual time=7.210..12475.047 rows=2832555 loops=1)
         ->  Nested Loop  (cost=8.59..3966.84 rows=1206 width=4) (actual time=7.177..4528.811 rows=2832555 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=8.03..3845.67 rows=61 width=12) (actual time=6.782..1047.391 rows=68316 loops=1)
                     ->  Nested Loop  (cost=7.61..3769.92 rows=170 width=16) (actual time=6.725..499.495 rows=148552 loops=1)
                           Join Filter: (t.id = mc.movie_id)
                           ->  Nested Loop  (cost=7.18..3749.42 rows=34 width=8) (actual time=6.673..292.303 rows=41840 loops=1)
                                 ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.654..81.692 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.641..11.681 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.010..63.114 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=3.940..3.940 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=41840)
                                       Index Cond: (id = mk.movie_id)
                                       Heap Fetches: 41840
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.003..0.004 rows=4 loops=41840)
                                 Index Cond: (movie_id = mk.movie_id)
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=148552)
                           Index Cond: (id = mc.company_id)
                           Filter: ((country_code)::text = '[us]'::text)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.004..0.044 rows=41 loops=68316)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=19) (actual time=0.003..0.003 rows=1 loops=2832555)
               Index Cond: (id = ci.person_id)
 Planning Time: 5.228 ms
 Execution Time: 12802.209 ms
(32 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4629.56..4629.57 rows=1 width=32) (actual time=12079.724..12079.724 rows=1 loops=1)
   ->  Nested Loop  (cost=9.02..4628.64 rows=368 width=15) (actual time=8.651..11965.962 rows=1113120 loops=1)
         ->  Nested Loop  (cost=8.60..4465.59 rows=368 width=19) (actual time=8.618..10025.094 rows=1113120 loops=1)
               ->  Nested Loop  (cost=8.17..4386.88 rows=138 width=27) (actual time=6.866..9380.477 rows=149494 loops=1)
                     ->  Nested Loop  (cost=7.74..3816.96 rows=1246 width=16) (actual time=6.839..3433.658 rows=1038393 loops=1)
                           Join Filter: (t.id = ci.movie_id)
                           ->  Nested Loop  (cost=7.18..3749.42 rows=34 width=8) (actual time=6.815..292.368 rows=41840 loops=1)
                                 ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.797..81.644 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.667..11.770 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.127..62.427 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=4.088..4.088 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=41840)
                                       Index Cond: (id = mk.movie_id)
                                       Heap Fetches: 41840
                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.006..0.070 rows=25 loops=41840)
                                 Index Cond: (movie_id = mk.movie_id)
                     ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.006..0.006 rows=0 loops=1038393)
                           Index Cond: (id = ci.person_id)
                           Filter: ((name)::text ~~ '%B%'::text)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.52 rows=5 width=8) (actual time=0.002..0.003 rows=7 loops=149494)
                     Index Cond: (movie_id = ci.movie_id)
         ->  Index Only Scan using company_name_pkey on company_name cn  (cost=0.42..0.44 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1113120)
               Index Cond: (id = mc.company_id)
               Heap Fetches: 1113120
 Planning Time: 5.292 ms
 Execution Time: 12079.980 ms
(32 rows)

SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=111123.79..111123.80 rows=1 width=96) (actual time=4607.261..4607.261 rows=1 loops=1)
   ->  Nested Loop  (cost=1006.71..111123.78 rows=1 width=65) (actual time=28.837..4606.944 rows=410 loops=1)
         ->  Gather  (cost=1006.28..111123.32 rows=1 width=60) (actual time=28.807..4606.719 rows=410 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Nested Loop  (cost=6.28..110123.22 rows=1 width=60) (actual time=111.539..4602.788 rows=137 loops=3)
                     ->  Nested Loop  (cost=5.85..108160.12 rows=3320 width=64) (actual time=1.151..4263.166 rows=35780 loops=3)
                           ->  Hash Join  (cost=5.29..74077.91 rows=1448 width=56) (actual time=0.530..1908.133 rows=15144 loops=3)
                                 Hash Cond: (mi.info_type_id = it1.id)
                                 ->  Nested Loop  (cost=2.86..73629.77 rows=163660 width=60) (actual time=0.092..1759.078 rows=2310111 loops=3)
                                       ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=10) (actual time=0.048..116.768 rows=153308 loops=3)
                                             Hash Cond: (mi_idx.info_type_id = it2.id)
                                             ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=14) (actual time=0.019..44.915 rows=460012 loops=3)
                                             ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.013..0.013 rows=1 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=3)
                                                         Filter: ((info)::text = 'votes'::text)
                                                         Rows Removed by Filter: 112
                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..11.05 rows=42 width=50) (actual time=0.003..0.009 rows=15 loops=459925)
                                             Index Cond: (movie_id = mi_idx.movie_id)
                                 ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.024..0.024 rows=1 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.018..0.019 rows=1 loops=3)
                                             Filter: ((info)::text = 'budget'::text)
                                             Rows Removed by Filter: 112
                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..23.52 rows=2 width=8) (actual time=0.091..0.155 rows=2 loops=45431)
                                 Index Cond: (movie_id = mi.movie_id)
                                 Filter: ((note)::text = ANY ('{(producer),"(executive producer)"}'::text[]))
                                 Rows Removed by Filter: 38
                     ->  Index Scan using name_pkey on name n  (cost=0.43..0.59 rows=1 width=4) (actual time=0.009..0.009 rows=0 loops=107339)
                           Index Cond: (id = ci.person_id)
                           Filter: (((name)::text ~~ '%Tim%'::text) AND ((gender)::text = 'm'::text))
                           Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.46 rows=1 width=21) (actual time=0.010..0.010 rows=1 loops=410)
               Index Cond: (id = mi.movie_id)
 Planning Time: 4.943 ms
 Execution Time: 4611.823 ms
(37 rows)

SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=17505.24..17505.25 rows=1 width=96) (actual time=191.114..191.114 rows=1 loops=1)
   ->  Nested Loop  (cost=1004.43..17505.23 rows=1 width=65) (actual time=101.861..191.093 rows=11 loops=1)
         ->  Nested Loop  (cost=1004.00..17504.55 rows=1 width=69) (actual time=34.155..188.085 rows=268 loops=1)
               ->  Gather  (cost=1003.43..17479.79 rows=1 width=77) (actual time=10.980..141.678 rows=358 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Nested Loop  (cost=3.43..16479.69 rows=1 width=77) (actual time=13.924..169.884 rows=119 loops=3)
                           ->  Nested Loop  (cost=3.29..16478.37 rows=8 width=81) (actual time=13.917..169.663 rows=119 loops=3)
                                 ->  Nested Loop  (cost=2.86..15808.49 rows=58 width=31) (actual time=0.830..105.950 rows=2051 loops=3)
                                       ->  Hash Join  (cost=2.43..15182.64 rows=187 width=10) (actual time=0.107..56.410 rows=5283 loops=3)
                                             Hash Cond: (mi_idx.info_type_id = it2.id)
                                             ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..15122.68 rows=21125 width=14) (actual time=0.025..54.346 rows=17543 loops=3)
                                                   Filter: ((info)::text > '8.0'::text)
                                                   Rows Removed by Filter: 442469
                                             ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.026..0.027 rows=1 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.020..0.022 rows=1 loops=3)
                                                         Filter: ((info)::text = 'rating'::text)
                                                         Rows Removed by Filter: 112
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..3.35 rows=1 width=21) (actual time=0.009..0.009 rows=0 loops=15849)
                                             Index Cond: (id = mi_idx.movie_id)
                                             Filter: ((production_year >= 2008) AND (production_year <= 2014))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..11.54 rows=1 width=50) (actual time=0.031..0.031 rows=0 loops=6152)
                                       Index Cond: (movie_id = t.id)
                                       Filter: ((note IS NULL) AND ((info)::text = ANY ('{Horror,Thriller}'::text[])))
                                       Rows Removed by Filter: 18
                           ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=358)
                                 Index Cond: (id = mi.info_type_id)
                                 Filter: ((info)::text = 'genres'::text)
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..24.75 rows=1 width=8) (actual time=0.113..0.146 rows=1 loops=358)
                     Index Cond: (movie_id = t.id)
                     Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                     Rows Removed by Filter: 34
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.68 rows=1 width=4) (actual time=0.011..0.011 rows=0 loops=268)
               Index Cond: (id = ci.person_id)
               Filter: ((gender IS NOT NULL) AND ((gender)::text = 'f'::text))
               Rows Removed by Filter: 1
 Planning Time: 4.861 ms
 Execution Time: 197.265 ms
(40 rows)

SET
                                                                                          QUERY PLAN                                                                                          
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=74638.17..74638.18 rows=1 width=96) (actual time=5850.496..5850.496 rows=1 loops=1)
   ->  Gather  (cost=74637.94..74638.15 rows=2 width=96) (actual time=5849.450..5854.859 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=73637.94..73637.95 rows=1 width=96) (actual time=5847.246..5847.246 rows=1 loops=3)
               ->  Nested Loop  (cost=6.71..73637.87 rows=10 width=65) (actual time=14.456..5843.343 rows=9358 loops=3)
                     ->  Nested Loop  (cost=6.28..73620.90 rows=25 width=69) (actual time=10.027..5694.352 rows=18052 loops=3)
                           ->  Nested Loop  (cost=5.72..73165.64 rows=19 width=77) (actual time=0.594..2016.280 rows=34172 loops=3)
                                 Join Filter: (mi.movie_id = t.id)
                                 ->  Hash Join  (cost=5.29..73154.54 rows=19 width=56) (actual time=0.551..1839.355 rows=34172 loops=3)
                                       Hash Cond: (mi.info_type_id = it1.id)
                                       ->  Nested Loop  (cost=2.86..73146.32 rows=2128 width=60) (actual time=0.462..1830.432 rows=34964 loops=3)
                                             ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=10) (actual time=0.052..117.486 rows=153308 loops=3)
                                                   Hash Cond: (mi_idx.info_type_id = it2.id)
                                                   ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=14) (actual time=0.017..45.490 rows=460012 loops=3)
                                                   ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.019..0.020 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.015..0.016 rows=1 loops=3)
                                                               Filter: ((info)::text = 'votes'::text)
                                                               Rows Removed by Filter: 112
                                             ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..11.37 rows=1 width=50) (actual time=0.011..0.011 rows=0 loops=459925)
                                                   Index Cond: (movie_id = mi_idx.movie_id)
                                                   Filter: ((info)::text = ANY ('{Horror,Action,Sci-Fi,Thriller,Crime,War}'::text[]))
                                                   Rows Removed by Filter: 15
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.032..0.032 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.020..0.027 rows=1 loops=3)
                                                   Filter: ((info)::text = 'genres'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=21) (actual time=0.005..0.005 rows=1 loops=102516)
                                       Index Cond: (id = mi_idx.movie_id)
                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..23.95 rows=1 width=8) (actual time=0.092..0.107 rows=1 loops=102516)
                                 Index Cond: (movie_id = t.id)
                                 Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                 Rows Removed by Filter: 39
                     ->  Index Scan using name_pkey on name n  (cost=0.43..0.68 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=54155)
                           Index Cond: (id = ci.person_id)
                           Filter: ((gender)::text = 'm'::text)
                           Rows Removed by Filter: 0
 Planning Time: 4.838 ms
 Execution Time: 5855.063 ms
(41 rows)

SET
                                                                                                QUERY PLAN                                                                                                 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=85372.10..85372.11 rows=1 width=64) (actual time=277.209..277.209 rows=1 loops=1)
   ->  Nested Loop  (cost=1004.44..85372.09 rows=1 width=32) (actual time=111.537..277.156 rows=184 loops=1)
         ->  Nested Loop  (cost=1004.30..85371.91 rows=1 width=36) (actual time=111.526..276.930 rows=184 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=1003.86..85344.51 rows=1 width=44) (actual time=111.491..270.969 rows=77 loops=1)
                     ->  Nested Loop  (cost=1003.44..85343.31 rows=1 width=48) (actual time=111.465..270.438 rows=79 loops=1)
                           Join Filter: (t.id = mc.movie_id)
                           ->  Nested Loop  (cost=1003.01..85340.60 rows=1 width=40) (actual time=111.284..269.153 rows=102 loops=1)
                                 ->  Gather  (cost=1002.58..85339.18 rows=1 width=44) (actual time=110.734..269.204 rows=115 loops=1)
                                       Workers Planned: 2
                                       Workers Launched: 2
                                       ->  Nested Loop  (cost=2.58..84339.08 rows=1 width=44) (actual time=116.745..270.630 rows=38 loops=3)
                                             ->  Hash Join  (cost=2.15..84336.29 rows=2 width=23) (actual time=107.300..269.197 rows=142 loops=3)
                                                   Hash Cond: (ci.role_id = rt.id)
                                                   ->  Nested Loop  (cost=0.99..84335.05 rows=21 width=27) (actual time=107.197..269.058 rows=142 loops=3)
                                                         Join Filter: (n.id = ci.person_id)
                                                         ->  Nested Loop  (cost=0.42..82155.29 rows=9 width=23) (actual time=104.099..257.870 rows=519 loops=3)
                                                               ->  Parallel Seq Scan on name n  (cost=0.00..81659.82 rows=40 width=19) (actual time=103.625..247.286 rows=2256 loops=3)
                                                                     Filter: (((name)::text ~~ '%Ang%'::text) AND ((gender)::text = 'f'::text))
                                                                     Rows Removed by Filter: 1386908
                                                               ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..12.37 rows=2 width=4) (actual time=0.004..0.004 rows=0 loops=6768)
                                                                     Index Cond: (person_id = n.id)
                                                                     Heap Fetches: 1558
                                                         ->  Index Scan using person_id_cast_info on cast_info ci  (cost=0.56..242.03 rows=13 width=16) (actual time=0.020..0.021 rows=0 loops=1558)
                                                               Index Cond: (person_id = an.person_id)
                                                               Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                               Rows Removed by Filter: 44
                                                   ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.021..0.021 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.013..0.014 rows=1 loops=3)
                                                               Filter: ((role)::text = 'actress'::text)
                                                               Rows Removed by Filter: 11
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..1.40 rows=1 width=21) (actual time=0.010..0.010 rows=0 loops=425)
                                                   Index Cond: (id = ci.movie_id)
                                                   Filter: ((production_year >= 2005) AND (production_year <= 2009))
                                                   Rows Removed by Filter: 1
                                 ->  Index Only Scan using char_name_pkey on char_name chn  (cost=0.43..1.42 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=115)
                                       Index Cond: (id = ci.person_role_id)
                                       Heap Fetches: 102
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.71 rows=1 width=8) (actual time=0.010..0.012 rows=1 loops=102)
                                 Index Cond: (movie_id = ci.movie_id)
                                 Filter: ((note IS NOT NULL) AND (((note)::text ~~ '%(USA)%'::text) OR ((note)::text ~~ '%(worldwide)%'::text)))
                                 Rows Removed by Filter: 6
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.20 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=79)
                           Index Cond: (id = mc.company_id)
                           Filter: ((country_code)::text = '[us]'::text)
                           Rows Removed by Filter: 0
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..27.38 rows=1 width=8) (actual time=0.020..0.077 rows=2 loops=77)
                     Index Cond: (movie_id = ci.movie_id)
                     Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%200%'::text) OR ((info)::text ~~ 'USA:%200%'::text)))
                     Rows Removed by Filter: 166
         ->  Index Scan using info_type_pkey on info_type it  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=184)
               Index Cond: (id = mi.info_type_id)
               Filter: ((info)::text = 'release dates'::text)
 Planning Time: 24.502 ms
 Execution Time: 278.326 ms
(56 rows)

SET
                                                                                                   QUERY PLAN                                                                                                   
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=55721.55..55721.56 rows=1 width=64) (actual time=136.284..136.285 rows=1 loops=1)
   ->  Nested Loop  (cost=1003.41..55721.55 rows=1 width=32) (actual time=119.116..136.270 rows=15 loops=1)
         ->  Nested Loop  (cost=1003.28..55721.37 rows=1 width=36) (actual time=119.096..136.230 rows=15 loops=1)
               Join Filter: (ci.person_id = n.id)
               ->  Nested Loop  (cost=1002.85..55719.84 rows=1 width=29) (actual time=112.112..135.196 rows=275 loops=1)
                     ->  Nested Loop  (cost=1002.70..55719.64 rows=1 width=33) (actual time=112.102..134.859 rows=275 loops=1)
                           Join Filter: (t.id = mi.movie_id)
                           ->  Nested Loop  (cost=1002.27..55692.13 rows=1 width=41) (actual time=112.057..116.326 rows=275 loops=1)
                                 ->  Nested Loop  (cost=1001.85..55690.86 rows=1 width=45) (actual time=112.033..115.785 rows=275 loops=1)
                                       ->  Nested Loop  (cost=1001.42..55689.20 rows=1 width=41) (actual time=111.997..114.859 rows=99 loops=1)
                                             ->  Nested Loop  (cost=1001.00..55687.75 rows=1 width=45) (actual time=111.960..113.830 rows=100 loops=1)
                                                   Join Filter: (t.id = ci.movie_id)
                                                   ->  Gather  (cost=1000.43..55645.55 rows=1 width=29) (actual time=111.898..111.974 rows=4 loops=1)
                                                         Workers Planned: 2
                                                         Workers Launched: 2
                                                         ->  Nested Loop  (cost=0.43..54645.45 rows=1 width=29) (actual time=102.881..109.723 rows=1 loops=3)
                                                               ->  Parallel Seq Scan on title t  (cost=0.00..54433.61 rows=10 width=21) (actual time=47.385..109.637 rows=2 loops=3)
                                                                     Filter: ((production_year >= 2007) AND (production_year <= 2008) AND ((title)::text ~~ '%Kung%Fu%Panda%'::text))
                                                                     Rows Removed by Filter: 842768
                                                               ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..21.17 rows=1 width=8) (actual time=0.033..0.035 rows=1 loops=7)
                                                                     Index Cond: (movie_id = t.id)
                                                                     Filter: (((note)::text ~~ '%(200%)%'::text) AND (((note)::text ~~ '%(USA)%'::text) OR ((note)::text ~~ '%(worldwide)%'::text)))
                                                                     Rows Removed by Filter: 6
                                                   ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..42.20 rows=1 width=16) (actual time=0.017..0.472 rows=25 loops=4)
                                                         Index Cond: (movie_id = mc.movie_id)
                                                         Filter: ((note)::text = '(voice)'::text)
                                                         Rows Removed by Filter: 127
                                             ->  Index Only Scan using char_name_pkey on char_name chn  (cost=0.43..1.45 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=100)
                                                   Index Cond: (id = ci.person_role_id)
                                                   Heap Fetches: 99
                                       ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..1.64 rows=2 width=4) (actual time=0.007..0.009 rows=3 loops=99)
                                             Index Cond: (person_id = ci.person_id)
                                             Heap Fetches: 275
                                 ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.27 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=275)
                                       Index Cond: (id = mc.company_id)
                                       Filter: ((country_code)::text = '[us]'::text)
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..27.50 rows=1 width=8) (actual time=0.010..0.067 rows=1 loops=275)
                                 Index Cond: (movie_id = ci.movie_id)
                                 Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%2007%'::text) OR ((info)::text ~~ 'USA:%2008%'::text)))
                                 Rows Removed by Filter: 295
                     ->  Index Scan using info_type_pkey on info_type it  (cost=0.14..0.17 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=275)
                           Index Cond: (id = mi.info_type_id)
                           Filter: ((info)::text = 'release dates'::text)
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.53 rows=1 width=19) (actual time=0.004..0.004 rows=0 loops=275)
                     Index Cond: (id = an.person_id)
                     Filter: (((name)::text ~~ '%Angel%'::text) AND ((gender)::text = 'f'::text))
                     Rows Removed by Filter: 1
         ->  Index Scan using role_type_pkey on role_type rt  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=15)
               Index Cond: (id = ci.role_id)
               Filter: ((role)::text = 'actress'::text)
 Planning Time: 23.320 ms
 Execution Time: 136.581 ms
(52 rows)

SET
                                                                                                  QUERY PLAN                                                                                                  
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=222418.16..222418.17 rows=1 width=64) (actual time=1742.447..1742.447 rows=1 loops=1)
   ->  Nested Loop  (cost=84856.43..222418.15 rows=2 width=32) (actual time=283.249..1741.833 rows=3575 loops=1)
         Join Filter: (n.id = an.person_id)
         ->  Nested Loop  (cost=84856.00..222416.50 rows=1 width=40) (actual time=269.429..1735.163 rows=2632 loops=1)
               ->  Nested Loop  (cost=84855.58..222414.17 rows=2 width=44) (actual time=269.401..1710.745 rows=8585 loops=1)
                     ->  Hash Join  (cost=84855.15..222411.47 rows=1 width=52) (actual time=269.373..1698.480 rows=2129 loops=1)
                           Hash Cond: (mi.info_type_id = it.id)
                           ->  Nested Loop  (cost=84852.73..222408.95 rows=36 width=56) (actual time=269.322..1697.811 rows=2129 loops=1)
                                 ->  Nested Loop  (cost=84852.29..219906.63 rows=92 width=48) (actual time=269.239..1627.471 rows=3349 loops=1)
                                       ->  Nested Loop  (cost=84851.86..219669.76 rows=170 width=27) (actual time=269.201..1589.618 rows=5686 loops=1)
                                             ->  Hash Join  (cost=84851.43..219172.23 rows=351 width=31) (actual time=269.158..1563.564 rows=6552 loops=1)
                                                   Hash Cond: (ci.person_id = n.id)
                                                   ->  Nested Loop  (cost=0.56..134124.20 rows=75106 width=12) (actual time=0.218..1273.120 rows=276166 loops=1)
                                                         ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.014..0.017 rows=1 loops=1)
                                                               Filter: ((role)::text = 'actress'::text)
                                                               Rows Removed by Filter: 11
                                                         ->  Index Scan using role_id_cast_info on cast_info ci  (cost=0.56..133303.71 rows=81934 width=16) (actual time=0.202..1249.584 rows=276166 loops=1)
                                                               Index Cond: (role_id = rt.id)
                                                               Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                               Rows Removed by Filter: 7175807
                                                   ->  Hash  (cost=84607.42..84607.42 rows=19476 width=19) (actual time=263.674..263.675 rows=50011 loops=1)
                                                         Buckets: 65536 (originally 32768)  Batches: 1 (originally 1)  Memory Usage: 3135kB
                                                         ->  Gather  (cost=1000.00..84607.42 rows=19476 width=19) (actual time=106.494..254.799 rows=50011 loops=1)
                                                               Workers Planned: 2
                                                               Workers Launched: 2
                                                               ->  Parallel Seq Scan on name n  (cost=0.00..81659.82 rows=8115 width=19) (actual time=104.495..249.310 rows=16670 loops=3)
                                                                     Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                                                     Rows Removed by Filter: 1372493
                                             ->  Index Only Scan using char_name_pkey on char_name chn  (cost=0.43..1.42 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=6552)
                                                   Index Cond: (id = ci.person_role_id)
                                                   Heap Fetches: 5686
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..1.39 rows=1 width=21) (actual time=0.006..0.006 rows=1 loops=5686)
                                             Index Cond: (id = ci.movie_id)
                                             Filter: (production_year > 2000)
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..27.19 rows=1 width=8) (actual time=0.014..0.021 rows=1 loops=3349)
                                       Index Cond: (movie_id = t.id)
                                       Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%200%'::text) OR ((info)::text ~~ 'USA:%200%'::text)))
                                       Rows Removed by Filter: 15
                           ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.024..0.024 rows=1 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                 ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.010..0.017 rows=1 loops=1)
                                       Filter: ((info)::text = 'release dates'::text)
                                       Rows Removed by Filter: 112
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.65 rows=5 width=8) (actual time=0.004..0.005 rows=4 loops=2129)
                           Index Cond: (movie_id = t.id)
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.16 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=8585)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text = '[us]'::text)
                     Rows Removed by Filter: 1
         ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..1.63 rows=2 width=4) (actual time=0.002..0.002 rows=1 loops=2632)
               Index Cond: (person_id = ci.person_id)
               Heap Fetches: 3575
 Planning Time: 24.140 ms
 Execution Time: 1742.849 ms
(55 rows)

SET
                                                                                                           QUERY PLAN                                                                                                           
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=283172.99..283173.00 rows=1 width=64) (actual time=7133.062..7133.063 rows=1 loops=1)
   ->  Gather  (cost=283172.77..283172.98 rows=2 width=64) (actual time=6946.410..7137.870 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=282172.77..282172.78 rows=1 width=64) (actual time=6803.594..6803.594 rows=1 loops=3)
               ->  Nested Loop  (cost=135435.02..282167.07 rows=1140 width=32) (actual time=2048.301..6725.462 rows=586882 loops=3)
                     ->  Nested Loop  (cost=135434.60..281402.94 rows=465 width=40) (actual time=2048.282..6134.054 rows=262348 loops=3)
                           ->  Nested Loop  (cost=135434.18..279915.09 rows=1278 width=44) (actual time=2048.265..3880.541 rows=1076352 loops=3)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Hash Join  (cost=135433.75..279235.89 rows=255 width=52) (actual time=2048.191..3318.876 rows=113945 loops=3)
                                       Hash Cond: (mi.info_type_id = it.id)
                                       ->  Nested Loop  (cost=135431.32..279154.95 rows=28832 width=56) (actual time=2048.106..3263.914 rows=540998 loops=3)
                                             ->  Nested Loop  (cost=135430.89..226932.18 rows=1906 width=48) (actual time=2048.081..2835.861 rows=53102 loops=3)
                                                   ->  Nested Loop  (cost=135430.46..221350.20 rows=3938 width=52) (actual time=2048.052..2594.216 rows=56088 loops=3)
                                                         ->  Hash Join  (cost=135430.03..195430.35 rows=17020 width=33) (actual time=2048.021..2373.351 rows=56136 loops=3)
                                                               Hash Cond: (t.id = ci.movie_id)
                                                               ->  Parallel Seq Scan on title t  (cost=0.00..49166.29 rows=572932 width=21) (actual time=0.020..120.710 rows=460484 loops=3)
                                                                     Filter: (production_year > 2000)
                                                                     Rows Removed by Filter: 382286
                                                               ->  Hash  (cost=134124.20..134124.20 rows=75106 width=12) (actual time=2047.189..2047.189 rows=276166 loops=3)
                                                                     Buckets: 131072 (originally 131072)  Batches: 4 (originally 2)  Memory Usage: 3984kB
                                                                     ->  Nested Loop  (cost=0.56..134124.20 rows=75106 width=12) (actual time=0.162..1993.218 rows=276166 loops=3)
                                                                           ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.015..0.018 rows=1 loops=3)
                                                                                 Filter: ((role)::text = 'actress'::text)
                                                                                 Rows Removed by Filter: 11
                                                                           ->  Index Scan using role_id_cast_info on cast_info ci  (cost=0.56..133303.71 rows=81934 width=16) (actual time=0.144..1970.056 rows=276166 loops=3)
                                                                                 Index Cond: (role_id = rt.id)
                                                                                 Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                                 Rows Removed by Filter: 7175807
                                                         ->  Index Scan using name_pkey on name n  (cost=0.43..1.52 rows=1 width=19) (actual time=0.004..0.004 rows=1 loops=168407)
                                                               Index Cond: (id = ci.person_id)
                                                               Filter: ((gender)::text = 'f'::text)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Only Scan using char_name_pkey on char_name chn  (cost=0.43..1.42 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=168264)
                                                         Index Cond: (id = ci.person_role_id)
                                                         Heap Fetches: 159307
                                             ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..26.98 rows=42 width=8) (actual time=0.003..0.007 rows=10 loops=159307)
                                                   Index Cond: (movie_id = t.id)
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.026..0.026 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.015..0.022 rows=1 loops=3)
                                                   Filter: ((info)::text = 'release dates'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.60 rows=5 width=8) (actual time=0.002..0.003 rows=9 loops=341836)
                                       Index Cond: (movie_id = mi.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.16 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=3229056)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..1.62 rows=2 width=4) (actual time=0.001..0.002 rows=2 loops=787043)
                           Index Cond: (person_id = n.id)
                           Heap Fetches: 1760645
 Planning Time: 25.498 ms
 Execution Time: 7138.324 ms
(54 rows)

SET
                                                                                                 QUERY PLAN                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=19539.97..19539.98 rows=1 width=68) (actual time=82.623..82.623 rows=1 loops=1)
   ->  Gather  (cost=19539.75..19539.96 rows=2 width=68) (actual time=78.011..83.784 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=18539.75..18539.76 rows=1 width=68) (actual time=75.260..75.260 rows=1 loops=3)
               ->  Nested Loop  (cost=4.35..18539.42 rows=44 width=45) (actual time=70.412..75.240 rows=47 loops=3)
                     Join Filter: (mc.movie_id = t.id)
                     ->  Hash Join  (cost=3.92..18513.70 rows=44 width=32) (actual time=70.379..74.481 rows=47 loops=3)
                           Hash Cond: (mc.company_type_id = ct.id)
                           ->  Nested Loop  (cost=2.86..18511.69 rows=177 width=36) (actual time=70.307..74.397 rows=49 loops=3)
                                 ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=4) (actual time=70.234..70.264 rows=83 loops=3)
                                       Hash Cond: (mi_idx.info_type_id = it.id)
                                       ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=8) (actual time=0.017..38.114 rows=460012 loops=3)
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.022..0.023 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.020..0.020 rows=1 loops=3)
                                                   Filter: ((info)::text = 'top 250 rank'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.63 rows=1 width=32) (actual time=0.048..0.049 rows=1 loops=250)
                                       Index Cond: (movie_id = mi_idx.movie_id)
                                       Filter: (((note)::text !~~ '%(as Metro-Goldwyn-Mayer Pictures)%'::text) AND (((note)::text ~~ '%(co-production)%'::text) OR ((note)::text ~~ '%(presents)%'::text)))
                                       Rows Removed by Filter: 33
                           ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.019..0.019 rows=1 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                 ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.014..0.015 rows=1 loops=3)
                                       Filter: ((kind)::text = 'production companies'::text)
                                       Rows Removed by Filter: 3
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=25) (actual time=0.016..0.016 rows=1 loops=142)
                           Index Cond: (id = mi_idx.movie_id)
 Planning Time: 2.392 ms
 Execution Time: 83.937 ms
(31 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=20131.19..20131.20 rows=1 width=68) (actual time=73.245..73.245 rows=1 loops=1)
   ->  Gather  (cost=20130.96..20131.17 rows=2 width=68) (actual time=72.627..74.017 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=19130.96..19130.97 rows=1 width=68) (actual time=70.393..70.393 rows=1 loops=3)
               ->  Hash Join  (cost=4.35..19124.19 rows=903 width=45) (actual time=70.386..70.387 rows=1 loops=3)
                     Hash Cond: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=3.29..19103.60 rows=3612 width=49) (actual time=70.234..70.315 rows=22 loops=3)
                           Join Filter: (t.id = mc.movie_id)
                           ->  Nested Loop  (cost=2.86..18189.65 rows=1422 width=29) (actual time=70.216..70.244 rows=1 loops=3)
                                 ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=4) (actual time=70.132..70.134 rows=3 loops=3)
                                       Hash Cond: (mi_idx.info_type_id = it.id)
                                       ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=8) (actual time=0.019..37.861 rows=460012 loops=3)
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.023..0.023 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.020..0.020 rows=1 loops=3)
                                                   Filter: ((info)::text = 'bottom 10 rank'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.58 rows=1 width=25) (actual time=0.032..0.032 rows=0 loops=10)
                                       Index Cond: (id = mi_idx.movie_id)
                                       Filter: ((production_year >= 2005) AND (production_year <= 2010))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.61 rows=3 width=32) (actual time=0.034..0.050 rows=16 loops=4)
                                 Index Cond: (movie_id = mi_idx.movie_id)
                                 Filter: ((note)::text !~~ '%(as Metro-Goldwyn-Mayer Pictures)%'::text)
                                 Rows Removed by Filter: 2
                     ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.018..0.018 rows=1 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.013..0.014 rows=1 loops=3)
                                 Filter: ((kind)::text = 'production companies'::text)
                                 Rows Removed by Filter: 3
 Planning Time: 1.846 ms
 Execution Time: 74.166 ms
(33 rows)

SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=19461.56..19461.57 rows=1 width=68) (actual time=77.781..77.781 rows=1 loops=1)
   ->  Gather  (cost=19461.33..19461.54 rows=2 width=68) (actual time=77.772..77.842 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=18461.33..18461.34 rows=1 width=68) (actual time=72.800..72.800 rows=1 loops=3)
               ->  Nested Loop  (cost=4.35..18461.31 rows=3 width=45) (actual time=71.833..72.795 rows=1 loops=3)
                     Join Filter: (mc.movie_id = t.id)
                     ->  Hash Join  (cost=3.92..18449.57 rows=20 width=32) (actual time=70.761..72.744 rows=8 loops=3)
                           Hash Cond: (mc.company_type_id = ct.id)
                           ->  Nested Loop  (cost=2.86..18448.07 rows=81 width=36) (actual time=70.688..72.669 rows=8 loops=3)
                                 ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=4) (actual time=69.906..69.934 rows=83 loops=3)
                                       Hash Cond: (mi_idx.info_type_id = it.id)
                                       ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=8) (actual time=0.022..37.712 rows=460012 loops=3)
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.022..0.022 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.019..0.019 rows=1 loops=3)
                                                   Filter: ((info)::text = 'top 250 rank'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.62 rows=1 width=32) (actual time=0.032..0.033 rows=0 loops=250)
                                       Index Cond: (movie_id = mi_idx.movie_id)
                                       Filter: (((note)::text !~~ '%(as Metro-Goldwyn-Mayer Pictures)%'::text) AND ((note)::text ~~ '%(co-production)%'::text))
                                       Rows Removed by Filter: 33
                           ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.016..0.016 rows=1 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                 ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.012..0.012 rows=1 loops=3)
                                       Filter: ((kind)::text = 'production companies'::text)
                                       Rows Removed by Filter: 3
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=25) (actual time=0.006..0.006 rows=0 loops=23)
                           Index Cond: (id = mi_idx.movie_id)
                           Filter: (production_year > 2010)
                           Rows Removed by Filter: 1
 Planning Time: 1.823 ms
 Execution Time: 77.992 ms
(33 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=20988.46..20988.47 rows=1 width=68) (actual time=72.790..72.790 rows=1 loops=1)
   ->  Gather  (cost=20988.24..20988.45 rows=2 width=68) (actual time=72.333..73.604 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=19988.24..19988.25 rows=1 width=68) (actual time=70.171..70.171 rows=1 loops=3)
               ->  Hash Join  (cost=4.35..19975.05 rows=1758 width=45) (actual time=70.153..70.166 rows=1 loops=3)
                     Hash Cond: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=3.29..19935.98 rows=7030 width=49) (actual time=70.014..70.097 rows=26 loops=3)
                           ->  Nested Loop  (cost=2.86..18176.93 rows=2768 width=29) (actual time=69.993..70.023 rows=2 loops=3)
                                 ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=4) (actual time=69.972..69.974 rows=3 loops=3)
                                       Hash Cond: (mi_idx.info_type_id = it.id)
                                       ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=8) (actual time=0.022..37.797 rows=460012 loops=3)
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.023..0.023 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.021..0.021 rows=1 loops=3)
                                                   Filter: ((info)::text = 'bottom 10 rank'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=25) (actual time=0.014..0.014 rows=1 loops=10)
                                       Index Cond: (id = mi_idx.movie_id)
                                       Filter: (production_year > 2000)
                                       Rows Removed by Filter: 0
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.61 rows=3 width=32) (actual time=0.025..0.035 rows=13 loops=6)
                                 Index Cond: (movie_id = t.id)
                                 Filter: ((note)::text !~~ '%(as Metro-Goldwyn-Mayer Pictures)%'::text)
                                 Rows Removed by Filter: 2
                     ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.016..0.016 rows=1 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.012..0.012 rows=1 loops=3)
                                 Filter: ((kind)::text = 'production companies'::text)
                                 Rows Removed by Filter: 3
 Planning Time: 1.792 ms
 Execution Time: 73.762 ms
(32 rows)

SET
                                                                                             QUERY PLAN                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=12310.45..12310.46 rows=1 width=32) (actual time=3428.844..3428.844 rows=1 loops=1)
   ->  Nested Loop  (cost=9.02..12310.44 rows=1 width=17) (actual time=48.649..3428.805 rows=33 loops=1)
         ->  Nested Loop  (cost=8.59..12309.99 rows=1 width=21) (actual time=48.622..3428.415 rows=33 loops=1)
               ->  Nested Loop  (cost=8.16..12304.93 rows=11 width=25) (actual time=5.086..2043.715 rows=532809 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=7.60..12298.97 rows=3 width=29) (actual time=5.050..483.075 rows=6016 loops=1)
                           Join Filter: (t.kind_id = kt.id)
                           Rows Removed by Join Filter: 1347
                           ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.017..0.018 rows=1 loops=1)
                                 Filter: ((kind)::text = 'movie'::text)
                                 Rows Removed by Filter: 6
                           ->  Nested Loop  (cost=7.60..12297.62 rows=21 width=33) (actual time=1.071..481.446 rows=7363 loops=1)
                                 ->  Nested Loop  (cost=7.17..12286.40 rows=23 width=8) (actual time=1.043..417.788 rows=8765 loops=1)
                                       Join Filter: (cc.status_id = cct2.id)
                                       Rows Removed by Join Filter: 8765
                                       ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.012..0.013 rows=2 loops=1)
                                             Filter: ((kind)::text ~~ '%complete%'::text)
                                             Rows Removed by Filter: 2
                                       ->  Nested Loop  (cost=7.17..12284.17 rows=94 width=12) (actual time=0.858..207.384 rows=8765 loops=2)
                                             Join Filter: (cc.subject_id = cct1.id)
                                             Rows Removed by Join Filter: 4045
                                             ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.003 rows=1 loops=2)
                                                   Filter: ((kind)::text = 'cast'::text)
                                                   Rows Removed by Filter: 3
                                             ->  Nested Loop  (cost=7.17..12278.42 rows=376 width=16) (actual time=0.856..205.402 rows=12810 loops=2)
                                                   ->  Nested Loop  (cost=6.75..12149.91 rows=270 width=4) (actual time=0.621..132.132 rows=35548 loops=2)
                                                         ->  Seq Scan on keyword k  (cost=0.00..3632.40 rows=8 width=4) (actual time=0.114..30.389 rows=8 loops=2)
                                                               Filter: ((keyword)::text = ANY ('{superhero,sequel,second-part,marvel-comics,based-on-comic,tv-special,fight,violence}'::text[]))
                                                               Rows Removed by Filter: 134162
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1061.70 rows=299 width=8) (actual time=1.087..12.203 rows=4444 loops=16)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=46976
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.602..0.602 rows=4444 loops=16)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.002..0.002 rows=0 loops=71096)
                                                         Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.007..0.007 rows=1 loops=8765)
                                       Index Cond: (id = mk.movie_id)
                                       Filter: (production_year > 1950)
                                       Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.010..0.244 rows=89 loops=6016)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=532809)
                     Index Cond: (id = ci.person_role_id)
                     Filter: (((name)::text !~~ '%Sherlock%'::text) AND (((name)::text ~~ '%Tony%Stark%'::text) OR ((name)::text ~~ '%Iron%Man%'::text)))
                     Rows Removed by Filter: 0
         ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.011..0.011 rows=1 loops=33)
               Index Cond: (id = ci.person_id)
               Heap Fetches: 33
 Planning Time: 15.818 ms
 Execution Time: 3429.058 ms
(51 rows)

SET
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=12304.81..12304.82 rows=1 width=32) (actual time=2652.660..2652.660 rows=1 loops=1)
   ->  Nested Loop  (cost=9.02..12304.81 rows=1 width=17) (actual time=59.482..2652.630 rows=17 loops=1)
         ->  Nested Loop  (cost=8.59..12304.35 rows=1 width=21) (actual time=59.467..2652.315 rows=27 loops=1)
               ->  Nested Loop  (cost=8.16..12301.15 rows=7 width=25) (actual time=7.807..1317.116 rows=222518 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=7.60..12297.17 rows=2 width=29) (actual time=7.766..645.283 rows=1472 loops=1)
                           Join Filter: (cc.status_id = cct2.id)
                           Rows Removed by Join Filter: 1472
                           ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.011..0.012 rows=2 loops=1)
                                 Filter: ((kind)::text ~~ '%complete%'::text)
                                 Rows Removed by Filter: 2
                           ->  Nested Loop  (cost=7.60..12296.04 rows=7 width=33) (actual time=5.784..322.301 rows=1472 loops=2)
                                 Join Filter: (cc.subject_id = cct1.id)
                                 Rows Removed by Join Filter: 243
                                 ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=2)
                                       Filter: ((kind)::text = 'cast'::text)
                                       Rows Removed by Filter: 3
                                 ->  Nested Loop  (cost=7.60..12294.62 rows=29 width=37) (actual time=5.781..321.883 rows=1715 loops=2)
                                       ->  Nested Loop  (cost=7.18..12284.58 rows=21 width=25) (actual time=5.689..305.094 rows=6043 loops=2)
                                             Join Filter: (t.kind_id = kt.id)
                                             Rows Removed by Join Filter: 8122
                                             ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=2)
                                                   Filter: ((kind)::text = 'movie'::text)
                                                   Rows Removed by Filter: 6
                                             ->  Nested Loop  (cost=7.18..12281.66 rows=147 width=29) (actual time=0.624..303.301 rows=14165 loops=2)
                                                   ->  Nested Loop  (cost=6.75..12149.91 rows=270 width=4) (actual time=0.608..129.976 rows=35548 loops=2)
                                                         ->  Seq Scan on keyword k  (cost=0.00..3632.40 rows=8 width=4) (actual time=0.113..30.424 rows=8 loops=2)
                                                               Filter: ((keyword)::text = ANY ('{superhero,sequel,second-part,marvel-comics,based-on-comic,tv-special,fight,violence}'::text[]))
                                                               Rows Removed by Filter: 134162
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1061.70 rows=299 width=8) (actual time=1.080..11.950 rows=4444 loops=16)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=46976
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.596..0.596 rows=4444 loops=16)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.005..0.005 rows=0 loops=71096)
                                                         Index Cond: (id = mk.movie_id)
                                                         Filter: (production_year > 2000)
                                                         Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.002..0.002 rows=0 loops=12086)
                                             Index Cond: (movie_id = t.id)
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.012..0.425 rows=151 loops=1472)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=4) (actual time=0.006..0.006 rows=0 loops=222518)
                     Index Cond: (id = ci.person_id)
                     Filter: ((name)::text ~~ '%Downey%Robert%'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=4) (actual time=0.011..0.011 rows=1 loops=27)
               Index Cond: (id = ci.person_role_id)
               Filter: (((name)::text !~~ '%Sherlock%'::text) AND (((name)::text ~~ '%Tony%Stark%'::text) OR ((name)::text ~~ '%Iron%Man%'::text)))
               Rows Removed by Filter: 0
 Planning Time: 16.053 ms
 Execution Time: 2652.850 ms
(52 rows)

SET
                                                                                             QUERY PLAN                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=14665.13..14665.14 rows=1 width=64) (actual time=1497.273..1497.274 rows=1 loops=1)
   ->  Nested Loop  (cost=9.02..14665.12 rows=1 width=32) (actual time=7.781..1495.880 rows=5406 loops=1)
         ->  Nested Loop  (cost=8.59..14664.67 rows=1 width=21) (actual time=7.755..1452.552 rows=5406 loops=1)
               ->  Nested Loop  (cost=8.16..14661.01 rows=8 width=25) (actual time=7.460..1028.465 rows=189844 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=7.60..14657.03 rows=2 width=29) (actual time=7.418..494.676 rows=1267 loops=1)
                           Join Filter: (cc.status_id = cct2.id)
                           Rows Removed by Join Filter: 1267
                           ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.012..0.013 rows=2 loops=1)
                                 Filter: ((kind)::text ~~ '%complete%'::text)
                                 Rows Removed by Filter: 2
                           ->  Nested Loop  (cost=7.60..14655.87 rows=9 width=33) (actual time=5.576..247.071 rows=1267 loops=2)
                                 Join Filter: (cc.subject_id = cct1.id)
                                 Rows Removed by Join Filter: 218
                                 ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=2)
                                       Filter: ((kind)::text = 'cast'::text)
                                       Rows Removed by Filter: 3
                                 ->  Nested Loop  (cost=7.60..14654.36 rows=37 width=37) (actual time=5.573..246.709 rows=1485 loops=2)
                                       ->  Nested Loop  (cost=7.18..14641.93 rows=26 width=25) (actual time=5.494..233.080 rows=5032 loops=2)
                                             Join Filter: (t.kind_id = kt.id)
                                             Rows Removed by Join Filter: 5581
                                             ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.001..0.003 rows=1 loops=2)
                                                   Filter: ((kind)::text = 'movie'::text)
                                                   Rows Removed by Filter: 6
                                             ->  Nested Loop  (cost=7.18..14638.55 rows=183 width=29) (actual time=0.656..231.694 rows=10613 loops=2)
                                                   ->  Nested Loop  (cost=6.75..14474.11 rows=337 width=4) (actual time=0.639..109.304 rows=24091 loops=2)
                                                         ->  Seq Scan on keyword k  (cost=0.00..3967.82 rows=10 width=4) (actual time=0.136..36.665 rows=10 loops=2)
                                                               Filter: ((keyword)::text = ANY ('{superhero,marvel-comics,based-on-comic,tv-special,fight,violence,magnet,web,claw,laser}'::text[]))
                                                               Rows Removed by Filter: 134160
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1047.64 rows=299 width=8) (actual time=0.645..6.983 rows=2409 loops=20)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=34254
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.361..0.361 rows=2409 loops=20)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.005..0.005 rows=0 loops=48182)
                                                         Index Cond: (id = mk.movie_id)
                                                         Filter: (production_year > 2000)
                                                         Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.002..0.002 rows=0 loops=10064)
                                             Index Cond: (movie_id = t.id)
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.012..0.396 rows=150 loops=1267)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=189844)
                     Index Cond: (id = ci.person_role_id)
                     Filter: ((name IS NOT NULL) AND (((name)::text ~~ '%man%'::text) OR ((name)::text ~~ '%Man%'::text)))
                     Rows Removed by Filter: 0
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=19) (actual time=0.008..0.008 rows=1 loops=5406)
               Index Cond: (id = ci.person_id)
 Planning Time: 16.271 ms
 Execution Time: 1497.461 ms
(50 rows)

SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3753.11..3753.12 rows=1 width=96) (actual time=104.609..104.609 rows=1 loops=1)
   ->  Nested Loop  (cost=8.75..3753.10 rows=1 width=118) (actual time=3.829..104.278 rows=1410 loops=1)
         Join Filter: (ml.movie_id = t.id)
         ->  Nested Loop  (cost=8.32..3752.60 rows=1 width=117) (actual time=3.809..101.222 rows=1816 loops=1)
               Join Filter: (ml.movie_id = mi.movie_id)
               ->  Nested Loop  (cost=7.89..3750.82 rows=1 width=113) (actual time=3.765..96.235 rows=402 loops=1)
                     Join Filter: (mc.company_type_id = ct.id)
                     Rows Removed by Join Filter: 20
                     ->  Nested Loop  (cost=7.89..3749.75 rows=1 width=117) (actual time=3.754..95.764 rows=422 loops=1)
                           ->  Nested Loop  (cost=7.47..3749.30 rows=1 width=102) (actual time=3.368..93.304 rows=1021 loops=1)
                                 Join Filter: (ml.movie_id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.04..3748.73 rows=1 width=90) (actual time=3.338..92.121 rows=199 loops=1)
                                       Join Filter: (ml.link_type_id = lt.id)
                                       Rows Removed by Join Filter: 303
                                       ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.014..0.018 rows=2 loops=1)
                                             Filter: ((link)::text ~~ '%follow%'::text)
                                             Rows Removed by Filter: 16
                                       ->  Nested Loop  (cost=7.04..3747.37 rows=11 width=12) (actual time=2.998..46.023 rows=251 loops=2)
                                             ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=2.992..36.405 rows=10544 loops=2)
                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.680..10.614 rows=1 loops=2)
                                                         Filter: ((keyword)::text = 'sequel'::text)
                                                         Rows Removed by Filter: 134169
                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=2.293..24.757 rows=10544 loops=2)
                                                         Recheck Cond: (keyword_id = k.id)
                                                         Heap Blocks: exact=11140
                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.382..1.382 rows=10544 loops=2)
                                                               Index Cond: (keyword_id = k.id)
                                             ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.001..0.001 rows=0 loops=21088)
                                                   Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=2 width=12) (actual time=0.004..0.005 rows=5 loops=199)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: (note IS NULL)
                                       Rows Removed by Filter: 2
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=1021)
                                 Index Cond: (id = mc.company_id)
                                 Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                                 Rows Removed by Filter: 1
                     ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=422)
                           Filter: ((kind)::text = 'production companies'::text)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.77 rows=1 width=4) (actual time=0.009..0.012 rows=5 loops=402)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German}'::text[]))
                     Rows Removed by Filter: 16
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.001..0.001 rows=1 loops=1816)
               Index Cond: (id = mk.movie_id)
               Filter: ((production_year >= 1950) AND (production_year <= 2000))
               Rows Removed by Filter: 0
 Planning Time: 15.272 ms
 Execution Time: 104.796 ms
(50 rows)

SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3752.79..3752.80 rows=1 width=96) (actual time=69.261..69.262 rows=1 loops=1)
   ->  Nested Loop  (cost=8.75..3752.79 rows=1 width=118) (actual time=3.446..69.239 rows=38 loops=1)
         Join Filter: (ml.movie_id = t.id)
         ->  Nested Loop  (cost=8.32..3752.28 rows=1 width=117) (actual time=3.081..68.688 rows=308 loops=1)
               Join Filter: (ml.movie_id = mi.movie_id)
               ->  Nested Loop  (cost=7.89..3750.82 rows=1 width=113) (actual time=3.066..65.343 rows=402 loops=1)
                     Join Filter: (mc.company_type_id = ct.id)
                     Rows Removed by Join Filter: 20
                     ->  Nested Loop  (cost=7.89..3749.75 rows=1 width=117) (actual time=3.059..64.893 rows=422 loops=1)
                           ->  Nested Loop  (cost=7.47..3749.30 rows=1 width=102) (actual time=2.877..62.873 rows=1021 loops=1)
                                 Join Filter: (ml.movie_id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.04..3748.73 rows=1 width=90) (actual time=2.865..61.968 rows=199 loops=1)
                                       Join Filter: (ml.link_type_id = lt.id)
                                       Rows Removed by Join Filter: 303
                                       ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.005..0.009 rows=2 loops=1)
                                             Filter: ((link)::text ~~ '%follow%'::text)
                                             Rows Removed by Filter: 16
                                       ->  Nested Loop  (cost=7.04..3747.37 rows=11 width=12) (actual time=2.744..30.951 rows=251 loops=2)
                                             ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=2.738..21.774 rows=10544 loops=2)
                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.578..9.955 rows=1 loops=2)
                                                         Filter: ((keyword)::text = 'sequel'::text)
                                                         Rows Removed by Filter: 134169
                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=2.145..10.844 rows=10544 loops=2)
                                                         Recheck Cond: (keyword_id = k.id)
                                                         Heap Blocks: exact=11140
                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.239..1.239 rows=10544 loops=2)
                                                               Index Cond: (keyword_id = k.id)
                                             ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.001..0.001 rows=0 loops=21088)
                                                   Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=2 width=12) (actual time=0.003..0.004 rows=5 loops=199)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: (note IS NULL)
                                       Rows Removed by Filter: 2
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=1021)
                                 Index Cond: (id = mc.company_id)
                                 Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                                 Rows Removed by Filter: 1
                     ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=422)
                           Filter: ((kind)::text = 'production companies'::text)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.45 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=402)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Germany,German}'::text[]))
                     Rows Removed by Filter: 20
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.002..0.002 rows=0 loops=308)
               Index Cond: (id = mk.movie_id)
               Filter: ((production_year >= 2000) AND (production_year <= 2010))
               Rows Removed by Filter: 1
 Planning Time: 14.515 ms
 Execution Time: 69.445 ms
(50 rows)

SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3753.19..3753.20 rows=1 width=96) (actual time=72.131..72.131 rows=1 loops=1)
   ->  Nested Loop  (cost=8.75..3753.18 rows=1 width=118) (actual time=3.023..71.726 rows=1874 loops=1)
         Join Filter: (ml.movie_id = t.id)
         ->  Nested Loop  (cost=8.32..3752.68 rows=1 width=117) (actual time=3.016..68.572 rows=1874 loops=1)
               Join Filter: (ml.movie_id = mi.movie_id)
               ->  Nested Loop  (cost=7.89..3750.82 rows=1 width=113) (actual time=3.002..63.882 rows=402 loops=1)
                     Join Filter: (mc.company_type_id = ct.id)
                     Rows Removed by Join Filter: 20
                     ->  Nested Loop  (cost=7.89..3749.75 rows=1 width=117) (actual time=2.996..63.426 rows=422 loops=1)
                           ->  Nested Loop  (cost=7.47..3749.30 rows=1 width=102) (actual time=2.829..61.418 rows=1021 loops=1)
                                 Join Filter: (ml.movie_id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.04..3748.73 rows=1 width=90) (actual time=2.817..60.544 rows=199 loops=1)
                                       Join Filter: (ml.link_type_id = lt.id)
                                       Rows Removed by Join Filter: 303
                                       ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.005..0.009 rows=2 loops=1)
                                             Filter: ((link)::text ~~ '%follow%'::text)
                                             Rows Removed by Filter: 16
                                       ->  Nested Loop  (cost=7.04..3747.37 rows=11 width=12) (actual time=2.720..30.241 rows=251 loops=2)
                                             ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=2.714..21.123 rows=10544 loops=2)
                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.565..10.025 rows=1 loops=2)
                                                         Filter: ((keyword)::text = 'sequel'::text)
                                                         Rows Removed by Filter: 134169
                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=2.135..10.117 rows=10544 loops=2)
                                                         Recheck Cond: (keyword_id = k.id)
                                                         Heap Blocks: exact=11140
                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.220..1.220 rows=10544 loops=2)
                                                               Index Cond: (keyword_id = k.id)
                                             ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.001..0.001 rows=0 loops=21088)
                                                   Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=2 width=12) (actual time=0.002..0.004 rows=5 loops=199)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: (note IS NULL)
                                       Rows Removed by Filter: 2
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=1021)
                                 Index Cond: (id = mc.company_id)
                                 Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                                 Rows Removed by Filter: 1
                     ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=422)
                           Filter: ((kind)::text = 'production companies'::text)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.82 rows=3 width=4) (actual time=0.008..0.011 rows=5 loops=402)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,English}'::text[]))
                     Rows Removed by Filter: 16
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.001..0.001 rows=1 loops=1874)
               Index Cond: (id = mk.movie_id)
               Filter: ((production_year >= 1950) AND (production_year <= 2010))
 Planning Time: 14.506 ms
 Execution Time: 72.334 ms
(49 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7386.84..7386.85 rows=1 width=96) (actual time=547.796..547.797 rows=1 loops=1)
   ->  Nested Loop  (cost=8.89..7386.83 rows=1 width=42) (actual time=14.795..547.014 rows=2851 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         Rows Removed by Join Filter: 191
         ->  Nested Loop  (cost=8.89..7384.41 rows=1 width=46) (actual time=14.790..537.572 rows=3042 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=8.46..7382.82 rows=1 width=58) (actual time=6.551..395.578 rows=2958 loops=1)
                     Join Filter: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=8.46..7381.73 rows=1 width=62) (actual time=6.544..392.761 rows=2958 loops=1)
                           ->  Nested Loop  (cost=8.04..7381.19 rows=1 width=47) (actual time=6.528..379.385 rows=3374 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.61..7380.61 rows=1 width=35) (actual time=6.499..342.978 rows=2378 loops=1)
                                       Join Filter: (mi_idx.info_type_id = it2.id)
                                       Rows Removed by Join Filter: 6322
                                       ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.013..0.014 rows=1 loops=1)
                                             Filter: ((info)::text = 'rating'::text)
                                             Rows Removed by Filter: 112
                                       ->  Nested Loop  (cost=7.61..7377.88 rows=25 width=39) (actual time=4.430..342.084 rows=8700 loops=1)
                                             Join Filter: (t.id = mi_idx.movie_id)
                                             ->  Nested Loop  (cost=7.18..7372.53 rows=10 width=25) (actual time=4.407..312.141 rows=4832 loops=1)
                                                   Join Filter: (t.kind_id = kt.id)
                                                   Rows Removed by Join Filter: 2286
                                                   ->  Nested Loop  (cost=7.18..7370.44 rows=35 width=29) (actual time=4.387..310.273 rows=5606 loops=1)
                                                         ->  Nested Loop  (cost=6.75..7304.56 rows=135 width=4) (actual time=4.313..136.081 rows=37091 loops=1)
                                                               ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=0.958..20.775 rows=3 loops=1)
                                                                     Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                     Rows Removed by Filter: 134167
                                                               ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1082.76 rows=299 width=8) (actual time=3.383..36.988 rows=12364 loops=3)
                                                                     Recheck Cond: (keyword_id = k.id)
                                                                     Heap Blocks: exact=26312
                                                                     ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.844..1.844 rows=12364 loops=3)
                                                                           Index Cond: (keyword_id = k.id)
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.004..0.004 rows=0 loops=37091)
                                                               Index Cond: (id = mk.movie_id)
                                                               Filter: (production_year > 2008)
                                                               Rows Removed by Filter: 1
                                                   ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=5606)
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.013..0.015 rows=2 loops=1)
                                                               Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                               Rows Removed by Filter: 5
                                             ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=14) (actual time=0.005..0.006 rows=2 loops=4832)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((info)::text < '7.0'::text)
                                                   Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.013..0.015 rows=1 loops=2378)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                                       Rows Removed by Filter: 10
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.004..0.004 rows=1 loops=3374)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text <> '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.000..0.000 rows=1 loops=2958)
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.56 rows=2 width=8) (actual time=0.043..0.048 rows=1 loops=2958)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Germany,German,USA,American}'::text[]))
                     Rows Removed by Filter: 155
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=3042)
               Filter: ((info)::text = 'countries'::text)
               Rows Removed by Filter: 14
 Planning Time: 37.455 ms
 Execution Time: 548.004 ms
(62 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7385.52..7385.53 rows=1 width=96) (actual time=367.183..367.183 rows=1 loops=1)
   ->  Nested Loop  (cost=8.89..7385.51 rows=1 width=42) (actual time=18.230..367.152 rows=31 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         Rows Removed by Join Filter: 3
         ->  Nested Loop  (cost=8.89..7383.09 rows=1 width=46) (actual time=18.225..367.013 rows=34 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=8.46..7381.50 rows=1 width=58) (actual time=18.135..363.710 rows=50 loops=1)
                     Join Filter: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=8.46..7380.41 rows=1 width=62) (actual time=18.129..363.613 rows=50 loops=1)
                           ->  Nested Loop  (cost=8.04..7379.87 rows=1 width=47) (actual time=18.114..362.996 rows=78 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.61..7379.29 rows=1 width=35) (actual time=8.078..338.611 rows=1615 loops=1)
                                       Join Filter: (mi_idx.info_type_id = it2.id)
                                       Rows Removed by Join Filter: 4362
                                       ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=1)
                                             Filter: ((info)::text = 'rating'::text)
                                             Rows Removed by Filter: 112
                                       ->  Nested Loop  (cost=7.61..7376.61 rows=21 width=39) (actual time=4.581..337.992 rows=5977 loops=1)
                                             Join Filter: (t.id = mi_idx.movie_id)
                                             ->  Nested Loop  (cost=7.18..7372.33 rows=8 width=25) (actual time=4.559..315.889 rows=3517 loops=1)
                                                   Join Filter: (t.kind_id = kt.id)
                                                   Rows Removed by Join Filter: 1618
                                                   ->  Nested Loop  (cost=7.18..7370.44 rows=28 width=29) (actual time=4.543..314.501 rows=4040 loops=1)
                                                         ->  Nested Loop  (cost=6.75..7304.56 rows=135 width=4) (actual time=4.473..144.219 rows=37091 loops=1)
                                                               ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.133..20.963 rows=3 loops=1)
                                                                     Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                     Rows Removed by Filter: 134167
                                                               ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1082.76 rows=299 width=8) (actual time=3.374..39.537 rows=12364 loops=3)
                                                                     Recheck Cond: (keyword_id = k.id)
                                                                     Heap Blocks: exact=26312
                                                                     ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.849..1.849 rows=12364 loops=3)
                                                                           Index Cond: (keyword_id = k.id)
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.004..0.004 rows=0 loops=37091)
                                                               Index Cond: (id = mk.movie_id)
                                                               Filter: (production_year > 2009)
                                                               Rows Removed by Filter: 1
                                                   ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=4040)
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.010..0.012 rows=2 loops=1)
                                                               Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                               Rows Removed by Filter: 5
                                             ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=14) (actual time=0.005..0.006 rows=2 loops=3517)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((info)::text < '7.0'::text)
                                                   Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.015..0.015 rows=0 loops=1615)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                                       Rows Removed by Filter: 12
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.007..0.007 rows=1 loops=78)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text <> '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.001..0.001 rows=1 loops=50)
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.56 rows=2 width=8) (actual time=0.061..0.065 rows=1 loops=50)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Germany,German,USA,American}'::text[]))
                     Rows Removed by Filter: 53
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=34)
               Filter: ((info)::text = 'countries'::text)
               Rows Removed by Filter: 16
 Planning Time: 38.095 ms
 Execution Time: 367.446 ms
(62 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7390.61..7390.62 rows=1 width=96) (actual time=2365.754..2365.754 rows=1 loops=1)
   ->  Nested Loop  (cost=8.89..7390.60 rows=1 width=42) (actual time=6.186..2360.217 rows=21489 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         Rows Removed by Join Filter: 3123
         ->  Nested Loop  (cost=8.89..7388.18 rows=1 width=46) (actual time=6.181..2274.502 rows=24612 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=8.46..7386.28 rows=1 width=58) (actual time=6.117..551.198 rows=23425 loops=1)
                     Join Filter: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=8.46..7385.19 rows=1 width=62) (actual time=6.104..529.688 rows=23425 loops=1)
                           ->  Nested Loop  (cost=8.04..7384.64 rows=1 width=47) (actual time=6.091..459.059 rows=25316 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.61..7384.06 rows=1 width=35) (actual time=4.657..371.521 rows=5949 loops=1)
                                       Join Filter: (mi_idx.info_type_id = it2.id)
                                       Rows Removed by Join Filter: 11839
                                       ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.013..0.014 rows=1 loops=1)
                                             Filter: ((info)::text = 'rating'::text)
                                             Rows Removed by Filter: 112
                                       ->  Nested Loop  (cost=7.61..7381.10 rows=44 width=39) (actual time=4.640..369.619 rows=17788 loops=1)
                                             Join Filter: (t.id = mi_idx.movie_id)
                                             ->  Nested Loop  (cost=7.18..7373.07 rows=15 width=25) (actual time=4.617..321.380 rows=8073 loops=1)
                                                   Join Filter: (t.kind_id = kt.id)
                                                   Rows Removed by Join Filter: 4332
                                                   ->  Nested Loop  (cost=7.18..7370.44 rows=54 width=29) (actual time=4.549..317.996 rows=9739 loops=1)
                                                         ->  Nested Loop  (cost=6.75..7304.56 rows=135 width=4) (actual time=4.523..141.200 rows=37091 loops=1)
                                                               ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.170..20.876 rows=3 loops=1)
                                                                     Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                     Rows Removed by Filter: 134167
                                                               ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1082.76 rows=299 width=8) (actual time=3.387..38.655 rows=12364 loops=3)
                                                                     Recheck Cond: (keyword_id = k.id)
                                                                     Heap Blocks: exact=26312
                                                                     ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.860..1.860 rows=12364 loops=3)
                                                                           Index Cond: (keyword_id = k.id)
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.004..0.004 rows=0 loops=37091)
                                                               Index Cond: (id = mk.movie_id)
                                                               Filter: (production_year > 2005)
                                                               Rows Removed by Filter: 1
                                                   ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=9739)
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.011..0.013 rows=2 loops=1)
                                                               Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                               Rows Removed by Filter: 5
                                             ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=14) (actual time=0.005..0.005 rows=2 loops=8073)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((info)::text < '8.5'::text)
                                                   Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.009..0.014 rows=4 loops=5949)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                                       Rows Removed by Filter: 8
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=25316)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text <> '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.000..0.000 rows=1 loops=23425)
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.061..0.073 rows=1 loops=23425)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                     Rows Removed by Filter: 180
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=24612)
               Filter: ((info)::text = 'countries'::text)
               Rows Removed by Filter: 20
 Planning Time: 38.475 ms
 Execution Time: 2365.983 ms
(62 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7390.53..7390.54 rows=1 width=96) (actual time=1038.716..1038.717 rows=1 loops=1)
   ->  Nested Loop  (cost=8.89..7390.53 rows=1 width=42) (actual time=6.312..1028.560 rows=46281 loops=1)
         Join Filter: (mc.company_type_id = ct.id)
         Rows Removed by Join Filter: 4783
         ->  Nested Loop  (cost=8.89..7389.44 rows=1 width=46) (actual time=6.299..991.082 rows=46281 loops=1)
               ->  Nested Loop  (cost=8.47..7388.99 rows=1 width=31) (actual time=4.652..829.822 rows=64848 loops=1)
                     Join Filter: (t.id = mc.movie_id)
                     ->  Nested Loop  (cost=8.04..7388.39 rows=1 width=39) (actual time=4.638..772.190 rows=4115 loops=1)
                           Join Filter: (mi.info_type_id = it1.id)
                           Rows Removed by Join Filter: 594
                           ->  Nested Loop  (cost=8.04..7385.96 rows=1 width=43) (actual time=4.633..754.893 rows=4709 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=7.61..7384.06 rows=1 width=35) (actual time=4.587..364.306 rows=5949 loops=1)
                                       Join Filter: (mi_idx.info_type_id = it2.id)
                                       Rows Removed by Join Filter: 11839
                                       ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=1)
                                             Filter: ((info)::text = 'rating'::text)
                                             Rows Removed by Filter: 112
                                       ->  Nested Loop  (cost=7.61..7381.10 rows=44 width=39) (actual time=4.571..362.397 rows=17788 loops=1)
                                             Join Filter: (t.id = mi_idx.movie_id)
                                             ->  Nested Loop  (cost=7.18..7373.07 rows=15 width=25) (actual time=4.556..315.242 rows=8073 loops=1)
                                                   Join Filter: (t.kind_id = kt.id)
                                                   Rows Removed by Join Filter: 4332
                                                   ->  Nested Loop  (cost=7.18..7370.44 rows=54 width=29) (actual time=4.504..311.924 rows=9739 loops=1)
                                                         ->  Nested Loop  (cost=6.75..7304.56 rows=135 width=4) (actual time=4.485..138.023 rows=37091 loops=1)
                                                               ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.146..20.864 rows=3 loops=1)
                                                                     Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                     Rows Removed by Filter: 134167
                                                               ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1082.76 rows=299 width=8) (actual time=3.380..37.687 rows=12364 loops=3)
                                                                     Recheck Cond: (keyword_id = k.id)
                                                                     Heap Blocks: exact=26312
                                                                     ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.847..1.847 rows=12364 loops=3)
                                                                           Index Cond: (keyword_id = k.id)
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.004..0.004 rows=0 loops=37091)
                                                               Index Cond: (id = mk.movie_id)
                                                               Filter: (production_year > 2005)
                                                               Rows Removed by Filter: 1
                                                   ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=9739)
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.010..0.011 rows=2 loops=1)
                                                               Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                               Rows Removed by Filter: 5
                                             ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=14) (actual time=0.005..0.005 rows=2 loops=8073)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((info)::text < '8.5'::text)
                                                   Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.056..0.065 rows=1 loops=5949)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                                       Rows Removed by Filter: 71
                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=4709)
                                 Filter: ((info)::text = 'countries'::text)
                                 Rows Removed by Filter: 20
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=12) (actual time=0.006..0.011 rows=16 loops=4115)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=64848)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text <> '[us]'::text)
                     Rows Removed by Filter: 0
         ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.000..0.000 rows=1 loops=46281)
 Planning Time: 39.748 ms
 Execution Time: 1038.952 ms
(61 rows)

SET
                                                                                                    QUERY PLAN                                                                                                    
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=57942.47..57942.48 rows=1 width=64) (actual time=258.879..258.880 rows=1 loops=1)
   ->  Nested Loop  (cost=4238.90..57942.46 rows=1 width=65) (actual time=253.917..258.763 rows=618 loops=1)
         ->  Nested Loop  (cost=4238.48..57942.02 rows=1 width=69) (actual time=253.886..256.699 rows=618 loops=1)
               ->  Nested Loop  (cost=4238.35..57941.87 rows=1 width=73) (actual time=253.855..256.091 rows=618 loops=1)
                     ->  Nested Loop  (cost=4237.93..57941.42 rows=1 width=77) (actual time=253.835..255.133 rows=618 loops=1)
                           Join Filter: (t.id = mc.movie_id)
                           ->  Nested Loop  (cost=4237.50..57940.82 rows=1 width=85) (actual time=253.810..254.037 rows=615 loops=1)
                                 ->  Gather  (cost=4237.06..57938.99 rows=1 width=77) (actual time=253.778..253.863 rows=5 loops=1)
                                       Workers Planned: 2
                                       Workers Launched: 2
                                       ->  Nested Loop  (cost=3237.06..56938.89 rows=1 width=77) (actual time=234.511..251.308 rows=2 loops=3)
                                             ->  Nested Loop  (cost=3236.92..56938.62 rows=1 width=81) (actual time=234.489..251.284 rows=2 loops=3)
                                                   ->  Hash Join  (cost=3236.49..54660.05 rows=1093 width=73) (actual time=132.144..188.235 rows=344 loops=3)
                                                         Hash Cond: (t.kind_id = kt.id)
                                                         ->  Hash Join  (cost=3235.39..54626.70 rows=7653 width=29) (actual time=29.314..188.027 rows=694 loops=3)
                                                               Hash Cond: (t.id = cc.movie_id)
                                                               ->  Parallel Seq Scan on title t  (cost=0.00..49166.29 rows=572932 width=25) (actual time=0.018..112.457 rows=460484 loops=3)
                                                                     Filter: (production_year > 2000)
                                                                     Rows Removed by Filter: 382286
                                                               ->  Hash  (cost=2813.24..2813.24 rows=33772 width=4) (actual time=28.703..28.703 rows=24592 loops=3)
                                                                     Buckets: 65536  Batches: 1  Memory Usage: 1377kB
                                                                     ->  Hash Join  (cost=1.06..2813.24 rows=33772 width=4) (actual time=0.039..25.388 rows=24592 loops=3)
                                                                           Hash Cond: (cc.status_id = cct1.id)
                                                                           ->  Seq Scan on complete_cast cc  (cost=0.00..2081.86 rows=135086 width=8) (actual time=0.014..12.791 rows=135086 loops=3)
                                                                           ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=3)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=3)
                                                                                       Filter: ((kind)::text = 'complete+verified'::text)
                                                                                       Rows Removed by Filter: 3
                                                         ->  Hash  (cost=1.09..1.09 rows=1 width=52) (actual time=0.021..0.021 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=52) (actual time=0.015..0.017 rows=1 loops=3)
                                                                     Filter: ((kind)::text = 'movie'::text)
                                                                     Rows Removed by Filter: 6
                                                   ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.07 rows=1 width=8) (actual time=0.183..0.183 rows=0 loops=1033)
                                                         Index Cond: (movie_id = t.id)
                                                         Filter: ((info IS NOT NULL) AND ((note)::text ~~ '%internet%'::text) AND (((info)::text ~~ 'USA:% 199%'::text) OR ((info)::text ~~ 'USA:% 200%'::text)))
                                                         Rows Removed by Filter: 211
                                             ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.20 rows=1 width=4) (actual time=0.013..0.013 rows=1 loops=5)
                                                   Index Cond: (id = mi.info_type_id)
                                                   Filter: ((info)::text = 'release dates'::text)
                                 ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.36 rows=47 width=8) (actual time=0.012..0.034 rows=123 loops=5)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=12) (actual time=0.001..0.001 rows=1 loops=615)
                                 Index Cond: (movie_id = mk.movie_id)
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=618)
                           Index Cond: (id = mc.company_id)
                           Filter: ((country_code)::text = '[us]'::text)
               ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=618)
                     Index Cond: (id = mc.company_type_id)
                     Heap Fetches: 618
         ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=618)
               Index Cond: (id = mk.keyword_id)
               Heap Fetches: 618
 Planning Time: 37.352 ms
 Execution Time: 259.245 ms
(56 rows)

SET
                                                                                              QUERY PLAN                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7387.30..7387.31 rows=1 width=64) (actual time=76.391..76.392 rows=1 loops=1)
   ->  Nested Loop  (cost=8.88..7387.29 rows=1 width=65) (actual time=20.811..76.375 rows=16 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         ->  Nested Loop  (cost=8.88..7384.87 rows=1 width=69) (actual time=20.804..76.314 rows=16 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=8.45..7383.30 rows=1 width=81) (actual time=4.064..56.601 rows=315 loops=1)
                     Join Filter: (mc.company_type_id = ct.id)
                     Rows Removed by Join Filter: 140
                     ->  Nested Loop  (cost=8.45..7382.21 rows=1 width=85) (actual time=4.055..56.251 rows=315 loops=1)
                           ->  Nested Loop  (cost=8.03..7380.87 rows=3 width=89) (actual time=3.988..50.497 rows=1218 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.60..7378.46 rows=4 width=77) (actual time=3.960..48.847 rows=60 loops=1)
                                       Join Filter: (cc.status_id = cct1.id)
                                       Rows Removed by Join Filter: 81
                                       ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=1)
                                             Filter: ((kind)::text = 'complete+verified'::text)
                                             Rows Removed by Filter: 3
                                       ->  Nested Loop  (cost=7.60..7377.22 rows=15 width=81) (actual time=3.936..48.810 rows=141 loops=1)
                                             ->  Nested Loop  (cost=7.18..7372.44 rows=10 width=73) (actual time=3.714..46.411 rows=401 loops=1)
                                                   Join Filter: (t.kind_id = kt.id)
                                                   Rows Removed by Join Filter: 156
                                                   ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=52) (actual time=0.007..0.008 rows=1 loops=1)
                                                         Filter: ((kind)::text = 'movie'::text)
                                                         Rows Removed by Filter: 6
                                                   ->  Nested Loop  (cost=7.18..7370.44 rows=73 width=29) (actual time=0.916..46.312 rows=557 loops=1)
                                                         ->  Nested Loop  (cost=6.75..7304.56 rows=135 width=4) (actual time=0.894..31.660 rows=1133 loops=1)
                                                               ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=0.682..23.353 rows=4 loops=1)
                                                                     Filter: ((keyword)::text = ANY ('{nerd,loner,alienation,dignity}'::text[]))
                                                                     Rows Removed by Filter: 134166
                                                               ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1082.76 rows=299 width=8) (actual time=0.101..2.039 rows=283 loops=4)
                                                                     Recheck Cond: (keyword_id = k.id)
                                                                     Heap Blocks: exact=1083
                                                                     ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.058..0.058 rows=283 loops=4)
                                                                           Index Cond: (keyword_id = k.id)
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.013..0.013 rows=0 loops=1133)
                                                               Index Cond: (id = mk.movie_id)
                                                               Filter: (production_year > 2000)
                                                               Rows Removed by Filter: 1
                                             ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=8) (actual time=0.005..0.006 rows=0 loops=401)
                                                   Index Cond: (movie_id = t.id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=12) (actual time=0.014..0.023 rows=20 loops=60)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=1218)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.000..0.000 rows=1 loops=315)
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.56 rows=1 width=8) (actual time=0.062..0.062 rows=0 loops=315)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: (((note)::text ~~ '%internet%'::text) AND ((info)::text ~~ 'USA:% 200%'::text))
                     Rows Removed by Filter: 268
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=16)
               Filter: ((info)::text = 'release dates'::text)
               Rows Removed by Filter: 15
 Planning Time: 37.317 ms
 Execution Time: 76.612 ms
(56 rows)

SET
                                                                                                       QUERY PLAN                                                                                                       
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=67112.66..67112.67 rows=1 width=64) (actual time=358.238..358.238 rows=1 loops=1)
   ->  Gather  (cost=67112.44..67112.65 rows=2 width=64) (actual time=358.025..364.395 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=66112.44..66112.45 rows=1 width=64) (actual time=355.170..355.170 rows=1 loops=3)
               ->  Nested Loop  (cost=3238.95..66112.43 rows=2 width=65) (actual time=290.035..355.126 rows=209 loops=3)
                     ->  Nested Loop  (cost=3238.53..66111.55 rows=2 width=69) (actual time=290.015..354.383 rows=209 loops=3)
                           ->  Nested Loop  (cost=3238.10..66109.74 rows=1 width=81) (actual time=289.987..354.285 rows=2 loops=3)
                                 ->  Nested Loop  (cost=3237.97..66109.58 rows=1 width=85) (actual time=289.966..354.260 rows=2 loops=3)
                                       ->  Nested Loop  (cost=3237.55..66109.14 rows=1 width=89) (actual time=289.940..354.217 rows=2 loops=3)
                                             ->  Nested Loop  (cost=3237.12..66108.51 rows=1 width=77) (actual time=289.912..354.179 rows=2 loops=3)
                                                   ->  Nested Loop  (cost=3236.98..66107.43 rows=5 width=81) (actual time=289.897..354.159 rows=2 loops=3)
                                                         ->  Hash Join  (cost=3236.54..55258.37 rows=5532 width=73) (actual time=134.877..203.239 rows=1684 loops=3)
                                                               Hash Cond: (t.kind_id = kt.id)
                                                               ->  Hash Join  (cost=3235.39..55216.42 rows=9681 width=29) (actual time=28.845..202.687 rows=2141 loops=3)
                                                                     Hash Cond: (t.id = cc.movie_id)
                                                                     ->  Parallel Seq Scan on title t  (cost=0.00..49166.29 rows=724782 width=25) (actual time=0.023..114.794 rows=583011 loops=3)
                                                                           Filter: (production_year > 1990)
                                                                           Rows Removed by Filter: 259760
                                                                     ->  Hash  (cost=2813.24..2813.24 rows=33772 width=4) (actual time=28.330..28.330 rows=24592 loops=3)
                                                                           Buckets: 65536  Batches: 1  Memory Usage: 1377kB
                                                                           ->  Hash Join  (cost=1.06..2813.24 rows=33772 width=4) (actual time=0.033..25.040 rows=24592 loops=3)
                                                                                 Hash Cond: (cc.status_id = cct1.id)
                                                                                 ->  Seq Scan on complete_cast cc  (cost=0.00..2081.86 rows=135086 width=8) (actual time=0.011..12.464 rows=135086 loops=3)
                                                                                 ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=3)
                                                                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                       ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=3)
                                                                                             Filter: ((kind)::text = 'complete+verified'::text)
                                                                                             Rows Removed by Filter: 3
                                                               ->  Hash  (cost=1.10..1.10 rows=4 width=52) (actual time=0.022..0.022 rows=4 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on kind_type kt  (cost=0.00..1.10 rows=4 width=52) (actual time=0.012..0.014 rows=4 loops=3)
                                                                           Filter: ((kind)::text = ANY ('{movie,"tv movie","video movie","video game"}'::text[]))
                                                                           Rows Removed by Filter: 3
                                                         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.95 rows=1 width=8) (actual time=0.089..0.089 rows=0 loops=5053)
                                                               Index Cond: (movie_id = t.id)
                                                               Filter: ((info IS NOT NULL) AND ((note)::text ~~ '%internet%'::text) AND (((info)::text ~~ 'USA:% 199%'::text) OR ((info)::text ~~ 'USA:% 200%'::text)))
                                                               Rows Removed by Filter: 123
                                                   ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.20 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=6)
                                                         Index Cond: (id = mi.info_type_id)
                                                         Filter: ((info)::text = 'release dates'::text)
                                             ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.58 rows=5 width=12) (actual time=0.017..0.018 rows=1 loops=6)
                                                   Index Cond: (movie_id = t.id)
                                       ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.017..0.017 rows=1 loops=7)
                                             Index Cond: (id = mc.company_id)
                                             Filter: ((country_code)::text = '[us]'::text)
                                 ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=7)
                                       Index Cond: (id = mc.company_type_id)
                                       Heap Fetches: 7
                           ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.34 rows=47 width=8) (actual time=0.016..0.031 rows=90 loops=7)
                                 Index Cond: (movie_id = t.id)
                     ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=628)
                           Index Cond: (id = mk.keyword_id)
                           Heap Fetches: 628
 Planning Time: 36.134 ms
 Execution Time: 364.716 ms
(56 rows)

SET
                                                                                                  QUERY PLAN                                                                                                  
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=6625.30..6625.31 rows=1 width=96) (actual time=439.948..439.948 rows=1 loops=1)
   ->  Nested Loop  (cost=10.31..6625.29 rows=1 width=48) (actual time=81.841..439.858 rows=275 loops=1)
         ->  Nested Loop  (cost=9.88..6623.49 rows=1 width=41) (actual time=2.263..426.425 rows=6518 loops=1)
               Join Filter: (it.id = mi.info_type_id)
               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.008..0.015 rows=1 loops=1)
                     Filter: ((info)::text = 'release dates'::text)
                     Rows Removed by Filter: 112
               ->  Nested Loop  (cost=9.88..6621.07 rows=1 width=45) (actual time=2.253..425.484 rows=6518 loops=1)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=9.45..6555.77 rows=2 width=57) (actual time=2.206..352.722 rows=4044 loops=1)
                           ->  Nested Loop  (cost=9.02..6553.68 rows=1 width=53) (actual time=2.175..346.192 rows=1578 loops=1)
                                 ->  Nested Loop  (cost=8.59..6551.98 rows=1 width=41) (actual time=2.139..339.806 rows=1608 loops=1)
                                       Join Filter: (rt.id = ci.role_id)
                                       Rows Removed by Join Filter: 5708
                                       ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.011..0.013 rows=1 loops=1)
                                             Filter: ((role)::text = 'actress'::text)
                                             Rows Removed by Filter: 11
                                       ->  Nested Loop  (cost=8.59..6550.80 rows=2 width=45) (actual time=2.106..339.171 rows=7316 loops=1)
                                             Join Filter: (t.id = ci.movie_id)
                                             ->  Nested Loop  (cost=8.03..6311.77 rows=6 width=29) (actual time=1.213..155.308 rows=1576 loops=1)
                                                   ->  Nested Loop  (cost=7.61..6286.76 rows=17 width=33) (actual time=1.192..133.451 rows=5566 loops=1)
                                                         Join Filter: (t.id = mc.movie_id)
                                                         ->  Nested Loop  (cost=7.18..6231.61 rows=16 width=25) (actual time=1.171..125.271 rows=495 loops=1)
                                                               ->  Nested Loop  (cost=6.75..6072.14 rows=101 width=4) (actual time=1.002..58.446 rows=9696 loops=1)
                                                                     ->  Seq Scan on keyword k  (cost=0.00..2793.84 rows=3 width=4) (actual time=0.016..18.715 rows=3 loops=1)
                                                                           Filter: ((keyword)::text = ANY ('{hero,martial-arts,hand-to-hand-combat}'::text[]))
                                                                           Rows Removed by Filter: 134167
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1089.78 rows=299 width=8) (actual time=0.934..12.827 rows=3232 loops=3)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=7446
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.543..0.543 rows=3232 loops=3)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using title_pkey on title t  (cost=0.43..1.58 rows=1 width=21) (actual time=0.007..0.007 rows=0 loops=9696)
                                                                     Index Cond: (id = mk.movie_id)
                                                                     Filter: (production_year > 2010)
                                                                     Rows Removed by Filter: 1
                                                         ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..3.38 rows=5 width=8) (actual time=0.009..0.014 rows=11 loops=495)
                                                               Index Cond: (movie_id = mk.movie_id)
                                                   ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.47 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=5566)
                                                         Index Cond: (id = mc.company_id)
                                                         Filter: ((country_code)::text = '[us]'::text)
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..39.83 rows=1 width=16) (actual time=0.078..0.116 rows=5 loops=1576)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                   Rows Removed by Filter: 136
                                 ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..1.70 rows=1 width=20) (actual time=0.004..0.004 rows=1 loops=1608)
                                       Index Cond: (id = ci.person_role_id)
                           ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.08 rows=2 width=4) (actual time=0.003..0.004 rows=3 loops=1578)
                                 Index Cond: (person_id = ci.person_id)
                                 Heap Fetches: 4044
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..32.63 rows=1 width=8) (actual time=0.004..0.018 rows=2 loops=4044)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%201%'::text) OR ((info)::text ~~ 'USA:%201%'::text)))
                           Rows Removed by Filter: 57
         ->  Index Scan using name_pkey on name n  (cost=0.43..1.80 rows=1 width=19) (actual time=0.002..0.002 rows=0 loops=6518)
               Index Cond: (id = ci.person_id)
               Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
               Rows Removed by Filter: 1
 Planning Time: 81.804 ms
 Execution Time: 440.197 ms
(61 rows)

SET
                                                                                                            QUERY PLAN                                                                                                            
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=6509.33..6509.34 rows=1 width=96) (actual time=27.620..27.621 rows=1 loops=1)
   ->  Nested Loop  (cost=1004.27..6509.32 rows=1 width=48) (actual time=10.549..27.599 rows=45 loops=1)
         ->  Nested Loop  (cost=1003.84..6507.62 rows=1 width=36) (actual time=10.531..27.511 rows=45 loops=1)
               Join Filter: (n.id = an.person_id)
               ->  Nested Loop  (cost=1003.42..6505.51 rows=1 width=44) (actual time=10.507..27.443 rows=9 loops=1)
                     ->  Nested Loop  (cost=1003.28..6505.34 rows=1 width=48) (actual time=10.484..27.410 rows=9 loops=1)
                           ->  Nested Loop  (cost=1002.86..6503.54 rows=1 width=29) (actual time=9.814..26.136 rows=244 loops=1)
                                 Join Filter: (t.id = ci.movie_id)
                                 ->  Nested Loop  (cost=1002.29..6463.70 rows=1 width=33) (actual time=9.778..24.875 rows=9 loops=1)
                                       ->  Nested Loop  (cost=1002.15..6463.52 rows=1 width=37) (actual time=9.770..24.852 rows=9 loops=1)
                                             Join Filter: (t.id = mi.movie_id)
                                             ->  Gather  (cost=1001.71..6430.87 rows=1 width=29) (actual time=8.700..25.820 rows=6 loops=1)
                                                   Workers Planned: 1
                                                   Workers Launched: 1
                                                   ->  Nested Loop  (cost=1.71..5430.77 rows=1 width=29) (actual time=16.269..24.149 rows=3 loops=2)
                                                         ->  Nested Loop  (cost=1.29..5428.89 rows=1 width=33) (actual time=16.220..23.785 rows=42 loops=2)
                                                               Join Filter: (t.id = mk.movie_id)
                                                               ->  Nested Loop  (cost=0.86..5425.84 rows=1 width=25) (actual time=16.204..23.731 rows=2 loops=2)
                                                                     ->  Nested Loop  (cost=0.43..5416.18 rows=6 width=4) (actual time=16.007..23.068 rows=50 loops=2)
                                                                           ->  Parallel Seq Scan on company_name cn  (cost=0.00..5068.50 rows=1 width=4) (actual time=15.987..22.781 rows=0 loops=2)
                                                                                 Filter: (((country_code)::text = '[us]'::text) AND ((name)::text = 'DreamWorks Animation'::text))
                                                                                 Rows Removed by Filter: 117498
                                                                           ->  Index Scan using company_id_movie_companies on movie_companies mc  (cost=0.43..346.37 rows=130 width=8) (actual time=0.036..0.558 rows=99 loops=1)
                                                                                 Index Cond: (company_id = cn.id)
                                                                     ->  Index Scan using title_pkey on title t  (cost=0.43..1.60 rows=1 width=21) (actual time=0.013..0.013 rows=0 loops=99)
                                                                           Index Cond: (id = mc.movie_id)
                                                                           Filter: ((production_year > 2010) AND ((title)::text ~~ 'Kung Fu Panda%'::text))
                                                                           Rows Removed by Filter: 1
                                                               ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..2.47 rows=47 width=8) (actual time=0.016..0.022 rows=21 loops=4)
                                                                     Index Cond: (movie_id = mc.movie_id)
                                                         ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..1.46 rows=1 width=4) (actual time=0.009..0.009 rows=0 loops=83)
                                                               Index Cond: (id = mk.keyword_id)
                                                               Filter: ((keyword)::text = ANY ('{hero,martial-arts,hand-to-hand-combat,computer-animated-movie}'::text[]))
                                                               Rows Removed by Filter: 1
                                             ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..32.63 rows=1 width=8) (actual time=0.028..0.054 rows=2 loops=6)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%201%'::text) OR ((info)::text ~~ 'USA:%201%'::text)))
                                                   Rows Removed by Filter: 89
                                       ->  Index Scan using info_type_pkey on info_type it  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=9)
                                             Index Cond: (id = mi.info_type_id)
                                             Filter: ((info)::text = 'release dates'::text)
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..39.83 rows=1 width=16) (actual time=0.010..0.136 rows=27 loops=9)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                       Rows Removed by Filter: 91
                           ->  Index Scan using name_pkey on name n  (cost=0.43..1.80 rows=1 width=19) (actual time=0.005..0.005 rows=0 loops=244)
                                 Index Cond: (id = ci.person_id)
                                 Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                 Rows Removed by Filter: 1
                     ->  Index Scan using role_type_pkey on role_type rt  (cost=0.14..0.16 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=9)
                           Index Cond: (id = ci.role_id)
                           Filter: ((role)::text = 'actress'::text)
               ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.08 rows=2 width=4) (actual time=0.004..0.006 rows=5 loops=9)
                     Index Cond: (person_id = ci.person_id)
                     Heap Fetches: 45
         ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..1.70 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=45)
               Index Cond: (id = ci.person_role_id)
 Planning Time: 79.982 ms
 Execution Time: 29.216 ms
(59 rows)

SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7497.91..7497.92 rows=1 width=128) (actual time=2621.747..2621.747 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.02..7497.90 rows=1 width=80) (actual time=24.190..2619.403 rows=4407 loops=1)
         Join Filter: (mi.movie_id = t.id)
         ->  Nested Loop  (cost=1011.59..7497.08 rows=1 width=79) (actual time=24.156..2585.885 rows=4407 loops=1)
               ->  Nested Loop  (cost=1011.16..7496.06 rows=1 width=68) (actual time=12.296..2514.824 rows=7112 loops=1)
                     ->  Nested Loop  (cost=1011.02..7495.88 rows=1 width=72) (actual time=12.288..2502.343 rows=7740 loops=1)
                           Join Filter: (mi.movie_id = ci.movie_id)
                           ->  Gather  (cost=1010.46..7466.93 rows=1 width=64) (actual time=6.211..628.352 rows=12260 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Nested Loop  (cost=10.46..6466.83 rows=1 width=64) (actual time=6.031..842.307 rows=4087 loops=3)
                                       Join Filter: (mi_idx.movie_id = mi.movie_id)
                                       ->  Hash Join  (cost=10.02..6431.17 rows=2 width=14) (actual time=4.608..193.358 rows=16920 loops=3)
                                             Hash Cond: (mi_idx.info_type_id = it2.id)
                                             ->  Nested Loop  (cost=7.60..6428.17 rows=211 width=18) (actual time=4.522..185.457 rows=50907 loops=3)
                                                   ->  Nested Loop  (cost=7.17..6372.12 rows=70 width=4) (actual time=4.478..93.325 rows=20699 loops=3)
                                                         ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4207.64 rows=2 width=4) (actual time=0.219..18.981 rows=2 loops=3)
                                                               Filter: ((keyword)::text = ANY ('{murder,blood,gore,death,female-nudity}'::text[]))
                                                               Rows Removed by Filter: 44722
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1079.25 rows=299 width=8) (actual time=3.452..43.089 rows=12419 loops=5)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=12389
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=2.000..2.000 rows=12419 loops=5)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.77 rows=3 width=14) (actual time=0.004..0.004 rows=2 loops=62096)
                                                         Index Cond: (movie_id = mk.movie_id)
                                             ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.029..0.029 rows=1 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.023..0.025 rows=1 loops=3)
                                                         Filter: ((info)::text = 'votes'::text)
                                                         Rows Removed by Filter: 112
                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..17.82 rows=1 width=50) (actual time=0.038..0.038 rows=0 loops=50760)
                                             Index Cond: (movie_id = mk.movie_id)
                                             Filter: ((info)::text = 'Horror'::text)
                                             Rows Removed by Filter: 56
                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..28.93 rows=1 width=8) (actual time=0.125..0.152 rows=1 loops=12260)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                 Rows Removed by Filter: 47
                     ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=7740)
                           Index Cond: (id = mi.info_type_id)
                           Filter: ((info)::text = 'genres'::text)
                           Rows Removed by Filter: 0
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.02 rows=1 width=19) (actual time=0.010..0.010 rows=1 loops=7112)
                     Index Cond: (id = ci.person_id)
                     Filter: ((gender)::text = 'm'::text)
                     Rows Removed by Filter: 0
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.81 rows=1 width=21) (actual time=0.007..0.007 rows=1 loops=4407)
               Index Cond: (id = mk.movie_id)
 Planning Time: 12.910 ms
 Execution Time: 2622.134 ms
(51 rows)

SET
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7478.04..7478.05 rows=1 width=128) (actual time=246.403..246.403 rows=1 loops=1)
   ->  Nested Loop  (cost=1009.74..7478.03 rows=1 width=80) (actual time=143.090..246.385 rows=6 loops=1)
         ->  Nested Loop  (cost=1009.31..7477.01 rows=1 width=69) (actual time=143.063..246.308 rows=6 loops=1)
               ->  Nested Loop  (cost=1009.17..7476.82 rows=1 width=73) (actual time=143.054..246.274 rows=18 loops=1)
                     Join Filter: (t.id = mi_idx.movie_id)
                     ->  Nested Loop  (cost=1008.74..7476.02 rows=1 width=79) (actual time=143.016..246.200 rows=6 loops=1)
                           ->  Nested Loop  (cost=1008.60..7475.83 rows=1 width=83) (actual time=142.997..246.169 rows=6 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=1008.16..7458.00 rows=1 width=33) (actual time=142.896..245.863 rows=6 loops=1)
                                       Join Filter: (t.id = ci.movie_id)
                                       ->  Gather  (cost=1007.60..7429.06 rows=1 width=25) (actual time=142.598..249.287 rows=9 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Nested Loop  (cost=7.60..6428.96 rows=1 width=25) (actual time=149.493..200.596 rows=3 loops=3)
                                                   ->  Nested Loop  (cost=7.17..6372.12 rows=70 width=4) (actual time=4.363..96.666 rows=20699 loops=3)
                                                         ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4207.64 rows=2 width=4) (actual time=0.161..23.195 rows=2 loops=3)
                                                               Filter: ((keyword)::text = ANY ('{murder,blood,gore,death,female-nudity}'::text[]))
                                                               Rows Removed by Filter: 44722
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1079.25 rows=299 width=8) (actual time=3.408..42.770 rows=12419 loops=5)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=12389
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.957..1.957 rows=12419 loops=5)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.81 rows=1 width=21) (actual time=0.005..0.005 rows=0 loops=62096)
                                                         Index Cond: (id = mk.movie_id)
                                                         Filter: ((production_year > 2010) AND ((title)::text ~~ 'Vampire%'::text))
                                                         Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..28.93 rows=1 width=8) (actual time=0.069..0.082 rows=1 loops=9)
                                             Index Cond: (movie_id = mk.movie_id)
                                             Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                             Rows Removed by Filter: 21
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..17.82 rows=1 width=50) (actual time=0.050..0.050 rows=1 loops=6)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = 'Horror'::text)
                                       Rows Removed by Filter: 20
                           ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=6)
                                 Index Cond: (id = mi.info_type_id)
                                 Filter: ((info)::text = 'genres'::text)
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.77 rows=3 width=14) (actual time=0.010..0.011 rows=3 loops=6)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=18)
                     Index Cond: (id = mi_idx.info_type_id)
                     Filter: ((info)::text = 'votes'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using name_pkey on name n  (cost=0.43..1.02 rows=1 width=19) (actual time=0.012..0.012 rows=1 loops=6)
               Index Cond: (id = ci.person_id)
               Filter: ((gender)::text = 'm'::text)
 Planning Time: 13.684 ms
 Execution Time: 250.827 ms
(49 rows)

SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8700.85..8700.86 rows=1 width=128) (actual time=9043.837..9043.837 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.02..8700.84 rows=1 width=80) (actual time=7.761..9032.341 rows=26153 loops=1)
         Join Filter: (mi.movie_id = t.id)
         ->  Nested Loop  (cost=1011.59..8700.02 rows=1 width=79) (actual time=7.736..8911.551 rows=26153 loops=1)
               ->  Nested Loop  (cost=1011.16..8699.00 rows=1 width=68) (actual time=7.698..8640.333 rows=42900 loops=1)
                     Join Filter: (mi.movie_id = ci.movie_id)
                     ->  Gather  (cost=1010.60..8670.06 rows=1 width=60) (actual time=6.047..783.575 rows=63386 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop  (cost=10.60..7669.96 rows=1 width=60) (actual time=4.749..1266.573 rows=21129 loops=3)
                                 ->  Nested Loop  (cost=10.46..7669.77 rows=1 width=64) (actual time=4.740..1239.000 rows=22577 loops=3)
                                       Join Filter: (mi_idx.movie_id = mi.movie_id)
                                       ->  Hash Join  (cost=10.02..7633.70 rows=2 width=14) (actual time=4.633..243.319 rows=21234 loops=3)
                                             Hash Cond: (mi_idx.info_type_id = it2.id)
                                             ->  Nested Loop  (cost=7.60..7630.47 rows=294 width=18) (actual time=4.536..233.268 rows=63896 loops=3)
                                                   ->  Nested Loop  (cost=7.17..7552.00 rows=98 width=4) (actual time=4.491..114.932 rows=25571 loops=3)
                                                         ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4347.40 rows=3 width=4) (actual time=0.272..22.373 rows=2 loops=3)
                                                               Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                               Rows Removed by Filter: 44721
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1065.21 rows=299 width=8) (actual time=3.139..38.313 rows=10959 loops=7)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=12389
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.810..1.810 rows=10959 loops=7)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.77 rows=3 width=14) (actual time=0.004..0.004 rows=2 loops=76714)
                                                         Index Cond: (movie_id = mk.movie_id)
                                             ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.029..0.029 rows=1 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.022..0.024 rows=1 loops=3)
                                                         Filter: ((info)::text = 'votes'::text)
                                                         Rows Removed by Filter: 112
                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..18.03 rows=1 width=50) (actual time=0.045..0.046 rows=1 loops=63701)
                                             Index Cond: (movie_id = mk.movie_id)
                                             Filter: ((info)::text = ANY ('{Horror,Action,Sci-Fi,Thriller,Crime,War}'::text[]))
                                             Rows Removed by Filter: 58
                                 ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=67732)
                                       Index Cond: (id = mi.info_type_id)
                                       Filter: ((info)::text = 'genres'::text)
                                       Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..28.93 rows=1 width=8) (actual time=0.098..0.124 rows=1 loops=63386)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                           Rows Removed by Filter: 63
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.02 rows=1 width=19) (actual time=0.006..0.006 rows=1 loops=42900)
                     Index Cond: (id = ci.person_id)
                     Filter: ((gender)::text = 'm'::text)
                     Rows Removed by Filter: 0
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.81 rows=1 width=21) (actual time=0.004..0.004 rows=1 loops=26153)
               Index Cond: (id = mk.movie_id)
 Planning Time: 13.797 ms
 Execution Time: 9044.325 ms
(51 rows)

SET
                                                                                                   QUERY PLAN                                                                                                   
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=10239.97..10239.98 rows=1 width=128) (actual time=1133.365..1133.365 rows=1 loops=1)
   ->  Nested Loop  (cost=5.26..10239.96 rows=1 width=54) (actual time=12.450..1132.640 rows=1728 loops=1)
         ->  Nested Loop  (cost=4.83..10233.55 rows=14 width=42) (actual time=1.518..1009.552 rows=58947 loops=1)
               ->  Nested Loop  (cost=4.40..10227.18 rows=14 width=31) (actual time=1.495..706.596 rows=58947 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=3.84..10225.20 rows=1 width=39) (actual time=1.457..564.114 rows=326 loops=1)
                           ->  Nested Loop  (cost=3.42..10223.39 rows=4 width=43) (actual time=0.539..376.153 rows=79039 loops=1)
                                 ->  Nested Loop  (cost=2.98..10219.72 rows=2 width=35) (actual time=0.508..347.695 rows=647 loops=1)
                                       Join Filter: (kt.id = t.kind_id)
                                       Rows Removed by Join Filter: 5355
                                       ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.016..0.017 rows=1 loops=1)
                                             Filter: ((kind)::text = 'movie'::text)
                                             Rows Removed by Filter: 6
                                       ->  Nested Loop  (cost=2.98..10218.42 rows=17 width=39) (actual time=0.386..347.046 rows=6002 loops=1)
                                             Join Filter: (cc.movie_id = t.id)
                                             ->  Nested Loop  (cost=2.55..10175.60 rows=32 width=14) (actual time=0.271..259.760 rows=17898 loops=1)
                                                   Join Filter: (it2.id = mi_idx.info_type_id)
                                                   Rows Removed by Join Filter: 8960
                                                   ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.010..0.012 rows=1 loops=1)
                                                         Filter: ((info)::text = 'rating'::text)
                                                         Rows Removed by Filter: 112
                                                   ->  Nested Loop  (cost=2.55..10128.32 rows=3590 width=18) (actual time=0.149..256.286 rows=26858 loops=1)
                                                         ->  Hash Join  (cost=2.12..2996.88 rows=8443 width=4) (actual time=0.079..48.656 rows=85941 loops=1)
                                                               Hash Cond: (cc.status_id = cct2.id)
                                                               ->  Hash Join  (cost=1.06..2813.24 rows=33772 width=8) (actual time=0.030..34.298 rows=85941 loops=1)
                                                                     Hash Cond: (cc.subject_id = cct1.id)
                                                                     ->  Seq Scan on complete_cast cc  (cost=0.00..2081.86 rows=135086 width=12) (actual time=0.011..12.156 rows=135086 loops=1)
                                                                     ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.004..0.005 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=1)
                                                                                 Filter: ((kind)::text = 'cast'::text)
                                                                                 Rows Removed by Filter: 3
                                                               ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.022..0.022 rows=2 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.016..0.017 rows=2 loops=1)
                                                                           Filter: ((kind)::text ~~ '%complete%'::text)
                                                                           Rows Removed by Filter: 2
                                                         ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.83 rows=1 width=14) (actual time=0.002..0.002 rows=0 loops=85941)
                                                               Index Cond: (movie_id = cc.movie_id)
                                                               Filter: ((info)::text > '7.0'::text)
                                                               Rows Removed by Filter: 2
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..1.33 rows=1 width=25) (actual time=0.005..0.005 rows=0 loops=17898)
                                                   Index Cond: (id = mi_idx.movie_id)
                                                   Filter: (production_year > 2000)
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.36 rows=47 width=8) (actual time=0.010..0.029 rows=122 loops=647)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.45 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=79039)
                                 Index Cond: (id = mk.keyword_id)
                                 Filter: ((keyword)::text = ANY ('{superhero,marvel-comics,based-on-comic,tv-special,fight,violence,magnet,web,claw,laser}'::text[]))
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.011..0.402 rows=181 loops=326)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=19) (actual time=0.005..0.005 rows=1 loops=58947)
                     Index Cond: (id = ci.person_id)
         ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=20) (actual time=0.002..0.002 rows=0 loops=58947)
               Index Cond: (id = ci.person_role_id)
               Filter: ((name IS NOT NULL) AND (((name)::text ~~ '%man%'::text) OR ((name)::text ~~ '%Man%'::text)))
               Rows Removed by Filter: 0
 Planning Time: 69.131 ms
 Execution Time: 1133.603 ms
(61 rows)

SET
                                                                                                      QUERY PLAN                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7388.77..7388.78 rows=1 width=96) (actual time=279.626..279.627 rows=1 loops=1)
   ->  Nested Loop  (cost=9.45..7388.76 rows=1 width=39) (actual time=30.710..279.582 rows=93 loops=1)
         Join Filter: (cct1.id = cc.subject_id)
         Rows Removed by Join Filter: 87
         ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.014..0.015 rows=1 loops=1)
               Filter: ((kind)::text = 'cast'::text)
               Rows Removed by Filter: 3
         ->  Nested Loop  (cost=9.45..7387.70 rows=1 width=43) (actual time=30.694..279.541 rows=180 loops=1)
               Join Filter: (cct2.id = cc.status_id)
               Rows Removed by Join Filter: 180
               ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.004 rows=2 loops=1)
                     Filter: ((kind)::text ~~ '%complete%'::text)
                     Rows Removed by Filter: 2
               ->  Nested Loop  (cost=9.45..7386.64 rows=1 width=47) (actual time=21.861..139.746 rows=180 loops=2)
                     ->  Nested Loop  (cost=9.03..7386.16 rows=1 width=55) (actual time=19.230..139.298 rows=191 loops=2)
                           ->  Nested Loop  (cost=8.60..7385.70 rows=1 width=59) (actual time=19.213..138.001 rows=191 loops=2)
                                 ->  Nested Loop  (cost=8.17..7379.30 rows=14 width=47) (actual time=19.150..123.930 rows=7981 loops=2)
                                       Join Filter: (t.id = ci.movie_id)
                                       ->  Nested Loop  (cost=7.61..7377.31 rows=1 width=35) (actual time=19.131..106.671 rows=31 loops=2)
                                             Join Filter: (kt.id = t.kind_id)
                                             Rows Removed by Join Filter: 167
                                             ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=2)
                                                   Filter: ((kind)::text = 'movie'::text)
                                                   Rows Removed by Filter: 6
                                             ->  Nested Loop  (cost=7.61..7376.21 rows=1 width=39) (actual time=0.824..106.636 rows=198 loops=2)
                                                   ->  Nested Loop  (cost=7.18..7375.73 rows=1 width=14) (actual time=0.808..103.815 rows=313 loops=2)
                                                         Join Filter: (mi_idx.info_type_id = it2.id)
                                                         Rows Removed by Join Filter: 612
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.011 rows=1 loops=2)
                                                               Filter: ((info)::text = 'rating'::text)
                                                               Rows Removed by Filter: 112
                                                         ->  Nested Loop  (cost=7.18..7373.13 rows=15 width=18) (actual time=0.692..103.672 rows=925 loops=2)
                                                               ->  Nested Loop  (cost=6.75..7304.56 rows=135 width=4) (actual time=0.592..57.256 rows=9984 loops=2)
                                                                     ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=0.074..20.963 rows=4 loops=2)
                                                                           Filter: ((keyword)::text = ANY ('{superhero,marvel-comics,based-on-comic,fight}'::text[]))
                                                                           Rows Removed by Filter: 134166
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1082.76 rows=299 width=8) (actual time=0.689..8.793 rows=2496 loops=8)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=15372
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.384..0.384 rows=2496 loops=8)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=14) (actual time=0.004..0.004 rows=0 loops=19968)
                                                                     Index Cond: (movie_id = mk.movie_id)
                                                                     Filter: ((info)::text > '8.0'::text)
                                                                     Rows Removed by Filter: 2
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.009..0.009 rows=1 loops=626)
                                                         Index Cond: (id = mk.movie_id)
                                                         Filter: (production_year > 2005)
                                                         Rows Removed by Filter: 0
                                       ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.013..0.515 rows=257 loops=62)
                                             Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=20) (actual time=0.002..0.002 rows=0 loops=15962)
                                       Index Cond: (id = ci.person_role_id)
                                       Filter: ((name IS NOT NULL) AND (((name)::text ~~ '%man%'::text) OR ((name)::text ~~ '%Man%'::text)))
                                       Rows Removed by Filter: 0
                           ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=382)
                                 Index Cond: (id = ci.person_id)
                                 Heap Fetches: 382
                     ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.002..0.002 rows=1 loops=382)
                           Index Cond: (movie_id = t.id)
 Planning Time: 70.802 ms
 Execution Time: 279.835 ms
(62 rows)

SET
                                                                                                   QUERY PLAN                                                                                                   
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=14668.28..14668.29 rows=1 width=96) (actual time=1538.007..1538.007 rows=1 loops=1)
   ->  Nested Loop  (cost=9.45..14668.27 rows=1 width=39) (actual time=8.252..1536.187 rows=5400 loops=1)
         ->  Nested Loop  (cost=9.02..14667.82 rows=1 width=43) (actual time=8.222..1491.939 rows=5400 loops=1)
               Join Filter: (it2.id = mi_idx.info_type_id)
               Rows Removed by Join Filter: 11196
               ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.013..0.014 rows=1 loops=1)
                     Filter: ((info)::text = 'rating'::text)
                     Rows Removed by Filter: 112
               ->  Nested Loop  (cost=9.02..14665.39 rows=1 width=47) (actual time=8.207..1489.980 rows=16596 loops=1)
                     Join Filter: (t.id = mi_idx.movie_id)
                     ->  Nested Loop  (cost=8.59..14664.88 rows=1 width=53) (actual time=8.184..1467.754 rows=5406 loops=1)
                           ->  Nested Loop  (cost=8.16..14658.47 rows=14 width=41) (actual time=7.878..1038.185 rows=189844 loops=1)
                                 Join Filter: (t.id = ci.movie_id)
                                 ->  Nested Loop  (cost=7.60..14656.48 rows=1 width=29) (actual time=7.846..498.945 rows=1267 loops=1)
                                       Join Filter: (cct2.id = cc.status_id)
                                       Rows Removed by Join Filter: 1267
                                       ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.007..0.008 rows=2 loops=1)
                                             Filter: ((kind)::text ~~ '%complete%'::text)
                                             Rows Removed by Filter: 2
                                       ->  Nested Loop  (cost=7.60..14655.42 rows=1 width=33) (actual time=5.770..249.195 rows=1267 loops=2)
                                             Join Filter: (cct1.id = cc.subject_id)
                                             Rows Removed by Join Filter: 218
                                             ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=2)
                                                   Filter: ((kind)::text = 'cast'::text)
                                                   Rows Removed by Filter: 3
                                             ->  Nested Loop  (cost=7.60..14654.36 rows=1 width=37) (actual time=5.767..248.853 rows=1485 loops=2)
                                                   ->  Nested Loop  (cost=7.18..14641.93 rows=26 width=25) (actual time=5.683..234.962 rows=5032 loops=2)
                                                         Join Filter: (kt.id = t.kind_id)
                                                         Rows Removed by Join Filter: 5581
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.004..0.006 rows=1 loops=2)
                                                               Filter: ((kind)::text = 'movie'::text)
                                                               Rows Removed by Filter: 6
                                                         ->  Nested Loop  (cost=7.18..14638.55 rows=183 width=29) (actual time=0.658..233.583 rows=10613 loops=2)
                                                               ->  Nested Loop  (cost=6.75..14474.11 rows=337 width=4) (actual time=0.641..109.467 rows=24091 loops=2)
                                                                     ->  Seq Scan on keyword k  (cost=0.00..3967.82 rows=10 width=4) (actual time=0.138..36.271 rows=10 loops=2)
                                                                           Filter: ((keyword)::text = ANY ('{superhero,marvel-comics,based-on-comic,tv-special,fight,violence,magnet,web,claw,laser}'::text[]))
                                                                           Rows Removed by Filter: 134160
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1047.64 rows=299 width=8) (actual time=0.649..7.021 rows=2409 loops=20)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=34254
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.363..0.363 rows=2409 loops=20)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.005..0.005 rows=0 loops=48182)
                                                                     Index Cond: (id = mk.movie_id)
                                                                     Filter: (production_year > 2000)
                                                                     Rows Removed by Filter: 1
                                                   ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.002..0.002 rows=0 loops=10064)
                                                         Index Cond: (movie_id = t.id)
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.012..0.399 rows=150 loops=1267)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=20) (actual time=0.002..0.002 rows=0 loops=189844)
                                 Index Cond: (id = ci.person_role_id)
                                 Filter: ((name IS NOT NULL) AND (((name)::text ~~ '%man%'::text) OR ((name)::text ~~ '%Man%'::text)))
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.48 rows=3 width=14) (actual time=0.003..0.003 rows=3 loops=5406)
                           Index Cond: (movie_id = ci.movie_id)
         ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=5400)
               Index Cond: (id = ci.person_id)
               Heap Fetches: 5400
 Planning Time: 69.237 ms
 Execution Time: 1538.235 ms
(61 rows)

SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3308.26..3308.27 rows=1 width=96) (actual time=26.088..26.088 rows=1 loops=1)
   ->  Nested Loop  (cost=6.00..3308.26 rows=1 width=118) (actual time=3.463..25.967 rows=477 loops=1)
         ->  Nested Loop  (cost=5.58..3307.80 rows=1 width=103) (actual time=3.440..23.948 rows=1106 loops=1)
               Join Filter: (ct.id = mc.company_type_id)
               Rows Removed by Join Filter: 57
               ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.015..0.016 rows=1 loops=1)
                     Filter: ((kind)::text = 'production companies'::text)
                     Rows Removed by Filter: 3
               ->  Nested Loop  (cost=5.58..3306.72 rows=2 width=107) (actual time=3.423..23.809 rows=1163 loops=1)
                     Join Filter: (ml.movie_id = mc.movie_id)
                     ->  Nested Loop  (cost=5.15..3306.16 rows=1 width=119) (actual time=3.400..23.124 rows=154 loops=1)
                           ->  Nested Loop  (cost=4.73..2463.07 rows=1911 width=123) (actual time=3.368..20.025 rows=1853 loops=1)
                                 Join Filter: (ml.movie_id = mk.movie_id)
                                 ->  Nested Loop  (cost=4.29..2380.91 rows=41 width=115) (actual time=3.344..19.105 rows=213 loops=1)
                                       Join Filter: (ml.movie_id = mi.movie_id)
                                       ->  Nested Loop  (cost=3.86..2105.18 rows=121 width=111) (actual time=0.963..14.086 rows=179 loops=1)
                                             Join Filter: (ml.movie_id = t.id)
                                             ->  Hash Join  (cost=3.43..1527.00 rows=333 width=90) (actual time=0.939..13.120 rows=189 loops=1)
                                                   Hash Cond: (ml.link_type_id = lt.id)
                                                   ->  Merge Join  (cost=2.19..1506.31 rows=6002 width=12) (actual time=0.062..12.836 rows=3346 loops=1)
                                                         Merge Cond: (cc.movie_id = ml.movie_id)
                                                         ->  Nested Loop  (cost=0.42..9294.58 rows=16886 width=4) (actual time=0.028..5.065 rows=5561 loops=1)
                                                               Join Filter: (cc.subject_id = cct1.id)
                                                               Rows Removed by Join Filter: 2227
                                                               ->  Nested Loop  (cost=0.42..8364.79 rows=33772 width=8) (actual time=0.020..3.693 rows=5561 loops=1)
                                                                     Join Filter: (cct2.id = cc.status_id)
                                                                     Rows Removed by Join Filter: 432
                                                                     ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..6337.45 rows=135086 width=12) (actual time=0.008..2.298 rows=5993 loops=1)
                                                                     ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=5993)
                                                                           ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=1)
                                                                                 Filter: ((kind)::text = 'complete'::text)
                                                                                 Rows Removed by Filter: 3
                                                               ->  Materialize  (cost=0.00..1.06 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=5561)
                                                                     ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=2 width=4) (actual time=0.002..0.002 rows=2 loops=1)
                                                                           Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
                                                         ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..959.51 rows=29997 width=8) (actual time=0.007..5.199 rows=30638 loops=1)
                                                   ->  Hash  (cost=1.23..1.23 rows=1 width=86) (actual time=0.017..0.017 rows=2 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.009..0.012 rows=2 loops=1)
                                                               Filter: ((link)::text ~~ '%follow%'::text)
                                                               Rows Removed by Filter: 16
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..1.72 rows=1 width=21) (actual time=0.005..0.005 rows=1 loops=189)
                                                   Index Cond: (id = cc.movie_id)
                                                   Filter: ((production_year >= 1950) AND (production_year <= 2000))
                                                   Rows Removed by Filter: 0
                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.27 rows=1 width=4) (actual time=0.027..0.028 rows=1 loops=179)
                                             Index Cond: (movie_id = t.id)
                                             Filter: ((info)::text = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
                                             Rows Removed by Filter: 27
                                 ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.42 rows=47 width=8) (actual time=0.002..0.003 rows=9 loops=213)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=1853)
                                 Index Cond: (id = mk.keyword_id)
                                 Filter: ((keyword)::text = 'sequel'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=2 width=12) (actual time=0.002..0.003 rows=8 loops=154)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: (note IS NULL)
                           Rows Removed by Filter: 1
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=1106)
               Index Cond: (id = mc.company_id)
               Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
               Rows Removed by Filter: 1
 Planning Time: 70.250 ms
 Execution Time: 26.339 ms
(65 rows)

SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=2420.10..2420.11 rows=1 width=96) (actual time=35.739..35.739 rows=1 loops=1)
   ->  Nested Loop  (cost=3.52..2420.10 rows=1 width=118) (actual time=25.615..35.677 rows=247 loops=1)
         Join Filter: (ml.movie_id = mi.movie_id)
         ->  Nested Loop  (cost=3.08..2418.52 rows=1 width=138) (actual time=25.590..35.011 rows=95 loops=1)
               ->  Nested Loop  (cost=2.66..2397.77 rows=47 width=142) (actual time=25.534..33.837 rows=703 loops=1)
                     Join Filter: (ml.movie_id = mk.movie_id)
                     ->  Nested Loop  (cost=2.23..2395.81 rows=1 width=134) (actual time=25.512..33.462 rows=95 loops=1)
                           ->  Nested Loop  (cost=1.81..2395.35 rows=1 width=119) (actual time=25.497..33.112 rows=190 loops=1)
                                 Join Filter: (ml.movie_id = t.id)
                                 ->  Nested Loop  (cost=1.38..2375.69 rows=33 width=98) (actual time=1.936..31.766 rows=705 loops=1)
                                       Join Filter: (lt.id = ml.link_type_id)
                                       Rows Removed by Join Filter: 10769
                                       ->  Merge Join  (cost=1.38..2365.44 rows=601 width=20) (actual time=0.442..29.825 rows=5794 loops=1)
                                             Merge Cond: (mc.movie_id = ml.movie_id)
                                             ->  Nested Loop  (cost=0.85..33746.92 rows=10432 width=12) (actual time=0.407..22.246 rows=4702 loops=1)
                                                   Join Filter: (ct.id = mc.company_type_id)
                                                   Rows Removed by Join Filter: 109
                                                   ->  Nested Loop  (cost=0.85..33119.98 rows=41726 width=16) (actual time=0.402..21.142 rows=4811 loops=1)
                                                         ->  Nested Loop  (cost=0.42..11067.56 rows=16886 width=4) (actual time=0.022..5.080 rows=5561 loops=1)
                                                               Join Filter: (cc.status_id = cct2.id)
                                                               Rows Removed by Join Filter: 432
                                                               ->  Nested Loop  (cost=0.42..10053.37 rows=67543 width=8) (actual time=0.017..3.782 rows=5993 loops=1)
                                                                     Join Filter: (cct1.id = cc.subject_id)
                                                                     Rows Removed by Join Filter: 2305
                                                                     ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..6337.45 rows=135086 width=12) (actual time=0.005..1.948 rows=5993 loops=1)
                                                                     ->  Materialize  (cost=0.00..1.06 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=5993)
                                                                           ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=2 width=4) (actual time=0.006..0.007 rows=2 loops=1)
                                                                                 Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
                                                               ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=5993)
                                                                     ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=1)
                                                                           Filter: ((kind)::text = 'complete'::text)
                                                                           Rows Removed by Filter: 3
                                                         ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..1.29 rows=2 width=12) (actual time=0.002..0.003 rows=1 loops=5561)
                                                               Index Cond: (movie_id = cc.movie_id)
                                                               Filter: (note IS NULL)
                                                               Rows Removed by Filter: 2
                                                   ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=4811)
                                                         ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=1)
                                                               Filter: ((kind)::text = 'production companies'::text)
                                                               Rows Removed by Filter: 3
                                             ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..959.51 rows=29997 width=8) (actual time=0.008..4.581 rows=33634 loops=1)
                                       ->  Materialize  (cost=0.00..1.23 rows=1 width=86) (actual time=0.000..0.000 rows=2 loops=5794)
                                             ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.002..0.006 rows=2 loops=1)
                                                   Filter: ((link)::text ~~ '%follow%'::text)
                                                   Rows Removed by Filter: 16
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.58 rows=1 width=21) (actual time=0.002..0.002 rows=0 loops=705)
                                       Index Cond: (id = mc.movie_id)
                                       Filter: (production_year = 1998)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=190)
                                 Index Cond: (id = mc.company_id)
                                 Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.37 rows=47 width=8) (actual time=0.002..0.003 rows=7 loops=95)
                           Index Cond: (movie_id = mc.movie_id)
               ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=703)
                     Index Cond: (id = mk.keyword_id)
                     Filter: ((keyword)::text = 'sequel'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.56 rows=1 width=4) (actual time=0.005..0.006 rows=3 loops=95)
               Index Cond: (movie_id = mk.movie_id)
               Filter: ((info)::text = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
               Rows Removed by Filter: 10
 Planning Time: 69.649 ms
 Execution Time: 35.986 ms
(65 rows)

SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3422.73..3422.74 rows=1 width=96) (actual time=41.783..41.783 rows=1 loops=1)
   ->  Nested Loop  (cost=3.38..3422.71 rows=3 width=118) (actual time=6.178..41.624 rows=743 loops=1)
         Join Filter: (ml.movie_id = mi.movie_id)
         ->  Nested Loop  (cost=2.94..3420.85 rows=1 width=138) (actual time=6.156..39.687 rows=172 loops=1)
               Join Filter: (mc.company_type_id = ct.id)
               Rows Removed by Join Filter: 19
               ->  Nested Loop  (cost=2.94..3419.79 rows=1 width=142) (actual time=6.152..39.481 rows=191 loops=1)
                     ->  Nested Loop  (cost=2.52..3378.74 rows=93 width=146) (actual time=3.420..33.684 rows=3396 loops=1)
                           Join Filter: (ml.movie_id = mk.movie_id)
                           ->  Nested Loop  (cost=2.09..3374.90 rows=2 width=138) (actual time=3.394..32.085 rows=298 loops=1)
                                 Join Filter: (lt.id = ml.link_type_id)
                                 Rows Removed by Join Filter: 1113
                                 ->  Merge Join  (cost=2.09..3373.07 rows=40 width=60) (actual time=2.495..31.805 rows=720 loops=1)
                                       Merge Cond: (t.id = ml.movie_id)
                                       ->  Nested Loop  (cost=1.70..32069.95 rows=3391 width=52) (actual time=1.367..25.896 rows=161 loops=1)
                                             ->  Nested Loop  (cost=1.27..29418.97 rows=4524 width=31) (actual time=1.344..24.256 rows=174 loops=1)
                                                   ->  Nested Loop  (cost=0.85..19898.64 rows=20863 width=16) (actual time=0.261..14.611 rows=3375 loops=1)
                                                         ->  Nested Loop  (cost=0.42..8872.43 rows=8443 width=4) (actual time=0.025..4.644 rows=3834 loops=1)
                                                               Join Filter: (cct2.id = cc.status_id)
                                                               Rows Removed by Join Filter: 372
                                                               ->  Nested Loop  (cost=0.42..8364.79 rows=33772 width=8) (actual time=0.015..3.722 rows=3834 loops=1)
                                                                     Join Filter: (cct1.id = cc.subject_id)
                                                                     Rows Removed by Join Filter: 2385
                                                                     ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..6337.45 rows=135086 width=12) (actual time=0.005..2.074 rows=6219 loops=1)
                                                                     ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=6219)
                                                                           ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.004..0.006 rows=1 loops=1)
                                                                                 Filter: ((kind)::text = 'cast'::text)
                                                                                 Rows Removed by Filter: 3
                                                               ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=3834)
                                                                     ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.007..0.008 rows=2 loops=1)
                                                                           Filter: ((kind)::text ~~ 'complete%'::text)
                                                                           Rows Removed by Filter: 2
                                                         ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..1.29 rows=2 width=12) (actual time=0.002..0.002 rows=1 loops=3834)
                                                               Index Cond: (movie_id = cc.movie_id)
                                                               Filter: (note IS NULL)
                                                               Rows Removed by Filter: 2
                                                   ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=3375)
                                                         Index Cond: (id = mc.company_id)
                                                         Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..0.59 rows=1 width=21) (actual time=0.009..0.009 rows=1 loops=174)
                                                   Index Cond: (id = mc.movie_id)
                                                   Filter: ((production_year >= 1950) AND (production_year <= 2010))
                                                   Rows Removed by Filter: 0
                                       ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..959.51 rows=29997 width=8) (actual time=0.008..3.902 rows=30313 loops=1)
                                 ->  Materialize  (cost=0.00..1.23 rows=1 width=86) (actual time=0.000..0.000 rows=2 loops=720)
                                       ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.003..0.006 rows=2 loops=1)
                                             Filter: ((link)::text ~~ '%follow%'::text)
                                             Rows Removed by Filter: 16
                           ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.33 rows=47 width=8) (actual time=0.002..0.003 rows=11 loops=298)
                                 Index Cond: (movie_id = t.id)
                     ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=3396)
                           Index Cond: (id = mk.keyword_id)
                           Filter: ((keyword)::text = 'sequel'::text)
                           Rows Removed by Filter: 1
               ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.001 rows=1 loops=191)
                     Filter: ((kind)::text = 'production companies'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.82 rows=3 width=4) (actual time=0.008..0.011 rows=4 loops=172)
               Index Cond: (movie_id = mk.movie_id)
               Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,English}'::text[]))
               Rows Removed by Filter: 15
 Planning Time: 70.051 ms
 Execution Time: 42.013 ms
(64 rows)

SET
                                                                                                            QUERY PLAN                                                                                                            
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7394.90..7394.91 rows=1 width=96) (actual time=499.731..499.731 rows=1 loops=1)
   ->  Nested Loop  (cost=9.31..7394.89 rows=1 width=42) (actual time=6.034..498.599 rows=4803 loops=1)
         Join Filter: (ct.id = mc.company_type_id)
         ->  Nested Loop  (cost=9.31..7393.80 rows=1 width=46) (actual time=6.026..494.607 rows=4803 loops=1)
               ->  Nested Loop  (cost=8.89..7393.26 rows=1 width=31) (actual time=6.015..479.617 rows=4955 loops=1)
                     Join Filter: (t.id = mc.movie_id)
                     ->  Nested Loop  (cost=8.46..7392.68 rows=1 width=43) (actual time=5.986..469.941 rows=432 loops=1)
                           Join Filter: (it1.id = mi.info_type_id)
                           Rows Removed by Join Filter: 49
                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.007..0.014 rows=1 loops=1)
                                 Filter: ((info)::text = 'countries'::text)
                                 Rows Removed by Filter: 112
                           ->  Nested Loop  (cost=8.46..7390.25 rows=1 width=47) (actual time=5.978..469.810 rows=481 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=8.03..7388.35 rows=1 width=39) (actual time=5.915..413.757 rows=473 loops=1)
                                       Join Filter: (cc.status_id = cct2.id)
                                       Rows Removed by Join Filter: 1159
                                       ->  Nested Loop  (cost=8.03..7387.27 rows=1 width=43) (actual time=5.912..412.824 rows=544 loops=1)
                                             Join Filter: (kt.id = t.kind_id)
                                             Rows Removed by Join Filter: 244
                                             ->  Nested Loop  (cost=8.03..7386.15 rows=1 width=47) (actual time=5.897..411.746 rows=596 loops=1)
                                                   ->  Nested Loop  (cost=7.60..7385.67 rows=1 width=22) (actual time=5.868..372.562 rows=5973 loops=1)
                                                         Join Filter: (cct1.id = cc.subject_id)
                                                         Rows Removed by Join Filter: 13371
                                                         ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=1)
                                                               Filter: ((kind)::text = 'crew'::text)
                                                               Rows Removed by Filter: 3
                                                         ->  Nested Loop  (cost=7.60..7384.57 rows=4 width=26) (actual time=5.326..370.508 rows=19344 loops=1)
                                                               ->  Nested Loop  (cost=7.18..7383.14 rows=3 width=14) (actual time=4.477..308.952 rows=31800 loops=1)
                                                                     Join Filter: (mi_idx.info_type_id = it2.id)
                                                                     Rows Removed by Join Filter: 62093
                                                                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.008..0.010 rows=1 loops=1)
                                                                           Filter: ((info)::text = 'rating'::text)
                                                                           Rows Removed by Filter: 112
                                                                     ->  Nested Loop  (cost=7.18..7375.83 rows=392 width=18) (actual time=4.465..300.376 rows=93893 loops=1)
                                                                           ->  Nested Loop  (cost=6.75..7304.56 rows=135 width=4) (actual time=4.440..145.668 rows=37091 loops=1)
                                                                                 ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.096..20.608 rows=3 loops=1)
                                                                                       Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                       Rows Removed by Filter: 134167
                                                                                 ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1082.76 rows=299 width=8) (actual time=3.380..40.201 rows=12364 loops=3)
                                                                                       Recheck Cond: (keyword_id = k.id)
                                                                                       Heap Blocks: exact=26312
                                                                                       ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.854..1.854 rows=12364 loops=3)
                                                                                             Index Cond: (keyword_id = k.id)
                                                                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=14) (actual time=0.003..0.004 rows=3 loops=37091)
                                                                                 Index Cond: (movie_id = mk.movie_id)
                                                                                 Filter: ((info)::text < '8.5'::text)
                                                                                 Rows Removed by Filter: 0
                                                               ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.001..0.002 rows=1 loops=31800)
                                                                     Index Cond: (movie_id = mk.movie_id)
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.006..0.006 rows=0 loops=5973)
                                                         Index Cond: (id = mk.movie_id)
                                                         Filter: (production_year > 2000)
                                                         Rows Removed by Filter: 1
                                             ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.001..0.001 rows=1 loops=596)
                                                   Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                   Rows Removed by Filter: 2
                                       ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=3 width=4) (actual time=0.001..0.001 rows=3 loops=544)
                                             Filter: ((kind)::text <> 'complete+verified'::text)
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.102..0.118 rows=1 loops=473)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                                       Rows Removed by Filter: 139
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.010..0.020 rows=11 loops=432)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                           Rows Removed by Filter: 10
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.003..0.003 rows=1 loops=4955)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text <> '[us]'::text)
                     Rows Removed by Filter: 0
         ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.000..0.000 rows=1 loops=4803)
 Planning Time: 86.614 ms
 Execution Time: 499.983 ms
(75 rows)

SET
                                                                                                            QUERY PLAN                                                                                                            
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7387.11..7387.12 rows=1 width=96) (actual time=382.794..382.794 rows=1 loops=1)
   ->  Nested Loop  (cost=9.31..7387.10 rows=1 width=42) (actual time=8.354..382.737 rows=148 loops=1)
         ->  Nested Loop  (cost=8.89..7386.56 rows=1 width=27) (actual time=8.332..381.972 rows=150 loops=1)
               Join Filter: (ct.id = mc.company_type_id)
               ->  Nested Loop  (cost=8.89..7385.47 rows=1 width=31) (actual time=8.324..381.821 rows=150 loops=1)
                     Join Filter: (t.id = mc.movie_id)
                     ->  Nested Loop  (cost=8.46..7384.89 rows=1 width=43) (actual time=8.296..381.379 rows=13 loops=1)
                           Join Filter: (it1.id = mi.info_type_id)
                           Rows Removed by Join Filter: 7
                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.007..0.014 rows=1 loops=1)
                                 Filter: ((info)::text = 'countries'::text)
                                 Rows Removed by Filter: 112
                           ->  Nested Loop  (cost=8.46..7382.46 rows=1 width=47) (actual time=8.288..381.356 rows=20 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=8.03..7380.89 rows=1 width=39) (actual time=6.472..366.547 rows=179 loops=1)
                                       Join Filter: (cct2.id = cc.status_id)
                                       Rows Removed by Join Filter: 394
                                       ->  Nested Loop  (cost=8.03..7379.81 rows=1 width=43) (actual time=6.468..366.231 rows=191 loops=1)
                                             Join Filter: (cct1.id = cc.subject_id)
                                             Rows Removed by Join Filter: 689
                                             ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=1)
                                                   Filter: ((kind)::text = 'crew'::text)
                                                   Rows Removed by Filter: 3
                                             ->  Nested Loop  (cost=8.03..7378.74 rows=1 width=47) (actual time=6.457..366.100 rows=880 loops=1)
                                                   ->  Nested Loop  (cost=7.61..7378.26 rows=1 width=35) (actual time=4.691..359.224 rows=2312 loops=1)
                                                         Join Filter: (kt.id = t.kind_id)
                                                         Rows Removed by Join Filter: 1695
                                                         ->  Nested Loop  (cost=7.61..7377.15 rows=1 width=39) (actual time=4.582..355.244 rows=2835 loops=1)
                                                               ->  Nested Loop  (cost=7.18..7376.66 rows=1 width=14) (actual time=4.560..282.987 rows=11708 loops=1)
                                                                     Join Filter: (it2.id = mi_idx.info_type_id)
                                                                     Rows Removed by Join Filter: 6993
                                                                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.008..0.010 rows=1 loops=1)
                                                                           Filter: ((info)::text = 'rating'::text)
                                                                           Rows Removed by Filter: 112
                                                                     ->  Nested Loop  (cost=7.18..7373.13 rows=90 width=18) (actual time=4.550..280.387 rows=18701 loops=1)
                                                                           ->  Nested Loop  (cost=6.75..7304.56 rows=135 width=4) (actual time=4.521..142.494 rows=37091 loops=1)
                                                                                 ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.146..20.995 rows=3 loops=1)
                                                                                       Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                       Rows Removed by Filter: 134167
                                                                                 ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1082.76 rows=299 width=8) (actual time=3.400..39.091 rows=12364 loops=3)
                                                                                       Recheck Cond: (keyword_id = k.id)
                                                                                       Heap Blocks: exact=26312
                                                                                       ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.863..1.863 rows=12364 loops=3)
                                                                                             Index Cond: (keyword_id = k.id)
                                                                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=14) (actual time=0.003..0.003 rows=1 loops=37091)
                                                                                 Index Cond: (movie_id = mk.movie_id)
                                                                                 Filter: ((info)::text > '6.5'::text)
                                                                                 Rows Removed by Filter: 2
                                                               ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.006..0.006 rows=0 loops=11708)
                                                                     Index Cond: (id = mk.movie_id)
                                                                     Filter: (production_year > 2005)
                                                                     Rows Removed by Filter: 1
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.000..0.001 rows=1 loops=2835)
                                                               Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                               Rows Removed by Filter: 2
                                                   ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.002..0.003 rows=0 loops=2312)
                                                         Index Cond: (movie_id = t.id)
                                       ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=3 width=4) (actual time=0.000..0.001 rows=3 loops=191)
                                             Filter: ((kind)::text <> 'complete+verified'::text)
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.56 rows=1 width=8) (actual time=0.079..0.082 rows=0 loops=179)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
                                       Rows Removed by Filter: 130
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.016..0.031 rows=12 loops=13)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                           Rows Removed by Filter: 17
               ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.000..0.000 rows=1 loops=150)
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.005..0.005 rows=1 loops=150)
               Index Cond: (id = mc.company_id)
               Filter: ((country_code)::text <> '[us]'::text)
               Rows Removed by Filter: 0
 Planning Time: 86.578 ms
 Execution Time: 383.120 ms
(75 rows)

SET
                                                                                                         QUERY PLAN                                                                                                         
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7394.43..7394.44 rows=1 width=96) (actual time=2364.885..2364.885 rows=1 loops=1)
   ->  Nested Loop  (cost=9.31..7394.42 rows=1 width=42) (actual time=10.610..2362.714 rows=8373 loops=1)
         Join Filter: (it2.id = mi_idx.info_type_id)
         Rows Removed by Join Filter: 16430
         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=1)
               Filter: ((info)::text = 'rating'::text)
               Rows Removed by Filter: 112
         ->  Nested Loop  (cost=9.31..7391.99 rows=1 width=46) (actual time=10.595..2360.399 rows=24803 loops=1)
               Join Filter: (t.id = mi_idx.movie_id)
               ->  Nested Loop  (cost=8.88..7391.46 rows=1 width=56) (actual time=10.570..2333.831 rows=8493 loops=1)
                     Join Filter: (kt.id = t.kind_id)
                     Rows Removed by Join Filter: 712
                     ->  Nested Loop  (cost=8.88..7390.35 rows=1 width=60) (actual time=10.561..2323.788 rows=8788 loops=1)
                           Join Filter: (mi.movie_id = t.id)
                           ->  Nested Loop  (cost=8.45..7389.84 rows=1 width=35) (actual time=5.388..2270.911 rows=22323 loops=1)
                                 Join Filter: (it1.id = mi.info_type_id)
                                 Rows Removed by Join Filter: 5071
                                 ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.003..0.010 rows=1 loops=1)
                                       Filter: ((info)::text = 'countries'::text)
                                       Rows Removed by Filter: 112
                                 ->  Nested Loop  (cost=8.45..7387.38 rows=4 width=39) (actual time=5.384..2266.984 rows=27394 loops=1)
                                       ->  Nested Loop  (cost=8.02..7383.59 rows=2 width=31) (actual time=5.120..383.916 rows=22725 loops=1)
                                             ->  Nested Loop  (cost=7.60..7381.96 rows=3 width=16) (actual time=5.106..319.167 rows=24082 loops=1)
                                                   Join Filter: (ct.id = mc.company_type_id)
                                                   Rows Removed by Join Filter: 7
                                                   ->  Nested Loop  (cost=7.60..7380.76 rows=3 width=20) (actual time=5.093..312.274 rows=24082 loops=1)
                                                         ->  Nested Loop  (cost=7.17..7373.86 rows=12 width=8) (actual time=5.029..221.083 rows=6704 loops=1)
                                                               Join Filter: (cc.subject_id = cct1.id)
                                                               Rows Removed by Join Filter: 3832
                                                               ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                                                     Filter: ((kind)::text = 'cast'::text)
                                                                     Rows Removed by Filter: 3
                                                               ->  Nested Loop  (cost=7.17..7372.22 rows=47 width=12) (actual time=5.021..219.616 rows=10536 loops=1)
                                                                     Join Filter: (cct2.id = cc.status_id)
                                                                     Rows Removed by Join Filter: 9488
                                                                     ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.003..0.004 rows=1 loops=1)
                                                                           Filter: ((kind)::text = 'complete'::text)
                                                                           Rows Removed by Filter: 3
                                                                     ->  Nested Loop  (cost=7.17..7368.82 rows=188 width=16) (actual time=5.004..216.922 rows=20024 loops=1)
                                                                           ->  Nested Loop  (cost=6.75..7304.56 rows=135 width=4) (actual time=4.594..141.604 rows=37091 loops=1)
                                                                                 ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.164..20.848 rows=3 loops=1)
                                                                                       Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                       Rows Removed by Filter: 134167
                                                                                 ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1082.76 rows=299 width=8) (actual time=3.420..38.942 rows=12364 loops=3)
                                                                                       Recheck Cond: (keyword_id = k.id)
                                                                                       Heap Blocks: exact=26312
                                                                                       ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.885..1.885 rows=12364 loops=3)
                                                                                             Index Cond: (keyword_id = k.id)
                                                                           ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.002..0.002 rows=1 loops=37091)
                                                                                 Index Cond: (movie_id = mk.movie_id)
                                                         ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.009..0.013 rows=4 loops=6704)
                                                               Index Cond: (movie_id = mk.movie_id)
                                                               Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                                                               Rows Removed by Filter: 8
                                                   ->  Materialize  (cost=0.00..1.06 rows=4 width=4) (actual time=0.000..0.000 rows=1 loops=24082)
                                                         ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.008..0.009 rows=2 loops=1)
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=24082)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((country_code)::text <> '[us]'::text)
                                                   Rows Removed by Filter: 0
                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.070..0.083 rows=1 loops=22725)
                                             Index Cond: (movie_id = mk.movie_id)
                                             Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                                             Rows Removed by Filter: 203
                           ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.002..0.002 rows=0 loops=22323)
                                 Index Cond: (id = mk.movie_id)
                                 Filter: (production_year > 2005)
                                 Rows Removed by Filter: 1
                     ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.000..0.001 rows=1 loops=8788)
                           Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                           Rows Removed by Filter: 0
               ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=14) (actual time=0.002..0.003 rows=3 loops=8493)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text < '8.5'::text)
                     Rows Removed by Filter: 0
 Planning Time: 88.311 ms
 Execution Time: 2365.142 ms
(77 rows)

SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3945.49..3945.50 rows=1 width=96) (actual time=27.133..27.133 rows=1 loops=1)
   ->  Nested Loop  (cost=11.16..3945.49 rows=1 width=48) (actual time=8.147..26.849 rows=1620 loops=1)
         Join Filter: (it3.id = pi.info_type_id)
         Rows Removed by Join Filter: 3270
         ->  Seq Scan on info_type it3  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.015 rows=1 loops=1)
               Filter: ((info)::text = 'trivia'::text)
               Rows Removed by Filter: 112
         ->  Nested Loop  (cost=11.16..3943.06 rows=1 width=52) (actual time=8.120..26.501 rows=4890 loops=1)
               Join Filter: (n.id = pi.person_id)
               ->  Nested Loop  (cost=10.73..3922.80 rows=1 width=60) (actual time=8.091..25.050 rows=30 loops=1)
                     Join Filter: (cc.subject_id = cct1.id)
                     ->  Nested Loop  (cost=10.73..3921.74 rows=1 width=64) (actual time=8.088..25.014 rows=30 loops=1)
                           ->  Nested Loop  (cost=10.30..3919.44 rows=1 width=45) (actual time=8.056..24.913 rows=30 loops=1)
                                 Join Filter: (ci.role_id = rt.id)
                                 ->  Nested Loop  (cost=10.30..3918.28 rows=1 width=49) (actual time=8.043..24.861 rows=30 loops=1)
                                       Join Filter: (mi.info_type_id = it.id)
                                       ->  Nested Loop  (cost=10.30..3915.85 rows=1 width=53) (actual time=8.036..24.752 rows=30 loops=1)
                                             ->  Nested Loop  (cost=9.88..3913.83 rows=1 width=57) (actual time=8.024..24.327 rows=132 loops=1)
                                                   Join Filter: (t.id = mc.movie_id)
                                                   ->  Nested Loop  (cost=9.45..3908.99 rows=1 width=73) (actual time=7.994..24.227 rows=6 loops=1)
                                                         ->  Nested Loop  (cost=9.02..3902.76 rows=2 width=61) (actual time=7.137..23.564 rows=132 loops=1)
                                                               ->  Nested Loop  (cost=8.60..3899.85 rows=1 width=57) (actual time=7.078..22.915 rows=76 loops=1)
                                                                     Join Filter: (t.id = ci.movie_id)
                                                                     ->  Nested Loop  (cost=8.03..3852.25 rows=1 width=41) (actual time=7.046..21.204 rows=2 loops=1)
                                                                           Join Filter: (t.id = mi.movie_id)
                                                                           ->  Nested Loop  (cost=7.60..3809.27 rows=1 width=33) (actual time=6.973..20.825 rows=1 loops=1)
                                                                                 Join Filter: (cct2.id = cc.status_id)
                                                                                 ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=1)
                                                                                       Filter: ((kind)::text = 'complete+verified'::text)
                                                                                       Rows Removed by Filter: 3
                                                                                 ->  Nested Loop  (cost=7.60..3808.21 rows=1 width=37) (actual time=6.965..20.815 rows=1 loops=1)
                                                                                       Join Filter: (t.id = cc.movie_id)
                                                                                       ->  Nested Loop  (cost=7.18..3805.41 rows=1 width=25) (actual time=6.936..20.786 rows=1 loops=1)
                                                                                             ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=0.188..14.841 rows=414 loops=1)
                                                                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.054..11.841 rows=1 loops=1)
                                                                                                         Filter: ((keyword)::text = 'computer-animation'::text)
                                                                                                         Rows Removed by Filter: 134169
                                                                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=0.132..2.943 rows=414 loops=1)
                                                                                                         Recheck Cond: (keyword_id = k.id)
                                                                                                         Heap Blocks: exact=358
                                                                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.074..0.074 rows=414 loops=1)
                                                                                                               Index Cond: (keyword_id = k.id)
                                                                                             ->  Index Scan using title_pkey on title t  (cost=0.43..2.12 rows=1 width=21) (actual time=0.014..0.014 rows=0 loops=414)
                                                                                                   Index Cond: (id = mk.movie_id)
                                                                                                   Filter: ((production_year >= 2000) AND (production_year <= 2010) AND ((title)::text = 'Shrek 2'::text))
                                                                                                   Rows Removed by Filter: 1
                                                                                       ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..2.77 rows=2 width=12) (actual time=0.025..0.026 rows=1 loops=1)
                                                                                             Index Cond: (movie_id = mk.movie_id)
                                                                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..42.97 rows=1 width=8) (actual time=0.070..0.375 rows=2 loops=1)
                                                                                 Index Cond: (movie_id = mk.movie_id)
                                                                                 Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%200%'::text) OR ((info)::text ~~ 'USA:%200%'::text)))
                                                                                 Rows Removed by Filter: 455
                                                                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..47.58 rows=1 width=16) (actual time=0.018..0.846 rows=38 loops=2)
                                                                           Index Cond: (movie_id = mk.movie_id)
                                                                           Filter: ((note)::text = ANY ('{(voice),"(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                           Rows Removed by Filter: 191
                                                               ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.89 rows=2 width=4) (actual time=0.006..0.008 rows=2 loops=76)
                                                                     Index Cond: (person_id = ci.person_id)
                                                                     Heap Fetches: 132
                                                         ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..2.22 rows=1 width=20) (actual time=0.005..0.005 rows=0 loops=132)
                                                               Index Cond: (id = ci.person_role_id)
                                                               Filter: ((name)::text = 'Queen'::text)
                                                               Rows Removed by Filter: 1
                                                   ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..4.77 rows=5 width=8) (actual time=0.007..0.012 rows=22 loops=6)
                                                         Index Cond: (movie_id = mk.movie_id)
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..2.03 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=132)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((country_code)::text = '[us]'::text)
                                                   Rows Removed by Filter: 1
                                       ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=30)
                                             Filter: ((info)::text = 'release dates'::text)
                                             Rows Removed by Filter: 15
                                 ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=30)
                                       Filter: ((role)::text = 'actress'::text)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using name_pkey on name n  (cost=0.43..2.30 rows=1 width=19) (actual time=0.003..0.003 rows=1 loops=30)
                                 Index Cond: (id = ci.person_id)
                                 Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                     ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=30)
                           Filter: ((kind)::text = 'cast'::text)
               ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..19.93 rows=26 width=8) (actual time=0.002..0.027 rows=163 loops=30)
                     Index Cond: (person_id = an.person_id)
 Planning Time: 118.814 ms
 Execution Time: 27.481 ms
(84 rows)

SET
                                                                                                                 QUERY PLAN                                                                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4148.76..4148.77 rows=1 width=96) (actual time=179.860..179.861 rows=1 loops=1)
   ->  Nested Loop  (cost=11.16..4148.76 rows=1 width=48) (actual time=28.946..179.846 rows=15 loops=1)
         ->  Nested Loop  (cost=10.74..4146.73 rows=1 width=52) (actual time=28.933..179.597 rows=66 loops=1)
               Join Filter: (pi.info_type_id = it3.id)
               Rows Removed by Join Filter: 10692
               ->  Nested Loop  (cost=10.74..4144.31 rows=1 width=56) (actual time=27.653..87.682 rows=10758 loops=1)
                     Join Filter: (mi.info_type_id = it.id)
                     ->  Nested Loop  (cost=10.74..4141.88 rows=1 width=60) (actual time=27.647..55.034 rows=10758 loops=1)
                           Join Filter: (n.id = pi.person_id)
                           ->  Nested Loop  (cost=10.31..4121.62 rows=1 width=68) (actual time=27.636..51.422 rows=66 loops=1)
                                 ->  Nested Loop  (cost=9.88..4117.61 rows=1 width=56) (actual time=27.625..51.285 rows=66 loops=1)
                                       Join Filter: (n.id = an.person_id)
                                       ->  Nested Loop  (cost=9.46..4114.69 rows=1 width=52) (actual time=27.609..51.189 rows=22 loops=1)
                                             Join Filter: (mi.movie_id = t.id)
                                             ->  Nested Loop  (cost=9.03..4110.43 rows=2 width=55) (actual time=9.428..50.789 rows=193 loops=1)
                                                   Join Filter: (mc.movie_id = mi.movie_id)
                                                   ->  Nested Loop  (cost=8.59..3981.80 rows=3 width=47) (actual time=3.361..36.968 rows=167 loops=1)
                                                         Join Filter: (ci.movie_id = mc.movie_id)
                                                         ->  Nested Loop  (cost=8.16..3976.97 rows=1 width=39) (actual time=3.327..36.715 rows=6 loops=1)
                                                               ->  Nested Loop  (cost=7.73..3974.67 rows=1 width=20) (actual time=1.430..34.226 rows=175 loops=1)
                                                                     Join Filter: (rt.id = ci.role_id)
                                                                     Rows Removed by Join Filter: 528
                                                                     ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.013..0.014 rows=1 loops=1)
                                                                           Filter: ((role)::text = 'actress'::text)
                                                                           Rows Removed by Filter: 11
                                                                     ->  Nested Loop  (cost=7.73..3973.48 rows=3 width=24) (actual time=1.075..34.140 rows=703 loops=1)
                                                                           ->  Nested Loop  (cost=7.17..3830.71 rows=3 width=8) (actual time=1.030..15.662 rows=23 loops=1)
                                                                                 Join Filter: (cc.status_id = cct2.id)
                                                                                 Rows Removed by Join Filter: 51
                                                                                 ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=1)
                                                                                       Filter: ((kind)::text = 'complete+verified'::text)
                                                                                       Rows Removed by Filter: 3
                                                                                 ->  Nested Loop  (cost=7.17..3829.51 rows=12 width=12) (actual time=0.392..15.638 rows=74 loops=1)
                                                                                       Join Filter: (cc.subject_id = cct1.id)
                                                                                       Rows Removed by Join Filter: 16
                                                                                       ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=1)
                                                                                             Filter: ((kind)::text = 'cast'::text)
                                                                                             Rows Removed by Filter: 3
                                                                                       ->  Nested Loop  (cost=7.17..3827.87 rows=47 width=16) (actual time=0.390..15.614 rows=90 loops=1)
                                                                                             ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=0.144..13.088 rows=414 loops=1)
                                                                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.030..11.346 rows=1 loops=1)
                                                                                                         Filter: ((keyword)::text = 'computer-animation'::text)
                                                                                                         Rows Removed by Filter: 134169
                                                                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=0.112..1.693 rows=414 loops=1)
                                                                                                         Recheck Cond: (keyword_id = k.id)
                                                                                                         Heap Blocks: exact=358
                                                                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.056..0.056 rows=414 loops=1)
                                                                                                               Index Cond: (keyword_id = k.id)
                                                                                             ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..2.77 rows=2 width=12) (actual time=0.006..0.006 rows=0 loops=414)
                                                                                                   Index Cond: (movie_id = mk.movie_id)
                                                                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..47.58 rows=1 width=16) (actual time=0.099..0.799 rows=31 loops=23)
                                                                                 Index Cond: (movie_id = mk.movie_id)
                                                                                 Filter: ((note)::text = ANY ('{(voice),"(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                                 Rows Removed by Filter: 116
                                                               ->  Index Scan using name_pkey on name n  (cost=0.43..2.30 rows=1 width=19) (actual time=0.014..0.014 rows=0 loops=175)
                                                                     Index Cond: (id = ci.person_id)
                                                                     Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                                                     Rows Removed by Filter: 1
                                                         ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..4.77 rows=5 width=8) (actual time=0.022..0.035 rows=28 loops=6)
                                                               Index Cond: (movie_id = mk.movie_id)
                                                   ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..42.86 rows=1 width=8) (actual time=0.019..0.082 rows=1 loops=167)
                                                         Index Cond: (movie_id = mk.movie_id)
                                                         Filter: ((info)::text ~~ 'USA:%200%'::text)
                                                         Rows Removed by Filter: 422
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..2.12 rows=1 width=21) (actual time=0.002..0.002 rows=0 loops=193)
                                                   Index Cond: (id = mk.movie_id)
                                                   Filter: ((production_year >= 2000) AND (production_year <= 2005) AND ((title)::text = 'Shrek 2'::text))
                                                   Rows Removed by Filter: 1
                                       ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.89 rows=2 width=4) (actual time=0.002..0.003 rows=3 loops=22)
                                             Index Cond: (person_id = ci.person_id)
                                             Heap Fetches: 66
                                 ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..2.22 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=66)
                                       Index Cond: (id = ci.person_role_id)
                                       Filter: ((name)::text = 'Queen'::text)
                           ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..19.93 rows=26 width=8) (actual time=0.001..0.028 rows=163 loops=66)
                                 Index Cond: (person_id = an.person_id)
                     ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=10758)
                           Filter: ((info)::text = 'release dates'::text)
                           Rows Removed by Filter: 15
               ->  Seq Scan on info_type it3  (cost=0.00..2.41 rows=1 width=4) (actual time=0.003..0.008 rows=1 loops=10758)
                     Filter: ((info)::text = 'height'::text)
                     Rows Removed by Filter: 111
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..2.03 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=66)
               Index Cond: (id = mc.company_id)
               Filter: ((country_code)::text = '[us]'::text)
               Rows Removed by Filter: 1
 Planning Time: 116.573 ms
 Execution Time: 180.187 ms
(88 rows)

SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4547.37..4547.38 rows=1 width=96) (actual time=561.827..561.827 rows=1 loops=1)
   ->  Nested Loop  (cost=11.16..4547.36 rows=1 width=48) (actual time=73.972..558.487 rows=16308 loops=1)
         Join Filter: (cc.status_id = cct2.id)
         Rows Removed by Join Filter: 11714
         ->  Nested Loop  (cost=11.16..4546.30 rows=1 width=52) (actual time=17.728..530.709 rows=28022 loops=1)
               ->  Nested Loop  (cost=10.74..4544.27 rows=1 width=56) (actual time=17.335..307.108 rows=149974 loops=1)
                     Join Filter: (n.id = an.person_id)
                     ->  Nested Loop  (cost=10.32..4541.38 rows=1 width=68) (actual time=17.304..198.367 rows=36250 loops=1)
                           Join Filter: (it3.id = pi.info_type_id)
                           Rows Removed by Join Filter: 117713
                           ->  Seq Scan on info_type it3  (cost=0.00..2.41 rows=1 width=4) (actual time=0.008..0.014 rows=1 loops=1)
                                 Filter: ((info)::text = 'trivia'::text)
                                 Rows Removed by Filter: 112
                           ->  Nested Loop  (cost=10.32..4538.95 rows=1 width=72) (actual time=17.292..187.828 rows=153963 loops=1)
                                 Join Filter: (n.id = pi.person_id)
                                 ->  Nested Loop  (cost=9.89..4518.69 rows=1 width=64) (actual time=17.256..143.022 rows=1206 loops=1)
                                       Join Filter: (ci.role_id = rt.id)
                                       ->  Nested Loop  (cost=9.89..4517.53 rows=1 width=68) (actual time=17.245..141.646 rows=1206 loops=1)
                                             ->  Nested Loop  (cost=9.46..4515.32 rows=1 width=56) (actual time=17.214..139.088 rows=1455 loops=1)
                                                   Join Filter: (cc.subject_id = cct1.id)
                                                   ->  Nested Loop  (cost=9.46..4514.26 rows=1 width=60) (actual time=17.206..137.722 rows=1455 loops=1)
                                                         Join Filter: (t.id = mc.movie_id)
                                                         ->  Nested Loop  (cost=9.03..4509.42 rows=1 width=76) (actual time=17.173..136.662 rows=58 loops=1)
                                                               Join Filter: (mi.info_type_id = it.id)
                                                               ->  Nested Loop  (cost=9.03..4506.99 rows=1 width=80) (actual time=17.166..136.426 rows=58 loops=1)
                                                                     ->  Nested Loop  (cost=8.61..4504.20 rows=1 width=68) (actual time=15.201..136.078 rows=75 loops=1)
                                                                           ->  Nested Loop  (cost=8.18..4501.91 rows=1 width=49) (actual time=2.590..100.173 rows=7505 loops=1)
                                                                                 Join Filter: (t.id = ci.movie_id)
                                                                                 ->  Nested Loop  (cost=7.61..4406.63 rows=2 width=33) (actual time=0.763..43.019 rows=357 loops=1)
                                                                                       Join Filter: (t.id = mi.movie_id)
                                                                                       ->  Nested Loop  (cost=7.18..3804.91 rows=14 width=25) (actual time=0.148..18.134 rows=249 loops=1)
                                                                                             ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=0.139..14.171 rows=414 loops=1)
                                                                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.029..12.599 rows=1 loops=1)
                                                                                                         Filter: ((keyword)::text = 'computer-animation'::text)
                                                                                                         Rows Removed by Filter: 134169
                                                                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=0.108..1.506 rows=414 loops=1)
                                                                                                         Recheck Cond: (keyword_id = k.id)
                                                                                                         Heap Blocks: exact=358
                                                                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.054..0.054 rows=414 loops=1)
                                                                                                               Index Cond: (keyword_id = k.id)
                                                                                             ->  Index Scan using title_pkey on title t  (cost=0.43..2.12 rows=1 width=21) (actual time=0.009..0.009 rows=1 loops=414)
                                                                                                   Index Cond: (id = mk.movie_id)
                                                                                                   Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                                                                                   Rows Removed by Filter: 0
                                                                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..42.97 rows=1 width=8) (actual time=0.045..0.099 rows=1 loops=249)
                                                                                             Index Cond: (movie_id = mk.movie_id)
                                                                                             Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%200%'::text) OR ((info)::text ~~ 'USA:%200%'::text)))
                                                                                             Rows Removed by Filter: 88
                                                                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..47.63 rows=1 width=16) (actual time=0.028..0.156 rows=21 loops=357)
                                                                                       Index Cond: (movie_id = mk.movie_id)
                                                                                       Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                                       Rows Removed by Filter: 72
                                                                           ->  Index Scan using name_pkey on name n  (cost=0.43..2.29 rows=1 width=19) (actual time=0.005..0.005 rows=0 loops=7505)
                                                                                 Index Cond: (id = ci.person_id)
                                                                                 Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                                                                 Rows Removed by Filter: 1
                                                                     ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..2.77 rows=2 width=12) (actual time=0.004..0.004 rows=1 loops=75)
                                                                           Index Cond: (movie_id = t.id)
                                                               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=58)
                                                                     Filter: ((info)::text = 'release dates'::text)
                                                                     Rows Removed by Filter: 15
                                                         ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..4.77 rows=5 width=8) (actual time=0.007..0.013 rows=25 loops=58)
                                                               Index Cond: (movie_id = mk.movie_id)
                                                   ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=1455)
                                                         Filter: ((kind)::text = 'cast'::text)
                                             ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..2.21 rows=1 width=20) (actual time=0.001..0.001 rows=1 loops=1455)
                                                   Index Cond: (id = ci.person_role_id)
                                       ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1206)
                                             Filter: ((role)::text = 'actress'::text)
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..19.93 rows=26 width=8) (actual time=0.002..0.019 rows=128 loops=1206)
                                       Index Cond: (person_id = ci.person_id)
                     ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.87 rows=2 width=4) (actual time=0.001..0.002 rows=4 loops=36250)
                           Index Cond: (person_id = pi.person_id)
                           Heap Fetches: 149974
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..2.03 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=149974)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text = '[us]'::text)
                     Rows Removed by Filter: 1
         ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=28022)
               Filter: ((kind)::text = 'complete+verified'::text)
               Rows Removed by Filter: 3
 Planning Time: 119.774 ms
 Execution Time: 562.173 ms
(84 rows)

SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3832.24..3832.25 rows=1 width=32) (actual time=593.134..593.135 rows=1 loops=1)
   ->  Nested Loop  (cost=8.03..3832.22 rows=7 width=17) (actual time=7.427..591.978 rows=7834 loops=1)
         Join Filter: (mc.movie_id = t.id)
         ->  Nested Loop  (cost=7.60..3828.74 rows=7 width=8) (actual time=7.407..556.417 rows=7834 loops=1)
               ->  Nested Loop  (cost=7.18..3752.99 rows=170 width=12) (actual time=6.683..267.889 rows=148552 loops=1)
                     ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.642..81.581 rows=41840 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.496..11.484 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'character-name-in-title'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.144..65.711 rows=41840 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=11541
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=4.071..4.071 rows=41840 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.003..0.004 rows=4 loops=41840)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=148552)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text = '[de]'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.004..0.004 rows=1 loops=7834)
               Index Cond: (id = mk.movie_id)
 Planning Time: 2.308 ms
 Execution Time: 593.335 ms
(24 rows)

SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3829.74..3829.75 rows=1 width=32) (actual time=567.104..567.104 rows=1 loops=1)
   ->  Nested Loop  (cost=8.03..3829.73 rows=2 width=17) (actual time=9.247..566.313 rows=5228 loops=1)
         Join Filter: (mc.movie_id = t.id)
         ->  Nested Loop  (cost=7.60..3828.74 rows=2 width=8) (actual time=9.231..542.323 rows=5228 loops=1)
               ->  Nested Loop  (cost=7.18..3752.99 rows=170 width=12) (actual time=6.765..263.171 rows=148552 loops=1)
                     ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.724..80.187 rows=41840 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.697..11.755 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'character-name-in-title'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.024..64.051 rows=41840 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=11541
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=3.971..3.971 rows=41840 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.003..0.004 rows=4 loops=41840)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=148552)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text = '[nl]'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.004..0.004 rows=1 loops=5228)
               Index Cond: (id = mk.movie_id)
 Planning Time: 2.502 ms
 Execution Time: 567.295 ms
(24 rows)

SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3829.24..3829.25 rows=1 width=32) (actual time=542.955..542.955 rows=1 loops=1)
   ->  Nested Loop  (cost=8.03..3829.24 rows=1 width=17) (actual time=542.950..542.951 rows=0 loops=1)
         Join Filter: (mc.movie_id = t.id)
         ->  Nested Loop  (cost=7.60..3828.74 rows=1 width=8) (actual time=542.950..542.950 rows=0 loops=1)
               ->  Nested Loop  (cost=7.18..3752.99 rows=170 width=12) (actual time=6.738..266.235 rows=148552 loops=1)
                     ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.696..81.332 rows=41840 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.654..11.719 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'character-name-in-title'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.039..65.267 rows=41840 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=11541
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=3.963..3.963 rows=41840 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.003..0.004 rows=4 loops=41840)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=148552)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text = '[sm]'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (never executed)
               Index Cond: (id = mk.movie_id)
 Planning Time: 2.499 ms
 Execution Time: 543.145 ms
(24 rows)

SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3845.82..3845.83 rows=1 width=32) (actual time=728.410..728.411 rows=1 loops=1)
   ->  Nested Loop  (cost=8.03..3845.67 rows=61 width=17) (actual time=6.944..720.201 rows=68316 loops=1)
         ->  Nested Loop  (cost=7.61..3769.92 rows=170 width=21) (actual time=6.881..430.613 rows=148552 loops=1)
               Join Filter: (t.id = mc.movie_id)
               ->  Nested Loop  (cost=7.18..3749.42 rows=34 width=25) (actual time=6.828..248.793 rows=41840 loops=1)
                     ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.810..76.808 rows=41840 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.670..11.829 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'character-name-in-title'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.136..60.292 rows=41840 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=11541
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=4.091..4.091 rows=41840 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.004..0.004 rows=1 loops=41840)
                           Index Cond: (id = mk.movie_id)
               ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.003..0.004 rows=4 loops=41840)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=148552)
               Index Cond: (id = mc.company_id)
               Filter: ((country_code)::text = '[us]'::text)
               Rows Removed by Filter: 1
 Planning Time: 2.516 ms
 Execution Time: 728.608 ms
(24 rows)

SET
                                                                                                         QUERY PLAN                                                                                                         
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8691.91..8691.92 rows=1 width=128) (actual time=1344.012..1344.013 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.70..8691.90 rows=1 width=80) (actual time=26.672..1343.518 rows=757 loops=1)
         ->  Nested Loop  (cost=1012.27..8690.88 rows=1 width=69) (actual time=26.634..1333.217 rows=1021 loops=1)
               ->  Nested Loop  (cost=1012.13..8690.69 rows=1 width=73) (actual time=26.624..1331.289 rows=1021 loops=1)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=1011.70..8672.67 rows=1 width=47) (actual time=14.007..1150.817 rows=1736 loops=1)
                           Join Filter: (t.id = ci.movie_id)
                           ->  Nested Loop  (cost=1011.13..8643.58 rows=1 width=39) (actual time=7.103..317.742 rows=2023 loops=1)
                                 Join Filter: (mi_idx.movie_id = t.id)
                                 ->  Nested Loop  (cost=1010.70..8642.75 rows=1 width=18) (actual time=7.075..222.291 rows=16283 loops=1)
                                       ->  Gather  (cost=1010.57..8642.58 rows=1 width=22) (actual time=6.330..185.029 rows=35346 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Nested Loop  (cost=10.57..7642.48 rows=1 width=22) (actual time=5.006..314.540 rows=11782 loops=3)
                                                   ->  Nested Loop  (cost=10.44..7642.32 rows=1 width=26) (actual time=4.984..301.351 rows=11782 loops=3)
                                                         ->  Hash Join  (cost=10.02..7640.66 rows=2 width=14) (actual time=4.679..254.752 rows=21234 loops=3)
                                                               Hash Cond: (mi_idx.info_type_id = it2.id)
                                                               ->  Nested Loop  (cost=7.60..7637.43 rows=294 width=18) (actual time=4.590..245.841 rows=63896 loops=3)
                                                                     ->  Nested Loop  (cost=7.17..7557.95 rows=98 width=4) (actual time=4.551..125.562 rows=25571 loops=3)
                                                                           ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4353.35 rows=3 width=4) (actual time=0.265..23.045 rows=2 loops=3)
                                                                                 Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                                 Rows Removed by Filter: 44721
                                                                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1065.21 rows=299 width=8) (actual time=3.160..42.700 rows=10959 loops=7)
                                                                                 Recheck Cond: (keyword_id = k.id)
                                                                                 Heap Blocks: exact=12389
                                                                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.827..1.827 rows=10959 loops=7)
                                                                                       Index Cond: (keyword_id = k.id)
                                                                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.78 rows=3 width=14) (actual time=0.004..0.004 rows=2 loops=76714)
                                                                           Index Cond: (movie_id = mk.movie_id)
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.025..0.025 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.018..0.020 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'votes'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.81 rows=2 width=12) (actual time=0.002..0.002 rows=1 loops=63701)
                                                               Index Cond: (movie_id = mi_idx.movie_id)
                                                   ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=35346)
                                                         Index Cond: (id = cc.subject_id)
                                                         Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
                                       ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=35346)
                                             Index Cond: (id = cc.status_id)
                                             Filter: ((kind)::text = 'complete+verified'::text)
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.82 rows=1 width=21) (actual time=0.006..0.006 rows=0 loops=16283)
                                       Index Cond: (id = mk.movie_id)
                                       Filter: (production_year > 2000)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..29.08 rows=1 width=8) (actual time=0.290..0.411 rows=1 loops=2023)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                 Rows Removed by Filter: 137
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..18.01 rows=1 width=50) (actual time=0.103..0.103 rows=1 loops=1736)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((info)::text = ANY ('{Horror,Thriller}'::text[]))
                           Rows Removed by Filter: 226
               ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1021)
                     Index Cond: (id = mi.info_type_id)
                     Filter: ((info)::text = 'genres'::text)
         ->  Index Scan using name_pkey on name n  (cost=0.43..1.03 rows=1 width=19) (actual time=0.010..0.010 rows=1 loops=1021)
               Index Cond: (id = ci.person_id)
               Filter: ((gender)::text = 'm'::text)
               Rows Removed by Filter: 0
 Planning Time: 73.773 ms
 Execution Time: 1344.448 ms
(64 rows)

SET
                                                                                                           QUERY PLAN                                                                                                            
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8689.58..8689.59 rows=1 width=128) (actual time=322.406..322.406 rows=1 loops=1)
   ->  Nested Loop  (cost=1010.42..8689.57 rows=1 width=80) (actual time=74.361..322.373 rows=28 loops=1)
         ->  Nested Loop  (cost=1010.29..8689.41 rows=1 width=84) (actual time=74.352..322.328 rows=28 loops=1)
               ->  Nested Loop  (cost=1010.16..8689.23 rows=1 width=88) (actual time=74.343..322.177 rows=108 loops=1)
                     Join Filter: (t.id = cc.movie_id)
                     ->  Nested Loop  (cost=1009.74..8688.40 rows=1 width=100) (actual time=74.320..321.848 rows=108 loops=1)
                           ->  Nested Loop  (cost=1009.31..8687.37 rows=1 width=89) (actual time=74.291..321.255 rows=108 loops=1)
                                 ->  Nested Loop  (cost=1009.17..8687.19 rows=1 width=93) (actual time=74.276..320.882 rows=324 loops=1)
                                       Join Filter: (t.id = mi_idx.movie_id)
                                       ->  Nested Loop  (cost=1008.74..8686.37 rows=1 width=79) (actual time=74.249..320.426 rows=108 loops=1)
                                             ->  Nested Loop  (cost=1008.60..8686.19 rows=1 width=83) (actual time=74.243..320.250 rows=108 loops=1)
                                                   Join Filter: (t.id = mi.movie_id)
                                                   ->  Nested Loop  (cost=1008.16..8668.17 rows=1 width=33) (actual time=73.940..313.824 rows=77 loops=1)
                                                         Join Filter: (t.id = ci.movie_id)
                                                         ->  Gather  (cost=1007.60..8639.08 rows=1 width=25) (actual time=58.947..307.186 rows=49 loops=1)
                                                               Workers Planned: 2
                                                               Workers Launched: 2
                                                               ->  Nested Loop  (cost=7.60..7638.98 rows=1 width=25) (actual time=64.785..245.513 rows=16 loops=3)
                                                                     ->  Nested Loop  (cost=7.17..7557.95 rows=98 width=4) (actual time=4.433..115.228 rows=25571 loops=3)
                                                                           ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4353.35 rows=3 width=4) (actual time=0.177..23.195 rows=2 loops=3)
                                                                                 Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                                 Rows Removed by Filter: 44721
                                                                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1065.21 rows=299 width=8) (actual time=3.147..38.263 rows=10959 loops=7)
                                                                                 Recheck Cond: (keyword_id = k.id)
                                                                                 Heap Blocks: exact=12389
                                                                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.816..1.816 rows=10959 loops=7)
                                                                                       Index Cond: (keyword_id = k.id)
                                                                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.83 rows=1 width=21) (actual time=0.005..0.005 rows=0 loops=76714)
                                                                           Index Cond: (id = mk.movie_id)
                                                                           Filter: ((production_year > 2000) AND (((title)::text ~~ '%Freddy%'::text) OR ((title)::text ~~ '%Jason%'::text) OR ((title)::text ~~ 'Saw%'::text)))
                                                                           Rows Removed by Filter: 1
                                                         ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..29.08 rows=1 width=8) (actual time=0.151..0.225 rows=2 loops=49)
                                                               Index Cond: (movie_id = mk.movie_id)
                                                               Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                                               Rows Removed by Filter: 82
                                                   ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..18.01 rows=1 width=50) (actual time=0.082..0.083 rows=1 loops=77)
                                                         Index Cond: (movie_id = mk.movie_id)
                                                         Filter: ((info)::text = ANY ('{Horror,Thriller}'::text[]))
                                                         Rows Removed by Filter: 279
                                             ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=108)
                                                   Index Cond: (id = mi.info_type_id)
                                                   Filter: ((info)::text = 'genres'::text)
                                       ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.78 rows=3 width=14) (actual time=0.003..0.003 rows=3 loops=108)
                                             Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=324)
                                       Index Cond: (id = mi_idx.info_type_id)
                                       Filter: ((info)::text = 'votes'::text)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using name_pkey on name n  (cost=0.43..1.03 rows=1 width=19) (actual time=0.005..0.005 rows=1 loops=108)
                                 Index Cond: (id = ci.person_id)
                                 Filter: ((gender)::text = 'm'::text)
                     ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.81 rows=2 width=12) (actual time=0.002..0.003 rows=1 loops=108)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=108)
                     Index Cond: (id = cc.status_id)
                     Filter: ((kind)::text = 'complete+verified'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=28)
               Index Cond: (id = cc.subject_id)
               Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
 Planning Time: 73.369 ms
 Execution Time: 327.162 ms
(62 rows)

SET
                                                                                                         QUERY PLAN                                                                                                         
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8709.53..8709.54 rows=1 width=128) (actual time=4032.812..4032.812 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.70..8709.52 rows=1 width=80) (actual time=12.286..4028.904 rows=8024 loops=1)
         ->  Nested Loop  (cost=1012.27..8708.49 rows=1 width=69) (actual time=12.250..3948.159 rows=11863 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=1011.71..8679.40 rows=1 width=85) (actual time=10.033..1290.491 rows=14655 loops=1)
                     ->  Nested Loop  (cost=1011.58..8679.23 rows=1 width=89) (actual time=7.589..1261.556 rows=27522 loops=1)
                           ->  Nested Loop  (cost=1011.45..8679.06 rows=1 width=93) (actual time=7.570..1215.757 rows=37669 loops=1)
                                 ->  Nested Loop  (cost=1011.03..8678.23 rows=1 width=81) (actual time=6.128..1073.237 rows=63386 loops=1)
                                       Join Filter: (mi.movie_id = t.id)
                                       ->  Gather  (cost=1010.60..8677.40 rows=1 width=60) (actual time=6.107..778.610 rows=63386 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Nested Loop  (cost=10.60..7677.30 rows=1 width=60) (actual time=4.734..1296.530 rows=21129 loops=3)
                                                   ->  Nested Loop  (cost=10.46..7677.12 rows=1 width=64) (actual time=4.726..1268.076 rows=22577 loops=3)
                                                         Join Filter: (mi_idx.movie_id = mi.movie_id)
                                                         ->  Hash Join  (cost=10.02..7640.66 rows=2 width=14) (actual time=4.629..250.400 rows=21234 loops=3)
                                                               Hash Cond: (mi_idx.info_type_id = it2.id)
                                                               ->  Nested Loop  (cost=7.60..7637.43 rows=294 width=18) (actual time=4.547..240.452 rows=63896 loops=3)
                                                                     ->  Nested Loop  (cost=7.17..7557.95 rows=98 width=4) (actual time=4.502..120.351 rows=25571 loops=3)
                                                                           ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4353.35 rows=3 width=4) (actual time=0.274..24.348 rows=2 loops=3)
                                                                                 Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                                 Rows Removed by Filter: 44721
                                                                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1065.21 rows=299 width=8) (actual time=3.151..39.830 rows=10959 loops=7)
                                                                                 Recheck Cond: (keyword_id = k.id)
                                                                                 Heap Blocks: exact=12389
                                                                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.819..1.819 rows=10959 loops=7)
                                                                                       Index Cond: (keyword_id = k.id)
                                                                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.78 rows=3 width=14) (actual time=0.004..0.004 rows=2 loops=76714)
                                                                           Index Cond: (movie_id = mk.movie_id)
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.029..0.029 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.023..0.025 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'votes'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..18.22 rows=1 width=50) (actual time=0.046..0.048 rows=1 loops=63701)
                                                               Index Cond: (movie_id = mk.movie_id)
                                                               Filter: ((info)::text = ANY ('{Horror,Action,Sci-Fi,Thriller,Crime,War}'::text[]))
                                                               Rows Removed by Filter: 58
                                                   ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=67732)
                                                         Index Cond: (id = mi.info_type_id)
                                                         Filter: ((info)::text = 'genres'::text)
                                                         Rows Removed by Filter: 0
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.82 rows=1 width=21) (actual time=0.004..0.004 rows=1 loops=63386)
                                             Index Cond: (id = mk.movie_id)
                                 ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.81 rows=2 width=12) (actual time=0.002..0.002 rows=1 loops=63386)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=37669)
                                 Index Cond: (id = cc.subject_id)
                                 Filter: ((kind)::text = 'cast'::text)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=27522)
                           Index Cond: (id = cc.status_id)
                           Filter: ((kind)::text = 'complete+verified'::text)
                           Rows Removed by Filter: 0
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..29.08 rows=1 width=8) (actual time=0.136..0.181 rows=1 loops=14655)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                     Rows Removed by Filter: 83
         ->  Index Scan using name_pkey on name n  (cost=0.43..1.03 rows=1 width=19) (actual time=0.006..0.006 rows=1 loops=11863)
               Index Cond: (id = ci.person_id)
               Filter: ((gender)::text = 'm'::text)
               Rows Removed by Filter: 0
 Planning Time: 74.217 ms
 Execution Time: 4033.261 ms
(64 rows)

SET
                                                                                                      QUERY PLAN                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8954.40..8954.41 rows=1 width=128) (actual time=1369.156..1369.156 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.87..8954.39 rows=1 width=80) (actual time=59.824..1368.604 rows=1273 loops=1)
         Join Filter: (mi.movie_id = t.id)
         ->  Nested Loop  (cost=1012.44..8953.28 rows=1 width=83) (actual time=59.789..1362.947 rows=1273 loops=1)
               ->  Nested Loop  (cost=1012.01..8951.99 rows=1 width=72) (actual time=59.756..1353.713 rows=1556 loops=1)
                     ->  Nested Loop  (cost=1011.87..8951.81 rows=1 width=76) (actual time=59.747..1351.201 rows=1616 loops=1)
                           Join Filter: (mi_idx.movie_id = mi.movie_id)
                           ->  Nested Loop  (cost=1011.44..8928.44 rows=1 width=26) (actual time=29.013..1256.188 rows=1471 loops=1)
                                 Join Filter: (mi_idx.movie_id = ci.movie_id)
                                 ->  Gather  (cost=1010.87..8895.40 rows=1 width=18) (actual time=28.759..910.072 rows=1547 loops=1)
                                       Workers Planned: 2
                                       Workers Launched: 2
                                       ->  Nested Loop  (cost=10.87..7895.30 rows=1 width=18) (actual time=17.298..954.542 rows=516 loops=3)
                                             ->  Nested Loop  (cost=10.45..7882.53 rows=13 width=22) (actual time=4.600..458.293 rows=199419 loops=3)
                                                   Join Filter: (mi_idx.movie_id = mc.movie_id)
                                                   ->  Hash Join  (cost=10.02..7878.13 rows=2 width=14) (actual time=4.566..252.891 rows=21234 loops=3)
                                                         Hash Cond: (mi_idx.info_type_id = it2.id)
                                                         ->  Nested Loop  (cost=7.60..7874.90 rows=294 width=18) (actual time=4.483..243.574 rows=63896 loops=3)
                                                               ->  Nested Loop  (cost=7.17..7767.34 rows=98 width=4) (actual time=4.443..125.671 rows=25571 loops=3)
                                                                     ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4562.73 rows=3 width=4) (actual time=0.175..22.767 rows=2 loops=3)
                                                                           Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                           Rows Removed by Filter: 44721
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1065.21 rows=299 width=8) (actual time=3.165..42.819 rows=10959 loops=7)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=12389
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.829..1.829 rows=10959 loops=7)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..1.07 rows=3 width=14) (actual time=0.004..0.004 rows=2 loops=76714)
                                                                     Index Cond: (movie_id = mk.movie_id)
                                                         ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.026..0.026 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.021..0.022 rows=1 loops=3)
                                                                     Filter: ((info)::text = 'votes'::text)
                                                                     Rows Removed by Filter: 112
                                                   ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.14 rows=5 width=8) (actual time=0.005..0.008 rows=9 loops=63701)
                                                         Index Cond: (movie_id = mk.movie_id)
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.98 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=598256)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((name)::text ~~ 'Lionsgate%'::text)
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..33.03 rows=1 width=8) (actual time=0.164..0.226 rows=1 loops=1547)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                       Rows Removed by Filter: 119
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..23.36 rows=1 width=50) (actual time=0.063..0.064 rows=1 loops=1471)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((info)::text = ANY ('{Horror,Thriller}'::text[]))
                                 Rows Removed by Filter: 173
                     ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1616)
                           Index Cond: (id = mi.info_type_id)
                           Filter: ((info)::text = 'genres'::text)
                           Rows Removed by Filter: 0
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.29 rows=1 width=19) (actual time=0.005..0.005 rows=1 loops=1556)
                     Index Cond: (id = ci.person_id)
                     Filter: ((gender)::text = 'm'::text)
                     Rows Removed by Filter: 0
         ->  Index Scan using title_pkey on title t  (cost=0.43..1.10 rows=1 width=21) (actual time=0.004..0.004 rows=1 loops=1273)
               Index Cond: (id = mk.movie_id)
 Planning Time: 51.300 ms
 Execution Time: 1374.018 ms
(60 rows)

SET
                                                                                                        QUERY PLAN                                                                                                         
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8939.01..8939.02 rows=1 width=128) (actual time=322.635..322.636 rows=1 loops=1)
   ->  Nested Loop  (cost=1010.59..8939.00 rows=1 width=80) (actual time=117.432..322.584 rows=84 loops=1)
         ->  Nested Loop  (cost=1010.16..8937.71 rows=1 width=69) (actual time=117.404..322.178 rows=84 loops=1)
               ->  Nested Loop  (cost=1010.02..8937.53 rows=1 width=73) (actual time=117.392..321.890 rows=252 loops=1)
                     Join Filter: (t.id = mi_idx.movie_id)
                     ->  Nested Loop  (cost=1009.59..8936.42 rows=1 width=83) (actual time=117.361..321.606 rows=84 loops=1)
                           ->  Nested Loop  (cost=1009.45..8936.24 rows=1 width=87) (actual time=117.343..321.466 rows=84 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=1009.01..8912.87 rows=1 width=37) (actual time=117.053..317.399 rows=53 loops=1)
                                       ->  Nested Loop  (cost=1008.59..8911.15 rows=1 width=41) (actual time=117.010..317.024 rows=119 loops=1)
                                             Join Filter: (t.id = mc.movie_id)
                                             ->  Nested Loop  (cost=1008.16..8908.99 rows=1 width=33) (actual time=74.076..316.008 rows=77 loops=1)
                                                   Join Filter: (t.id = ci.movie_id)
                                                   ->  Gather  (cost=1007.60..8875.95 rows=1 width=25) (actual time=58.799..309.286 rows=49 loops=1)
                                                         Workers Planned: 2
                                                         Workers Launched: 2
                                                         ->  Nested Loop  (cost=7.60..7875.85 rows=1 width=25) (actual time=64.449..246.135 rows=16 loops=3)
                                                               ->  Nested Loop  (cost=7.17..7767.34 rows=98 width=4) (actual time=4.467..115.483 rows=25571 loops=3)
                                                                     ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4562.73 rows=3 width=4) (actual time=0.196..23.305 rows=2 loops=3)
                                                                           Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                           Rows Removed by Filter: 44721
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1065.21 rows=299 width=8) (actual time=3.154..38.324 rows=10959 loops=7)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=12389
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.818..1.818 rows=10959 loops=7)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using title_pkey on title t  (cost=0.43..1.11 rows=1 width=21) (actual time=0.005..0.005 rows=0 loops=76714)
                                                                     Index Cond: (id = mk.movie_id)
                                                                     Filter: ((production_year > 2000) AND (((title)::text ~~ '%Freddy%'::text) OR ((title)::text ~~ '%Jason%'::text) OR ((title)::text ~~ 'Saw%'::text)))
                                                                     Rows Removed by Filter: 1
                                                   ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..33.03 rows=1 width=8) (actual time=0.152..0.227 rows=2 loops=49)
                                                         Index Cond: (movie_id = mk.movie_id)
                                                         Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                                         Rows Removed by Filter: 82
                                             ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.15 rows=1 width=8) (actual time=0.008..0.013 rows=2 loops=77)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((note)::text ~~ '%(Blu-ray)%'::text)
                                                   Rows Removed by Filter: 24
                                       ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.61 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=119)
                                             Index Cond: (id = mc.company_id)
                                             Filter: ((name)::text ~~ 'Lionsgate%'::text)
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..23.36 rows=1 width=50) (actual time=0.076..0.076 rows=2 loops=53)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Horror,Thriller}'::text[]))
                                       Rows Removed by Filter: 292
                           ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=84)
                                 Index Cond: (id = mi.info_type_id)
                                 Filter: ((info)::text = 'genres'::text)
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..1.07 rows=3 width=14) (actual time=0.002..0.003 rows=3 loops=84)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=252)
                     Index Cond: (id = mi_idx.info_type_id)
                     Filter: ((info)::text = 'votes'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using name_pkey on name n  (cost=0.43..1.29 rows=1 width=19) (actual time=0.004..0.004 rows=1 loops=84)
               Index Cond: (id = ci.person_id)
               Filter: ((gender)::text = 'm'::text)
 Planning Time: 50.448 ms
 Execution Time: 327.384 ms
(60 rows)

SET
                                                                                                      QUERY PLAN                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8954.61..8954.62 rows=1 width=128) (actual time=1377.462..1377.462 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.87..8954.60 rows=1 width=80) (actual time=58.361..1376.408 rows=2825 loops=1)
         Join Filter: (mi.movie_id = t.id)
         ->  Nested Loop  (cost=1012.44..8953.49 rows=1 width=83) (actual time=58.337..1367.396 rows=2825 loops=1)
               ->  Nested Loop  (cost=1012.01..8952.20 rows=1 width=72) (actual time=58.306..1355.370 rows=2825 loops=1)
                     ->  Nested Loop  (cost=1011.87..8952.02 rows=1 width=76) (actual time=58.297..1351.274 rows=3007 loops=1)
                           Join Filter: (mi_idx.movie_id = mi.movie_id)
                           ->  Nested Loop  (cost=1011.44..8928.44 rows=1 width=26) (actual time=28.812..1237.407 rows=1471 loops=1)
                                 Join Filter: (mi_idx.movie_id = ci.movie_id)
                                 ->  Gather  (cost=1010.87..8895.40 rows=1 width=18) (actual time=28.563..892.130 rows=1547 loops=1)
                                       Workers Planned: 2
                                       Workers Launched: 2
                                       ->  Nested Loop  (cost=10.87..7895.30 rows=1 width=18) (actual time=17.303..957.964 rows=516 loops=3)
                                             ->  Nested Loop  (cost=10.45..7882.53 rows=13 width=22) (actual time=4.665..458.556 rows=199419 loops=3)
                                                   Join Filter: (mi_idx.movie_id = mc.movie_id)
                                                   ->  Hash Join  (cost=10.02..7878.13 rows=2 width=14) (actual time=4.623..252.800 rows=21234 loops=3)
                                                         Hash Cond: (mi_idx.info_type_id = it2.id)
                                                         ->  Nested Loop  (cost=7.60..7874.90 rows=294 width=18) (actual time=4.532..243.473 rows=63896 loops=3)
                                                               ->  Nested Loop  (cost=7.17..7767.34 rows=98 width=4) (actual time=4.497..125.486 rows=25571 loops=3)
                                                                     ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4562.73 rows=3 width=4) (actual time=0.275..22.513 rows=2 loops=3)
                                                                           Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                           Rows Removed by Filter: 44721
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1065.21 rows=299 width=8) (actual time=3.129..42.848 rows=10959 loops=7)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=12389
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=1.793..1.793 rows=10959 loops=7)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..1.07 rows=3 width=14) (actual time=0.004..0.004 rows=2 loops=76714)
                                                                     Index Cond: (movie_id = mk.movie_id)
                                                         ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.027..0.027 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.021..0.023 rows=1 loops=3)
                                                                     Filter: ((info)::text = 'votes'::text)
                                                                     Rows Removed by Filter: 112
                                                   ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.14 rows=5 width=8) (actual time=0.005..0.008 rows=9 loops=63701)
                                                         Index Cond: (movie_id = mk.movie_id)
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.98 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=598256)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((name)::text ~~ 'Lionsgate%'::text)
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..33.03 rows=1 width=8) (actual time=0.163..0.226 rows=1 loops=1547)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                       Rows Removed by Filter: 119
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..23.57 rows=1 width=50) (actual time=0.074..0.077 rows=2 loops=1471)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((info)::text = ANY ('{Horror,Action,Sci-Fi,Thriller,Crime,War}'::text[]))
                                 Rows Removed by Filter: 172
                     ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=3007)
                           Index Cond: (id = mi.info_type_id)
                           Filter: ((info)::text = 'genres'::text)
                           Rows Removed by Filter: 0
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.29 rows=1 width=19) (actual time=0.004..0.004 rows=1 loops=2825)
                     Index Cond: (id = ci.person_id)
         ->  Index Scan using title_pkey on title t  (cost=0.43..1.10 rows=1 width=21) (actual time=0.003..0.003 rows=1 loops=2825)
               Index Cond: (id = mk.movie_id)
 Planning Time: 51.342 ms
 Execution Time: 1382.315 ms
(58 rows)

SET
                                                                              QUERY PLAN                                                                               
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3802.90..3802.91 rows=1 width=96) (actual time=15.772..15.772 rows=1 loops=1)
   ->  Nested Loop  (cost=7.90..3802.82 rows=11 width=116) (actual time=15.769..15.769 rows=0 loops=1)
         ->  Nested Loop  (cost=7.47..3756.66 rows=11 width=103) (actual time=15.769..15.769 rows=0 loops=1)
               ->  Nested Loop  (cost=7.04..3751.32 rows=11 width=94) (actual time=15.769..15.769 rows=0 loops=1)
                     Join Filter: (ml.link_type_id = lt.id)
                     ->  Nested Loop  (cost=7.04..3747.37 rows=11 width=16) (actual time=15.768..15.768 rows=0 loops=1)
                           ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=15.409..15.760 rows=1 loops=1)
                                 ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=15.379..15.728 rows=1 loops=1)
                                       Filter: ((keyword)::text = '10,000-mile-club'::text)
                                       Rows Removed by Filter: 134169
                                 ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=0.026..0.027 rows=1 loops=1)
                                       Recheck Cond: (keyword_id = k.id)
                                       Heap Blocks: exact=1
                                       ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.013..0.013 rows=1 loops=1)
                                             Index Cond: (keyword_id = k.id)
                           ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=12) (actual time=0.007..0.007 rows=0 loops=1)
                                 Index Cond: (movie_id = mk.movie_id)
                     ->  Materialize  (cost=0.00..1.27 rows=18 width=86) (never executed)
                           ->  Seq Scan on link_type lt  (cost=0.00..1.18 rows=18 width=86) (never executed)
               ->  Index Scan using title_pkey on title t1  (cost=0.43..0.49 rows=1 width=21) (never executed)
                     Index Cond: (id = mk.movie_id)
         ->  Index Scan using title_pkey on title t2  (cost=0.43..4.20 rows=1 width=21) (never executed)
               Index Cond: (id = ml.linked_movie_id)
 Planning Time: 2.905 ms
 Execution Time: 15.911 ms
(25 rows)

SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3802.90..3802.91 rows=1 width=96) (actual time=184.809..184.809 rows=1 loops=1)
   ->  Nested Loop  (cost=7.90..3802.82 rows=11 width=116) (actual time=6.822..183.707 rows=4388 loops=1)
         ->  Nested Loop  (cost=7.47..3756.66 rows=11 width=103) (actual time=6.793..140.389 rows=4388 loops=1)
               ->  Nested Loop  (cost=7.04..3751.32 rows=11 width=94) (actual time=6.768..129.026 rows=4388 loops=1)
                     Join Filter: (ml.link_type_id = lt.id)
                     Rows Removed by Join Filter: 30206
                     ->  Nested Loop  (cost=7.04..3747.37 rows=11 width=16) (actual time=6.748..124.268 rows=4388 loops=1)
                           ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=4) (actual time=6.642..84.900 rows=41840 loops=1)
                                 ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.509..12.008 rows=1 loops=1)
                                       Filter: ((keyword)::text = 'character-name-in-title'::text)
                                       Rows Removed by Filter: 134169
                                 ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=6.130..68.925 rows=41840 loops=1)
                                       Recheck Cond: (keyword_id = k.id)
                                       Heap Blocks: exact=11541
                                       ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=4.052..4.052 rows=41840 loops=1)
                                             Index Cond: (keyword_id = k.id)
                           ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=12) (actual time=0.001..0.001 rows=0 loops=41840)
                                 Index Cond: (movie_id = mk.movie_id)
                     ->  Materialize  (cost=0.00..1.27 rows=18 width=86) (actual time=0.000..0.000 rows=8 loops=4388)
                           ->  Seq Scan on link_type lt  (cost=0.00..1.18 rows=18 width=86) (actual time=0.009..0.011 rows=17 loops=1)
               ->  Index Scan using title_pkey on title t1  (cost=0.43..0.49 rows=1 width=21) (actual time=0.002..0.002 rows=1 loops=4388)
                     Index Cond: (id = mk.movie_id)
         ->  Index Scan using title_pkey on title t2  (cost=0.43..4.20 rows=1 width=21) (actual time=0.010..0.010 rows=1 loops=4388)
               Index Cond: (id = ml.linked_movie_id)
 Planning Time: 2.364 ms
 Execution Time: 185.000 ms
(26 rows)

SET
                                                                                                                  QUERY PLAN                                                                                                                   
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4451.76..4451.77 rows=1 width=192) (actual time=71.287..71.287 rows=1 loops=1)
   ->  Nested Loop  (cost=6.44..4451.74 rows=1 width=84) (actual time=11.873..71.274 rows=8 loops=1)
         ->  Nested Loop  (cost=6.02..4451.30 rows=1 width=69) (actual time=11.864..71.224 rows=8 loops=1)
               Join Filter: (t2.id = mc2.movie_id)
               ->  Nested Loop  (cost=5.59..4450.56 rows=1 width=77) (actual time=11.840..71.184 rows=2 loops=1)
                     Join Filter: ((ml.linked_movie_id = t2.id) AND (kt2.id = t2.kind_id))
                     ->  Nested Loop  (cost=5.16..4449.84 rows=1 width=60) (actual time=11.817..71.100 rows=12 loops=1)
                           ->  Nested Loop  (cost=4.74..4449.40 rows=1 width=45) (actual time=11.783..70.563 rows=81 loops=1)
                                 ->  Nested Loop  (cost=4.31..4448.79 rows=1 width=53) (actual time=11.760..70.210 rows=28 loops=1)
                                       Join Filter: (it2.id = mi_idx2.info_type_id)
                                       Rows Removed by Join Filter: 1595
                                       ->  Nested Loop  (cost=3.88..4409.59 rows=19 width=47) (actual time=0.214..62.228 rows=1220 loops=1)
                                             Join Filter: (kt1.id = t1.kind_id)
                                             Rows Removed by Join Filter: 844
                                             ->  Nested Loop  (cost=0.00..2.18 rows=1 width=8) (actual time=0.018..0.021 rows=1 loops=1)
                                                   ->  Seq Scan on kind_type kt1  (cost=0.00..1.09 rows=1 width=4) (actual time=0.016..0.017 rows=1 loops=1)
                                                         Filter: ((kind)::text = 'tv series'::text)
                                                         Rows Removed by Filter: 6
                                                   ->  Seq Scan on kind_type kt2  (cost=0.00..1.09 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=1)
                                                         Filter: ((kind)::text = 'tv series'::text)
                                                         Rows Removed by Filter: 6
                                             ->  Nested Loop  (cost=3.88..4405.75 rows=132 width=47) (actual time=0.195..61.951 rows=2064 loops=1)
                                                   Join Filter: (ml.movie_id = t1.id)
                                                   ->  Nested Loop  (cost=3.45..4328.60 rows=132 width=22) (actual time=0.176..54.497 rows=2064 loops=1)
                                                         Join Filter: (ml.link_type_id = lt.id)
                                                         Rows Removed by Join Filter: 38685
                                                         ->  Nested Loop  (cost=3.45..4292.61 rows=794 width=26) (actual time=0.067..47.602 rows=20890 loops=1)
                                                               ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.011 rows=1 loops=1)
                                                                     Filter: ((info)::text = 'rating'::text)
                                                                     Rows Removed by Filter: 112
                                                               ->  Hash Join  (cost=3.45..4282.26 rows=794 width=22) (actual time=0.056..45.720 rows=20890 loops=1)
                                                                     Hash Cond: (mi_idx1.info_type_id = it1.id)
                                                                     ->  Merge Join  (cost=1.03..4035.43 rows=89741 width=26) (actual time=0.016..39.585 rows=62670 loops=1)
                                                                           Merge Cond: (ml.movie_id = mi_idx1.movie_id)
                                                                           ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..959.51 rows=29997 width=12) (actual time=0.004..5.207 rows=29997 loops=1)
                                                                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43820.38 rows=1380035 width=14) (actual time=0.008..18.735 rows=114373 loops=1)
                                                                     ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.016..0.016 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=1)
                                                                                 Filter: ((info)::text = 'rating'::text)
                                                                                 Rows Removed by Filter: 112
                                                         ->  Materialize  (cost=0.00..1.26 rows=3 width=4) (actual time=0.000..0.000 rows=2 loops=20890)
                                                               ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=3 width=4) (actual time=0.018..0.021 rows=2 loops=1)
                                                                     Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                     Rows Removed by Filter: 16
                                                   ->  Index Scan using title_pkey on title t1  (cost=0.43..0.57 rows=1 width=25) (actual time=0.003..0.003 rows=1 loops=2064)
                                                         Index Cond: (id = mi_idx1.movie_id)
                                       ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=1 width=14) (actual time=0.006..0.006 rows=1 loops=1220)
                                             Index Cond: (movie_id = ml.linked_movie_id)
                                             Filter: ((info)::text < '3.0'::text)
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.008..0.012 rows=3 loops=28)
                                       Index Cond: (movie_id = t1.id)
                           ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.006..0.006 rows=0 loops=81)
                                 Index Cond: (id = mc1.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using title_pkey on title t2  (cost=0.43..0.71 rows=1 width=25) (actual time=0.006..0.006 rows=0 loops=12)
                           Index Cond: (id = mi_idx2.movie_id)
                           Filter: ((production_year >= 2005) AND (production_year <= 2008))
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.67 rows=5 width=8) (actual time=0.011..0.016 rows=4 loops=2)
                     Index Cond: (movie_id = mi_idx2.movie_id)
         ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.006..0.006 rows=1 loops=8)
               Index Cond: (id = mc2.company_id)
 Planning Time: 92.115 ms
 Execution Time: 71.557 ms
(67 rows)

SET
                                                                                                                 QUERY PLAN                                                                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=2681.30..2681.31 rows=1 width=192) (actual time=46.868..46.868 rows=1 loops=1)
   ->  Nested Loop  (cost=340.64..2681.28 rows=1 width=84) (actual time=8.705..46.856 rows=4 loops=1)
         Join Filter: ((t2.id = mi_idx2.movie_id) AND (it2.id = mi_idx2.info_type_id))
         Rows Removed by Join Filter: 4
         ->  Nested Loop  (cost=340.21..2680.76 rows=1 width=94) (actual time=8.688..46.829 rows=4 loops=1)
               ->  Nested Loop  (cost=340.08..2680.59 rows=1 width=98) (actual time=8.680..46.817 rows=4 loops=1)
                     Join Filter: (ml.movie_id = t1.id)
                     ->  Nested Loop  (cost=339.65..2680.06 rows=1 width=89) (actual time=8.670..46.800 rows=4 loops=1)
                           ->  Nested Loop  (cost=339.23..2679.62 rows=1 width=74) (actual time=8.665..46.787 rows=4 loops=1)
                                 ->  Nested Loop  (cost=338.80..2678.21 rows=1 width=66) (actual time=8.660..46.780 rows=1 loops=1)
                                       ->  Nested Loop  (cost=338.67..2678.04 rows=1 width=70) (actual time=2.037..46.752 rows=6 loops=1)
                                             ->  Nested Loop  (cost=338.24..2669.65 rows=2 width=45) (actual time=2.007..44.441 rows=477 loops=1)
                                                   ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..14.12 rows=1 width=4) (actual time=0.017..0.019 rows=1 loops=1)
                                                         Filter: ((info)::text = 'rating'::text)
                                                         Rows Removed by Filter: 112
                                                   ->  Nested Loop  (cost=338.09..2655.51 rows=2 width=41) (actual time=1.989..44.366 rows=477 loops=1)
                                                         ->  Nested Loop  (cost=337.67..2557.48 rows=220 width=26) (actual time=1.930..25.965 rows=9674 loops=1)
                                                               Join Filter: (ml.movie_id = mc1.movie_id)
                                                               ->  Hash Join  (cost=337.24..2528.65 rows=44 width=18) (actual time=1.923..16.607 rows=2064 loops=1)
                                                                     Hash Cond: (mi_idx1.info_type_id = it1.id)
                                                                     ->  Merge Join  (cost=334.82..2512.65 rows=4984 width=22) (actual time=1.885..15.906 rows=6192 loops=1)
                                                                           Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43820.38 rows=1380035 width=14) (actual time=0.008..8.539 rows=63901 loops=1)
                                                                           ->  Sort  (cost=334.38..338.55 rows=1666 width=8) (actual time=1.855..2.179 rows=6443 loops=1)
                                                                                 Sort Key: ml.movie_id
                                                                                 Sort Method: quicksort  Memory: 205kB
                                                                                 ->  Nested Loop  (cost=38.82..245.23 rows=1666 width=8) (actual time=0.125..1.345 rows=2315 loops=1)
                                                                                       ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=4) (actual time=0.020..0.024 rows=2 loops=1)
                                                                                             Filter: ((link)::text ~~ '%follow%'::text)
                                                                                             Rows Removed by Filter: 16
                                                                                       ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..225.26 rows=1875 width=12) (actual time=0.091..0.547 rows=1158 loops=2)
                                                                                             Recheck Cond: (link_type_id = lt.id)
                                                                                             Heap Blocks: exact=191
                                                                                             ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.075..0.075 rows=1158 loops=2)
                                                                                                   Index Cond: (link_type_id = lt.id)
                                                                     ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=1)
                                                                                 Filter: ((info)::text = 'rating'::text)
                                                                                 Rows Removed by Filter: 112
                                                               ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.59 rows=5 width=8) (actual time=0.002..0.004 rows=5 loops=2064)
                                                                     Index Cond: (movie_id = mi_idx1.movie_id)
                                                         ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=9674)
                                                               Index Cond: (id = mc1.company_id)
                                                               Filter: ((country_code)::text = '[nl]'::text)
                                                               Rows Removed by Filter: 1
                                             ->  Index Scan using title_pkey on title t2  (cost=0.43..4.20 rows=1 width=25) (actual time=0.005..0.005 rows=0 loops=477)
                                                   Index Cond: (id = ml.linked_movie_id)
                                                   Filter: (production_year = 2007)
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=6)
                                             Index Cond: (id = t2.kind_id)
                                             Filter: ((kind)::text = 'tv series'::text)
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..1.35 rows=5 width=8) (actual time=0.004..0.005 rows=4 loops=1)
                                       Index Cond: (movie_id = t2.id)
                           ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=4)
                                 Index Cond: (id = mc2.company_id)
                     ->  Index Scan using title_pkey on title t1  (cost=0.43..0.51 rows=1 width=25) (actual time=0.003..0.003 rows=1 loops=4)
                           Index Cond: (id = mc1.movie_id)
               ->  Index Scan using kind_type_pkey on kind_type kt1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=4)
                     Index Cond: (id = t1.kind_id)
                     Filter: ((kind)::text = 'tv series'::text)
         ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..0.51 rows=1 width=14) (actual time=0.005..0.006 rows=2 loops=4)
               Index Cond: (movie_id = mc2.movie_id)
               Filter: ((info)::text < '3.0'::text)
               Rows Removed by Filter: 1
 Planning Time: 92.459 ms
 Execution Time: 47.160 ms
(69 rows)

SET
                                                                                                                 QUERY PLAN                                                                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3851.97..3851.98 rows=1 width=192) (actual time=35.993..35.993 rows=1 loops=1)
   ->  Nested Loop  (cost=875.97..3851.96 rows=1 width=84) (actual time=10.038..35.935 rows=114 loops=1)
         ->  Nested Loop  (cost=875.55..3851.51 rows=1 width=69) (actual time=10.030..35.559 rows=131 loops=1)
               ->  Nested Loop  (cost=875.12..3850.90 rows=1 width=77) (actual time=10.023..35.388 rows=44 loops=1)
                     ->  Nested Loop  (cost=874.70..3850.46 rows=1 width=62) (actual time=10.010..35.223 rows=44 loops=1)
                           ->  Nested Loop  (cost=874.27..3849.79 rows=1 width=70) (actual time=10.004..35.038 rows=19 loops=1)
                                 ->  Nested Loop  (cost=874.14..3849.63 rows=1 width=74) (actual time=9.198..34.996 rows=27 loops=1)
                                       Join Filter: (it2.id = mi_idx2.info_type_id)
                                       Rows Removed by Join Filter: 1170
                                       ->  Nested Loop  (cost=873.71..3841.45 rows=15 width=68) (actual time=5.903..32.427 rows=851 loops=1)
                                             ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..14.12 rows=1 width=4) (actual time=0.017..0.019 rows=1 loops=1)
                                                   Filter: ((info)::text = 'rating'::text)
                                                   Rows Removed by Filter: 112
                                             ->  Hash Join  (cost=873.57..3827.18 rows=15 width=64) (actual time=5.885..32.296 rows=851 loops=1)
                                                   Hash Cond: (t1.kind_id = kt1.id)
                                                   ->  Nested Loop  (cost=872.46..3825.83 rows=54 width=68) (actual time=5.848..32.081 rows=851 loops=1)
                                                         Join Filter: (ml.movie_id = t1.id)
                                                         ->  Nested Loop  (cost=872.03..3794.27 rows=54 width=43) (actual time=5.842..30.315 rows=851 loops=1)
                                                               ->  Hash Join  (cost=871.60..3239.76 rows=132 width=18) (actual time=5.807..20.110 rows=2064 loops=1)
                                                                     Hash Cond: (mi_idx1.info_type_id = it1.id)
                                                                     ->  Merge Join  (cost=869.17..3196.60 rows=14958 width=22) (actual time=5.779..19.432 rows=6192 loops=1)
                                                                           Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43820.38 rows=1380035 width=14) (actual time=0.008..8.183 rows=63901 loops=1)
                                                                           ->  Sort  (cost=868.72..881.22 rows=5000 width=8) (actual time=5.749..6.066 rows=6443 loops=1)
                                                                                 Sort Key: ml.movie_id
                                                                                 Sort Method: quicksort  Memory: 205kB
                                                                                 ->  Hash Join  (cost=1.29..561.53 rows=5000 width=8) (actual time=0.041..5.235 rows=2315 loops=1)
                                                                                       Hash Cond: (ml.link_type_id = lt.id)
                                                                                       ->  Seq Scan on movie_link ml  (cost=0.00..462.97 rows=29997 width=12) (actual time=0.003..2.827 rows=29997 loops=1)
                                                                                       ->  Hash  (cost=1.25..1.25 rows=3 width=4) (actual time=0.021..0.021 rows=2 loops=1)
                                                                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                             ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=3 width=4) (actual time=0.016..0.019 rows=2 loops=1)
                                                                                                   Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                                   Rows Removed by Filter: 16
                                                                     ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=1)
                                                                                 Filter: ((info)::text = 'rating'::text)
                                                                                 Rows Removed by Filter: 112
                                                               ->  Index Scan using title_pkey on title t2  (cost=0.43..4.20 rows=1 width=25) (actual time=0.005..0.005 rows=0 loops=2064)
                                                                     Index Cond: (id = ml.linked_movie_id)
                                                                     Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                                                     Rows Removed by Filter: 1
                                                         ->  Index Scan using title_pkey on title t1  (cost=0.43..0.57 rows=1 width=25) (actual time=0.002..0.002 rows=1 loops=851)
                                                               Index Cond: (id = mi_idx1.movie_id)
                                                   ->  Hash  (cost=1.09..1.09 rows=2 width=4) (actual time=0.016..0.016 rows=2 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on kind_type kt1  (cost=0.00..1.09 rows=2 width=4) (actual time=0.009..0.010 rows=2 loops=1)
                                                               Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                                                               Rows Removed by Filter: 5
                                       ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..0.53 rows=1 width=14) (actual time=0.002..0.003 rows=1 loops=851)
                                             Index Cond: (movie_id = t2.id)
                                             Filter: ((info)::text < '3.5'::text)
                                             Rows Removed by Filter: 2
                                 ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=27)
                                       Index Cond: (id = t2.kind_id)
                                       Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                                       Rows Removed by Filter: 0
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.62 rows=5 width=8) (actual time=0.007..0.009 rows=2 loops=19)
                                 Index Cond: (movie_id = t2.id)
                     ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.003..0.003 rows=1 loops=44)
                           Index Cond: (id = mc2.company_id)
               ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.002..0.003 rows=3 loops=44)
                     Index Cond: (movie_id = t1.id)
         ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.003..0.003 rows=1 loops=131)
               Index Cond: (id = mc1.company_id)
               Filter: ((country_code)::text <> '[us]'::text)
               Rows Removed by Filter: 0
 Planning Time: 89.472 ms
 Execution Time: 36.272 ms
(70 rows)

SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16579.47..16579.48 rows=1 width=32) (actual time=227.848..227.848 rows=1 loops=1)
   ->  Nested Loop  (cost=7.61..16579.31 rows=65 width=17) (actual time=6.839..227.774 rows=206 loops=1)
         Join Filter: (t.id = mi.movie_id)
         ->  Nested Loop  (cost=7.18..16269.29 rows=174 width=25) (actual time=5.097..129.638 rows=2235 loops=1)
               ->  Nested Loop  (cost=6.75..16055.56 rows=438 width=4) (actual time=3.613..59.847 rows=12951 loops=1)
                     ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=1.203..21.989 rows=30 loops=1)
                           Filter: ((keyword)::text ~~ '%sequel%'::text)
                           Rows Removed by Filter: 134140
                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1030.04 rows=299 width=8) (actual time=0.101..1.212 rows=432 loops=30)
                           Recheck Cond: (keyword_id = k.id)
                           Heap Blocks: exact=6979
                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.062..0.062 rows=432 loops=30)
                                 Index Cond: (keyword_id = k.id)
               ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.005..0.005 rows=0 loops=12951)
                     Index Cond: (id = mk.movie_id)
                     Filter: (production_year > 2005)
                     Rows Removed by Filter: 1
         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.77 rows=1 width=4) (actual time=0.041..0.044 rows=0 loops=2235)
               Index Cond: (movie_id = mk.movie_id)
               Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German}'::text[]))
               Rows Removed by Filter: 45
 Planning Time: 1.825 ms
 Execution Time: 227.946 ms
(23 rows)

SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16369.03..16369.04 rows=1 width=32) (actual time=147.625..147.625 rows=1 loops=1)
   ->  Nested Loop  (cost=7.61..16369.03 rows=1 width=17) (actual time=10.962..147.612 rows=5 loops=1)
         Join Filter: (t.id = mi.movie_id)
         ->  Nested Loop  (cost=7.18..16269.29 rows=68 width=25) (actual time=5.459..126.555 rows=405 loops=1)
               ->  Nested Loop  (cost=6.75..16055.56 rows=438 width=4) (actual time=3.718..59.665 rows=12951 loops=1)
                     ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=1.337..22.330 rows=30 loops=1)
                           Filter: ((keyword)::text ~~ '%sequel%'::text)
                           Rows Removed by Filter: 134140
                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1030.04 rows=299 width=8) (actual time=0.099..1.196 rows=432 loops=30)
                           Recheck Cond: (keyword_id = k.id)
                           Heap Blocks: exact=6979
                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.060..0.060 rows=432 loops=30)
                                 Index Cond: (keyword_id = k.id)
               ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.005..0.005 rows=0 loops=12951)
                     Index Cond: (id = mk.movie_id)
                     Filter: (production_year > 2010)
                     Rows Removed by Filter: 1
         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.45 rows=1 width=4) (actual time=0.051..0.052 rows=0 loops=405)
               Index Cond: (movie_id = mk.movie_id)
               Filter: ((info)::text = 'Bulgaria'::text)
               Rows Removed by Filter: 63
 Planning Time: 1.957 ms
 Execution Time: 147.738 ms
(23 rows)

SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16842.39..16842.40 rows=1 width=32) (actual time=391.151..391.151 rows=1 loops=1)
   ->  Nested Loop  (cost=7.61..16840.96 rows=570 width=17) (actual time=4.071..390.122 rows=7250 loops=1)
         Join Filter: (t.id = mi.movie_id)
         ->  Nested Loop  (cost=7.18..16269.29 rows=301 width=25) (actual time=3.797..121.495 rows=7874 loops=1)
               ->  Nested Loop  (cost=6.75..16055.56 rows=438 width=4) (actual time=3.772..56.187 rows=12951 loops=1)
                     ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=1.363..21.976 rows=30 loops=1)
                           Filter: ((keyword)::text ~~ '%sequel%'::text)
                           Rows Removed by Filter: 134140
                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1030.04 rows=299 width=8) (actual time=0.102..1.085 rows=432 loops=30)
                           Recheck Cond: (keyword_id = k.id)
                           Heap Blocks: exact=6979
                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.062..0.062 rows=432 loops=30)
                                 Index Cond: (keyword_id = k.id)
               ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.005..0.005 rows=1 loops=12951)
                     Index Cond: (id = mk.movie_id)
                     Filter: (production_year > 1990)
                     Rows Removed by Filter: 0
         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=4) (actual time=0.029..0.034 rows=1 loops=7874)
               Index Cond: (movie_id = mk.movie_id)
               Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,USA,American}'::text[]))
               Rows Removed by Filter: 35
 Planning Time: 2.144 ms
 Execution Time: 391.253 ms
(23 rows)

SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16288.57..16288.58 rows=1 width=64) (actual time=163.224..163.224 rows=1 loops=1)
   ->  Nested Loop  (cost=7.61..16288.56 rows=2 width=23) (actual time=6.176..163.049 rows=740 loops=1)
         Join Filter: (mi_idx.movie_id = t.id)
         ->  Nested Loop  (cost=7.18..16286.56 rows=4 width=14) (actual time=3.811..120.365 rows=5820 loops=1)
               Join Filter: (mi_idx.info_type_id = it.id)
               Rows Removed by Join Filter: 2613
               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.011..0.013 rows=1 loops=1)
                     Filter: ((info)::text = 'rating'::text)
                     Rows Removed by Filter: 112
               ->  Nested Loop  (cost=7.18..16278.01 rows=491 width=18) (actual time=3.798..119.229 rows=8433 loops=1)
                     ->  Nested Loop  (cost=6.75..16055.56 rows=438 width=4) (actual time=3.775..64.356 rows=12951 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=1.356..22.567 rows=30 loops=1)
                                 Filter: ((keyword)::text ~~ '%sequel%'::text)
                                 Rows Removed by Filter: 134140
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1030.04 rows=299 width=8) (actual time=0.102..1.343 rows=432 loops=30)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=6979
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.062..0.062 rows=432 loops=30)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=14) (actual time=0.004..0.004 rows=1 loops=12951)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((info)::text > '5.0'::text)
                           Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.007..0.007 rows=0 loops=5820)
               Index Cond: (id = mk.movie_id)
               Filter: (production_year > 2005)
               Rows Removed by Filter: 1
 Planning Time: 2.426 ms
 Execution Time: 163.360 ms
(29 rows)

SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16281.03..16281.04 rows=1 width=64) (actual time=91.812..91.812 rows=1 loops=1)
   ->  Nested Loop  (cost=7.61..16281.02 rows=1 width=23) (actual time=15.028..91.799 rows=6 loops=1)
         Join Filter: (mi_idx.movie_id = t.id)
         ->  Nested Loop  (cost=7.18..16280.52 rows=1 width=14) (actual time=13.197..91.632 rows=21 loops=1)
               Join Filter: (mi_idx.info_type_id = it.id)
               Rows Removed by Join Filter: 285
               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.012..0.014 rows=1 loops=1)
                     Filter: ((info)::text = 'rating'::text)
                     Rows Removed by Filter: 112
               ->  Nested Loop  (cost=7.18..16278.01 rows=8 width=18) (actual time=4.115..91.582 rows=306 loops=1)
                     ->  Nested Loop  (cost=6.75..16055.56 rows=438 width=4) (actual time=3.761..50.906 rows=12951 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=1.377..20.626 rows=30 loops=1)
                                 Filter: ((keyword)::text ~~ '%sequel%'::text)
                                 Rows Removed by Filter: 134140
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1030.04 rows=299 width=8) (actual time=0.095..0.965 rows=432 loops=30)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=6979
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.058..0.058 rows=432 loops=30)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=14) (actual time=0.003..0.003 rows=0 loops=12951)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((info)::text > '9.0'::text)
                           Rows Removed by Filter: 2
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.007..0.007 rows=0 loops=21)
               Index Cond: (id = mk.movie_id)
               Filter: (production_year > 2010)
               Rows Removed by Filter: 1
 Planning Time: 2.113 ms
 Execution Time: 91.934 ms
(29 rows)

SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16297.85..16297.86 rows=1 width=64) (actual time=131.244..131.245 rows=1 loops=1)
   ->  Nested Loop  (cost=7.61..16297.83 rows=5 width=23) (actual time=3.459..130.342 rows=4700 loops=1)
         Join Filter: (mi_idx.movie_id = t.id)
         ->  Nested Loop  (cost=7.18..16294.33 rows=7 width=14) (actual time=3.423..82.959 rows=8092 loops=1)
               Join Filter: (mi_idx.info_type_id = it.id)
               Rows Removed by Join Filter: 6507
               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.012..0.014 rows=1 loops=1)
                     Filter: ((info)::text = 'rating'::text)
                     Rows Removed by Filter: 112
               ->  Nested Loop  (cost=7.18..16282.39 rows=762 width=18) (actual time=3.409..81.359 rows=14599 loops=1)
                     ->  Nested Loop  (cost=6.75..16055.56 rows=438 width=4) (actual time=3.400..43.940 rows=12951 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=1.157..22.514 rows=30 loops=1)
                                 Filter: ((keyword)::text ~~ '%sequel%'::text)
                                 Rows Removed by Filter: 134140
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1030.04 rows=299 width=8) (actual time=0.095..0.664 rows=432 loops=30)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=6979
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.056..0.056 rows=432 loops=30)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=2 width=14) (actual time=0.002..0.003 rows=1 loops=12951)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((info)::text > '2.0'::text)
                           Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.006..0.006 rows=1 loops=8092)
               Index Cond: (id = mk.movie_id)
               Filter: (production_year > 1990)
               Rows Removed by Filter: 0
 Planning Time: 1.862 ms
 Execution Time: 131.363 ms
(29 rows)

SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=38740.79..38740.80 rows=1 width=32) (actual time=135.119..135.119 rows=1 loops=1)
   ->  Gather  (cost=38740.58..38740.79 rows=2 width=32) (actual time=135.048..135.762 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=37740.58..37740.59 rows=1 width=32) (actual time=132.566..132.566 rows=1 loops=3)
               ->  Hash Join  (cost=5.47..37740.50 rows=31 width=17) (actual time=132.564..132.564 rows=0 loops=3)
                     Hash Cond: (mi.info_type_id = it.id)
                     ->  Nested Loop  (cost=1.93..37736.88 rows=31 width=21) (actual time=132.563..132.563 rows=0 loops=3)
                           ->  Nested Loop  (cost=1.49..37442.96 rows=122 width=25) (actual time=132.562..132.562 rows=0 loops=3)
                                 ->  Hash Join  (cost=1.06..35104.78 rows=308 width=4) (actual time=132.562..132.562 rows=0 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..35097.06 rows=1231 width=8) (actual time=2.262..131.924 rows=8008 loops=3)
                                             Filter: (((note)::text ~~ '%(theatrical)%'::text) AND ((note)::text ~~ '%(France)%'::text))
                                             Rows Removed by Filter: 861701
                                       ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.019..0.020 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.013..0.013 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..7.59 rows=1 width=21) (never executed)
                                       Index Cond: (id = mc.movie_id)
                                       Filter: (production_year > 2005)
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.40 rows=1 width=8) (never executed)
                                 Index Cond: (movie_id = t.id)
                                 Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German}'::text[]))
                     ->  Hash  (cost=2.13..2.13 rows=113 width=4) (never executed)
                           ->  Seq Scan on info_type it  (cost=0.00..2.13 rows=113 width=4) (never executed)
 Planning Time: 2.408 ms
 Execution Time: 135.927 ms
(29 rows)

SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=38870.51..38870.52 rows=1 width=32) (actual time=128.166..128.166 rows=1 loops=1)
   ->  Gather  (cost=1002.07..38870.50 rows=2 width=17) (actual time=128.163..128.838 rows=0 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Nested Loop  (cost=2.07..37870.30 rows=1 width=17) (actual time=125.794..125.794 rows=0 loops=3)
               ->  Nested Loop  (cost=1.93..37870.14 rows=1 width=21) (actual time=125.793..125.793 rows=0 loops=3)
                     ->  Nested Loop  (cost=1.49..37866.79 rows=1 width=25) (actual time=125.793..125.793 rows=0 loops=3)
                           ->  Hash Join  (cost=1.06..37816.09 rows=6 width=4) (actual time=125.792..125.793 rows=0 loops=3)
                                 Hash Cond: (mc.company_type_id = ct.id)
                                 ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..37814.90 rows=25 width=8) (actual time=4.551..125.668 rows=473 loops=3)
                                       Filter: (((note)::text ~~ '%(VHS)%'::text) AND ((note)::text ~~ '%(USA)%'::text) AND ((note)::text ~~ '%(1994)%'::text))
                                       Rows Removed by Filter: 869237
                                 ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.016..0.016 rows=1 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=3)
                                             Filter: ((kind)::text = 'production companies'::text)
                                             Rows Removed by Filter: 3
                           ->  Index Scan using title_pkey on title t  (cost=0.43..8.45 rows=1 width=21) (never executed)
                                 Index Cond: (id = mc.movie_id)
                                 Filter: (production_year > 2010)
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..3.33 rows=2 width=8) (never executed)
                           Index Cond: (movie_id = t.id)
                           Filter: ((info)::text = ANY ('{USA,America}'::text[]))
               ->  Index Only Scan using info_type_pkey on info_type it  (cost=0.14..0.16 rows=1 width=4) (never executed)
                     Index Cond: (id = mi.info_type_id)
                     Heap Fetches: 0
 Planning Time: 2.092 ms
 Execution Time: 128.955 ms
(28 rows)

SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=88991.12..88991.13 rows=1 width=32) (actual time=188.448..188.448 rows=1 loops=1)
   ->  Gather  (cost=88990.90..88991.11 rows=2 width=32) (actual time=188.362..190.930 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=87990.90..87990.91 rows=1 width=32) (actual time=185.950..185.950 rows=1 loops=3)
               ->  Hash Join  (cost=5.47..87951.49 rows=15766 width=17) (actual time=118.435..185.902 rows=223 loops=3)
                     Hash Cond: (mi.info_type_id = it.id)
                     ->  Nested Loop  (cost=1.93..87905.00 rows=15766 width=21) (actual time=118.383..185.789 rows=223 loops=3)
                           ->  Nested Loop  (cost=1.49..61336.48 rows=12181 width=25) (actual time=118.311..165.862 rows=256 loops=3)
                                 ->  Hash Join  (cost=1.06..35481.01 rows=17705 width=4) (actual time=118.254..161.279 rows=266 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..35097.06 rows=70822 width=8) (actual time=0.044..154.595 rows=98543 loops=3)
                                             Filter: (((note)::text !~~ '%(TV)%'::text) AND ((note)::text ~~ '%(USA)%'::text))
                                             Rows Removed by Filter: 771167
                                       ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..1.46 rows=1 width=21) (actual time=0.017..0.017 rows=1 loops=798)
                                       Index Cond: (id = mc.movie_id)
                                       Filter: (production_year > 1990)
                                       Rows Removed by Filter: 0
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.16 rows=2 width=8) (actual time=0.069..0.078 rows=1 loops=767)
                                 Index Cond: (movie_id = t.id)
                                 Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,USA,American}'::text[]))
                                 Rows Removed by Filter: 10
                     ->  Hash  (cost=2.13..2.13 rows=113 width=4) (actual time=0.035..0.035 rows=113 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 12kB
                           ->  Seq Scan on info_type it  (cost=0.00..2.13 rows=113 width=4) (actual time=0.010..0.018 rows=113 loops=3)
 Planning Time: 2.130 ms
 Execution Time: 191.061 ms
(32 rows)

SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3848.64..3848.65 rows=1 width=96) (actual time=38.993..38.993 rows=1 loops=1)
   ->  Nested Loop  (cost=8.17..3848.63 rows=1 width=48) (actual time=4.712..38.980 rows=6 loops=1)
         ->  Nested Loop  (cost=7.74..3759.44 rows=195 width=37) (actual time=0.476..23.501 rows=1224 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.18..3749.50 rows=5 width=41) (actual time=0.451..15.918 rows=11 loops=1)
                     ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=20) (actual time=0.430..15.637 rows=14 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=20) (actual time=0.399..15.501 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'marvel-cinematic-universe'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=0.028..0.128 rows=14 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=12
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.017..0.017 rows=14 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.019..0.019 rows=1 loops=14)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2010)
                           Rows Removed by Filter: 0
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.020..0.667 rows=111 loops=11)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.012..0.012 rows=0 loops=1224)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ '%Downey%Robert%'::text)
               Rows Removed by Filter: 1
 Planning Time: 2.326 ms
 Execution Time: 39.125 ms
(26 rows)

SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=12284.11..12284.12 rows=1 width=96) (actual time=297.173..297.173 rows=1 loops=1)
   ->  Nested Loop  (cost=8.17..12284.10 rows=1 width=48) (actual time=31.449..297.149 rows=12 loops=1)
         ->  Nested Loop  (cost=7.74..12283.65 rows=1 width=37) (actual time=9.685..294.777 rows=383 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.18..12281.66 rows=1 width=41) (actual time=9.672..293.422 rows=36 loops=1)
                     ->  Nested Loop  (cost=6.75..12149.91 rows=270 width=20) (actual time=0.701..130.399 rows=35548 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..3632.40 rows=8 width=20) (actual time=0.105..29.875 rows=8 loops=1)
                                 Filter: ((keyword)::text = ANY ('{superhero,sequel,second-part,marvel-comics,based-on-comic,tv-special,fight,violence}'::text[]))
                                 Rows Removed by Filter: 134162
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1061.70 rows=299 width=8) (actual time=1.142..12.051 rows=4444 loops=8)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=23488
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.654..0.654 rows=4444 loops=8)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.004..0.004 rows=0 loops=35548)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2014)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.012..0.035 rows=11 loops=36)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.006..0.006 rows=0 loops=383)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ '%Downey%Robert%'::text)
               Rows Removed by Filter: 1
 Planning Time: 2.090 ms
 Execution Time: 297.293 ms
(26 rows)

SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3751.96..3751.97 rows=1 width=96) (actual time=11.586..11.586 rows=1 loops=1)
   ->  Nested Loop  (cost=8.17..3751.95 rows=1 width=48) (actual time=0.847..11.577 rows=2 loops=1)
         ->  Nested Loop  (cost=7.74..3751.49 rows=1 width=37) (actual time=0.491..11.379 rows=33 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.18..3749.51 rows=1 width=41) (actual time=0.464..11.252 rows=2 loops=1)
                     ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=20) (actual time=0.416..11.010 rows=14 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=20) (actual time=0.388..10.898 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'marvel-cinematic-universe'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=0.025..0.107 rows=14 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=12
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.014..0.014 rows=14 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.017..0.017 rows=0 loops=14)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2014)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.022..0.060 rows=16 loops=2)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.006..0.006 rows=0 loops=33)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ '%Downey%Robert%'::text)
               Rows Removed by Filter: 1
 Planning Time: 2.517 ms
 Execution Time: 11.717 ms
(26 rows)

SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=15053.68..15053.69 rows=1 width=96) (actual time=6820.297..6820.297 rows=1 loops=1)
   ->  Nested Loop  (cost=8.17..15053.68 rows=1 width=48) (actual time=189.931..6820.173 rows=88 loops=1)
         ->  Nested Loop  (cost=7.74..12573.66 rows=5422 width=37) (actual time=0.732..2552.329 rows=785477 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.18..12281.66 rows=147 width=41) (actual time=0.708..334.198 rows=14165 loops=1)
                     ->  Nested Loop  (cost=6.75..12149.91 rows=270 width=20) (actual time=0.684..138.927 rows=35548 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..3632.40 rows=8 width=20) (actual time=0.100..29.878 rows=8 loops=1)
                                 Filter: ((keyword)::text = ANY ('{superhero,sequel,second-part,marvel-comics,based-on-comic,tv-special,fight,violence}'::text[]))
                                 Rows Removed by Filter: 134162
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1061.70 rows=299 width=8) (actual time=1.139..12.913 rows=4444 loops=8)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=23488
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.652..0.652 rows=4444 loops=8)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.005..0.005 rows=0 loops=35548)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2000)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.008..0.147 rows=55 loops=14165)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.005..0.005 rows=0 loops=785477)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ '%Downey%Robert%'::text)
               Rows Removed by Filter: 1
 Planning Time: 1.993 ms
 Execution Time: 6820.416 ms
(26 rows)

SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4095.38..4095.39 rows=1 width=96) (actual time=25.259..25.259 rows=1 loops=1)
   ->  Nested Loop  (cost=8.17..4095.38 rows=1 width=48) (actual time=4.233..25.247 rows=6 loops=1)
         ->  Nested Loop  (cost=7.74..3785.26 rows=678 width=37) (actual time=0.472..15.302 rows=1224 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.18..3749.50 rows=18 width=41) (actual time=0.440..10.653 rows=11 loops=1)
                     ->  Nested Loop  (cost=6.75..3732.91 rows=34 width=20) (actual time=0.419..10.437 rows=14 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=20) (actual time=0.382..10.302 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'marvel-cinematic-universe'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1103.80 rows=299 width=8) (actual time=0.034..0.128 rows=14 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=12
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.021..0.021 rows=14 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.015..0.015 rows=1 loops=14)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2000)
                           Rows Removed by Filter: 0
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.016..0.403 rows=111 loops=11)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.008..0.008 rows=0 loops=1224)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ '%Downey%Robert%'::text)
               Rows Removed by Filter: 1
 Planning Time: 2.558 ms
 Execution Time: 25.387 ms
(26 rows)

SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=15080.79..15080.80 rows=1 width=96) (actual time=6882.402..6882.402 rows=1 loops=1)
   ->  Nested Loop  (cost=8.17..15040.12 rows=5422 width=48) (actual time=0.749..6705.016 rows=785477 loops=1)
         ->  Nested Loop  (cost=7.74..12573.66 rows=5422 width=37) (actual time=0.721..2565.500 rows=785477 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.18..12281.66 rows=147 width=41) (actual time=0.700..333.130 rows=14165 loops=1)
                     ->  Nested Loop  (cost=6.75..12149.91 rows=270 width=20) (actual time=0.676..138.162 rows=35548 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..3632.40 rows=8 width=20) (actual time=0.106..29.793 rows=8 loops=1)
                                 Filter: ((keyword)::text = ANY ('{superhero,sequel,second-part,marvel-comics,based-on-comic,tv-special,fight,violence}'::text[]))
                                 Rows Removed by Filter: 134162
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.75..1061.70 rows=299 width=8) (actual time=1.139..12.846 rows=4444 loops=8)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=23488
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.67 rows=299 width=0) (actual time=0.654..0.654 rows=4444 loops=8)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.005..0.005 rows=0 loops=35548)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2000)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.008..0.148 rows=55 loops=14165)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=19) (actual time=0.005..0.005 rows=1 loops=785477)
               Index Cond: (id = ci.person_id)
 Planning Time: 2.087 ms
 Execution Time: 6882.521 ms
(24 rows)

SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=13450.44..13450.45 rows=1 width=64) (actual time=1013.693..1013.693 rows=1 loops=1)
   ->  Nested Loop  (cost=41.24..13450.44 rows=1 width=32) (actual time=58.915..1013.661 rows=32 loops=1)
         ->  Nested Loop  (cost=41.10..13449.36 rows=1 width=36) (actual time=58.896..1013.570 rows=32 loops=1)
               Join Filter: (n.id = an.person_id)
               ->  Nested Loop  (cost=40.67..13448.87 rows=1 width=48) (actual time=58.871..1013.355 rows=14 loops=1)
                     Join Filter: (n.id = pi.person_id)
                     ->  Nested Loop  (cost=40.24..12494.38 rows=985 width=40) (actual time=0.403..863.785 rows=17559 loops=1)
                           ->  Nested Loop  (cost=39.81..8533.64 rows=8474 width=21) (actual time=0.377..305.368 rows=105262 loops=1)
                                 ->  Nested Loop  (cost=39.25..7243.89 rows=229 width=25) (actual time=0.346..38.597 rows=1467 loops=1)
                                       ->  Nested Loop  (cost=38.82..245.23 rows=1666 width=4) (actual time=0.312..2.572 rows=5186 loops=1)
                                             ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=4) (actual time=0.014..0.016 rows=1 loops=1)
                                                   Filter: ((link)::text = 'features'::text)
                                                   Rows Removed by Filter: 17
                                             ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..225.26 rows=1875 width=8) (actual time=0.297..1.593 rows=5186 loops=1)
                                                   Recheck Cond: (link_type_id = lt.id)
                                                   Heap Blocks: exact=132
                                                   ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.268..0.268 rows=5186 loops=1)
                                                         Index Cond: (link_type_id = lt.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..4.20 rows=1 width=21) (actual time=0.007..0.007 rows=0 loops=5186)
                                             Index Cond: (id = ml.linked_movie_id)
                                             Filter: ((production_year >= 1980) AND (production_year <= 1995))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..5.26 rows=37 width=8) (actual time=0.010..0.173 rows=72 loops=1467)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Scan using name_pkey on name n  (cost=0.43..0.47 rows=1 width=19) (actual time=0.005..0.005 rows=0 loops=105262)
                                 Index Cond: (id = ci.person_id)
                                 Filter: (((name_pcode_cf)::text >= 'A'::text) AND ((name_pcode_cf)::text <= 'F'::text) AND (((gender)::text = 'm'::text) OR (((gender)::text = 'f'::text) AND ((name)::text ~~ 'B%'::text))))
                                 Rows Removed by Filter: 1
                     ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..0.96 rows=1 width=8) (actual time=0.008..0.008 rows=0 loops=17559)
                           Index Cond: (person_id = ci.person_id)
                           Filter: ((note)::text = 'Volker Boehm'::text)
                           Rows Removed by Filter: 20
               ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.47 rows=2 width=4) (actual time=0.011..0.014 rows=2 loops=14)
                     Index Cond: (person_id = ci.person_id)
                     Filter: ((name)::text ~~ '%a%'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using info_type_pkey on info_type it  (cost=0.14..0.61 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=32)
               Index Cond: (id = pi.info_type_id)
               Filter: ((info)::text = 'mini biography'::text)
 Planning Time: 7.562 ms
 Execution Time: 1013.875 ms
(41 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=9049.69..9049.70 rows=1 width=64) (actual time=285.552..285.553 rows=1 loops=1)
   ->  Nested Loop  (cost=41.24..9049.68 rows=1 width=32) (actual time=12.853..285.532 rows=16 loops=1)
         ->  Nested Loop  (cost=41.10..9048.61 rows=1 width=36) (actual time=12.837..285.480 rows=16 loops=1)
               Join Filter: (n.id = an.person_id)
               ->  Nested Loop  (cost=40.67..9048.12 rows=1 width=48) (actual time=12.826..285.400 rows=8 loops=1)
                     Join Filter: (n.id = pi.person_id)
                     ->  Nested Loop  (cost=40.24..9005.48 rows=44 width=40) (actual time=0.615..276.902 rows=1076 loops=1)
                           ->  Nested Loop  (cost=39.81..8134.43 rows=1894 width=21) (actual time=0.376..112.608 rows=33415 loops=1)
                                 ->  Nested Loop  (cost=39.25..7243.89 rows=51 width=25) (actual time=0.346..35.944 rows=435 loops=1)
                                       ->  Nested Loop  (cost=38.82..245.23 rows=1666 width=4) (actual time=0.315..2.270 rows=5186 loops=1)
                                             ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=4) (actual time=0.011..0.014 rows=1 loops=1)
                                                   Filter: ((link)::text = 'features'::text)
                                                   Rows Removed by Filter: 17
                                             ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..225.26 rows=1875 width=8) (actual time=0.302..1.507 rows=5186 loops=1)
                                                   Recheck Cond: (link_type_id = lt.id)
                                                   Heap Blocks: exact=132
                                                   ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.274..0.274 rows=5186 loops=1)
                                                         Index Cond: (link_type_id = lt.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..4.20 rows=1 width=21) (actual time=0.006..0.006 rows=0 loops=5186)
                                             Index Cond: (id = ml.linked_movie_id)
                                             Filter: ((production_year >= 1980) AND (production_year <= 1984))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..17.09 rows=37 width=8) (actual time=0.010..0.167 rows=77 loops=435)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.005..0.005 rows=0 loops=33415)
                                 Index Cond: (id = ci.person_id)
                                 Filter: (((name_pcode_cf)::text ~~ 'D%'::text) AND ((gender)::text = 'm'::text))
                                 Rows Removed by Filter: 1
                     ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..0.96 rows=1 width=8) (actual time=0.008..0.008 rows=0 loops=1076)
                           Index Cond: (person_id = ci.person_id)
                           Filter: ((note)::text = 'Volker Boehm'::text)
                           Rows Removed by Filter: 16
               ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.47 rows=2 width=4) (actual time=0.006..0.008 rows=2 loops=8)
                     Index Cond: (person_id = ci.person_id)
                     Filter: ((name)::text ~~ '%a%'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using info_type_pkey on info_type it  (cost=0.14..0.61 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=16)
               Index Cond: (id = pi.info_type_id)
               Filter: ((info)::text = 'mini biography'::text)
 Planning Time: 7.440 ms
 Execution Time: 285.733 ms
(41 rows)

SET
                                                                                                             QUERY PLAN                                                                                                              
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=58025.67..58025.68 rows=1 width=64) (actual time=3323.648..3323.648 rows=1 loops=1)
   ->  Nested Loop  (cost=2495.15..58025.64 rows=6 width=111) (actual time=20.138..3080.200 rows=68185 loops=1)
         ->  Hash Join  (cost=2494.72..58021.06 rows=10 width=119) (actual time=20.104..2828.178 rows=109842 loops=1)
               Hash Cond: (ml.link_type_id = lt.id)
               ->  Nested Loop  (cost=2493.40..58019.61 rows=44 width=123) (actual time=20.061..2804.740 rows=127027 loops=1)
                     ->  Nested Loop  (cost=2493.11..57531.16 rows=1426 width=115) (actual time=20.027..1172.527 rows=1618304 loops=1)
                           ->  Nested Loop  (cost=2492.55..57287.95 rows=14 width=123) (actual time=20.001..661.985 rows=12595 loops=1)
                                 ->  Nested Loop  (cost=2492.12..56107.25 rows=1430 width=104) (actual time=19.894..413.707 rows=72979 loops=1)
                                       ->  Nested Loop  (cost=2491.69..55264.82 rows=717 width=100) (actual time=19.833..189.492 rows=84183 loops=1)
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.015..0.024 rows=1 loops=1)
                                                   Filter: ((info)::text = 'mini biography'::text)
                                                   Rows Removed by Filter: 112
                                             ->  Bitmap Heap Scan on person_info pi  (cost=2491.69..55225.59 rows=3682 width=104) (actual time=19.815..180.963 rows=84183 loops=1)
                                                   Recheck Cond: (info_type_id = it.id)
                                                   Filter: (note IS NOT NULL)
                                                   Rows Removed by Filter: 1
                                                   Heap Blocks: exact=40537
                                                   ->  Bitmap Index Scan on info_type_id_person_info  (cost=0.00..2490.77 rows=134712 width=0) (actual time=11.469..11.469 rows=84184 loops=1)
                                                         Index Cond: (info_type_id = it.id)
                                       ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..1.15 rows=2 width=4) (actual time=0.002..0.002 rows=1 loops=84183)
                                             Index Cond: (person_id = pi.person_id)
                                             Filter: ((name IS NOT NULL) AND (((name)::text ~~ '%a%'::text) OR ((name)::text ~~ 'A%'::text)))
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using name_pkey on name n  (cost=0.43..0.83 rows=1 width=19) (actual time=0.003..0.003 rows=0 loops=72979)
                                       Index Cond: (id = an.person_id)
                                       Filter: (((name_pcode_cf)::text >= 'A'::text) AND ((name_pcode_cf)::text <= 'F'::text) AND (((gender)::text = 'm'::text) OR (((gender)::text = 'f'::text) AND ((name)::text ~~ 'A%'::text))))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using person_id_cast_info on cast_info ci  (cost=0.56..12.33 rows=504 width=8) (actual time=0.006..0.027 rows=128 loops=12595)
                                 Index Cond: (person_id = n.id)
                     ->  Index Scan using linked_movie_id_movie_link on movie_link ml  (cost=0.29..0.32 rows=2 width=8) (actual time=0.001..0.001 rows=0 loops=1618304)
                           Index Cond: (linked_movie_id = ci.movie_id)
               ->  Hash  (cost=1.27..1.27 rows=4 width=4) (actual time=0.018..0.018 rows=4 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                     ->  Seq Scan on link_type lt  (cost=0.00..1.27 rows=4 width=4) (actual time=0.010..0.013 rows=4 loops=1)
                           Filter: ((link)::text = ANY ('{references,"referenced in",features,"featured in"}'::text[]))
                           Rows Removed by Filter: 14
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.46 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=109842)
               Index Cond: (id = ci.movie_id)
               Filter: ((production_year >= 1980) AND (production_year <= 2010))
               Rows Removed by Filter: 0
 Planning Time: 7.582 ms
 Execution Time: 3324.046 ms
(42 rows)

SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=42962.65..42962.66 rows=1 width=64) (actual time=1449.343..1449.343 rows=1 loops=1)
   ->  Gather  (cost=5775.17..42962.64 rows=1 width=33) (actual time=125.027..1462.324 rows=62 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Nested Loop  (cost=4775.17..41962.54 rows=1 width=33) (actual time=139.909..1446.584 rows=21 loops=3)
               ->  Nested Loop  (cost=4774.74..41958.79 rows=5 width=41) (actual time=16.786..1431.786 rows=5793 loops=3)
                     ->  Hash Join  (cost=4774.31..41956.44 rows=2 width=21) (actual time=16.752..1419.235 rows=2479 loops=3)
                           Hash Cond: (ci.role_id = rt.id)
                           ->  Nested Loop  (cost=4773.15..41955.18 rows=27 width=25) (actual time=16.650..1418.231 rows=6533 loops=3)
                                 ->  Nested Loop  (cost=4772.59..41333.61 rows=332 width=25) (actual time=16.413..241.199 rows=16109 loops=3)
                                       ->  Parallel Hash Join  (cost=4772.16..39899.83 rows=332 width=4) (actual time=16.370..155.832 rows=16109 loops=3)
                                             Hash Cond: (mc.company_id = cn.id)
                                             ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..35097.06 rows=11664 width=8) (actual time=0.059..133.735 rows=16299 loops=3)
                                                   Filter: (((note)::text ~~ '%(Japan)%'::text) AND ((note)::text !~~ '%(USA)%'::text))
                                                   Rows Removed by Filter: 853411
                                             ->  Parallel Hash  (cost=4722.92..4722.92 rows=3939 width=4) (actual time=16.147..16.147 rows=2251 loops=3)
                                                   Buckets: 8192  Batches: 1  Memory Usage: 384kB
                                                   ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=3939 width=4) (actual time=0.019..15.493 rows=2251 loops=3)
                                                         Filter: ((country_code)::text = '[jp]'::text)
                                                         Rows Removed by Filter: 76082
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..4.32 rows=1 width=21) (actual time=0.005..0.005 rows=1 loops=48328)
                                             Index Cond: (id = mc.movie_id)
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.86 rows=1 width=12) (actual time=0.070..0.073 rows=0 loops=48328)
                                       Index Cond: (movie_id = t.id)
                                       Filter: ((note)::text = '(voice: English version)'::text)
                                       Rows Removed by Filter: 32
                           ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.019..0.019 rows=1 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                 ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.014..0.015 rows=1 loops=3)
                                       Filter: ((role)::text = 'actress'::text)
                                       Rows Removed by Filter: 11
                     ->  Index Scan using person_id_aka_name on aka_name an1  (cost=0.42..1.16 rows=2 width=20) (actual time=0.004..0.005 rows=2 loops=7438)
                           Index Cond: (person_id = ci.person_id)
               ->  Index Scan using name_pkey on name n1  (cost=0.43..0.75 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=17379)
                     Index Cond: (id = an1.person_id)
                     Filter: (((name)::text ~~ '%Yo%'::text) AND ((name)::text !~~ '%Yu%'::text))
                     Rows Removed by Filter: 1
 Planning Time: 4.785 ms
 Execution Time: 1462.555 ms
(39 rows)

SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=44409.00..44409.01 rows=1 width=64) (actual time=172.508..172.508 rows=1 loops=1)
   ->  Nested Loop  (cost=1002.40..44409.00 rows=1 width=33) (actual time=170.722..172.493 rows=6 loops=1)
         ->  Nested Loop  (cost=1002.27..44408.82 rows=1 width=37) (actual time=170.695..172.458 rows=6 loops=1)
               ->  Nested Loop  (cost=1001.84..44408.07 rows=1 width=45) (actual time=169.940..171.583 rows=171 loops=1)
                     ->  Nested Loop  (cost=1001.42..44406.90 rows=1 width=25) (actual time=169.895..170.635 rows=104 loops=1)
                           Join Filter: (t.id = ci.movie_id)
                           ->  Gather  (cost=1000.85..44264.09 rows=1 width=25) (actual time=169.841..169.999 rows=4 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Nested Loop  (cost=0.85..43263.99 rows=1 width=25) (actual time=134.404..167.409 rows=1 loops=3)
                                       ->  Nested Loop  (cost=0.42..43166.10 rows=12 width=4) (actual time=0.090..138.817 rows=2832 loops=3)
                                             ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..40532.74 rows=434 width=8) (actual time=0.057..129.317 rows=2856 loops=3)
                                                   Filter: (((note)::text ~~ '%(Japan)%'::text) AND ((note)::text !~~ '%(USA)%'::text) AND (((note)::text ~~ '%(2006)%'::text) OR ((note)::text ~~ '%(2007)%'::text)))
                                                   Rows Removed by Filter: 866853
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..6.07 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=8569)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((country_code)::text = '[jp]'::text)
                                                   Rows Removed by Filter: 0
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..8.13 rows=1 width=21) (actual time=0.010..0.010 rows=0 loops=8495)
                                             Index Cond: (id = mc.movie_id)
                                             Filter: ((production_year >= 2006) AND (production_year <= 2007) AND (((title)::text ~~ 'One Piece%'::text) OR ((title)::text ~~ 'Dragon Ball Z%'::text)))
                                             Rows Removed by Filter: 1
                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..142.80 rows=1 width=12) (actual time=0.052..0.191 rows=26 loops=4)
                                 Index Cond: (movie_id = mc.movie_id)
                                 Filter: ((note)::text = '(voice: English version)'::text)
                                 Rows Removed by Filter: 17
                     ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..1.16 rows=2 width=20) (actual time=0.008..0.009 rows=2 loops=104)
                           Index Cond: (person_id = ci.person_id)
               ->  Index Scan using name_pkey on name n  (cost=0.43..0.75 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=171)
                     Index Cond: (id = an.person_id)
                     Filter: (((name)::text ~~ '%Yo%'::text) AND ((name)::text !~~ '%Yu%'::text))
                     Rows Removed by Filter: 1
         ->  Index Scan using role_type_pkey on role_type rt  (cost=0.14..0.16 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=6)
               Index Cond: (id = ci.role_id)
               Filter: ((role)::text = 'actress'::text)
 Planning Time: 4.795 ms
 Execution Time: 172.828 ms
(37 rows)

SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=529735.54..529735.55 rows=1 width=64) (actual time=3400.184..3400.184 rows=1 loops=1)
   ->  Gather  (cost=529735.32..529735.53 rows=2 width=64) (actual time=3398.888..3499.562 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=528735.32..528735.33 rows=1 width=64) (actual time=3395.685..3395.685 rows=1 loops=3)
               ->  Parallel Hash Join  (cost=483413.83..513803.80 rows=2986304 width=33) (actual time=3123.495..3291.564 rows=829204 loops=3)
                     Hash Cond: (a1.person_id = n1.id)
                     ->  Parallel Seq Scan on aka_name a1  (cost=0.00..15151.60 rows=375560 width=20) (actual time=0.027..39.081 rows=300448 loops=3)
                     ->  Parallel Hash  (cost=459853.10..459853.10 rows=1218458 width=25) (actual time=3024.918..3024.918 rows=656886 loops=3)
                           Buckets: 65536  Batches: 64  Memory Usage: 2848kB
                           ->  Parallel Hash Join  (cost=345158.80..459853.10 rows=1218458 width=25) (actual time=2688.202..2888.712 rows=656886 loops=3)
                                 Hash Cond: (ci.person_id = n1.id)
                                 ->  Hash Join  (cost=243691.57..334123.41 rows=1218458 width=21) (actual time=1894.751..2186.587 rows=656886 loops=3)
                                       Hash Cond: (t.id = ci.movie_id)
                                       ->  Parallel Hash Join  (cost=44358.48..110382.12 rows=395644 width=25) (actual time=592.001..796.117 rows=384599 loops=3)
                                             Hash Cond: (t.id = mc.movie_id)
                                             ->  Parallel Seq Scan on title t  (cost=0.00..46532.63 rows=1053463 width=21) (actual time=0.018..114.814 rows=842771 loops=3)
                                             ->  Parallel Hash  (cost=37866.93..37866.93 rows=395644 width=4) (actual time=297.850..297.850 rows=384599 loops=3)
                                                   Buckets: 131072  Batches: 16  Memory Usage: 3904kB
                                                   ->  Parallel Hash Join  (cost=5351.77..37866.93 rows=395644 width=4) (actual time=25.300..245.171 rows=384599 loops=3)
                                                         Hash Cond: (mc.company_id = cn.id)
                                                         ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=8) (actual time=0.014..78.205 rows=869710 loops=3)
                                                         ->  Parallel Hash  (cost=4722.92..4722.92 rows=50308 width=4) (actual time=24.934..24.934 rows=28281 loops=3)
                                                               Buckets: 131072  Batches: 1  Memory Usage: 4384kB
                                                               ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=50308 width=4) (actual time=0.016..17.047 rows=28281 loops=3)
                                                                     Filter: ((country_code)::text = '[us]'::text)
                                                                     Rows Removed by Filter: 50051
                                       ->  Hash  (cost=149779.57..149779.57 rows=3020362 width=8) (actual time=1105.809..1105.809 rows=2728943 loops=3)
                                             Buckets: 131072  Batches: 64  Memory Usage: 2675kB
                                             ->  Nested Loop  (cost=0.56..149779.57 rows=3020362 width=8) (actual time=0.047..726.829 rows=2728943 loops=3)
                                                   ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.017..0.021 rows=1 loops=3)
                                                         Filter: ((role)::text = 'writer'::text)
                                                         Rows Removed by Filter: 11
                                                   ->  Index Scan using role_id_cast_info on cast_info ci  (cost=0.56..116829.02 rows=3294940 width=12) (actual time=0.026..472.775 rows=2728943 loops=3)
                                                         Index Cond: (role_id = rt.id)
                                 ->  Parallel Hash  (cost=72977.55..72977.55 rows=1736455 width=4) (actual time=352.062..352.062 rows=1389164 loops=3)
                                       Buckets: 131072  Batches: 64  Memory Usage: 3616kB
                                       ->  Parallel Seq Scan on name n1  (cost=0.00..72977.55 rows=1736455 width=4) (actual time=0.025..170.736 rows=1389164 loops=3)
 Planning Time: 4.246 ms
 Execution Time: 3500.037 ms
(40 rows)

SET
                                                                                               QUERY PLAN                                                                                               
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=529735.54..529735.55 rows=1 width=64) (actual time=1740.469..1740.469 rows=1 loops=1)
   ->  Gather  (cost=529735.32..529735.53 rows=2 width=64) (actual time=1737.776..1814.908 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=528735.32..528735.33 rows=1 width=64) (actual time=1735.303..1735.304 rows=1 loops=3)
               ->  Parallel Hash Join  (cost=483413.83..513803.80 rows=2986304 width=33) (actual time=1676.629..1721.737 rows=107668 loops=3)
                     Hash Cond: (an1.person_id = n1.id)
                     ->  Parallel Seq Scan on aka_name an1  (cost=0.00..15151.60 rows=375560 width=20) (actual time=0.026..39.329 rows=300448 loops=3)
                     ->  Parallel Hash  (cost=459853.10..459853.10 rows=1218458 width=25) (actual time=1578.894..1578.894 rows=95179 loops=3)
                           Buckets: 65536  Batches: 64  Memory Usage: 992kB
                           ->  Parallel Hash Join  (cost=345158.80..459853.10 rows=1218458 width=25) (actual time=1454.335..1557.663 rows=95179 loops=3)
                                 Hash Cond: (ci.person_id = n1.id)
                                 ->  Hash Join  (cost=243691.57..334123.41 rows=1218458 width=21) (actual time=902.798..1071.305 rows=95179 loops=3)
                                       Hash Cond: (t.id = ci.movie_id)
                                       ->  Parallel Hash Join  (cost=44358.48..110382.12 rows=395644 width=25) (actual time=595.191..799.343 rows=384599 loops=3)
                                             Hash Cond: (t.id = mc.movie_id)
                                             ->  Parallel Seq Scan on title t  (cost=0.00..46532.63 rows=1053463 width=21) (actual time=0.021..110.828 rows=842771 loops=3)
                                             ->  Parallel Hash  (cost=37866.93..37866.93 rows=395644 width=4) (actual time=305.692..305.692 rows=384599 loops=3)
                                                   Buckets: 131072  Batches: 16  Memory Usage: 3904kB
                                                   ->  Parallel Hash Join  (cost=5351.77..37866.93 rows=395644 width=4) (actual time=26.310..246.506 rows=384599 loops=3)
                                                         Hash Cond: (mc.company_id = cn.id)
                                                         ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=8) (actual time=0.015..78.128 rows=869710 loops=3)
                                                         ->  Parallel Hash  (cost=4722.92..4722.92 rows=50308 width=4) (actual time=25.930..25.930 rows=28281 loops=3)
                                                               Buckets: 131072  Batches: 1  Memory Usage: 4384kB
                                                               ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=50308 width=4) (actual time=0.030..18.002 rows=28281 loops=3)
                                                                     Filter: ((country_code)::text = '[us]'::text)
                                                                     Rows Removed by Filter: 50051
                                       ->  Hash  (cost=149779.57..149779.57 rows=3020362 width=8) (actual time=116.754..116.755 rows=276403 loops=3)
                                             Buckets: 131072  Batches: 64  Memory Usage: 1193kB
                                             ->  Nested Loop  (cost=0.56..149779.57 rows=3020362 width=8) (actual time=0.066..78.124 rows=276403 loops=3)
                                                   ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.019..0.021 rows=1 loops=3)
                                                         Filter: ((role)::text = 'costume designer'::text)
                                                         Rows Removed by Filter: 11
                                                   ->  Index Scan using role_id_cast_info on cast_info ci  (cost=0.56..116829.02 rows=3294940 width=12) (actual time=0.043..52.382 rows=276403 loops=3)
                                                         Index Cond: (role_id = rt.id)
                                 ->  Parallel Hash  (cost=72977.55..72977.55 rows=1736455 width=4) (actual time=352.369..352.370 rows=1389164 loops=3)
                                       Buckets: 131072  Batches: 64  Memory Usage: 3616kB
                                       ->  Parallel Seq Scan on name n1  (cost=0.00..72977.55 rows=1736455 width=4) (actual time=0.020..170.240 rows=1389164 loops=3)
 Planning Time: 4.786 ms
 Execution Time: 1815.129 ms
(40 rows)

SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=83282.38..83282.39 rows=1 width=96) (actual time=274.894..274.895 rows=1 loops=1)
   ->  Nested Loop  (cost=1003.86..83282.37 rows=1 width=49) (actual time=111.344..274.841 rows=121 loops=1)
         ->  Nested Loop  (cost=1003.44..83281.88 rows=1 width=53) (actual time=111.317..274.124 rows=123 loops=1)
               Join Filter: (ci.movie_id = mc.movie_id)
               ->  Gather  (cost=1003.01..83281.24 rows=1 width=57) (actual time=111.045..274.349 rows=139 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Nested Loop  (cost=3.01..82281.14 rows=1 width=57) (actual time=109.877..271.326 rows=46 loops=3)
                           ->  Nested Loop  (cost=2.58..82280.49 rows=1 width=45) (actual time=109.674..270.907 rows=52 loops=3)
                                 ->  Hash Join  (cost=2.15..82279.20 rows=2 width=24) (actual time=107.351..269.475 rows=142 loops=3)
                                       Hash Cond: (ci.role_id = rt.id)
                                       ->  Nested Loop  (cost=0.99..82277.96 rows=21 width=28) (actual time=107.235..269.322 rows=142 loops=3)
                                             Join Filter: (n.id = ci.person_id)
                                             ->  Nested Loop  (cost=0.42..82155.29 rows=9 width=24) (actual time=104.038..258.007 rows=519 loops=3)
                                                   ->  Parallel Seq Scan on name n  (cost=0.00..81659.82 rows=40 width=4) (actual time=103.673..247.364 rows=2256 loops=3)
                                                         Filter: (((name)::text ~~ '%Ang%'::text) AND ((gender)::text = 'f'::text))
                                                         Rows Removed by Filter: 1386908
                                                   ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..12.37 rows=2 width=20) (actual time=0.004..0.004 rows=0 loops=6768)
                                                         Index Cond: (person_id = n.id)
                                             ->  Index Scan using person_id_cast_info on cast_info ci  (cost=0.56..13.47 rows=13 width=16) (actual time=0.020..0.021 rows=0 loops=1558)
                                                   Index Cond: (person_id = an.person_id)
                                                   Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                   Rows Removed by Filter: 44
                                       ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.034..0.034 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.025..0.027 rows=1 loops=3)
                                                   Filter: ((role)::text = 'actress'::text)
                                                   Rows Removed by Filter: 11
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.64 rows=1 width=21) (actual time=0.010..0.010 rows=0 loops=425)
                                       Index Cond: (id = ci.movie_id)
                                       Filter: ((production_year >= 2005) AND (production_year <= 2015))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.65 rows=1 width=20) (actual time=0.008..0.008 rows=1 loops=155)
                                 Index Cond: (id = ci.person_role_id)
               ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.64 rows=1 width=8) (actual time=0.009..0.012 rows=1 loops=139)
                     Index Cond: (movie_id = t.id)
                     Filter: ((note IS NOT NULL) AND (((note)::text ~~ '%(USA)%'::text) OR ((note)::text ~~ '%(worldwide)%'::text)))
                     Rows Removed by Filter: 5
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.49 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=123)
               Index Cond: (id = mc.company_id)
               Filter: ((country_code)::text = '[us]'::text)
               Rows Removed by Filter: 0
 Planning Time: 7.525 ms
 Execution Time: 277.036 ms
(44 rows)

SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=83270.97..83270.98 rows=1 width=128) (actual time=261.731..261.731 rows=1 loops=1)
   ->  Nested Loop  (cost=1003.86..83270.96 rows=1 width=64) (actual time=121.330..261.694 rows=40 loops=1)
         ->  Nested Loop  (cost=1003.44..83270.37 rows=1 width=68) (actual time=121.311..261.532 rows=40 loops=1)
               ->  Nested Loop  (cost=1003.01..83269.66 rows=1 width=72) (actual time=121.283..261.080 rows=60 loops=1)
                     ->  Gather  (cost=1002.58..83268.98 rows=1 width=60) (actual time=121.264..263.216 rows=65 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop  (cost=2.58..82268.88 rows=1 width=60) (actual time=111.419..258.881 rows=22 loops=3)
                                 ->  Hash Join  (cost=2.15..82267.52 rows=2 width=39) (actual time=105.965..258.320 rows=88 loops=3)
                                       Hash Cond: (ci.role_id = rt.id)
                                       ->  Nested Loop  (cost=0.99..82266.28 rows=18 width=43) (actual time=105.855..258.187 rows=88 loops=3)
                                             Join Filter: (n.id = ci.person_id)
                                             ->  Nested Loop  (cost=0.42..82155.29 rows=9 width=39) (actual time=103.463..252.337 rows=432 loops=3)
                                                   ->  Parallel Seq Scan on name n  (cost=0.00..81659.82 rows=40 width=19) (actual time=102.957..245.490 rows=1803 loops=3)
                                                         Filter: (((name)::text ~~ '%Angel%'::text) AND ((gender)::text = 'f'::text))
                                                         Rows Removed by Filter: 1387361
                                                   ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..12.37 rows=2 width=20) (actual time=0.003..0.004 rows=0 loops=5409)
                                                         Index Cond: (person_id = n.id)
                                             ->  Index Scan using person_id_cast_info on cast_info ci  (cost=0.56..12.21 rows=10 width=16) (actual time=0.012..0.013 rows=0 loops=1296)
                                                   Index Cond: (person_id = an.person_id)
                                                   Filter: ((note)::text = '(voice)'::text)
                                                   Rows Removed by Filter: 43
                                       ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.030..0.030 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.024..0.025 rows=1 loops=3)
                                                   Filter: ((role)::text = 'actress'::text)
                                                   Rows Removed by Filter: 11
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.68 rows=1 width=21) (actual time=0.006..0.006 rows=0 loops=265)
                                       Index Cond: (id = ci.movie_id)
                                       Filter: ((production_year >= 2007) AND (production_year <= 2010))
                                       Rows Removed by Filter: 1
                     ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.69 rows=1 width=20) (actual time=0.003..0.003 rows=1 loops=65)
                           Index Cond: (id = ci.person_role_id)
               ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.69 rows=1 width=8) (actual time=0.006..0.007 rows=1 loops=60)
                     Index Cond: (movie_id = ci.movie_id)
                     Filter: (((note)::text ~~ '%(200%)%'::text) AND (((note)::text ~~ '%(USA)%'::text) OR ((note)::text ~~ '%(worldwide)%'::text)))
                     Rows Removed by Filter: 7
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.59 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=40)
               Index Cond: (id = mc.company_id)
               Filter: ((country_code)::text = '[us]'::text)
 Planning Time: 7.111 ms
 Execution Time: 264.335 ms
(42 rows)

SET
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=123482.63..123482.64 rows=1 width=128) (actual time=458.670..458.670 rows=1 loops=1)
   ->  Gather  (cost=123482.40..123482.61 rows=2 width=128) (actual time=458.098..462.404 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=122482.40..122482.41 rows=1 width=128) (actual time=455.515..455.515 rows=1 loops=3)
               ->  Nested Loop  (cost=81764.69..122480.72 rows=168 width=64) (actual time=260.971..454.718 rows=2715 loops=3)
                     Join Filter: (ci.movie_id = t.id)
                     ->  Nested Loop  (cost=81764.26..122392.38 rows=168 width=55) (actual time=260.920..446.105 rows=2715 loops=3)
                           ->  Nested Loop  (cost=81763.84..122186.52 rows=462 width=59) (actual time=260.450..427.936 rows=6115 loops=3)
                                 ->  Nested Loop  (cost=81763.41..122068.42 rows=173 width=51) (actual time=260.392..415.689 rows=2575 loops=3)
                                       ->  Hash Join  (cost=81762.98..121836.61 rows=358 width=39) (actual time=260.338..405.946 rows=2735 loops=3)
                                             Hash Cond: (ci.role_id = rt.id)
                                             ->  Nested Loop  (cost=81761.82..121820.18 rows=4301 width=43) (actual time=260.256..405.312 rows=2735 loops=3)
                                                   Join Filter: (n.id = ci.person_id)
                                                   ->  Parallel Hash Join  (cost=81761.26..97898.70 rows=1755 width=39) (actual time=257.987..334.938 rows=3508 loops=3)
                                                         Hash Cond: (an.person_id = n.id)
                                                         ->  Parallel Seq Scan on aka_name an  (cost=0.00..15151.60 rows=375560 width=20) (actual time=0.014..32.418 rows=300448 loops=3)
                                                         ->  Parallel Hash  (cost=81659.82..81659.82 rows=8115 width=19) (actual time=257.593..257.593 rows=16670 loops=3)
                                                               Buckets: 65536 (originally 32768)  Batches: 1 (originally 1)  Memory Usage: 3584kB
                                                               ->  Parallel Seq Scan on name n  (cost=0.00..81659.82 rows=8115 width=19) (actual time=104.374..248.769 rows=16670 loops=3)
                                                                     Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                                                     Rows Removed by Filter: 1372493
                                                   ->  Index Scan using person_id_cast_info on cast_info ci  (cost=0.56..13.47 rows=13 width=16) (actual time=0.018..0.020 rows=1 loops=10525)
                                                         Index Cond: (person_id = an.person_id)
                                                         Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                         Rows Removed by Filter: 44
                                             ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.029..0.029 rows=1 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.022..0.023 rows=1 loops=3)
                                                         Filter: ((role)::text = 'actress'::text)
                                                         Rows Removed by Filter: 11
                                       ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.65 rows=1 width=20) (actual time=0.003..0.003 rows=1 loops=8204)
                                             Index Cond: (id = ci.person_role_id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.63 rows=5 width=8) (actual time=0.003..0.004 rows=2 loops=7726)
                                       Index Cond: (movie_id = ci.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=18345)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.51 rows=1 width=21) (actual time=0.003..0.003 rows=1 loops=8144)
                           Index Cond: (id = mc.movie_id)
 Planning Time: 7.250 ms
 Execution Time: 462.635 ms
(43 rows)

SET
                                                                                                  QUERY PLAN                                                                                                  
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=211411.33..211411.34 rows=1 width=128) (actual time=3045.170..3045.171 rows=1 loops=1)
   ->  Gather  (cost=211411.10..211411.31 rows=2 width=128) (actual time=2684.984..3049.794 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=210411.10..210411.11 rows=1 width=128) (actual time=2804.480..2804.480 rows=1 loops=3)
               ->  Nested Loop  (cost=140783.51..210327.94 rows=8316 width=64) (actual time=1686.973..2766.717 rows=161027 loops=3)
                     ->  Nested Loop  (cost=140783.09..208504.03 rows=3393 width=56) (actual time=1686.425..2592.815 rows=57856 loops=3)
                           Join Filter: (ci.movie_id = t.id)
                           ->  Nested Loop  (cost=140782.66..206719.92 rows=3393 width=47) (actual time=1686.401..2436.608 rows=57856 loops=3)
                                 ->  Nested Loop  (cost=140782.23..202181.65 rows=7009 width=35) (actual time=1686.383..2232.353 rows=63155 loops=3)
                                       ->  Hash Join  (cost=140781.80..179531.73 rows=30299 width=16) (actual time=1686.350..2034.456 rows=63185 loops=3)
                                             Hash Cond: (mc.movie_id = ci.movie_id)
                                             ->  Parallel Hash Join  (cost=5351.77..37866.93 rows=395644 width=4) (actual time=23.921..251.647 rows=384599 loops=3)
                                                   Hash Cond: (mc.company_id = cn.id)
                                                   ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=8) (actual time=0.022..78.216 rows=869710 loops=3)
                                                   ->  Parallel Hash  (cost=4722.92..4722.92 rows=50308 width=4) (actual time=23.375..23.376 rows=28281 loops=3)
                                                         Buckets: 131072  Batches: 1  Memory Usage: 4352kB
                                                         ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=50308 width=4) (actual time=0.020..16.495 rows=28281 loops=3)
                                                               Filter: ((country_code)::text = '[us]'::text)
                                                               Rows Removed by Filter: 50051
                                             ->  Hash  (cost=134124.20..134124.20 rows=75106 width=12) (actual time=1661.539..1661.539 rows=276166 loops=3)
                                                   Buckets: 131072 (originally 131072)  Batches: 4 (originally 2)  Memory Usage: 3984kB
                                                   ->  Nested Loop  (cost=0.56..134124.20 rows=75106 width=12) (actual time=0.318..1609.104 rows=276166 loops=3)
                                                         ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.014..0.017 rows=1 loops=3)
                                                               Filter: ((role)::text = 'actress'::text)
                                                               Rows Removed by Filter: 11
                                                         ->  Index Scan using role_id_cast_info on cast_info ci  (cost=0.56..133303.71 rows=81934 width=16) (actual time=0.301..1586.198 rows=276166 loops=3)
                                                               Index Cond: (role_id = rt.id)
                                                               Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                               Rows Removed by Filter: 7175807
                                       ->  Index Scan using name_pkey on name n  (cost=0.43..0.75 rows=1 width=19) (actual time=0.003..0.003 rows=1 loops=189554)
                                             Index Cond: (id = ci.person_id)
                                             Filter: ((gender)::text = 'f'::text)
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.65 rows=1 width=20) (actual time=0.003..0.003 rows=1 loops=189464)
                                       Index Cond: (id = ci.person_role_id)
                           ->  Index Scan using title_pkey on title t  (cost=0.43..0.51 rows=1 width=21) (actual time=0.002..0.002 rows=1 loops=173567)
                                 Index Cond: (id = mc.movie_id)
                     ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.52 rows=2 width=20) (actual time=0.002..0.003 rows=3 loops=173567)
                           Index Cond: (person_id = n.id)
 Planning Time: 7.533 ms
 Execution Time: 3050.072 ms
(42 rows)

