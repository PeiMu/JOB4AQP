SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=46738.99..46739.00 rows=1 width=64) (actual time=1143.172..1143.172 rows=1 loops=1)
   ->  Gather  (cost=46738.77..46738.98 rows=2 width=64) (actual time=1143.135..1156.752 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=45738.77..45738.78 rows=1 width=64) (actual time=1135.997..1135.998 rows=1 loops=3)
               ->  Nested Loop  (cost=4735.95..45738.76 rows=2 width=33) (actual time=180.339..1135.861 rows=35 loops=3)
                     ->  Nested Loop  (cost=4735.82..45738.46 rows=2 width=37) (actual time=180.228..1135.552 rows=35 loops=3)
                           ->  Hash Join  (cost=4735.39..45712.02 rows=5 width=25) (actual time=180.075..1134.216 rows=37 loops=3)
                                 Hash Cond: (ci.role_id = rt.id)
                                 ->  Nested Loop  (cost=4734.23..45710.67 rows=54 width=29) (actual time=179.875..1133.938 rows=50 loops=3)
                                       Join Filter: (t.id = ci.movie_id)
                                       ->  Nested Loop  (cost=4733.66..40594.00 rows=2624 width=29) (actual time=42.899..403.839 rows=1513 loops=3)
                                             ->  Parallel Hash Join  (cost=4733.23..37248.39 rows=6486 width=8) (actual time=42.658..334.460 rows=2930 loops=3)
                                                   Hash Cond: (mc.company_id = cn.id)
                                                   ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=12) (actual time=0.075..164.459 rows=869710 loops=3)
                                                   ->  Parallel Hash  (cost=4722.92..4722.92 rows=825 width=4) (actual time=41.673..41.674 rows=454 loops=3)
                                                         Buckets: 2048  Batches: 1  Memory Usage: 112kB
                                                         ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=825 width=4) (actual time=0.047..41.129 rows=454 loops=3)
                                                               Filter: ((country_code)::text = '[ru]'::text)
                                                               Rows Removed by Filter: 77879
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..0.52 rows=1 width=21) (actual time=0.022..0.022 rows=1 loops=8790)
                                                   Index Cond: (id = mc.movie_id)
                                                   Filter: (production_year > 2005)
                                                   Rows Removed by Filter: 0
                                       ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.94 rows=1 width=12) (actual time=0.453..0.481 rows=0 loops=4539)
                                             Index Cond: (movie_id = mc.movie_id)
                                             Filter: (((note)::text ~~ '%(voice)%'::text) AND ((note)::text ~~ '%(uncredited)%'::text))
                                             Rows Removed by Filter: 50
                                 ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.078..0.078 rows=1 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.052..0.055 rows=1 loops=3)
                                             Filter: ((role)::text = 'actor'::text)
                                             Rows Removed by Filter: 11
                           ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..5.29 rows=1 width=20) (actual time=0.034..0.034 rows=1 loops=112)
                                 Index Cond: (id = ci.person_role_id)
                     ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=104)
                           Index Cond: (id = mc.company_type_id)
                           Heap Fetches: 104
 Planning Time: 9.475 ms
 Execution Time: 1157.413 ms
(40 rows)

SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=43565.51..43565.52 rows=1 width=64) (actual time=567.187..567.187 rows=1 loops=1)
   ->  Gather  (cost=43565.29..43565.50 rows=2 width=64) (actual time=566.947..573.299 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=42565.29..42565.30 rows=1 width=64) (actual time=559.936..559.936 rows=1 loops=3)
               ->  Hash Join  (cost=4736.91..42565.02 rows=55 width=33) (actual time=559.929..559.929 rows=0 loops=3)
                     Hash Cond: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=4735.82..42563.63 rows=55 width=37) (actual time=559.718..559.718 rows=0 loops=3)
                           ->  Hash Join  (cost=4735.39..42496.51 rows=115 width=25) (actual time=559.718..559.718 rows=0 loops=3)
                                 Hash Cond: (ci.role_id = rt.id)
                                 ->  Nested Loop  (cost=4734.23..42490.46 rows=1377 width=29) (actual time=36.035..559.279 rows=871 loops=3)
                                       Join Filter: (t.id = ci.movie_id)
                                       ->  Nested Loop  (cost=4733.66..40594.00 rows=1021 width=29) (actual time=34.896..387.916 rows=420 loops=3)
                                             ->  Parallel Hash Join  (cost=4733.23..37248.39 rows=6486 width=8) (actual time=32.000..321.464 rows=2930 loops=3)
                                                   Hash Cond: (mc.company_id = cn.id)
                                                   ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=12) (actual time=0.037..163.319 rows=869710 loops=3)
                                                   ->  Parallel Hash  (cost=4722.92..4722.92 rows=825 width=4) (actual time=31.190..31.191 rows=454 loops=3)
                                                         Buckets: 2048  Batches: 1  Memory Usage: 112kB
                                                         ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=825 width=4) (actual time=0.172..30.664 rows=454 loops=3)
                                                               Filter: ((country_code)::text = '[ru]'::text)
                                                               Rows Removed by Filter: 77879
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..0.52 rows=1 width=21) (actual time=0.022..0.022 rows=0 loops=8790)
                                                   Index Cond: (id = mc.movie_id)
                                                   Filter: (production_year > 2010)
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.84 rows=1 width=12) (actual time=0.211..0.406 rows=2 loops=1259)
                                             Index Cond: (movie_id = mc.movie_id)
                                             Filter: ((note)::text ~~ '%(producer)%'::text)
                                             Rows Removed by Filter: 44
                                 ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.051..0.052 rows=1 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.039..0.041 rows=1 loops=3)
                                             Filter: ((role)::text = 'actor'::text)
                                             Rows Removed by Filter: 11
                           ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.58 rows=1 width=20) (never executed)
                                 Index Cond: (id = ci.person_role_id)
                     ->  Hash  (cost=1.04..1.04 rows=4 width=4) (actual time=0.069..0.069 rows=4 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.040..0.041 rows=4 loops=3)
 Planning Time: 8.937 ms
 Execution Time: 573.919 ms
(41 rows)

SET
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=652016.30..652016.31 rows=1 width=64) (actual time=5154.912..5154.912 rows=1 loops=1)
   ->  Gather  (cost=652016.08..652016.29 rows=2 width=64) (actual time=5150.889..5239.472 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=651016.08..651016.09 rows=1 width=64) (actual time=5144.108..5144.109 rows=1 loops=3)
               ->  Hash Join  (cost=609518.31..650122.02 rows=178812 width=33) (actual time=5104.658..5144.088 rows=3 loops=3)
                     Hash Cond: (ci.role_id = rt.id)
                     ->  Hash Join  (cost=609517.04..649485.59 rows=178812 width=37) (actual time=5104.380..5143.808 rows=3 loops=3)
                           Hash Cond: (mc.company_type_id = ct.id)
                           ->  Parallel Hash Join  (cost=609515.95..648517.80 rows=178812 width=41) (actual time=5104.280..5143.706 rows=3 loops=3)
                                 Hash Cond: (mc.movie_id = t.id)
                                 ->  Parallel Hash Join  (cost=5350.78..37865.94 rows=395029 width=8) (actual time=42.858..418.681 rows=384599 loops=3)
                                       Hash Cond: (mc.company_id = cn.id)
                                       ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=12) (actual time=0.028..169.390 rows=869710 loops=3)
                                       ->  Parallel Hash  (cost=4722.92..4722.92 rows=50229 width=4) (actual time=42.644..42.644 rows=28281 loops=3)
                                             Buckets: 131072  Batches: 1  Memory Usage: 4384kB
                                             ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=50229 width=4) (actual time=0.078..29.946 rows=28281 loops=3)
                                                   Filter: ((country_code)::text = '[us]'::text)
                                                   Rows Removed by Filter: 50051
                                 ->  Parallel Hash  (cost=600222.44..600222.44 rows=185178 width=45) (actual time=4553.235..4553.235 rows=4 loops=3)
                                       Buckets: 65536  Batches: 16  Memory Usage: 576kB
                                       ->  Parallel Hash Join  (cost=136144.88..600222.44 rows=185178 width=45) (actual time=4451.248..4551.882 rows=4 loops=3)
                                             Hash Cond: (ci.movie_id = t.id)
                                             ->  Parallel Hash Join  (cost=73555.68..529520.84 rows=266824 width=24) (actual time=3793.808..3919.218 rows=5 loops=3)
                                                   Hash Cond: (ci.person_role_id = chn.id)
                                                   ->  Parallel Seq Scan on cast_info ci  (cost=0.00..441459.62 rows=551821 width=12) (actual time=317.426..2830.428 rows=478480 loops=3)
                                                         Filter: ((note)::text ~~ '%(producer)%'::text)
                                                         Rows Removed by Filter: 11602968
                                                   ->  Parallel Hash  (cost=49532.75..49532.75 rows=1308475 width=20) (actual time=700.036..700.036 rows=1046780 loops=3)
                                                         Buckets: 65536  Batches: 64  Memory Usage: 3264kB
                                                         ->  Parallel Seq Scan on char_name chn  (cost=0.00..49532.75 rows=1308475 width=20) (actual time=0.058..310.138 rows=1046780 loops=3)
                                             ->  Parallel Hash  (cost=49166.29..49166.29 rows=731112 width=21) (actual time=510.690..510.690 rows=583011 loops=3)
                                                   Buckets: 65536  Batches: 32  Memory Usage: 3648kB
                                                   ->  Parallel Seq Scan on title t  (cost=0.00..49166.29 rows=731112 width=21) (actual time=0.048..286.851 rows=583011 loops=3)
                                                         Filter: (production_year > 1990)
                                                         Rows Removed by Filter: 259760
                           ->  Hash  (cost=1.04..1.04 rows=4 width=4) (actual time=0.040..0.040 rows=4 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                 ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.027..0.029 rows=4 loops=3)
                     ->  Hash  (cost=1.12..1.12 rows=12 width=4) (actual time=0.058..0.058 rows=12 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on role_type rt  (cost=0.00..1.12 rows=12 width=4) (actual time=0.033..0.035 rows=12 loops=3)
 Planning Time: 8.957 ms
 Execution Time: 5240.163 ms
(44 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3754.86..3754.87 rows=1 width=96) (actual time=244.096..244.097 rows=1 loops=1)
   ->  Nested Loop  (cost=8.32..3754.85 rows=1 width=118) (actual time=6.439..243.651 rows=310 loops=1)
         Join Filter: (mc.company_type_id = ct.id)
         Rows Removed by Join Filter: 20
         ->  Nested Loop  (cost=8.32..3753.79 rows=1 width=122) (actual time=6.418..240.919 rows=330 loops=1)
               ->  Nested Loop  (cost=7.90..3753.33 rows=1 width=107) (actual time=5.694..237.254 rows=705 loops=1)
                     Join Filter: (ml.movie_id = mc.movie_id)
                     ->  Nested Loop  (cost=7.47..3752.76 rows=1 width=111) (actual time=5.650..235.333 rows=152 loops=1)
                           Join Filter: (ml.movie_id = t.id)
                           ->  Nested Loop  (cost=7.04..3752.25 rows=1 width=90) (actual time=5.483..233.747 rows=199 loops=1)
                                 Join Filter: (ml.link_type_id = lt.id)
                                 Rows Removed by Join Filter: 303
                                 ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.041..0.051 rows=2 loops=1)
                                       Filter: ((link)::text ~~ '%follow%'::text)
                                       Rows Removed by Filter: 16
                                 ->  Nested Loop  (cost=7.04..3750.90 rows=10 width=12) (actual time=4.717..116.800 rows=251 loops=2)
                                       ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=4.706..94.626 rows=10544 loops=2)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.293..23.777 rows=1 loops=2)
                                                   Filter: ((keyword)::text = 'sequel'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=3.371..68.235 rows=10544 loops=2)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=11140
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=2.599..2.599 rows=10544 loops=2)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.002..0.002 rows=0 loops=21088)
                                             Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.007..0.007 rows=1 loops=199)
                                 Index Cond: (id = mk.movie_id)
                                 Filter: ((production_year >= 1950) AND (production_year <= 2000))
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=12) (actual time=0.008..0.011 rows=5 loops=152)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: (note IS NULL)
                           Rows Removed by Filter: 1
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.005..0.005 rows=0 loops=705)
                     Index Cond: (id = mc.company_id)
                     Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                     Rows Removed by Filter: 1
         ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=330)
               Filter: ((kind)::text = 'production companies'::text)
               Rows Removed by Filter: 1
 Planning Time: 13.622 ms
 Execution Time: 244.667 ms
(44 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3754.86..3754.87 rows=1 width=96) (actual time=61.853..61.853 rows=1 loops=1)
   ->  Nested Loop  (cost=8.32..3754.85 rows=1 width=118) (actual time=5.423..61.817 rows=14 loops=1)
         Join Filter: (mc.company_type_id = ct.id)
         ->  Nested Loop  (cost=8.32..3753.79 rows=1 width=122) (actual time=5.402..61.691 rows=14 loops=1)
               ->  Nested Loop  (cost=7.90..3753.33 rows=1 width=107) (actual time=5.366..61.528 rows=21 loops=1)
                     Join Filter: (ml.movie_id = mc.movie_id)
                     ->  Nested Loop  (cost=7.47..3752.76 rows=1 width=111) (actual time=5.351..61.475 rows=7 loops=1)
                           Join Filter: (ml.movie_id = t.id)
                           ->  Nested Loop  (cost=7.04..3752.25 rows=1 width=90) (actual time=4.463..61.007 rows=64 loops=1)
                                 Join Filter: (ml.link_type_id = lt.id)
                                 Rows Removed by Join Filter: 187
                                 ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.015..0.022 rows=1 loops=1)
                                       Filter: ((link)::text ~~ '%follows%'::text)
                                       Rows Removed by Filter: 17
                                 ->  Nested Loop  (cost=7.04..3750.90 rows=10 width=12) (actual time=4.443..60.948 rows=251 loops=1)
                                       ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=4.433..45.125 rows=10544 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.054..18.466 rows=1 loops=1)
                                                   Filter: ((keyword)::text = 'sequel'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=3.363..24.671 rows=10544 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=5570
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=2.583..2.584 rows=10544 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.001..0.001 rows=0 loops=10544)
                                             Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.007..0.007 rows=0 loops=64)
                                 Index Cond: (id = mk.movie_id)
                                 Filter: (((title)::text ~~ '%Money%'::text) AND (production_year = 1998))
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=12) (actual time=0.004..0.006 rows=3 loops=7)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: (note IS NULL)
                           Rows Removed by Filter: 1
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.007..0.007 rows=1 loops=21)
                     Index Cond: (id = mc.company_id)
                     Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                     Rows Removed by Filter: 0
         ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=14)
               Filter: ((kind)::text = 'production companies'::text)
               Rows Removed by Filter: 1
 Planning Time: 12.956 ms
 Execution Time: 62.517 ms
(43 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=6178.62..6178.63 rows=1 width=96) (actual time=603.637..603.638 rows=1 loops=1)
   ->  Nested Loop  (cost=8.32..6178.61 rows=1 width=60) (actual time=5.491..593.409 rows=6946 loops=1)
         Join Filter: (ml.movie_id = t.id)
         ->  Nested Loop  (cost=7.89..6178.11 rows=1 width=55) (actual time=5.439..558.066 rows=6946 loops=1)
               Join Filter: (ml.link_type_id = lt.id)
               Rows Removed by Join Filter: 42158
               ->  Nested Loop  (cost=7.89..6176.70 rows=1 width=59) (actual time=5.426..497.217 rows=6946 loops=1)
                     ->  Nested Loop  (cost=7.47..6147.98 rows=63 width=44) (actual time=4.745..451.163 rows=14916 loops=1)
                           Join Filter: (mc.company_type_id = ct.id)
                           Rows Removed by Join Filter: 1782
                           ->  Nested Loop  (cost=7.47..6143.61 rows=84 width=48) (actual time=4.720..442.222 rows=15510 loops=1)
                                 Join Filter: (ml.movie_id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.04..6125.70 rows=31 width=12) (actual time=4.676..424.379 rows=1460 loops=1)
                                       ->  Nested Loop  (cost=6.76..6082.75 rows=101 width=4) (actual time=4.656..322.039 rows=47403 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2793.84 rows=3 width=4) (actual time=1.114..27.720 rows=3 loops=1)
                                                   Filter: ((keyword)::text = ANY ('{sequel,revenge,based-on-novel}'::text[]))
                                                   Rows Removed by Filter: 134167
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1093.30 rows=300 width=8) (actual time=4.855..93.771 rows=15801 loops=3)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=23953
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.710..3.710 rows=15801 loops=3)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.002..0.002 rows=0 loops=47403)
                                             Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=36) (actual time=0.004..0.009 rows=11 loops=1460)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: (note IS NOT NULL)
                                       Rows Removed by Filter: 2
                           ->  Materialize  (cost=0.00..1.06 rows=3 width=4) (actual time=0.000..0.000 rows=1 loops=15510)
                                 ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=3 width=4) (actual time=0.019..0.021 rows=3 loops=1)
                                       Filter: ((kind IS NOT NULL) AND ((kind)::text <> 'production companies'::text))
                                       Rows Removed by Filter: 1
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=14916)
                           Index Cond: (id = mc.company_id)
                           Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '20th Century Fox%'::text) OR ((name)::text ~~ 'Twentieth Century Fox%'::text)))
                           Rows Removed by Filter: 1
               ->  Seq Scan on link_type lt  (cost=0.00..1.18 rows=18 width=4) (actual time=0.002..0.002 rows=7 loops=6946)
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.004..0.004 rows=1 loops=6946)
               Index Cond: (id = mk.movie_id)
               Filter: (production_year > 1950)
 Planning Time: 13.016 ms
 Execution Time: 604.273 ms
(42 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=6195.83..6195.84 rows=1 width=96) (actual time=502.308..502.309 rows=1 loops=1)
   ->  Nested Loop  (cost=8.32..6195.45 rows=51 width=60) (actual time=4.811..493.394 rows=14899 loops=1)
         ->  Nested Loop  (cost=7.90..6169.75 rows=57 width=45) (actual time=4.783..454.833 rows=14916 loops=1)
               Join Filter: (mc.company_type_id = ct.id)
               Rows Removed by Join Filter: 1782
               ->  Nested Loop  (cost=7.90..6165.70 rows=76 width=49) (actual time=4.762..448.953 rows=15510 loops=1)
                     Join Filter: (ml.movie_id = mc.movie_id)
                     ->  Nested Loop  (cost=7.47..6149.51 rows=28 width=29) (actual time=4.737..434.993 rows=1460 loops=1)
                           Join Filter: (ml.link_type_id = lt.id)
                           Rows Removed by Join Filter: 10576
                           ->  Nested Loop  (cost=7.47..6141.21 rows=28 width=33) (actual time=4.712..432.608 rows=1460 loops=1)
                                 Join Filter: (ml.movie_id = t.id)
                                 ->  Nested Loop  (cost=7.04..6125.70 rows=31 width=12) (actual time=4.674..425.430 rows=1460 loops=1)
                                       ->  Nested Loop  (cost=6.76..6082.75 rows=101 width=4) (actual time=4.664..320.578 rows=47403 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2793.84 rows=3 width=4) (actual time=1.114..35.938 rows=3 loops=1)
                                                   Filter: ((keyword)::text = ANY ('{sequel,revenge,based-on-novel}'::text[]))
                                                   Rows Removed by Filter: 134167
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1093.30 rows=300 width=8) (actual time=4.986..90.483 rows=15801 loops=3)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=23953
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.826..3.826 rows=15801 loops=3)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.002..0.002 rows=0 loops=47403)
                                             Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.004..0.004 rows=1 loops=1460)
                                       Index Cond: (id = mk.movie_id)
                                       Filter: (production_year > 1950)
                           ->  Materialize  (cost=0.00..1.27 rows=18 width=4) (actual time=0.000..0.001 rows=8 loops=1460)
                                 ->  Seq Scan on link_type lt  (cost=0.00..1.18 rows=18 width=4) (actual time=0.009..0.012 rows=16 loops=1)
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=36) (actual time=0.003..0.007 rows=11 loops=1460)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: (note IS NOT NULL)
                           Rows Removed by Filter: 2
               ->  Materialize  (cost=0.00..1.06 rows=3 width=4) (actual time=0.000..0.000 rows=1 loops=15510)
                     ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=3 width=4) (actual time=0.018..0.020 rows=3 loops=1)
                           Filter: ((kind IS NOT NULL) AND ((kind)::text <> 'production companies'::text))
                           Rows Removed by Filter: 1
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=14916)
               Index Cond: (id = mc.company_id)
               Filter: ((country_code)::text <> '[pl]'::text)
               Rows Removed by Filter: 0
 Planning Time: 13.628 ms
 Execution Time: 502.863 ms
(43 rows)

SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16837.50..16837.51 rows=1 width=96) (actual time=484.567..484.567 rows=1 loops=1)
   ->  Gather  (cost=1005.35..16837.49 rows=1 width=41) (actual time=28.769..489.572 rows=397 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Nested Loop  (cost=5.34..15837.39 rows=1 width=41) (actual time=39.033..476.803 rows=132 loops=3)
               ->  Nested Loop  (cost=5.20..15835.91 rows=9 width=45) (actual time=38.999..476.200 rows=132 loops=3)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=4.77..15811.93 rows=15 width=53) (actual time=2.362..374.529 rows=1891 loops=3)
                           ->  Nested Loop  (cost=4.35..15793.67 rows=41 width=38) (actual time=2.288..350.904 rows=2203 loops=3)
                                 Join Filter: (mi_idx.movie_id = t.id)
                                 ->  Hash Join  (cost=3.92..15669.98 rows=233 width=17) (actual time=0.503..240.277 rows=8078 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Nested Loop  (cost=2.86..15663.88 rows=932 width=21) (actual time=0.254..233.203 rows=21569 loops=3)
                                             ->  Hash Join  (cost=2.43..15179.85 rows=178 width=9) (actual time=0.169..141.886 rows=5283 loops=3)
                                                   Hash Cond: (mi_idx.info_type_id = it2.id)
                                                   ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..15122.68 rows=20101 width=13) (actual time=0.053..136.615 rows=17883 loops=3)
                                                         Filter: ((info)::text > '8.0'::text)
                                                         Rows Removed by Filter: 442129
                                                   ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.058..0.059 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.038..0.041 rows=1 loops=3)
                                                               Filter: ((info)::text = 'rating'::text)
                                                               Rows Removed by Filter: 112
                                             ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.67 rows=5 width=12) (actual time=0.012..0.016 rows=4 loops=15849)
                                                   Index Cond: (movie_id = mi_idx.movie_id)
                                       ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.065..0.065 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.041..0.042 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.52 rows=1 width=21) (actual time=0.013..0.013 rows=0 loops=24233)
                                       Index Cond: (id = mc.movie_id)
                                       Filter: ((production_year >= 2005) AND (production_year <= 2008))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.010..0.010 rows=1 loops=6610)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.59 rows=1 width=8) (actual time=0.053..0.053 rows=0 loops=5674)
                           Index Cond: (movie_id = mc.movie_id)
                           Filter: ((info)::text = ANY ('{Drama,Horror}'::text[]))
                           Rows Removed by Filter: 28
               ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=397)
                     Index Cond: (id = mi.info_type_id)
                     Filter: ((info)::text = 'genres'::text)
 Planning Time: 14.311 ms
 Execution Time: 490.608 ms
(47 rows)

SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=19208.43..19208.44 rows=1 width=64) (actual time=147.248..147.248 rows=1 loops=1)
   ->  Nested Loop  (cost=1006.70..19208.43 rows=1 width=60) (actual time=145.296..147.226 rows=10 loops=1)
         ->  Gather  (cost=1006.57..19208.26 rows=1 width=64) (actual time=145.198..148.462 rows=10 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Nested Loop  (cost=6.57..18208.16 rows=1 width=64) (actual time=137.372..137.986 rows=3 loops=3)
                     ->  Nested Loop  (cost=6.15..18207.71 rows=1 width=68) (actual time=137.333..137.675 rows=11 loops=3)
                           Join Filter: (t.id = mc.movie_id)
                           ->  Hash Join  (cost=5.72..18207.13 rows=1 width=72) (actual time=137.283..137.583 rows=1 loops=3)
                                 Hash Cond: (mi.info_type_id = it1.id)
                                 ->  Nested Loop  (cost=3.29..18204.66 rows=17 width=76) (actual time=136.961..137.331 rows=74 loops=3)
                                       Join Filter: (t.id = mi.movie_id)
                                       ->  Nested Loop  (cost=2.86..18202.37 rows=1 width=25) (actual time=136.915..136.973 rows=1 loops=3)
                                             ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=4) (actual time=136.705..136.710 rows=3 loops=3)
                                                   Hash Cond: (mi_idx.info_type_id = it2.id)
                                                   ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=8) (actual time=0.035..80.660 rows=460012 loops=3)
                                                   ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.032..0.033 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.021..0.022 rows=1 loops=3)
                                                               Filter: ((info)::text = 'bottom 10 rank'::text)
                                                               Rows Removed by Filter: 112
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..0.58 rows=1 width=21) (actual time=0.077..0.077 rows=0 loops=10)
                                                   Index Cond: (id = mi_idx.movie_id)
                                                   Filter: ((production_year > 2000) AND (((title)::text ~~ 'Birdemic%'::text) OR ((title)::text ~~ '%Movie%'::text)))
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.76 rows=42 width=51) (actual time=0.099..0.496 rows=110 loops=2)
                                             Index Cond: (movie_id = mi_idx.movie_id)
                                 ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.084..0.084 rows=1 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.062..0.065 rows=1 loops=3)
                                             Filter: ((info)::text = 'budget'::text)
                                             Rows Removed by Filter: 112
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.52 rows=5 width=12) (actual time=0.103..0.127 rows=16 loops=2)
                                 Index Cond: (movie_id = mi.movie_id)
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.027..0.027 rows=0 loops=33)
                           Index Cond: (id = mc.company_id)
                           Filter: ((country_code)::text = '[us]'::text)
                           Rows Removed by Filter: 1
         ->  Index Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.011..0.011 rows=1 loops=10)
               Index Cond: (id = mc.company_type_id)
               Filter: ((kind IS NOT NULL) AND (((kind)::text = 'production companies'::text) OR ((kind)::text = 'distributors'::text)))
 Planning Time: 14.733 ms
 Execution Time: 149.350 ms
(43 rows)

SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=17908.15..17908.16 rows=1 width=96) (actual time=1584.955..1584.956 rows=1 loops=1)
   ->  Gather  (cost=1007.63..17908.14 rows=2 width=41) (actual time=7.249..1589.313 rows=4711 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Hash Join  (cost=7.63..16907.94 rows=1 width=41) (actual time=4.269..1574.422 rows=1570 loops=3)
               Hash Cond: (mi.info_type_id = it1.id)
               ->  Nested Loop  (cost=5.20..16905.24 rows=98 width=45) (actual time=4.036..1572.911 rows=1570 loops=3)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=4.77..16670.19 rows=138 width=53) (actual time=0.839..997.263 rows=14111 loops=3)
                           ->  Hash Join  (cost=4.35..16500.42 rows=381 width=38) (actual time=0.461..825.222 rows=22822 loops=3)
                                 Hash Cond: (mc.company_type_id = ct.id)
                                 ->  Nested Loop  (cost=3.29..16491.13 rows=1523 width=42) (actual time=0.338..806.956 rows=56386 loops=3)
                                       ->  Nested Loop  (cost=2.86..16296.91 rows=291 width=30) (actual time=0.259..598.210 rows=17435 loops=3)
                                             ->  Hash Join  (cost=2.43..15342.82 rows=708 width=9) (actual time=0.145..183.517 rows=40524 loops=3)
                                                   Hash Cond: (mi_idx.info_type_id = it2.id)
                                                   ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..15122.68 rows=79942 width=13) (actual time=0.058..158.817 rows=64632 loops=3)
                                                         Filter: ((info)::text > '7.0'::text)
                                                         Rows Removed by Filter: 395380
                                                   ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.032..0.033 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.020..0.023 rows=1 loops=3)
                                                               Filter: ((info)::text = 'rating'::text)
                                                               Rows Removed by Filter: 112
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..1.35 rows=1 width=21) (actual time=0.010..0.010 rows=0 loops=121572)
                                                   Index Cond: (id = mi_idx.movie_id)
                                                   Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.62 rows=5 width=12) (actual time=0.008..0.010 rows=3 loops=52304)
                                             Index Cond: (movie_id = t.id)
                                 ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.045..0.045 rows=1 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.030..0.031 rows=1 loops=3)
                                             Filter: ((kind)::text = 'production companies'::text)
                                             Rows Removed by Filter: 3
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.007..0.007 rows=1 loops=68466)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.69 rows=1 width=8) (actual time=0.040..0.040 rows=0 loops=42332)
                           Index Cond: (movie_id = mc.movie_id)
                           Filter: ((info)::text = ANY ('{Drama,Horror,Western,Family}'::text[]))
                           Rows Removed by Filter: 29
               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.078..0.078 rows=1 loops=3)
                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                     ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.047..0.059 rows=1 loops=3)
                           Filter: ((info)::text = 'genres'::text)
                           Rows Removed by Filter: 112
 Planning Time: 13.539 ms
 Execution Time: 1593.594 ms
(49 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=20155.74..20155.75 rows=1 width=96) (actual time=2847.771..2847.771 rows=1 loops=1)
   ->  Gather  (cost=20155.52..20155.73 rows=2 width=96) (actual time=2846.472..2853.787 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=19155.52..19155.53 rows=1 width=96) (actual time=2839.397..2839.397 rows=1 loops=3)
               ->  Hash Join  (cost=8.73..19155.43 rows=11 width=65) (actual time=610.923..2820.252 rows=37034 loops=3)
                     Hash Cond: (mi.info_type_id = it2.id)
                     ->  Nested Loop  (cost=6.30..19149.54 rows=1275 width=69) (actual time=610.592..2790.452 rows=172109 loops=3)
                           ->  Nested Loop  (cost=5.87..19075.02 rows=39 width=34) (actual time=610.485..2400.682 rows=5490 loops=3)
                                 ->  Hash Join  (cost=5.45..18650.83 rows=952 width=38) (actual time=607.607..1828.553 rows=100870 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Nested Loop  (cost=4.39..18629.17 rows=3809 width=42) (actual time=607.493..1774.874 rows=257695 loops=3)
                                             ->  Hash Join  (cost=3.96..18186.75 rows=727 width=30) (actual time=607.358..1274.044 rows=69960 loops=3)
                                                   Hash Cond: (t.kind_id = kt.id)
                                                   ->  Nested Loop  (cost=2.86..18164.20 rows=5089 width=34) (actual time=0.237..1232.281 rows=153308 loops=3)
                                                         ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=9) (actual time=0.138..192.826 rows=153308 loops=3)
                                                               Hash Cond: (miidx.info_type_id = it.id)
                                                               ->  Parallel Seq Scan on movie_info_idx miidx  (cost=0.00..13685.15 rows=575015 width=13) (actual time=0.035..90.310 rows=460012 loops=3)
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.046..0.047 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.025..0.028 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'rating'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=25) (actual time=0.006..0.006 rows=1 loops=459925)
                                                               Index Cond: (id = miidx.movie_id)
                                                   ->  Hash  (cost=1.09..1.09 rows=1 width=4) (actual time=0.052..0.053 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.041..0.043 rows=1 loops=3)
                                                               Filter: ((kind)::text = 'movie'::text)
                                                               Rows Removed by Filter: 6
                                             ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.56 rows=5 width=12) (actual time=0.004..0.006 rows=4 loops=209880)
                                                   Index Cond: (movie_id = t.id)
                                       ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.047..0.047 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.034..0.036 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                 ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=302610)
                                       Index Cond: (id = mc.company_id)
                                       Filter: ((country_code)::text = '[de]'::text)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.49 rows=42 width=51) (actual time=0.013..0.064 rows=31 loops=16470)
                                 Index Cond: (movie_id = t.id)
                     ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.082..0.082 rows=1 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.046..0.057 rows=1 loops=3)
                                 Filter: ((info)::text = 'release dates'::text)
                                 Rows Removed by Filter: 112
 Planning Time: 21.492 ms
 Execution Time: 2854.665 ms
(50 rows)

SET
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=19206.33..19206.34 rows=1 width=96) (actual time=1232.717..1232.718 rows=1 loops=1)
   ->  Gather  (cost=1004.54..19206.32 rows=1 width=41) (actual time=675.753..1238.175 rows=372 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Nested Loop  (cost=4.54..18206.22 rows=1 width=41) (actual time=626.986..1224.979 rows=124 loops=3)
               ->  Nested Loop  (cost=4.40..18205.87 rows=2 width=45) (actual time=626.885..1223.421 rows=707 loops=3)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=3.97..18203.87 rows=1 width=53) (actual time=626.763..1220.874 rows=20 loops=3)
                           ->  Nested Loop  (cost=3.84..18203.70 rows=1 width=57) (actual time=626.595..1220.591 rows=54 loops=3)
                                 ->  Nested Loop  (cost=3.42..18203.25 rows=1 width=42) (actual time=581.282..1218.280 rows=104 loops=3)
                                       Join Filter: (t.id = mc.movie_id)
                                       ->  Nested Loop  (cost=2.99..18202.60 rows=1 width=30) (actual time=581.128..1217.197 rows=30 loops=3)
                                             ->  Nested Loop  (cost=2.86..18202.37 rows=1 width=34) (actual time=5.505..1216.794 rows=117 loops=3)
                                                   ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=9) (actual time=0.291..195.290 rows=153308 loops=3)
                                                         Hash Cond: (miidx.info_type_id = it.id)
                                                         ->  Parallel Seq Scan on movie_info_idx miidx  (cost=0.00..13685.15 rows=575015 width=13) (actual time=0.045..86.679 rows=460012 loops=3)
                                                         ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.081..0.082 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.057..0.060 rows=1 loops=3)
                                                                     Filter: ((info)::text = 'rating'::text)
                                                                     Rows Removed by Filter: 112
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.58 rows=1 width=25) (actual time=0.006..0.006 rows=0 loops=459925)
                                                         Index Cond: (id = miidx.movie_id)
                                                         Filter: (((title)::text <> ''::text) AND (((title)::text ~~ '%Champion%'::text) OR ((title)::text ~~ '%Loser%'::text)))
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using kind_type_pkey on kind_type kt  (cost=0.13..0.18 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=352)
                                                   Index Cond: (id = t.kind_id)
                                                   Filter: ((kind)::text = 'movie'::text)
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.59 rows=5 width=12) (actual time=0.026..0.033 rows=3 loops=90)
                                             Index Cond: (movie_id = miidx.movie_id)
                                 ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.021..0.021 rows=1 loops=313)
                                       Index Cond: (id = mc.company_id)
                                       Filter: ((country_code)::text = '[us]'::text)
                                       Rows Removed by Filter: 0
                           ->  Index Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=161)
                                 Index Cond: (id = mc.company_type_id)
                                 Filter: ((kind)::text = 'production companies'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.48 rows=42 width=8) (actual time=0.028..0.112 rows=35 loops=61)
                           Index Cond: (movie_id = mc.movie_id)
               ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=2122)
                     Index Cond: (id = mi.info_type_id)
                     Filter: ((info)::text = 'release dates'::text)
                     Rows Removed by Filter: 1
 Planning Time: 21.985 ms
 Execution Time: 1239.261 ms
(47 rows)

SET
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=19206.33..19206.34 rows=1 width=96) (actual time=1368.511..1368.511 rows=1 loops=1)
   ->  Gather  (cost=1004.54..19206.32 rows=1 width=41) (actual time=1368.203..1379.897 rows=53 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Nested Loop  (cost=4.54..18206.22 rows=1 width=41) (actual time=1153.147..1360.640 rows=18 loops=3)
               ->  Nested Loop  (cost=4.40..18205.87 rows=2 width=45) (actual time=1153.091..1360.441 rows=73 loops=3)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=3.97..18203.87 rows=1 width=53) (actual time=1153.039..1360.073 rows=5 loops=3)
                           ->  Nested Loop  (cost=3.84..18203.70 rows=1 width=57) (actual time=1152.897..1359.975 rows=16 loops=3)
                                 ->  Nested Loop  (cost=3.42..18203.25 rows=1 width=42) (actual time=1152.857..1359.190 rows=32 loops=3)
                                       Join Filter: (t.id = mc.movie_id)
                                       ->  Nested Loop  (cost=2.99..18202.60 rows=1 width=30) (actual time=1152.798..1359.026 rows=10 loops=3)
                                             ->  Nested Loop  (cost=2.86..18202.37 rows=1 width=34) (actual time=70.767..1358.886 rows=22 loops=3)
                                                   ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=9) (actual time=0.305..197.371 rows=153308 loops=3)
                                                         Hash Cond: (miidx.info_type_id = it.id)
                                                         ->  Parallel Seq Scan on movie_info_idx miidx  (cost=0.00..13685.15 rows=575015 width=13) (actual time=0.044..88.224 rows=460012 loops=3)
                                                         ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.080..0.080 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.056..0.059 rows=1 loops=3)
                                                                     Filter: ((info)::text = 'rating'::text)
                                                                     Rows Removed by Filter: 112
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.58 rows=1 width=25) (actual time=0.007..0.007 rows=0 loops=459925)
                                                         Index Cond: (id = miidx.movie_id)
                                                         Filter: (((title)::text <> ''::text) AND (((title)::text ~~ 'Champion%'::text) OR ((title)::text ~~ 'Loser%'::text)))
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using kind_type_pkey on kind_type kt  (cost=0.13..0.18 rows=1 width=4) (actual time=0.006..0.006 rows=0 loops=66)
                                                   Index Cond: (id = t.kind_id)
                                                   Filter: ((kind)::text = 'movie'::text)
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.59 rows=5 width=12) (actual time=0.012..0.015 rows=3 loops=29)
                                             Index Cond: (movie_id = miidx.movie_id)
                                 ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.024..0.024 rows=0 loops=95)
                                       Index Cond: (id = mc.company_id)
                                       Filter: ((country_code)::text = '[us]'::text)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=47)
                                 Index Cond: (id = mc.company_type_id)
                                 Filter: ((kind)::text = 'production companies'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.48 rows=42 width=8) (actual time=0.022..0.072 rows=16 loops=14)
                           Index Cond: (movie_id = mc.movie_id)
               ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=218)
                     Index Cond: (id = mi.info_type_id)
                     Filter: ((info)::text = 'release dates'::text)
                     Rows Removed by Filter: 1
 Planning Time: 21.901 ms
 Execution Time: 1380.801 ms
(47 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=20770.24..20770.25 rows=1 width=96) (actual time=4516.139..4516.139 rows=1 loops=1)
   ->  Gather  (cost=20770.01..20770.22 rows=2 width=96) (actual time=4516.112..4522.357 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=19770.01..19770.02 rows=1 width=96) (actual time=4508.222..4508.223 rows=1 loops=3)
               ->  Hash Join  (cost=8.73..19769.26 rows=100 width=41) (actual time=633.105..4398.724 rows=223463 loops=3)
                     Hash Cond: (mi.info_type_id = it2.id)
                     ->  Nested Loop  (cost=6.30..19736.13 rows=11276 width=45) (actual time=632.792..4209.219 rows=1438861 loops=3)
                           ->  Nested Loop  (cost=5.87..19075.02 rows=346 width=53) (actual time=632.689..2603.308 rows=29098 loops=3)
                                 ->  Hash Join  (cost=5.45..18650.83 rows=952 width=38) (actual time=632.530..1910.957 rows=100870 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Nested Loop  (cost=4.39..18629.17 rows=3809 width=42) (actual time=632.427..1855.429 rows=257695 loops=3)
                                             ->  Hash Join  (cost=3.96..18186.75 rows=727 width=30) (actual time=632.277..1345.545 rows=69960 loops=3)
                                                   Hash Cond: (t.kind_id = kt.id)
                                                   ->  Nested Loop  (cost=2.86..18164.20 rows=5089 width=34) (actual time=0.256..1302.537 rows=153308 loops=3)
                                                         ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=9) (actual time=0.147..200.692 rows=153308 loops=3)
                                                               Hash Cond: (miidx.info_type_id = it.id)
                                                               ->  Parallel Seq Scan on movie_info_idx miidx  (cost=0.00..13685.15 rows=575015 width=13) (actual time=0.046..93.372 rows=460012 loops=3)
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.049..0.049 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.025..0.028 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'rating'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=25) (actual time=0.006..0.006 rows=1 loops=459925)
                                                               Index Cond: (id = miidx.movie_id)
                                                   ->  Hash  (cost=1.09..1.09 rows=1 width=4) (actual time=0.047..0.047 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.036..0.038 rows=1 loops=3)
                                                               Filter: ((kind)::text = 'movie'::text)
                                                               Rows Removed by Filter: 6
                                             ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.56 rows=5 width=12) (actual time=0.004..0.006 rows=4 loops=209880)
                                                   Index Cond: (movie_id = t.id)
                                       ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.045..0.045 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.032..0.034 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                 ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.006..0.006 rows=0 loops=302610)
                                       Index Cond: (id = mc.company_id)
                                       Filter: ((country_code)::text = '[us]'::text)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.49 rows=42 width=8) (actual time=0.009..0.046 rows=49 loops=87293)
                                 Index Cond: (movie_id = t.id)
                     ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.083..0.083 rows=1 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.048..0.059 rows=1 loops=3)
                                 Filter: ((info)::text = 'release dates'::text)
                                 Rows Removed by Filter: 112
 Planning Time: 21.806 ms
 Execution Time: 4523.094 ms
(50 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7394.40..7394.41 rows=1 width=64) (actual time=1440.108..1440.109 rows=1 loops=1)
   ->  Nested Loop  (cost=8.05..7394.40 rows=1 width=22) (actual time=39.298..1439.178 rows=761 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         Rows Removed by Join Filter: 117
         ->  Nested Loop  (cost=8.05..7391.97 rows=1 width=26) (actual time=39.276..1428.633 rows=878 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=7.62..7390.07 rows=1 width=34) (actual time=37.769..1171.999 rows=1147 loops=1)
                     Join Filter: (mi_idx.info_type_id = it2.id)
                     Rows Removed by Join Filter: 2256
                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.022..0.024 rows=1 loops=1)
                           Filter: ((info)::text = 'rating'::text)
                           Rows Removed by Filter: 112
                     ->  Nested Loop  (cost=7.62..7387.55 rows=9 width=38) (actual time=36.739..1171.180 rows=3403 loops=1)
                           Join Filter: (t.id = mi_idx.movie_id)
                           ->  Nested Loop  (cost=7.19..7385.94 rows=3 width=25) (actual time=36.666..1127.222 rows=1966 loops=1)
                                 Join Filter: (t.kind_id = kt.id)
                                 Rows Removed by Join Filter: 616
                                 ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.027..0.029 rows=1 loops=1)
                                       Filter: ((kind)::text = 'movie'::text)
                                       Rows Removed by Filter: 6
                                 ->  Nested Loop  (cost=7.19..7384.59 rows=21 width=29) (actual time=8.400..1126.238 rows=2582 loops=1)
                                       ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=7.733..549.630 rows=37091 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.972..38.363 rows=3 loops=1)
                                                   Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                   Rows Removed by Filter: 134167
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=4.993..164.593 rows=12364 loops=3)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=26312
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.697..3.697 rows=12364 loops=3)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.014..0.014 rows=0 loops=37091)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: (production_year > 2010)
                                             Rows Removed by Filter: 1
                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=13) (actual time=0.020..0.021 rows=2 loops=1966)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((info)::text < '8.5'::text)
                                 Rows Removed by Filter: 0
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.191..0.222 rows=1 loops=1147)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,USA,American}'::text[]))
                     Rows Removed by Filter: 69
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=878)
               Filter: ((info)::text = 'countries'::text)
               Rows Removed by Filter: 21
 Planning Time: 13.857 ms
 Execution Time: 1440.634 ms
(47 rows)

SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4874.32..4874.33 rows=1 width=64) (actual time=585.244..585.245 rows=1 loops=1)
   ->  Nested Loop  (cost=8.05..4874.31 rows=1 width=22) (actual time=372.405..585.227 rows=1 loops=1)
         Join Filter: (t.kind_id = kt.id)
         Rows Removed by Join Filter: 1
         ->  Nested Loop  (cost=8.05..4873.21 rows=1 width=26) (actual time=15.608..585.182 rows=2 loops=1)
               Join Filter: (mi_idx.info_type_id = it2.id)
               Rows Removed by Join Filter: 1
               ->  Nested Loop  (cost=8.05..4870.79 rows=1 width=30) (actual time=15.564..585.120 rows=3 loops=1)
                     Join Filter: (t.id = mi_idx.movie_id)
                     ->  Nested Loop  (cost=7.62..4870.28 rows=1 width=33) (actual time=15.516..584.826 rows=8 loops=1)
                           Join Filter: (mi.info_type_id = it1.id)
                           ->  Nested Loop  (cost=7.62..4867.85 rows=1 width=37) (actual time=15.500..584.690 rows=8 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=7.19..4865.95 rows=1 width=29) (actual time=15.175..582.555 rows=15 loops=1)
                                       ->  Nested Loop  (cost=6.76..4832.75 rows=67 width=4) (actual time=10.031..283.712 rows=19528 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=2 width=4) (actual time=2.082..32.930 rows=1 loops=1)
                                                   Filter: ((keyword)::text = ANY ('{murder,murder-in-title}'::text[]))
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1100.31 rows=300 width=8) (actual time=7.941..241.940 rows=19528 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=12389
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=6.092..6.092 rows=19528 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.50 rows=1 width=25) (actual time=0.014..0.014 rows=0 loops=19528)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: ((production_year > 2010) AND (((title)::text ~~ '%murder%'::text) OR ((title)::text ~~ '%Murder%'::text) OR ((title)::text ~~ '%Mord%'::text)))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.132..0.140 rows=1 loops=15)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,USA,American}'::text[]))
                                       Rows Removed by Filter: 12
                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=8)
                                 Filter: ((info)::text = 'countries'::text)
                                 Rows Removed by Filter: 7
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=13) (actual time=0.034..0.035 rows=0 loops=8)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((info)::text > '6.0'::text)
                           Rows Removed by Filter: 1
               ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.016..0.016 rows=1 loops=3)
                     Filter: ((info)::text = 'rating'::text)
                     Rows Removed by Filter: 104
         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.016..0.017 rows=1 loops=2)
               Filter: ((kind)::text = 'movie'::text)
               Rows Removed by Filter: 3
 Planning Time: 13.682 ms
 Execution Time: 585.946 ms
(46 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7403.14..7403.15 rows=1 width=64) (actual time=2456.914..2456.914 rows=1 loops=1)
   ->  Nested Loop  (cost=8.05..7403.13 rows=1 width=22) (actual time=8.183..2452.102 rows=4115 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         Rows Removed by Join Filter: 594
         ->  Nested Loop  (cost=8.05..7400.71 rows=1 width=26) (actual time=8.162..2396.431 rows=4709 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=7.62..7398.81 rows=1 width=34) (actual time=8.014..1270.711 rows=5949 loops=1)
                     Join Filter: (mi_idx.info_type_id = it2.id)
                     Rows Removed by Join Filter: 11942
                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.023..0.025 rows=1 loops=1)
                           Filter: ((info)::text = 'rating'::text)
                           Rows Removed by Filter: 112
                     ->  Nested Loop  (cost=7.62..7395.82 rows=46 width=38) (actual time=7.986..1267.021 rows=17891 loops=1)
                           Join Filter: (t.id = mi_idx.movie_id)
                           ->  Nested Loop  (cost=7.19..7387.25 rows=16 width=25) (actual time=7.942..1112.978 rows=8073 loops=1)
                                 Join Filter: (t.kind_id = kt.id)
                                 Rows Removed by Join Filter: 4332
                                 ->  Nested Loop  (cost=7.19..7384.59 rows=55 width=29) (actual time=7.793..1102.208 rows=9739 loops=1)
                                       ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=7.738..530.692 rows=37091 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.969..39.558 rows=3 loops=1)
                                                   Filter: ((keyword IS NOT NULL) AND ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[])))
                                                   Rows Removed by Filter: 134167
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=4.989..157.983 rows=12364 loops=3)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=26312
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.694..3.694 rows=12364 loops=3)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.014..0.014 rows=0 loops=37091)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: (production_year > 2005)
                                             Rows Removed by Filter: 1
                                 ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=9739)
                                       ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.023..0.025 rows=2 loops=1)
                                             Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                             Rows Removed by Filter: 5
                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=13) (actual time=0.016..0.018 rows=2 loops=8073)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((info)::text < '8.5'::text)
                                 Rows Removed by Filter: 0
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.163..0.188 rows=1 loops=5949)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                     Rows Removed by Filter: 71
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=4709)
               Filter: ((info)::text = 'countries'::text)
               Rows Removed by Filter: 20
 Planning Time: 13.192 ms
 Execution Time: 2457.493 ms
(48 rows)

SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=51296.76..51296.77 rows=1 width=64) (actual time=731.617..731.617 rows=1 loops=1)
   ->  Gather  (cost=51296.54..51296.75 rows=2 width=64) (actual time=731.051..738.361 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=50296.54..50296.55 rows=1 width=64) (actual time=723.386..723.386 rows=1 loops=3)
               ->  Nested Loop  (cost=5353.19..50296.50 rows=8 width=60) (actual time=170.655..723.250 rows=109 loops=3)
                     ->  Nested Loop  (cost=5352.77..50292.99 rows=8 width=64) (actual time=170.530..721.509 rows=109 loops=3)
                           ->  Nested Loop  (cost=5352.34..50291.15 rows=1 width=76) (actual time=111.031..720.919 rows=19 loops=3)
                                 ->  Nested Loop  (cost=5352.20..50290.92 rows=1 width=80) (actual time=110.947..720.754 rows=19 loops=3)
                                       ->  Nested Loop  (cost=5352.07..50290.76 rows=1 width=84) (actual time=110.841..720.558 rows=19 loops=3)
                                             ->  Nested Loop  (cost=5351.63..48102.52 rows=1107 width=33) (actual time=54.697..500.434 rows=1711 loops=3)
                                                   ->  Nested Loop  (cost=5351.20..46229.21 rows=2025 width=12) (actual time=54.582..433.837 rows=4566 loops=3)
                                                         ->  Parallel Hash Join  (cost=5350.78..40467.98 rows=2789 width=8) (actual time=53.527..327.296 rows=14612 loops=3)
                                                               Hash Cond: (mc.company_id = cn.id)
                                                               ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..35097.06 rows=7675 width=12) (actual time=0.054..261.159 rows=20555 loops=3)
                                                                     Filter: (((note)::text ~~ '%(200%)%'::text) AND ((note)::text ~~ '%(worldwide)%'::text))
                                                                     Rows Removed by Filter: 849155
                                                               ->  Parallel Hash  (cost=4722.92..4722.92 rows=50229 width=4) (actual time=52.204..52.204 rows=28281 loops=3)
                                                                     Buckets: 131072  Batches: 1  Memory Usage: 4416kB
                                                                     ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=50229 width=4) (actual time=0.054..35.664 rows=28281 loops=3)
                                                                           Filter: ((country_code)::text = '[us]'::text)
                                                                           Rows Removed by Filter: 50051
                                                         ->  Index Only Scan using movie_id_aka_title on aka_title at  (cost=0.42..2.04 rows=3 width=4) (actual time=0.005..0.007 rows=0 loops=43837)
                                                               Index Cond: (movie_id = mc.movie_id)
                                                               Heap Fetches: 13699
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.93 rows=1 width=21) (actual time=0.014..0.014 rows=0 loops=13699)
                                                         Index Cond: (id = at.movie_id)
                                                         Filter: (production_year > 2000)
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.97 rows=1 width=51) (actual time=0.127..0.128 rows=0 loops=5134)
                                                   Index Cond: (movie_id = t.id)
                                                   Filter: (((note)::text ~~ '%internet%'::text) AND ((info)::text ~~ 'USA:% 200%'::text))
                                                   Rows Removed by Filter: 72
                                       ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=57)
                                             Index Cond: (id = mc.company_type_id)
                                             Heap Fetches: 57
                                 ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.19 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=57)
                                       Index Cond: (id = mi.info_type_id)
                                       Filter: ((info)::text = 'release dates'::text)
                           ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.36 rows=47 width=8) (actual time=0.026..0.028 rows=6 loops=57)
                                 Index Cond: (movie_id = t.id)
                     ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=328)
                           Index Cond: (id = mk.keyword_id)
                           Heap Fetches: 328
 Planning Time: 29.742 ms
 Execution Time: 739.069 ms
(46 rows)

SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=6434.72..6434.73 rows=1 width=64) (actual time=69.155..69.155 rows=1 loops=1)
   ->  Gather  (cost=6434.61..6434.72 rows=1 width=64) (actual time=68.948..71.891 rows=2 loops=1)
         Workers Planned: 1
         Workers Launched: 1
         ->  Partial Aggregate  (cost=5434.61..5434.62 rows=1 width=64) (actual time=63.203..63.204 rows=1 loops=2)
               ->  Nested Loop  (cost=2.84..5434.58 rows=5 width=60) (actual time=48.225..63.173 rows=18 loops=2)
                     ->  Nested Loop  (cost=2.42..5432.39 rows=5 width=64) (actual time=48.157..62.659 rows=18 loops=2)
                           ->  Nested Loop  (cost=1.99..5430.46 rows=1 width=76) (actual time=41.221..62.513 rows=2 loops=2)
                                 ->  Nested Loop  (cost=1.85..5430.22 rows=1 width=80) (actual time=41.193..62.478 rows=2 loops=2)
                                       ->  Nested Loop  (cost=1.41..5427.71 rows=1 width=29) (actual time=36.150..59.986 rows=13 loops=2)
                                             ->  Nested Loop  (cost=0.98..5426.78 rows=1 width=8) (actual time=36.084..59.378 rows=14 loops=2)
                                                   ->  Nested Loop  (cost=0.85..5426.62 rows=1 width=12) (actual time=36.045..59.277 rows=14 loops=2)
                                                         ->  Nested Loop  (cost=0.43..5424.56 rows=1 width=8) (actual time=35.107..57.012 rows=139 loops=2)
                                                               ->  Parallel Seq Scan on company_name cn  (cost=0.00..5068.50 rows=1 width=4) (actual time=35.006..46.418 rows=0 loops=2)
                                                                     Filter: (((country_code)::text = '[us]'::text) AND ((name)::text = 'YouTube'::text))
                                                                     Rows Removed by Filter: 117498
                                                               ->  Index Scan using company_id_movie_companies on movie_companies mc  (cost=0.43..356.04 rows=1 width=12) (actual time=0.199..21.082 rows=278 loops=1)
                                                                     Index Cond: (company_id = cn.id)
                                                                     Filter: (((note)::text ~~ '%(200%)%'::text) AND ((note)::text ~~ '%(worldwide)%'::text))
                                                                     Rows Removed by Filter: 1180
                                                         ->  Index Only Scan using movie_id_aka_title on aka_title at  (cost=0.42..2.04 rows=3 width=4) (actual time=0.015..0.015 rows=0 loops=278)
                                                               Index Cond: (movie_id = mc.movie_id)
                                                               Heap Fetches: 27
                                                   ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=27)
                                                         Index Cond: (id = mc.company_type_id)
                                                         Heap Fetches: 27
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..0.93 rows=1 width=21) (actual time=0.044..0.044 rows=1 loops=27)
                                                   Index Cond: (id = at.movie_id)
                                                   Filter: ((production_year >= 2005) AND (production_year <= 2010))
                                                   Rows Removed by Filter: 0
                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.51 rows=1 width=51) (actual time=0.180..0.190 rows=0 loops=26)
                                             Index Cond: (movie_id = t.id)
                                             Filter: (((note)::text ~~ '%internet%'::text) AND ((info)::text ~~ 'USA:% 200%'::text))
                                             Rows Removed by Filter: 19
                                 ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.19 rows=1 width=4) (actual time=0.021..0.021 rows=1 loops=3)
                                       Index Cond: (id = mi.info_type_id)
                                       Filter: ((info)::text = 'release dates'::text)
                           ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.46 rows=47 width=8) (actual time=0.085..0.091 rows=12 loops=3)
                                 Index Cond: (movie_id = t.id)
                     ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.026..0.026 rows=1 loops=37)
                           Index Cond: (id = mk.keyword_id)
                           Heap Fetches: 37
 Planning Time: 30.204 ms
 Execution Time: 72.589 ms
(44 rows)

SET
                                                                                                          QUERY PLAN                                                                                                          
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=271217.23..271217.24 rows=1 width=64) (actual time=1390.540..1390.540 rows=1 loops=1)
   ->  Gather  (cost=271217.01..271217.22 rows=2 width=64) (actual time=1390.359..1398.519 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=270217.01..270217.02 rows=1 width=64) (actual time=1382.881..1382.881 rows=1 loops=3)
               ->  Nested Loop  (cost=5.11..270216.63 rows=76 width=60) (actual time=322.114..1382.404 rows=757 loops=3)
                     Join Filter: (t.id = at.movie_id)
                     ->  Nested Loop  (cost=4.69..270201.06 rows=30 width=76) (actual time=312.685..1373.032 rows=2655 loops=3)
                           ->  Nested Loop  (cost=4.27..270187.90 rows=30 width=80) (actual time=312.597..1356.889 rows=2655 loops=3)
                                 ->  Nested Loop  (cost=3.84..270184.28 rows=2 width=72) (actual time=312.228..1341.455 rows=882 loops=3)
                                       ->  Nested Loop  (cost=3.71..270183.98 rows=2 width=76) (actual time=312.153..1338.129 rows=882 loops=3)
                                             ->  Nested Loop  (cost=3.29..270181.31 rows=6 width=80) (actual time=311.698..1322.679 rows=961 loops=3)
                                                   ->  Nested Loop  (cost=2.86..270180.68 rows=1 width=68) (actual time=311.591..1298.269 rows=594 loops=3)
                                                         ->  Hash Join  (cost=2.43..270164.10 rows=2 width=47) (actual time=311.495..1276.052 rows=594 loops=3)
                                                               Hash Cond: (mi.info_type_id = it1.id)
                                                               ->  Parallel Seq Scan on movie_info mi  (cost=0.00..270161.12 rows=200 width=51) (actual time=311.173..1275.063 rows=594 loops=3)
                                                                     Filter: ((info IS NOT NULL) AND ((note)::text ~~ '%internet%'::text) AND (((info)::text ~~ 'USA:% 199%'::text) OR ((info)::text ~~ 'USA:% 200%'::text)))
                                                                     Rows Removed by Filter: 4944646
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.090..0.091 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.049..0.060 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'release dates'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..8.29 rows=1 width=21) (actual time=0.036..0.036 rows=1 loops=1783)
                                                               Index Cond: (id = mi.movie_id)
                                                               Filter: (production_year > 1990)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.58 rows=5 width=12) (actual time=0.031..0.039 rows=2 loops=1782)
                                                         Index Cond: (movie_id = t.id)
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=2884)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((country_code)::text = '[us]'::text)
                                                   Rows Removed by Filter: 0
                                       ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=2647)
                                             Index Cond: (id = mc.company_type_id)
                                             Heap Fetches: 2647
                                 ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.34 rows=47 width=8) (actual time=0.015..0.016 rows=3 loops=2647)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=7964)
                                 Index Cond: (id = mk.keyword_id)
                                 Heap Fetches: 7964
                     ->  Index Only Scan using movie_id_aka_title on aka_title at  (cost=0.42..0.48 rows=3 width=4) (actual time=0.003..0.003 rows=0 loops=7964)
                           Index Cond: (movie_id = mk.movie_id)
                           Heap Fetches: 2271
 Planning Time: 30.319 ms
 Execution Time: 1399.285 ms
(46 rows)

SET
                                                                                               QUERY PLAN                                                                                               
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=241404.07..241404.08 rows=1 width=64) (actual time=1637.647..1637.647 rows=1 loops=1)
   ->  Gather  (cost=241403.85..241404.06 rows=2 width=64) (actual time=1637.459..1649.022 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=240403.85..240403.86 rows=1 width=64) (actual time=1630.104..1630.104 rows=1 loops=3)
               ->  Nested Loop  (cost=6.07..240394.49 rows=1873 width=38) (actual time=315.486..1628.571 rows=3782 loops=3)
                     Join Filter: (t.id = at.movie_id)
                     ->  Nested Loop  (cost=5.65..240025.58 rows=711 width=33) (actual time=303.253..1600.829 rows=8521 loops=3)
                           ->  Nested Loop  (cost=5.23..239713.69 rows=711 width=37) (actual time=303.153..1561.511 rows=8521 loops=3)
                                 ->  Hash Join  (cost=4.80..239612.38 rows=56 width=29) (actual time=302.627..1515.129 rows=3286 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Nested Loop  (cost=3.71..239610.99 rows=56 width=33) (actual time=302.397..1512.028 rows=3286 loops=3)
                                             ->  Nested Loop  (cost=3.29..239542.81 rows=153 width=37) (actual time=302.342..1456.003 rows=4792 loops=3)
                                                   ->  Nested Loop  (cost=2.86..239524.64 rows=29 width=25) (actual time=302.105..1356.952 rows=3554 loops=3)
                                                         ->  Hash Join  (cost=2.43..239268.80 rows=42 width=4) (actual time=302.019..1257.830 rows=3560 loops=3)
                                                               Hash Cond: (mi.info_type_id = it1.id)
                                                               ->  Parallel Seq Scan on movie_info mi  (cost=0.00..239253.38 rows=4774 width=8) (actual time=44.454..1254.496 rows=3603 loops=3)
                                                                     Filter: ((note)::text ~~ '%internet%'::text)
                                                                     Rows Removed by Filter: 4941637
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.067..0.067 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.046..0.057 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'release dates'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..6.09 rows=1 width=21) (actual time=0.026..0.026 rows=1 loops=10679)
                                                               Index Cond: (id = mi.movie_id)
                                                               Filter: (production_year > 1990)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.58 rows=5 width=12) (actual time=0.022..0.026 rows=1 loops=10662)
                                                         Index Cond: (movie_id = t.id)
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.011..0.011 rows=1 loops=14377)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((country_code)::text = '[us]'::text)
                                                   Rows Removed by Filter: 0
                                       ->  Hash  (cost=1.04..1.04 rows=4 width=4) (actual time=0.058..0.058 rows=4 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.034..0.035 rows=4 loops=3)
                                 ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.34 rows=47 width=8) (actual time=0.012..0.013 rows=3 loops=9857)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=25564)
                                 Index Cond: (id = mk.keyword_id)
                                 Heap Fetches: 25564
                     ->  Index Scan using movie_id_aka_title on aka_title at  (cost=0.42..0.48 rows=3 width=25) (actual time=0.003..0.003 rows=0 loops=25564)
                           Index Cond: (movie_id = mk.movie_id)
 Planning Time: 29.738 ms
 Execution Time: 1649.749 ms
(46 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3790.42..3790.43 rows=1 width=64) (actual time=833.812..833.813 rows=1 loops=1)
   ->  Nested Loop  (cost=9.46..3790.05 rows=74 width=33) (actual time=37.334..833.475 rows=385 loops=1)
         Join Filter: (n.id = an.person_id)
         ->  Nested Loop  (cost=9.03..3774.48 rows=32 width=25) (actual time=37.258..827.564 rows=323 loops=1)
               ->  Nested Loop  (cost=8.60..3759.93 rows=32 width=21) (actual time=37.159..820.464 rows=323 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=8.04..3755.95 rows=2 width=29) (actual time=37.078..816.658 rows=25 loops=1)
                           ->  Nested Loop  (cost=7.62..3753.72 rows=5 width=33) (actual time=36.607..815.764 rows=54 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.19..3753.12 rows=1 width=25) (actual time=29.376..813.992 rows=146 loops=1)
                                       ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.828..270.811 rows=41840 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.226..26.749 rows=1 loops=1)
                                                   Filter: ((keyword)::text = 'character-name-in-title'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.593..229.154 rows=41840 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=11541
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.853..7.853 rows=41840 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.012..0.012 rows=0 loops=41840)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: ((episode_nr >= 50) AND (episode_nr < 100))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.010..0.011 rows=0 loops=146)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.015..0.015 rows=0 loops=54)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.032..0.143 rows=13 loops=25)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.021..0.021 rows=1 loops=323)
                     Index Cond: (id = ci.person_id)
                     Heap Fetches: 323
         ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.46 rows=2 width=20) (actual time=0.015..0.017 rows=1 loops=323)
               Index Cond: (person_id = ci.person_id)
 Planning Time: 16.680 ms
 Execution Time: 834.499 ms
(38 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=5125.30..5125.31 rows=1 width=64) (actual time=51373.123..51373.123 rows=1 loops=1)
   ->  Nested Loop  (cost=9.46..5111.49 rows=2761 width=33) (actual time=12.241..49778.790 rows=3710592 loops=1)
         Join Filter: (n.id = an.person_id)
         ->  Nested Loop  (cost=9.03..4526.68 rows=1202 width=25) (actual time=12.160..33729.823 rows=2832555 loops=1)
               ->  Nested Loop  (cost=8.60..3979.90 rows=1202 width=21) (actual time=12.076..13592.693 rows=2832555 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=8.04..3852.77 rows=64 width=29) (actual time=11.163..3270.223 rows=68316 loops=1)
                           ->  Nested Loop  (cost=7.62..3773.45 rows=178 width=33) (actual time=11.032..1486.665 rows=148552 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.19..3752.95 rows=34 width=25) (actual time=10.910..905.817 rows=41840 loops=1)
                                       ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.871..271.540 rows=41840 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.299..26.612 rows=1 loops=1)
                                                   Filter: ((keyword)::text = 'character-name-in-title'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.563..229.648 rows=41840 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=11541
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.830..7.830 rows=41840 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.014..0.014 rows=1 loops=41840)
                                             Index Cond: (id = mk.movie_id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.008..0.011 rows=4 loops=41840)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.011..0.011 rows=0 loops=148552)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.010..0.136 rows=41 loops=68316)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=2832555)
                     Index Cond: (id = ci.person_id)
                     Heap Fetches: 2832555
         ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.46 rows=2 width=20) (actual time=0.004..0.005 rows=1 loops=2832555)
               Index Cond: (person_id = ci.person_id)
 Planning Time: 16.498 ms
 Execution Time: 51373.851 ms
(36 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4271.02..4271.03 rows=1 width=64) (actual time=4444.346..4444.346 rows=1 loops=1)
   ->  Nested Loop  (cost=9.46..4265.81 rows=1042 width=33) (actual time=12.300..4307.045 rows=319932 loops=1)
         Join Filter: (n.id = an.person_id)
         ->  Nested Loop  (cost=9.03..4044.93 rows=454 width=25) (actual time=12.233..3074.896 rows=221609 loops=1)
               ->  Nested Loop  (cost=8.60..3838.40 rows=454 width=21) (actual time=12.158..1628.623 rows=221609 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=8.04..3790.73 rows=24 width=29) (actual time=12.099..873.497 rows=8538 loops=1)
                           ->  Nested Loop  (cost=7.62..3760.87 rows=67 width=33) (actual time=11.214..806.585 rows=11406 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.19..3753.04 rows=13 width=25) (actual time=11.011..739.340 rows=6926 loops=1)
                                       ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.978..256.245 rows=41840 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.331..26.473 rows=1 loops=1)
                                                   Filter: ((keyword)::text = 'character-name-in-title'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.640..215.198 rows=41840 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=11541
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.920..7.920 rows=41840 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.011..0.011 rows=0 loops=41840)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: (episode_nr < 100)
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.006..0.008 rows=2 loops=6926)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=11406)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.009..0.079 rows=26 loops=8538)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=221609)
                     Index Cond: (id = ci.person_id)
                     Heap Fetches: 221609
         ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.46 rows=2 width=20) (actual time=0.004..0.005 rows=1 loops=221609)
               Index Cond: (person_id = ci.person_id)
 Planning Time: 16.917 ms
 Execution Time: 4445.062 ms
(38 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4132.51..4132.52 rows=1 width=64) (actual time=3642.245..3642.245 rows=1 loops=1)
   ->  Nested Loop  (cost=9.46..4128.69 rows=764 width=33) (actual time=12.256..3535.799 rows=249455 loops=1)
         Join Filter: (n.id = an.person_id)
         ->  Nested Loop  (cost=9.03..3967.16 rows=332 width=25) (actual time=12.181..2562.000 rows=169273 loops=1)
               ->  Nested Loop  (cost=8.60..3816.14 rows=332 width=21) (actual time=12.111..1437.602 rows=169273 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=8.04..3780.38 rows=18 width=29) (actual time=12.047..846.644 rows=6766 loops=1)
                           ->  Nested Loop  (cost=7.62..3758.55 rows=49 width=33) (actual time=11.185..795.364 rows=8661 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.19..3753.12 rows=9 width=25) (actual time=10.985..741.458 rows=5385 loops=1)
                                       ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.955..256.027 rows=41840 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.289..26.478 rows=1 loops=1)
                                                   Filter: ((keyword)::text = 'character-name-in-title'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.658..215.173 rows=41840 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=11541
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.946..7.946 rows=41840 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.011..0.011 rows=0 loops=41840)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: ((episode_nr >= 5) AND (episode_nr < 100))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.007..0.008 rows=2 loops=5385)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=8661)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.009..0.078 rows=25 loops=6766)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=169273)
                     Index Cond: (id = ci.person_id)
                     Heap Fetches: 169273
         ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.46 rows=2 width=20) (actual time=0.004..0.005 rows=1 loops=169273)
               Index Cond: (person_id = ci.person_id)
 Planning Time: 16.672 ms
 Execution Time: 3642.983 ms
(38 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4530.17..4530.18 rows=1 width=64) (actual time=33043.525..33043.526 rows=1 loops=1)
   ->  Nested Loop  (cost=9.03..4529.69 rows=97 width=15) (actual time=12.265..32887.989 rows=258289 loops=1)
         ->  Nested Loop  (cost=8.60..3979.90 rows=1202 width=4) (actual time=12.107..13089.140 rows=2832555 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=8.04..3852.77 rows=64 width=12) (actual time=11.163..3054.933 rows=68316 loops=1)
                     ->  Nested Loop  (cost=7.62..3773.45 rows=178 width=16) (actual time=11.026..1445.690 rows=148552 loops=1)
                           Join Filter: (t.id = mc.movie_id)
                           ->  Nested Loop  (cost=7.19..3752.95 rows=34 width=8) (actual time=10.893..885.483 rows=41840 loops=1)
                                 ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.863..264.054 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.327..26.515 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.528..223.266 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.809..7.809 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=41840)
                                       Index Cond: (id = mk.movie_id)
                                       Heap Fetches: 41840
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.008..0.011 rows=4 loops=41840)
                                 Index Cond: (movie_id = mk.movie_id)
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.010..0.010 rows=0 loops=148552)
                           Index Cond: (id = mc.company_id)
                           Filter: ((country_code)::text = '[us]'::text)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.009..0.133 rows=41 loops=68316)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.006..0.006 rows=0 loops=2832555)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ 'B%'::text)
               Rows Removed by Filter: 1
 Planning Time: 10.588 ms
 Execution Time: 33044.264 ms
(34 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4371.77..4371.78 rows=1 width=64) (actual time=32266.327..32266.327 rows=1 loops=1)
   ->  Nested Loop  (cost=9.03..4371.77 rows=1 width=15) (actual time=26.721..32227.537 rows=52306 loops=1)
         ->  Nested Loop  (cost=8.60..4371.31 rows=1 width=27) (actual time=26.647..31966.191 rows=52306 loops=1)
               ->  Nested Loop  (cost=8.18..4370.87 rows=1 width=31) (actual time=26.592..31463.888 rows=52306 loops=1)
                     ->  Nested Loop  (cost=7.75..4370.30 rows=1 width=23) (actual time=26.545..31301.850 rows=6642 loops=1)
                           ->  Nested Loop  (cost=7.32..3800.84 rows=1245 width=12) (actual time=10.982..11830.294 rows=1038393 loops=1)
                                 ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.934..265.766 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.303..26.372 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.623..223.354 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.902..7.902 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.017..0.262 rows=25 loops=41840)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.018..0.018 rows=0 loops=1038393)
                                 Index Cond: (id = ci.person_id)
                                 Filter: ((name)::text ~~ 'Z%'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.52 rows=5 width=8) (actual time=0.014..0.021 rows=8 loops=6642)
                           Index Cond: (movie_id = ci.movie_id)
               ->  Index Only Scan using company_name_pkey on company_name cn  (cost=0.42..0.44 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=52306)
                     Index Cond: (id = mc.company_id)
                     Heap Fetches: 52306
         ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.45 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=52306)
               Index Cond: (id = ci.movie_id)
               Heap Fetches: 52306
 Planning Time: 10.565 ms
 Execution Time: 32266.965 ms
(31 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4371.77..4371.78 rows=1 width=64) (actual time=31219.835..31219.836 rows=1 loops=1)
   ->  Nested Loop  (cost=9.03..4371.77 rows=1 width=15) (actual time=225.107..31217.058 rows=1918 loops=1)
         ->  Nested Loop  (cost=8.60..4371.31 rows=1 width=27) (actual time=225.034..31203.130 rows=1918 loops=1)
               ->  Nested Loop  (cost=8.18..4370.87 rows=1 width=31) (actual time=224.977..31168.119 rows=1918 loops=1)
                     ->  Nested Loop  (cost=7.75..4370.30 rows=1 width=23) (actual time=224.929..31157.404 rows=250 loops=1)
                           ->  Nested Loop  (cost=7.32..3800.84 rows=1245 width=12) (actual time=10.896..11855.577 rows=1038393 loops=1)
                                 ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.846..264.198 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.316..26.594 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.522..221.633 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.813..7.813 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.018..0.262 rows=25 loops=41840)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.018..0.018 rows=0 loops=1038393)
                                 Index Cond: (id = ci.person_id)
                                 Filter: ((name)::text ~~ 'X%'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.52 rows=5 width=8) (actual time=0.026..0.037 rows=8 loops=250)
                           Index Cond: (movie_id = ci.movie_id)
               ->  Index Only Scan using company_name_pkey on company_name cn  (cost=0.42..0.44 rows=1 width=4) (actual time=0.017..0.017 rows=1 loops=1918)
                     Index Cond: (id = mc.company_id)
                     Heap Fetches: 1918
         ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.45 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=1918)
               Index Cond: (id = ci.movie_id)
               Heap Fetches: 1918
 Planning Time: 10.576 ms
 Execution Time: 31220.466 ms
(31 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4371.77..4371.78 rows=1 width=32) (actual time=31435.382..31435.383 rows=1 loops=1)
   ->  Nested Loop  (cost=9.03..4371.77 rows=1 width=15) (actual time=129.558..31421.842 rows=11538 loops=1)
         ->  Nested Loop  (cost=8.60..4371.31 rows=1 width=27) (actual time=129.489..31338.857 rows=11538 loops=1)
               ->  Nested Loop  (cost=8.18..4370.87 rows=1 width=31) (actual time=129.415..31163.568 rows=11538 loops=1)
                     ->  Nested Loop  (cost=7.75..4370.30 rows=1 width=23) (actual time=129.368..31100.622 rows=1972 loops=1)
                           ->  Nested Loop  (cost=7.32..3800.84 rows=1245 width=12) (actual time=11.058..11755.921 rows=1038393 loops=1)
                                 ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=11.012..264.387 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.284..26.388 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.719..221.855 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.977..7.978 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.017..0.260 rows=25 loops=41840)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.018..0.018 rows=0 loops=1038393)
                                 Index Cond: (id = ci.person_id)
                                 Filter: ((name)::text ~~ '%Bert%'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.52 rows=5 width=8) (actual time=0.020..0.028 rows=6 loops=1972)
                           Index Cond: (movie_id = ci.movie_id)
               ->  Index Only Scan using company_name_pkey on company_name cn  (cost=0.42..0.44 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=11538)
                     Index Cond: (id = mc.company_id)
                     Heap Fetches: 11538
         ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.45 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=11538)
               Index Cond: (id = ci.movie_id)
               Heap Fetches: 11538
 Planning Time: 10.804 ms
 Execution Time: 31436.075 ms
(31 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4529.69..4529.70 rows=1 width=32) (actual time=33557.888..33557.889 rows=1 loops=1)
   ->  Nested Loop  (cost=9.03..4526.68 rows=1202 width=15) (actual time=12.128..32390.914 rows=2832555 loops=1)
         ->  Nested Loop  (cost=8.60..3979.90 rows=1202 width=4) (actual time=12.036..13340.469 rows=2832555 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=8.04..3852.77 rows=64 width=12) (actual time=11.091..3081.428 rows=68316 loops=1)
                     ->  Nested Loop  (cost=7.62..3773.45 rows=178 width=16) (actual time=10.944..1450.612 rows=148552 loops=1)
                           Join Filter: (t.id = mc.movie_id)
                           ->  Nested Loop  (cost=7.19..3752.95 rows=34 width=8) (actual time=10.811..888.940 rows=41840 loops=1)
                                 ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.783..265.959 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.269..26.684 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.504..224.691 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.777..7.777 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=41840)
                                       Index Cond: (id = mk.movie_id)
                                       Heap Fetches: 41840
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.008..0.011 rows=4 loops=41840)
                                 Index Cond: (movie_id = mk.movie_id)
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.010..0.010 rows=0 loops=148552)
                           Index Cond: (id = mc.company_id)
                           Filter: ((country_code)::text = '[us]'::text)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.009..0.136 rows=41 loops=68316)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=19) (actual time=0.006..0.006 rows=1 loops=2832555)
               Index Cond: (id = ci.person_id)
 Planning Time: 10.641 ms
 Execution Time: 33558.532 ms
(32 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4654.76..4654.77 rows=1 width=32) (actual time=37941.114..37941.115 rows=1 loops=1)
   ->  Nested Loop  (cost=9.03..4653.75 rows=401 width=15) (actual time=15.316..37545.479 rows=1113120 loops=1)
         ->  Nested Loop  (cost=8.61..4476.08 rows=401 width=19) (actual time=15.254..34086.540 rows=1113120 loops=1)
               ->  Nested Loop  (cost=8.18..4389.95 rows=151 width=27) (actual time=11.175..32596.649 rows=149494 loops=1)
                     ->  Nested Loop  (cost=7.75..3820.49 rows=1245 width=16) (actual time=11.103..12788.680 rows=1038393 loops=1)
                           Join Filter: (t.id = ci.movie_id)
                           ->  Nested Loop  (cost=7.19..3752.95 rows=34 width=8) (actual time=11.057..903.498 rows=41840 loops=1)
                                 ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=11.019..269.131 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.290..26.439 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.721..226.016 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.979..7.979 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=41840)
                                       Index Cond: (id = mk.movie_id)
                                       Heap Fetches: 41840
                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.018..0.264 rows=25 loops=41840)
                                 Index Cond: (movie_id = mk.movie_id)
                     ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.018..0.018 rows=0 loops=1038393)
                           Index Cond: (id = ci.person_id)
                           Filter: ((name)::text ~~ '%B%'::text)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.52 rows=5 width=8) (actual time=0.005..0.008 rows=7 loops=149494)
                     Index Cond: (movie_id = ci.movie_id)
         ->  Index Only Scan using company_name_pkey on company_name cn  (cost=0.42..0.44 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1113120)
               Index Cond: (id = mc.company_id)
               Heap Fetches: 1113120
 Planning Time: 10.908 ms
 Execution Time: 37941.781 ms
(32 rows)

SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=111692.15..111692.16 rows=1 width=96) (actual time=12725.375..12725.376 rows=1 loops=1)
   ->  Nested Loop  (cost=1006.71..111692.14 rows=1 width=65) (actual time=440.140..12723.967 rows=410 loops=1)
         ->  Gather  (cost=1006.28..111691.68 rows=1 width=60) (actual time=440.039..12718.643 rows=410 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Nested Loop  (cost=6.28..110691.58 rows=1 width=60) (actual time=262.510..12712.664 rows=137 loops=3)
                     ->  Nested Loop  (cost=5.85..108696.70 rows=3377 width=64) (actual time=2.894..11677.091 rows=35780 loops=3)
                           ->  Hash Join  (cost=5.29..74146.13 rows=1468 width=56) (actual time=1.192..3683.794 rows=15144 loops=3)
                                 Hash Cond: (mi.info_type_id = it1.id)
                                 ->  Nested Loop  (cost=2.86..73692.04 rows=165842 width=60) (actual time=0.250..3410.773 rows=2310111 loops=3)
                                       ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=9) (actual time=0.129..209.419 rows=153308 loops=3)
                                             Hash Cond: (mi_idx.info_type_id = it2.id)
                                             ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=13) (actual time=0.037..90.861 rows=460012 loops=3)
                                             ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.037..0.038 rows=1 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.020..0.022 rows=1 loops=3)
                                                         Filter: ((info)::text = 'votes'::text)
                                                         Rows Removed by Filter: 112
                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..11.06 rows=42 width=51) (actual time=0.005..0.017 rows=15 loops=459925)
                                             Index Cond: (movie_id = mi_idx.movie_id)
                                 ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.076..0.076 rows=1 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.051..0.053 rows=1 loops=3)
                                             Filter: ((info)::text = 'budget'::text)
                                             Rows Removed by Filter: 112
                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..23.52 rows=2 width=8) (actual time=0.304..0.526 rows=2 loops=45431)
                                 Index Cond: (movie_id = mi.movie_id)
                                 Filter: ((note)::text = ANY ('{(producer),"(executive producer)"}'::text[]))
                                 Rows Removed by Filter: 38
                     ->  Index Scan using name_pkey on name n  (cost=0.43..0.59 rows=1 width=4) (actual time=0.028..0.028 rows=0 loops=107339)
                           Index Cond: (id = ci.person_id)
                           Filter: (((name)::text ~~ '%Tim%'::text) AND ((gender)::text = 'm'::text))
                           Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.46 rows=1 width=21) (actual time=0.029..0.029 rows=1 loops=410)
               Index Cond: (id = mi.movie_id)
 Planning Time: 10.336 ms
 Execution Time: 12733.580 ms
(37 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=17462.60..17462.61 rows=1 width=96) (actual time=528.378..528.378 rows=1 loops=1)
   ->  Nested Loop  (cost=1004.43..17462.59 rows=1 width=65) (actual time=267.614..528.317 rows=11 loops=1)
         ->  Nested Loop  (cost=1004.00..17461.90 rows=1 width=69) (actual time=118.228..518.701 rows=268 loops=1)
               ->  Gather  (cost=1003.43..17437.17 rows=1 width=77) (actual time=15.781..356.466 rows=358 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Nested Loop  (cost=3.43..16437.07 rows=1 width=77) (actual time=34.547..461.683 rows=119 loops=3)
                           ->  Nested Loop  (cost=3.29..16435.43 rows=10 width=81) (actual time=34.519..461.065 rows=119 loops=3)
                                 ->  Nested Loop  (cost=2.86..15789.08 rows=56 width=30) (actual time=2.016..284.141 rows=2051 loops=3)
                                       ->  Hash Join  (cost=2.43..15179.85 rows=178 width=9) (actual time=0.281..144.354 rows=5283 loops=3)
                                             Hash Cond: (mi_idx.info_type_id = it2.id)
                                             ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..15122.68 rows=20101 width=13) (actual time=0.061..136.945 rows=17883 loops=3)
                                                   Filter: ((info)::text > '8.0'::text)
                                                   Rows Removed by Filter: 442129
                                             ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.065..0.065 rows=1 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.040..0.043 rows=1 loops=3)
                                                         Filter: ((info)::text = 'rating'::text)
                                                         Rows Removed by Filter: 112
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..3.42 rows=1 width=21) (actual time=0.025..0.025 rows=0 loops=15849)
                                             Index Cond: (id = mi_idx.movie_id)
                                             Filter: ((production_year >= 2008) AND (production_year <= 2014))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..11.53 rows=1 width=51) (actual time=0.085..0.085 rows=0 loops=6152)
                                       Index Cond: (movie_id = t.id)
                                       Filter: ((note IS NULL) AND ((info)::text = ANY ('{Horror,Thriller}'::text[])))
                                       Rows Removed by Filter: 18
                           ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=358)
                                 Index Cond: (id = mi.info_type_id)
                                 Filter: ((info)::text = 'genres'::text)
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..24.72 rows=1 width=8) (actual time=0.359..0.469 rows=1 loops=358)
                     Index Cond: (movie_id = t.id)
                     Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                     Rows Removed by Filter: 34
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.69 rows=1 width=4) (actual time=0.035..0.035 rows=0 loops=268)
               Index Cond: (id = ci.person_id)
               Filter: ((gender IS NOT NULL) AND ((gender)::text = 'f'::text))
               Rows Removed by Filter: 1
 Planning Time: 10.186 ms
 Execution Time: 535.242 ms
(40 rows)

SET
                                                                                          QUERY PLAN                                                                                          
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=74751.79..74751.80 rows=1 width=96) (actual time=17228.901..17228.901 rows=1 loops=1)
   ->  Gather  (cost=74751.57..74751.78 rows=2 width=96) (actual time=17228.231..17235.170 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=73751.57..73751.58 rows=1 width=96) (actual time=17219.881..17219.881 rows=1 loops=3)
               ->  Nested Loop  (cost=6.71..73751.49 rows=11 width=65) (actual time=31.196..17206.216 rows=9358 loops=3)
                     ->  Nested Loop  (cost=6.28..73732.96 rows=27 width=69) (actual time=23.347..16750.718 rows=18052 loops=3)
                           ->  Nested Loop  (cost=5.72..73229.83 rows=21 width=77) (actual time=1.702..4253.820 rows=34172 loops=3)
                                 Join Filter: (mi.movie_id = t.id)
                                 ->  Hash Join  (cost=5.29..73217.55 rows=21 width=56) (actual time=1.607..3747.058 rows=34172 loops=3)
                                       Hash Cond: (mi.info_type_id = it1.id)
                                       ->  Nested Loop  (cost=2.86..73208.58 rows=2405 width=60) (actual time=1.394..3718.353 rows=34964 loops=3)
                                             ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=9) (actual time=0.128..252.811 rows=153308 loops=3)
                                                   Hash Cond: (mi_idx.info_type_id = it2.id)
                                                   ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=13) (actual time=0.037..98.957 rows=460012 loops=3)
                                                   ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.037..0.038 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.020..0.023 rows=1 loops=3)
                                                               Filter: ((info)::text = 'votes'::text)
                                                               Rows Removed by Filter: 112
                                             ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..11.38 rows=1 width=51) (actual time=0.022..0.022 rows=0 loops=459925)
                                                   Index Cond: (movie_id = mi_idx.movie_id)
                                                   Filter: ((info)::text = ANY ('{Horror,Action,Sci-Fi,Thriller,Crime,War}'::text[]))
                                                   Rows Removed by Filter: 15
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.078..0.078 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.047..0.059 rows=1 loops=3)
                                                   Filter: ((info)::text = 'genres'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=21) (actual time=0.013..0.013 rows=1 loops=102516)
                                       Index Cond: (id = mi_idx.movie_id)
                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..23.95 rows=1 width=8) (actual time=0.311..0.365 rows=1 loops=102516)
                                 Index Cond: (movie_id = t.id)
                                 Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                 Rows Removed by Filter: 39
                     ->  Index Scan using name_pkey on name n  (cost=0.43..0.69 rows=1 width=4) (actual time=0.024..0.024 rows=1 loops=54155)
                           Index Cond: (id = ci.person_id)
                           Filter: ((gender)::text = 'm'::text)
                           Rows Removed by Filter: 0
 Planning Time: 10.381 ms
 Execution Time: 17235.807 ms
(41 rows)

SET
                                                                                                QUERY PLAN                                                                                                 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=85507.29..85507.30 rows=1 width=64) (actual time=556.116..556.116 rows=1 loops=1)
   ->  Nested Loop  (cost=1004.44..85507.29 rows=1 width=32) (actual time=232.279..555.977 rows=184 loops=1)
         ->  Nested Loop  (cost=1004.30..85507.10 rows=1 width=36) (actual time=232.242..555.535 rows=184 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=1003.86..85479.65 rows=1 width=44) (actual time=232.056..544.281 rows=77 loops=1)
                     ->  Nested Loop  (cost=1003.44..85478.45 rows=1 width=48) (actual time=231.990..543.097 rows=79 loops=1)
                           Join Filter: (t.id = mc.movie_id)
                           ->  Nested Loop  (cost=1003.01..85475.72 rows=1 width=40) (actual time=231.907..540.586 rows=102 loops=1)
                                 ->  Gather  (cost=1002.58..85474.30 rows=1 width=44) (actual time=222.234..541.765 rows=115 loops=1)
                                       Workers Planned: 2
                                       Workers Launched: 2
                                       ->  Nested Loop  (cost=2.58..84474.20 rows=1 width=44) (actual time=216.000..543.546 rows=38 loops=3)
                                             ->  Hash Join  (cost=2.15..84471.40 rows=2 width=23) (actual time=214.220..540.528 rows=142 loops=3)
                                                   Hash Cond: (ci.role_id = rt.id)
                                                   ->  Nested Loop  (cost=0.99..84470.16 rows=19 width=27) (actual time=214.008..540.224 rows=142 loops=3)
                                                         Join Filter: (n.id = ci.person_id)
                                                         ->  Nested Loop  (cost=0.42..82155.48 rows=9 width=23) (actual time=208.219..518.628 rows=519 loops=3)
                                                               ->  Parallel Seq Scan on name n  (cost=0.00..81659.82 rows=40 width=19) (actual time=207.169..493.852 rows=2256 loops=3)
                                                                     Filter: (((name)::text ~~ '%Ang%'::text) AND ((gender)::text = 'f'::text))
                                                                     Rows Removed by Filter: 1386908
                                                               ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..12.37 rows=2 width=4) (actual time=0.010..0.010 rows=0 loops=6768)
                                                                     Index Cond: (person_id = n.id)
                                                                     Heap Fetches: 1558
                                                         ->  Index Scan using person_id_cast_info on cast_info ci  (cost=0.56..257.04 rows=12 width=16) (actual time=0.038..0.041 rows=0 loops=1558)
                                                               Index Cond: (person_id = an.person_id)
                                                               Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                               Rows Removed by Filter: 44
                                                   ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.070..0.070 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.034..0.036 rows=1 loops=3)
                                                               Filter: ((role)::text = 'actress'::text)
                                                               Rows Removed by Filter: 11
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..1.40 rows=1 width=21) (actual time=0.020..0.020 rows=0 loops=425)
                                                   Index Cond: (id = ci.movie_id)
                                                   Filter: ((production_year >= 2005) AND (production_year <= 2009))
                                                   Rows Removed by Filter: 1
                                 ->  Index Only Scan using char_name_pkey on char_name chn  (cost=0.43..1.42 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=115)
                                       Index Cond: (id = ci.person_role_id)
                                       Heap Fetches: 102
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.72 rows=1 width=8) (actual time=0.019..0.024 rows=1 loops=102)
                                 Index Cond: (movie_id = ci.movie_id)
                                 Filter: ((note IS NOT NULL) AND (((note)::text ~~ '%(USA)%'::text) OR ((note)::text ~~ '%(worldwide)%'::text)))
                                 Rows Removed by Filter: 6
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.20 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=79)
                           Index Cond: (id = mc.company_id)
                           Filter: ((country_code)::text = '[us]'::text)
                           Rows Removed by Filter: 0
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..27.43 rows=2 width=8) (actual time=0.042..0.145 rows=2 loops=77)
                     Index Cond: (movie_id = ci.movie_id)
                     Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%200%'::text) OR ((info)::text ~~ 'USA:%200%'::text)))
                     Rows Removed by Filter: 166
         ->  Index Scan using info_type_pkey on info_type it  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=184)
               Index Cond: (id = mi.info_type_id)
               Filter: ((info)::text = 'release dates'::text)
 Planning Time: 50.373 ms
 Execution Time: 559.910 ms
(56 rows)

SET
                                                                                                   QUERY PLAN                                                                                                   
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=55722.95..55722.96 rows=1 width=64) (actual time=283.857..283.858 rows=1 loops=1)
   ->  Nested Loop  (cost=1003.41..55722.94 rows=1 width=32) (actual time=233.698..283.838 rows=15 loops=1)
         ->  Nested Loop  (cost=1003.28..55722.77 rows=1 width=36) (actual time=233.639..283.750 rows=15 loops=1)
               Join Filter: (ci.person_id = n.id)
               ->  Nested Loop  (cost=1002.85..55721.23 rows=1 width=29) (actual time=221.942..281.648 rows=275 loops=1)
                     ->  Nested Loop  (cost=1002.70..55721.05 rows=1 width=33) (actual time=221.908..281.053 rows=275 loops=1)
                           Join Filter: (t.id = mi.movie_id)
                           ->  Nested Loop  (cost=1002.27..55693.47 rows=1 width=41) (actual time=221.827..254.223 rows=275 loops=1)
                                 ->  Nested Loop  (cost=1001.85..55692.20 rows=1 width=45) (actual time=221.780..253.124 rows=275 loops=1)
                                       ->  Nested Loop  (cost=1001.42..55690.54 rows=1 width=41) (actual time=221.703..251.033 rows=99 loops=1)
                                             ->  Nested Loop  (cost=1001.00..55689.08 rows=1 width=45) (actual time=221.607..248.680 rows=100 loops=1)
                                                   Join Filter: (t.id = ci.movie_id)
                                                   ->  Gather  (cost=1000.43..55647.01 rows=1 width=29) (actual time=221.498..245.648 rows=4 loops=1)
                                                         Workers Planned: 2
                                                         Workers Launched: 2
                                                         ->  Nested Loop  (cost=0.43..54646.91 rows=1 width=29) (actual time=236.987..264.250 rows=1 loops=3)
                                                               ->  Parallel Seq Scan on title t  (cost=0.00..54433.61 rows=10 width=21) (actual time=172.572..264.095 rows=2 loops=3)
                                                                     Filter: ((production_year >= 2007) AND (production_year <= 2008) AND ((title)::text ~~ '%Kung%Fu%Panda%'::text))
                                                                     Rows Removed by Filter: 842768
                                                               ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..21.32 rows=1 width=8) (actual time=0.060..0.064 rows=1 loops=7)
                                                                     Index Cond: (movie_id = t.id)
                                                                     Filter: (((note)::text ~~ '%(200%)%'::text) AND (((note)::text ~~ '%(USA)%'::text) OR ((note)::text ~~ '%(worldwide)%'::text)))
                                                                     Rows Removed by Filter: 6
                                                   ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..42.06 rows=1 width=16) (actual time=0.037..1.176 rows=25 loops=4)
                                                         Index Cond: (movie_id = mc.movie_id)
                                                         Filter: ((note)::text = '(voice)'::text)
                                                         Rows Removed by Filter: 127
                                             ->  Index Only Scan using char_name_pkey on char_name chn  (cost=0.43..1.46 rows=1 width=4) (actual time=0.022..0.022 rows=1 loops=100)
                                                   Index Cond: (id = ci.person_role_id)
                                                   Heap Fetches: 99
                                       ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..1.64 rows=2 width=4) (actual time=0.015..0.020 rows=3 loops=99)
                                             Index Cond: (person_id = ci.person_id)
                                             Heap Fetches: 275
                                 ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.27 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=275)
                                       Index Cond: (id = mc.company_id)
                                       Filter: ((country_code)::text = '[us]'::text)
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..27.56 rows=1 width=8) (actual time=0.016..0.097 rows=1 loops=275)
                                 Index Cond: (movie_id = ci.movie_id)
                                 Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%2007%'::text) OR ((info)::text ~~ 'USA:%2008%'::text)))
                                 Rows Removed by Filter: 295
                     ->  Index Scan using info_type_pkey on info_type it  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=275)
                           Index Cond: (id = mi.info_type_id)
                           Filter: ((info)::text = 'release dates'::text)
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.53 rows=1 width=19) (actual time=0.007..0.007 rows=0 loops=275)
                     Index Cond: (id = an.person_id)
                     Filter: (((name)::text ~~ '%Angel%'::text) AND ((gender)::text = 'f'::text))
                     Rows Removed by Filter: 1
         ->  Index Scan using role_type_pkey on role_type rt  (cost=0.14..0.16 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=15)
               Index Cond: (id = ci.role_id)
               Filter: ((role)::text = 'actress'::text)
 Planning Time: 47.981 ms
 Execution Time: 286.342 ms
(52 rows)

SET
                                                                                                           QUERY PLAN                                                                                                           
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=224820.56..224820.57 rows=1 width=64) (actual time=4056.722..4056.722 rows=1 loops=1)
   ->  Gather  (cost=224820.34..224820.55 rows=2 width=64) (actual time=4015.178..4063.047 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=223820.34..223820.35 rows=1 width=64) (actual time=4027.853..4027.853 rows=1 loops=3)
               ->  Nested Loop  (cost=135386.97..223820.33 rows=2 width=32) (actual time=2995.060..4027.172 rows=1192 loops=3)
                     Join Filter: (n.id = an.person_id)
                     ->  Nested Loop  (cost=135386.54..223818.68 rows=1 width=40) (actual time=2960.296..4021.520 rows=877 loops=3)
                           ->  Nested Loop  (cost=135386.12..223816.35 rows=2 width=44) (actual time=2943.552..4002.152 rows=2862 loops=3)
                                 ->  Hash Join  (cost=135385.69..223813.63 rows=1 width=52) (actual time=2896.569..3990.244 rows=710 loops=3)
                                       Hash Cond: (mi.info_type_id = it.id)
                                       ->  Nested Loop  (cost=135383.27..223811.07 rows=52 width=56) (actual time=2896.341..3989.421 rows=710 loops=3)
                                             ->  Nested Loop  (cost=135382.83..221277.71 rows=93 width=48) (actual time=2890.624..3910.520 rows=1116 loops=3)
                                                   ->  Nested Loop  (cost=135382.40..221003.48 rows=193 width=52) (actual time=2890.531..3890.152 rows=1229 loops=3)
                                                         ->  Hash Join  (cost=135381.97..195421.31 rows=16716 width=33) (actual time=2889.763..3476.238 rows=56136 loops=3)
                                                               Hash Cond: (t.id = ci.movie_id)
                                                               ->  Parallel Seq Scan on title t  (cost=0.00..49166.29 rows=575821 width=21) (actual time=0.050..293.295 rows=460484 loops=3)
                                                                     Filter: (production_year > 2000)
                                                                     Rows Removed by Filter: 382286
                                                               ->  Hash  (cost=134105.54..134105.54 rows=73395 width=12) (actual time=2887.016..2887.016 rows=276166 loops=3)
                                                                     Buckets: 131072 (originally 131072)  Batches: 4 (originally 2)  Memory Usage: 3984kB
                                                                     ->  Nested Loop  (cost=0.56..134105.54 rows=73395 width=12) (actual time=0.291..2749.302 rows=276166 loops=3)
                                                                           ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.042..0.046 rows=1 loops=3)
                                                                                 Filter: ((role)::text = 'actress'::text)
                                                                                 Rows Removed by Filter: 11
                                                                           ->  Index Scan using role_id_cast_info on cast_info ci  (cost=0.56..133303.71 rows=80067 width=16) (actual time=0.246..2711.479 rows=276166 loops=3)
                                                                                 Index Cond: (role_id = rt.id)
                                                                                 Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                                 Rows Removed by Filter: 7175807
                                                         ->  Index Scan using name_pkey on name n  (cost=0.43..1.53 rows=1 width=19) (actual time=0.007..0.007 rows=0 loops=168407)
                                                               Index Cond: (id = ci.person_id)
                                                               Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                                               Rows Removed by Filter: 1
                                                   ->  Index Only Scan using char_name_pkey on char_name chn  (cost=0.43..1.42 rows=1 width=4) (actual time=0.016..0.016 rows=1 loops=3686)
                                                         Index Cond: (id = ci.person_role_id)
                                                         Heap Fetches: 3349
                                             ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..27.22 rows=2 width=8) (actual time=0.050..0.070 rows=1 loops=3349)
                                                   Index Cond: (movie_id = t.id)
                                                   Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%200%'::text) OR ((info)::text ~~ 'USA:%200%'::text)))
                                                   Rows Removed by Filter: 15
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.083..0.083 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.049..0.060 rows=1 loops=3)
                                                   Filter: ((info)::text = 'release dates'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.67 rows=5 width=8) (actual time=0.012..0.015 rows=4 loops=2129)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.16 rows=1 width=4) (actual time=0.006..0.006 rows=0 loops=8585)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..1.63 rows=2 width=4) (actual time=0.005..0.006 rows=1 loops=2632)
                           Index Cond: (person_id = ci.person_id)
                           Heap Fetches: 3575
 Planning Time: 48.612 ms
 Execution Time: 4063.878 ms
(56 rows)

SET
                                                                                                           QUERY PLAN                                                                                                           
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=281048.09..281048.10 rows=1 width=64) (actual time=13813.061..13813.061 rows=1 loops=1)
   ->  Gather  (cost=281047.87..281048.08 rows=2 width=64) (actual time=10959.225..13819.805 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=280047.87..280047.88 rows=1 width=64) (actual time=12249.554..12249.555 rows=1 loops=3)
               ->  Nested Loop  (cost=135386.97..280042.47 rows=1080 width=32) (actual time=2906.513..12057.369 rows=586882 loops=3)
                     ->  Nested Loop  (cost=135386.54..279269.61 rows=470 width=40) (actual time=2904.697..11024.254 rows=262348 loops=3)
                           ->  Nested Loop  (cost=135386.12..277763.14 rows=1294 width=44) (actual time=2904.599..7121.402 rows=1076352 loops=3)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Hash Join  (cost=135385.69..277101.59 rows=247 width=52) (actual time=2904.285..6043.870 rows=113945 loops=3)
                                       Hash Cond: (mi.info_type_id = it.id)
                                       ->  Nested Loop  (cost=135383.27..277023.18 rows=27899 width=56) (actual time=2904.037..5929.126 rows=540998 loops=3)
                                             ->  Nested Loop  (cost=135382.83..226386.57 rows=1846 width=48) (actual time=2903.947..4808.620 rows=53102 loops=3)
                                                   ->  Nested Loop  (cost=135382.40..220961.69 rows=3818 width=52) (actual time=2903.843..4114.433 rows=56088 loops=3)
                                                         ->  Hash Join  (cost=135381.97..195421.31 rows=16716 width=33) (actual time=2903.738..3534.259 rows=56136 loops=3)
                                                               Hash Cond: (t.id = ci.movie_id)
                                                               ->  Parallel Seq Scan on title t  (cost=0.00..49166.29 rows=575821 width=21) (actual time=0.044..287.992 rows=460484 loops=3)
                                                                     Filter: (production_year > 2000)
                                                                     Rows Removed by Filter: 382286
                                                               ->  Hash  (cost=134105.54..134105.54 rows=73395 width=12) (actual time=2901.151..2901.151 rows=276166 loops=3)
                                                                     Buckets: 131072 (originally 131072)  Batches: 4 (originally 2)  Memory Usage: 3984kB
                                                                     ->  Nested Loop  (cost=0.56..134105.54 rows=73395 width=12) (actual time=0.283..2770.217 rows=276166 loops=3)
                                                                           ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.026..0.031 rows=1 loops=3)
                                                                                 Filter: ((role)::text = 'actress'::text)
                                                                                 Rows Removed by Filter: 11
                                                                           ->  Index Scan using role_id_cast_info on cast_info ci  (cost=0.56..133303.71 rows=80067 width=16) (actual time=0.249..2732.497 rows=276166 loops=3)
                                                                                 Index Cond: (role_id = rt.id)
                                                                                 Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                                 Rows Removed by Filter: 7175807
                                                         ->  Index Scan using name_pkey on name n  (cost=0.43..1.53 rows=1 width=19) (actual time=0.010..0.010 rows=1 loops=168407)
                                                               Index Cond: (id = ci.person_id)
                                                               Filter: ((gender)::text = 'f'::text)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Only Scan using char_name_pkey on char_name chn  (cost=0.43..1.42 rows=1 width=4) (actual time=0.012..0.012 rows=1 loops=168264)
                                                         Index Cond: (id = ci.person_role_id)
                                                         Heap Fetches: 159307
                                             ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..27.01 rows=42 width=8) (actual time=0.007..0.018 rows=10 loops=159307)
                                                   Index Cond: (movie_id = t.id)
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.076..0.076 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.046..0.057 rows=1 loops=3)
                                                   Filter: ((info)::text = 'release dates'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.62 rows=5 width=8) (actual time=0.004..0.006 rows=9 loops=341836)
                                       Index Cond: (movie_id = mi.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.16 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=3229056)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..1.62 rows=2 width=4) (actual time=0.003..0.003 rows=2 loops=787043)
                           Index Cond: (person_id = n.id)
                           Heap Fetches: 1760645
 Planning Time: 51.858 ms
 Execution Time: 13820.953 ms
(54 rows)

SET
                                                                                                 QUERY PLAN                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=19541.81..19541.82 rows=1 width=68) (actual time=161.406..161.406 rows=1 loops=1)
   ->  Gather  (cost=19541.58..19541.79 rows=2 width=68) (actual time=142.497..163.069 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=18541.58..18541.59 rows=1 width=68) (actual time=145.148..145.148 rows=1 loops=3)
               ->  Nested Loop  (cost=4.35..18541.23 rows=47 width=45) (actual time=135.748..145.065 rows=47 loops=3)
                     Join Filter: (mc.movie_id = t.id)
                     ->  Hash Join  (cost=3.92..18513.76 rows=47 width=32) (actual time=135.662..143.466 rows=47 loops=3)
                           Hash Cond: (mc.company_type_id = ct.id)
                           ->  Nested Loop  (cost=2.86..18511.69 rows=187 width=36) (actual time=135.449..143.210 rows=49 loops=3)
                                 ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=4) (actual time=135.311..135.411 rows=83 loops=3)
                                       Hash Cond: (mi_idx.info_type_id = it.id)
                                       ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=8) (actual time=0.031..79.500 rows=460012 loops=3)
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.055..0.056 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.044..0.045 rows=1 loops=3)
                                                   Filter: ((info)::text = 'top 250 rank'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.63 rows=1 width=32) (actual time=0.091..0.092 rows=1 loops=250)
                                       Index Cond: (movie_id = mi_idx.movie_id)
                                       Filter: (((note)::text !~~ '%(as Metro-Goldwyn-Mayer Pictures)%'::text) AND (((note)::text ~~ '%(co-production)%'::text) OR ((note)::text ~~ '%(presents)%'::text)))
                                       Rows Removed by Filter: 33
                           ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.066..0.066 rows=1 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                 ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.045..0.047 rows=1 loops=3)
                                       Filter: ((kind)::text = 'production companies'::text)
                                       Rows Removed by Filter: 3
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=25) (actual time=0.032..0.032 rows=1 loops=142)
                           Index Cond: (id = mi_idx.movie_id)
 Planning Time: 5.068 ms
 Execution Time: 163.547 ms
(31 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=20151.20..20151.21 rows=1 width=68) (actual time=143.459..143.459 rows=1 loops=1)
   ->  Gather  (cost=20150.97..20151.18 rows=2 width=68) (actual time=142.264..144.609 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=19150.97..19150.98 rows=1 width=68) (actual time=135.979..135.979 rows=1 loops=3)
               ->  Hash Join  (cost=4.35..19143.68 rows=972 width=45) (actual time=135.972..135.973 rows=1 loops=3)
                     Hash Cond: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=3.29..19121.60 rows=3890 width=49) (actual time=135.595..135.752 rows=22 loops=3)
                           Join Filter: (t.id = mc.movie_id)
                           ->  Nested Loop  (cost=2.86..18189.65 rows=1450 width=29) (actual time=135.551..135.611 rows=1 loops=3)
                                 ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=4) (actual time=135.408..135.413 rows=3 loops=3)
                                       Hash Cond: (mi_idx.info_type_id = it.id)
                                       ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=8) (actual time=0.043..79.566 rows=460012 loops=3)
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.047..0.047 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.036..0.037 rows=1 loops=3)
                                                   Filter: ((info)::text = 'bottom 10 rank'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.58 rows=1 width=25) (actual time=0.058..0.058 rows=0 loops=10)
                                       Index Cond: (id = mi_idx.movie_id)
                                       Filter: ((production_year >= 2005) AND (production_year <= 2010))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.61 rows=3 width=32) (actual time=0.075..0.101 rows=16 loops=4)
                                 Index Cond: (movie_id = mi_idx.movie_id)
                                 Filter: ((note)::text !~~ '%(as Metro-Goldwyn-Mayer Pictures)%'::text)
                                 Rows Removed by Filter: 2
                     ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.059..0.059 rows=1 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.039..0.041 rows=1 loops=3)
                                 Filter: ((kind)::text = 'production companies'::text)
                                 Rows Removed by Filter: 3
 Planning Time: 3.984 ms
 Execution Time: 145.194 ms
(33 rows)

SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=19470.70..19470.71 rows=1 width=68) (actual time=150.766..150.767 rows=1 loops=1)
   ->  Gather  (cost=19470.48..19470.69 rows=2 width=68) (actual time=141.170..152.954 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=18470.48..18470.49 rows=1 width=68) (actual time=139.619..139.619 rows=1 loops=3)
               ->  Nested Loop  (cost=4.35..18470.44 rows=5 width=45) (actual time=137.918..139.614 rows=1 loops=3)
                     Join Filter: (mc.movie_id = t.id)
                     ->  Hash Join  (cost=3.92..18449.90 rows=35 width=32) (actual time=136.113..139.483 rows=8 loops=3)
                           Hash Cond: (mc.company_type_id = ct.id)
                           ->  Nested Loop  (cost=2.86..18448.07 rows=141 width=36) (actual time=135.895..139.260 rows=8 loops=3)
                                 ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=4) (actual time=134.513..134.615 rows=83 loops=3)
                                       Hash Cond: (mi_idx.info_type_id = it.id)
                                       ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=8) (actual time=0.039..78.782 rows=460012 loops=3)
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.046..0.047 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.036..0.037 rows=1 loops=3)
                                                   Filter: ((info)::text = 'top 250 rank'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.62 rows=1 width=32) (actual time=0.055..0.055 rows=0 loops=250)
                                       Index Cond: (movie_id = mi_idx.movie_id)
                                       Filter: (((note)::text !~~ '%(as Metro-Goldwyn-Mayer Pictures)%'::text) AND ((note)::text ~~ '%(co-production)%'::text))
                                       Rows Removed by Filter: 33
                           ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.058..0.058 rows=1 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                 ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.038..0.039 rows=1 loops=3)
                                       Filter: ((kind)::text = 'production companies'::text)
                                       Rows Removed by Filter: 3
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=25) (actual time=0.016..0.016 rows=0 loops=23)
                           Index Cond: (id = mi_idx.movie_id)
                           Filter: (production_year > 2010)
                           Rows Removed by Filter: 1
 Planning Time: 3.883 ms
 Execution Time: 153.443 ms
(33 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=20999.43..20999.44 rows=1 width=68) (actual time=144.200..144.200 rows=1 loops=1)
   ->  Gather  (cost=20999.20..20999.41 rows=2 width=68) (actual time=144.191..144.863 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=19999.20..19999.21 rows=1 width=68) (actual time=136.770..136.770 rows=1 loops=3)
               ->  Hash Join  (cost=4.35..19985.21 rows=1865 width=45) (actual time=136.734..136.762 rows=1 loops=3)
                     Hash Cond: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=3.29..19943.82 rows=7460 width=49) (actual time=136.372..136.555 rows=26 loops=3)
                           ->  Nested Loop  (cost=2.86..18176.93 rows=2782 width=29) (actual time=136.327..136.407 rows=2 loops=3)
                                 ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=4) (actual time=136.274..136.279 rows=3 loops=3)
                                       Hash Cond: (mi_idx.info_type_id = it.id)
                                       ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=8) (actual time=0.051..80.473 rows=460012 loops=3)
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.053..0.053 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.043..0.044 rows=1 loops=3)
                                                   Filter: ((info)::text = 'bottom 10 rank'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=25) (actual time=0.037..0.037 rows=1 loops=10)
                                       Index Cond: (id = mi_idx.movie_id)
                                       Filter: (production_year > 2000)
                                       Rows Removed by Filter: 0
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.61 rows=3 width=32) (actual time=0.054..0.071 rows=13 loops=6)
                                 Index Cond: (movie_id = t.id)
                                 Filter: ((note)::text !~~ '%(as Metro-Goldwyn-Mayer Pictures)%'::text)
                                 Rows Removed by Filter: 2
                     ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.063..0.063 rows=1 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.042..0.044 rows=1 loops=3)
                                 Filter: ((kind)::text = 'production companies'::text)
                                 Rows Removed by Filter: 3
 Planning Time: 3.909 ms
 Execution Time: 145.309 ms
(32 rows)

SET
                                                                                             QUERY PLAN                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=12310.68..12310.69 rows=1 width=32) (actual time=12427.370..12427.370 rows=1 loops=1)
   ->  Nested Loop  (cost=9.03..12310.67 rows=1 width=17) (actual time=123.974..12427.243 rows=33 loops=1)
         ->  Nested Loop  (cost=8.60..12310.22 rows=1 width=21) (actual time=123.913..12426.194 rows=33 loops=1)
               ->  Nested Loop  (cost=8.17..12305.16 rows=11 width=25) (actual time=13.224..7489.793 rows=532809 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=7.61..12299.20 rows=3 width=29) (actual time=13.145..1577.401 rows=6016 loops=1)
                           Join Filter: (t.kind_id = kt.id)
                           Rows Removed by Join Filter: 1347
                           ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.048..0.051 rows=1 loops=1)
                                 Filter: ((kind)::text = 'movie'::text)
                                 Rows Removed by Filter: 6
                           ->  Nested Loop  (cost=7.61..12297.85 rows=21 width=33) (actual time=2.116..1574.480 rows=7363 loops=1)
                                 ->  Nested Loop  (cost=7.18..12286.63 rows=23 width=8) (actual time=2.054..1385.926 rows=8765 loops=1)
                                       Join Filter: (cc.status_id = cct2.id)
                                       Rows Removed by Join Filter: 8765
                                       ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.047..0.049 rows=2 loops=1)
                                             Filter: ((kind)::text ~~ '%complete%'::text)
                                             Rows Removed by Filter: 2
                                       ->  Nested Loop  (cost=7.18..12284.40 rows=94 width=12) (actual time=1.617..691.097 rows=8765 loops=2)
                                             Join Filter: (cc.subject_id = cct1.id)
                                             Rows Removed by Join Filter: 4045
                                             ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.005..0.007 rows=1 loops=2)
                                                   Filter: ((kind)::text = 'cast'::text)
                                                   Rows Removed by Filter: 3
                                             ->  Nested Loop  (cost=7.18..12278.66 rows=375 width=16) (actual time=1.608..686.857 rows=12810 loops=2)
                                                   ->  Nested Loop  (cost=6.76..12150.15 rows=270 width=4) (actual time=0.892..477.071 rows=35548 loops=2)
                                                         ->  Seq Scan on keyword k  (cost=0.00..3632.40 rows=8 width=4) (actual time=0.171..49.038 rows=8 loops=2)
                                                               Filter: ((keyword)::text = ANY ('{superhero,sequel,second-part,marvel-comics,based-on-comic,tv-special,fight,violence}'::text[]))
                                                               Rows Removed by Filter: 134162
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1061.72 rows=300 width=8) (actual time=1.584..51.666 rows=4444 loops=16)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=46976
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=1.162..1.162 rows=4444 loops=16)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.004..0.005 rows=0 loops=71096)
                                                         Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.020..0.020 rows=1 loops=8765)
                                       Index Cond: (id = mk.movie_id)
                                       Filter: (production_year > 1950)
                                       Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.029..0.917 rows=89 loops=6016)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=4) (actual time=0.008..0.008 rows=0 loops=532809)
                     Index Cond: (id = ci.person_role_id)
                     Filter: (((name)::text !~~ '%Sherlock%'::text) AND (((name)::text ~~ '%Tony%Stark%'::text) OR ((name)::text ~~ '%Iron%Man%'::text)))
                     Rows Removed by Filter: 0
         ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.030..0.030 rows=1 loops=33)
               Index Cond: (id = ci.person_id)
               Heap Fetches: 33
 Planning Time: 33.053 ms
 Execution Time: 12428.000 ms
(51 rows)

SET
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=12305.07..12305.08 rows=1 width=32) (actual time=9434.583..9434.583 rows=1 loops=1)
   ->  Nested Loop  (cost=9.03..12305.06 rows=1 width=17) (actual time=149.908..9434.487 rows=17 loops=1)
         ->  Nested Loop  (cost=8.60..12304.60 rows=1 width=21) (actual time=149.865..9433.473 rows=27 loops=1)
               ->  Nested Loop  (cost=8.17..12301.40 rows=7 width=25) (actual time=19.949..4883.153 rows=222518 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=7.61..12297.43 rows=2 width=29) (actual time=19.878..2266.204 rows=1472 loops=1)
                           Join Filter: (cc.status_id = cct2.id)
                           Rows Removed by Join Filter: 1472
                           ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.040..0.042 rows=2 loops=1)
                                 Filter: ((kind)::text ~~ '%complete%'::text)
                                 Rows Removed by Filter: 2
                           ->  Nested Loop  (cost=7.61..12296.29 rows=7 width=33) (actual time=16.459..1132.707 rows=1472 loops=2)
                                 Join Filter: (cc.subject_id = cct1.id)
                                 Rows Removed by Join Filter: 243
                                 ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=2)
                                       Filter: ((kind)::text = 'cast'::text)
                                       Rows Removed by Filter: 3
                                 ->  Nested Loop  (cost=7.61..12294.88 rows=29 width=37) (actual time=16.449..1131.996 rows=1715 loops=2)
                                       ->  Nested Loop  (cost=7.19..12284.84 rows=21 width=25) (actual time=16.196..1081.365 rows=6043 loops=2)
                                             Join Filter: (t.kind_id = kt.id)
                                             Rows Removed by Join Filter: 8122
                                             ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.006..0.009 rows=1 loops=2)
                                                   Filter: ((kind)::text = 'movie'::text)
                                                   Rows Removed by Filter: 6
                                             ->  Nested Loop  (cost=7.19..12281.90 rows=148 width=29) (actual time=0.909..1076.859 rows=14165 loops=2)
                                                   ->  Nested Loop  (cost=6.76..12150.15 rows=270 width=4) (actual time=0.873..477.038 rows=35548 loops=2)
                                                         ->  Seq Scan on keyword k  (cost=0.00..3632.40 rows=8 width=4) (actual time=0.173..49.242 rows=8 loops=2)
                                                               Filter: ((keyword)::text = ANY ('{superhero,sequel,second-part,marvel-comics,based-on-comic,tv-special,fight,violence}'::text[]))
                                                               Rows Removed by Filter: 134162
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1061.72 rows=300 width=8) (actual time=1.558..51.442 rows=4444 loops=16)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=46976
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=1.142..1.142 rows=4444 loops=16)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.016..0.016 rows=0 loops=71096)
                                                         Index Cond: (id = mk.movie_id)
                                                         Filter: (production_year > 2000)
                                                         Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.007..0.007 rows=0 loops=12086)
                                             Index Cond: (movie_id = t.id)
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.034..1.656 rows=151 loops=1472)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=4) (actual time=0.019..0.019 rows=0 loops=222518)
                     Index Cond: (id = ci.person_id)
                     Filter: ((name)::text ~~ '%Downey%Robert%'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=4) (actual time=0.035..0.035 rows=1 loops=27)
               Index Cond: (id = ci.person_role_id)
               Filter: (((name)::text !~~ '%Sherlock%'::text) AND (((name)::text ~~ '%Tony%Stark%'::text) OR ((name)::text ~~ '%Iron%Man%'::text)))
               Rows Removed by Filter: 0
 Planning Time: 33.640 ms
 Execution Time: 9435.217 ms
(52 rows)

SET
                                                                                             QUERY PLAN                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=14700.60..14700.61 rows=1 width=64) (actual time=5292.512..5292.512 rows=1 loops=1)
   ->  Nested Loop  (cost=9.03..14700.60 rows=1 width=32) (actual time=19.373..5285.698 rows=5406 loops=1)
         ->  Nested Loop  (cost=8.60..14700.14 rows=1 width=21) (actual time=19.303..5145.766 rows=5406 loops=1)
               ->  Nested Loop  (cost=8.17..14696.48 rows=8 width=25) (actual time=18.563..3635.044 rows=189844 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=7.61..14692.51 rows=2 width=29) (actual time=18.477..1644.765 rows=1267 loops=1)
                           Join Filter: (cc.status_id = cct2.id)
                           Rows Removed by Join Filter: 1267
                           ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.029..0.031 rows=2 loops=1)
                                 Filter: ((kind)::text ~~ '%complete%'::text)
                                 Rows Removed by Filter: 2
                           ->  Nested Loop  (cost=7.61..14691.35 rows=9 width=33) (actual time=15.659..822.057 rows=1267 loops=2)
                                 Join Filter: (cc.subject_id = cct1.id)
                                 Rows Removed by Join Filter: 218
                                 ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.009..0.011 rows=1 loops=2)
                                       Filter: ((kind)::text = 'cast'::text)
                                       Rows Removed by Filter: 3
                                 ->  Nested Loop  (cost=7.61..14689.84 rows=37 width=37) (actual time=15.645..821.490 rows=1485 loops=2)
                                       ->  Nested Loop  (cost=7.19..14677.40 rows=26 width=25) (actual time=15.421..781.546 rows=5032 loops=2)
                                             Join Filter: (t.kind_id = kt.id)
                                             Rows Removed by Join Filter: 5581
                                             ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.005..0.008 rows=1 loops=2)
                                                   Filter: ((kind)::text = 'movie'::text)
                                                   Rows Removed by Filter: 6
                                             ->  Nested Loop  (cost=7.19..14674.02 rows=184 width=29) (actual time=0.931..778.050 rows=10613 loops=2)
                                                   ->  Nested Loop  (cost=6.76..14509.57 rows=337 width=4) (actual time=0.895..361.541 rows=24091 loops=2)
                                                         ->  Seq Scan on keyword k  (cost=0.00..3967.82 rows=10 width=4) (actual time=0.189..53.715 rows=10 loops=2)
                                                               Filter: ((keyword)::text = ANY ('{superhero,marvel-comics,based-on-comic,tv-special,fight,violence,magnet,web,claw,laser}'::text[]))
                                                               Rows Removed by Filter: 134160
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1051.17 rows=300 width=8) (actual time=0.982..29.661 rows=2409 loops=20)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=34254
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.730..0.730 rows=2409 loops=20)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.016..0.016 rows=0 loops=48182)
                                                         Index Cond: (id = mk.movie_id)
                                                         Filter: (production_year > 2000)
                                                         Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.006..0.007 rows=0 loops=10064)
                                             Index Cond: (movie_id = t.id)
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.032..1.466 rows=150 loops=1267)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=4) (actual time=0.007..0.007 rows=0 loops=189844)
                     Index Cond: (id = ci.person_role_id)
                     Filter: ((name IS NOT NULL) AND (((name)::text ~~ '%man%'::text) OR ((name)::text ~~ '%Man%'::text)))
                     Rows Removed by Filter: 0
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=19) (actual time=0.024..0.024 rows=1 loops=5406)
               Index Cond: (id = ci.person_id)
 Planning Time: 33.659 ms
 Execution Time: 5293.144 ms
(50 rows)

SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3756.64..3756.65 rows=1 width=96) (actual time=271.252..271.252 rows=1 loops=1)
   ->  Nested Loop  (cost=8.76..3756.63 rows=1 width=118) (actual time=7.074..269.516 rows=1410 loops=1)
         Join Filter: (ml.movie_id = t.id)
         ->  Nested Loop  (cost=8.33..3756.13 rows=1 width=117) (actual time=7.029..259.735 rows=1816 loops=1)
               Join Filter: (mc.company_type_id = ct.id)
               Rows Removed by Join Filter: 95
               ->  Nested Loop  (cost=8.33..3755.07 rows=1 width=121) (actual time=7.003..244.202 rows=1911 loops=1)
                     ->  Nested Loop  (cost=7.91..3754.61 rows=1 width=106) (actual time=6.948..230.003 rows=4365 loops=1)
                           Join Filter: (ml.movie_id = mc.movie_id)
                           ->  Nested Loop  (cost=7.48..3754.04 rows=1 width=94) (actual time=6.903..224.662 rows=684 loops=1)
                                 Join Filter: (ml.movie_id = mi.movie_id)
                                 ->  Nested Loop  (cost=7.04..3752.25 rows=1 width=90) (actual time=5.647..217.504 rows=199 loops=1)
                                       Join Filter: (ml.link_type_id = lt.id)
                                       Rows Removed by Join Filter: 303
                                       ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.036..0.046 rows=2 loops=1)
                                             Filter: ((link)::text ~~ '%follow%'::text)
                                             Rows Removed by Filter: 16
                                       ->  Nested Loop  (cost=7.04..3750.90 rows=10 width=12) (actual time=4.875..108.678 rows=251 loops=2)
                                             ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=4.863..86.608 rows=10544 loops=2)
                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.241..17.921 rows=1 loops=2)
                                                         Filter: ((keyword)::text = 'sequel'::text)
                                                         Rows Removed by Filter: 134169
                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=3.568..66.020 rows=10544 loops=2)
                                                         Recheck Cond: (keyword_id = k.id)
                                                         Heap Blocks: exact=11140
                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=2.791..2.791 rows=10544 loops=2)
                                                               Index Cond: (keyword_id = k.id)
                                             ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.002..0.002 rows=0 loops=21088)
                                                   Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.77 rows=1 width=4) (actual time=0.031..0.035 rows=3 loops=199)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German}'::text[]))
                                       Rows Removed by Filter: 17
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=12) (actual time=0.003..0.006 rows=6 loops=684)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: (note IS NULL)
                                 Rows Removed by Filter: 2
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=4365)
                           Index Cond: (id = mc.company_id)
                           Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                           Rows Removed by Filter: 1
               ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1911)
                     Filter: ((kind)::text = 'production companies'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.004..0.004 rows=1 loops=1816)
               Index Cond: (id = mk.movie_id)
               Filter: ((production_year >= 1950) AND (production_year <= 2000))
               Rows Removed by Filter: 0
 Planning Time: 30.789 ms
 Execution Time: 271.964 ms
(50 rows)

SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3756.33..3756.34 rows=1 width=96) (actual time=128.500..128.500 rows=1 loops=1)
   ->  Nested Loop  (cost=8.76..3756.32 rows=1 width=118) (actual time=6.200..128.418 rows=38 loops=1)
         Join Filter: (ml.movie_id = t.id)
         ->  Nested Loop  (cost=8.33..3755.82 rows=1 width=117) (actual time=5.184..126.681 rows=308 loops=1)
               Join Filter: (mc.company_type_id = ct.id)
               Rows Removed by Join Filter: 19
               ->  Nested Loop  (cost=8.33..3754.75 rows=1 width=121) (actual time=5.163..123.996 rows=327 loops=1)
                     ->  Nested Loop  (cost=7.91..3754.30 rows=1 width=106) (actual time=5.149..121.444 rows=749 loops=1)
                           Join Filter: (ml.movie_id = mc.movie_id)
                           ->  Nested Loop  (cost=7.48..3753.72 rows=1 width=94) (actual time=5.124..120.514 rows=118 loops=1)
                                 Join Filter: (ml.movie_id = mi.movie_id)
                                 ->  Nested Loop  (cost=7.04..3752.25 rows=1 width=90) (actual time=4.662..117.057 rows=199 loops=1)
                                       Join Filter: (ml.link_type_id = lt.id)
                                       Rows Removed by Join Filter: 303
                                       ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.014..0.024 rows=2 loops=1)
                                             Filter: ((link)::text ~~ '%follow%'::text)
                                             Rows Removed by Filter: 16
                                       ->  Nested Loop  (cost=7.04..3750.90 rows=10 width=12) (actual time=4.361..58.469 rows=251 loops=2)
                                             ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=4.344..42.677 rows=10544 loops=2)
                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.037..17.682 rows=1 loops=2)
                                                         Filter: ((keyword)::text = 'sequel'::text)
                                                         Rows Removed by Filter: 134169
                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=3.264..23.080 rows=10544 loops=2)
                                                         Recheck Cond: (keyword_id = k.id)
                                                         Heap Blocks: exact=11140
                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=2.486..2.486 rows=10544 loops=2)
                                                               Index Cond: (keyword_id = k.id)
                                             ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.001..0.001 rows=0 loops=21088)
                                                   Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.45 rows=1 width=4) (actual time=0.015..0.017 rows=1 loops=199)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Germany,German}'::text[]))
                                       Rows Removed by Filter: 20
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=12) (actual time=0.004..0.006 rows=6 loops=118)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: (note IS NULL)
                                 Rows Removed by Filter: 2
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=749)
                           Index Cond: (id = mc.company_id)
                           Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                           Rows Removed by Filter: 1
               ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=327)
                     Filter: ((kind)::text = 'production companies'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.005..0.005 rows=0 loops=308)
               Index Cond: (id = mk.movie_id)
               Filter: ((production_year >= 2000) AND (production_year <= 2010))
               Rows Removed by Filter: 1
 Planning Time: 28.524 ms
 Execution Time: 129.105 ms
(50 rows)

SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3756.72..3756.73 rows=1 width=96) (actual time=135.331..135.332 rows=1 loops=1)
   ->  Nested Loop  (cost=8.76..3756.71 rows=1 width=118) (actual time=5.698..134.254 rows=1874 loops=1)
         Join Filter: (ml.movie_id = mi.movie_id)
         ->  Nested Loop  (cost=8.32..3754.85 rows=1 width=134) (actual time=5.662..126.506 rows=402 loops=1)
               Join Filter: (mc.company_type_id = ct.id)
               Rows Removed by Join Filter: 20
               ->  Nested Loop  (cost=8.32..3753.79 rows=1 width=138) (actual time=5.651..123.046 rows=422 loops=1)
                     ->  Nested Loop  (cost=7.90..3753.33 rows=1 width=123) (actual time=4.813..118.779 rows=1021 loops=1)
                           Join Filter: (ml.movie_id = mc.movie_id)
                           ->  Nested Loop  (cost=7.47..3752.76 rows=1 width=111) (actual time=4.739..116.620 rows=199 loops=1)
                                 Join Filter: (ml.movie_id = t.id)
                                 ->  Nested Loop  (cost=7.04..3752.25 rows=1 width=90) (actual time=4.650..115.128 rows=199 loops=1)
                                       Join Filter: (ml.link_type_id = lt.id)
                                       Rows Removed by Join Filter: 303
                                       ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.014..0.024 rows=2 loops=1)
                                             Filter: ((link)::text ~~ '%follow%'::text)
                                             Rows Removed by Filter: 16
                                       ->  Nested Loop  (cost=7.04..3750.90 rows=10 width=12) (actual time=4.370..57.500 rows=251 loops=2)
                                             ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=4.359..41.632 rows=10544 loops=2)
                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.024..17.602 rows=1 loops=2)
                                                         Filter: ((keyword)::text = 'sequel'::text)
                                                         Rows Removed by Filter: 134169
                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=3.288..22.080 rows=10544 loops=2)
                                                         Recheck Cond: (keyword_id = k.id)
                                                         Heap Blocks: exact=11140
                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=2.524..2.524 rows=10544 loops=2)
                                                               Index Cond: (keyword_id = k.id)
                                             ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.001..0.001 rows=0 loops=21088)
                                                   Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.007..0.007 rows=1 loops=199)
                                       Index Cond: (id = mk.movie_id)
                                       Filter: ((production_year >= 1950) AND (production_year <= 2010))
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=12) (actual time=0.007..0.009 rows=5 loops=199)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: (note IS NULL)
                                 Rows Removed by Filter: 2
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.004..0.004 rows=0 loops=1021)
                           Index Cond: (id = mc.company_id)
                           Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                           Rows Removed by Filter: 1
               ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=422)
                     Filter: ((kind)::text = 'production companies'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.82 rows=3 width=4) (actual time=0.013..0.017 rows=5 loops=402)
               Index Cond: (movie_id = mk.movie_id)
               Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,English}'::text[]))
               Rows Removed by Filter: 16
 Planning Time: 29.051 ms
 Execution Time: 135.990 ms
(49 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7401.04..7401.05 rows=1 width=96) (actual time=1633.320..1633.320 rows=1 loops=1)
   ->  Nested Loop  (cost=8.90..7401.03 rows=1 width=41) (actual time=35.186..1629.893 rows=2851 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         Rows Removed by Join Filter: 191
         ->  Nested Loop  (cost=8.90..7398.61 rows=1 width=45) (actual time=35.170..1596.476 rows=3042 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=8.46..7397.02 rows=1 width=57) (actual time=13.224..1341.034 rows=2958 loops=1)
                     Join Filter: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=8.46..7395.93 rows=1 width=61) (actual time=13.201..1318.042 rows=2958 loops=1)
                           ->  Nested Loop  (cost=8.04..7395.38 rows=1 width=46) (actual time=13.168..1278.787 rows=3374 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.62..7394.80 rows=1 width=34) (actual time=13.100..1175.077 rows=2378 loops=1)
                                       Join Filter: (mi_idx.info_type_id = it2.id)
                                       Rows Removed by Join Filter: 6321
                                       ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.031..0.034 rows=1 loops=1)
                                             Filter: ((info)::text = 'rating'::text)
                                             Rows Removed by Filter: 112
                                       ->  Nested Loop  (cost=7.62..7392.07 rows=26 width=38) (actual time=7.587..1173.197 rows=8699 loops=1)
                                             Join Filter: (t.id = mi_idx.movie_id)
                                             ->  Nested Loop  (cost=7.19..7386.71 rows=10 width=25) (actual time=7.533..1076.385 rows=4832 loops=1)
                                                   Join Filter: (t.kind_id = kt.id)
                                                   Rows Removed by Join Filter: 2286
                                                   ->  Nested Loop  (cost=7.19..7384.59 rows=36 width=29) (actual time=7.479..1070.301 rows=5606 loops=1)
                                                         ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=7.307..502.462 rows=37091 loops=1)
                                                               ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.513..38.242 rows=3 loops=1)
                                                                     Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                     Rows Removed by Filter: 134167
                                                               ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=5.029..149.088 rows=12364 loops=3)
                                                                     Recheck Cond: (keyword_id = k.id)
                                                                     Heap Blocks: exact=26312
                                                                     ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.741..3.741 rows=12364 loops=3)
                                                                           Index Cond: (keyword_id = k.id)
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.014..0.014 rows=0 loops=37091)
                                                               Index Cond: (id = mk.movie_id)
                                                               Filter: (production_year > 2008)
                                                               Rows Removed by Filter: 1
                                                   ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=5606)
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.033..0.035 rows=2 loops=1)
                                                               Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                               Rows Removed by Filter: 5
                                             ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=13) (actual time=0.017..0.019 rows=2 loops=4832)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((info)::text < '7.0'::text)
                                                   Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.036..0.042 rows=1 loops=2378)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                                       Rows Removed by Filter: 10
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.010..0.010 rows=1 loops=3374)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text <> '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.002..0.002 rows=1 loops=2958)
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.56 rows=2 width=8) (actual time=0.077..0.085 rows=1 loops=2958)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Germany,German,USA,American}'::text[]))
                     Rows Removed by Filter: 155
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=3042)
               Filter: ((info)::text = 'countries'::text)
               Rows Removed by Filter: 14
 Planning Time: 76.785 ms
 Execution Time: 1634.069 ms
(62 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7399.71..7399.72 rows=1 width=96) (actual time=1243.494..1243.495 rows=1 loops=1)
   ->  Nested Loop  (cost=8.90..7399.70 rows=1 width=41) (actual time=43.730..1243.396 rows=31 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         Rows Removed by Join Filter: 3
         ->  Nested Loop  (cost=8.90..7397.27 rows=1 width=45) (actual time=43.714..1242.949 rows=34 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=8.46..7395.69 rows=1 width=57) (actual time=43.500..1233.565 rows=50 loops=1)
                     Join Filter: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=8.46..7394.60 rows=1 width=61) (actual time=43.475..1232.991 rows=50 loops=1)
                           ->  Nested Loop  (cost=8.04..7394.05 rows=1 width=46) (actual time=43.438..1231.043 rows=78 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.62..7393.47 rows=1 width=34) (actual time=17.250..1162.130 rows=1615 loops=1)
                                       Join Filter: (mi_idx.info_type_id = it2.id)
                                       Rows Removed by Join Filter: 4362
                                       ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.034..0.037 rows=1 loops=1)
                                             Filter: ((info)::text = 'rating'::text)
                                             Rows Removed by Filter: 112
                                       ->  Nested Loop  (cost=7.62..7390.80 rows=21 width=38) (actual time=8.078..1160.853 rows=5977 loops=1)
                                             Join Filter: (t.id = mi_idx.movie_id)
                                             ->  Nested Loop  (cost=7.19..7386.51 rows=8 width=25) (actual time=8.024..1091.245 rows=3517 loops=1)
                                                   Join Filter: (t.kind_id = kt.id)
                                                   Rows Removed by Join Filter: 1618
                                                   ->  Nested Loop  (cost=7.19..7384.59 rows=29 width=29) (actual time=7.985..1086.729 rows=4040 loops=1)
                                                         ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=7.813..540.031 rows=37091 loops=1)
                                                               ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.953..38.686 rows=3 loops=1)
                                                                     Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                     Rows Removed by Filter: 134167
                                                               ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=5.082..161.386 rows=12364 loops=3)
                                                                     Recheck Cond: (keyword_id = k.id)
                                                                     Heap Blocks: exact=26312
                                                                     ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.786..3.786 rows=12364 loops=3)
                                                                           Index Cond: (keyword_id = k.id)
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.014..0.014 rows=0 loops=37091)
                                                               Index Cond: (id = mk.movie_id)
                                                               Filter: (production_year > 2009)
                                                               Rows Removed by Filter: 1
                                                   ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=4040)
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.027..0.030 rows=2 loops=1)
                                                               Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                               Rows Removed by Filter: 5
                                             ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=13) (actual time=0.017..0.018 rows=2 loops=3517)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((info)::text < '7.0'::text)
                                                   Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.041..0.042 rows=0 loops=1615)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                                       Rows Removed by Filter: 12
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.023..0.023 rows=1 loops=78)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text <> '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.003..0.003 rows=1 loops=50)
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.56 rows=2 width=8) (actual time=0.172..0.186 rows=1 loops=50)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Germany,German,USA,American}'::text[]))
                     Rows Removed by Filter: 53
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=34)
               Filter: ((info)::text = 'countries'::text)
               Rows Removed by Filter: 16
 Planning Time: 78.884 ms
 Execution Time: 1244.372 ms
(62 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7405.36..7405.37 rows=1 width=96) (actual time=4735.269..4735.269 rows=1 loops=1)
   ->  Nested Loop  (cost=8.90..7405.35 rows=1 width=41) (actual time=12.043..4710.720 rows=21489 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         Rows Removed by Join Filter: 3123
         ->  Nested Loop  (cost=8.90..7402.92 rows=1 width=45) (actual time=12.029..4425.180 rows=24612 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=8.46..7401.02 rows=1 width=57) (actual time=11.889..1897.822 rows=23425 loops=1)
                     Join Filter: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=8.46..7399.93 rows=1 width=61) (actual time=11.865..1717.588 rows=23425 loops=1)
                           ->  Nested Loop  (cost=8.04..7399.38 rows=1 width=46) (actual time=11.831..1530.709 rows=25316 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.62..7398.81 rows=1 width=34) (actual time=8.056..1281.599 rows=5949 loops=1)
                                       Join Filter: (mi_idx.info_type_id = it2.id)
                                       Rows Removed by Join Filter: 11942
                                       ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.031..0.033 rows=1 loops=1)
                                             Filter: ((info)::text = 'rating'::text)
                                             Rows Removed by Filter: 112
                                       ->  Nested Loop  (cost=7.62..7395.82 rows=46 width=38) (actual time=8.021..1277.928 rows=17891 loops=1)
                                             Join Filter: (t.id = mi_idx.movie_id)
                                             ->  Nested Loop  (cost=7.19..7387.25 rows=16 width=25) (actual time=7.966..1122.536 rows=8073 loops=1)
                                                   Join Filter: (t.kind_id = kt.id)
                                                   Rows Removed by Join Filter: 4332
                                                   ->  Nested Loop  (cost=7.19..7384.59 rows=55 width=29) (actual time=7.807..1111.931 rows=9739 loops=1)
                                                         ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=7.758..532.201 rows=37091 loops=1)
                                                               ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.954..39.040 rows=3 loops=1)
                                                                     Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                     Rows Removed by Filter: 134167
                                                               ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=5.013..158.603 rows=12364 loops=3)
                                                                     Recheck Cond: (keyword_id = k.id)
                                                                     Heap Blocks: exact=26312
                                                                     ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.718..3.718 rows=12364 loops=3)
                                                                           Index Cond: (keyword_id = k.id)
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.014..0.014 rows=0 loops=37091)
                                                               Index Cond: (id = mk.movie_id)
                                                               Filter: (production_year > 2005)
                                                               Rows Removed by Filter: 1
                                                   ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=9739)
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.028..0.030 rows=2 loops=1)
                                                               Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                               Rows Removed by Filter: 5
                                             ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=13) (actual time=0.017..0.018 rows=2 loops=8073)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((info)::text < '8.5'::text)
                                                   Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.028..0.039 rows=4 loops=5949)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                                       Rows Removed by Filter: 8
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.006..0.006 rows=1 loops=25316)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text <> '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.002..0.002 rows=1 loops=23425)
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.089..0.107 rows=1 loops=23425)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                     Rows Removed by Filter: 180
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=24612)
               Filter: ((info)::text = 'countries'::text)
               Rows Removed by Filter: 20
 Planning Time: 78.254 ms
 Execution Time: 4736.083 ms
(62 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7405.28..7405.29 rows=1 width=96) (actual time=3525.784..3525.784 rows=1 loops=1)
   ->  Nested Loop  (cost=8.90..7405.27 rows=1 width=41) (actual time=12.388..3469.447 rows=46281 loops=1)
         Join Filter: (mc.company_type_id = ct.id)
         Rows Removed by Join Filter: 4783
         ->  Nested Loop  (cost=8.90..7404.18 rows=1 width=45) (actual time=12.366..3113.794 rows=46281 loops=1)
               ->  Nested Loop  (cost=8.48..7403.73 rows=1 width=30) (actual time=8.255..2663.430 rows=64848 loops=1)
                     Join Filter: (t.id = mc.movie_id)
                     ->  Nested Loop  (cost=8.05..7403.13 rows=1 width=38) (actual time=8.215..2477.624 rows=4115 loops=1)
                           Join Filter: (mi.info_type_id = it1.id)
                           Rows Removed by Join Filter: 594
                           ->  Nested Loop  (cost=8.05..7400.71 rows=1 width=42) (actual time=8.203..2420.509 rows=4709 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=7.62..7398.81 rows=1 width=34) (actual time=8.087..1288.533 rows=5949 loops=1)
                                       Join Filter: (mi_idx.info_type_id = it2.id)
                                       Rows Removed by Join Filter: 11942
                                       ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.032..0.035 rows=1 loops=1)
                                             Filter: ((info)::text = 'rating'::text)
                                             Rows Removed by Filter: 112
                                       ->  Nested Loop  (cost=7.62..7395.82 rows=46 width=38) (actual time=8.050..1284.668 rows=17891 loops=1)
                                             Join Filter: (t.id = mi_idx.movie_id)
                                             ->  Nested Loop  (cost=7.19..7387.25 rows=16 width=25) (actual time=8.007..1129.041 rows=8073 loops=1)
                                                   Join Filter: (t.kind_id = kt.id)
                                                   Rows Removed by Join Filter: 4332
                                                   ->  Nested Loop  (cost=7.19..7384.59 rows=55 width=29) (actual time=7.850..1118.330 rows=9739 loops=1)
                                                         ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=7.812..533.652 rows=37091 loops=1)
                                                               ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.950..38.687 rows=3 loops=1)
                                                                     Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                     Rows Removed by Filter: 134167
                                                               ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=5.173..159.141 rows=12364 loops=3)
                                                                     Recheck Cond: (keyword_id = k.id)
                                                                     Heap Blocks: exact=26312
                                                                     ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.858..3.858 rows=12364 loops=3)
                                                                           Index Cond: (keyword_id = k.id)
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.015..0.015 rows=0 loops=37091)
                                                               Index Cond: (id = mk.movie_id)
                                                               Filter: (production_year > 2005)
                                                               Rows Removed by Filter: 1
                                                   ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=9739)
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.031..0.033 rows=2 loops=1)
                                                               Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                               Rows Removed by Filter: 5
                                             ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=13) (actual time=0.016..0.018 rows=2 loops=8073)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((info)::text < '8.5'::text)
                                                   Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.164..0.189 rows=1 loops=5949)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                                       Rows Removed by Filter: 71
                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=4709)
                                 Filter: ((info)::text = 'countries'::text)
                                 Rows Removed by Filter: 20
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=12) (actual time=0.020..0.038 rows=16 loops=4115)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.006..0.006 rows=1 loops=64848)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text <> '[us]'::text)
                     Rows Removed by Filter: 0
         ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.002..0.002 rows=1 loops=46281)
 Planning Time: 80.946 ms
 Execution Time: 3526.601 ms
(61 rows)

SET
                                                                                                    QUERY PLAN                                                                                                    
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=57963.27..57963.28 rows=1 width=64) (actual time=556.391..556.392 rows=1 loops=1)
   ->  Nested Loop  (cost=4238.90..57963.26 rows=1 width=65) (actual time=550.015..556.087 rows=618 loops=1)
         ->  Nested Loop  (cost=4238.48..57962.82 rows=1 width=69) (actual time=549.884..551.302 rows=618 loops=1)
               ->  Gather  (cost=4238.35..57962.67 rows=1 width=73) (actual time=549.787..550.329 rows=618 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Nested Loop  (cost=3238.35..56962.57 rows=1 width=73) (actual time=520.168..542.303 rows=206 loops=3)
                           ->  Nested Loop  (cost=3237.93..56962.12 rows=1 width=77) (actual time=520.108..541.711 rows=206 loops=3)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=3237.50..56961.52 rows=1 width=85) (actual time=520.064..541.084 rows=205 loops=3)
                                       ->  Nested Loop  (cost=3237.06..56959.69 rows=1 width=77) (actual time=520.019..540.903 rows=2 loops=3)
                                             ->  Nested Loop  (cost=3236.92..56959.27 rows=2 width=81) (actual time=519.971..540.851 rows=2 loops=3)
                                                   ->  Hash Join  (cost=3236.49..54671.45 rows=1099 width=73) (actual time=269.575..387.967 rows=344 loops=3)
                                                         Hash Cond: (t.kind_id = kt.id)
                                                         ->  Hash Join  (cost=3235.39..54637.93 rows=7692 width=29) (actual time=51.174..387.410 rows=694 loops=3)
                                                               Hash Cond: (t.id = cc.movie_id)
                                                               ->  Parallel Seq Scan on title t  (cost=0.00..49166.29 rows=575821 width=25) (actual time=0.042..280.389 rows=460484 loops=3)
                                                                     Filter: (production_year > 2000)
                                                                     Rows Removed by Filter: 382286
                                                               ->  Hash  (cost=2813.24..2813.24 rows=33772 width=4) (actual time=49.511..49.511 rows=24592 loops=3)
                                                                     Buckets: 65536  Batches: 1  Memory Usage: 1377kB
                                                                     ->  Hash Join  (cost=1.06..2813.24 rows=33772 width=4) (actual time=0.133..42.330 rows=24592 loops=3)
                                                                           Hash Cond: (cc.status_id = cct1.id)
                                                                           ->  Seq Scan on complete_cast cc  (cost=0.00..2081.86 rows=135086 width=8) (actual time=0.039..21.623 rows=135086 loops=3)
                                                                           ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.036..0.036 rows=1 loops=3)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.025..0.026 rows=1 loops=3)
                                                                                       Filter: ((kind)::text = 'complete+verified'::text)
                                                                                       Rows Removed by Filter: 3
                                                         ->  Hash  (cost=1.09..1.09 rows=1 width=52) (actual time=0.084..0.084 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=52) (actual time=0.057..0.059 rows=1 loops=3)
                                                                     Filter: ((kind)::text = 'movie'::text)
                                                                     Rows Removed by Filter: 6
                                                   ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.07 rows=1 width=8) (actual time=0.442..0.443 rows=0 loops=1033)
                                                         Index Cond: (movie_id = t.id)
                                                         Filter: ((info IS NOT NULL) AND ((note)::text ~~ '%internet%'::text) AND (((info)::text ~~ 'USA:% 199%'::text) OR ((info)::text ~~ 'USA:% 200%'::text)))
                                                         Rows Removed by Filter: 211
                                             ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.19 rows=1 width=4) (actual time=0.030..0.030 rows=1 loops=5)
                                                   Index Cond: (id = mi.info_type_id)
                                                   Filter: ((info)::text = 'release dates'::text)
                                       ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.36 rows=47 width=8) (actual time=0.039..0.080 rows=123 loops=5)
                                             Index Cond: (movie_id = t.id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=12) (actual time=0.002..0.002 rows=1 loops=615)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=618)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
               ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=618)
                     Index Cond: (id = mc.company_type_id)
                     Heap Fetches: 618
         ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=618)
               Index Cond: (id = mk.keyword_id)
               Heap Fetches: 618
 Planning Time: 75.918 ms
 Execution Time: 557.683 ms
(56 rows)

SET
                                                                                              QUERY PLAN                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7402.39..7402.40 rows=1 width=64) (actual time=163.433..163.434 rows=1 loops=1)
   ->  Nested Loop  (cost=8.89..7402.38 rows=1 width=65) (actual time=47.960..163.396 rows=16 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         ->  Nested Loop  (cost=8.89..7399.96 rows=1 width=69) (actual time=47.944..163.204 rows=16 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=8.46..7398.38 rows=1 width=81) (actual time=9.980..129.744 rows=315 loops=1)
                     Join Filter: (mc.company_type_id = ct.id)
                     Rows Removed by Join Filter: 140
                     ->  Nested Loop  (cost=8.46..7397.29 rows=1 width=85) (actual time=9.955..127.223 rows=315 loops=1)
                           ->  Nested Loop  (cost=8.04..7395.51 rows=4 width=89) (actual time=9.790..114.352 rows=1218 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.61..7393.10 rows=4 width=77) (actual time=9.726..110.611 rows=60 loops=1)
                                       Join Filter: (cc.status_id = cct1.id)
                                       Rows Removed by Join Filter: 81
                                       ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.039..0.040 rows=1 loops=1)
                                             Filter: ((kind)::text = 'complete+verified'::text)
                                             Rows Removed by Filter: 3
                                       ->  Nested Loop  (cost=7.61..7391.86 rows=15 width=81) (actual time=9.656..110.520 rows=141 loops=1)
                                             ->  Nested Loop  (cost=7.19..7386.60 rows=11 width=73) (actual time=9.094..104.586 rows=401 loops=1)
                                                   Join Filter: (t.kind_id = kt.id)
                                                   Rows Removed by Join Filter: 156
                                                   ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=52) (actual time=0.022..0.025 rows=1 loops=1)
                                                         Filter: ((kind)::text = 'movie'::text)
                                                         Rows Removed by Filter: 6
                                                   ->  Nested Loop  (cost=7.19..7384.59 rows=74 width=29) (actual time=1.592..104.345 rows=557 loops=1)
                                                         ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=1.542..67.624 rows=1133 loops=1)
                                                               ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.131..43.021 rows=4 loops=1)
                                                                     Filter: ((keyword)::text = ANY ('{nerd,loner,alienation,dignity}'::text[]))
                                                                     Rows Removed by Filter: 134166
                                                               ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=0.176..5.989 rows=283 loops=4)
                                                                     Recheck Cond: (keyword_id = k.id)
                                                                     Heap Blocks: exact=1083
                                                                     ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.119..0.119 rows=283 loops=4)
                                                                           Index Cond: (keyword_id = k.id)
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.031..0.031 rows=0 loops=1133)
                                                               Index Cond: (id = mk.movie_id)
                                                               Filter: (production_year > 2000)
                                                               Rows Removed by Filter: 1
                                             ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=8) (actual time=0.013..0.014 rows=0 loops=401)
                                                   Index Cond: (movie_id = t.id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=12) (actual time=0.032..0.052 rows=20 loops=60)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.010..0.010 rows=0 loops=1218)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.002..0.002 rows=1 loops=315)
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.56 rows=1 width=8) (actual time=0.104..0.105 rows=0 loops=315)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: (((note)::text ~~ '%internet%'::text) AND ((info)::text ~~ 'USA:% 200%'::text))
                     Rows Removed by Filter: 268
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=16)
               Filter: ((info)::text = 'release dates'::text)
               Rows Removed by Filter: 15
 Planning Time: 75.734 ms
 Execution Time: 164.173 ms
(56 rows)

SET
                                                                                                       QUERY PLAN                                                                                                       
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=67209.67..67209.68 rows=1 width=64) (actual time=788.984..788.985 rows=1 loops=1)
   ->  Gather  (cost=67209.45..67209.66 rows=2 width=64) (actual time=788.683..797.004 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=66209.45..66209.46 rows=1 width=64) (actual time=780.817..780.818 rows=1 loops=3)
               ->  Nested Loop  (cost=3238.95..66209.44 rows=2 width=65) (actual time=631.952..780.684 rows=209 loops=3)
                     ->  Nested Loop  (cost=3238.53..66208.57 rows=2 width=69) (actual time=631.871..778.852 rows=209 loops=3)
                           ->  Nested Loop  (cost=3238.10..66206.76 rows=1 width=81) (actual time=631.790..778.622 rows=2 loops=3)
                                 ->  Nested Loop  (cost=3237.97..66206.60 rows=1 width=85) (actual time=631.733..778.557 rows=2 loops=3)
                                       ->  Nested Loop  (cost=3237.55..66206.16 rows=1 width=89) (actual time=631.650..778.434 rows=2 loops=3)
                                             ->  Nested Loop  (cost=3237.12..66205.53 rows=1 width=77) (actual time=631.583..778.335 rows=2 loops=3)
                                                   ->  Nested Loop  (cost=3236.98..66203.98 rows=8 width=81) (actual time=631.511..778.251 rows=2 loops=3)
                                                         ->  Hash Join  (cost=3236.54..55283.32 rows=5580 width=73) (actual time=269.088..408.978 rows=1684 loops=3)
                                                               Hash Cond: (t.kind_id = kt.id)
                                                               ->  Hash Join  (cost=3235.39..55241.01 rows=9766 width=29) (actual time=51.254..407.549 rows=2141 loops=3)
                                                                     Hash Cond: (t.id = cc.movie_id)
                                                                     ->  Parallel Seq Scan on title t  (cost=0.00..49166.29 rows=731112 width=25) (actual time=0.059..280.116 rows=583011 loops=3)
                                                                           Filter: (production_year > 1990)
                                                                           Rows Removed by Filter: 259760
                                                                     ->  Hash  (cost=2813.24..2813.24 rows=33772 width=4) (actual time=49.613..49.613 rows=24592 loops=3)
                                                                           Buckets: 65536  Batches: 1  Memory Usage: 1377kB
                                                                           ->  Hash Join  (cost=1.06..2813.24 rows=33772 width=4) (actual time=0.125..42.420 rows=24592 loops=3)
                                                                                 Hash Cond: (cc.status_id = cct1.id)
                                                                                 ->  Seq Scan on complete_cast cc  (cost=0.00..2081.86 rows=135086 width=8) (actual time=0.034..21.496 rows=135086 loops=3)
                                                                                 ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.030..0.031 rows=1 loops=3)
                                                                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                       ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.020..0.021 rows=1 loops=3)
                                                                                             Filter: ((kind)::text = 'complete+verified'::text)
                                                                                             Rows Removed by Filter: 3
                                                               ->  Hash  (cost=1.10..1.10 rows=4 width=52) (actual time=0.077..0.077 rows=4 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on kind_type kt  (cost=0.00..1.10 rows=4 width=52) (actual time=0.046..0.050 rows=4 loops=3)
                                                                           Filter: ((kind)::text = ANY ('{movie,"tv movie","video movie","video game"}'::text[]))
                                                                           Rows Removed by Filter: 3
                                                         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.95 rows=1 width=8) (actual time=0.218..0.218 rows=0 loops=5053)
                                                               Index Cond: (movie_id = t.id)
                                                               Filter: ((info IS NOT NULL) AND ((note)::text ~~ '%internet%'::text) AND (((info)::text ~~ 'USA:% 199%'::text) OR ((info)::text ~~ 'USA:% 200%'::text)))
                                                               Rows Removed by Filter: 123
                                                   ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.19 rows=1 width=4) (actual time=0.040..0.040 rows=1 loops=6)
                                                         Index Cond: (id = mi.info_type_id)
                                                         Filter: ((info)::text = 'release dates'::text)
                                             ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.58 rows=5 width=12) (actual time=0.044..0.047 rows=1 loops=6)
                                                   Index Cond: (movie_id = t.id)
                                       ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.051..0.051 rows=1 loops=7)
                                             Index Cond: (id = mc.company_id)
                                             Filter: ((country_code)::text = '[us]'::text)
                                 ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.026..0.026 rows=1 loops=7)
                                       Index Cond: (id = mc.company_type_id)
                                       Heap Fetches: 7
                           ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.34 rows=47 width=8) (actual time=0.044..0.077 rows=90 loops=7)
                                 Index Cond: (movie_id = t.id)
                     ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=628)
                           Index Cond: (id = mk.keyword_id)
                           Heap Fetches: 628
 Planning Time: 73.516 ms
 Execution Time: 797.934 ms
(56 rows)

SET
                                                                                                  QUERY PLAN                                                                                                  
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=6567.88..6567.89 rows=1 width=96) (actual time=1519.219..1519.219 rows=1 loops=1)
   ->  Nested Loop  (cost=10.32..6567.87 rows=1 width=48) (actual time=229.923..1518.958 rows=275 loops=1)
         ->  Nested Loop  (cost=9.89..6566.07 rows=1 width=41) (actual time=5.186..1494.410 rows=6518 loops=1)
               Join Filter: (rt.id = ci.role_id)
               Rows Removed by Join Filter: 30060
               ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.029..0.032 rows=1 loops=1)
                     Filter: ((role)::text = 'actress'::text)
                     Rows Removed by Filter: 11
               ->  Nested Loop  (cost=9.89..6564.90 rows=2 width=45) (actual time=4.703..1490.095 rows=36578 loops=1)
                     ->  Nested Loop  (cost=9.47..6562.80 rows=1 width=41) (actual time=4.660..1406.390 rows=13608 loops=1)
                           ->  Nested Loop  (cost=9.04..6561.09 rows=1 width=29) (actual time=4.596..1328.125 rows=13758 loops=1)
                                 Join Filter: (t.id = ci.movie_id)
                                 ->  Nested Loop  (cost=8.47..6521.26 rows=1 width=33) (actual time=2.262..627.492 rows=3406 loops=1)
                                       Join Filter: (it.id = mi.info_type_id)
                                       ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.013..0.027 rows=1 loops=1)
                                             Filter: ((info)::text = 'release dates'::text)
                                             Rows Removed by Filter: 112
                                       ->  Nested Loop  (cost=8.47..6518.83 rows=1 width=37) (actual time=2.248..626.610 rows=3406 loops=1)
                                             Join Filter: (t.id = mi.movie_id)
                                             ->  Nested Loop  (cost=8.04..6322.71 rows=6 width=29) (actual time=2.190..477.017 rows=1576 loops=1)
                                                   ->  Nested Loop  (cost=7.62..6297.69 rows=17 width=33) (actual time=2.149..415.564 rows=5566 loops=1)
                                                         Join Filter: (t.id = mc.movie_id)
                                                         ->  Nested Loop  (cost=7.19..6242.22 rows=16 width=25) (actual time=2.106..393.121 rows=495 loops=1)
                                                               ->  Nested Loop  (cost=6.76..6082.75 rows=101 width=4) (actual time=1.682..183.797 rows=9696 loops=1)
                                                                     ->  Seq Scan on keyword k  (cost=0.00..2793.84 rows=3 width=4) (actual time=0.032..35.904 rows=3 loops=1)
                                                                           Filter: ((keyword)::text = ANY ('{hero,martial-arts,hand-to-hand-combat}'::text[]))
                                                                           Rows Removed by Filter: 134167
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1093.30 rows=300 width=8) (actual time=1.475..47.564 rows=3232 loops=3)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=7446
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=1.120..1.120 rows=3232 loops=3)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using title_pkey on title t  (cost=0.43..1.58 rows=1 width=21) (actual time=0.020..0.020 rows=0 loops=9696)
                                                                     Index Cond: (id = mk.movie_id)
                                                                     Filter: (production_year > 2010)
                                                                     Rows Removed by Filter: 1
                                                         ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..3.40 rows=5 width=8) (actual time=0.026..0.039 rows=11 loops=495)
                                                               Index Cond: (movie_id = mk.movie_id)
                                                   ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.47 rows=1 width=4) (actual time=0.010..0.010 rows=0 loops=5566)
                                                         Index Cond: (id = mc.company_id)
                                                         Filter: ((country_code)::text = '[us]'::text)
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..32.67 rows=1 width=8) (actual time=0.031..0.093 rows=2 loops=1576)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%201%'::text) OR ((info)::text ~~ 'USA:%201%'::text)))
                                                   Rows Removed by Filter: 131
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..39.82 rows=1 width=16) (actual time=0.135..0.204 rows=4 loops=3406)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                       Rows Removed by Filter: 169
                           ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..1.70 rows=1 width=20) (actual time=0.005..0.005 rows=1 loops=13758)
                                 Index Cond: (id = ci.person_role_id)
                     ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.08 rows=2 width=4) (actual time=0.004..0.005 rows=3 loops=13608)
                           Index Cond: (person_id = ci.person_id)
                           Heap Fetches: 36578
         ->  Index Scan using name_pkey on name n  (cost=0.43..1.80 rows=1 width=19) (actual time=0.003..0.003 rows=0 loops=6518)
               Index Cond: (id = ci.person_id)
               Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
               Rows Removed by Filter: 1
 Planning Time: 102.379 ms
 Execution Time: 1520.106 ms
(61 rows)

SET
                                                                                                            QUERY PLAN                                                                                                            
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=6518.41..6518.42 rows=1 width=96) (actual time=140.495..140.496 rows=1 loops=1)
   ->  Nested Loop  (cost=1004.27..6518.40 rows=1 width=48) (actual time=108.029..140.438 rows=45 loops=1)
         ->  Nested Loop  (cost=1003.85..6516.52 rows=1 width=52) (actual time=78.116..137.210 rows=810 loops=1)
               ->  Nested Loop  (cost=1003.42..6514.72 rows=1 width=45) (actual time=78.055..131.736 rows=1986 loops=1)
                     ->  Nested Loop  (cost=1003.28..6514.53 rows=1 width=49) (actual time=78.028..128.364 rows=1986 loops=1)
                           Join Filter: (t.id = mi.movie_id)
                           ->  Nested Loop  (cost=1002.85..6481.85 rows=1 width=61) (actual time=77.943..80.704 rows=842 loops=1)
                                 ->  Gather  (cost=1002.42..6480.14 rows=1 width=49) (actual time=77.865..78.253 rows=857 loops=1)
                                       Workers Planned: 1
                                       Workers Launched: 1
                                       ->  Nested Loop  (cost=2.42..5480.04 rows=1 width=49) (actual time=44.422..56.502 rows=428 loops=2)
                                             ->  Nested Loop  (cost=2.28..5479.87 rows=1 width=53) (actual time=43.953..52.858 rows=2428 loops=2)
                                                   ->  Nested Loop  (cost=1.86..5477.77 rows=1 width=49) (actual time=43.906..48.847 rows=920 loops=2)
                                                         Join Filter: (t.id = ci.movie_id)
                                                         ->  Nested Loop  (cost=1.29..5437.93 rows=1 width=33) (actual time=42.725..44.815 rows=42 loops=2)
                                                               Join Filter: (t.id = mk.movie_id)
                                                               ->  Nested Loop  (cost=0.86..5434.87 rows=1 width=25) (actual time=42.658..44.676 rows=2 loops=2)
                                                                     ->  Nested Loop  (cost=0.43..5425.21 rows=6 width=4) (actual time=42.137..42.849 rows=50 loops=2)
                                                                           ->  Parallel Seq Scan on company_name cn  (cost=0.00..5068.50 rows=1 width=4) (actual time=42.067..42.073 rows=0 loops=2)
                                                                                 Filter: (((country_code)::text = '[us]'::text) AND ((name)::text = 'DreamWorks Animation'::text))
                                                                                 Rows Removed by Filter: 117498
                                                                           ->  Index Scan using company_id_movie_companies on movie_companies mc  (cost=0.43..355.38 rows=133 width=8) (actual time=0.135..1.497 rows=99 loops=1)
                                                                                 Index Cond: (company_id = cn.id)
                                                                     ->  Index Scan using title_pkey on title t  (cost=0.43..1.60 rows=1 width=21) (actual time=0.036..0.036 rows=0 loops=99)
                                                                           Index Cond: (id = mc.movie_id)
                                                                           Filter: ((production_year > 2010) AND ((title)::text ~~ 'Kung Fu Panda%'::text))
                                                                           Rows Removed by Filter: 1
                                                               ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..2.47 rows=47 width=8) (actual time=0.050..0.060 rows=21 loops=4)
                                                                     Index Cond: (movie_id = mc.movie_id)
                                                         ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..39.82 rows=1 width=16) (actual time=0.014..0.091 rows=22 loops=83)
                                                               Index Cond: (movie_id = mk.movie_id)
                                                               Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                               Rows Removed by Filter: 75
                                                   ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.08 rows=2 width=4) (actual time=0.003..0.004 rows=3 loops=1841)
                                                         Index Cond: (person_id = ci.person_id)
                                                         Heap Fetches: 4855
                                             ->  Index Scan using role_type_pkey on role_type rt  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=4855)
                                                   Index Cond: (id = ci.role_id)
                                                   Filter: ((role)::text = 'actress'::text)
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..1.70 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=857)
                                       Index Cond: (id = ci.person_role_id)
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..32.67 rows=1 width=8) (actual time=0.009..0.056 rows=2 loops=842)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%201%'::text) OR ((info)::text ~~ 'USA:%201%'::text)))
                                 Rows Removed by Filter: 166
                     ->  Index Scan using info_type_pkey on info_type it  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1986)
                           Index Cond: (id = mi.info_type_id)
                           Filter: ((info)::text = 'release dates'::text)
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.80 rows=1 width=19) (actual time=0.002..0.002 rows=0 loops=1986)
                     Index Cond: (id = ci.person_id)
                     Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                     Rows Removed by Filter: 1
         ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..1.46 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=810)
               Index Cond: (id = mk.keyword_id)
               Filter: ((keyword)::text = ANY ('{hero,martial-arts,hand-to-hand-combat,computer-animated-movie}'::text[]))
               Rows Removed by Filter: 1
 Planning Time: 100.392 ms
 Execution Time: 141.514 ms
(59 rows)

SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7505.11..7505.12 rows=1 width=128) (actual time=9130.147..9130.147 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.03..7505.10 rows=1 width=80) (actual time=60.843..9121.893 rows=4407 loops=1)
         Join Filter: (mi.movie_id = t.id)
         ->  Nested Loop  (cost=1011.60..7504.28 rows=1 width=79) (actual time=60.693..9023.056 rows=4407 loops=1)
               ->  Nested Loop  (cost=1011.17..7503.25 rows=1 width=68) (actual time=34.399..8817.745 rows=7112 loops=1)
                     ->  Nested Loop  (cost=1011.03..7503.07 rows=1 width=72) (actual time=34.344..8780.869 rows=7740 loops=1)
                           Join Filter: (mi.movie_id = ci.movie_id)
                           ->  Gather  (cost=1010.47..7474.12 rows=1 width=64) (actual time=10.230..1999.635 rows=12260 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Nested Loop  (cost=10.46..6474.02 rows=1 width=64) (actual time=10.895..2673.832 rows=4087 loops=3)
                                       Join Filter: (mi_idx.movie_id = mi.movie_id)
                                       ->  Hash Join  (cost=10.03..6438.32 rows=2 width=13) (actual time=7.334..635.418 rows=16920 loops=3)
                                             Hash Cond: (mi_idx.info_type_id = it2.id)
                                             ->  Nested Loop  (cost=7.61..6435.32 rows=213 width=17) (actual time=7.093..609.318 rows=50907 loops=3)
                                                   ->  Nested Loop  (cost=7.18..6379.27 rows=70 width=4) (actual time=7.019..326.043 rows=20699 loops=3)
                                                         ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4207.70 rows=2 width=4) (actual time=0.412..32.517 rows=2 loops=3)
                                                               Filter: ((keyword)::text = ANY ('{murder,blood,gore,death,female-nudity}'::text[]))
                                                               Rows Removed by Filter: 44722
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1082.78 rows=300 width=8) (actual time=5.395..170.988 rows=12419 loops=5)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=12389
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=4.171..4.171 rows=12419 loops=5)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.77 rows=3 width=13) (actual time=0.011..0.012 rows=2 loops=62096)
                                                         Index Cond: (movie_id = mk.movie_id)
                                             ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.092..0.092 rows=1 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.069..0.072 rows=1 loops=3)
                                                         Filter: ((info)::text = 'votes'::text)
                                                         Rows Removed by Filter: 112
                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..17.84 rows=1 width=51) (actual time=0.119..0.120 rows=0 loops=50760)
                                             Index Cond: (movie_id = mk.movie_id)
                                             Filter: ((info)::text = 'Horror'::text)
                                             Rows Removed by Filter: 56
                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..28.93 rows=1 width=8) (actual time=0.451..0.551 rows=1 loops=12260)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                 Rows Removed by Filter: 47
                     ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=7740)
                           Index Cond: (id = mi.info_type_id)
                           Filter: ((info)::text = 'genres'::text)
                           Rows Removed by Filter: 0
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.03 rows=1 width=19) (actual time=0.028..0.028 rows=1 loops=7112)
                     Index Cond: (id = ci.person_id)
                     Filter: ((gender)::text = 'm'::text)
                     Rows Removed by Filter: 0
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.81 rows=1 width=21) (actual time=0.020..0.020 rows=1 loops=4407)
               Index Cond: (id = mk.movie_id)
 Planning Time: 27.005 ms
 Execution Time: 9131.360 ms
(51 rows)

SET
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7485.20..7485.21 rows=1 width=128) (actual time=756.044..756.045 rows=1 loops=1)
   ->  Nested Loop  (cost=1009.75..7485.19 rows=1 width=80) (actual time=375.747..755.983 rows=6 loops=1)
         ->  Nested Loop  (cost=1009.32..7484.17 rows=1 width=69) (actual time=375.671..755.775 rows=6 loops=1)
               ->  Nested Loop  (cost=1009.18..7483.98 rows=1 width=73) (actual time=375.642..755.693 rows=18 loops=1)
                     Join Filter: (t.id = mi_idx.movie_id)
                     ->  Nested Loop  (cost=1008.75..7483.18 rows=1 width=80) (actual time=375.557..755.524 rows=6 loops=1)
                           ->  Nested Loop  (cost=1008.61..7482.99 rows=1 width=84) (actual time=375.467..755.409 rows=6 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=1008.17..7465.14 rows=1 width=33) (actual time=375.198..754.542 rows=6 loops=1)
                                       Join Filter: (t.id = ci.movie_id)
                                       ->  Gather  (cost=1007.61..7436.20 rows=1 width=25) (actual time=374.407..757.117 rows=9 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Nested Loop  (cost=7.61..6436.10 rows=1 width=25) (actual time=386.559..548.738 rows=3 loops=3)
                                                   ->  Nested Loop  (cost=7.18..6379.27 rows=70 width=4) (actual time=6.840..273.386 rows=20699 loops=3)
                                                         ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4207.70 rows=2 width=4) (actual time=0.358..46.229 rows=2 loops=3)
                                                               Filter: ((keyword)::text = ANY ('{murder,blood,gore,death,female-nudity}'::text[]))
                                                               Rows Removed by Filter: 44722
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1082.78 rows=300 width=8) (actual time=5.319..131.333 rows=12419 loops=5)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=12389
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=4.105..4.106 rows=12419 loops=5)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.81 rows=1 width=21) (actual time=0.012..0.012 rows=0 loops=62096)
                                                         Index Cond: (id = mk.movie_id)
                                                         Filter: ((production_year > 2010) AND ((title)::text ~~ 'Vampire%'::text))
                                                         Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..28.93 rows=1 width=8) (actual time=0.187..0.228 rows=1 loops=9)
                                             Index Cond: (movie_id = mk.movie_id)
                                             Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                             Rows Removed by Filter: 21
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..17.84 rows=1 width=51) (actual time=0.142..0.143 rows=1 loops=6)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = 'Horror'::text)
                                       Rows Removed by Filter: 20
                           ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=6)
                                 Index Cond: (id = mi.info_type_id)
                                 Filter: ((info)::text = 'genres'::text)
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.77 rows=3 width=13) (actual time=0.024..0.025 rows=3 loops=6)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=18)
                     Index Cond: (id = mi_idx.info_type_id)
                     Filter: ((info)::text = 'votes'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using name_pkey on name n  (cost=0.43..1.03 rows=1 width=19) (actual time=0.033..0.033 rows=1 loops=6)
               Index Cond: (id = ci.person_id)
               Filter: ((gender)::text = 'm'::text)
 Planning Time: 27.948 ms
 Execution Time: 761.408 ms
(49 rows)

SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8711.77..8711.78 rows=1 width=128) (actual time=31107.435..31107.435 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.03..8711.76 rows=1 width=80) (actual time=14.012..31068.897 rows=26153 loops=1)
         Join Filter: (mi.movie_id = t.id)
         ->  Nested Loop  (cost=1011.60..8710.94 rows=1 width=79) (actual time=13.946..30733.522 rows=26153 loops=1)
               ->  Nested Loop  (cost=1011.17..8709.91 rows=1 width=68) (actual time=13.844..29937.471 rows=42900 loops=1)
                     Join Filter: (mi.movie_id = ci.movie_id)
                     ->  Gather  (cost=1010.61..8680.97 rows=1 width=60) (actual time=10.023..2267.755 rows=63386 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop  (cost=10.61..7680.87 rows=1 width=60) (actual time=7.760..3878.544 rows=21129 loops=3)
                                 ->  Nested Loop  (cost=10.46..7680.52 rows=2 width=64) (actual time=7.735..3797.748 rows=22577 loops=3)
                                       Join Filter: (mi_idx.movie_id = mi.movie_id)
                                       ->  Hash Join  (cost=10.03..7644.40 rows=2 width=13) (actual time=7.483..820.497 rows=21234 loops=3)
                                             Hash Cond: (mi_idx.info_type_id = it2.id)
                                             ->  Nested Loop  (cost=7.61..7641.16 rows=298 width=17) (actual time=7.241..786.535 rows=63896 loops=3)
                                                   ->  Nested Loop  (cost=7.18..7562.69 rows=98 width=4) (actual time=7.160..420.208 rows=25571 loops=3)
                                                         ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4347.46 rows=3 width=4) (actual time=0.601..36.060 rows=2 loops=3)
                                                               Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                               Rows Removed by Filter: 44721
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1068.74 rows=300 width=8) (actual time=4.969..159.998 rows=10959 loops=7)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=12389
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.837..3.837 rows=10959 loops=7)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.77 rows=3 width=13) (actual time=0.012..0.013 rows=2 loops=76714)
                                                         Index Cond: (movie_id = mk.movie_id)
                                             ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.087..0.087 rows=1 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.059..0.062 rows=1 loops=3)
                                                         Filter: ((info)::text = 'votes'::text)
                                                         Rows Removed by Filter: 112
                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..18.05 rows=1 width=51) (actual time=0.135..0.139 rows=1 loops=63701)
                                             Index Cond: (movie_id = mk.movie_id)
                                             Filter: ((info)::text = ANY ('{Horror,Action,Sci-Fi,Thriller,Crime,War}'::text[]))
                                             Rows Removed by Filter: 58
                                 ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=67732)
                                       Index Cond: (id = mi.info_type_id)
                                       Filter: ((info)::text = 'genres'::text)
                                       Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..28.93 rows=1 width=8) (actual time=0.347..0.435 rows=1 loops=63386)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                           Rows Removed by Filter: 63
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.03 rows=1 width=19) (actual time=0.017..0.017 rows=1 loops=42900)
                     Index Cond: (id = ci.person_id)
                     Filter: ((gender)::text = 'm'::text)
                     Rows Removed by Filter: 0
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.81 rows=1 width=21) (actual time=0.011..0.011 rows=1 loops=26153)
               Index Cond: (id = mk.movie_id)
 Planning Time: 28.791 ms
 Execution Time: 31108.473 ms
(51 rows)

SET
                                                                                                      QUERY PLAN                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=14697.96..14697.97 rows=1 width=128) (actual time=5653.838..5653.838 rows=1 loops=1)
   ->  Nested Loop  (cost=9.46..14697.95 rows=1 width=53) (actual time=34.323..5650.581 rows=1728 loops=1)
         Join Filter: (cct1.id = cc.subject_id)
         Rows Removed by Join Filter: 471
         ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.028..0.029 rows=1 loops=1)
               Filter: ((kind)::text = 'cast'::text)
               Rows Removed by Filter: 3
         ->  Nested Loop  (cost=9.46..14696.89 rows=1 width=57) (actual time=34.293..5649.944 rows=2199 loops=1)
               Join Filter: (cct2.id = cc.status_id)
               Rows Removed by Join Filter: 2199
               ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.009..0.011 rows=2 loops=1)
                     Filter: ((kind)::text ~~ '%complete%'::text)
                     Rows Removed by Filter: 2
               ->  Nested Loop  (cost=9.46..14695.82 rows=1 width=61) (actual time=28.622..2824.225 rows=2199 loops=2)
                     ->  Nested Loop  (cost=9.04..14695.35 rows=1 width=69) (actual time=20.833..2801.003 rows=2929 loops=2)
                           ->  Nested Loop  (cost=8.61..14694.89 rows=1 width=58) (actual time=20.789..2726.855 rows=2929 loops=2)
                                 ->  Nested Loop  (cost=8.18..14688.49 rows=14 width=46) (actual time=20.339..1881.507 rows=105632 loops=2)
                                       Join Filter: (t.id = ci.movie_id)
                                       ->  Nested Loop  (cost=7.62..14686.50 rows=1 width=34) (actual time=20.272..791.565 rows=884 loops=2)
                                             Join Filter: (kt.id = t.kind_id)
                                             Rows Removed by Join Filter: 1016
                                             ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.018..0.021 rows=1 loops=2)
                                                   Filter: ((kind)::text = 'movie'::text)
                                                   Rows Removed by Filter: 6
                                             ->  Nested Loop  (cost=7.62..14685.40 rows=1 width=38) (actual time=1.155..790.891 rows=1900 loops=2)
                                                   ->  Nested Loop  (cost=7.19..14684.91 rows=1 width=13) (actual time=1.119..703.138 rows=3908 loops=2)
                                                         Join Filter: (mi_idx.info_type_id = it2.id)
                                                         Rows Removed by Join Filter: 2713
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.017..0.021 rows=1 loops=2)
                                                               Filter: ((info)::text = 'rating'::text)
                                                               Rows Removed by Filter: 112
                                                         ->  Nested Loop  (cost=7.19..14680.72 rows=142 width=17) (actual time=1.097..701.114 rows=6621 loops=2)
                                                               ->  Nested Loop  (cost=6.76..14509.57 rows=337 width=4) (actual time=0.882..362.683 rows=24091 loops=2)
                                                                     ->  Seq Scan on keyword k  (cost=0.00..3967.82 rows=10 width=4) (actual time=0.181..53.697 rows=10 loops=2)
                                                                           Filter: ((keyword)::text = ANY ('{superhero,marvel-comics,based-on-comic,tv-special,fight,violence,magnet,web,claw,laser}'::text[]))
                                                                           Rows Removed by Filter: 134160
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1051.17 rows=300 width=8) (actual time=0.973..29.856 rows=2409 loops=20)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=34254
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.719..0.719 rows=2409 loops=20)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=13) (actual time=0.013..0.013 rows=0 loops=48182)
                                                                     Index Cond: (movie_id = mk.movie_id)
                                                                     Filter: ((info)::text > '7.0'::text)
                                                                     Rows Removed by Filter: 2
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.021..0.021 rows=0 loops=7816)
                                                         Index Cond: (id = mk.movie_id)
                                                         Filter: (production_year > 2000)
                                                         Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.032..1.147 rows=119 loops=1768)
                                             Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=20) (actual time=0.007..0.007 rows=0 loops=211264)
                                       Index Cond: (id = ci.person_role_id)
                                       Filter: ((name IS NOT NULL) AND (((name)::text ~~ '%man%'::text) OR ((name)::text ~~ '%Man%'::text)))
                                       Rows Removed by Filter: 0
                           ->  Index Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=19) (actual time=0.024..0.024 rows=1 loops=5858)
                                 Index Cond: (id = ci.person_id)
                     ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.006..0.007 rows=1 loops=5858)
                           Index Cond: (movie_id = t.id)
 Planning Time: 87.880 ms
 Execution Time: 5654.647 ms
(61 rows)

SET
                                                                                                      QUERY PLAN                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7402.91..7402.92 rows=1 width=96) (actual time=775.505..775.505 rows=1 loops=1)
   ->  Nested Loop  (cost=9.46..7402.90 rows=1 width=38) (actual time=68.126..775.348 rows=93 loops=1)
         Join Filter: (cct1.id = cc.subject_id)
         Rows Removed by Join Filter: 87
         ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.023..0.024 rows=1 loops=1)
               Filter: ((kind)::text = 'cast'::text)
               Rows Removed by Filter: 3
         ->  Nested Loop  (cost=9.46..7401.84 rows=1 width=42) (actual time=68.100..775.286 rows=180 loops=1)
               Join Filter: (cct2.id = cc.status_id)
               Rows Removed by Join Filter: 180
               ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.008..0.012 rows=2 loops=1)
                     Filter: ((kind)::text ~~ '%complete%'::text)
                     Rows Removed by Filter: 2
               ->  Nested Loop  (cost=9.46..7400.78 rows=1 width=46) (actual time=56.422..387.595 rows=180 loops=2)
                     ->  Nested Loop  (cost=9.04..7400.30 rows=1 width=54) (actual time=52.984..386.644 rows=191 loops=2)
                           ->  Nested Loop  (cost=8.61..7399.84 rows=1 width=58) (actual time=52.952..383.667 rows=191 loops=2)
                                 ->  Nested Loop  (cost=8.18..7393.44 rows=14 width=46) (actual time=52.855..348.054 rows=7981 loops=2)
                                       Join Filter: (t.id = ci.movie_id)
                                       ->  Nested Loop  (cost=7.62..7391.45 rows=1 width=34) (actual time=52.826..302.935 rows=31 loops=2)
                                             Join Filter: (kt.id = t.kind_id)
                                             Rows Removed by Join Filter: 167
                                             ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.009..0.011 rows=1 loops=2)
                                                   Filter: ((kind)::text = 'movie'::text)
                                                   Rows Removed by Filter: 6
                                             ->  Nested Loop  (cost=7.62..7390.35 rows=1 width=38) (actual time=1.532..302.853 rows=198 loops=2)
                                                   ->  Nested Loop  (cost=7.19..7389.87 rows=1 width=13) (actual time=1.494..295.965 rows=313 loops=2)
                                                         Join Filter: (mi_idx.info_type_id = it2.id)
                                                         Rows Removed by Join Filter: 613
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.024..0.027 rows=1 loops=2)
                                                               Filter: ((info)::text = 'rating'::text)
                                                               Rows Removed by Filter: 112
                                                         ->  Nested Loop  (cost=7.19..7387.28 rows=14 width=17) (actual time=1.155..295.691 rows=926 loops=2)
                                                               ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=0.886..167.040 rows=9984 loops=2)
                                                                     ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=0.137..38.511 rows=4 loops=2)
                                                                           Filter: ((keyword)::text = ANY ('{superhero,marvel-comics,based-on-comic,fight}'::text[]))
                                                                           Rows Removed by Filter: 134166
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=1.028..31.035 rows=2496 loops=8)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=15372
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.763..0.763 rows=2496 loops=8)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=13) (actual time=0.012..0.012 rows=0 loops=19968)
                                                                     Index Cond: (movie_id = mk.movie_id)
                                                                     Filter: ((info)::text > '8.0'::text)
                                                                     Rows Removed by Filter: 2
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.021..0.021 rows=1 loops=626)
                                                         Index Cond: (id = mk.movie_id)
                                                         Filter: (production_year > 2005)
                                                         Rows Removed by Filter: 0
                                       ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.032..1.332 rows=257 loops=62)
                                             Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=20) (actual time=0.004..0.004 rows=0 loops=15962)
                                       Index Cond: (id = ci.person_role_id)
                                       Filter: ((name IS NOT NULL) AND (((name)::text ~~ '%man%'::text) OR ((name)::text ~~ '%Man%'::text)))
                                       Rows Removed by Filter: 0
                           ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=382)
                                 Index Cond: (id = ci.person_id)
                                 Heap Fetches: 382
                     ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.004..0.004 rows=1 loops=382)
                           Index Cond: (movie_id = t.id)
 Planning Time: 88.188 ms
 Execution Time: 776.232 ms
(62 rows)

SET
                                                                                                   QUERY PLAN                                                                                                   
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=14709.67..14709.68 rows=1 width=96) (actual time=9571.528..9571.528 rows=1 loops=1)
   ->  Nested Loop  (cost=9.46..14709.67 rows=1 width=38) (actual time=19.039..9563.075 rows=5400 loops=1)
         Join Filter: (it2.id = mi_idx.info_type_id)
         Rows Removed by Join Filter: 11196
         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.025..0.027 rows=1 loops=1)
               Filter: ((info)::text = 'rating'::text)
               Rows Removed by Filter: 112
         ->  Nested Loop  (cost=9.46..14707.24 rows=1 width=42) (actual time=19.010..9560.050 rows=16596 loops=1)
               Join Filter: (t.id = mi_idx.movie_id)
               ->  Nested Loop  (cost=9.03..14706.72 rows=1 width=49) (actual time=18.953..9498.891 rows=5406 loops=1)
                     ->  Nested Loop  (cost=8.60..14700.32 rows=14 width=37) (actual time=17.932..7788.764 rows=189844 loops=1)
                           ->  Nested Loop  (cost=8.17..14693.95 rows=14 width=41) (actual time=17.899..3961.030 rows=189844 loops=1)
                                 Join Filter: (t.id = ci.movie_id)
                                 ->  Nested Loop  (cost=7.61..14691.96 rows=1 width=29) (actual time=17.812..1698.396 rows=1267 loops=1)
                                       Join Filter: (cct2.id = cc.status_id)
                                       Rows Removed by Join Filter: 1267
                                       ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.020..0.022 rows=2 loops=1)
                                             Filter: ((kind)::text ~~ '%complete%'::text)
                                             Rows Removed by Filter: 2
                                       ->  Nested Loop  (cost=7.61..14690.90 rows=1 width=33) (actual time=15.433..848.834 rows=1267 loops=2)
                                             Join Filter: (cct1.id = cc.subject_id)
                                             Rows Removed by Join Filter: 218
                                             ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.005..0.007 rows=1 loops=2)
                                                   Filter: ((kind)::text = 'cast'::text)
                                                   Rows Removed by Filter: 3
                                             ->  Nested Loop  (cost=7.61..14689.84 rows=1 width=37) (actual time=15.424..848.176 rows=1485 loops=2)
                                                   ->  Nested Loop  (cost=7.19..14677.40 rows=26 width=25) (actual time=15.178..805.273 rows=5032 loops=2)
                                                         Join Filter: (kt.id = t.kind_id)
                                                         Rows Removed by Join Filter: 5581
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.005..0.008 rows=1 loops=2)
                                                               Filter: ((kind)::text = 'movie'::text)
                                                               Rows Removed by Filter: 6
                                                         ->  Nested Loop  (cost=7.19..14674.02 rows=184 width=29) (actual time=0.942..801.834 rows=10613 loops=2)
                                                               ->  Nested Loop  (cost=6.76..14509.57 rows=337 width=4) (actual time=0.903..367.418 rows=24091 loops=2)
                                                                     ->  Seq Scan on keyword k  (cost=0.00..3967.82 rows=10 width=4) (actual time=0.207..54.025 rows=10 loops=2)
                                                                           Filter: ((keyword)::text = ANY ('{superhero,marvel-comics,based-on-comic,tv-special,fight,violence,magnet,web,claw,laser}'::text[]))
                                                                           Rows Removed by Filter: 134160
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1051.17 rows=300 width=8) (actual time=0.977..30.198 rows=2409 loops=20)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=34254
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.724..0.724 rows=2409 loops=20)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.017..0.017 rows=0 loops=48182)
                                                                     Index Cond: (id = mk.movie_id)
                                                                     Filter: (production_year > 2000)
                                                                     Rows Removed by Filter: 1
                                                   ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.007..0.007 rows=0 loops=10064)
                                                         Index Cond: (movie_id = t.id)
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.034..1.667 rows=150 loops=1267)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.019..0.019 rows=1 loops=189844)
                                 Index Cond: (id = ci.person_id)
                                 Heap Fetches: 189844
                     ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=20) (actual time=0.008..0.008 rows=0 loops=189844)
                           Index Cond: (id = ci.person_role_id)
                           Filter: ((name IS NOT NULL) AND (((name)::text ~~ '%man%'::text) OR ((name)::text ~~ '%Man%'::text)))
                           Rows Removed by Filter: 0
               ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.48 rows=3 width=13) (actual time=0.008..0.009 rows=3 loops=5406)
                     Index Cond: (movie_id = ci.movie_id)
 Planning Time: 88.264 ms
 Execution Time: 9572.307 ms
(61 rows)

SET
                                                                                                  QUERY PLAN                                                                                                   
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3759.09..3759.10 rows=1 width=96) (actual time=228.141..228.141 rows=1 loops=1)
   ->  Nested Loop  (cost=9.18..3759.08 rows=1 width=118) (actual time=10.163..227.761 rows=477 loops=1)
         Join Filter: (ml.movie_id = mi.movie_id)
         ->  Nested Loop  (cost=8.74..3757.51 rows=1 width=138) (actual time=9.882..224.545 rows=172 loops=1)
               Join Filter: (cc.subject_id = cct1.id)
               Rows Removed by Join Filter: 57
               ->  Nested Loop  (cost=8.74..3756.43 rows=1 width=142) (actual time=9.870..223.147 rows=172 loops=1)
                     Join Filter: (cct2.id = cc.status_id)
                     Rows Removed by Join Filter: 57
                     ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.026..0.026 rows=1 loops=1)
                           Filter: ((kind)::text = 'complete'::text)
                           Rows Removed by Filter: 3
                     ->  Nested Loop  (cost=8.74..3755.36 rows=2 width=146) (actual time=9.842..223.067 rows=229 loops=1)
                           Join Filter: (ml.movie_id = cc.movie_id)
                           ->  Nested Loop  (cost=8.32..3754.88 rows=1 width=134) (actual time=6.542..222.106 rows=310 loops=1)
                                 Join Filter: (ml.movie_id = t.id)
                                 ->  Nested Loop  (cost=7.89..3754.38 rows=1 width=113) (actual time=6.475..220.616 rows=402 loops=1)
                                       ->  Nested Loop  (cost=7.47..3753.92 rows=1 width=98) (actual time=5.595..216.570 rows=962 loops=1)
                                             Join Filter: (ct.id = mc.company_type_id)
                                             Rows Removed by Join Filter: 59
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.026..0.028 rows=1 loops=1)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                             ->  Nested Loop  (cost=7.47..3752.83 rows=3 width=102) (actual time=5.567..216.340 rows=1021 loops=1)
                                                   Join Filter: (ml.movie_id = mc.movie_id)
                                                   ->  Nested Loop  (cost=7.04..3752.25 rows=1 width=90) (actual time=5.493..214.168 rows=199 loops=1)
                                                         Join Filter: (lt.id = ml.link_type_id)
                                                         Rows Removed by Join Filter: 303
                                                         ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.024..0.034 rows=2 loops=1)
                                                               Filter: ((link)::text ~~ '%follow%'::text)
                                                               Rows Removed by Filter: 16
                                                         ->  Nested Loop  (cost=7.04..3750.90 rows=10 width=12) (actual time=4.813..107.020 rows=251 loops=2)
                                                               ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=4.794..85.164 rows=10544 loops=2)
                                                                     ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.226..17.515 rows=1 loops=2)
                                                                           Filter: ((keyword)::text = 'sequel'::text)
                                                                           Rows Removed by Filter: 134169
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=3.523..65.067 rows=10544 loops=2)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=11140
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=2.694..2.694 rows=10544 loops=2)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.002..0.002 rows=0 loops=21088)
                                                                     Index Cond: (movie_id = mk.movie_id)
                                                   ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=12) (actual time=0.007..0.009 rows=5 loops=199)
                                                         Index Cond: (movie_id = mk.movie_id)
                                                         Filter: (note IS NULL)
                                                         Rows Removed by Filter: 2
                                       ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.004..0.004 rows=0 loops=962)
                                             Index Cond: (id = mc.company_id)
                                             Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.003..0.003 rows=1 loops=402)
                                       Index Cond: (id = mk.movie_id)
                                       Filter: ((production_year >= 1950) AND (production_year <= 2000))
                                       Rows Removed by Filter: 0
                           ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.002..0.002 rows=1 loops=310)
                                 Index Cond: (movie_id = mk.movie_id)
               ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=2 width=4) (actual time=0.002..0.002 rows=1 loops=172)
                     Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.56 rows=1 width=4) (actual time=0.014..0.017 rows=3 loops=172)
               Index Cond: (movie_id = mk.movie_id)
               Filter: ((info)::text = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
               Rows Removed by Filter: 17
 Planning Time: 87.253 ms
 Execution Time: 228.876 ms
(65 rows)

SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=2479.14..2479.15 rows=1 width=96) (actual time=68.644..68.645 rows=1 loops=1)
   ->  Nested Loop  (cost=4.75..2479.13 rows=1 width=118) (actual time=44.742..68.307 rows=247 loops=1)
         Join Filter: (mc.company_type_id = ct.id)
         ->  Nested Loop  (cost=4.75..2478.07 rows=1 width=122) (actual time=44.727..66.276 rows=247 loops=1)
               ->  Nested Loop  (cost=4.33..2457.31 rows=47 width=126) (actual time=44.597..60.787 rows=1919 loops=1)
                     Join Filter: (ml.movie_id = mk.movie_id)
                     ->  Nested Loop  (cost=3.90..2455.35 rows=1 width=142) (actual time=44.541..59.079 rows=247 loops=1)
                           Join Filter: (ml.movie_id = mi.movie_id)
                           ->  Nested Loop  (cost=3.47..2453.33 rows=1 width=138) (actual time=44.444..57.947 rows=95 loops=1)
                                 ->  Nested Loop  (cost=3.05..2451.96 rows=3 width=123) (actual time=44.409..57.303 rows=190 loops=1)
                                       Join Filter: (ml.movie_id = t.id)
                                       ->  Hash Join  (cost=2.62..2365.94 rows=144 width=102) (actual time=3.513..53.947 rows=794 loops=1)
                                             Hash Cond: (ml.link_type_id = lt.id)
                                             ->  Merge Join  (cost=1.38..2356.27 rows=2601 width=24) (actual time=0.811..52.807 rows=7314 loops=1)
                                                   Merge Cond: (mc.movie_id = ml.movie_id)
                                                   ->  Nested Loop  (cost=0.85..33295.88 rows=43182 width=16) (actual time=0.746..37.552 rows=4811 loops=1)
                                                         ->  Nested Loop  (cost=0.42..11074.61 rows=16886 width=4) (actual time=0.087..9.550 rows=5561 loops=1)
                                                               Join Filter: (cct2.id = cc.status_id)
                                                               Rows Removed by Join Filter: 432
                                                               ->  Nested Loop  (cost=0.42..10060.41 rows=67543 width=8) (actual time=0.061..7.538 rows=5993 loops=1)
                                                                     Join Filter: (cct1.id = cc.subject_id)
                                                                     Rows Removed by Join Filter: 2305
                                                                     ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..6344.49 rows=135086 width=12) (actual time=0.024..4.085 rows=5993 loops=1)
                                                                     ->  Materialize  (cost=0.00..1.06 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=5993)
                                                                           ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=2 width=4) (actual time=0.023..0.024 rows=2 loops=1)
                                                                                 Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
                                                               ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=5993)
                                                                     ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.015..0.017 rows=1 loops=1)
                                                                           Filter: ((kind)::text = 'complete'::text)
                                                                           Rows Removed by Filter: 3
                                                         ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..1.29 rows=3 width=12) (actual time=0.004..0.005 rows=1 loops=5561)
                                                               Index Cond: (movie_id = cc.movie_id)
                                                               Filter: (note IS NULL)
                                                               Rows Removed by Filter: 2
                                                   ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..959.51 rows=29997 width=8) (actual time=0.023..9.853 rows=35147 loops=1)
                                             ->  Hash  (cost=1.23..1.23 rows=1 width=86) (actual time=0.055..0.055 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.030..0.035 rows=2 loops=1)
                                                         Filter: ((link)::text ~~ '%follow%'::text)
                                                         Rows Removed by Filter: 16
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.58 rows=1 width=21) (actual time=0.004..0.004 rows=0 loops=794)
                                             Index Cond: (id = mc.movie_id)
                                             Filter: (production_year = 1998)
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=190)
                                       Index Cond: (id = mc.company_id)
                                       Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                                       Rows Removed by Filter: 0
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.02 rows=1 width=4) (actual time=0.008..0.011 rows=3 loops=95)
                                 Index Cond: (movie_id = mc.movie_id)
                                 Filter: ((info)::text = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
                                 Rows Removed by Filter: 10
                     ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.37 rows=47 width=8) (actual time=0.002..0.004 rows=8 loops=247)
                           Index Cond: (movie_id = mc.movie_id)
               ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=1919)
                     Index Cond: (id = mk.keyword_id)
                     Filter: ((keyword)::text = 'sequel'::text)
                     Rows Removed by Filter: 1
         ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=247)
               Filter: ((kind)::text = 'production companies'::text)
               Rows Removed by Filter: 1
 Planning Time: 85.208 ms
 Execution Time: 69.431 ms
(63 rows)

SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=2071.28..2071.29 rows=1 width=96) (actual time=119.704..119.705 rows=1 loops=1)
   ->  Nested Loop  (cost=3.52..2071.27 rows=1 width=118) (actual time=10.539..119.271 rows=743 loops=1)
         ->  Nested Loop  (cost=3.10..1948.16 rows=279 width=122) (actual time=5.651..90.276 rows=11620 loops=1)
               Join Filter: (ml.movie_id = mk.movie_id)
               ->  Nested Loop  (cost=2.66..1936.64 rows=6 width=138) (actual time=5.598..81.857 rows=1150 loops=1)
                     ->  Nested Loop  (cost=2.24..1920.67 rows=35 width=123) (actual time=2.708..72.542 rows=2871 loops=1)
                           Join Filter: (ml.movie_id = mi.movie_id)
                           ->  Nested Loop  (cost=1.81..1891.16 rows=14 width=119) (actual time=2.386..45.221 rows=763 loops=1)
                                 Join Filter: (mc.company_type_id = ct.id)
                                 Rows Removed by Join Filter: 101
                                 ->  Nested Loop  (cost=1.81..1889.30 rows=54 width=123) (actual time=2.365..44.781 rows=864 loops=1)
                                       Join Filter: (ml.movie_id = t.id)
                                       ->  Nested Loop  (cost=1.38..1846.11 rows=72 width=102) (actual time=2.336..41.150 rows=864 loops=1)
                                             Join Filter: (lt.id = ml.link_type_id)
                                             Rows Removed by Join Filter: 12659
                                             ->  Merge Join  (cost=1.38..1825.36 rows=1301 width=24) (actual time=0.567..37.015 rows=6843 loops=1)
                                                   Merge Cond: (mc.movie_id = ml.movie_id)
                                                   ->  Nested Loop  (cost=0.85..19990.11 rows=21591 width=16) (actual time=0.492..24.514 rows=3202 loops=1)
                                                         ->  Nested Loop  (cost=0.42..8879.47 rows=8443 width=4) (actual time=0.071..8.256 rows=3688 loops=1)
                                                               Join Filter: (cc.subject_id = cct1.id)
                                                               Rows Removed by Join Filter: 2305
                                                               ->  Nested Loop  (cost=0.42..8371.84 rows=33772 width=8) (actual time=0.053..6.112 rows=5993 loops=1)
                                                                     Join Filter: (cct2.id = cc.status_id)
                                                                     Rows Removed by Join Filter: 432
                                                                     ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..6344.49 rows=135086 width=12) (actual time=0.010..3.429 rows=5993 loops=1)
                                                                     ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=5993)
                                                                           ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.025..0.026 rows=2 loops=1)
                                                                                 Filter: ((kind)::text ~~ 'complete%'::text)
                                                                                 Rows Removed by Filter: 2
                                                               ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=5993)
                                                                     ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=1)
                                                                           Filter: ((kind)::text = 'cast'::text)
                                                                           Rows Removed by Filter: 3
                                                         ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..1.29 rows=3 width=12) (actual time=0.004..0.004 rows=1 loops=3688)
                                                               Index Cond: (movie_id = cc.movie_id)
                                                               Filter: (note IS NULL)
                                                               Rows Removed by Filter: 2
                                                   ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..959.51 rows=29997 width=8) (actual time=0.024..7.469 rows=33905 loops=1)
                                             ->  Materialize  (cost=0.00..1.23 rows=1 width=86) (actual time=0.000..0.000 rows=2 loops=6843)
                                                   ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.035..0.040 rows=2 loops=1)
                                                         Filter: ((link)::text ~~ '%follow%'::text)
                                                         Rows Removed by Filter: 16
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.59 rows=1 width=21) (actual time=0.004..0.004 rows=1 loops=864)
                                             Index Cond: (id = mc.movie_id)
                                             Filter: ((production_year >= 1950) AND (production_year <= 2010))
                                 ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=864)
                                       ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.009..0.011 rows=1 loops=1)
                                             Filter: ((kind)::text = 'production companies'::text)
                                             Rows Removed by Filter: 3
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.07 rows=3 width=4) (actual time=0.031..0.035 rows=4 loops=763)
                                 Index Cond: (movie_id = t.id)
                                 Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,English}'::text[]))
                                 Rows Removed by Filter: 31
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=2871)
                           Index Cond: (id = mc.company_id)
                           Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.33 rows=47 width=8) (actual time=0.003..0.004 rows=10 loops=1150)
                     Index Cond: (movie_id = t.id)
         ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=11620)
               Index Cond: (id = mk.keyword_id)
               Filter: ((keyword)::text = 'sequel'::text)
               Rows Removed by Filter: 1
 Planning Time: 85.484 ms
 Execution Time: 120.492 ms
(65 rows)

SET
                                                                                                        QUERY PLAN                                                                                                         
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7410.76..7410.77 rows=1 width=96) (actual time=1683.934..1683.935 rows=1 loops=1)
   ->  Nested Loop  (cost=9.32..7410.76 rows=1 width=41) (actual time=11.575..1678.165 rows=4803 loops=1)
         ->  Nested Loop  (cost=8.90..7410.21 rows=1 width=26) (actual time=11.544..1631.735 rows=4955 loops=1)
               Join Filter: (ct.id = mc.company_type_id)
               ->  Nested Loop  (cost=8.90..7409.12 rows=1 width=30) (actual time=11.517..1593.766 rows=4955 loops=1)
                     Join Filter: (t.id = mc.movie_id)
                     ->  Nested Loop  (cost=8.47..7408.54 rows=1 width=42) (actual time=11.469..1567.885 rows=432 loops=1)
                           Join Filter: (it1.id = mi.info_type_id)
                           Rows Removed by Join Filter: 49
                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.014..0.026 rows=1 loops=1)
                                 Filter: ((info)::text = 'countries'::text)
                                 Rows Removed by Filter: 112
                           ->  Nested Loop  (cost=8.47..7406.11 rows=1 width=46) (actual time=11.453..1567.691 rows=481 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=8.04..7404.21 rows=1 width=38) (actual time=11.311..1425.500 rows=473 loops=1)
                                       Join Filter: (cc.subject_id = cct1.id)
                                       Rows Removed by Join Filter: 1570
                                       ->  Nested Loop  (cost=8.04..7403.15 rows=1 width=42) (actual time=11.264..1408.653 rows=2043 loops=1)
                                             Join Filter: (cct2.id = cc.status_id)
                                             Rows Removed by Join Filter: 6987
                                             ->  Nested Loop  (cost=8.04..7402.06 rows=1 width=46) (actual time=11.252..1381.732 rows=3010 loops=1)
                                                   ->  Nested Loop  (cost=7.62..7401.59 rows=1 width=34) (actual time=7.497..1318.577 rows=9301 loops=1)
                                                         Join Filter: (it2.id = mi_idx.info_type_id)
                                                         Rows Removed by Join Filter: 18529
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.019..0.022 rows=1 loops=1)
                                                               Filter: ((info)::text = 'rating'::text)
                                                               Rows Removed by Filter: 112
                                                         ->  Nested Loop  (cost=7.62..7399.04 rows=11 width=38) (actual time=7.474..1313.707 rows=27830 loops=1)
                                                               Join Filter: (t.id = mi_idx.movie_id)
                                                               ->  Nested Loop  (cost=7.19..7387.79 rows=21 width=25) (actual time=7.420..1104.258 rows=11686 loops=1)
                                                                     Join Filter: (kt.id = t.kind_id)
                                                                     Rows Removed by Join Filter: 7484
                                                                     ->  Nested Loop  (cost=7.19..7384.59 rows=74 width=29) (actual time=7.266..1088.639 rows=14771 loops=1)
                                                                           ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=7.219..523.876 rows=37091 loops=1)
                                                                                 ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.437..38.061 rows=3 loops=1)
                                                                                       Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                       Rows Removed by Filter: 134167
                                                                                 ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=5.024..156.260 rows=12364 loops=3)
                                                                                       Recheck Cond: (keyword_id = k.id)
                                                                                       Heap Blocks: exact=26312
                                                                                       ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.731..3.731 rows=12364 loops=3)
                                                                                             Index Cond: (keyword_id = k.id)
                                                                           ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.014..0.014 rows=0 loops=37091)
                                                                                 Index Cond: (id = mk.movie_id)
                                                                                 Filter: (production_year > 2000)
                                                                                 Rows Removed by Filter: 1
                                                                     ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=14771)
                                                                           ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.023..0.025 rows=2 loops=1)
                                                                                 Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                                                 Rows Removed by Filter: 5
                                                               ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=13) (actual time=0.015..0.016 rows=2 loops=11686)
                                                                     Index Cond: (movie_id = mk.movie_id)
                                                                     Filter: ((info)::text < '8.5'::text)
                                                                     Rows Removed by Filter: 0
                                                   ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.005..0.006 rows=0 loops=9301)
                                                         Index Cond: (movie_id = t.id)
                                             ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=3 width=4) (actual time=0.002..0.003 rows=3 loops=3010)
                                                   Filter: ((kind)::text <> 'complete+verified'::text)
                                                   Rows Removed by Filter: 0
                                       ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=2043)
                                             Filter: ((kind)::text = 'crew'::text)
                                             Rows Removed by Filter: 3
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.258..0.299 rows=1 loops=473)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                                       Rows Removed by Filter: 139
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.027..0.054 rows=11 loops=432)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                           Rows Removed by Filter: 10
               ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.002..0.002 rows=1 loops=4955)
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.008..0.008 rows=1 loops=4955)
               Index Cond: (id = mc.company_id)
               Filter: ((country_code)::text <> '[us]'::text)
               Rows Removed by Filter: 0
 Planning Time: 109.017 ms
 Execution Time: 1684.774 ms
(77 rows)

SET
                                                                                                            QUERY PLAN                                                                                                            
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7401.26..7401.27 rows=1 width=96) (actual time=1300.942..1300.942 rows=1 loops=1)
   ->  Nested Loop  (cost=9.32..7401.25 rows=1 width=41) (actual time=17.425..1300.681 rows=148 loops=1)
         ->  Nested Loop  (cost=8.90..7400.70 rows=1 width=26) (actual time=17.374..1298.015 rows=150 loops=1)
               Join Filter: (ct.id = mc.company_type_id)
               ->  Nested Loop  (cost=8.90..7399.61 rows=1 width=30) (actual time=17.353..1296.818 rows=150 loops=1)
                     Join Filter: (t.id = mc.movie_id)
                     ->  Nested Loop  (cost=8.47..7399.03 rows=1 width=42) (actual time=17.287..1295.574 rows=13 loops=1)
                           Join Filter: (it1.id = mi.info_type_id)
                           Rows Removed by Join Filter: 7
                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.014..0.028 rows=1 loops=1)
                                 Filter: ((info)::text = 'countries'::text)
                                 Rows Removed by Filter: 112
                           ->  Nested Loop  (cost=8.47..7396.60 rows=1 width=46) (actual time=17.271..1295.531 rows=20 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=8.04..7395.03 rows=1 width=38) (actual time=12.559..1253.347 rows=179 loops=1)
                                       Join Filter: (cct2.id = cc.status_id)
                                       Rows Removed by Join Filter: 394
                                       ->  Nested Loop  (cost=8.04..7393.94 rows=1 width=42) (actual time=12.548..1251.600 rows=191 loops=1)
                                             Join Filter: (cct1.id = cc.subject_id)
                                             Rows Removed by Join Filter: 689
                                             ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.021..0.023 rows=1 loops=1)
                                                   Filter: ((kind)::text = 'crew'::text)
                                                   Rows Removed by Filter: 3
                                             ->  Nested Loop  (cost=8.04..7392.88 rows=1 width=46) (actual time=12.506..1251.301 rows=880 loops=1)
                                                   ->  Nested Loop  (cost=7.62..7392.40 rows=1 width=34) (actual time=8.186..1229.084 rows=2312 loops=1)
                                                         Join Filter: (kt.id = t.kind_id)
                                                         Rows Removed by Join Filter: 1695
                                                         ->  Nested Loop  (cost=7.62..7391.29 rows=1 width=38) (actual time=7.938..1202.882 rows=2835 loops=1)
                                                               ->  Nested Loop  (cost=7.19..7390.80 rows=1 width=13) (actual time=7.897..987.811 rows=11708 loops=1)
                                                                     Join Filter: (it2.id = mi_idx.info_type_id)
                                                                     Rows Removed by Join Filter: 5912
                                                                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.020..0.023 rows=1 loops=1)
                                                                           Filter: ((info)::text = 'rating'::text)
                                                                           Rows Removed by Filter: 112
                                                                     ->  Nested Loop  (cost=7.19..7387.28 rows=89 width=17) (actual time=7.876..982.519 rows=17620 loops=1)
                                                                           ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=7.829..539.646 rows=37091 loops=1)
                                                                                 ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.963..38.697 rows=3 loops=1)
                                                                                       Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                       Rows Removed by Filter: 134167
                                                                                 ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=5.051..161.631 rows=12364 loops=3)
                                                                                       Recheck Cond: (keyword_id = k.id)
                                                                                       Heap Blocks: exact=26312
                                                                                       ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.760..3.760 rows=12364 loops=3)
                                                                                             Index Cond: (keyword_id = k.id)
                                                                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=13) (actual time=0.011..0.011 rows=0 loops=37091)
                                                                                 Index Cond: (movie_id = mk.movie_id)
                                                                                 Filter: ((info)::text > '6.5'::text)
                                                                                 Rows Removed by Filter: 2
                                                               ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.018..0.018 rows=0 loops=11708)
                                                                     Index Cond: (id = mk.movie_id)
                                                                     Filter: (production_year > 2005)
                                                                     Rows Removed by Filter: 1
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.003..0.003 rows=1 loops=2835)
                                                               Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                               Rows Removed by Filter: 2
                                                   ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.008..0.008 rows=0 loops=2312)
                                                         Index Cond: (movie_id = t.id)
                                       ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=3 width=4) (actual time=0.002..0.003 rows=3 loops=191)
                                             Filter: ((kind)::text <> 'complete+verified'::text)
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.56 rows=1 width=8) (actual time=0.226..0.234 rows=0 loops=179)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
                                       Rows Removed by Filter: 130
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.050..0.089 rows=12 loops=13)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                           Rows Removed by Filter: 17
               ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.002..0.002 rows=1 loops=150)
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.016..0.016 rows=1 loops=150)
               Index Cond: (id = mc.company_id)
               Filter: ((country_code)::text <> '[us]'::text)
               Rows Removed by Filter: 0
 Planning Time: 112.012 ms
 Execution Time: 1301.801 ms
(75 rows)

SET
                                                                                                        QUERY PLAN                                                                                                         
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7408.04..7408.05 rows=1 width=96) (actual time=4443.304..4443.304 rows=1 loops=1)
   ->  Nested Loop  (cost=9.32..7408.03 rows=1 width=41) (actual time=12.437..4432.203 rows=8373 loops=1)
         Join Filter: (mc.company_type_id = ct.id)
         ->  Nested Loop  (cost=9.32..7406.94 rows=1 width=45) (actual time=12.417..4367.820 rows=8373 loops=1)
               Join Filter: (it1.id = mi.info_type_id)
               Rows Removed by Join Filter: 1116
               ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.014..0.025 rows=1 loops=1)
                     Filter: ((info)::text = 'countries'::text)
                     Rows Removed by Filter: 112
               ->  Nested Loop  (cost=9.32..7404.51 rows=1 width=49) (actual time=12.401..4365.405 rows=9489 loops=1)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=8.88..7402.62 rows=1 width=65) (actual time=12.255..3432.719 rows=8156 loops=1)
                           Join Filter: (cc.subject_id = cct1.id)
                           Rows Removed by Join Filter: 1453
                           ->  Nested Loop  (cost=8.88..7401.55 rows=1 width=69) (actual time=12.245..3356.230 rows=9609 loops=1)
                                 Join Filter: (cct2.id = cc.status_id)
                                 Rows Removed by Join Filter: 5617
                                 ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.022..0.023 rows=1 loops=1)
                                       Filter: ((kind)::text = 'complete'::text)
                                       Rows Removed by Filter: 3
                                 ->  Nested Loop  (cost=8.88..7400.49 rows=1 width=73) (actual time=12.221..3352.321 rows=15226 loops=1)
                                       ->  Nested Loop  (cost=8.46..7400.01 rows=1 width=61) (actual time=12.178..3215.985 rows=23425 loops=1)
                                             Join Filter: (mi_idx.info_type_id = it2.id)
                                             Rows Removed by Join Filter: 46773
                                             ->  Nested Loop  (cost=8.46..7397.59 rows=1 width=65) (actual time=10.959..1809.585 rows=70198 loops=1)
                                                   Join Filter: (t.id = mi_idx.movie_id)
                                                   ->  Nested Loop  (cost=8.04..7397.05 rows=1 width=52) (actual time=10.915..1594.321 rows=23902 loops=1)
                                                         ->  Nested Loop  (cost=7.62..7396.50 rows=1 width=37) (actual time=10.874..1426.801 rows=25853 loops=1)
                                                               Join Filter: (t.id = mc.movie_id)
                                                               ->  Nested Loop  (cost=7.19..7387.25 rows=16 width=25) (actual time=7.841..1131.338 rows=8073 loops=1)
                                                                     Join Filter: (t.kind_id = kt.id)
                                                                     Rows Removed by Join Filter: 4332
                                                                     ->  Nested Loop  (cost=7.19..7384.59 rows=55 width=29) (actual time=7.664..1120.526 rows=9739 loops=1)
                                                                           ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=7.618..538.681 rows=37091 loops=1)
                                                                                 ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.914..38.355 rows=3 loops=1)
                                                                                       Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                       Rows Removed by Filter: 134167
                                                                                 ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=4.988..160.970 rows=12364 loops=3)
                                                                                       Recheck Cond: (keyword_id = k.id)
                                                                                       Heap Blocks: exact=26312
                                                                                       ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.699..3.699 rows=12364 loops=3)
                                                                                             Index Cond: (keyword_id = k.id)
                                                                           ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.015..0.015 rows=0 loops=37091)
                                                                                 Index Cond: (id = mk.movie_id)
                                                                                 Filter: (production_year > 2005)
                                                                                 Rows Removed by Filter: 1
                                                                     ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=9739)
                                                                           ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.021..0.023 rows=2 loops=1)
                                                                                 Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                                                 Rows Removed by Filter: 5
                                                               ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.025..0.035 rows=3 loops=8073)
                                                                     Index Cond: (movie_id = mk.movie_id)
                                                                     Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                                                                     Rows Removed by Filter: 7
                                                         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.006..0.006 rows=1 loops=25853)
                                                               Index Cond: (id = mc.company_id)
                                                               Filter: ((country_code)::text <> '[us]'::text)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=13) (actual time=0.005..0.008 rows=3 loops=23902)
                                                         Index Cond: (movie_id = mk.movie_id)
                                                         Filter: ((info)::text < '8.5'::text)
                                                         Rows Removed by Filter: 0
                                             ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.013..0.015 rows=1 loops=70198)
                                                   Filter: ((info)::text = 'rating'::text)
                                                   Rows Removed by Filter: 108
                                       ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.004..0.005 rows=1 loops=23425)
                                             Index Cond: (movie_id = t.id)
                           ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=9609)
                                 Filter: ((kind)::text = 'cast'::text)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.094..0.113 rows=1 loops=8156)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                           Rows Removed by Filter: 206
         ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.002..0.002 rows=1 loops=8373)
 Planning Time: 111.337 ms
 Execution Time: 4444.174 ms
(77 rows)

SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3946.87..3946.88 rows=1 width=96) (actual time=62.288..62.288 rows=1 loops=1)
   ->  Nested Loop  (cost=11.17..3946.87 rows=1 width=48) (actual time=19.147..61.753 rows=1620 loops=1)
         Join Filter: (it3.id = pi.info_type_id)
         Rows Removed by Join Filter: 3270
         ->  Seq Scan on info_type it3  (cost=0.00..2.41 rows=1 width=4) (actual time=0.019..0.028 rows=1 loops=1)
               Filter: ((info)::text = 'trivia'::text)
               Rows Removed by Filter: 112
         ->  Nested Loop  (cost=11.17..3944.44 rows=1 width=52) (actual time=19.088..61.212 rows=4890 loops=1)
               Join Filter: (n.id = pi.person_id)
               ->  Nested Loop  (cost=10.74..3924.23 rows=1 width=60) (actual time=19.012..58.819 rows=30 loops=1)
                     Join Filter: (it.id = mi.info_type_id)
                     ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.011..0.022 rows=1 loops=1)
                           Filter: ((info)::text = 'release dates'::text)
                           Rows Removed by Filter: 112
                     ->  Nested Loop  (cost=10.74..3921.81 rows=1 width=64) (actual time=19.000..58.788 rows=30 loops=1)
                           Join Filter: (t.id = mi.movie_id)
                           ->  Nested Loop  (cost=10.31..3878.76 rows=1 width=80) (actual time=18.829..55.897 rows=15 loops=1)
                                 Join Filter: (cct2.id = cc.status_id)
                                 ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.022..0.022 rows=1 loops=1)
                                       Filter: ((kind)::text = 'complete+verified'::text)
                                       Rows Removed by Filter: 3
                                 ->  Nested Loop  (cost=10.31..3877.70 rows=1 width=84) (actual time=18.806..55.868 rows=15 loops=1)
                                       Join Filter: (cct1.id = cc.subject_id)
                                       ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.007..0.009 rows=1 loops=1)
                                             Filter: ((kind)::text = 'cast'::text)
                                             Rows Removed by Filter: 3
                                       ->  Nested Loop  (cost=10.31..3876.64 rows=1 width=88) (actual time=18.796..55.852 rows=15 loops=1)
                                             Join Filter: (t.id = cc.movie_id)
                                             ->  Nested Loop  (cost=9.89..3873.84 rows=1 width=76) (actual time=18.743..55.751 rows=15 loops=1)
                                                   ->  Nested Loop  (cost=9.46..3871.53 rows=1 width=57) (actual time=18.664..55.607 rows=15 loops=1)
                                                         ->  Nested Loop  (cost=9.04..3869.51 rows=1 width=61) (actual time=18.616..54.913 rows=66 loops=1)
                                                               ->  Nested Loop  (cost=8.61..3865.49 rows=1 width=49) (actual time=18.534..53.629 rows=352 loops=1)
                                                                     Join Filter: (rt.id = ci.role_id)
                                                                     Rows Removed by Join Filter: 1100
                                                                     ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.025..0.027 rows=1 loops=1)
                                                                           Filter: ((role)::text = 'actress'::text)
                                                                           Rows Removed by Filter: 11
                                                                     ->  Nested Loop  (cost=8.61..3864.32 rows=2 width=53) (actual time=17.499..53.411 rows=1452 loops=1)
                                                                           ->  Nested Loop  (cost=8.18..3861.40 rows=1 width=49) (actual time=17.349..49.640 rows=836 loops=1)
                                                                                 Join Filter: (t.id = ci.movie_id)
                                                                                 ->  Nested Loop  (cost=7.62..3813.81 rows=1 width=33) (actual time=17.268..42.647 rows=22 loops=1)
                                                                                       Join Filter: (t.id = mc.movie_id)
                                                                                       ->  Nested Loop  (cost=7.19..3808.95 rows=1 width=25) (actual time=17.154..42.492 rows=1 loops=1)
                                                                                             ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=0.332..29.031 rows=414 loops=1)
                                                                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.107..20.953 rows=1 loops=1)
                                                                                                         Filter: ((keyword)::text = 'computer-animation'::text)
                                                                                                         Rows Removed by Filter: 134169
                                                                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=0.218..7.856 rows=414 loops=1)
                                                                                                         Recheck Cond: (keyword_id = k.id)
                                                                                                         Heap Blocks: exact=358
                                                                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.148..0.148 rows=414 loops=1)
                                                                                                               Index Cond: (keyword_id = k.id)
                                                                                             ->  Index Scan using title_pkey on title t  (cost=0.43..2.12 rows=1 width=21) (actual time=0.031..0.031 rows=0 loops=414)
                                                                                                   Index Cond: (id = mk.movie_id)
                                                                                                   Filter: ((production_year >= 2000) AND (production_year <= 2010) AND ((title)::text = 'Shrek 2'::text))
                                                                                                   Rows Removed by Filter: 1
                                                                                       ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..4.80 rows=5 width=8) (actual time=0.110..0.142 rows=22 loops=1)
                                                                                             Index Cond: (movie_id = mk.movie_id)
                                                                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..47.58 rows=1 width=16) (actual time=0.007..0.307 rows=38 loops=22)
                                                                                       Index Cond: (movie_id = mk.movie_id)
                                                                                       Filter: ((note)::text = ANY ('{(voice),"(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                                       Rows Removed by Filter: 191
                                                                           ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.90 rows=2 width=4) (actual time=0.003..0.004 rows=2 loops=836)
                                                                                 Index Cond: (person_id = ci.person_id)
                                                                                 Heap Fetches: 1452
                                                               ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..2.22 rows=1 width=20) (actual time=0.003..0.003 rows=0 loops=352)
                                                                     Index Cond: (id = ci.person_role_id)
                                                                     Filter: ((name)::text = 'Queen'::text)
                                                                     Rows Removed by Filter: 1
                                                         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..2.03 rows=1 width=4) (actual time=0.010..0.010 rows=0 loops=66)
                                                               Index Cond: (id = mc.company_id)
                                                               Filter: ((country_code)::text = '[us]'::text)
                                                               Rows Removed by Filter: 1
                                                   ->  Index Scan using name_pkey on name n  (cost=0.43..2.30 rows=1 width=19) (actual time=0.008..0.008 rows=1 loops=15)
                                                         Index Cond: (id = ci.person_id)
                                                         Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                             ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..2.78 rows=2 width=12) (actual time=0.005..0.006 rows=1 loops=15)
                                                   Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..43.02 rows=2 width=8) (actual time=0.026..0.192 rows=2 loops=15)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%200%'::text) OR ((info)::text ~~ 'USA:%200%'::text)))
                                 Rows Removed by Filter: 455
               ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..19.88 rows=26 width=8) (actual time=0.005..0.043 rows=163 loops=30)
                     Index Cond: (person_id = an.person_id)
 Planning Time: 146.900 ms
 Execution Time: 63.498 ms
(86 rows)

SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3950.13..3950.14 rows=1 width=96) (actual time=35.713..35.713 rows=1 loops=1)
   ->  Nested Loop  (cost=11.17..3950.12 rows=1 width=48) (actual time=8.684..35.691 rows=15 loops=1)
         Join Filter: (ci.person_id = n.id)
         ->  Nested Loop  (cost=10.74..3947.92 rows=1 width=45) (actual time=8.653..35.612 rows=15 loops=1)
               Join Filter: (it3.id = pi.info_type_id)
               Rows Removed by Join Filter: 2430
               ->  Seq Scan on info_type it3  (cost=0.00..2.41 rows=1 width=4) (actual time=0.018..0.029 rows=1 loops=1)
                     Filter: ((info)::text = 'height'::text)
                     Rows Removed by Filter: 112
               ->  Nested Loop  (cost=10.74..3945.19 rows=26 width=49) (actual time=8.539..35.369 rows=2445 loops=1)
                     ->  Nested Loop  (cost=10.31..3925.03 rows=1 width=41) (actual time=8.509..34.342 rows=15 loops=1)
                           ->  Nested Loop  (cost=9.89..3923.01 rows=1 width=45) (actual time=8.464..33.755 rows=66 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=9.46..3918.14 rows=1 width=61) (actual time=8.410..33.633 rows=3 loops=1)
                                       Join Filter: (mi.info_type_id = it.id)
                                       ->  Nested Loop  (cost=9.46..3915.72 rows=1 width=65) (actual time=8.397..33.597 rows=3 loops=1)
                                             Join Filter: (cc.status_id = cct2.id)
                                             ->  Nested Loop  (cost=9.46..3914.65 rows=1 width=69) (actual time=8.385..33.568 rows=3 loops=1)
                                                   Join Filter: (cct1.id = cc.subject_id)
                                                   ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.025..0.027 rows=1 loops=1)
                                                         Filter: ((kind)::text = 'cast'::text)
                                                         Rows Removed by Filter: 3
                                                   ->  Nested Loop  (cost=9.46..3913.59 rows=1 width=73) (actual time=8.359..33.526 rows=3 loops=1)
                                                         Join Filter: (t.id = cc.movie_id)
                                                         ->  Nested Loop  (cost=9.04..3907.99 rows=2 width=61) (actual time=8.309..33.466 rows=3 loops=1)
                                                               ->  Nested Loop  (cost=8.62..3905.08 rows=1 width=57) (actual time=8.259..33.400 rows=1 loops=1)
                                                                     Join Filter: (t.id = mi.movie_id)
                                                                     ->  Nested Loop  (cost=8.18..3862.13 rows=1 width=49) (actual time=8.177..33.111 rows=1 loops=1)
                                                                           ->  Nested Loop  (cost=7.75..3858.12 rows=1 width=37) (actual time=8.126..32.605 rows=11 loops=1)
                                                                                 Join Filter: (rt.id = ci.role_id)
                                                                                 Rows Removed by Join Filter: 27
                                                                                 ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.019..0.021 rows=1 loops=1)
                                                                                       Filter: ((role)::text = 'actress'::text)
                                                                                       Rows Removed by Filter: 11
                                                                                 ->  Nested Loop  (cost=7.75..3856.96 rows=1 width=41) (actual time=7.902..32.574 rows=38 loops=1)
                                                                                       Join Filter: (t.id = ci.movie_id)
                                                                                       ->  Nested Loop  (cost=7.19..3809.37 rows=1 width=25) (actual time=7.856..31.235 rows=1 loops=1)
                                                                                             ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=0.268..23.424 rows=414 loops=1)
                                                                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.069..20.703 rows=1 loops=1)
                                                                                                         Filter: ((keyword)::text = 'computer-animation'::text)
                                                                                                         Rows Removed by Filter: 134169
                                                                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=0.191..2.547 rows=414 loops=1)
                                                                                                         Recheck Cond: (keyword_id = k.id)
                                                                                                         Heap Blocks: exact=358
                                                                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.121..0.121 rows=414 loops=1)
                                                                                                               Index Cond: (keyword_id = k.id)
                                                                                             ->  Index Scan using title_pkey on title t  (cost=0.43..2.12 rows=1 width=21) (actual time=0.018..0.018 rows=0 loops=414)
                                                                                                   Index Cond: (id = mk.movie_id)
                                                                                                   Filter: ((production_year >= 2000) AND (production_year <= 2005) AND ((title)::text = 'Shrek 2'::text))
                                                                                                   Rows Removed by Filter: 1
                                                                                       ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..47.58 rows=1 width=16) (actual time=0.043..1.318 rows=38 loops=1)
                                                                                             Index Cond: (movie_id = mk.movie_id)
                                                                                             Filter: ((note)::text = ANY ('{(voice),"(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                                             Rows Removed by Filter: 191
                                                                           ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..2.22 rows=1 width=20) (actual time=0.045..0.045 rows=0 loops=11)
                                                                                 Index Cond: (id = ci.person_role_id)
                                                                                 Filter: ((name)::text = 'Queen'::text)
                                                                                 Rows Removed by Filter: 1
                                                                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..42.92 rows=2 width=8) (actual time=0.080..0.286 rows=1 loops=1)
                                                                           Index Cond: (movie_id = mk.movie_id)
                                                                           Filter: ((info)::text ~~ 'USA:%200%'::text)
                                                                           Rows Removed by Filter: 456
                                                               ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.90 rows=2 width=4) (actual time=0.047..0.062 rows=3 loops=1)
                                                                     Index Cond: (person_id = ci.person_id)
                                                                     Heap Fetches: 3
                                                         ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..2.78 rows=2 width=12) (actual time=0.018..0.018 rows=1 loops=3)
                                                               Index Cond: (movie_id = mk.movie_id)
                                             ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'complete+verified'::text)
                                                   Rows Removed by Filter: 3
                                       ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=3)
                                             Filter: ((info)::text = 'release dates'::text)
                                             Rows Removed by Filter: 15
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..4.80 rows=5 width=8) (actual time=0.021..0.031 rows=22 loops=3)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..2.03 rows=1 width=4) (actual time=0.008..0.008 rows=0 loops=66)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..19.89 rows=26 width=8) (actual time=0.004..0.042 rows=163 loops=15)
                           Index Cond: (person_id = ci.person_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..2.19 rows=1 width=19) (actual time=0.004..0.004 rows=1 loops=15)
               Index Cond: (id = pi.person_id)
               Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
 Planning Time: 144.314 ms
 Execution Time: 36.903 ms
(86 rows)

SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=5517.26..5517.27 rows=1 width=96) (actual time=5787.479..5787.479 rows=1 loops=1)
   ->  Nested Loop  (cost=11.17..5517.25 rows=1 width=48) (actual time=847.858..5769.680 rows=16308 loops=1)
         Join Filter: (pi.info_type_id = it3.id)
         Rows Removed by Join Filter: 51519
         ->  Nested Loop  (cost=11.17..5514.83 rows=1 width=52) (actual time=299.098..4520.768 rows=67827 loops=1)
               Join Filter: (cc.subject_id = cct1.id)
               ->  Nested Loop  (cost=11.17..5513.77 rows=1 width=56) (actual time=299.086..3992.744 rows=67827 loops=1)
                     Join Filter: (ci.role_id = rt.id)
                     ->  Nested Loop  (cost=11.17..5512.60 rows=1 width=60) (actual time=299.068..3429.417 rows=67827 loops=1)
                           Join Filter: (it.id = mi.info_type_id)
                           ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.015..0.027 rows=1 loops=1)
                                 Filter: ((info)::text = 'release dates'::text)
                                 Rows Removed by Filter: 112
                           ->  Nested Loop  (cost=11.17..5510.18 rows=1 width=64) (actual time=299.050..3413.474 rows=67827 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=10.74..5467.13 rows=1 width=80) (actual time=298.900..1090.820 rows=23424 loops=1)
                                       Join Filter: (mc.movie_id = t.id)
                                       ->  Nested Loop  (cost=10.31..5465.00 rows=1 width=59) (actual time=31.933..1006.615 rows=27549 loops=1)
                                             Join Filter: (cct2.id = cc.status_id)
                                             Rows Removed by Join Filter: 19742
                                             ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.023..0.023 rows=1 loops=1)
                                                   Filter: ((kind)::text = 'complete+verified'::text)
                                                   Rows Removed by Filter: 3
                                             ->  Nested Loop  (cost=10.31..5463.94 rows=1 width=63) (actual time=31.908..997.376 rows=47291 loops=1)
                                                   ->  Nested Loop  (cost=9.89..5461.14 rows=1 width=51) (actual time=31.845..848.457 rows=56941 loops=1)
                                                         ->  Nested Loop  (cost=9.46..5458.93 rows=1 width=39) (actual time=31.794..662.918 rows=58777 loops=1)
                                                               Join Filter: (n.id = an.person_id)
                                                               ->  Nested Loop  (cost=9.03..5456.03 rows=1 width=51) (actual time=31.695..576.941 rows=15702 loops=1)
                                                                     ->  Nested Loop  (cost=8.61..5449.96 rows=3 width=55) (actual time=31.542..368.433 rows=75939 loops=1)
                                                                           Join Filter: (ci.movie_id = mc.movie_id)
                                                                           ->  Nested Loop  (cost=8.18..5445.09 rows=1 width=47) (actual time=31.456..314.445 rows=2996 loops=1)
                                                                                 Join Filter: (n.id = pi.person_id)
                                                                                 ->  Nested Loop  (cost=7.75..5424.88 rows=1 width=39) (actual time=31.374..310.429 rows=45 loops=1)
                                                                                       ->  Nested Loop  (cost=7.32..5355.96 rows=30 width=20) (actual time=0.362..222.962 rows=4395 loops=1)
                                                                                             ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=0.272..27.554 rows=414 loops=1)
                                                                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.076..23.034 rows=1 loops=1)
                                                                                                         Filter: ((keyword)::text = 'computer-animation'::text)
                                                                                                         Rows Removed by Filter: 134169
                                                                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=0.188..4.304 rows=414 loops=1)
                                                                                                         Recheck Cond: (keyword_id = k.id)
                                                                                                         Heap Blocks: exact=358
                                                                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.119..0.119 rows=414 loops=1)
                                                                                                               Index Cond: (keyword_id = k.id)
                                                                                             ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..47.62 rows=1 width=16) (actual time=0.120..0.466 rows=11 loops=414)
                                                                                                   Index Cond: (movie_id = mk.movie_id)
                                                                                                   Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                                                   Rows Removed by Filter: 33
                                                                                       ->  Index Scan using name_pkey on name n  (cost=0.43..2.30 rows=1 width=19) (actual time=0.019..0.019 rows=0 loops=4395)
                                                                                             Index Cond: (id = ci.person_id)
                                                                                             Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                                                                             Rows Removed by Filter: 1
                                                                                 ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..19.89 rows=26 width=8) (actual time=0.026..0.062 rows=67 loops=45)
                                                                                       Index Cond: (person_id = ci.person_id)
                                                                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..4.80 rows=5 width=8) (actual time=0.004..0.009 rows=25 loops=2996)
                                                                                 Index Cond: (movie_id = mk.movie_id)
                                                                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..2.03 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=75939)
                                                                           Index Cond: (id = mc.company_id)
                                                                           Filter: ((country_code)::text = '[us]'::text)
                                                                           Rows Removed by Filter: 1
                                                               ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.87 rows=2 width=4) (actual time=0.002..0.004 rows=4 loops=15702)
                                                                     Index Cond: (person_id = pi.person_id)
                                                                     Heap Fetches: 58777
                                                         ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..2.21 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=58777)
                                                               Index Cond: (id = ci.person_role_id)
                                                   ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..2.78 rows=2 width=12) (actual time=0.002..0.002 rows=1 loops=56941)
                                                         Index Cond: (movie_id = mc.movie_id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..2.12 rows=1 width=21) (actual time=0.002..0.002 rows=1 loops=27549)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..43.02 rows=2 width=8) (actual time=0.015..0.098 rows=3 loops=23424)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%200%'::text) OR ((info)::text ~~ 'USA:%200%'::text)))
                                       Rows Removed by Filter: 298
                     ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=67827)
                           Filter: ((role)::text = 'actress'::text)
                           Rows Removed by Filter: 1
               ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=67827)
                     Filter: ((kind)::text = 'cast'::text)
         ->  Seq Scan on info_type it3  (cost=0.00..2.41 rows=1 width=4) (actual time=0.005..0.013 rows=1 loops=67827)
               Filter: ((info)::text = 'trivia'::text)
               Rows Removed by Filter: 89
 Planning Time: 146.552 ms
 Execution Time: 5788.563 ms
(84 rows)

SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3839.34..3839.35 rows=1 width=32) (actual time=1361.104..1361.105 rows=1 loops=1)
   ->  Nested Loop  (cost=8.04..3839.32 rows=7 width=17) (actual time=12.578..1355.505 rows=7834 loops=1)
         Join Filter: (mc.movie_id = t.id)
         ->  Nested Loop  (cost=7.61..3835.84 rows=7 width=8) (actual time=12.531..1266.053 rows=7834 loops=1)
               ->  Nested Loop  (cost=7.19..3756.52 rows=178 width=12) (actual time=10.747..707.160 rows=148552 loops=1)
                     ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.645..264.202 rows=41840 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.929..26.407 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'character-name-in-title'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.708..226.709 rows=41840 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=11541
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.997..7.997 rows=41840 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.007..0.009 rows=4 loops=41840)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=148552)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text = '[de]'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.010..0.010 rows=1 loops=7834)
               Index Cond: (id = mk.movie_id)
 Planning Time: 4.188 ms
 Execution Time: 1361.607 ms
(24 rows)

SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3836.84..3836.85 rows=1 width=32) (actual time=1287.146..1287.146 rows=1 loops=1)
   ->  Nested Loop  (cost=8.04..3836.83 rows=2 width=17) (actual time=16.832..1283.572 rows=5228 loops=1)
         Join Filter: (mc.movie_id = t.id)
         ->  Nested Loop  (cost=7.61..3835.84 rows=2 width=8) (actual time=16.792..1224.145 rows=5228 loops=1)
               ->  Nested Loop  (cost=7.19..3756.52 rows=178 width=12) (actual time=11.043..691.273 rows=148552 loops=1)
                     ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.960..259.971 rows=41840 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.321..26.564 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'character-name-in-title'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.631..222.420 rows=41840 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=11541
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.917..7.917 rows=41840 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.006..0.009 rows=4 loops=41840)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=148552)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text = '[nl]'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.010..0.010 rows=1 loops=5228)
               Index Cond: (id = mk.movie_id)
 Planning Time: 5.351 ms
 Execution Time: 1287.629 ms
(24 rows)

SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3836.34..3836.35 rows=1 width=32) (actual time=1209.318..1209.318 rows=1 loops=1)
   ->  Nested Loop  (cost=8.04..3836.34 rows=1 width=17) (actual time=1209.310..1209.310 rows=0 loops=1)
         Join Filter: (mc.movie_id = t.id)
         ->  Nested Loop  (cost=7.61..3835.84 rows=1 width=8) (actual time=1209.309..1209.309 rows=0 loops=1)
               ->  Nested Loop  (cost=7.19..3756.52 rows=178 width=12) (actual time=10.889..689.459 rows=148552 loops=1)
                     ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.806..259.552 rows=41840 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.339..26.571 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'character-name-in-title'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.459..222.018 rows=41840 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=11541
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.753..7.753 rows=41840 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.006..0.009 rows=4 loops=41840)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=148552)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text = '[sm]'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (never executed)
               Index Cond: (id = mk.movie_id)
 Planning Time: 5.242 ms
 Execution Time: 1209.785 ms
(24 rows)

SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3852.93..3852.94 rows=1 width=32) (actual time=1762.394..1762.394 rows=1 loops=1)
   ->  Nested Loop  (cost=8.04..3852.77 rows=64 width=17) (actual time=11.326..1731.580 rows=68316 loops=1)
         ->  Nested Loop  (cost=7.62..3773.45 rows=178 width=21) (actual time=11.172..1180.205 rows=148552 loops=1)
               Join Filter: (t.id = mc.movie_id)
               ->  Nested Loop  (cost=7.19..3752.95 rows=34 width=25) (actual time=11.040..709.854 rows=41840 loops=1)
                     ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=11.011..257.471 rows=41840 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.350..26.577 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'character-name-in-title'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.653..218.878 rows=41840 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=11541
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.949..7.949 rows=41840 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.010..0.010 rows=1 loops=41840)
                           Index Cond: (id = mk.movie_id)
               ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.007..0.009 rows=4 loops=41840)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=148552)
               Index Cond: (id = mc.company_id)
               Filter: ((country_code)::text = '[us]'::text)
               Rows Removed by Filter: 1
 Planning Time: 5.347 ms
 Execution Time: 1762.869 ms
(24 rows)

SET
                                                                                                         QUERY PLAN                                                                                                         
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8702.65..8702.66 rows=1 width=128) (actual time=12786.280..12786.280 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.71..8702.64 rows=1 width=80) (actual time=93.041..12783.266 rows=757 loops=1)
         ->  Nested Loop  (cost=1012.58..8702.48 rows=1 width=84) (actual time=93.014..12781.428 rows=757 loops=1)
               ->  Nested Loop  (cost=1012.45..8702.31 rows=1 width=88) (actual time=87.842..12774.748 rows=2492 loops=1)
                     ->  Nested Loop  (cost=1012.31..8702.12 rows=1 width=92) (actual time=87.806..12764.082 rows=2492 loops=1)
                           Join Filter: (mi.movie_id = t.id)
                           ->  Nested Loop  (cost=1011.88..8701.29 rows=1 width=95) (actual time=33.140..12621.031 rows=9940 loops=1)
                                 ->  Nested Loop  (cost=1011.45..8700.26 rows=1 width=84) (actual time=30.816..12331.180 rows=15093 loops=1)
                                       Join Filter: (mi.movie_id = ci.movie_id)
                                       ->  Gather  (cost=1010.88..8671.17 rows=1 width=76) (actual time=14.057..1700.952 rows=19944 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Nested Loop  (cost=10.88..7671.07 rows=1 width=76) (actual time=10.724..2791.333 rows=6648 loops=3)
                                                   Join Filter: (mi_idx.movie_id = mi.movie_id)
                                                   ->  Nested Loop  (cost=10.45..7653.03 rows=1 width=25) (actual time=8.309..920.274 rows=11782 loops=3)
                                                         ->  Hash Join  (cost=10.03..7651.37 rows=2 width=13) (actual time=7.537..799.805 rows=21234 loops=3)
                                                               Hash Cond: (mi_idx.info_type_id = it2.id)
                                                               ->  Nested Loop  (cost=7.61..7648.12 rows=298 width=17) (actual time=7.298..771.678 rows=63896 loops=3)
                                                                     ->  Nested Loop  (cost=7.18..7568.64 rows=98 width=4) (actual time=7.222..417.073 rows=25571 loops=3)
                                                                           ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4353.41 rows=3 width=4) (actual time=0.658..36.101 rows=2 loops=3)
                                                                                 Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                                 Rows Removed by Filter: 44721
                                                                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1068.74 rows=300 width=8) (actual time=4.953..158.811 rows=10959 loops=7)
                                                                                 Recheck Cond: (keyword_id = k.id)
                                                                                 Heap Blocks: exact=12389
                                                                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.832..3.832 rows=10959 loops=7)
                                                                                       Index Cond: (keyword_id = k.id)
                                                                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.78 rows=3 width=13) (actual time=0.011..0.012 rows=2 loops=76714)
                                                                           Index Cond: (movie_id = mk.movie_id)
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.080..0.080 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.051..0.054 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'votes'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.81 rows=2 width=12) (actual time=0.004..0.005 rows=1 loops=63701)
                                                               Index Cond: (movie_id = mi_idx.movie_id)
                                                   ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..18.03 rows=1 width=51) (actual time=0.155..0.158 rows=1 loops=35346)
                                                         Index Cond: (movie_id = mk.movie_id)
                                                         Filter: ((info)::text = ANY ('{Horror,Thriller}'::text[]))
                                                         Rows Removed by Filter: 101
                                       ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..29.07 rows=1 width=8) (actual time=0.397..0.532 rows=1 loops=19944)
                                             Index Cond: (movie_id = mk.movie_id)
                                             Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                             Rows Removed by Filter: 73
                                 ->  Index Scan using name_pkey on name n  (cost=0.43..1.04 rows=1 width=19) (actual time=0.018..0.018 rows=1 loops=15093)
                                       Index Cond: (id = ci.person_id)
                                       Filter: ((gender)::text = 'm'::text)
                                       Rows Removed by Filter: 0
                           ->  Index Scan using title_pkey on title t  (cost=0.43..0.82 rows=1 width=21) (actual time=0.013..0.013 rows=0 loops=9940)
                                 Index Cond: (id = mk.movie_id)
                                 Filter: (production_year > 2000)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=2492)
                           Index Cond: (id = mi.info_type_id)
                           Filter: ((info)::text = 'genres'::text)
               ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=2492)
                     Index Cond: (id = cc.status_id)
                     Filter: ((kind)::text = 'complete+verified'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=757)
               Index Cond: (id = cc.subject_id)
               Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
 Planning Time: 93.759 ms
 Execution Time: 12787.686 ms
(64 rows)

SET
                                                                                                           QUERY PLAN                                                                                                            
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8700.30..8700.31 rows=1 width=128) (actual time=1102.060..1102.061 rows=1 loops=1)
   ->  Nested Loop  (cost=1010.43..8700.29 rows=1 width=80) (actual time=197.426..1101.993 rows=28 loops=1)
         ->  Nested Loop  (cost=1010.30..8700.12 rows=1 width=84) (actual time=197.402..1101.916 rows=28 loops=1)
               ->  Nested Loop  (cost=1010.17..8699.95 rows=1 width=88) (actual time=197.361..1101.655 rows=108 loops=1)
                     Join Filter: (t.id = cc.movie_id)
                     ->  Nested Loop  (cost=1009.75..8699.12 rows=1 width=100) (actual time=197.289..1101.094 rows=108 loops=1)
                           ->  Nested Loop  (cost=1009.61..8698.94 rows=1 width=104) (actual time=197.265..1100.873 rows=108 loops=1)
                                 ->  Nested Loop  (cost=1009.46..8698.75 rows=1 width=108) (actual time=197.224..1100.192 rows=324 loops=1)
                                       Join Filter: (t.id = mi_idx.movie_id)
                                       ->  Nested Loop  (cost=1009.04..8697.94 rows=1 width=95) (actual time=197.150..1099.407 rows=108 loops=1)
                                             ->  Nested Loop  (cost=1008.61..8696.90 rows=1 width=84) (actual time=197.063..1098.247 rows=108 loops=1)
                                                   Join Filter: (t.id = ci.movie_id)
                                                   ->  Nested Loop  (cost=1008.04..8667.81 rows=1 width=76) (actual time=196.142..1077.185 rows=65 loops=1)
                                                         Join Filter: (t.id = mi.movie_id)
                                                         ->  Gather  (cost=1007.61..8649.77 rows=1 width=25) (actual time=150.461..1072.888 rows=49 loops=1)
                                                               Workers Planned: 2
                                                               Workers Launched: 2
                                                               ->  Nested Loop  (cost=7.61..7649.67 rows=1 width=25) (actual time=171.899..746.711 rows=16 loops=3)
                                                                     ->  Nested Loop  (cost=7.18..7568.64 rows=98 width=4) (actual time=6.998..354.189 rows=25571 loops=3)
                                                                           ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4353.41 rows=3 width=4) (actual time=0.457..35.448 rows=2 loops=3)
                                                                                 Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                                 Rows Removed by Filter: 44721
                                                                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1068.74 rows=300 width=8) (actual time=4.922..132.106 rows=10959 loops=7)
                                                                                 Recheck Cond: (keyword_id = k.id)
                                                                                 Heap Blocks: exact=12389
                                                                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.806..3.806 rows=10959 loops=7)
                                                                                       Index Cond: (keyword_id = k.id)
                                                                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.83 rows=1 width=21) (actual time=0.014..0.014 rows=0 loops=76714)
                                                                           Index Cond: (id = mk.movie_id)
                                                                           Filter: ((production_year > 2000) AND (((title)::text ~~ '%Freddy%'::text) OR ((title)::text ~~ '%Jason%'::text) OR ((title)::text ~~ 'Saw%'::text)))
                                                                           Rows Removed by Filter: 1
                                                         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..18.03 rows=1 width=51) (actual time=0.206..0.207 rows=1 loops=49)
                                                               Index Cond: (movie_id = mk.movie_id)
                                                               Filter: ((info)::text = ANY ('{Horror,Thriller}'::text[]))
                                                               Rows Removed by Filter: 230
                                                   ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..29.07 rows=1 width=8) (actual time=0.200..0.323 rows=2 loops=65)
                                                         Index Cond: (movie_id = mk.movie_id)
                                                         Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                                         Rows Removed by Filter: 85
                                             ->  Index Scan using name_pkey on name n  (cost=0.43..1.04 rows=1 width=19) (actual time=0.010..0.010 rows=1 loops=108)
                                                   Index Cond: (id = ci.person_id)
                                                   Filter: ((gender)::text = 'm'::text)
                                       ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.78 rows=3 width=13) (actual time=0.005..0.006 rows=3 loops=108)
                                             Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=324)
                                       Index Cond: (id = mi_idx.info_type_id)
                                       Filter: ((info)::text = 'votes'::text)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=108)
                                 Index Cond: (id = mi.info_type_id)
                                 Filter: ((info)::text = 'genres'::text)
                     ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.81 rows=2 width=12) (actual time=0.004..0.004 rows=1 loops=108)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=108)
                     Index Cond: (id = cc.status_id)
                     Filter: ((kind)::text = 'complete+verified'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=28)
               Index Cond: (id = cc.subject_id)
               Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
 Planning Time: 93.014 ms
 Execution Time: 1108.933 ms
(62 rows)

SET
                                                                                                         QUERY PLAN                                                                                                         
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8720.29..8720.30 rows=1 width=128) (actual time=11685.556..11685.556 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.71..8720.28 rows=1 width=80) (actual time=37.994..11673.411 rows=8024 loops=1)
         Join Filter: (mi.movie_id = t.id)
         ->  Nested Loop  (cost=1012.28..8719.45 rows=1 width=83) (actual time=37.907..11558.819 rows=8024 loops=1)
               ->  Nested Loop  (cost=1011.85..8718.42 rows=1 width=72) (actual time=37.812..11333.405 rows=11863 loops=1)
                     Join Filter: (mi.movie_id = ci.movie_id)
                     ->  Nested Loop  (cost=1011.29..8689.33 rows=1 width=64) (actual time=17.656..2419.642 rows=14655 loops=1)
                           ->  Nested Loop  (cost=1011.14..8689.15 rows=1 width=68) (actual time=17.632..2381.506 rows=18333 loops=1)
                                 ->  Nested Loop  (cost=1011.01..8688.98 rows=1 width=72) (actual time=17.600..2341.288 rows=23704 loops=1)
                                       ->  Gather  (cost=1010.88..8688.81 rows=1 width=76) (actual time=13.019..2237.860 rows=43984 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Nested Loop  (cost=10.88..7688.71 rows=1 width=76) (actual time=12.583..3926.036 rows=14661 loops=3)
                                                   Join Filter: (mi.movie_id = cc.movie_id)
                                                   ->  Nested Loop  (cost=10.46..7687.87 rows=1 width=64) (actual time=7.581..3792.131 rows=22577 loops=3)
                                                         Join Filter: (mi_idx.movie_id = mi.movie_id)
                                                         ->  Hash Join  (cost=10.03..7651.37 rows=2 width=13) (actual time=7.337..820.484 rows=21234 loops=3)
                                                               Hash Cond: (mi_idx.info_type_id = it2.id)
                                                               ->  Nested Loop  (cost=7.61..7648.12 rows=298 width=17) (actual time=7.110..787.945 rows=63896 loops=3)
                                                                     ->  Nested Loop  (cost=7.18..7568.64 rows=98 width=4) (actual time=7.016..423.600 rows=25571 loops=3)
                                                                           ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4353.41 rows=3 width=4) (actual time=0.496..34.552 rows=2 loops=3)
                                                                                 Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                                 Rows Removed by Filter: 44721
                                                                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1068.74 rows=300 width=8) (actual time=4.956..162.100 rows=10959 loops=7)
                                                                                 Recheck Cond: (keyword_id = k.id)
                                                                                 Heap Blocks: exact=12389
                                                                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.829..3.829 rows=10959 loops=7)
                                                                                       Index Cond: (keyword_id = k.id)
                                                                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.78 rows=3 width=13) (actual time=0.012..0.012 rows=2 loops=76714)
                                                                           Index Cond: (movie_id = mk.movie_id)
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.085..0.085 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.057..0.060 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'votes'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..18.24 rows=1 width=51) (actual time=0.135..0.139 rows=1 loops=63701)
                                                               Index Cond: (movie_id = mk.movie_id)
                                                               Filter: ((info)::text = ANY ('{Horror,Action,Sci-Fi,Thriller,Crime,War}'::text[]))
                                                               Rows Removed by Filter: 58
                                                   ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.81 rows=2 width=12) (actual time=0.004..0.005 rows=1 loops=67732)
                                                         Index Cond: (movie_id = mk.movie_id)
                                       ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=43984)
                                             Index Cond: (id = cc.status_id)
                                             Filter: ((kind)::text = 'complete+verified'::text)
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=23704)
                                       Index Cond: (id = cc.subject_id)
                                       Filter: ((kind)::text = 'cast'::text)
                                       Rows Removed by Filter: 0
                           ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=18333)
                                 Index Cond: (id = mi.info_type_id)
                                 Filter: ((info)::text = 'genres'::text)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..29.07 rows=1 width=8) (actual time=0.459..0.607 rows=1 loops=14655)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                           Rows Removed by Filter: 83
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.04 rows=1 width=19) (actual time=0.018..0.018 rows=1 loops=11863)
                     Index Cond: (id = ci.person_id)
                     Filter: ((gender)::text = 'm'::text)
                     Rows Removed by Filter: 0
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.82 rows=1 width=21) (actual time=0.013..0.013 rows=1 loops=8024)
               Index Cond: (id = mk.movie_id)
 Planning Time: 94.166 ms
 Execution Time: 11686.842 ms
(65 rows)

SET
                                                                                                      QUERY PLAN                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8966.22..8966.23 rows=1 width=128) (actual time=3464.156..3464.156 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.88..8966.21 rows=1 width=80) (actual time=138.573..3462.414 rows=1273 loops=1)
         Join Filter: (mi.movie_id = t.id)
         ->  Nested Loop  (cost=1012.45..8965.10 rows=1 width=83) (actual time=138.507..3448.895 rows=1273 loops=1)
               ->  Nested Loop  (cost=1012.02..8963.80 rows=1 width=72) (actual time=138.413..3426.868 rows=1556 loops=1)
                     ->  Nested Loop  (cost=1011.88..8963.62 rows=1 width=76) (actual time=138.374..3421.754 rows=1616 loops=1)
                           Join Filter: (mi_idx.movie_id = mi.movie_id)
                           ->  Nested Loop  (cost=1011.45..8940.22 rows=1 width=25) (actual time=64.278..3206.640 rows=1471 loops=1)
                                 Join Filter: (mi_idx.movie_id = ci.movie_id)
                                 ->  Gather  (cost=1010.88..8907.19 rows=1 width=17) (actual time=63.582..2105.956 rows=1547 loops=1)
                                       Workers Planned: 2
                                       Workers Launched: 2
                                       ->  Nested Loop  (cost=10.88..7907.09 rows=1 width=17) (actual time=37.947..2292.300 rows=516 loops=3)
                                             ->  Nested Loop  (cost=10.46..7893.34 rows=14 width=21) (actual time=7.415..1291.116 rows=199419 loops=3)
                                                   Join Filter: (mi_idx.movie_id = mc.movie_id)
                                                   ->  Hash Join  (cost=10.03..7888.91 rows=2 width=13) (actual time=7.340..761.876 rows=21234 loops=3)
                                                         Hash Cond: (mi_idx.info_type_id = it2.id)
                                                         ->  Nested Loop  (cost=7.61..7885.67 rows=298 width=17) (actual time=7.102..733.008 rows=63896 loops=3)
                                                               ->  Nested Loop  (cost=7.18..7778.10 rows=98 width=4) (actual time=7.014..402.804 rows=25571 loops=3)
                                                                     ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4562.87 rows=3 width=4) (actual time=0.484..36.713 rows=2 loops=3)
                                                                           Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                           Rows Removed by Filter: 44721
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1068.74 rows=300 width=8) (actual time=4.935..152.620 rows=10959 loops=7)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=12389
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.811..3.811 rows=10959 loops=7)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..1.07 rows=3 width=13) (actual time=0.010..0.011 rows=2 loops=76714)
                                                                     Index Cond: (movie_id = mk.movie_id)
                                                         ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.082..0.083 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.059..0.062 rows=1 loops=3)
                                                                     Filter: ((info)::text = 'votes'::text)
                                                                     Rows Removed by Filter: 112
                                                   ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.15 rows=5 width=8) (actual time=0.014..0.021 rows=9 loops=63701)
                                                         Index Cond: (movie_id = mk.movie_id)
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.98 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=598256)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((name)::text ~~ 'Lionsgate%'::text)
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..33.03 rows=1 width=8) (actual time=0.517..0.714 rows=1 loops=1547)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                       Rows Removed by Filter: 119
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..23.38 rows=1 width=51) (actual time=0.143..0.145 rows=1 loops=1471)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((info)::text = ANY ('{Horror,Thriller}'::text[]))
                                 Rows Removed by Filter: 173
                     ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1616)
                           Index Cond: (id = mi.info_type_id)
                           Filter: ((info)::text = 'genres'::text)
                           Rows Removed by Filter: 0
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.30 rows=1 width=19) (actual time=0.013..0.013 rows=1 loops=1556)
                     Index Cond: (id = ci.person_id)
                     Filter: ((gender)::text = 'm'::text)
                     Rows Removed by Filter: 0
         ->  Index Scan using title_pkey on title t  (cost=0.43..1.10 rows=1 width=21) (actual time=0.009..0.009 rows=1 loops=1273)
               Index Cond: (id = mk.movie_id)
 Planning Time: 107.570 ms
 Execution Time: 3471.181 ms
(60 rows)

SET
                                                                                                        QUERY PLAN                                                                                                         
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8956.88..8956.89 rows=1 width=128) (actual time=1090.602..1090.602 rows=1 loops=1)
   ->  Nested Loop  (cost=1010.60..8956.87 rows=1 width=80) (actual time=325.419..1090.475 rows=84 loops=1)
         ->  Nested Loop  (cost=1010.17..8955.57 rows=1 width=69) (actual time=325.332..1089.610 rows=84 loops=1)
               ->  Nested Loop  (cost=1010.03..8955.39 rows=1 width=73) (actual time=325.303..1089.100 rows=252 loops=1)
                     Join Filter: (t.id = mi_idx.movie_id)
                     ->  Nested Loop  (cost=1009.60..8954.29 rows=1 width=84) (actual time=325.218..1088.628 rows=84 loops=1)
                           ->  Nested Loop  (cost=1009.46..8954.10 rows=1 width=88) (actual time=325.165..1088.384 rows=84 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=1009.02..8930.71 rows=1 width=37) (actual time=324.458..1081.829 rows=53 loops=1)
                                       ->  Nested Loop  (cost=1008.60..8921.93 rows=1 width=41) (actual time=324.296..1081.118 rows=119 loops=1)
                                             Join Filter: (t.id = mc.movie_id)
                                             ->  Nested Loop  (cost=1008.17..8919.75 rows=1 width=33) (actual time=193.277..1079.286 rows=77 loops=1)
                                                   Join Filter: (t.id = ci.movie_id)
                                                   ->  Gather  (cost=1007.61..8886.71 rows=1 width=25) (actual time=150.620..1054.417 rows=49 loops=1)
                                                         Workers Planned: 2
                                                         Workers Launched: 2
                                                         ->  Nested Loop  (cost=7.61..7886.61 rows=1 width=25) (actual time=169.918..739.750 rows=16 loops=3)
                                                               ->  Nested Loop  (cost=7.18..7778.10 rows=98 width=4) (actual time=7.022..353.072 rows=25571 loops=3)
                                                                     ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4562.87 rows=3 width=4) (actual time=0.421..35.745 rows=2 loops=3)
                                                                           Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                           Rows Removed by Filter: 44721
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1068.74 rows=300 width=8) (actual time=4.947..131.486 rows=10959 loops=7)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=12389
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.825..3.825 rows=10959 loops=7)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using title_pkey on title t  (cost=0.43..1.11 rows=1 width=21) (actual time=0.014..0.014 rows=0 loops=76714)
                                                                     Index Cond: (id = mk.movie_id)
                                                                     Filter: ((production_year > 2000) AND (((title)::text ~~ '%Freddy%'::text) OR ((title)::text ~~ '%Jason%'::text) OR ((title)::text ~~ 'Saw%'::text)))
                                                                     Rows Removed by Filter: 1
                                                   ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..33.03 rows=1 width=8) (actual time=0.421..0.626 rows=2 loops=49)
                                                         Index Cond: (movie_id = mk.movie_id)
                                                         Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                                         Rows Removed by Filter: 82
                                             ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.16 rows=1 width=8) (actual time=0.016..0.023 rows=2 loops=77)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((note)::text ~~ '%(Blu-ray)%'::text)
                                                   Rows Removed by Filter: 24
                                       ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..8.14 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=119)
                                             Index Cond: (id = mc.company_id)
                                             Filter: ((name)::text ~~ 'Lionsgate%'::text)
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..23.38 rows=1 width=51) (actual time=0.122..0.123 rows=2 loops=53)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Horror,Thriller}'::text[]))
                                       Rows Removed by Filter: 292
                           ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=84)
                                 Index Cond: (id = mi.info_type_id)
                                 Filter: ((info)::text = 'genres'::text)
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..1.07 rows=3 width=13) (actual time=0.004..0.004 rows=3 loops=84)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=252)
                     Index Cond: (id = mi_idx.info_type_id)
                     Filter: ((info)::text = 'votes'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using name_pkey on name n  (cost=0.43..1.30 rows=1 width=19) (actual time=0.010..0.010 rows=1 loops=84)
               Index Cond: (id = ci.person_id)
               Filter: ((gender)::text = 'm'::text)
 Planning Time: 106.867 ms
 Execution Time: 1097.561 ms
(60 rows)

SET
                                                                                                      QUERY PLAN                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8966.43..8966.44 rows=1 width=128) (actual time=3479.995..3479.996 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.88..8966.42 rows=1 width=80) (actual time=135.108..3477.135 rows=2825 loops=1)
         Join Filter: (mi.movie_id = t.id)
         ->  Nested Loop  (cost=1012.45..8965.31 rows=1 width=83) (actual time=135.039..3456.770 rows=2825 loops=1)
               ->  Nested Loop  (cost=1012.02..8964.01 rows=1 width=72) (actual time=134.966..3430.019 rows=2825 loops=1)
                     ->  Nested Loop  (cost=1011.88..8963.83 rows=1 width=76) (actual time=134.933..3421.608 rows=3007 loops=1)
                           Join Filter: (mi_idx.movie_id = mi.movie_id)
                           ->  Nested Loop  (cost=1011.45..8940.22 rows=1 width=25) (actual time=63.726..3180.680 rows=1471 loops=1)
                                 Join Filter: (mi_idx.movie_id = ci.movie_id)
                                 ->  Gather  (cost=1010.88..8907.19 rows=1 width=17) (actual time=63.046..2062.937 rows=1547 loops=1)
                                       Workers Planned: 2
                                       Workers Launched: 2
                                       ->  Nested Loop  (cost=10.88..7907.09 rows=1 width=17) (actual time=37.756..2288.587 rows=516 loops=3)
                                             ->  Nested Loop  (cost=10.46..7893.34 rows=14 width=21) (actual time=7.458..1292.968 rows=199419 loops=3)
                                                   Join Filter: (mi_idx.movie_id = mc.movie_id)
                                                   ->  Hash Join  (cost=10.03..7888.91 rows=2 width=13) (actual time=7.373..761.359 rows=21234 loops=3)
                                                         Hash Cond: (mi_idx.info_type_id = it2.id)
                                                         ->  Nested Loop  (cost=7.61..7885.67 rows=298 width=17) (actual time=7.136..732.372 rows=63896 loops=3)
                                                               ->  Nested Loop  (cost=7.18..7778.10 rows=98 width=4) (actual time=7.058..401.627 rows=25571 loops=3)
                                                                     ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4562.87 rows=3 width=4) (actual time=0.510..35.712 rows=2 loops=3)
                                                                           Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                           Rows Removed by Filter: 44721
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1068.74 rows=300 width=8) (actual time=4.938..152.524 rows=10959 loops=7)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=12389
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.812..3.812 rows=10959 loops=7)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..1.07 rows=3 width=13) (actual time=0.011..0.011 rows=2 loops=76714)
                                                                     Index Cond: (movie_id = mk.movie_id)
                                                         ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.091..0.091 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.068..0.071 rows=1 loops=3)
                                                                     Filter: ((info)::text = 'votes'::text)
                                                                     Rows Removed by Filter: 112
                                                   ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.15 rows=5 width=8) (actual time=0.014..0.021 rows=9 loops=63701)
                                                         Index Cond: (movie_id = mk.movie_id)
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.98 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=598256)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((name)::text ~~ 'Lionsgate%'::text)
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..33.03 rows=1 width=8) (actual time=0.524..0.725 rows=1 loops=1547)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                       Rows Removed by Filter: 119
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..23.59 rows=1 width=51) (actual time=0.157..0.162 rows=2 loops=1471)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((info)::text = ANY ('{Horror,Action,Sci-Fi,Thriller,Crime,War}'::text[]))
                                 Rows Removed by Filter: 172
                     ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=3007)
                           Index Cond: (id = mi.info_type_id)
                           Filter: ((info)::text = 'genres'::text)
                           Rows Removed by Filter: 0
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.29 rows=1 width=19) (actual time=0.009..0.009 rows=1 loops=2825)
                     Index Cond: (id = ci.person_id)
         ->  Index Scan using title_pkey on title t  (cost=0.43..1.10 rows=1 width=21) (actual time=0.006..0.006 rows=1 loops=2825)
               Index Cond: (id = mk.movie_id)
 Planning Time: 107.963 ms
 Execution Time: 3487.250 ms
(58 rows)

SET
                                                                              QUERY PLAN                                                                               
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3801.48..3801.49 rows=1 width=96) (actual time=31.191..31.191 rows=1 loops=1)
   ->  Nested Loop  (cost=7.90..3801.40 rows=10 width=116) (actual time=31.184..31.184 rows=0 loops=1)
         ->  Nested Loop  (cost=7.47..3759.44 rows=10 width=103) (actual time=31.184..31.184 rows=0 loops=1)
               ->  Nested Loop  (cost=7.04..3754.59 rows=10 width=94) (actual time=31.184..31.184 rows=0 loops=1)
                     Join Filter: (ml.link_type_id = lt.id)
                     ->  Nested Loop  (cost=7.04..3750.90 rows=10 width=16) (actual time=31.183..31.183 rows=0 loops=1)
                           ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=30.454..31.155 rows=1 loops=1)
                                 ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=30.366..31.065 rows=1 loops=1)
                                       Filter: ((keyword)::text = '10,000-mile-club'::text)
                                       Rows Removed by Filter: 134169
                                 ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=0.074..0.075 rows=1 loops=1)
                                       Recheck Cond: (keyword_id = k.id)
                                       Heap Blocks: exact=1
                                       ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.030..0.030 rows=1 loops=1)
                                             Index Cond: (keyword_id = k.id)
                           ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=12) (actual time=0.026..0.026 rows=0 loops=1)
                                 Index Cond: (movie_id = mk.movie_id)
                     ->  Materialize  (cost=0.00..1.27 rows=18 width=86) (never executed)
                           ->  Seq Scan on link_type lt  (cost=0.00..1.18 rows=18 width=86) (never executed)
               ->  Index Scan using title_pkey on title t1  (cost=0.43..0.49 rows=1 width=21) (never executed)
                     Index Cond: (id = mk.movie_id)
         ->  Index Scan using title_pkey on title t2  (cost=0.43..4.20 rows=1 width=21) (never executed)
               Index Cond: (id = ml.linked_movie_id)
 Planning Time: 6.093 ms
 Execution Time: 31.720 ms
(25 rows)

SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3801.48..3801.49 rows=1 width=96) (actual time=534.415..534.415 rows=1 loops=1)
   ->  Nested Loop  (cost=7.90..3801.40 rows=10 width=116) (actual time=11.544..529.516 rows=4388 loops=1)
         ->  Nested Loop  (cost=7.47..3759.44 rows=10 width=103) (actual time=11.452..421.647 rows=4388 loops=1)
               ->  Nested Loop  (cost=7.04..3754.59 rows=10 width=94) (actual time=11.387..392.616 rows=4388 loops=1)
                     Join Filter: (ml.link_type_id = lt.id)
                     Rows Removed by Join Filter: 30206
                     ->  Nested Loop  (cost=7.04..3750.90 rows=10 width=16) (actual time=11.340..383.278 rows=4388 loops=1)
                           ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=11.065..292.877 rows=41840 loops=1)
                                 ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.002..26.978 rows=1 loops=1)
                                       Filter: ((keyword)::text = 'character-name-in-title'::text)
                                       Rows Removed by Filter: 134169
                                 ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=10.055..255.451 rows=41840 loops=1)
                                       Recheck Cond: (keyword_id = k.id)
                                       Heap Blocks: exact=11541
                                       ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=8.334..8.334 rows=41840 loops=1)
                                             Index Cond: (keyword_id = k.id)
                           ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=12) (actual time=0.002..0.002 rows=0 loops=41840)
                                 Index Cond: (movie_id = mk.movie_id)
                     ->  Materialize  (cost=0.00..1.27 rows=18 width=86) (actual time=0.000..0.001 rows=8 loops=4388)
                           ->  Seq Scan on link_type lt  (cost=0.00..1.18 rows=18 width=86) (actual time=0.026..0.035 rows=17 loops=1)
               ->  Index Scan using title_pkey on title t1  (cost=0.43..0.49 rows=1 width=21) (actual time=0.005..0.005 rows=1 loops=4388)
                     Index Cond: (id = mk.movie_id)
         ->  Index Scan using title_pkey on title t2  (cost=0.43..4.20 rows=1 width=21) (actual time=0.024..0.024 rows=1 loops=4388)
               Index Cond: (id = ml.linked_movie_id)
 Planning Time: 5.159 ms
 Execution Time: 534.947 ms
(26 rows)

SET
                                                                                                               QUERY PLAN                                                                                                               
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3985.44..3985.45 rows=1 width=192) (actual time=281.232..281.232 rows=1 loops=1)
   ->  Nested Loop  (cost=874.71..3985.43 rows=1 width=82) (actual time=68.314..281.209 rows=8 loops=1)
         Join Filter: ((ml.linked_movie_id = t2.id) AND (kt2.id = t2.kind_id))
         ->  Nested Loop  (cost=874.28..3984.89 rows=1 width=81) (actual time=68.284..280.975 rows=35 loops=1)
               Join Filter: (mi_idx2.info_type_id = it2.id)
               Rows Removed by Join Filter: 16250
               ->  Nested Loop  (cost=874.28..3981.65 rows=55 width=85) (actual time=11.903..273.886 rows=16285 loops=1)
                     ->  Nested Loop  (cost=873.86..3913.92 rows=152 width=70) (actual time=11.733..171.461 rows=39869 loops=1)
                           ->  Nested Loop  (cost=873.43..3824.47 rows=147 width=78) (actual time=11.712..131.840 rows=6175 loops=1)
                                 ->  Nested Loop  (cost=873.01..3759.33 rows=147 width=63) (actual time=11.691..105.619 rows=6175 loops=1)
                                       Join Filter: (ml.linked_movie_id = mc2.movie_id)
                                       ->  Nested Loop  (cost=872.58..3738.66 rows=28 width=55) (actual time=11.634..80.624 rows=1602 loops=1)
                                             Join Filter: (kt1.id = t1.kind_id)
                                             Rows Removed by Join Filter: 1143
                                             ->  Nested Loop  (cost=0.13..13.35 rows=1 width=8) (actual time=0.068..0.077 rows=1 loops=1)
                                                   ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.13..12.26 rows=1 width=4) (actual time=0.047..0.050 rows=1 loops=1)
                                                         Filter: ((kind)::text = 'tv series'::text)
                                                         Rows Removed by Filter: 6
                                                   ->  Seq Scan on kind_type kt1  (cost=0.00..1.09 rows=1 width=4) (actual time=0.019..0.024 rows=1 loops=1)
                                                         Filter: ((kind)::text = 'tv series'::text)
                                                         Rows Removed by Filter: 6
                                             ->  Nested Loop  (cost=872.44..3722.90 rows=193 width=55) (actual time=11.563..79.918 rows=2745 loops=1)
                                                   Join Filter: (ml.movie_id = t1.id)
                                                   ->  Nested Loop  (cost=872.01..3610.10 rows=193 width=30) (actual time=11.536..62.876 rows=2745 loops=1)
                                                         ->  Hash Join  (cost=871.59..3333.95 rows=134 width=17) (actual time=11.489..40.857 rows=2064 loops=1)
                                                               Hash Cond: (mi_idx1.info_type_id = it1.id)
                                                               ->  Merge Join  (cost=869.16..3290.24 rows=15158 width=21) (actual time=11.371..39.292 rows=6192 loops=1)
                                                                     Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43826.36 rows=1380035 width=13) (actual time=0.023..18.365 rows=63901 loops=1)
                                                                     ->  Sort  (cost=868.72..881.22 rows=5000 width=8) (actual time=11.317..11.898 rows=6443 loops=1)
                                                                           Sort Key: ml.movie_id
                                                                           Sort Method: quicksort  Memory: 205kB
                                                                           ->  Hash Join  (cost=1.29..561.53 rows=5000 width=8) (actual time=0.127..10.141 rows=2315 loops=1)
                                                                                 Hash Cond: (ml.link_type_id = lt.id)
                                                                                 ->  Seq Scan on movie_link ml  (cost=0.00..462.97 rows=29997 width=12) (actual time=0.010..5.857 rows=29997 loops=1)
                                                                                 ->  Hash  (cost=1.25..1.25 rows=3 width=4) (actual time=0.057..0.057 rows=2 loops=1)
                                                                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                       ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=3 width=4) (actual time=0.039..0.044 rows=2 loops=1)
                                                                                             Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                             Rows Removed by Filter: 16
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.050..0.050 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.034..0.037 rows=1 loops=1)
                                                                           Filter: ((info)::text = 'rating'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=1 width=13) (actual time=0.009..0.010 rows=1 loops=2064)
                                                               Index Cond: (movie_id = ml.linked_movie_id)
                                                               Filter: ((info)::text < '3.0'::text)
                                                               Rows Removed by Filter: 2
                                                   ->  Index Scan using title_pkey on title t1  (cost=0.43..0.57 rows=1 width=25) (actual time=0.005..0.005 rows=1 loops=2745)
                                                         Index Cond: (id = mi_idx1.movie_id)
                                       ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.68 rows=5 width=8) (actual time=0.010..0.014 rows=4 loops=1602)
                                             Index Cond: (movie_id = mi_idx2.movie_id)
                                 ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.004..0.004 rows=1 loops=6175)
                                       Index Cond: (id = mc2.company_id)
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.003..0.005 rows=6 loops=6175)
                                 Index Cond: (movie_id = t1.id)
                     ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=39869)
                           Index Cond: (id = mc1.company_id)
                           Filter: ((country_code)::text = '[us]'::text)
                           Rows Removed by Filter: 1
               ->  Materialize  (cost=0.00..2.42 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=16285)
                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.021..0.023 rows=1 loops=1)
                           Filter: ((info)::text = 'rating'::text)
                           Rows Removed by Filter: 112
         ->  Index Scan using title_pkey on title t2  (cost=0.43..0.52 rows=1 width=25) (actual time=0.006..0.006 rows=0 loops=35)
               Index Cond: (id = mc2.movie_id)
               Filter: ((production_year >= 2005) AND (production_year <= 2008))
               Rows Removed by Filter: 1
 Planning Time: 111.001 ms
 Execution Time: 282.231 ms
(71 rows)

SET
                                                                                                                  QUERY PLAN                                                                                                                  
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=2780.95..2780.96 rows=1 width=192) (actual time=78.741..78.742 rows=1 loops=1)
   ->  Nested Loop  (cost=340.63..2780.94 rows=1 width=82) (actual time=15.372..78.725 rows=4 loops=1)
         Join Filter: ((t2.id = mi_idx2.movie_id) AND (it2.id = mi_idx2.info_type_id))
         Rows Removed by Join Filter: 4
         ->  Nested Loop  (cost=340.20..2780.42 rows=1 width=93) (actual time=15.338..78.677 rows=4 loops=1)
               ->  Nested Loop  (cost=340.07..2780.25 rows=1 width=97) (actual time=15.314..78.647 rows=4 loops=1)
                     Join Filter: (ml.movie_id = t1.id)
                     ->  Nested Loop  (cost=339.64..2779.72 rows=1 width=88) (actual time=15.294..78.618 rows=4 loops=1)
                           ->  Nested Loop  (cost=339.22..2779.28 rows=1 width=73) (actual time=15.289..78.603 rows=4 loops=1)
                                 ->  Nested Loop  (cost=338.79..2777.83 rows=1 width=65) (actual time=15.281..78.592 rows=1 loops=1)
                                       ->  Nested Loop  (cost=338.66..2777.66 rows=1 width=69) (actual time=4.135..78.556 rows=6 loops=1)
                                             ->  Nested Loop  (cost=338.23..2769.26 rows=2 width=44) (actual time=4.080..73.460 rows=477 loops=1)
                                                   ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..14.12 rows=1 width=4) (actual time=0.038..0.044 rows=1 loops=1)
                                                         Filter: ((info)::text = 'rating'::text)
                                                         Rows Removed by Filter: 112
                                                   ->  Nested Loop  (cost=338.08..2755.12 rows=2 width=40) (actual time=4.038..73.308 rows=477 loops=1)
                                                         ->  Nested Loop  (cost=337.66..2649.97 rows=236 width=25) (actual time=3.928..42.420 rows=9674 loops=1)
                                                               Join Filter: (ml.movie_id = mc1.movie_id)
                                                               ->  Hash Join  (cost=337.23..2620.48 rows=45 width=17) (actual time=3.918..27.884 rows=2064 loops=1)
                                                                     Hash Cond: (mi_idx1.info_type_id = it1.id)
                                                                     ->  Merge Join  (cost=334.81..2604.30 rows=5051 width=21) (actual time=3.814..26.553 rows=6192 loops=1)
                                                                           Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43826.36 rows=1380035 width=13) (actual time=0.030..13.679 rows=63901 loops=1)
                                                                           ->  Sort  (cost=334.38..338.55 rows=1666 width=8) (actual time=3.751..4.275 rows=6443 loops=1)
                                                                                 Sort Key: ml.movie_id
                                                                                 Sort Method: quicksort  Memory: 205kB
                                                                                 ->  Nested Loop  (cost=38.82..245.23 rows=1666 width=8) (actual time=0.213..2.588 rows=2315 loops=1)
                                                                                       ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=4) (actual time=0.034..0.040 rows=2 loops=1)
                                                                                             Filter: ((link)::text ~~ '%follow%'::text)
                                                                                             Rows Removed by Filter: 16
                                                                                       ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..225.26 rows=1875 width=12) (actual time=0.146..1.070 rows=1158 loops=2)
                                                                                             Recheck Cond: (link_type_id = lt.id)
                                                                                             Heap Blocks: exact=191
                                                                                             ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.125..0.125 rows=1158 loops=2)
                                                                                                   Index Cond: (link_type_id = lt.id)
                                                                     ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.035..0.035 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.021..0.024 rows=1 loops=1)
                                                                                 Filter: ((info)::text = 'rating'::text)
                                                                                 Rows Removed by Filter: 112
                                                               ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.59 rows=5 width=8) (actual time=0.004..0.005 rows=5 loops=2064)
                                                                     Index Cond: (movie_id = mi_idx1.movie_id)
                                                         ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=9674)
                                                               Index Cond: (id = mc1.company_id)
                                                               Filter: ((country_code)::text = '[nl]'::text)
                                                               Rows Removed by Filter: 1
                                             ->  Index Scan using title_pkey on title t2  (cost=0.43..4.20 rows=1 width=25) (actual time=0.010..0.010 rows=0 loops=477)
                                                   Index Cond: (id = ml.linked_movie_id)
                                                   Filter: (production_year = 2007)
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=6)
                                             Index Cond: (id = t2.kind_id)
                                             Filter: ((kind)::text = 'tv series'::text)
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..1.39 rows=5 width=8) (actual time=0.006..0.009 rows=4 loops=1)
                                       Index Cond: (movie_id = t2.id)
                           ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.003..0.003 rows=1 loops=4)
                                 Index Cond: (id = mc2.company_id)
                     ->  Index Scan using title_pkey on title t1  (cost=0.43..0.51 rows=1 width=25) (actual time=0.006..0.006 rows=1 loops=4)
                           Index Cond: (id = mc1.movie_id)
               ->  Index Scan using kind_type_pkey on kind_type kt1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=4)
                     Index Cond: (id = t1.kind_id)
                     Filter: ((kind)::text = 'tv series'::text)
         ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..0.51 rows=1 width=13) (actual time=0.010..0.011 rows=2 loops=4)
               Index Cond: (movie_id = mc2.movie_id)
               Filter: ((info)::text < '3.0'::text)
               Rows Removed by Filter: 1
 Planning Time: 109.791 ms
 Execution Time: 79.804 ms
(69 rows)

SET
                                                                                                                  QUERY PLAN                                                                                                                  
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4007.21..4007.22 rows=1 width=192) (actual time=82.116..82.116 rows=1 loops=1)
   ->  Nested Loop  (cost=874.85..4007.20 rows=1 width=82) (actual time=19.730..81.969 rows=114 loops=1)
         ->  Nested Loop  (cost=874.43..4006.75 rows=1 width=67) (actual time=19.704..81.328 rows=131 loops=1)
               ->  Nested Loop  (cost=874.30..4006.58 rows=1 width=71) (actual time=19.679..81.058 rows=131 loops=1)
                     Join Filter: (ml.movie_id = t1.id)
                     ->  Nested Loop  (cost=873.87..4006.06 rows=1 width=62) (actual time=19.639..80.563 rows=131 loops=1)
                           ->  Nested Loop  (cost=873.45..4005.62 rows=1 width=47) (actual time=19.594..79.932 rows=131 loops=1)
                                 ->  Nested Loop  (cost=873.02..4004.95 rows=1 width=55) (actual time=19.575..79.554 rows=51 loops=1)
                                       Join Filter: (it2.id = mi_idx2.info_type_id)
                                       Rows Removed by Join Filter: 4467
                                       ->  Nested Loop  (cost=872.59..3959.22 rows=82 width=50) (actual time=11.291..67.104 rows=3300 loops=1)
                                             Join Filter: (t2.kind_id = kt2.id)
                                             Rows Removed by Join Filter: 4017
                                             ->  Nested Loop  (cost=872.59..3949.90 rows=288 width=54) (actual time=10.456..64.680 rows=4087 loops=1)
                                                   ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..14.12 rows=1 width=4) (actual time=0.036..0.042 rows=1 loops=1)
                                                         Filter: ((info)::text = 'rating'::text)
                                                         Rows Removed by Filter: 112
                                                   ->  Nested Loop  (cost=872.45..3932.90 rows=288 width=50) (actual time=10.417..63.852 rows=4087 loops=1)
                                                         Join Filter: (ml.movie_id = mc1.movie_id)
                                                         ->  Nested Loop  (cost=872.02..3896.86 rows=55 width=42) (actual time=10.408..57.333 rows=851 loops=1)
                                                               ->  Hash Join  (cost=871.59..3333.95 rows=134 width=17) (actual time=10.319..34.613 rows=2064 loops=1)
                                                                     Hash Cond: (mi_idx1.info_type_id = it1.id)
                                                                     ->  Merge Join  (cost=869.16..3290.24 rows=15158 width=21) (actual time=10.208..33.166 rows=6192 loops=1)
                                                                           Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43826.36 rows=1380035 width=13) (actual time=0.023..13.580 rows=63901 loops=1)
                                                                           ->  Sort  (cost=868.72..881.22 rows=5000 width=8) (actual time=10.154..10.700 rows=6443 loops=1)
                                                                                 Sort Key: ml.movie_id
                                                                                 Sort Method: quicksort  Memory: 205kB
                                                                                 ->  Hash Join  (cost=1.29..561.53 rows=5000 width=8) (actual time=0.113..9.000 rows=2315 loops=1)
                                                                                       Hash Cond: (ml.link_type_id = lt.id)
                                                                                       ->  Seq Scan on movie_link ml  (cost=0.00..462.97 rows=29997 width=12) (actual time=0.010..4.782 rows=29997 loops=1)
                                                                                       ->  Hash  (cost=1.25..1.25 rows=3 width=4) (actual time=0.056..0.057 rows=2 loops=1)
                                                                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                             ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=3 width=4) (actual time=0.033..0.038 rows=2 loops=1)
                                                                                                   Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                                   Rows Removed by Filter: 16
                                                                     ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.034..0.034 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.021..0.023 rows=1 loops=1)
                                                                                 Filter: ((info)::text = 'rating'::text)
                                                                                 Rows Removed by Filter: 112
                                                               ->  Index Scan using title_pkey on title t2  (cost=0.43..4.20 rows=1 width=25) (actual time=0.010..0.010 rows=0 loops=2064)
                                                                     Index Cond: (id = ml.linked_movie_id)
                                                                     Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                                                     Rows Removed by Filter: 1
                                                         ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.59 rows=5 width=8) (actual time=0.004..0.006 rows=5 loops=851)
                                                               Index Cond: (movie_id = mi_idx1.movie_id)
                                             ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=2 loops=4087)
                                                   ->  Seq Scan on kind_type kt2  (cost=0.00..1.09 rows=2 width=4) (actual time=0.011..0.012 rows=2 loops=1)
                                                         Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                                                         Rows Removed by Filter: 5
                                       ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..0.53 rows=2 width=13) (actual time=0.003..0.003 rows=1 loops=3300)
                                             Index Cond: (movie_id = t2.id)
                                             Filter: ((info)::text < '3.5'::text)
                                             Rows Removed by Filter: 2
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.62 rows=5 width=8) (actual time=0.005..0.006 rows=3 loops=51)
                                       Index Cond: (movie_id = t2.id)
                           ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.004..0.004 rows=1 loops=131)
                                 Index Cond: (id = mc2.company_id)
                     ->  Index Scan using title_pkey on title t1  (cost=0.43..0.51 rows=1 width=25) (actual time=0.003..0.003 rows=1 loops=131)
                           Index Cond: (id = mc1.movie_id)
               ->  Index Scan using kind_type_pkey on kind_type kt1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=131)
                     Index Cond: (id = t1.kind_id)
                     Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
         ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.004..0.004 rows=1 loops=131)
               Index Cond: (id = mc1.company_id)
               Filter: ((country_code)::text <> '[us]'::text)
               Rows Removed by Filter: 0
 Planning Time: 108.341 ms
 Execution Time: 83.159 ms
(70 rows)

SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16631.00..16631.01 rows=1 width=32) (actual time=640.485..640.486 rows=1 loops=1)
   ->  Nested Loop  (cost=7.62..16630.82 rows=72 width=17) (actual time=14.564..640.228 rows=206 loops=1)
         Join Filter: (t.id = mi.movie_id)
         ->  Nested Loop  (cost=7.19..16315.45 rows=177 width=25) (actual time=9.913..379.854 rows=2235 loops=1)
               ->  Nested Loop  (cost=6.76..16101.73 rows=438 width=4) (actual time=5.683..174.986 rows=12951 loops=1)
                     ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=1.879..39.914 rows=30 loops=1)
                           Filter: ((keyword)::text ~~ '%sequel%'::text)
                           Rows Removed by Filter: 134140
                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1033.58 rows=300 width=8) (actual time=0.172..4.311 rows=432 loops=30)
                           Recheck Cond: (keyword_id = k.id)
                           Heap Blocks: exact=6979
                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.129..0.129 rows=432 loops=30)
                                 Index Cond: (keyword_id = k.id)
               ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.015..0.015 rows=0 loops=12951)
                     Index Cond: (id = mk.movie_id)
                     Filter: (production_year > 2005)
                     Rows Removed by Filter: 1
         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.77 rows=1 width=4) (actual time=0.109..0.116 rows=0 loops=2235)
               Index Cond: (movie_id = mk.movie_id)
               Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German}'::text[]))
               Rows Removed by Filter: 45
 Planning Time: 3.904 ms
 Execution Time: 640.799 ms
(23 rows)

SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16416.66..16416.67 rows=1 width=32) (actual time=399.879..399.879 rows=1 loops=1)
   ->  Nested Loop  (cost=7.62..16416.66 rows=1 width=17) (actual time=24.253..399.835 rows=5 loops=1)
         Join Filter: (t.id = mi.movie_id)
         ->  Nested Loop  (cost=7.19..16315.45 rows=69 width=25) (actual time=10.573..345.652 rows=405 loops=1)
               ->  Nested Loop  (cost=6.76..16101.73 rows=438 width=4) (actual time=6.076..161.843 rows=12951 loops=1)
                     ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=2.288..39.112 rows=30 loops=1)
                           Filter: ((keyword)::text ~~ '%sequel%'::text)
                           Rows Removed by Filter: 134140
                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1033.58 rows=300 width=8) (actual time=0.169..3.908 rows=432 loops=30)
                           Recheck Cond: (keyword_id = k.id)
                           Heap Blocks: exact=6979
                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.128..0.128 rows=432 loops=30)
                                 Index Cond: (keyword_id = k.id)
               ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.013..0.013 rows=0 loops=12951)
                     Index Cond: (id = mk.movie_id)
                     Filter: (production_year > 2010)
                     Rows Removed by Filter: 1
         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.45 rows=1 width=4) (actual time=0.132..0.133 rows=0 loops=405)
               Index Cond: (movie_id = mk.movie_id)
               Filter: ((info)::text = 'Bulgaria'::text)
               Rows Removed by Filter: 63
 Planning Time: 4.212 ms
 Execution Time: 400.238 ms
(23 rows)

SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16894.26..16894.27 rows=1 width=32) (actual time=1072.698..1072.699 rows=1 loops=1)
   ->  Nested Loop  (cost=7.62..16892.82 rows=578 width=17) (actual time=6.838..1067.239 rows=7250 loops=1)
         Join Filter: (t.id = mi.movie_id)
         ->  Nested Loop  (cost=7.19..16315.45 rows=304 width=25) (actual time=6.153..365.397 rows=7874 loops=1)
               ->  Nested Loop  (cost=6.76..16101.73 rows=438 width=4) (actual time=6.100..169.038 rows=12951 loops=1)
                     ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=2.255..39.405 rows=30 loops=1)
                           Filter: ((keyword)::text ~~ '%sequel%'::text)
                           Rows Removed by Filter: 134140
                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1033.58 rows=300 width=8) (actual time=0.172..4.134 rows=432 loops=30)
                           Recheck Cond: (keyword_id = k.id)
                           Heap Blocks: exact=6979
                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.130..0.130 rows=432 loops=30)
                                 Index Cond: (keyword_id = k.id)
               ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.014..0.014 rows=1 loops=12951)
                     Index Cond: (id = mk.movie_id)
                     Filter: (production_year > 1990)
                     Rows Removed by Filter: 0
         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=4) (actual time=0.076..0.088 rows=1 loops=7874)
               Index Cond: (movie_id = mk.movie_id)
               Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,USA,American}'::text[]))
               Rows Removed by Filter: 35
 Planning Time: 4.534 ms
 Execution Time: 1073.018 ms
(23 rows)

SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16334.91..16334.92 rows=1 width=64) (actual time=419.778..419.779 rows=1 loops=1)
   ->  Nested Loop  (cost=7.62..16334.90 rows=2 width=22) (actual time=11.835..418.955 rows=740 loops=1)
         Join Filter: (mi_idx.movie_id = t.id)
         ->  Nested Loop  (cost=7.19..16332.90 rows=4 width=13) (actual time=6.073..313.153 rows=5820 loops=1)
               Join Filter: (mi_idx.info_type_id = it.id)
               Rows Removed by Join Filter: 2643
               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.032..0.035 rows=1 loops=1)
                     Filter: ((info)::text = 'rating'::text)
                     Rows Removed by Filter: 112
               ->  Nested Loop  (cost=7.19..16324.17 rows=505 width=17) (actual time=6.039..310.704 rows=8463 loops=1)
                     ->  Nested Loop  (cost=6.76..16101.73 rows=438 width=4) (actual time=5.987..168.446 rows=12951 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=2.219..39.567 rows=30 loops=1)
                                 Filter: ((keyword)::text ~~ '%sequel%'::text)
                                 Rows Removed by Filter: 134140
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1033.58 rows=300 width=8) (actual time=0.166..4.132 rows=432 loops=30)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=6979
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.127..0.127 rows=432 loops=30)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=13) (actual time=0.010..0.010 rows=1 loops=12951)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((info)::text > '5.0'::text)
                           Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.017..0.017 rows=0 loops=5820)
               Index Cond: (id = mk.movie_id)
               Filter: (production_year > 2005)
               Rows Removed by Filter: 1
 Planning Time: 5.045 ms
 Execution Time: 420.173 ms
(29 rows)

SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16327.16..16327.17 rows=1 width=64) (actual time=207.924..207.924 rows=1 loops=1)
   ->  Nested Loop  (cost=7.62..16327.16 rows=1 width=22) (actual time=36.217..207.897 rows=6 loops=1)
         Join Filter: (mi_idx.movie_id = t.id)
         ->  Nested Loop  (cost=7.19..16326.66 rows=1 width=13) (actual time=31.483..207.499 rows=21 loops=1)
               Join Filter: (mi_idx.info_type_id = it.id)
               Rows Removed by Join Filter: 285
               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.029..0.033 rows=1 loops=1)
                     Filter: ((info)::text = 'rating'::text)
                     Rows Removed by Filter: 112
               ->  Nested Loop  (cost=7.19..16324.17 rows=6 width=17) (actual time=7.002..207.384 rows=306 loops=1)
                     ->  Nested Loop  (cost=6.76..16101.73 rows=438 width=4) (actual time=6.069..113.141 rows=12951 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=2.264..30.003 rows=30 loops=1)
                                 Filter: ((keyword)::text ~~ '%sequel%'::text)
                                 Rows Removed by Filter: 134140
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1033.58 rows=300 width=8) (actual time=0.151..2.646 rows=432 loops=30)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=6979
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.115..0.115 rows=432 loops=30)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=13) (actual time=0.007..0.007 rows=0 loops=12951)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((info)::text > '9.0'::text)
                           Rows Removed by Filter: 2
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.018..0.018 rows=0 loops=21)
               Index Cond: (id = mk.movie_id)
               Filter: (production_year > 2010)
               Rows Removed by Filter: 1
 Planning Time: 4.508 ms
 Execution Time: 208.316 ms
(29 rows)

SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16344.82..16344.83 rows=1 width=64) (actual time=312.488..312.489 rows=1 loops=1)
   ->  Nested Loop  (cost=7.62..16344.79 rows=5 width=22) (actual time=5.325..308.136 rows=4700 loops=1)
         Join Filter: (mi_idx.movie_id = t.id)
         ->  Nested Loop  (cost=7.19..16341.29 rows=7 width=13) (actual time=5.250..195.870 rows=8092 loops=1)
               Join Filter: (mi_idx.info_type_id = it.id)
               Rows Removed by Join Filter: 6865
               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.035..0.039 rows=1 loops=1)
                     Filter: ((info)::text = 'rating'::text)
                     Rows Removed by Filter: 112
               ->  Nested Loop  (cost=7.19..16328.55 rows=826 width=17) (actual time=5.213..192.520 rows=14957 loops=1)
                     ->  Nested Loop  (cost=6.76..16101.73 rows=438 width=4) (actual time=5.187..98.928 rows=12951 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=1.777..38.715 rows=30 loops=1)
                                 Filter: ((keyword)::text ~~ '%sequel%'::text)
                                 Rows Removed by Filter: 134140
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1033.58 rows=300 width=8) (actual time=0.150..1.872 rows=432 loops=30)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=6979
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.113..0.113 rows=432 loops=30)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=2 width=13) (actual time=0.006..0.006 rows=1 loops=12951)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((info)::text > '2.0'::text)
                           Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.013..0.013 rows=1 loops=8092)
               Index Cond: (id = mk.movie_id)
               Filter: (production_year > 1990)
               Rows Removed by Filter: 0
 Planning Time: 3.974 ms
 Execution Time: 312.876 ms
(29 rows)

SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=39503.41..39503.42 rows=1 width=32) (actual time=264.641..264.641 rows=1 loops=1)
   ->  Gather  (cost=39503.19..39503.40 rows=2 width=32) (actual time=264.541..265.826 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=38503.19..38503.20 rows=1 width=32) (actual time=257.575..257.575 rows=1 loops=3)
               ->  Hash Join  (cost=5.47..38503.07 rows=48 width=17) (actual time=257.571..257.571 rows=0 loops=3)
                     Hash Cond: (mi.info_type_id = it.id)
                     ->  Nested Loop  (cost=1.93..38499.40 rows=48 width=21) (actual time=257.570..257.570 rows=0 loops=3)
                           ->  Nested Loop  (cost=1.49..38104.61 rows=165 width=25) (actual time=257.570..257.570 rows=0 loops=3)
                                 ->  Hash Join  (cost=1.06..35106.92 rows=407 width=4) (actual time=257.569..257.570 rows=0 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..35097.06 rows=1629 width=8) (actual time=6.539..255.751 rows=8008 loops=3)
                                             Filter: (((note)::text ~~ '%(theatrical)%'::text) AND ((note)::text ~~ '%(France)%'::text))
                                             Rows Removed by Filter: 861701
                                       ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.068..0.068 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.036..0.038 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..7.37 rows=1 width=21) (never executed)
                                       Index Cond: (id = mc.movie_id)
                                       Filter: (production_year > 2005)
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.38 rows=1 width=8) (never executed)
                                 Index Cond: (movie_id = t.id)
                                 Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German}'::text[]))
                     ->  Hash  (cost=2.13..2.13 rows=113 width=4) (never executed)
                           ->  Seq Scan on info_type it  (cost=0.00..2.13 rows=113 width=4) (never executed)
 Planning Time: 5.106 ms
 Execution Time: 266.247 ms
(29 rows)

SET
                                                                               QUERY PLAN                                                                               
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=38870.49..38870.50 rows=1 width=32) (actual time=255.012..255.012 rows=1 loops=1)
   ->  Gather  (cost=38870.28..38870.49 rows=2 width=32) (actual time=254.901..256.358 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=37870.28..37870.29 rows=1 width=32) (actual time=248.164..248.164 rows=1 loops=3)
               ->  Nested Loop  (cost=2.07..37870.28 rows=1 width=17) (actual time=248.161..248.161 rows=0 loops=3)
                     ->  Nested Loop  (cost=1.93..37870.12 rows=1 width=21) (actual time=248.160..248.160 rows=0 loops=3)
                           ->  Nested Loop  (cost=1.49..37866.79 rows=1 width=25) (actual time=248.160..248.160 rows=0 loops=3)
                                 ->  Hash Join  (cost=1.06..37816.09 rows=6 width=4) (actual time=248.160..248.160 rows=0 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..37814.90 rows=25 width=8) (actual time=4.208..247.741 rows=473 loops=3)
                                             Filter: (((note)::text ~~ '%(VHS)%'::text) AND ((note)::text ~~ '%(USA)%'::text) AND ((note)::text ~~ '%(1994)%'::text))
                                             Rows Removed by Filter: 869237
                                       ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.058..0.058 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.037..0.039 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..8.45 rows=1 width=21) (never executed)
                                       Index Cond: (id = mc.movie_id)
                                       Filter: (production_year > 2010)
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..3.31 rows=1 width=8) (never executed)
                                 Index Cond: (movie_id = t.id)
                                 Filter: ((info)::text = ANY ('{USA,America}'::text[]))
                     ->  Index Only Scan using info_type_pkey on info_type it  (cost=0.14..0.16 rows=1 width=4) (never executed)
                           Index Cond: (id = mi.info_type_id)
                           Heap Fetches: 0
 Planning Time: 4.196 ms
 Execution Time: 256.821 ms
(29 rows)

SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=91609.00..91609.01 rows=1 width=32) (actual time=367.732..367.732 rows=1 loops=1)
   ->  Gather  (cost=91608.78..91608.99 rows=2 width=32) (actual time=367.524..372.096 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=90608.78..90608.79 rows=1 width=32) (actual time=360.835..360.835 rows=1 loops=3)
               ->  Hash Join  (cost=5.47..90564.24 rows=17818 width=17) (actual time=213.803..360.582 rows=223 loops=3)
                     Hash Cond: (mi.info_type_id = it.id)
                     ->  Nested Loop  (cost=1.93..90512.17 rows=17818 width=21) (actual time=213.660..360.207 rows=223 loops=3)
                           ->  Nested Loop  (cost=1.49..61913.67 rows=13136 width=25) (actual time=213.475..311.620 rows=256 loops=3)
                                 ->  Hash Join  (cost=1.06..35507.44 rows=18928 width=4) (actual time=213.357..300.631 rows=266 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..35097.06 rows=75712 width=8) (actual time=0.100..290.269 rows=98543 loops=3)
                                             Filter: (((note)::text !~~ '%(TV)%'::text) AND ((note)::text ~~ '%(USA)%'::text))
                                             Rows Removed by Filter: 771167
                                       ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.059..0.060 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.031..0.032 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..1.40 rows=1 width=21) (actual time=0.040..0.040 rows=1 loops=798)
                                       Index Cond: (id = mc.movie_id)
                                       Filter: (production_year > 1990)
                                       Rows Removed by Filter: 0
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.16 rows=2 width=8) (actual time=0.168..0.188 rows=1 loops=767)
                                 Index Cond: (movie_id = t.id)
                                 Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,USA,American}'::text[]))
                                 Rows Removed by Filter: 10
                     ->  Hash  (cost=2.13..2.13 rows=113 width=4) (actual time=0.081..0.081 rows=113 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 12kB
                           ->  Seq Scan on info_type it  (cost=0.00..2.13 rows=113 width=4) (actual time=0.027..0.041 rows=113 loops=3)
 Planning Time: 4.186 ms
 Execution Time: 372.556 ms
(32 rows)

SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3852.63..3852.64 rows=1 width=96) (actual time=88.308..88.309 rows=1 loops=1)
   ->  Nested Loop  (cost=8.18..3852.62 rows=1 width=48) (actual time=11.579..88.275 rows=6 loops=1)
         ->  Nested Loop  (cost=7.75..3762.97 rows=196 width=37) (actual time=0.909..50.900 rows=1224 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.19..3753.04 rows=5 width=41) (actual time=0.845..32.094 rows=11 loops=1)
                     ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=20) (actual time=0.795..31.382 rows=14 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=20) (actual time=0.712..30.983 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'marvel-cinematic-universe'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=0.074..0.382 rows=14 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=12
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.044..0.044 rows=14 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.049..0.049 rows=1 loops=14)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2010)
                           Rows Removed by Filter: 0
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.044..1.623 rows=111 loops=11)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.029..0.029 rows=0 loops=1224)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ '%Downey%Robert%'::text)
               Rows Removed by Filter: 1
 Planning Time: 4.722 ms
 Execution Time: 88.731 ms
(26 rows)

SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=12284.35..12284.36 rows=1 width=96) (actual time=926.485..926.486 rows=1 loops=1)
   ->  Nested Loop  (cost=8.18..12284.35 rows=1 width=48) (actual time=82.539..926.425 rows=12 loops=1)
         ->  Nested Loop  (cost=7.75..12283.89 rows=1 width=37) (actual time=24.418..920.070 rows=383 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.19..12281.90 rows=1 width=41) (actual time=24.389..916.230 rows=36 loops=1)
                     ->  Nested Loop  (cost=6.76..12150.15 rows=270 width=20) (actual time=1.083..426.585 rows=35548 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..3632.40 rows=8 width=20) (actual time=0.141..48.723 rows=8 loops=1)
                                 Filter: ((keyword)::text = ANY ('{superhero,sequel,second-part,marvel-comics,based-on-comic,tv-special,fight,violence}'::text[]))
                                 Rows Removed by Filter: 134162
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1061.72 rows=300 width=8) (actual time=1.777..44.923 rows=4444 loops=8)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=23488
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=1.360..1.360 rows=4444 loops=8)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.013..0.013 rows=0 loops=35548)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2014)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.031..0.100 rows=11 loops=36)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.016..0.016 rows=0 loops=383)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ '%Downey%Robert%'::text)
               Rows Removed by Filter: 1
 Planning Time: 4.355 ms
 Execution Time: 926.876 ms
(26 rows)

SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3755.49..3755.50 rows=1 width=96) (actual time=21.552..21.552 rows=1 loops=1)
   ->  Nested Loop  (cost=8.18..3755.48 rows=1 width=48) (actual time=1.901..21.541 rows=2 loops=1)
         ->  Nested Loop  (cost=7.75..3755.03 rows=1 width=37) (actual time=1.037..21.005 rows=33 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.19..3753.04 rows=1 width=41) (actual time=0.966..20.684 rows=2 loops=1)
                     ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=20) (actual time=0.836..20.091 rows=14 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=20) (actual time=0.774..19.845 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'marvel-cinematic-universe'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=0.054..0.229 rows=14 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=12
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.045..0.046 rows=14 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.041..0.041 rows=0 loops=14)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2014)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.058..0.149 rows=16 loops=2)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.015..0.015 rows=0 loops=33)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ '%Downey%Robert%'::text)
               Rows Removed by Filter: 1
 Planning Time: 5.419 ms
 Execution Time: 22.017 ms
(26 rows)

SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=15065.52..15065.53 rows=1 width=96) (actual time=24056.435..24056.435 rows=1 loops=1)
   ->  Nested Loop  (cost=8.18..15065.51 rows=1 width=48) (actual time=569.282..24055.877 rows=88 loops=1)
         ->  Nested Loop  (cost=7.75..12575.89 rows=5443 width=37) (actual time=1.132..9718.921 rows=785477 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.19..12281.90 rows=148 width=41) (actual time=1.082..1137.376 rows=14165 loops=1)
                     ->  Nested Loop  (cost=6.76..12150.15 rows=270 width=20) (actual time=1.039..491.649 rows=35548 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..3632.40 rows=8 width=20) (actual time=0.144..48.805 rows=8 loops=1)
                                 Filter: ((keyword)::text = ANY ('{superhero,sequel,second-part,marvel-comics,based-on-comic,tv-special,fight,violence}'::text[]))
                                 Rows Removed by Filter: 134162
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1061.72 rows=300 width=8) (actual time=1.791..52.813 rows=4444 loops=8)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=23488
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=1.365..1.365 rows=4444 loops=8)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.017..0.017 rows=0 loops=35548)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2000)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.024..0.565 rows=55 loops=14165)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.017..0.017 rows=0 loops=785477)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ '%Downey%Robert%'::text)
               Rows Removed by Filter: 1
 Planning Time: 4.450 ms
 Execution Time: 24056.821 ms
(26 rows)

SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4102.27..4102.28 rows=1 width=96) (actual time=53.548..53.548 rows=1 loops=1)
   ->  Nested Loop  (cost=8.18..4102.27 rows=1 width=48) (actual time=10.053..53.520 rows=6 loops=1)
         ->  Nested Loop  (cost=7.75..3790.78 rows=681 width=37) (actual time=0.973..29.803 rows=1224 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.19..3753.04 rows=19 width=41) (actual time=0.899..18.601 rows=11 loops=1)
                     ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=20) (actual time=0.834..18.091 rows=14 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=20) (actual time=0.764..17.786 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'marvel-cinematic-universe'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=0.063..0.288 rows=14 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=12
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.040..0.040 rows=14 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.035..0.035 rows=1 loops=14)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2000)
                           Rows Removed by Filter: 0
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.037..0.951 rows=111 loops=11)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.019..0.019 rows=0 loops=1224)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ '%Downey%Robert%'::text)
               Rows Removed by Filter: 1
 Planning Time: 5.491 ms
 Execution Time: 54.012 ms
(26 rows)

SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=15092.73..15092.74 rows=1 width=96) (actual time=24349.437..24349.438 rows=1 loops=1)
   ->  Nested Loop  (cost=8.18..15051.90 rows=5443 width=48) (actual time=1.219..23508.542 rows=785477 loops=1)
         ->  Nested Loop  (cost=7.75..12575.89 rows=5443 width=37) (actual time=1.151..9824.703 rows=785477 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.19..12281.90 rows=148 width=41) (actual time=1.106..1137.542 rows=14165 loops=1)
                     ->  Nested Loop  (cost=6.76..12150.15 rows=270 width=20) (actual time=1.061..492.824 rows=35548 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..3632.40 rows=8 width=20) (actual time=0.160..50.420 rows=8 loops=1)
                                 Filter: ((keyword)::text = ANY ('{superhero,sequel,second-part,marvel-comics,based-on-comic,tv-special,fight,violence}'::text[]))
                                 Rows Removed by Filter: 134162
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1061.72 rows=300 width=8) (actual time=1.784..52.823 rows=4444 loops=8)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=23488
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=1.367..1.367 rows=4444 loops=8)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.017..0.017 rows=0 loops=35548)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2000)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.024..0.574 rows=55 loops=14165)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=19) (actual time=0.016..0.016 rows=1 loops=785477)
               Index Cond: (id = ci.person_id)
 Planning Time: 4.599 ms
 Execution Time: 24349.824 ms
(24 rows)

SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=13380.61..13380.62 rows=1 width=64) (actual time=3176.474..3176.475 rows=1 loops=1)
   ->  Nested Loop  (cost=41.24..13380.61 rows=1 width=32) (actual time=149.048..3176.401 rows=32 loops=1)
         ->  Nested Loop  (cost=41.10..13379.60 rows=1 width=36) (actual time=148.987..3176.178 rows=32 loops=1)
               Join Filter: (n.id = an.person_id)
               ->  Nested Loop  (cost=40.67..13379.10 rows=1 width=48) (actual time=148.916..3175.573 rows=14 loops=1)
                     Join Filter: (n.id = pi.person_id)
                     ->  Nested Loop  (cost=40.24..12435.27 rows=974 width=40) (actual time=0.814..2814.852 rows=17559 loops=1)
                           ->  Nested Loop  (cost=39.81..8528.28 rows=8359 width=21) (actual time=0.754..1075.387 rows=105262 loops=1)
                                 ->  Nested Loop  (cost=39.25..7243.89 rows=226 width=25) (actual time=0.667..120.033 rows=1467 loops=1)
                                       ->  Nested Loop  (cost=38.82..245.23 rows=1666 width=4) (actual time=0.581..6.962 rows=5186 loops=1)
                                             ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=4) (actual time=0.032..0.038 rows=1 loops=1)
                                                   Filter: ((link)::text = 'features'::text)
                                                   Rows Removed by Filter: 17
                                             ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..225.26 rows=1875 width=8) (actual time=0.542..4.781 rows=5186 loops=1)
                                                   Recheck Cond: (link_type_id = lt.id)
                                                   Heap Blocks: exact=132
                                                   ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.498..0.498 rows=5186 loops=1)
                                                         Index Cond: (link_type_id = lt.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..4.20 rows=1 width=21) (actual time=0.021..0.021 rows=0 loops=5186)
                                             Index Cond: (id = ml.linked_movie_id)
                                             Filter: ((production_year >= 1980) AND (production_year <= 1995))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..5.31 rows=37 width=8) (actual time=0.028..0.617 rows=72 loops=1467)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Scan using name_pkey on name n  (cost=0.43..0.47 rows=1 width=19) (actual time=0.016..0.016 rows=0 loops=105262)
                                 Index Cond: (id = ci.person_id)
                                 Filter: (((name_pcode_cf)::text >= 'A'::text) AND ((name_pcode_cf)::text <= 'F'::text) AND (((gender)::text = 'm'::text) OR (((gender)::text = 'f'::text) AND ((name)::text ~~ 'B%'::text))))
                                 Rows Removed by Filter: 1
                     ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..0.96 rows=1 width=8) (actual time=0.020..0.020 rows=0 loops=17559)
                           Index Cond: (person_id = ci.person_id)
                           Filter: ((note)::text = 'Volker Boehm'::text)
                           Rows Removed by Filter: 20
               ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.47 rows=2 width=4) (actual time=0.031..0.039 rows=2 loops=14)
                     Index Cond: (person_id = ci.person_id)
                     Filter: ((name)::text ~~ '%a%'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using info_type_pkey on info_type it  (cost=0.14..0.58 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=32)
               Index Cond: (id = pi.info_type_id)
               Filter: ((info)::text = 'mini biography'::text)
 Planning Time: 15.098 ms
 Execution Time: 3177.075 ms
(41 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=9090.16..9090.17 rows=1 width=64) (actual time=803.711..803.711 rows=1 loops=1)
   ->  Nested Loop  (cost=41.24..9090.16 rows=1 width=32) (actual time=30.815..803.656 rows=16 loops=1)
         ->  Nested Loop  (cost=41.10..9089.15 rows=1 width=36) (actual time=30.767..803.538 rows=16 loops=1)
               Join Filter: (n.id = an.person_id)
               ->  Nested Loop  (cost=40.67..9088.65 rows=1 width=48) (actual time=30.727..803.355 rows=8 loops=1)
                     Join Filter: (n.id = pi.person_id)
                     ->  Nested Loop  (cost=40.24..9045.05 rows=45 width=40) (actual time=1.234..785.104 rows=1076 loops=1)
                           ->  Nested Loop  (cost=39.81..8143.65 rows=1960 width=21) (actual time=0.735..341.468 rows=33415 loops=1)
                                 ->  Nested Loop  (cost=39.25..7243.89 rows=53 width=25) (actual time=0.650..104.997 rows=435 loops=1)
                                       ->  Nested Loop  (cost=38.82..245.23 rows=1666 width=4) (actual time=0.581..6.293 rows=5186 loops=1)
                                             ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=4) (actual time=0.025..0.031 rows=1 loops=1)
                                                   Filter: ((link)::text = 'features'::text)
                                                   Rows Removed by Filter: 17
                                             ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..225.26 rows=1875 width=8) (actual time=0.548..4.414 rows=5186 loops=1)
                                                   Recheck Cond: (link_type_id = lt.id)
                                                   Heap Blocks: exact=132
                                                   ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.503..0.503 rows=5186 loops=1)
                                                         Index Cond: (link_type_id = lt.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..4.20 rows=1 width=21) (actual time=0.018..0.018 rows=0 loops=5186)
                                             Index Cond: (id = ml.linked_movie_id)
                                             Filter: ((production_year >= 1980) AND (production_year <= 1984))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..16.61 rows=37 width=8) (actual time=0.027..0.513 rows=77 loops=435)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.013..0.013 rows=0 loops=33415)
                                 Index Cond: (id = ci.person_id)
                                 Filter: (((name_pcode_cf)::text ~~ 'D%'::text) AND ((gender)::text = 'm'::text))
                                 Rows Removed by Filter: 1
                     ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..0.96 rows=1 width=8) (actual time=0.016..0.016 rows=0 loops=1076)
                           Index Cond: (person_id = ci.person_id)
                           Filter: ((note)::text = 'Volker Boehm'::text)
                           Rows Removed by Filter: 16
               ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.47 rows=2 width=4) (actual time=0.016..0.020 rows=2 loops=8)
                     Index Cond: (person_id = ci.person_id)
                     Filter: ((name)::text ~~ '%a%'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using info_type_pkey on info_type it  (cost=0.14..0.58 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=16)
               Index Cond: (id = pi.info_type_id)
               Filter: ((info)::text = 'mini biography'::text)
 Planning Time: 14.542 ms
 Execution Time: 804.306 ms
(41 rows)

SET
                                                                                                             QUERY PLAN                                                                                                              
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=57980.82..57980.83 rows=1 width=64) (actual time=6459.569..6459.570 rows=1 loops=1)
   ->  Nested Loop  (cost=2495.17..57980.79 rows=6 width=109) (actual time=27.486..6064.644 rows=68185 loops=1)
         ->  Hash Join  (cost=2494.74..57976.67 rows=9 width=117) (actual time=27.398..5602.382 rows=109842 loops=1)
               Hash Cond: (ml.link_type_id = lt.id)
               ->  Nested Loop  (cost=2493.42..57975.22 rows=42 width=121) (actual time=27.273..5556.795 rows=127027 loops=1)
                     ->  Nested Loop  (cost=2493.13..57509.04 rows=1361 width=113) (actual time=27.191..3035.858 rows=1618304 loops=1)
                           ->  Nested Loop  (cost=2492.57..57244.88 rows=15 width=121) (actual time=27.128..2062.395 rows=12595 loops=1)
                                 ->  Nested Loop  (cost=2492.14..56116.79 rows=1360 width=102) (actual time=26.853..1363.975 rows=72979 loops=1)
                                       ->  Nested Loop  (cost=2491.71..55265.79 rows=735 width=98) (actual time=26.706..770.548 rows=84183 loops=1)
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.025..0.040 rows=1 loops=1)
                                                   Filter: ((info)::text = 'mini biography'::text)
                                                   Rows Removed by Filter: 112
                                             ->  Bitmap Heap Scan on person_info pi  (cost=2491.71..55225.61 rows=3776 width=102) (actual time=26.672..748.069 rows=84183 loops=1)
                                                   Recheck Cond: (info_type_id = it.id)
                                                   Filter: (note IS NOT NULL)
                                                   Rows Removed by Filter: 1
                                                   Heap Blocks: exact=40537
                                                   ->  Bitmap Index Scan on info_type_id_person_info  (cost=0.00..2490.77 rows=134712 width=0) (actual time=19.467..19.467 rows=84184 loops=1)
                                                         Index Cond: (info_type_id = it.id)
                                       ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..1.14 rows=2 width=4) (actual time=0.005..0.006 rows=1 loops=84183)
                                             Index Cond: (person_id = pi.person_id)
                                             Filter: ((name IS NOT NULL) AND (((name)::text ~~ '%a%'::text) OR ((name)::text ~~ 'A%'::text)))
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using name_pkey on name n  (cost=0.43..0.83 rows=1 width=19) (actual time=0.009..0.009 rows=0 loops=72979)
                                       Index Cond: (id = an.person_id)
                                       Filter: (((name_pcode_cf)::text >= 'A'::text) AND ((name_pcode_cf)::text <= 'F'::text) AND (((gender)::text = 'm'::text) OR (((gender)::text = 'f'::text) AND ((name)::text ~~ 'A%'::text))))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using person_id_cast_info on cast_info ci  (cost=0.56..12.48 rows=513 width=8) (actual time=0.014..0.055 rows=128 loops=12595)
                                 Index Cond: (person_id = n.id)
                     ->  Index Scan using linked_movie_id_movie_link on movie_link ml  (cost=0.29..0.32 rows=2 width=8) (actual time=0.001..0.001 rows=0 loops=1618304)
                           Index Cond: (linked_movie_id = ci.movie_id)
               ->  Hash  (cost=1.27..1.27 rows=4 width=4) (actual time=0.045..0.045 rows=4 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                     ->  Seq Scan on link_type lt  (cost=0.00..1.27 rows=4 width=4) (actual time=0.026..0.031 rows=4 loops=1)
                           Filter: ((link)::text = ANY ('{references,"referenced in",features,"featured in"}'::text[]))
                           Rows Removed by Filter: 14
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.46 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=109842)
               Index Cond: (id = ci.movie_id)
               Filter: ((production_year >= 1980) AND (production_year <= 2010))
               Rows Removed by Filter: 0
 Planning Time: 15.220 ms
 Execution Time: 6460.492 ms
(42 rows)

SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=42573.42..42573.43 rows=1 width=64) (actual time=4152.328..4152.328 rows=1 loops=1)
   ->  Gather  (cost=5776.21..42573.41 rows=1 width=33) (actual time=284.601..4157.093 rows=62 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Nested Loop  (cost=4776.21..41573.31 rows=1 width=33) (actual time=395.679..4144.940 rows=21 loops=3)
               ->  Nested Loop  (cost=4775.78..41569.56 rows=5 width=41) (actual time=34.504..4113.576 rows=5793 loops=3)
                     ->  Hash Join  (cost=4775.35..41567.47 rows=2 width=21) (actual time=34.415..4083.506 rows=2479 loops=3)
                           Hash Cond: (ci.role_id = rt.id)
                           ->  Nested Loop  (cost=4774.19..41566.22 rows=25 width=25) (actual time=34.130..4080.587 rows=6533 loops=3)
                                 ->  Nested Loop  (cost=4773.62..41105.65 rows=246 width=25) (actual time=33.611..526.219 rows=16109 loops=3)
                                       ->  Parallel Hash Join  (cost=4773.19..39892.48 rows=246 width=4) (actual time=33.500..305.704 rows=16109 loops=3)
                                             Hash Cond: (mc.company_id = cn.id)
                                             ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..35097.06 rows=8470 width=8) (actual time=0.126..254.487 rows=16299 loops=3)
                                                   Filter: (((note)::text ~~ '%(Japan)%'::text) AND ((note)::text !~~ '%(USA)%'::text))
                                                   Rows Removed by Filter: 853411
                                             ->  Parallel Hash  (cost=4722.92..4722.92 rows=4022 width=4) (actual time=32.888..32.888 rows=2251 loops=3)
                                                   Buckets: 8192  Batches: 1  Memory Usage: 384kB
                                                   ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=4022 width=4) (actual time=0.041..31.214 rows=2251 loops=3)
                                                         Filter: ((country_code)::text = '[jp]'::text)
                                                         Rows Removed by Filter: 76082
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..4.93 rows=1 width=21) (actual time=0.012..0.012 rows=1 loops=48328)
                                             Index Cond: (id = mc.movie_id)
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.86 rows=1 width=12) (actual time=0.212..0.220 rows=0 loops=48328)
                                       Index Cond: (movie_id = t.id)
                                       Filter: ((note)::text = '(voice: English version)'::text)
                                       Rows Removed by Filter: 32
                           ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.074..0.074 rows=1 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                 ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.048..0.051 rows=1 loops=3)
                                       Filter: ((role)::text = 'actress'::text)
                                       Rows Removed by Filter: 11
                     ->  Index Scan using person_id_aka_name on aka_name an1  (cost=0.42..1.03 rows=2 width=20) (actual time=0.010..0.011 rows=2 loops=7438)
                           Index Cond: (person_id = ci.person_id)
               ->  Index Scan using name_pkey on name n1  (cost=0.43..0.75 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=17379)
                     Index Cond: (id = an1.person_id)
                     Filter: (((name)::text ~~ '%Yo%'::text) AND ((name)::text !~~ '%Yu%'::text))
                     Rows Removed by Filter: 1
 Planning Time: 10.270 ms
 Execution Time: 4157.770 ms
(39 rows)

SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=43935.52..43935.53 rows=1 width=64) (actual time=346.857..346.857 rows=1 loops=1)
   ->  Nested Loop  (cost=1002.40..43935.52 rows=1 width=33) (actual time=342.762..346.812 rows=6 loops=1)
         ->  Nested Loop  (cost=1002.27..43935.34 rows=1 width=37) (actual time=342.692..346.730 rows=6 loops=1)
               ->  Nested Loop  (cost=1001.84..43934.59 rows=1 width=45) (actual time=341.144..344.906 rows=171 loops=1)
                     ->  Nested Loop  (cost=1001.42..43933.55 rows=1 width=25) (actual time=341.082..342.893 rows=104 loops=1)
                           Join Filter: (t.id = ci.movie_id)
                           ->  Gather  (cost=1000.85..43788.54 rows=1 width=25) (actual time=340.933..341.085 rows=4 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Nested Loop  (cost=0.85..42788.44 rows=1 width=25) (actual time=221.259..334.275 rows=1 loops=3)
                                       ->  Nested Loop  (cost=0.42..42706.13 rows=10 width=4) (actual time=0.212..271.893 rows=2832 loops=3)
                                             ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..40532.74 rows=338 width=8) (actual time=0.116..248.400 rows=2856 loops=3)
                                                   Filter: (((note)::text ~~ '%(Japan)%'::text) AND ((note)::text !~~ '%(USA)%'::text) AND (((note)::text ~~ '%(2006)%'::text) OR ((note)::text ~~ '%(2007)%'::text)))
                                                   Rows Removed by Filter: 866853
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..6.43 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=8569)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((country_code)::text = '[jp]'::text)
                                                   Rows Removed by Filter: 0
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..8.20 rows=1 width=21) (actual time=0.022..0.022 rows=0 loops=8495)
                                             Index Cond: (id = mc.movie_id)
                                             Filter: ((production_year >= 2006) AND (production_year <= 2007) AND (((title)::text ~~ 'One Piece%'::text) OR ((title)::text ~~ 'Dragon Ball Z%'::text)))
                                             Rows Removed by Filter: 1
                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..145.00 rows=1 width=12) (actual time=0.154..0.472 rows=26 loops=4)
                                 Index Cond: (movie_id = mc.movie_id)
                                 Filter: ((note)::text = '(voice: English version)'::text)
                                 Rows Removed by Filter: 17
                     ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..1.03 rows=2 width=20) (actual time=0.015..0.018 rows=2 loops=104)
                           Index Cond: (person_id = ci.person_id)
               ->  Index Scan using name_pkey on name n  (cost=0.43..0.75 rows=1 width=4) (actual time=0.010..0.010 rows=0 loops=171)
                     Index Cond: (id = an.person_id)
                     Filter: (((name)::text ~~ '%Yo%'::text) AND ((name)::text !~~ '%Yu%'::text))
                     Rows Removed by Filter: 1
         ->  Index Scan using role_type_pkey on role_type rt  (cost=0.14..0.16 rows=1 width=4) (actual time=0.012..0.012 rows=1 loops=6)
               Index Cond: (id = ci.role_id)
               Filter: ((role)::text = 'actress'::text)
 Planning Time: 10.387 ms
 Execution Time: 347.534 ms
(37 rows)

SET
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=507448.30..507448.31 rows=1 width=64) (actual time=7258.791..7258.791 rows=1 loops=1)
   ->  Gather  (cost=507448.08..507448.29 rows=2 width=64) (actual time=7255.330..7372.257 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=506448.08..506448.09 rows=1 width=64) (actual time=7248.261..7248.261 rows=1 loops=3)
               ->  Parallel Hash Join  (cost=369446.57..492488.07 rows=2792002 width=33) (actual time=6728.157..7012.540 rows=829204 loops=3)
                     Hash Cond: (ci.person_id = a1.person_id)
                     ->  Hash Join  (cost=243680.90..334088.98 rows=1215217 width=21) (actual time=4551.605..5001.882 rows=656886 loops=3)
                           Hash Cond: (t.id = ci.movie_id)
                           ->  Parallel Hash Join  (cost=44347.81..110366.87 rows=395029 width=25) (actual time=1106.803..1380.179 rows=384599 loops=3)
                                 Hash Cond: (t.id = mc.movie_id)
                                 ->  Parallel Seq Scan on title t  (cost=0.00..46532.63 rows=1053463 width=21) (actual time=0.049..263.927 rows=842771 loops=3)
                                 ->  Parallel Hash  (cost=37865.94..37865.94 rows=395029 width=4) (actual time=532.539..532.539 rows=384599 loops=3)
                                       Buckets: 131072  Batches: 16  Memory Usage: 3904kB
                                       ->  Parallel Hash Join  (cost=5350.78..37865.94 rows=395029 width=4) (actual time=45.564..411.024 rows=384599 loops=3)
                                             Hash Cond: (mc.company_id = cn.id)
                                             ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=8) (actual time=0.051..169.083 rows=869710 loops=3)
                                             ->  Parallel Hash  (cost=4722.92..4722.92 rows=50229 width=4) (actual time=45.202..45.202 rows=28281 loops=3)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 4384kB
                                                   ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=50229 width=4) (actual time=0.048..32.368 rows=28281 loops=3)
                                                         Filter: ((country_code)::text = '[us]'::text)
                                                         Rows Removed by Filter: 50051
                           ->  Hash  (cost=149779.57..149779.57 rows=3020362 width=8) (actual time=3157.817..3157.817 rows=2728943 loops=3)
                                 Buckets: 131072  Batches: 64  Memory Usage: 2675kB
                                 ->  Nested Loop  (cost=0.56..149779.57 rows=3020362 width=8) (actual time=0.109..2328.337 rows=2728943 loops=3)
                                       ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.033..0.040 rows=1 loops=3)
                                             Filter: ((role)::text = 'writer'::text)
                                             Rows Removed by Filter: 11
                                       ->  Index Scan using role_id_cast_info on cast_info ci  (cost=0.56..116829.02 rows=3294940 width=12) (actual time=0.068..1915.763 rows=2728943 loops=3)
                                             Index Cond: (role_id = rt.id)
                     ->  Parallel Hash  (cost=118870.18..118870.18 rows=375560 width=24) (actual time=1463.390..1463.390 rows=300448 loops=3)
                           Buckets: 65536  Batches: 16  Memory Usage: 3872kB
                           ->  Parallel Hash Join  (cost=22047.10..118870.18 rows=375560 width=24) (actual time=1004.188..1346.422 rows=300448 loops=3)
                                 Hash Cond: (n1.id = a1.person_id)
                                 ->  Parallel Seq Scan on name n1  (cost=0.00..72977.55 rows=1736455 width=4) (actual time=0.057..402.700 rows=1389164 loops=3)
                                 ->  Parallel Hash  (cost=15151.60..15151.60 rows=375560 width=20) (actual time=207.558..207.558 rows=300448 loops=3)
                                       Buckets: 65536  Batches: 16  Memory Usage: 3680kB
                                       ->  Parallel Seq Scan on aka_name a1  (cost=0.00..15151.60 rows=375560 width=20) (actual time=0.037..94.707 rows=300448 loops=3)
 Planning Time: 8.813 ms
 Execution Time: 7373.302 ms
(40 rows)

SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=507448.30..507448.31 rows=1 width=64) (actual time=3641.726..3641.726 rows=1 loops=1)
   ->  Gather  (cost=507448.08..507448.29 rows=2 width=64) (actual time=3638.525..3742.729 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=506448.08..506448.09 rows=1 width=64) (actual time=3631.248..3631.248 rows=1 loops=3)
               ->  Parallel Hash Join  (cost=369446.57..492488.07 rows=2792002 width=33) (actual time=3526.455..3600.559 rows=107668 loops=3)
                     Hash Cond: (ci.person_id = an1.person_id)
                     ->  Hash Join  (cost=243680.90..334088.98 rows=1215217 width=21) (actual time=1668.245..1937.351 rows=95179 loops=3)
                           Hash Cond: (t.id = ci.movie_id)
                           ->  Parallel Hash Join  (cost=44347.81..110366.87 rows=395029 width=25) (actual time=1140.633..1442.471 rows=384599 loops=3)
                                 Hash Cond: (t.id = mc.movie_id)
                                 ->  Parallel Seq Scan on title t  (cost=0.00..46532.63 rows=1053463 width=21) (actual time=0.055..280.334 rows=842771 loops=3)
                                 ->  Parallel Hash  (cost=37865.94..37865.94 rows=395029 width=4) (actual time=548.697..548.697 rows=384599 loops=3)
                                       Buckets: 131072  Batches: 16  Memory Usage: 3904kB
                                       ->  Parallel Hash Join  (cost=5350.78..37865.94 rows=395029 width=4) (actual time=54.308..424.115 rows=384599 loops=3)
                                             Hash Cond: (mc.company_id = cn.id)
                                             ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=8) (actual time=0.035..170.172 rows=869710 loops=3)
                                             ->  Parallel Hash  (cost=4722.92..4722.92 rows=50229 width=4) (actual time=53.893..53.894 rows=28281 loops=3)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 4352kB
                                                   ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=50229 width=4) (actual time=0.086..37.772 rows=28281 loops=3)
                                                         Filter: ((country_code)::text = '[us]'::text)
                                                         Rows Removed by Filter: 50051
                           ->  Hash  (cost=149779.57..149779.57 rows=3020362 width=8) (actual time=235.030..235.030 rows=276403 loops=3)
                                 Buckets: 131072  Batches: 64  Memory Usage: 1193kB
                                 ->  Nested Loop  (cost=0.56..149779.57 rows=3020362 width=8) (actual time=0.160..152.662 rows=276403 loops=3)
                                       ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.039..0.045 rows=1 loops=3)
                                             Filter: ((role)::text = 'costume designer'::text)
                                             Rows Removed by Filter: 11
                                       ->  Index Scan using role_id_cast_info on cast_info ci  (cost=0.56..116829.02 rows=3294940 width=12) (actual time=0.112..111.662 rows=276403 loops=3)
                                             Index Cond: (role_id = rt.id)
                     ->  Parallel Hash  (cost=118870.18..118870.18 rows=375560 width=24) (actual time=1536.330..1536.330 rows=300448 loops=3)
                           Buckets: 65536  Batches: 16  Memory Usage: 3872kB
                           ->  Parallel Hash Join  (cost=22047.10..118870.18 rows=375560 width=24) (actual time=1029.157..1400.236 rows=300448 loops=3)
                                 Hash Cond: (n1.id = an1.person_id)
                                 ->  Parallel Seq Scan on name n1  (cost=0.00..72977.55 rows=1736455 width=4) (actual time=0.065..425.610 rows=1389164 loops=3)
                                 ->  Parallel Hash  (cost=15151.60..15151.60 rows=375560 width=20) (actual time=210.243..210.243 rows=300448 loops=3)
                                       Buckets: 65536  Batches: 16  Memory Usage: 3680kB
                                       ->  Parallel Seq Scan on aka_name an1  (cost=0.00..15151.60 rows=375560 width=20) (actual time=0.044..95.676 rows=300448 loops=3)
 Planning Time: 10.433 ms
 Execution Time: 3743.507 ms
(40 rows)

SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=83284.29..83284.30 rows=1 width=96) (actual time=558.332..558.333 rows=1 loops=1)
   ->  Nested Loop  (cost=1003.86..83284.28 rows=1 width=49) (actual time=243.714..558.195 rows=121 loops=1)
         ->  Nested Loop  (cost=1003.44..83283.79 rows=1 width=53) (actual time=243.636..556.617 rows=123 loops=1)
               Join Filter: (ci.movie_id = mc.movie_id)
               ->  Gather  (cost=1003.01..83283.14 rows=1 width=57) (actual time=222.574..556.015 rows=139 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Nested Loop  (cost=3.01..82283.04 rows=1 width=57) (actual time=217.275..549.527 rows=46 loops=3)
                           ->  Nested Loop  (cost=2.58..82282.39 rows=1 width=45) (actual time=216.201..548.590 rows=52 loops=3)
                                 ->  Hash Join  (cost=2.15..82281.10 rows=2 width=24) (actual time=214.874..545.367 rows=142 loops=3)
                                       Hash Cond: (ci.role_id = rt.id)
                                       ->  Nested Loop  (cost=0.99..82279.86 rows=19 width=28) (actual time=214.671..545.070 rows=142 loops=3)
                                             Join Filter: (n.id = ci.person_id)
                                             ->  Nested Loop  (cost=0.42..82155.48 rows=9 width=24) (actual time=208.657..522.451 rows=519 loops=3)
                                                   ->  Parallel Seq Scan on name n  (cost=0.00..81659.82 rows=40 width=4) (actual time=207.903..496.584 rows=2256 loops=3)
                                                         Filter: (((name)::text ~~ '%Ang%'::text) AND ((gender)::text = 'f'::text))
                                                         Rows Removed by Filter: 1386908
                                                   ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..12.37 rows=2 width=20) (actual time=0.010..0.010 rows=0 loops=6768)
                                                         Index Cond: (person_id = n.id)
                                             ->  Index Scan using person_id_cast_info on cast_info ci  (cost=0.56..13.67 rows=12 width=16) (actual time=0.040..0.043 rows=0 loops=1558)
                                                   Index Cond: (person_id = an.person_id)
                                                   Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                   Rows Removed by Filter: 44
                                       ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.071..0.072 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.040..0.043 rows=1 loops=3)
                                                   Filter: ((role)::text = 'actress'::text)
                                                   Rows Removed by Filter: 11
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.65 rows=1 width=21) (actual time=0.022..0.022 rows=0 loops=425)
                                       Index Cond: (id = ci.movie_id)
                                       Filter: ((production_year >= 2005) AND (production_year <= 2015))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.65 rows=1 width=20) (actual time=0.017..0.017 rows=1 loops=155)
                                 Index Cond: (id = ci.person_role_id)
               ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.64 rows=1 width=8) (actual time=0.019..0.024 rows=1 loops=139)
                     Index Cond: (movie_id = t.id)
                     Filter: ((note IS NOT NULL) AND (((note)::text ~~ '%(USA)%'::text) OR ((note)::text ~~ '%(worldwide)%'::text)))
                     Rows Removed by Filter: 5
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.49 rows=1 width=4) (actual time=0.012..0.012 rows=1 loops=123)
               Index Cond: (id = mc.company_id)
               Filter: ((country_code)::text = '[us]'::text)
               Rows Removed by Filter: 0
 Planning Time: 15.715 ms
 Execution Time: 561.849 ms
(44 rows)

SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=83272.11..83272.12 rows=1 width=128) (actual time=553.656..553.657 rows=1 loops=1)
   ->  Nested Loop  (cost=1003.86..83272.10 rows=1 width=64) (actual time=235.419..553.584 rows=40 loops=1)
         ->  Nested Loop  (cost=1003.43..83271.40 rows=1 width=55) (actual time=229.608..552.794 rows=94 loops=1)
               ->  Nested Loop  (cost=1003.01..83270.82 rows=1 width=59) (actual time=229.546..551.929 rows=94 loops=1)
                     ->  Gather  (cost=1002.58..83270.12 rows=1 width=47) (actual time=229.444..555.095 rows=103 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop  (cost=2.58..82270.02 rows=1 width=47) (actual time=222.278..545.762 rows=34 loops=3)
                                 ->  Hash Join  (cost=2.15..82269.31 rows=1 width=39) (actual time=221.937..543.677 rows=88 loops=3)
                                       Hash Cond: (ci.role_id = rt.id)
                                       ->  Nested Loop  (cost=0.99..82268.09 rows=15 width=43) (actual time=221.719..543.408 rows=88 loops=3)
                                             Join Filter: (n.id = ci.person_id)
                                             ->  Nested Loop  (cost=0.42..82155.48 rows=9 width=39) (actual time=216.720..532.391 rows=432 loops=3)
                                                   ->  Parallel Seq Scan on name n  (cost=0.00..81659.82 rows=40 width=19) (actual time=216.045..514.720 rows=1803 loops=3)
                                                         Filter: (((name)::text ~~ '%Angel%'::text) AND ((gender)::text = 'f'::text))
                                                         Rows Removed by Filter: 1387361
                                                   ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..12.37 rows=2 width=20) (actual time=0.009..0.009 rows=0 loops=5409)
                                                         Index Cond: (person_id = n.id)
                                             ->  Index Scan using person_id_cast_info on cast_info ci  (cost=0.56..12.39 rows=10 width=16) (actual time=0.023..0.025 rows=0 loops=1296)
                                                   Index Cond: (person_id = an.person_id)
                                                   Filter: ((note)::text = '(voice)'::text)
                                                   Rows Removed by Filter: 43
                                       ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.067..0.067 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.044..0.046 rows=1 loops=3)
                                                   Filter: ((role)::text = 'actress'::text)
                                                   Rows Removed by Filter: 11
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.70 rows=1 width=8) (actual time=0.020..0.023 rows=0 loops=265)
                                       Index Cond: (movie_id = ci.movie_id)
                                       Filter: (((note)::text ~~ '%(200%)%'::text) AND (((note)::text ~~ '%(USA)%'::text) OR ((note)::text ~~ '%(worldwide)%'::text)))
                                       Rows Removed by Filter: 4
                     ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.70 rows=1 width=20) (actual time=0.010..0.010 rows=1 loops=103)
                           Index Cond: (id = ci.person_role_id)
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.59 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=94)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text = '[us]'::text)
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.69 rows=1 width=21) (actual time=0.008..0.008 rows=0 loops=94)
               Index Cond: (id = ci.movie_id)
               Filter: ((production_year >= 2007) AND (production_year <= 2010))
               Rows Removed by Filter: 1
 Planning Time: 14.503 ms
 Execution Time: 558.627 ms
(42 rows)

SET
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=160431.48..160431.49 rows=1 width=128) (actual time=957.437..957.437 rows=1 loops=1)
   ->  Gather  (cost=160431.25..160431.46 rows=2 width=128) (actual time=956.451..963.472 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=159431.25..159431.26 rows=1 width=128) (actual time=949.184..949.184 rows=1 loops=3)
               ->  Nested Loop  (cost=81913.67..159427.47 rows=378 width=64) (actual time=540.732..946.856 rows=2715 loops=3)
                     Join Filter: (ci.movie_id = t.id)
                     ->  Nested Loop  (cost=81913.24..159228.71 rows=378 width=55) (actual time=540.598..928.070 rows=2715 loops=3)
                           ->  Nested Loop  (cost=81912.82..158764.41 rows=1042 width=59) (actual time=539.253..888.674 rows=6115 loops=3)
                                 ->  Nested Loop  (cost=81912.39..158495.75 rows=392 width=51) (actual time=539.117..861.385 rows=2575 loops=3)
                                       ->  Hash Join  (cost=81911.96..157967.51 rows=810 width=39) (actual time=538.981..839.388 rows=2735 loops=3)
                                             Hash Cond: (ci.role_id = rt.id)
                                             ->  Nested Loop  (cost=81910.80..157931.79 rows=9727 width=43) (actual time=538.772..837.891 rows=2735 loops=3)
                                                   Join Filter: (n.id = ci.person_id)
                                                   ->  Parallel Hash Join  (cost=81910.23..98047.67 rows=4333 width=39) (actual time=535.187..682.361 rows=3508 loops=3)
                                                         Hash Cond: (an.person_id = n.id)
                                                         ->  Parallel Seq Scan on aka_name an  (cost=0.00..15151.60 rows=375560 width=20) (actual time=0.032..79.449 rows=300448 loops=3)
                                                         ->  Parallel Hash  (cost=81659.82..81659.82 rows=20033 width=19) (actual time=533.990..533.990 rows=16670 loops=3)
                                                               Buckets: 65536  Batches: 1  Memory Usage: 3296kB
                                                               ->  Parallel Seq Scan on name n  (cost=0.00..81659.82 rows=20033 width=19) (actual time=217.569..519.921 rows=16670 loops=3)
                                                                     Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                                                     Rows Removed by Filter: 1372493
                                                   ->  Index Scan using person_id_cast_info on cast_info ci  (cost=0.56..13.67 rows=12 width=16) (actual time=0.040..0.043 rows=1 loops=10525)
                                                         Index Cond: (person_id = an.person_id)
                                                         Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                         Rows Removed by Filter: 44
                                             ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.079..0.079 rows=1 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.051..0.054 rows=1 loops=3)
                                                         Filter: ((role)::text = 'actress'::text)
                                                         Rows Removed by Filter: 11
                                       ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.65 rows=1 width=20) (actual time=0.007..0.007 rows=1 loops=8204)
                                             Index Cond: (id = ci.person_role_id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.64 rows=5 width=8) (actual time=0.007..0.010 rows=2 loops=7726)
                                       Index Cond: (movie_id = ci.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.006..0.006 rows=0 loops=18345)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.51 rows=1 width=21) (actual time=0.006..0.006 rows=1 loops=8144)
                           Index Cond: (id = mc.movie_id)
 Planning Time: 14.916 ms
 Execution Time: 964.169 ms
(43 rows)

SET
                                                                                                  QUERY PLAN                                                                                                  
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=210684.16..210684.17 rows=1 width=128) (actual time=5620.515..5620.515 rows=1 loops=1)
   ->  Gather  (cost=210683.93..210684.14 rows=2 width=128) (actual time=5504.968..5626.896 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=209683.93..209683.94 rows=1 width=128) (actual time=5558.216..5558.217 rows=1 loops=3)
               ->  Nested Loop  (cost=140734.47..209608.99 rows=7494 width=64) (actual time=2955.615..5461.198 rows=161027 loops=3)
                     ->  Nested Loop  (cost=140734.04..207853.12 rows=3262 width=56) (actual time=2955.261..5058.215 rows=57856 loops=3)
                           Join Filter: (ci.movie_id = t.id)
                           ->  Nested Loop  (cost=140733.61..206137.89 rows=3262 width=47) (actual time=2955.185..4646.594 rows=57856 loops=3)
                                 ->  Nested Loop  (cost=140733.18..201739.10 rows=6745 width=35) (actual time=2955.101..4092.220 rows=63155 loops=3)
                                       ->  Hash Join  (cost=140732.75..179459.15 rows=29530 width=16) (actual time=2955.004..3598.735 rows=63185 loops=3)
                                             Hash Cond: (mc.movie_id = ci.movie_id)
                                             ->  Parallel Hash Join  (cost=5350.78..37865.94 rows=395029 width=4) (actual time=50.552..454.878 rows=384599 loops=3)
                                                   Hash Cond: (mc.company_id = cn.id)
                                                   ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=8) (actual time=0.041..170.730 rows=869710 loops=3)
                                                   ->  Parallel Hash  (cost=4722.92..4722.92 rows=50229 width=4) (actual time=49.178..49.179 rows=28281 loops=3)
                                                         Buckets: 131072  Batches: 1  Memory Usage: 4384kB
                                                         ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=50229 width=4) (actual time=0.053..32.859 rows=28281 loops=3)
                                                               Filter: ((country_code)::text = '[us]'::text)
                                                               Rows Removed by Filter: 50051
                                             ->  Hash  (cost=134105.54..134105.54 rows=73395 width=12) (actual time=2901.793..2901.793 rows=276166 loops=3)
                                                   Buckets: 131072 (originally 131072)  Batches: 4 (originally 2)  Memory Usage: 3984kB
                                                   ->  Nested Loop  (cost=0.56..134105.54 rows=73395 width=12) (actual time=0.299..2766.017 rows=276166 loops=3)
                                                         ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.030..0.035 rows=1 loops=3)
                                                               Filter: ((role)::text = 'actress'::text)
                                                               Rows Removed by Filter: 11
                                                         ->  Index Scan using role_id_cast_info on cast_info ci  (cost=0.56..133303.71 rows=80067 width=16) (actual time=0.264..2727.955 rows=276166 loops=3)
                                                               Index Cond: (role_id = rt.id)
                                                               Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                               Rows Removed by Filter: 7175807
                                       ->  Index Scan using name_pkey on name n  (cost=0.43..0.75 rows=1 width=19) (actual time=0.007..0.007 rows=1 loops=189554)
                                             Index Cond: (id = ci.person_id)
                                             Filter: ((gender)::text = 'f'::text)
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.65 rows=1 width=20) (actual time=0.008..0.008 rows=1 loops=189464)
                                       Index Cond: (id = ci.person_role_id)
                           ->  Index Scan using title_pkey on title t  (cost=0.43..0.51 rows=1 width=21) (actual time=0.006..0.006 rows=1 loops=173567)
                                 Index Cond: (id = mc.movie_id)
                     ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.52 rows=2 width=20) (actual time=0.005..0.006 rows=3 loops=173567)
                           Index Cond: (person_id = n.id)
 Planning Time: 15.445 ms
 Execution Time: 5627.610 ms
(42 rows)

