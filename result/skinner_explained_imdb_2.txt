SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=46738.99..46739.00 rows=1 width=64) (actual time=1167.656..1167.656 rows=1 loops=1)
   ->  Gather  (cost=46738.77..46738.98 rows=2 width=64) (actual time=1166.885..1173.726 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=45738.77..45738.78 rows=1 width=64) (actual time=1159.689..1159.689 rows=1 loops=3)
               ->  Nested Loop  (cost=4735.95..45738.76 rows=2 width=33) (actual time=150.185..1159.556 rows=35 loops=3)
                     ->  Nested Loop  (cost=4735.82..45738.46 rows=2 width=37) (actual time=150.070..1159.235 rows=35 loops=3)
                           ->  Hash Join  (cost=4735.39..45712.02 rows=5 width=25) (actual time=149.934..1157.906 rows=37 loops=3)
                                 Hash Cond: (ci.role_id = rt.id)
                                 ->  Nested Loop  (cost=4734.23..45710.67 rows=54 width=29) (actual time=149.703..1157.594 rows=50 loops=3)
                                       Join Filter: (t.id = ci.movie_id)
                                       ->  Nested Loop  (cost=4733.66..40594.00 rows=2624 width=29) (actual time=34.731..397.944 rows=1513 loops=3)
                                             ->  Parallel Hash Join  (cost=4733.23..37248.39 rows=6486 width=8) (actual time=34.407..326.482 rows=2930 loops=3)
                                                   Hash Cond: (mc.company_id = cn.id)
                                                   ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=12) (actual time=0.053..165.681 rows=869710 loops=3)
                                                   ->  Parallel Hash  (cost=4722.92..4722.92 rows=825 width=4) (actual time=33.281..33.281 rows=454 loops=3)
                                                         Buckets: 2048  Batches: 1  Memory Usage: 112kB
                                                         ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=825 width=4) (actual time=0.110..32.728 rows=454 loops=3)
                                                               Filter: ((country_code)::text = '[ru]'::text)
                                                               Rows Removed by Filter: 77879
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..0.52 rows=1 width=21) (actual time=0.023..0.023 rows=1 loops=8790)
                                                   Index Cond: (id = mc.movie_id)
                                                   Filter: (production_year > 2005)
                                                   Rows Removed by Filter: 0
                                       ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.94 rows=1 width=12) (actual time=0.470..0.501 rows=0 loops=4539)
                                             Index Cond: (movie_id = mc.movie_id)
                                             Filter: (((note)::text ~~ '%(voice)%'::text) AND ((note)::text ~~ '%(uncredited)%'::text))
                                             Rows Removed by Filter: 50
                                 ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.069..0.070 rows=1 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.045..0.048 rows=1 loops=3)
                                             Filter: ((role)::text = 'actor'::text)
                                             Rows Removed by Filter: 11
                           ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..5.29 rows=1 width=20) (actual time=0.034..0.034 rows=1 loops=112)
                                 Index Cond: (id = ci.person_role_id)
                     ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=104)
                           Index Cond: (id = mc.company_type_id)
                           Heap Fetches: 104
 Planning Time: 9.080 ms
 Execution Time: 1174.356 ms
(40 rows)

SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=43565.51..43565.52 rows=1 width=64) (actual time=563.775..563.775 rows=1 loops=1)
   ->  Gather  (cost=43565.29..43565.50 rows=2 width=64) (actual time=563.500..569.442 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=42565.29..42565.30 rows=1 width=64) (actual time=556.472..556.472 rows=1 loops=3)
               ->  Hash Join  (cost=4736.91..42565.02 rows=55 width=33) (actual time=556.465..556.465 rows=0 loops=3)
                     Hash Cond: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=4735.82..42563.63 rows=55 width=37) (actual time=556.267..556.267 rows=0 loops=3)
                           ->  Hash Join  (cost=4735.39..42496.51 rows=115 width=25) (actual time=556.267..556.267 rows=0 loops=3)
                                 Hash Cond: (ci.role_id = rt.id)
                                 ->  Nested Loop  (cost=4734.23..42490.46 rows=1377 width=29) (actual time=36.452..555.831 rows=871 loops=3)
                                       Join Filter: (t.id = ci.movie_id)
                                       ->  Nested Loop  (cost=4733.66..40594.00 rows=1021 width=29) (actual time=34.574..386.349 rows=420 loops=3)
                                             ->  Parallel Hash Join  (cost=4733.23..37248.39 rows=6486 width=8) (actual time=32.394..320.982 rows=2930 loops=3)
                                                   Hash Cond: (mc.company_id = cn.id)
                                                   ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=12) (actual time=0.040..162.461 rows=869710 loops=3)
                                                   ->  Parallel Hash  (cost=4722.92..4722.92 rows=825 width=4) (actual time=31.461..31.461 rows=454 loops=3)
                                                         Buckets: 2048  Batches: 1  Memory Usage: 112kB
                                                         ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=825 width=4) (actual time=0.063..30.937 rows=454 loops=3)
                                                               Filter: ((country_code)::text = '[ru]'::text)
                                                               Rows Removed by Filter: 77879
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..0.52 rows=1 width=21) (actual time=0.021..0.021 rows=0 loops=8790)
                                                   Index Cond: (id = mc.movie_id)
                                                   Filter: (production_year > 2010)
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.84 rows=1 width=12) (actual time=0.209..0.402 rows=2 loops=1259)
                                             Index Cond: (movie_id = mc.movie_id)
                                             Filter: ((note)::text ~~ '%(producer)%'::text)
                                             Rows Removed by Filter: 44
                                 ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.053..0.053 rows=1 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.041..0.044 rows=1 loops=3)
                                             Filter: ((role)::text = 'actor'::text)
                                             Rows Removed by Filter: 11
                           ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.58 rows=1 width=20) (never executed)
                                 Index Cond: (id = ci.person_role_id)
                     ->  Hash  (cost=1.04..1.04 rows=4 width=4) (actual time=0.061..0.061 rows=4 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.039..0.041 rows=4 loops=3)
 Planning Time: 9.011 ms
 Execution Time: 570.078 ms
(41 rows)

SET
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=652016.30..652016.31 rows=1 width=64) (actual time=5214.710..5214.710 rows=1 loops=1)
   ->  Gather  (cost=652016.08..652016.29 rows=2 width=64) (actual time=5211.427..5303.953 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=651016.08..651016.09 rows=1 width=64) (actual time=5204.409..5204.410 rows=1 loops=3)
               ->  Hash Join  (cost=609518.31..650122.02 rows=178812 width=33) (actual time=5162.248..5204.388 rows=3 loops=3)
                     Hash Cond: (ci.role_id = rt.id)
                     ->  Hash Join  (cost=609517.04..649485.59 rows=178812 width=37) (actual time=5161.957..5204.095 rows=3 loops=3)
                           Hash Cond: (mc.company_type_id = ct.id)
                           ->  Parallel Hash Join  (cost=609515.95..648517.80 rows=178812 width=41) (actual time=5161.849..5203.985 rows=3 loops=3)
                                 Hash Cond: (mc.movie_id = t.id)
                                 ->  Parallel Hash Join  (cost=5350.78..37865.94 rows=395029 width=8) (actual time=41.737..419.563 rows=384599 loops=3)
                                       Hash Cond: (mc.company_id = cn.id)
                                       ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=12) (actual time=0.033..170.826 rows=869710 loops=3)
                                       ->  Parallel Hash  (cost=4722.92..4722.92 rows=50229 width=4) (actual time=41.469..41.469 rows=28281 loops=3)
                                             Buckets: 131072  Batches: 1  Memory Usage: 4384kB
                                             ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=50229 width=4) (actual time=0.101..29.854 rows=28281 loops=3)
                                                   Filter: ((country_code)::text = '[us]'::text)
                                                   Rows Removed by Filter: 50051
                                 ->  Parallel Hash  (cost=600222.44..600222.44 rows=185178 width=45) (actual time=4611.092..4611.092 rows=4 loops=3)
                                       Buckets: 65536  Batches: 16  Memory Usage: 544kB
                                       ->  Parallel Hash Join  (cost=136144.88..600222.44 rows=185178 width=45) (actual time=4509.794..4609.582 rows=4 loops=3)
                                             Hash Cond: (ci.movie_id = t.id)
                                             ->  Parallel Hash Join  (cost=73555.68..529520.84 rows=266824 width=24) (actual time=3781.433..3973.834 rows=5 loops=3)
                                                   Hash Cond: (ci.person_role_id = chn.id)
                                                   ->  Parallel Seq Scan on cast_info ci  (cost=0.00..441459.62 rows=551821 width=12) (actual time=429.305..2849.102 rows=478480 loops=3)
                                                         Filter: ((note)::text ~~ '%(producer)%'::text)
                                                         Rows Removed by Filter: 11602968
                                                   ->  Parallel Hash  (cost=49532.75..49532.75 rows=1308475 width=20) (actual time=699.325..699.325 rows=1046780 loops=3)
                                                         Buckets: 65536  Batches: 64  Memory Usage: 3264kB
                                                         ->  Parallel Seq Scan on char_name chn  (cost=0.00..49532.75 rows=1308475 width=20) (actual time=0.056..307.788 rows=1046780 loops=3)
                                             ->  Parallel Hash  (cost=49166.29..49166.29 rows=731112 width=21) (actual time=513.929..513.929 rows=583011 loops=3)
                                                   Buckets: 65536  Batches: 32  Memory Usage: 3616kB
                                                   ->  Parallel Seq Scan on title t  (cost=0.00..49166.29 rows=731112 width=21) (actual time=0.052..289.335 rows=583011 loops=3)
                                                         Filter: (production_year > 1990)
                                                         Rows Removed by Filter: 259760
                           ->  Hash  (cost=1.04..1.04 rows=4 width=4) (actual time=0.043..0.043 rows=4 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                 ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.026..0.027 rows=4 loops=3)
                     ->  Hash  (cost=1.12..1.12 rows=12 width=4) (actual time=0.061..0.061 rows=12 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on role_type rt  (cost=0.00..1.12 rows=12 width=4) (actual time=0.031..0.034 rows=12 loops=3)
 Planning Time: 9.131 ms
 Execution Time: 5304.650 ms
(44 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3754.86..3754.87 rows=1 width=96) (actual time=243.213..243.214 rows=1 loops=1)
   ->  Nested Loop  (cost=8.32..3754.85 rows=1 width=118) (actual time=6.424..242.780 rows=310 loops=1)
         Join Filter: (mc.company_type_id = ct.id)
         Rows Removed by Join Filter: 20
         ->  Nested Loop  (cost=8.32..3753.79 rows=1 width=122) (actual time=6.401..240.074 rows=330 loops=1)
               ->  Nested Loop  (cost=7.90..3753.33 rows=1 width=107) (actual time=5.738..236.402 rows=705 loops=1)
                     Join Filter: (ml.movie_id = mc.movie_id)
                     ->  Nested Loop  (cost=7.47..3752.76 rows=1 width=111) (actual time=5.694..234.481 rows=152 loops=1)
                           Join Filter: (ml.movie_id = t.id)
                           ->  Nested Loop  (cost=7.04..3752.25 rows=1 width=90) (actual time=5.518..232.938 rows=199 loops=1)
                                 Join Filter: (ml.link_type_id = lt.id)
                                 Rows Removed by Join Filter: 303
                                 ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.030..0.040 rows=2 loops=1)
                                       Filter: ((link)::text ~~ '%follow%'::text)
                                       Rows Removed by Filter: 16
                                 ->  Nested Loop  (cost=7.04..3750.90 rows=10 width=12) (actual time=4.809..116.402 rows=251 loops=2)
                                       ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=4.799..94.161 rows=10544 loops=2)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.286..23.368 rows=1 loops=2)
                                                   Filter: ((keyword)::text = 'sequel'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=3.457..68.153 rows=10544 loops=2)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=11140
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=2.688..2.688 rows=10544 loops=2)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.002..0.002 rows=0 loops=21088)
                                             Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.007..0.007 rows=1 loops=199)
                                 Index Cond: (id = mk.movie_id)
                                 Filter: ((production_year >= 1950) AND (production_year <= 2000))
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=12) (actual time=0.008..0.011 rows=5 loops=152)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: (note IS NULL)
                           Rows Removed by Filter: 1
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.005..0.005 rows=0 loops=705)
                     Index Cond: (id = mc.company_id)
                     Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                     Rows Removed by Filter: 1
         ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=330)
               Filter: ((kind)::text = 'production companies'::text)
               Rows Removed by Filter: 1
 Planning Time: 13.291 ms
 Execution Time: 243.784 ms
(44 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3754.86..3754.87 rows=1 width=96) (actual time=62.479..62.480 rows=1 loops=1)
   ->  Nested Loop  (cost=8.32..3754.85 rows=1 width=118) (actual time=5.353..62.445 rows=14 loops=1)
         Join Filter: (mc.company_type_id = ct.id)
         ->  Nested Loop  (cost=8.32..3753.79 rows=1 width=122) (actual time=5.332..62.319 rows=14 loops=1)
               ->  Nested Loop  (cost=7.90..3753.33 rows=1 width=107) (actual time=5.306..62.150 rows=21 loops=1)
                     Join Filter: (ml.movie_id = mc.movie_id)
                     ->  Nested Loop  (cost=7.47..3752.76 rows=1 width=111) (actual time=5.272..62.078 rows=7 loops=1)
                           Join Filter: (ml.movie_id = t.id)
                           ->  Nested Loop  (cost=7.04..3752.25 rows=1 width=90) (actual time=4.406..61.662 rows=64 loops=1)
                                 Join Filter: (ml.link_type_id = lt.id)
                                 Rows Removed by Join Filter: 187
                                 ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.014..0.021 rows=1 loops=1)
                                       Filter: ((link)::text ~~ '%follows%'::text)
                                       Rows Removed by Filter: 17
                                 ->  Nested Loop  (cost=7.04..3750.90 rows=10 width=12) (actual time=4.388..61.605 rows=251 loops=1)
                                       ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=4.379..46.018 rows=10544 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.026..18.542 rows=1 loops=1)
                                                   Filter: ((keyword)::text = 'sequel'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=3.346..25.535 rows=10544 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=5570
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=2.583..2.583 rows=10544 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.001..0.001 rows=0 loops=10544)
                                             Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.006..0.006 rows=0 loops=64)
                                 Index Cond: (id = mk.movie_id)
                                 Filter: (((title)::text ~~ '%Money%'::text) AND (production_year = 1998))
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=12) (actual time=0.007..0.009 rows=3 loops=7)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: (note IS NULL)
                           Rows Removed by Filter: 1
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.007..0.007 rows=1 loops=21)
                     Index Cond: (id = mc.company_id)
                     Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                     Rows Removed by Filter: 0
         ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=14)
               Filter: ((kind)::text = 'production companies'::text)
               Rows Removed by Filter: 1
 Planning Time: 12.682 ms
 Execution Time: 63.121 ms
(43 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=6178.62..6178.63 rows=1 width=96) (actual time=602.995..602.995 rows=1 loops=1)
   ->  Nested Loop  (cost=8.32..6178.61 rows=1 width=60) (actual time=5.750..592.820 rows=6946 loops=1)
         Join Filter: (ml.movie_id = t.id)
         ->  Nested Loop  (cost=7.89..6178.11 rows=1 width=55) (actual time=5.705..557.602 rows=6946 loops=1)
               Join Filter: (ml.link_type_id = lt.id)
               Rows Removed by Join Filter: 42158
               ->  Nested Loop  (cost=7.89..6176.70 rows=1 width=59) (actual time=5.691..496.825 rows=6946 loops=1)
                     ->  Nested Loop  (cost=7.47..6147.98 rows=63 width=44) (actual time=5.048..451.074 rows=14916 loops=1)
                           Join Filter: (mc.company_type_id = ct.id)
                           Rows Removed by Join Filter: 1782
                           ->  Nested Loop  (cost=7.47..6143.61 rows=84 width=48) (actual time=5.024..442.235 rows=15510 loops=1)
                                 Join Filter: (ml.movie_id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.04..6125.70 rows=31 width=12) (actual time=4.980..424.395 rows=1460 loops=1)
                                       ->  Nested Loop  (cost=6.76..6082.75 rows=101 width=4) (actual time=4.971..322.250 rows=47403 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2793.84 rows=3 width=4) (actual time=1.098..27.676 rows=3 loops=1)
                                                   Filter: ((keyword)::text = ANY ('{sequel,revenge,based-on-novel}'::text[]))
                                                   Rows Removed by Filter: 134167
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1093.30 rows=300 width=8) (actual time=4.994..93.902 rows=15801 loops=3)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=23953
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.843..3.843 rows=15801 loops=3)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.002..0.002 rows=0 loops=47403)
                                             Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=36) (actual time=0.004..0.009 rows=11 loops=1460)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: (note IS NOT NULL)
                                       Rows Removed by Filter: 2
                           ->  Materialize  (cost=0.00..1.06 rows=3 width=4) (actual time=0.000..0.000 rows=1 loops=15510)
                                 ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=3 width=4) (actual time=0.018..0.020 rows=3 loops=1)
                                       Filter: ((kind IS NOT NULL) AND ((kind)::text <> 'production companies'::text))
                                       Rows Removed by Filter: 1
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=14916)
                           Index Cond: (id = mc.company_id)
                           Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '20th Century Fox%'::text) OR ((name)::text ~~ 'Twentieth Century Fox%'::text)))
                           Rows Removed by Filter: 1
               ->  Seq Scan on link_type lt  (cost=0.00..1.18 rows=18 width=4) (actual time=0.002..0.002 rows=7 loops=6946)
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.004..0.004 rows=1 loops=6946)
               Index Cond: (id = mk.movie_id)
               Filter: (production_year > 1950)
 Planning Time: 13.963 ms
 Execution Time: 603.712 ms
(42 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=6195.83..6195.84 rows=1 width=96) (actual time=504.955..504.956 rows=1 loops=1)
   ->  Nested Loop  (cost=8.32..6195.45 rows=51 width=60) (actual time=4.826..495.974 rows=14899 loops=1)
         ->  Nested Loop  (cost=7.90..6169.75 rows=57 width=45) (actual time=4.795..457.616 rows=14916 loops=1)
               Join Filter: (mc.company_type_id = ct.id)
               Rows Removed by Join Filter: 1782
               ->  Nested Loop  (cost=7.90..6165.70 rows=76 width=49) (actual time=4.774..451.841 rows=15510 loops=1)
                     Join Filter: (ml.movie_id = mc.movie_id)
                     ->  Nested Loop  (cost=7.47..6149.51 rows=28 width=29) (actual time=4.740..437.821 rows=1460 loops=1)
                           Join Filter: (ml.link_type_id = lt.id)
                           Rows Removed by Join Filter: 10576
                           ->  Nested Loop  (cost=7.47..6141.21 rows=28 width=33) (actual time=4.725..435.425 rows=1460 loops=1)
                                 Join Filter: (ml.movie_id = t.id)
                                 ->  Nested Loop  (cost=7.04..6125.70 rows=31 width=12) (actual time=4.684..428.096 rows=1460 loops=1)
                                       ->  Nested Loop  (cost=6.76..6082.75 rows=101 width=4) (actual time=4.666..323.156 rows=47403 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2793.84 rows=3 width=4) (actual time=1.126..36.168 rows=3 loops=1)
                                                   Filter: ((keyword)::text = ANY ('{sequel,revenge,based-on-novel}'::text[]))
                                                   Rows Removed by Filter: 134167
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1093.30 rows=300 width=8) (actual time=4.989..91.203 rows=15801 loops=3)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=23953
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.837..3.837 rows=15801 loops=3)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.002..0.002 rows=0 loops=47403)
                                             Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.004..0.004 rows=1 loops=1460)
                                       Index Cond: (id = mk.movie_id)
                                       Filter: (production_year > 1950)
                           ->  Materialize  (cost=0.00..1.27 rows=18 width=4) (actual time=0.000..0.001 rows=8 loops=1460)
                                 ->  Seq Scan on link_type lt  (cost=0.00..1.18 rows=18 width=4) (actual time=0.008..0.012 rows=16 loops=1)
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=36) (actual time=0.003..0.007 rows=11 loops=1460)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: (note IS NOT NULL)
                           Rows Removed by Filter: 2
               ->  Materialize  (cost=0.00..1.06 rows=3 width=4) (actual time=0.000..0.000 rows=1 loops=15510)
                     ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=3 width=4) (actual time=0.018..0.020 rows=3 loops=1)
                           Filter: ((kind IS NOT NULL) AND ((kind)::text <> 'production companies'::text))
                           Rows Removed by Filter: 1
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=14916)
               Index Cond: (id = mc.company_id)
               Filter: ((country_code)::text <> '[pl]'::text)
               Rows Removed by Filter: 0
 Planning Time: 13.809 ms
 Execution Time: 505.511 ms
(43 rows)

SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16837.50..16837.51 rows=1 width=96) (actual time=514.989..514.989 rows=1 loops=1)
   ->  Gather  (cost=1005.35..16837.49 rows=1 width=41) (actual time=58.425..521.218 rows=397 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Nested Loop  (cost=5.34..15837.39 rows=1 width=41) (actual time=37.564..507.045 rows=132 loops=3)
               ->  Nested Loop  (cost=5.20..15835.91 rows=9 width=45) (actual time=37.527..506.421 rows=132 loops=3)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=4.77..15811.93 rows=15 width=53) (actual time=2.406..397.032 rows=1891 loops=3)
                           ->  Nested Loop  (cost=4.35..15793.67 rows=41 width=38) (actual time=2.327..371.433 rows=2203 loops=3)
                                 Join Filter: (mi_idx.movie_id = t.id)
                                 ->  Hash Join  (cost=3.92..15669.98 rows=233 width=17) (actual time=0.536..249.383 rows=8078 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Nested Loop  (cost=2.86..15663.88 rows=932 width=21) (actual time=0.269..242.283 rows=21569 loops=3)
                                             ->  Hash Join  (cost=2.43..15179.85 rows=178 width=9) (actual time=0.166..142.842 rows=5283 loops=3)
                                                   Hash Cond: (mi_idx.info_type_id = it2.id)
                                                   ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..15122.68 rows=20101 width=13) (actual time=0.050..137.568 rows=17883 loops=3)
                                                         Filter: ((info)::text > '8.0'::text)
                                                         Rows Removed by Filter: 442129
                                                   ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.059..0.059 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.039..0.042 rows=1 loops=3)
                                                               Filter: ((info)::text = 'rating'::text)
                                                               Rows Removed by Filter: 112
                                             ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.67 rows=5 width=12) (actual time=0.013..0.017 rows=4 loops=15849)
                                                   Index Cond: (movie_id = mi_idx.movie_id)
                                       ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.065..0.065 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.042..0.043 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.52 rows=1 width=21) (actual time=0.014..0.014 rows=0 loops=24233)
                                       Index Cond: (id = mc.movie_id)
                                       Filter: ((production_year >= 2005) AND (production_year <= 2008))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.011..0.011 rows=1 loops=6610)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.59 rows=1 width=8) (actual time=0.057..0.057 rows=0 loops=5674)
                           Index Cond: (movie_id = mc.movie_id)
                           Filter: ((info)::text = ANY ('{Drama,Horror}'::text[]))
                           Rows Removed by Filter: 28
               ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=397)
                     Index Cond: (id = mi.info_type_id)
                     Filter: ((info)::text = 'genres'::text)
 Planning Time: 14.366 ms
 Execution Time: 522.278 ms
(47 rows)

SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=19208.43..19208.44 rows=1 width=64) (actual time=145.198..145.198 rows=1 loops=1)
   ->  Nested Loop  (cost=1006.70..19208.43 rows=1 width=60) (actual time=143.438..145.178 rows=10 loops=1)
         ->  Gather  (cost=1006.57..19208.26 rows=1 width=64) (actual time=143.348..146.329 rows=10 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Nested Loop  (cost=6.57..18208.16 rows=1 width=64) (actual time=135.637..136.205 rows=3 loops=3)
                     ->  Nested Loop  (cost=6.15..18207.71 rows=1 width=68) (actual time=135.601..135.916 rows=11 loops=3)
                           Join Filter: (t.id = mc.movie_id)
                           ->  Hash Join  (cost=5.72..18207.13 rows=1 width=72) (actual time=135.551..135.829 rows=1 loops=3)
                                 Hash Cond: (mi.info_type_id = it1.id)
                                 ->  Nested Loop  (cost=3.29..18204.66 rows=17 width=76) (actual time=135.247..135.591 rows=74 loops=3)
                                       Join Filter: (t.id = mi.movie_id)
                                       ->  Nested Loop  (cost=2.86..18202.37 rows=1 width=25) (actual time=135.205..135.255 rows=1 loops=3)
                                             ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=4) (actual time=135.037..135.042 rows=3 loops=3)
                                                   Hash Cond: (mi_idx.info_type_id = it2.id)
                                                   ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=8) (actual time=0.034..78.911 rows=460012 loops=3)
                                                   ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.033..0.033 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.021..0.022 rows=1 loops=3)
                                                               Filter: ((info)::text = 'bottom 10 rank'::text)
                                                               Rows Removed by Filter: 112
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..0.58 rows=1 width=21) (actual time=0.063..0.063 rows=0 loops=10)
                                                   Index Cond: (id = mi_idx.movie_id)
                                                   Filter: ((production_year > 2000) AND (((title)::text ~~ 'Birdemic%'::text) OR ((title)::text ~~ '%Movie%'::text)))
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.76 rows=42 width=51) (actual time=0.088..0.463 rows=110 loops=2)
                                             Index Cond: (movie_id = mi_idx.movie_id)
                                 ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.085..0.085 rows=1 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.063..0.066 rows=1 loops=3)
                                             Filter: ((info)::text = 'budget'::text)
                                             Rows Removed by Filter: 112
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.52 rows=5 width=12) (actual time=0.091..0.118 rows=16 loops=2)
                                 Index Cond: (movie_id = mi.movie_id)
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.025..0.025 rows=0 loops=33)
                           Index Cond: (id = mc.company_id)
                           Filter: ((country_code)::text = '[us]'::text)
                           Rows Removed by Filter: 1
         ->  Index Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=10)
               Index Cond: (id = mc.company_type_id)
               Filter: ((kind IS NOT NULL) AND (((kind)::text = 'production companies'::text) OR ((kind)::text = 'distributors'::text)))
 Planning Time: 14.755 ms
 Execution Time: 147.184 ms
(43 rows)

SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=17908.15..17908.16 rows=1 width=96) (actual time=1715.991..1715.992 rows=1 loops=1)
   ->  Gather  (cost=1007.63..17908.14 rows=2 width=41) (actual time=7.232..1719.075 rows=4711 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Hash Join  (cost=7.63..16907.94 rows=1 width=41) (actual time=4.203..1705.015 rows=1570 loops=3)
               Hash Cond: (mi.info_type_id = it1.id)
               ->  Nested Loop  (cost=5.20..16905.24 rows=98 width=45) (actual time=3.980..1703.513 rows=1570 loops=3)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=4.77..16670.19 rows=138 width=53) (actual time=1.641..1085.148 rows=14111 loops=3)
                           ->  Hash Join  (cost=4.35..16500.42 rows=381 width=38) (actual time=0.485..895.169 rows=22822 loops=3)
                                 Hash Cond: (mc.company_type_id = ct.id)
                                 ->  Nested Loop  (cost=3.29..16491.13 rows=1523 width=42) (actual time=0.362..876.801 rows=56386 loops=3)
                                       ->  Nested Loop  (cost=2.86..16296.91 rows=291 width=30) (actual time=0.293..650.399 rows=17435 loops=3)
                                             ->  Hash Join  (cost=2.43..15342.82 rows=708 width=9) (actual time=0.149..184.942 rows=40524 loops=3)
                                                   Hash Cond: (mi_idx.info_type_id = it2.id)
                                                   ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..15122.68 rows=79942 width=13) (actual time=0.060..160.253 rows=64632 loops=3)
                                                         Filter: ((info)::text > '7.0'::text)
                                                         Rows Removed by Filter: 395380
                                                   ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.032..0.032 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.020..0.022 rows=1 loops=3)
                                                               Filter: ((info)::text = 'rating'::text)
                                                               Rows Removed by Filter: 112
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..1.35 rows=1 width=21) (actual time=0.011..0.011 rows=0 loops=121572)
                                                   Index Cond: (id = mi_idx.movie_id)
                                                   Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.62 rows=5 width=12) (actual time=0.009..0.011 rows=3 loops=52304)
                                             Index Cond: (movie_id = t.id)
                                 ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.044..0.044 rows=1 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.028..0.030 rows=1 loops=3)
                                             Filter: ((kind)::text = 'production companies'::text)
                                             Rows Removed by Filter: 3
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.008..0.008 rows=1 loops=68466)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.69 rows=1 width=8) (actual time=0.043..0.043 rows=0 loops=42332)
                           Index Cond: (movie_id = mc.movie_id)
                           Filter: ((info)::text = ANY ('{Drama,Horror,Western,Family}'::text[]))
                           Rows Removed by Filter: 29
               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.079..0.079 rows=1 loops=3)
                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                     ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.048..0.060 rows=1 loops=3)
                           Filter: ((info)::text = 'genres'::text)
                           Rows Removed by Filter: 112
 Planning Time: 13.514 ms
 Execution Time: 1723.336 ms
(49 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=20155.74..20155.75 rows=1 width=96) (actual time=2575.503..2575.503 rows=1 loops=1)
   ->  Gather  (cost=20155.52..20155.73 rows=2 width=96) (actual time=2574.213..2580.205 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=19155.52..19155.53 rows=1 width=96) (actual time=2567.149..2567.150 rows=1 loops=3)
               ->  Hash Join  (cost=8.73..19155.43 rows=11 width=65) (actual time=542.380..2548.091 rows=37034 loops=3)
                     Hash Cond: (mi.info_type_id = it2.id)
                     ->  Nested Loop  (cost=6.30..19149.54 rows=1275 width=69) (actual time=542.118..2518.283 rows=172109 loops=3)
                           ->  Nested Loop  (cost=5.87..19075.02 rows=39 width=34) (actual time=542.018..2153.723 rows=5490 loops=3)
                                 ->  Hash Join  (cost=5.45..18650.83 rows=952 width=38) (actual time=539.386..1652.840 rows=100870 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Nested Loop  (cost=4.39..18629.17 rows=3809 width=42) (actual time=539.276..1599.470 rows=257695 loops=3)
                                             ->  Hash Join  (cost=3.96..18186.75 rows=727 width=30) (actual time=539.129..1142.535 rows=69960 loops=3)
                                                   Hash Cond: (t.kind_id = kt.id)
                                                   ->  Nested Loop  (cost=2.86..18164.20 rows=5089 width=34) (actual time=0.242..1101.095 rows=153308 loops=3)
                                                         ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=9) (actual time=0.143..190.625 rows=153308 loops=3)
                                                               Hash Cond: (miidx.info_type_id = it.id)
                                                               ->  Parallel Seq Scan on movie_info_idx miidx  (cost=0.00..13685.15 rows=575015 width=13) (actual time=0.036..88.555 rows=460012 loops=3)
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.046..0.046 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.025..0.028 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'rating'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=25) (actual time=0.005..0.005 rows=1 loops=459925)
                                                               Index Cond: (id = miidx.movie_id)
                                                   ->  Hash  (cost=1.09..1.09 rows=1 width=4) (actual time=0.035..0.036 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.024..0.026 rows=1 loops=3)
                                                               Filter: ((kind)::text = 'movie'::text)
                                                               Rows Removed by Filter: 6
                                             ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.56 rows=5 width=12) (actual time=0.004..0.005 rows=4 loops=209880)
                                                   Index Cond: (movie_id = t.id)
                                       ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.045..0.045 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.033..0.034 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                 ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=302610)
                                       Index Cond: (id = mc.company_id)
                                       Filter: ((country_code)::text = '[de]'::text)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.49 rows=42 width=51) (actual time=0.012..0.059 rows=31 loops=16470)
                                 Index Cond: (movie_id = t.id)
                     ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.076..0.076 rows=1 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.041..0.051 rows=1 loops=3)
                                 Filter: ((info)::text = 'release dates'::text)
                                 Rows Removed by Filter: 112
 Planning Time: 21.118 ms
 Execution Time: 2581.079 ms
(50 rows)

SET
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=19206.33..19206.34 rows=1 width=96) (actual time=1402.008..1402.009 rows=1 loops=1)
   ->  Gather  (cost=1004.54..19206.32 rows=1 width=41) (actual time=654.291..1410.880 rows=372 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Nested Loop  (cost=4.54..18206.22 rows=1 width=41) (actual time=688.898..1393.983 rows=124 loops=3)
               ->  Nested Loop  (cost=4.40..18205.87 rows=2 width=45) (actual time=688.813..1392.406 rows=707 loops=3)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=3.97..18203.87 rows=1 width=53) (actual time=688.684..1389.743 rows=20 loops=3)
                           ->  Nested Loop  (cost=3.84..18203.70 rows=1 width=57) (actual time=688.605..1389.466 rows=54 loops=3)
                                 ->  Nested Loop  (cost=3.42..18203.25 rows=1 width=42) (actual time=665.801..1387.028 rows=104 loops=3)
                                       Join Filter: (t.id = mc.movie_id)
                                       ->  Nested Loop  (cost=2.99..18202.60 rows=1 width=30) (actual time=665.661..1385.902 rows=30 loops=3)
                                             ->  Nested Loop  (cost=2.86..18202.37 rows=1 width=34) (actual time=5.230..1385.506 rows=117 loops=3)
                                                   ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=9) (actual time=0.284..195.632 rows=153308 loops=3)
                                                         Hash Cond: (miidx.info_type_id = it.id)
                                                         ->  Parallel Seq Scan on movie_info_idx miidx  (cost=0.00..13685.15 rows=575015 width=13) (actual time=0.040..87.484 rows=460012 loops=3)
                                                         ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.072..0.073 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.049..0.052 rows=1 loops=3)
                                                                     Filter: ((info)::text = 'rating'::text)
                                                                     Rows Removed by Filter: 112
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.58 rows=1 width=25) (actual time=0.007..0.007 rows=0 loops=459925)
                                                         Index Cond: (id = miidx.movie_id)
                                                         Filter: (((title)::text <> ''::text) AND (((title)::text ~~ '%Champion%'::text) OR ((title)::text ~~ '%Loser%'::text)))
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using kind_type_pkey on kind_type kt  (cost=0.13..0.18 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=352)
                                                   Index Cond: (id = t.kind_id)
                                                   Filter: ((kind)::text = 'movie'::text)
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.59 rows=5 width=12) (actual time=0.028..0.035 rows=3 loops=90)
                                             Index Cond: (movie_id = miidx.movie_id)
                                 ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.022..0.022 rows=1 loops=313)
                                       Index Cond: (id = mc.company_id)
                                       Filter: ((country_code)::text = '[us]'::text)
                                       Rows Removed by Filter: 0
                           ->  Index Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=161)
                                 Index Cond: (id = mc.company_type_id)
                                 Filter: ((kind)::text = 'production companies'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.48 rows=42 width=8) (actual time=0.029..0.118 rows=35 loops=61)
                           Index Cond: (movie_id = mc.movie_id)
               ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=2122)
                     Index Cond: (id = mi.info_type_id)
                     Filter: ((info)::text = 'release dates'::text)
                     Rows Removed by Filter: 1
 Planning Time: 21.754 ms
 Execution Time: 1411.927 ms
(47 rows)

SET
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=19206.33..19206.34 rows=1 width=96) (actual time=1365.018..1365.018 rows=1 loops=1)
   ->  Gather  (cost=1004.54..19206.32 rows=1 width=41) (actual time=745.950..1374.042 rows=53 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Nested Loop  (cost=4.54..18206.22 rows=1 width=41) (actual time=1030.420..1357.108 rows=18 loops=3)
               ->  Nested Loop  (cost=4.40..18205.87 rows=2 width=45) (actual time=1030.338..1356.908 rows=73 loops=3)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=3.97..18203.87 rows=1 width=53) (actual time=1030.265..1356.544 rows=5 loops=3)
                           ->  Nested Loop  (cost=3.84..18203.70 rows=1 width=57) (actual time=1030.058..1356.444 rows=16 loops=3)
                                 ->  Nested Loop  (cost=3.42..18203.25 rows=1 width=42) (actual time=1029.980..1355.654 rows=32 loops=3)
                                       Join Filter: (t.id = mc.movie_id)
                                       ->  Nested Loop  (cost=2.99..18202.60 rows=1 width=30) (actual time=1029.897..1355.481 rows=10 loops=3)
                                             ->  Nested Loop  (cost=2.86..18202.37 rows=1 width=34) (actual time=73.477..1355.372 rows=22 loops=3)
                                                   ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=9) (actual time=0.322..195.919 rows=153308 loops=3)
                                                         Hash Cond: (miidx.info_type_id = it.id)
                                                         ->  Parallel Seq Scan on movie_info_idx miidx  (cost=0.00..13685.15 rows=575015 width=13) (actual time=0.040..88.057 rows=460012 loops=3)
                                                         ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.079..0.079 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.055..0.058 rows=1 loops=3)
                                                                     Filter: ((info)::text = 'rating'::text)
                                                                     Rows Removed by Filter: 112
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.58 rows=1 width=25) (actual time=0.007..0.007 rows=0 loops=459925)
                                                         Index Cond: (id = miidx.movie_id)
                                                         Filter: (((title)::text <> ''::text) AND (((title)::text ~~ 'Champion%'::text) OR ((title)::text ~~ 'Loser%'::text)))
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using kind_type_pkey on kind_type kt  (cost=0.13..0.18 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=66)
                                                   Index Cond: (id = t.kind_id)
                                                   Filter: ((kind)::text = 'movie'::text)
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.59 rows=5 width=12) (actual time=0.013..0.015 rows=3 loops=29)
                                             Index Cond: (movie_id = miidx.movie_id)
                                 ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.024..0.024 rows=0 loops=95)
                                       Index Cond: (id = mc.company_id)
                                       Filter: ((country_code)::text = '[us]'::text)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=47)
                                 Index Cond: (id = mc.company_type_id)
                                 Filter: ((kind)::text = 'production companies'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.48 rows=42 width=8) (actual time=0.022..0.071 rows=16 loops=14)
                           Index Cond: (movie_id = mc.movie_id)
               ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=218)
                     Index Cond: (id = mi.info_type_id)
                     Filter: ((info)::text = 'release dates'::text)
                     Rows Removed by Filter: 1
 Planning Time: 21.816 ms
 Execution Time: 1374.963 ms
(47 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=20770.24..20770.25 rows=1 width=96) (actual time=4391.457..4391.458 rows=1 loops=1)
   ->  Gather  (cost=20770.01..20770.22 rows=2 width=96) (actual time=4390.768..4398.222 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=19770.01..19770.02 rows=1 width=96) (actual time=4383.295..4383.295 rows=1 loops=3)
               ->  Hash Join  (cost=8.73..19769.26 rows=100 width=41) (actual time=618.717..4272.524 rows=223463 loops=3)
                     Hash Cond: (mi.info_type_id = it2.id)
                     ->  Nested Loop  (cost=6.30..19736.13 rows=11276 width=45) (actual time=618.409..4082.588 rows=1438861 loops=3)
                           ->  Nested Loop  (cost=5.87..19075.02 rows=346 width=53) (actual time=618.309..2508.591 rows=29098 loops=3)
                                 ->  Hash Join  (cost=5.45..18650.83 rows=952 width=38) (actual time=618.154..1860.848 rows=100870 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Nested Loop  (cost=4.39..18629.17 rows=3809 width=42) (actual time=618.053..1805.284 rows=257695 loops=3)
                                             ->  Hash Join  (cost=3.96..18186.75 rows=727 width=30) (actual time=617.903..1307.790 rows=69960 loops=3)
                                                   Hash Cond: (t.kind_id = kt.id)
                                                   ->  Nested Loop  (cost=2.86..18164.20 rows=5089 width=34) (actual time=0.256..1265.030 rows=153308 loops=3)
                                                         ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=9) (actual time=0.142..200.340 rows=153308 loops=3)
                                                               Hash Cond: (miidx.info_type_id = it.id)
                                                               ->  Parallel Seq Scan on movie_info_idx miidx  (cost=0.00..13685.15 rows=575015 width=13) (actual time=0.038..93.016 rows=460012 loops=3)
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.045..0.045 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.025..0.028 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'rating'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=25) (actual time=0.006..0.006 rows=1 loops=459925)
                                                               Index Cond: (id = miidx.movie_id)
                                                   ->  Hash  (cost=1.09..1.09 rows=1 width=4) (actual time=0.047..0.047 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.036..0.038 rows=1 loops=3)
                                                               Filter: ((kind)::text = 'movie'::text)
                                                               Rows Removed by Filter: 6
                                             ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.56 rows=5 width=12) (actual time=0.004..0.006 rows=4 loops=209880)
                                                   Index Cond: (movie_id = t.id)
                                       ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.043..0.043 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.030..0.031 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                 ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.006..0.006 rows=0 loops=302610)
                                       Index Cond: (id = mc.company_id)
                                       Filter: ((country_code)::text = '[us]'::text)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.49 rows=42 width=8) (actual time=0.009..0.045 rows=49 loops=87293)
                                 Index Cond: (movie_id = t.id)
                     ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.084..0.084 rows=1 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.049..0.060 rows=1 loops=3)
                                 Filter: ((info)::text = 'release dates'::text)
                                 Rows Removed by Filter: 112
 Planning Time: 21.779 ms
 Execution Time: 4399.107 ms
(50 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7394.40..7394.41 rows=1 width=64) (actual time=1441.286..1441.286 rows=1 loops=1)
   ->  Nested Loop  (cost=8.05..7394.40 rows=1 width=22) (actual time=39.148..1440.351 rows=761 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         Rows Removed by Join Filter: 117
         ->  Nested Loop  (cost=8.05..7391.97 rows=1 width=26) (actual time=39.128..1429.761 rows=878 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=7.62..7390.07 rows=1 width=34) (actual time=37.677..1171.967 rows=1147 loops=1)
                     Join Filter: (mi_idx.info_type_id = it2.id)
                     Rows Removed by Join Filter: 2256
                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.024..0.027 rows=1 loops=1)
                           Filter: ((info)::text = 'rating'::text)
                           Rows Removed by Filter: 112
                     ->  Nested Loop  (cost=7.62..7387.55 rows=9 width=38) (actual time=36.663..1171.169 rows=3403 loops=1)
                           Join Filter: (t.id = mi_idx.movie_id)
                           ->  Nested Loop  (cost=7.19..7385.94 rows=3 width=25) (actual time=36.589..1127.461 rows=1966 loops=1)
                                 Join Filter: (t.kind_id = kt.id)
                                 Rows Removed by Join Filter: 616
                                 ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.029..0.032 rows=1 loops=1)
                                       Filter: ((kind)::text = 'movie'::text)
                                       Rows Removed by Filter: 6
                                 ->  Nested Loop  (cost=7.19..7384.59 rows=21 width=29) (actual time=8.549..1126.486 rows=2582 loops=1)
                                       ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=7.880..550.020 rows=37091 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.988..38.552 rows=3 loops=1)
                                                   Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                   Rows Removed by Filter: 134167
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=5.057..164.686 rows=12364 loops=3)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=26312
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.758..3.758 rows=12364 loops=3)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.014..0.014 rows=0 loops=37091)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: (production_year > 2010)
                                             Rows Removed by Filter: 1
                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=13) (actual time=0.020..0.021 rows=2 loops=1966)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((info)::text < '8.5'::text)
                                 Rows Removed by Filter: 0
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.191..0.223 rows=1 loops=1147)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,USA,American}'::text[]))
                     Rows Removed by Filter: 69
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=878)
               Filter: ((info)::text = 'countries'::text)
               Rows Removed by Filter: 21
 Planning Time: 13.944 ms
 Execution Time: 1441.854 ms
(47 rows)

SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4874.32..4874.33 rows=1 width=64) (actual time=581.683..581.684 rows=1 loops=1)
   ->  Nested Loop  (cost=8.05..4874.31 rows=1 width=22) (actual time=370.736..581.666 rows=1 loops=1)
         Join Filter: (t.kind_id = kt.id)
         Rows Removed by Join Filter: 1
         ->  Nested Loop  (cost=8.05..4873.21 rows=1 width=26) (actual time=15.326..581.622 rows=2 loops=1)
               Join Filter: (mi_idx.info_type_id = it2.id)
               Rows Removed by Join Filter: 1
               ->  Nested Loop  (cost=8.05..4870.79 rows=1 width=30) (actual time=15.282..581.560 rows=3 loops=1)
                     Join Filter: (t.id = mi_idx.movie_id)
                     ->  Nested Loop  (cost=7.62..4870.28 rows=1 width=33) (actual time=15.235..581.279 rows=8 loops=1)
                           Join Filter: (mi.info_type_id = it1.id)
                           ->  Nested Loop  (cost=7.62..4867.85 rows=1 width=37) (actual time=15.220..581.141 rows=8 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=7.19..4865.95 rows=1 width=29) (actual time=14.884..579.010 rows=15 loops=1)
                                       ->  Nested Loop  (cost=6.76..4832.75 rows=67 width=4) (actual time=9.759..281.394 rows=19528 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=2 width=4) (actual time=2.075..32.207 rows=1 loops=1)
                                                   Filter: ((keyword)::text = ANY ('{murder,murder-in-title}'::text[]))
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1100.31 rows=300 width=8) (actual time=7.676..240.382 rows=19528 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=12389
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=5.842..5.842 rows=19528 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.50 rows=1 width=25) (actual time=0.014..0.014 rows=0 loops=19528)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: ((production_year > 2010) AND (((title)::text ~~ '%murder%'::text) OR ((title)::text ~~ '%Murder%'::text) OR ((title)::text ~~ '%Mord%'::text)))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.132..0.140 rows=1 loops=15)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,USA,American}'::text[]))
                                       Rows Removed by Filter: 12
                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=8)
                                 Filter: ((info)::text = 'countries'::text)
                                 Rows Removed by Filter: 7
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=13) (actual time=0.032..0.033 rows=0 loops=8)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((info)::text > '6.0'::text)
                           Rows Removed by Filter: 1
               ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.016..0.016 rows=1 loops=3)
                     Filter: ((info)::text = 'rating'::text)
                     Rows Removed by Filter: 104
         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.016..0.017 rows=1 loops=2)
               Filter: ((kind)::text = 'movie'::text)
               Rows Removed by Filter: 3
 Planning Time: 13.428 ms
 Execution Time: 582.313 ms
(46 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7403.14..7403.15 rows=1 width=64) (actual time=2463.315..2463.315 rows=1 loops=1)
   ->  Nested Loop  (cost=8.05..7403.13 rows=1 width=22) (actual time=8.311..2458.498 rows=4115 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         Rows Removed by Join Filter: 594
         ->  Nested Loop  (cost=8.05..7400.71 rows=1 width=26) (actual time=8.291..2402.512 rows=4709 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=7.62..7398.81 rows=1 width=34) (actual time=8.138..1269.807 rows=5949 loops=1)
                     Join Filter: (mi_idx.info_type_id = it2.id)
                     Rows Removed by Join Filter: 11942
                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.024..0.026 rows=1 loops=1)
                           Filter: ((info)::text = 'rating'::text)
                           Rows Removed by Filter: 112
                     ->  Nested Loop  (cost=7.62..7395.82 rows=46 width=38) (actual time=8.109..1266.014 rows=17891 loops=1)
                           Join Filter: (t.id = mi_idx.movie_id)
                           ->  Nested Loop  (cost=7.19..7387.25 rows=16 width=25) (actual time=8.064..1112.712 rows=8073 loops=1)
                                 Join Filter: (t.kind_id = kt.id)
                                 Rows Removed by Join Filter: 4332
                                 ->  Nested Loop  (cost=7.19..7384.59 rows=55 width=29) (actual time=7.913..1102.162 rows=9739 loops=1)
                                       ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=7.855..532.103 rows=37091 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.994..39.674 rows=3 loops=1)
                                                   Filter: ((keyword IS NOT NULL) AND ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[])))
                                                   Rows Removed by Filter: 134167
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=5.069..158.273 rows=12364 loops=3)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=26312
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.768..3.768 rows=12364 loops=3)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.014..0.014 rows=0 loops=37091)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: (production_year > 2005)
                                             Rows Removed by Filter: 1
                                 ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=9739)
                                       ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.024..0.026 rows=2 loops=1)
                                             Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                             Rows Removed by Filter: 5
                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=13) (actual time=0.016..0.017 rows=2 loops=8073)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((info)::text < '8.5'::text)
                                 Rows Removed by Filter: 0
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.164..0.189 rows=1 loops=5949)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                     Rows Removed by Filter: 71
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=4709)
               Filter: ((info)::text = 'countries'::text)
               Rows Removed by Filter: 20
 Planning Time: 13.178 ms
 Execution Time: 2463.888 ms
(48 rows)

SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=51296.76..51296.77 rows=1 width=64) (actual time=685.602..685.602 rows=1 loops=1)
   ->  Gather  (cost=51296.54..51296.75 rows=2 width=64) (actual time=684.916..690.702 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=50296.54..50296.55 rows=1 width=64) (actual time=677.556..677.557 rows=1 loops=3)
               ->  Nested Loop  (cost=5353.19..50296.50 rows=8 width=60) (actual time=88.414..677.418 rows=109 loops=3)
                     ->  Nested Loop  (cost=5352.77..50292.99 rows=8 width=64) (actual time=88.308..675.887 rows=109 loops=3)
                           ->  Nested Loop  (cost=5352.34..50291.15 rows=1 width=76) (actual time=87.489..675.363 rows=19 loops=3)
                                 ->  Nested Loop  (cost=5352.20..50290.92 rows=1 width=80) (actual time=87.400..675.199 rows=19 loops=3)
                                       ->  Nested Loop  (cost=5352.07..50290.76 rows=1 width=84) (actual time=87.297..675.013 rows=19 loops=3)
                                             ->  Nested Loop  (cost=5351.63..48102.52 rows=1107 width=33) (actual time=50.546..472.659 rows=1711 loops=3)
                                                   ->  Nested Loop  (cost=5351.20..46229.21 rows=2025 width=12) (actual time=50.429..413.437 rows=4566 loops=3)
                                                         ->  Parallel Hash Join  (cost=5350.78..40467.98 rows=2789 width=8) (actual time=49.571..318.098 rows=14612 loops=3)
                                                               Hash Cond: (mc.company_id = cn.id)
                                                               ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..35097.06 rows=7675 width=12) (actual time=0.074..256.679 rows=20555 loops=3)
                                                                     Filter: (((note)::text ~~ '%(200%)%'::text) AND ((note)::text ~~ '%(worldwide)%'::text))
                                                                     Rows Removed by Filter: 849155
                                                               ->  Parallel Hash  (cost=4722.92..4722.92 rows=50229 width=4) (actual time=48.111..48.111 rows=28281 loops=3)
                                                                     Buckets: 131072  Batches: 1  Memory Usage: 4384kB
                                                                     ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=50229 width=4) (actual time=0.054..33.832 rows=28281 loops=3)
                                                                           Filter: ((country_code)::text = '[us]'::text)
                                                                           Rows Removed by Filter: 50051
                                                         ->  Index Only Scan using movie_id_aka_title on aka_title at  (cost=0.42..2.04 rows=3 width=4) (actual time=0.005..0.006 rows=0 loops=43837)
                                                               Index Cond: (movie_id = mc.movie_id)
                                                               Heap Fetches: 13699
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.93 rows=1 width=21) (actual time=0.012..0.012 rows=0 loops=13699)
                                                         Index Cond: (id = at.movie_id)
                                                         Filter: (production_year > 2000)
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.97 rows=1 width=51) (actual time=0.117..0.117 rows=0 loops=5134)
                                                   Index Cond: (movie_id = t.id)
                                                   Filter: (((note)::text ~~ '%internet%'::text) AND ((info)::text ~~ 'USA:% 200%'::text))
                                                   Rows Removed by Filter: 72
                                       ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=57)
                                             Index Cond: (id = mc.company_type_id)
                                             Heap Fetches: 57
                                 ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.19 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=57)
                                       Index Cond: (id = mi.info_type_id)
                                       Filter: ((info)::text = 'release dates'::text)
                           ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.36 rows=47 width=8) (actual time=0.022..0.025 rows=6 loops=57)
                                 Index Cond: (movie_id = t.id)
                     ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.013..0.013 rows=1 loops=328)
                           Index Cond: (id = mk.keyword_id)
                           Heap Fetches: 328
 Planning Time: 29.948 ms
 Execution Time: 691.425 ms
(46 rows)

SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=6434.72..6434.73 rows=1 width=64) (actual time=68.619..68.619 rows=1 loops=1)
   ->  Gather  (cost=6434.61..6434.72 rows=1 width=64) (actual time=68.425..71.309 rows=2 loops=1)
         Workers Planned: 1
         Workers Launched: 1
         ->  Partial Aggregate  (cost=5434.61..5434.62 rows=1 width=64) (actual time=62.441..62.442 rows=1 loops=2)
               ->  Nested Loop  (cost=2.84..5434.58 rows=5 width=60) (actual time=47.517..62.411 rows=18 loops=2)
                     ->  Nested Loop  (cost=2.42..5432.39 rows=5 width=64) (actual time=47.457..61.936 rows=18 loops=2)
                           ->  Nested Loop  (cost=1.99..5430.46 rows=1 width=76) (actual time=40.696..61.797 rows=2 loops=2)
                                 ->  Nested Loop  (cost=1.85..5430.22 rows=1 width=80) (actual time=40.665..61.760 rows=2 loops=2)
                                       ->  Nested Loop  (cost=1.41..5427.71 rows=1 width=29) (actual time=35.724..59.308 rows=13 loops=2)
                                             ->  Nested Loop  (cost=0.98..5426.78 rows=1 width=8) (actual time=35.659..58.718 rows=14 loops=2)
                                                   ->  Nested Loop  (cost=0.85..5426.62 rows=1 width=12) (actual time=35.610..58.610 rows=14 loops=2)
                                                         ->  Nested Loop  (cost=0.43..5424.56 rows=1 width=8) (actual time=34.689..56.415 rows=139 loops=2)
                                                               ->  Parallel Seq Scan on company_name cn  (cost=0.00..5068.50 rows=1 width=4) (actual time=34.593..46.052 rows=0 loops=2)
                                                                     Filter: (((country_code)::text = '[us]'::text) AND ((name)::text = 'YouTube'::text))
                                                                     Rows Removed by Filter: 117498
                                                               ->  Index Scan using company_id_movie_companies on movie_companies mc  (cost=0.43..356.04 rows=1 width=12) (actual time=0.189..20.621 rows=278 loops=1)
                                                                     Index Cond: (company_id = cn.id)
                                                                     Filter: (((note)::text ~~ '%(200%)%'::text) AND ((note)::text ~~ '%(worldwide)%'::text))
                                                                     Rows Removed by Filter: 1180
                                                         ->  Index Only Scan using movie_id_aka_title on aka_title at  (cost=0.42..2.04 rows=3 width=4) (actual time=0.014..0.015 rows=0 loops=278)
                                                               Index Cond: (movie_id = mc.movie_id)
                                                               Heap Fetches: 27
                                                   ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=27)
                                                         Index Cond: (id = mc.company_type_id)
                                                         Heap Fetches: 27
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..0.93 rows=1 width=21) (actual time=0.043..0.043 rows=1 loops=27)
                                                   Index Cond: (id = at.movie_id)
                                                   Filter: ((production_year >= 2005) AND (production_year <= 2010))
                                                   Rows Removed by Filter: 0
                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.51 rows=1 width=51) (actual time=0.177..0.187 rows=0 loops=26)
                                             Index Cond: (movie_id = t.id)
                                             Filter: (((note)::text ~~ '%internet%'::text) AND ((info)::text ~~ 'USA:% 200%'::text))
                                             Rows Removed by Filter: 19
                                 ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.19 rows=1 width=4) (actual time=0.023..0.023 rows=1 loops=3)
                                       Index Cond: (id = mi.info_type_id)
                                       Filter: ((info)::text = 'release dates'::text)
                           ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.46 rows=47 width=8) (actual time=0.080..0.086 rows=12 loops=3)
                                 Index Cond: (movie_id = t.id)
                     ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.024..0.024 rows=1 loops=37)
                           Index Cond: (id = mk.keyword_id)
                           Heap Fetches: 37
 Planning Time: 30.189 ms
 Execution Time: 72.007 ms
(44 rows)

SET
                                                                                                          QUERY PLAN                                                                                                          
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=271217.23..271217.24 rows=1 width=64) (actual time=1353.292..1353.292 rows=1 loops=1)
   ->  Gather  (cost=271217.01..271217.22 rows=2 width=64) (actual time=1353.072..1358.101 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=270217.01..270217.02 rows=1 width=64) (actual time=1345.575..1345.576 rows=1 loops=3)
               ->  Nested Loop  (cost=5.11..270216.63 rows=76 width=60) (actual time=341.272..1345.094 rows=757 loops=3)
                     Join Filter: (t.id = at.movie_id)
                     ->  Nested Loop  (cost=4.69..270201.06 rows=30 width=76) (actual time=307.257..1336.371 rows=2655 loops=3)
                           ->  Nested Loop  (cost=4.27..270187.90 rows=30 width=80) (actual time=307.175..1321.770 rows=2655 loops=3)
                                 ->  Nested Loop  (cost=3.84..270184.28 rows=2 width=72) (actual time=306.693..1307.740 rows=882 loops=3)
                                       ->  Nested Loop  (cost=3.71..270183.98 rows=2 width=76) (actual time=306.607..1304.669 rows=882 loops=3)
                                             ->  Nested Loop  (cost=3.29..270181.31 rows=6 width=80) (actual time=306.165..1290.682 rows=961 loops=3)
                                                   ->  Nested Loop  (cost=2.86..270180.68 rows=1 width=68) (actual time=306.071..1268.394 rows=594 loops=3)
                                                         ->  Hash Join  (cost=2.43..270164.10 rows=2 width=47) (actual time=305.964..1248.764 rows=594 loops=3)
                                                               Hash Cond: (mi.info_type_id = it1.id)
                                                               ->  Parallel Seq Scan on movie_info mi  (cost=0.00..270161.12 rows=200 width=51) (actual time=305.651..1247.779 rows=594 loops=3)
                                                                     Filter: ((info IS NOT NULL) AND ((note)::text ~~ '%internet%'::text) AND (((info)::text ~~ 'USA:% 199%'::text) OR ((info)::text ~~ 'USA:% 200%'::text)))
                                                                     Rows Removed by Filter: 4944646
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.094..0.095 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.057..0.068 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'release dates'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..8.29 rows=1 width=21) (actual time=0.031..0.031 rows=1 loops=1783)
                                                               Index Cond: (id = mi.movie_id)
                                                               Filter: (production_year > 1990)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.58 rows=5 width=12) (actual time=0.028..0.036 rows=2 loops=1782)
                                                         Index Cond: (movie_id = t.id)
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.013..0.013 rows=1 loops=2884)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((country_code)::text = '[us]'::text)
                                                   Rows Removed by Filter: 0
                                       ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=2647)
                                             Index Cond: (id = mc.company_type_id)
                                             Heap Fetches: 2647
                                 ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.34 rows=47 width=8) (actual time=0.014..0.015 rows=3 loops=2647)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=7964)
                                 Index Cond: (id = mk.keyword_id)
                                 Heap Fetches: 7964
                     ->  Index Only Scan using movie_id_aka_title on aka_title at  (cost=0.42..0.48 rows=3 width=4) (actual time=0.003..0.003 rows=0 loops=7964)
                           Index Cond: (movie_id = mk.movie_id)
                           Heap Fetches: 2271
 Planning Time: 29.986 ms
 Execution Time: 1358.883 ms
(46 rows)

SET
                                                                                               QUERY PLAN                                                                                               
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=241404.07..241404.08 rows=1 width=64) (actual time=1650.666..1650.666 rows=1 loops=1)
   ->  Gather  (cost=241403.85..241404.06 rows=2 width=64) (actual time=1650.469..1658.633 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=240403.85..240403.86 rows=1 width=64) (actual time=1642.928..1642.928 rows=1 loops=3)
               ->  Nested Loop  (cost=6.07..240394.49 rows=1873 width=38) (actual time=326.180..1641.403 rows=3782 loops=3)
                     Join Filter: (t.id = at.movie_id)
                     ->  Nested Loop  (cost=5.65..240025.58 rows=711 width=33) (actual time=304.020..1613.501 rows=8521 loops=3)
                           ->  Nested Loop  (cost=5.23..239713.69 rows=711 width=37) (actual time=303.917..1573.903 rows=8521 loops=3)
                                 ->  Hash Join  (cost=4.80..239612.38 rows=56 width=29) (actual time=303.693..1526.272 rows=3286 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Nested Loop  (cost=3.71..239610.99 rows=56 width=33) (actual time=303.456..1523.162 rows=3286 loops=3)
                                             ->  Nested Loop  (cost=3.29..239542.81 rows=153 width=37) (actual time=303.406..1467.195 rows=4792 loops=3)
                                                   ->  Nested Loop  (cost=2.86..239524.64 rows=29 width=25) (actual time=303.171..1367.635 rows=3554 loops=3)
                                                         ->  Hash Join  (cost=2.43..239268.80 rows=42 width=4) (actual time=303.079..1267.777 rows=3560 loops=3)
                                                               Hash Cond: (mi.info_type_id = it1.id)
                                                               ->  Parallel Seq Scan on movie_info mi  (cost=0.00..239253.38 rows=4774 width=8) (actual time=51.527..1264.440 rows=3603 loops=3)
                                                                     Filter: ((note)::text ~~ '%internet%'::text)
                                                                     Rows Removed by Filter: 4941637
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.071..0.071 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.050..0.061 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'release dates'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..6.09 rows=1 width=21) (actual time=0.027..0.027 rows=1 loops=10679)
                                                               Index Cond: (id = mi.movie_id)
                                                               Filter: (production_year > 1990)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.58 rows=5 width=12) (actual time=0.022..0.026 rows=1 loops=10662)
                                                         Index Cond: (movie_id = t.id)
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.011..0.011 rows=1 loops=14377)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((country_code)::text = '[us]'::text)
                                                   Rows Removed by Filter: 0
                                       ->  Hash  (cost=1.04..1.04 rows=4 width=4) (actual time=0.069..0.069 rows=4 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.044..0.045 rows=4 loops=3)
                                 ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.34 rows=47 width=8) (actual time=0.012..0.013 rows=3 loops=9857)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=25564)
                                 Index Cond: (id = mk.keyword_id)
                                 Heap Fetches: 25564
                     ->  Index Scan using movie_id_aka_title on aka_title at  (cost=0.42..0.48 rows=3 width=25) (actual time=0.003..0.003 rows=0 loops=25564)
                           Index Cond: (movie_id = mk.movie_id)
 Planning Time: 30.116 ms
 Execution Time: 1659.388 ms
(46 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3790.42..3790.43 rows=1 width=64) (actual time=836.862..836.863 rows=1 loops=1)
   ->  Nested Loop  (cost=9.46..3790.05 rows=74 width=33) (actual time=37.735..836.531 rows=385 loops=1)
         Join Filter: (n.id = an.person_id)
         ->  Nested Loop  (cost=9.03..3774.48 rows=32 width=25) (actual time=37.657..830.575 rows=323 loops=1)
               ->  Nested Loop  (cost=8.60..3759.93 rows=32 width=21) (actual time=37.558..823.490 rows=323 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=8.04..3755.95 rows=2 width=29) (actual time=37.481..819.684 rows=25 loops=1)
                           ->  Nested Loop  (cost=7.62..3753.72 rows=5 width=33) (actual time=37.014..818.765 rows=54 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.19..3753.12 rows=1 width=25) (actual time=29.653..817.005 rows=146 loops=1)
                                       ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.976..272.242 rows=41840 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.327..26.924 rows=1 loops=1)
                                                   Filter: ((keyword)::text = 'character-name-in-title'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.640..230.494 rows=41840 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=11541
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.930..7.930 rows=41840 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.012..0.012 rows=0 loops=41840)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: ((episode_nr >= 50) AND (episode_nr < 100))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.009..0.011 rows=0 loops=146)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.016..0.016 rows=0 loops=54)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.032..0.143 rows=13 loops=25)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.021..0.021 rows=1 loops=323)
                     Index Cond: (id = ci.person_id)
                     Heap Fetches: 323
         ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.46 rows=2 width=20) (actual time=0.015..0.017 rows=1 loops=323)
               Index Cond: (person_id = ci.person_id)
 Planning Time: 17.161 ms
 Execution Time: 837.715 ms
(38 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=5125.30..5125.31 rows=1 width=64) (actual time=51055.773..51055.774 rows=1 loops=1)
   ->  Nested Loop  (cost=9.46..5111.49 rows=2761 width=33) (actual time=12.245..49467.509 rows=3710592 loops=1)
         Join Filter: (n.id = an.person_id)
         ->  Nested Loop  (cost=9.03..4526.68 rows=1202 width=25) (actual time=12.172..33520.086 rows=2832555 loops=1)
               ->  Nested Loop  (cost=8.60..3979.90 rows=1202 width=21) (actual time=12.087..13481.078 rows=2832555 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=8.04..3852.77 rows=64 width=29) (actual time=11.153..3242.666 rows=68316 loops=1)
                           ->  Nested Loop  (cost=7.62..3773.45 rows=178 width=33) (actual time=11.017..1476.452 rows=148552 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.19..3752.95 rows=34 width=25) (actual time=10.889..901.890 rows=41840 loops=1)
                                       ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.853..270.542 rows=41840 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.306..26.469 rows=1 loops=1)
                                                   Filter: ((keyword)::text = 'character-name-in-title'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.539..228.741 rows=41840 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=11541
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.816..7.816 rows=41840 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.014..0.014 rows=1 loops=41840)
                                             Index Cond: (id = mk.movie_id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.008..0.011 rows=4 loops=41840)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.011..0.011 rows=0 loops=148552)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.009..0.135 rows=41 loops=68316)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=2832555)
                     Index Cond: (id = ci.person_id)
                     Heap Fetches: 2832555
         ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.46 rows=2 width=20) (actual time=0.004..0.005 rows=1 loops=2832555)
               Index Cond: (person_id = ci.person_id)
 Planning Time: 16.626 ms
 Execution Time: 51056.556 ms
(36 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4271.02..4271.03 rows=1 width=64) (actual time=4445.224..4445.224 rows=1 loops=1)
   ->  Nested Loop  (cost=9.46..4265.81 rows=1042 width=33) (actual time=12.242..4307.815 rows=319932 loops=1)
         Join Filter: (n.id = an.person_id)
         ->  Nested Loop  (cost=9.03..4044.93 rows=454 width=25) (actual time=12.175..3074.567 rows=221609 loops=1)
               ->  Nested Loop  (cost=8.60..3838.40 rows=454 width=21) (actual time=12.098..1628.518 rows=221609 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=8.04..3790.73 rows=24 width=29) (actual time=12.042..875.191 rows=8538 loops=1)
                           ->  Nested Loop  (cost=7.62..3760.87 rows=67 width=33) (actual time=11.143..808.503 rows=11406 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.19..3753.04 rows=13 width=25) (actual time=10.947..741.105 rows=6926 loops=1)
                                       ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.917..256.855 rows=41840 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.292..26.362 rows=1 loops=1)
                                                   Filter: ((keyword)::text = 'character-name-in-title'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.617..215.768 rows=41840 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=11541
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.878..7.878 rows=41840 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.011..0.011 rows=0 loops=41840)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: (episode_nr < 100)
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.006..0.008 rows=2 loops=6926)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=11406)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.008..0.079 rows=26 loops=8538)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=221609)
                     Index Cond: (id = ci.person_id)
                     Heap Fetches: 221609
         ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.46 rows=2 width=20) (actual time=0.004..0.005 rows=1 loops=221609)
               Index Cond: (person_id = ci.person_id)
 Planning Time: 16.749 ms
 Execution Time: 4445.925 ms
(38 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4132.51..4132.52 rows=1 width=64) (actual time=3618.705..3618.706 rows=1 loops=1)
   ->  Nested Loop  (cost=9.46..4128.69 rows=764 width=33) (actual time=12.204..3511.748 rows=249455 loops=1)
         Join Filter: (n.id = an.person_id)
         ->  Nested Loop  (cost=9.03..3967.16 rows=332 width=25) (actual time=12.132..2544.072 rows=169273 loops=1)
               ->  Nested Loop  (cost=8.60..3816.14 rows=332 width=21) (actual time=12.052..1431.181 rows=169273 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=8.04..3780.38 rows=18 width=29) (actual time=11.985..842.771 rows=6766 loops=1)
                           ->  Nested Loop  (cost=7.62..3758.55 rows=49 width=33) (actual time=11.136..791.663 rows=8661 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.19..3753.12 rows=9 width=25) (actual time=10.937..737.935 rows=5385 loops=1)
                                       ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.906..255.085 rows=41840 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.320..26.415 rows=1 loops=1)
                                                   Filter: ((keyword)::text = 'character-name-in-title'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.578..214.263 rows=41840 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=11541
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.863..7.863 rows=41840 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.011..0.011 rows=0 loops=41840)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: ((episode_nr >= 5) AND (episode_nr < 100))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.007..0.008 rows=2 loops=5385)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=8661)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.009..0.078 rows=25 loops=6766)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=169273)
                     Index Cond: (id = ci.person_id)
                     Heap Fetches: 169273
         ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.46 rows=2 width=20) (actual time=0.004..0.005 rows=1 loops=169273)
               Index Cond: (person_id = ci.person_id)
 Planning Time: 16.746 ms
 Execution Time: 3619.412 ms
(38 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4530.17..4530.18 rows=1 width=64) (actual time=33050.157..33050.157 rows=1 loops=1)
   ->  Nested Loop  (cost=9.03..4529.69 rows=97 width=15) (actual time=12.290..32894.976 rows=258289 loops=1)
         ->  Nested Loop  (cost=8.60..3979.90 rows=1202 width=4) (actual time=12.110..13091.377 rows=2832555 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=8.04..3852.77 rows=64 width=12) (actual time=11.175..3060.316 rows=68316 loops=1)
                     ->  Nested Loop  (cost=7.62..3773.45 rows=178 width=16) (actual time=11.039..1447.413 rows=148552 loops=1)
                           Join Filter: (t.id = mc.movie_id)
                           ->  Nested Loop  (cost=7.19..3752.95 rows=34 width=8) (actual time=10.912..887.841 rows=41840 loops=1)
                                 ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.884..264.598 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.303..26.489 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.573..223.467 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.843..7.843 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=41840)
                                       Index Cond: (id = mk.movie_id)
                                       Heap Fetches: 41840
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.008..0.011 rows=4 loops=41840)
                                 Index Cond: (movie_id = mk.movie_id)
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.010..0.010 rows=0 loops=148552)
                           Index Cond: (id = mc.company_id)
                           Filter: ((country_code)::text = '[us]'::text)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.009..0.133 rows=41 loops=68316)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.006..0.006 rows=0 loops=2832555)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ 'B%'::text)
               Rows Removed by Filter: 1
 Planning Time: 10.745 ms
 Execution Time: 33050.929 ms
(34 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4371.77..4371.78 rows=1 width=64) (actual time=32193.391..32193.392 rows=1 loops=1)
   ->  Nested Loop  (cost=9.03..4371.77 rows=1 width=15) (actual time=26.919..32154.994 rows=52306 loops=1)
         ->  Nested Loop  (cost=8.60..4371.31 rows=1 width=27) (actual time=26.845..31894.983 rows=52306 loops=1)
               ->  Nested Loop  (cost=8.18..4370.87 rows=1 width=31) (actual time=26.793..31392.274 rows=52306 loops=1)
                     ->  Nested Loop  (cost=7.75..4370.30 rows=1 width=23) (actual time=26.744..31229.856 rows=6642 loops=1)
                           ->  Nested Loop  (cost=7.32..3800.84 rows=1245 width=12) (actual time=11.034..11841.918 rows=1038393 loops=1)
                                 ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.986..265.239 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.327..26.694 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.650..222.650 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.929..7.929 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.017..0.262 rows=25 loops=41840)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.018..0.018 rows=0 loops=1038393)
                                 Index Cond: (id = ci.person_id)
                                 Filter: ((name)::text ~~ 'Z%'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.52 rows=5 width=8) (actual time=0.014..0.021 rows=8 loops=6642)
                           Index Cond: (movie_id = ci.movie_id)
               ->  Index Only Scan using company_name_pkey on company_name cn  (cost=0.42..0.44 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=52306)
                     Index Cond: (id = mc.company_id)
                     Heap Fetches: 52306
         ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.45 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=52306)
               Index Cond: (id = ci.movie_id)
               Heap Fetches: 52306
 Planning Time: 10.616 ms
 Execution Time: 32194.104 ms
(31 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4371.77..4371.78 rows=1 width=64) (actual time=31245.334..31245.335 rows=1 loops=1)
   ->  Nested Loop  (cost=9.03..4371.77 rows=1 width=15) (actual time=225.839..31242.578 rows=1918 loops=1)
         ->  Nested Loop  (cost=8.60..4371.31 rows=1 width=27) (actual time=225.760..31228.560 rows=1918 loops=1)
               ->  Nested Loop  (cost=8.18..4370.87 rows=1 width=31) (actual time=225.693..31193.558 rows=1918 loops=1)
                     ->  Nested Loop  (cost=7.75..4370.30 rows=1 width=23) (actual time=225.646..31183.048 rows=250 loops=1)
                           ->  Nested Loop  (cost=7.32..3800.84 rows=1245 width=12) (actual time=11.157..11823.216 rows=1038393 loops=1)
                                 ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=11.109..265.493 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.295..26.420 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.806..222.665 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=8.059..8.059 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.017..0.261 rows=25 loops=41840)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.018..0.018 rows=0 loops=1038393)
                                 Index Cond: (id = ci.person_id)
                                 Filter: ((name)::text ~~ 'X%'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.52 rows=5 width=8) (actual time=0.026..0.037 rows=8 loops=250)
                           Index Cond: (movie_id = ci.movie_id)
               ->  Index Only Scan using company_name_pkey on company_name cn  (cost=0.42..0.44 rows=1 width=4) (actual time=0.017..0.017 rows=1 loops=1918)
                     Index Cond: (id = mc.company_id)
                     Heap Fetches: 1918
         ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.45 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=1918)
               Index Cond: (id = ci.movie_id)
               Heap Fetches: 1918
 Planning Time: 10.935 ms
 Execution Time: 31246.016 ms
(31 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4371.77..4371.78 rows=1 width=32) (actual time=31590.681..31590.682 rows=1 loops=1)
   ->  Nested Loop  (cost=9.03..4371.77 rows=1 width=15) (actual time=129.975..31577.138 rows=11538 loops=1)
         ->  Nested Loop  (cost=8.60..4371.31 rows=1 width=27) (actual time=129.904..31494.182 rows=11538 loops=1)
               ->  Nested Loop  (cost=8.18..4370.87 rows=1 width=31) (actual time=129.830..31316.925 rows=11538 loops=1)
                     ->  Nested Loop  (cost=7.75..4370.30 rows=1 width=23) (actual time=129.780..31252.461 rows=1972 loops=1)
                           ->  Nested Loop  (cost=7.32..3800.84 rows=1245 width=12) (actual time=10.860..11831.641 rows=1038393 loops=1)
                                 ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.811..264.878 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.281..26.545 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.521..222.383 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.811..7.811 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.017..0.262 rows=25 loops=41840)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.018..0.018 rows=0 loops=1038393)
                                 Index Cond: (id = ci.person_id)
                                 Filter: ((name)::text ~~ '%Bert%'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.52 rows=5 width=8) (actual time=0.020..0.028 rows=6 loops=1972)
                           Index Cond: (movie_id = ci.movie_id)
               ->  Index Only Scan using company_name_pkey on company_name cn  (cost=0.42..0.44 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=11538)
                     Index Cond: (id = mc.company_id)
                     Heap Fetches: 11538
         ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.45 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=11538)
               Index Cond: (id = ci.movie_id)
               Heap Fetches: 11538
 Planning Time: 10.632 ms
 Execution Time: 31591.318 ms
(31 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4529.69..4529.70 rows=1 width=32) (actual time=33344.047..33344.048 rows=1 loops=1)
   ->  Nested Loop  (cost=9.03..4526.68 rows=1202 width=15) (actual time=12.086..32170.825 rows=2832555 loops=1)
         ->  Nested Loop  (cost=8.60..3979.90 rows=1202 width=4) (actual time=11.998..13218.492 rows=2832555 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=8.04..3852.77 rows=64 width=12) (actual time=11.064..3047.020 rows=68316 loops=1)
                     ->  Nested Loop  (cost=7.62..3773.45 rows=178 width=16) (actual time=10.916..1441.685 rows=148552 loops=1)
                           Join Filter: (t.id = mc.movie_id)
                           ->  Nested Loop  (cost=7.19..3752.95 rows=34 width=8) (actual time=10.784..883.662 rows=41840 loops=1)
                                 ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.755..263.475 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.268..26.530 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.479..222.750 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.772..7.772 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=41840)
                                       Index Cond: (id = mk.movie_id)
                                       Heap Fetches: 41840
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.008..0.011 rows=4 loops=41840)
                                 Index Cond: (movie_id = mk.movie_id)
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.010..0.010 rows=0 loops=148552)
                           Index Cond: (id = mc.company_id)
                           Filter: ((country_code)::text = '[us]'::text)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.009..0.135 rows=41 loops=68316)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=19) (actual time=0.006..0.006 rows=1 loops=2832555)
               Index Cond: (id = ci.person_id)
 Planning Time: 10.838 ms
 Execution Time: 33344.752 ms
(32 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4654.76..4654.77 rows=1 width=32) (actual time=38003.744..38003.745 rows=1 loops=1)
   ->  Nested Loop  (cost=9.03..4653.75 rows=401 width=15) (actual time=15.235..37609.839 rows=1113120 loops=1)
         ->  Nested Loop  (cost=8.61..4476.08 rows=401 width=19) (actual time=15.175..34147.966 rows=1113120 loops=1)
               ->  Nested Loop  (cost=8.18..4389.95 rows=151 width=27) (actual time=11.104..32665.187 rows=149494 loops=1)
                     ->  Nested Loop  (cost=7.75..3820.49 rows=1245 width=16) (actual time=11.027..12830.753 rows=1038393 loops=1)
                           Join Filter: (t.id = ci.movie_id)
                           ->  Nested Loop  (cost=7.19..3752.95 rows=34 width=8) (actual time=10.977..902.953 rows=41840 loops=1)
                                 ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.938..270.232 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.303..26.656 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.627..226.942 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.923..7.924 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=41840)
                                       Index Cond: (id = mk.movie_id)
                                       Heap Fetches: 41840
                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.018..0.266 rows=25 loops=41840)
                                 Index Cond: (movie_id = mk.movie_id)
                     ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.018..0.018 rows=0 loops=1038393)
                           Index Cond: (id = ci.person_id)
                           Filter: ((name)::text ~~ '%B%'::text)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.52 rows=5 width=8) (actual time=0.005..0.008 rows=7 loops=149494)
                     Index Cond: (movie_id = ci.movie_id)
         ->  Index Only Scan using company_name_pkey on company_name cn  (cost=0.42..0.44 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1113120)
               Index Cond: (id = mc.company_id)
               Heap Fetches: 1113120
 Planning Time: 10.829 ms
 Execution Time: 38004.406 ms
(32 rows)

SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=111692.15..111692.16 rows=1 width=96) (actual time=12484.522..12484.523 rows=1 loops=1)
   ->  Nested Loop  (cost=1006.71..111692.14 rows=1 width=65) (actual time=328.046..12483.093 rows=410 loops=1)
         ->  Gather  (cost=1006.28..111691.68 rows=1 width=60) (actual time=327.957..12474.489 rows=410 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Nested Loop  (cost=6.28..110691.58 rows=1 width=60) (actual time=223.316..12471.790 rows=137 loops=3)
                     ->  Nested Loop  (cost=5.85..108696.70 rows=3377 width=64) (actual time=2.865..11464.605 rows=35780 loops=3)
                           ->  Hash Join  (cost=5.29..74146.13 rows=1468 width=56) (actual time=1.182..3622.810 rows=15144 loops=3)
                                 Hash Cond: (mi.info_type_id = it1.id)
                                 ->  Nested Loop  (cost=2.86..73692.04 rows=165842 width=60) (actual time=0.245..3349.709 rows=2310111 loops=3)
                                       ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=9) (actual time=0.128..209.219 rows=153308 loops=3)
                                             Hash Cond: (mi_idx.info_type_id = it2.id)
                                             ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=13) (actual time=0.037..90.298 rows=460012 loops=3)
                                             ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.037..0.037 rows=1 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.020..0.022 rows=1 loops=3)
                                                         Filter: ((info)::text = 'votes'::text)
                                                         Rows Removed by Filter: 112
                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..11.06 rows=42 width=51) (actual time=0.005..0.017 rows=15 loops=459925)
                                             Index Cond: (movie_id = mi_idx.movie_id)
                                 ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.074..0.074 rows=1 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.049..0.051 rows=1 loops=3)
                                             Filter: ((info)::text = 'budget'::text)
                                             Rows Removed by Filter: 112
                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..23.52 rows=2 width=8) (actual time=0.298..0.516 rows=2 loops=45431)
                                 Index Cond: (movie_id = mi.movie_id)
                                 Filter: ((note)::text = ANY ('{(producer),"(executive producer)"}'::text[]))
                                 Rows Removed by Filter: 38
                     ->  Index Scan using name_pkey on name n  (cost=0.43..0.59 rows=1 width=4) (actual time=0.027..0.027 rows=0 loops=107339)
                           Index Cond: (id = ci.person_id)
                           Filter: (((name)::text ~~ '%Tim%'::text) AND ((gender)::text = 'm'::text))
                           Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.46 rows=1 width=21) (actual time=0.029..0.029 rows=1 loops=410)
               Index Cond: (id = mi.movie_id)
 Planning Time: 10.396 ms
 Execution Time: 12489.272 ms
(37 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=17462.60..17462.61 rows=1 width=96) (actual time=494.145..494.145 rows=1 loops=1)
   ->  Nested Loop  (cost=1004.43..17462.59 rows=1 width=65) (actual time=249.272..494.082 rows=11 loops=1)
         ->  Nested Loop  (cost=1004.00..17461.90 rows=1 width=69) (actual time=82.182..485.950 rows=268 loops=1)
               ->  Gather  (cost=1003.43..17437.17 rows=1 width=77) (actual time=31.741..332.383 rows=358 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Nested Loop  (cost=3.43..16437.07 rows=1 width=77) (actual time=17.948..431.460 rows=119 loops=3)
                           ->  Nested Loop  (cost=3.29..16435.43 rows=10 width=81) (actual time=17.924..430.872 rows=119 loops=3)
                                 ->  Nested Loop  (cost=2.86..15789.08 rows=56 width=30) (actual time=2.031..268.811 rows=2051 loops=3)
                                       ->  Hash Join  (cost=2.43..15179.85 rows=178 width=9) (actual time=0.302..143.614 rows=5283 loops=3)
                                             Hash Cond: (mi_idx.info_type_id = it2.id)
                                             ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..15122.68 rows=20101 width=13) (actual time=0.062..136.149 rows=17883 loops=3)
                                                   Filter: ((info)::text > '8.0'::text)
                                                   Rows Removed by Filter: 442129
                                             ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.062..0.063 rows=1 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.036..0.039 rows=1 loops=3)
                                                         Filter: ((info)::text = 'rating'::text)
                                                         Rows Removed by Filter: 112
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..3.42 rows=1 width=21) (actual time=0.023..0.023 rows=0 loops=15849)
                                             Index Cond: (id = mi_idx.movie_id)
                                             Filter: ((production_year >= 2008) AND (production_year <= 2014))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..11.53 rows=1 width=51) (actual time=0.078..0.078 rows=0 loops=6152)
                                       Index Cond: (movie_id = t.id)
                                       Filter: ((note IS NULL) AND ((info)::text = ANY ('{Horror,Thriller}'::text[])))
                                       Rows Removed by Filter: 18
                           ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=358)
                                 Index Cond: (id = mi.info_type_id)
                                 Filter: ((info)::text = 'genres'::text)
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..24.72 rows=1 width=8) (actual time=0.340..0.442 rows=1 loops=358)
                     Index Cond: (movie_id = t.id)
                     Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                     Rows Removed by Filter: 34
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.69 rows=1 width=4) (actual time=0.029..0.029 rows=0 loops=268)
               Index Cond: (id = ci.person_id)
               Filter: ((gender IS NOT NULL) AND ((gender)::text = 'f'::text))
               Rows Removed by Filter: 1
 Planning Time: 10.071 ms
 Execution Time: 499.753 ms
(40 rows)

SET
                                                                                          QUERY PLAN                                                                                          
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=74751.79..74751.80 rows=1 width=96) (actual time=17328.068..17328.068 rows=1 loops=1)
   ->  Gather  (cost=74751.57..74751.78 rows=2 width=96) (actual time=17324.195..17334.429 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=73751.57..73751.58 rows=1 width=96) (actual time=17319.250..17319.251 rows=1 loops=3)
               ->  Nested Loop  (cost=6.71..73751.49 rows=11 width=65) (actual time=31.313..17305.766 rows=9358 loops=3)
                     ->  Nested Loop  (cost=6.28..73732.96 rows=27 width=69) (actual time=23.485..16846.056 rows=18052 loops=3)
                           ->  Nested Loop  (cost=5.72..73229.83 rows=21 width=77) (actual time=1.464..4278.900 rows=34172 loops=3)
                                 Join Filter: (mi.movie_id = t.id)
                                 ->  Hash Join  (cost=5.29..73217.55 rows=21 width=56) (actual time=1.369..3767.868 rows=34172 loops=3)
                                       Hash Cond: (mi.info_type_id = it1.id)
                                       ->  Nested Loop  (cost=2.86..73208.58 rows=2405 width=60) (actual time=1.143..3739.107 rows=34964 loops=3)
                                             ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=9) (actual time=0.130..252.435 rows=153308 loops=3)
                                                   Hash Cond: (mi_idx.info_type_id = it2.id)
                                                   ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=13) (actual time=0.036..98.704 rows=460012 loops=3)
                                                   ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.039..0.040 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.020..0.022 rows=1 loops=3)
                                                               Filter: ((info)::text = 'votes'::text)
                                                               Rows Removed by Filter: 112
                                             ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..11.38 rows=1 width=51) (actual time=0.022..0.022 rows=0 loops=459925)
                                                   Index Cond: (movie_id = mi_idx.movie_id)
                                                   Filter: ((info)::text = ANY ('{Horror,Action,Sci-Fi,Thriller,Crime,War}'::text[]))
                                                   Rows Removed by Filter: 15
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.079..0.079 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.045..0.058 rows=1 loops=3)
                                                   Filter: ((info)::text = 'genres'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=21) (actual time=0.013..0.013 rows=1 loops=102516)
                                       Index Cond: (id = mi_idx.movie_id)
                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..23.95 rows=1 width=8) (actual time=0.313..0.367 rows=1 loops=102516)
                                 Index Cond: (movie_id = t.id)
                                 Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                 Rows Removed by Filter: 39
                     ->  Index Scan using name_pkey on name n  (cost=0.43..0.69 rows=1 width=4) (actual time=0.024..0.024 rows=1 loops=54155)
                           Index Cond: (id = ci.person_id)
                           Filter: ((gender)::text = 'm'::text)
                           Rows Removed by Filter: 0
 Planning Time: 10.109 ms
 Execution Time: 17335.081 ms
(41 rows)

SET
                                                                                                QUERY PLAN                                                                                                 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=85507.29..85507.30 rows=1 width=64) (actual time=579.212..579.213 rows=1 loops=1)
   ->  Nested Loop  (cost=1004.44..85507.29 rows=1 width=32) (actual time=232.038..579.072 rows=184 loops=1)
         ->  Nested Loop  (cost=1004.30..85507.10 rows=1 width=36) (actual time=231.995..578.620 rows=184 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=1003.86..85479.65 rows=1 width=44) (actual time=231.884..567.118 rows=77 loops=1)
                     ->  Nested Loop  (cost=1003.44..85478.45 rows=1 width=48) (actual time=231.813..565.901 rows=79 loops=1)
                           Join Filter: (t.id = mc.movie_id)
                           ->  Nested Loop  (cost=1003.01..85475.72 rows=1 width=40) (actual time=231.372..563.200 rows=102 loops=1)
                                 ->  Gather  (cost=1002.58..85474.30 rows=1 width=44) (actual time=230.403..563.254 rows=115 loops=1)
                                       Workers Planned: 2
                                       Workers Launched: 2
                                       ->  Nested Loop  (cost=2.58..84474.20 rows=1 width=44) (actual time=223.313..564.739 rows=38 loops=3)
                                             ->  Hash Join  (cost=2.15..84471.40 rows=2 width=23) (actual time=221.525..561.472 rows=142 loops=3)
                                                   Hash Cond: (ci.role_id = rt.id)
                                                   ->  Nested Loop  (cost=0.99..84470.16 rows=19 width=27) (actual time=221.295..561.152 rows=142 loops=3)
                                                         Join Filter: (n.id = ci.person_id)
                                                         ->  Nested Loop  (cost=0.42..82155.48 rows=9 width=23) (actual time=215.324..538.208 rows=519 loops=3)
                                                               ->  Parallel Seq Scan on name n  (cost=0.00..81659.82 rows=40 width=19) (actual time=214.157..510.410 rows=2256 loops=3)
                                                                     Filter: (((name)::text ~~ '%Ang%'::text) AND ((gender)::text = 'f'::text))
                                                                     Rows Removed by Filter: 1386908
                                                               ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..12.37 rows=2 width=4) (actual time=0.011..0.011 rows=0 loops=6768)
                                                                     Index Cond: (person_id = n.id)
                                                                     Heap Fetches: 1558
                                                         ->  Index Scan using person_id_cast_info on cast_info ci  (cost=0.56..257.04 rows=12 width=16) (actual time=0.041..0.043 rows=0 loops=1558)
                                                               Index Cond: (person_id = an.person_id)
                                                               Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                               Rows Removed by Filter: 44
                                                   ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.069..0.069 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.034..0.036 rows=1 loops=3)
                                                               Filter: ((role)::text = 'actress'::text)
                                                               Rows Removed by Filter: 11
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..1.40 rows=1 width=21) (actual time=0.022..0.022 rows=0 loops=425)
                                                   Index Cond: (id = ci.movie_id)
                                                   Filter: ((production_year >= 2005) AND (production_year <= 2009))
                                                   Rows Removed by Filter: 1
                                 ->  Index Only Scan using char_name_pkey on char_name chn  (cost=0.43..1.42 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=115)
                                       Index Cond: (id = ci.person_role_id)
                                       Heap Fetches: 102
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.72 rows=1 width=8) (actual time=0.020..0.026 rows=1 loops=102)
                                 Index Cond: (movie_id = ci.movie_id)
                                 Filter: ((note IS NOT NULL) AND (((note)::text ~~ '%(USA)%'::text) OR ((note)::text ~~ '%(worldwide)%'::text)))
                                 Rows Removed by Filter: 6
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.20 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=79)
                           Index Cond: (id = mc.company_id)
                           Filter: ((country_code)::text = '[us]'::text)
                           Rows Removed by Filter: 0
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..27.43 rows=2 width=8) (actual time=0.044..0.148 rows=2 loops=77)
                     Index Cond: (movie_id = ci.movie_id)
                     Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%200%'::text) OR ((info)::text ~~ 'USA:%200%'::text)))
                     Rows Removed by Filter: 166
         ->  Index Scan using info_type_pkey on info_type it  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=184)
               Index Cond: (id = mi.info_type_id)
               Filter: ((info)::text = 'release dates'::text)
 Planning Time: 50.017 ms
 Execution Time: 581.908 ms
(56 rows)

SET
                                                                                                   QUERY PLAN                                                                                                   
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=55722.95..55722.96 rows=1 width=64) (actual time=284.445..284.446 rows=1 loops=1)
   ->  Nested Loop  (cost=1003.41..55722.94 rows=1 width=32) (actual time=234.421..284.425 rows=15 loops=1)
         ->  Nested Loop  (cost=1003.28..55722.77 rows=1 width=36) (actual time=234.362..284.337 rows=15 loops=1)
               Join Filter: (ci.person_id = n.id)
               ->  Nested Loop  (cost=1002.85..55721.23 rows=1 width=29) (actual time=222.557..282.231 rows=275 loops=1)
                     ->  Nested Loop  (cost=1002.70..55721.05 rows=1 width=33) (actual time=222.522..281.638 rows=275 loops=1)
                           Join Filter: (t.id = mi.movie_id)
                           ->  Nested Loop  (cost=1002.27..55693.47 rows=1 width=41) (actual time=222.392..254.522 rows=275 loops=1)
                                 ->  Nested Loop  (cost=1001.85..55692.20 rows=1 width=45) (actual time=222.335..253.424 rows=275 loops=1)
                                       ->  Nested Loop  (cost=1001.42..55690.54 rows=1 width=41) (actual time=222.257..251.351 rows=99 loops=1)
                                             ->  Nested Loop  (cost=1001.00..55689.08 rows=1 width=45) (actual time=222.153..248.967 rows=100 loops=1)
                                                   Join Filter: (t.id = ci.movie_id)
                                                   ->  Gather  (cost=1000.43..55647.01 rows=1 width=29) (actual time=222.061..246.181 rows=4 loops=1)
                                                         Workers Planned: 2
                                                         Workers Launched: 2
                                                         ->  Nested Loop  (cost=0.43..54646.91 rows=1 width=29) (actual time=237.442..264.674 rows=1 loops=3)
                                                               ->  Parallel Seq Scan on title t  (cost=0.00..54433.61 rows=10 width=21) (actual time=87.430..264.463 rows=2 loops=3)
                                                                     Filter: ((production_year >= 2007) AND (production_year <= 2008) AND ((title)::text ~~ '%Kung%Fu%Panda%'::text))
                                                                     Rows Removed by Filter: 842768
                                                               ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..21.32 rows=1 width=8) (actual time=0.082..0.088 rows=1 loops=7)
                                                                     Index Cond: (movie_id = t.id)
                                                                     Filter: (((note)::text ~~ '%(200%)%'::text) AND (((note)::text ~~ '%(USA)%'::text) OR ((note)::text ~~ '%(worldwide)%'::text)))
                                                                     Rows Removed by Filter: 6
                                                   ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..42.06 rows=1 width=16) (actual time=0.033..1.160 rows=25 loops=4)
                                                         Index Cond: (movie_id = mc.movie_id)
                                                         Filter: ((note)::text = '(voice)'::text)
                                                         Rows Removed by Filter: 127
                                             ->  Index Only Scan using char_name_pkey on char_name chn  (cost=0.43..1.46 rows=1 width=4) (actual time=0.023..0.023 rows=1 loops=100)
                                                   Index Cond: (id = ci.person_role_id)
                                                   Heap Fetches: 99
                                       ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..1.64 rows=2 width=4) (actual time=0.015..0.020 rows=3 loops=99)
                                             Index Cond: (person_id = ci.person_id)
                                             Heap Fetches: 275
                                 ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.27 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=275)
                                       Index Cond: (id = mc.company_id)
                                       Filter: ((country_code)::text = '[us]'::text)
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..27.56 rows=1 width=8) (actual time=0.016..0.098 rows=1 loops=275)
                                 Index Cond: (movie_id = ci.movie_id)
                                 Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%2007%'::text) OR ((info)::text ~~ 'USA:%2008%'::text)))
                                 Rows Removed by Filter: 295
                     ->  Index Scan using info_type_pkey on info_type it  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=275)
                           Index Cond: (id = mi.info_type_id)
                           Filter: ((info)::text = 'release dates'::text)
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.53 rows=1 width=19) (actual time=0.007..0.007 rows=0 loops=275)
                     Index Cond: (id = an.person_id)
                     Filter: (((name)::text ~~ '%Angel%'::text) AND ((gender)::text = 'f'::text))
                     Rows Removed by Filter: 1
         ->  Index Scan using role_type_pkey on role_type rt  (cost=0.14..0.16 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=15)
               Index Cond: (id = ci.role_id)
               Filter: ((role)::text = 'actress'::text)
 Planning Time: 48.484 ms
 Execution Time: 287.107 ms
(52 rows)

SET
                                                                                                           QUERY PLAN                                                                                                           
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=224820.56..224820.57 rows=1 width=64) (actual time=4046.660..4046.660 rows=1 loops=1)
   ->  Gather  (cost=224820.34..224820.55 rows=2 width=64) (actual time=4017.359..4053.216 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=223820.34..223820.35 rows=1 width=64) (actual time=4021.592..4021.593 rows=1 loops=3)
               ->  Nested Loop  (cost=135386.97..223820.33 rows=2 width=32) (actual time=2983.863..4020.892 rows=1192 loops=3)
                     Join Filter: (n.id = an.person_id)
                     ->  Nested Loop  (cost=135386.54..223818.68 rows=1 width=40) (actual time=2967.998..4015.194 rows=877 loops=3)
                           ->  Nested Loop  (cost=135386.12..223816.35 rows=2 width=44) (actual time=2937.198..3995.680 rows=2862 loops=3)
                                 ->  Hash Join  (cost=135385.69..223813.63 rows=1 width=52) (actual time=2892.096..3983.821 rows=710 loops=3)
                                       Hash Cond: (mi.info_type_id = it.id)
                                       ->  Nested Loop  (cost=135383.27..223811.07 rows=52 width=56) (actual time=2891.860..3982.990 rows=710 loops=3)
                                             ->  Nested Loop  (cost=135382.83..221277.71 rows=93 width=48) (actual time=2885.614..3903.225 rows=1116 loops=3)
                                                   ->  Nested Loop  (cost=135382.40..221003.48 rows=193 width=52) (actual time=2885.552..3882.882 rows=1229 loops=3)
                                                         ->  Hash Join  (cost=135381.97..195421.31 rows=16716 width=33) (actual time=2883.891..3471.890 rows=56136 loops=3)
                                                               Hash Cond: (t.id = ci.movie_id)
                                                               ->  Parallel Seq Scan on title t  (cost=0.00..49166.29 rows=575821 width=21) (actual time=0.051..293.617 rows=460484 loops=3)
                                                                     Filter: (production_year > 2000)
                                                                     Rows Removed by Filter: 382286
                                                               ->  Hash  (cost=134105.54..134105.54 rows=73395 width=12) (actual time=2881.296..2881.296 rows=276166 loops=3)
                                                                     Buckets: 131072 (originally 131072)  Batches: 4 (originally 2)  Memory Usage: 3984kB
                                                                     ->  Nested Loop  (cost=0.56..134105.54 rows=73395 width=12) (actual time=0.304..2759.281 rows=276166 loops=3)
                                                                           ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.038..0.043 rows=1 loops=3)
                                                                                 Filter: ((role)::text = 'actress'::text)
                                                                                 Rows Removed by Filter: 11
                                                                           ->  Index Scan using role_id_cast_info on cast_info ci  (cost=0.56..133303.71 rows=80067 width=16) (actual time=0.263..2721.499 rows=276166 loops=3)
                                                                                 Index Cond: (role_id = rt.id)
                                                                                 Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                                 Rows Removed by Filter: 7175807
                                                         ->  Index Scan using name_pkey on name n  (cost=0.43..1.53 rows=1 width=19) (actual time=0.007..0.007 rows=0 loops=168407)
                                                               Index Cond: (id = ci.person_id)
                                                               Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                                               Rows Removed by Filter: 1
                                                   ->  Index Only Scan using char_name_pkey on char_name chn  (cost=0.43..1.42 rows=1 width=4) (actual time=0.016..0.016 rows=1 loops=3686)
                                                         Index Cond: (id = ci.person_role_id)
                                                         Heap Fetches: 3349
                                             ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..27.22 rows=2 width=8) (actual time=0.050..0.070 rows=1 loops=3349)
                                                   Index Cond: (movie_id = t.id)
                                                   Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%200%'::text) OR ((info)::text ~~ 'USA:%200%'::text)))
                                                   Rows Removed by Filter: 15
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.083..0.083 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.049..0.060 rows=1 loops=3)
                                                   Filter: ((info)::text = 'release dates'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.67 rows=5 width=8) (actual time=0.011..0.015 rows=4 loops=2129)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.16 rows=1 width=4) (actual time=0.006..0.006 rows=0 loops=8585)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..1.63 rows=2 width=4) (actual time=0.005..0.006 rows=1 loops=2632)
                           Index Cond: (person_id = ci.person_id)
                           Heap Fetches: 3575
 Planning Time: 48.308 ms
 Execution Time: 4054.121 ms
(56 rows)

SET
                                                                                                           QUERY PLAN                                                                                                           
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=281048.09..281048.10 rows=1 width=64) (actual time=14616.305..14616.305 rows=1 loops=1)
   ->  Gather  (cost=281047.87..281048.08 rows=2 width=64) (actual time=14616.265..14616.479 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=280047.87..280047.88 rows=1 width=64) (actual time=12355.447..12355.447 rows=1 loops=3)
               ->  Nested Loop  (cost=135386.97..280042.47 rows=1080 width=32) (actual time=2915.363..12163.292 rows=586882 loops=3)
                     ->  Nested Loop  (cost=135386.54..279269.61 rows=470 width=40) (actual time=2914.670..11116.747 rows=262348 loops=3)
                           ->  Nested Loop  (cost=135386.12..277763.14 rows=1294 width=44) (actual time=2914.596..7197.454 rows=1076352 loops=3)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Hash Join  (cost=135385.69..277101.59 rows=247 width=52) (actual time=2914.440..6107.245 rows=113945 loops=3)
                                       Hash Cond: (mi.info_type_id = it.id)
                                       ->  Nested Loop  (cost=135383.27..277023.18 rows=27899 width=56) (actual time=2914.189..5991.664 rows=540998 loops=3)
                                             ->  Nested Loop  (cost=135382.83..226386.57 rows=1846 width=48) (actual time=2914.110..4854.017 rows=53102 loops=3)
                                                   ->  Nested Loop  (cost=135382.40..220961.69 rows=3818 width=52) (actual time=2914.030..4147.372 rows=56088 loops=3)
                                                         ->  Hash Join  (cost=135381.97..195421.31 rows=16716 width=33) (actual time=2913.951..3552.731 rows=56136 loops=3)
                                                               Hash Cond: (t.id = ci.movie_id)
                                                               ->  Parallel Seq Scan on title t  (cost=0.00..49166.29 rows=575821 width=21) (actual time=0.044..293.759 rows=460484 loops=3)
                                                                     Filter: (production_year > 2000)
                                                                     Rows Removed by Filter: 382286
                                                               ->  Hash  (cost=134105.54..134105.54 rows=73395 width=12) (actual time=2911.198..2911.199 rows=276166 loops=3)
                                                                     Buckets: 131072 (originally 131072)  Batches: 4 (originally 2)  Memory Usage: 3984kB
                                                                     ->  Nested Loop  (cost=0.56..134105.54 rows=73395 width=12) (actual time=0.285..2779.996 rows=276166 loops=3)
                                                                           ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.033..0.038 rows=1 loops=3)
                                                                                 Filter: ((role)::text = 'actress'::text)
                                                                                 Rows Removed by Filter: 11
                                                                           ->  Index Scan using role_id_cast_info on cast_info ci  (cost=0.56..133303.71 rows=80067 width=16) (actual time=0.244..2742.115 rows=276166 loops=3)
                                                                                 Index Cond: (role_id = rt.id)
                                                                                 Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                                 Rows Removed by Filter: 7175807
                                                         ->  Index Scan using name_pkey on name n  (cost=0.43..1.53 rows=1 width=19) (actual time=0.010..0.010 rows=1 loops=168407)
                                                               Index Cond: (id = ci.person_id)
                                                               Filter: ((gender)::text = 'f'::text)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Only Scan using char_name_pkey on char_name chn  (cost=0.43..1.42 rows=1 width=4) (actual time=0.012..0.012 rows=1 loops=168264)
                                                         Index Cond: (id = ci.person_role_id)
                                                         Heap Fetches: 159307
                                             ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..27.01 rows=42 width=8) (actual time=0.007..0.019 rows=10 loops=159307)
                                                   Index Cond: (movie_id = t.id)
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.077..0.077 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.047..0.058 rows=1 loops=3)
                                                   Filter: ((info)::text = 'release dates'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.62 rows=5 width=8) (actual time=0.004..0.007 rows=9 loops=341836)
                                       Index Cond: (movie_id = mi.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.16 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=3229056)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..1.62 rows=2 width=4) (actual time=0.003..0.003 rows=2 loops=787043)
                           Index Cond: (person_id = n.id)
                           Heap Fetches: 1760645
 Planning Time: 51.973 ms
 Execution Time: 14617.658 ms
(54 rows)

SET
                                                                                                 QUERY PLAN                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=19541.81..19541.82 rows=1 width=68) (actual time=162.970..162.970 rows=1 loops=1)
   ->  Gather  (cost=19541.58..19541.79 rows=2 width=68) (actual time=162.956..163.124 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=18541.58..18541.59 rows=1 width=68) (actual time=146.863..146.863 rows=1 loops=3)
               ->  Nested Loop  (cost=4.35..18541.23 rows=47 width=45) (actual time=137.351..146.784 rows=47 loops=3)
                     Join Filter: (mc.movie_id = t.id)
                     ->  Hash Join  (cost=3.92..18513.76 rows=47 width=32) (actual time=137.268..145.171 rows=47 loops=3)
                           Hash Cond: (mc.company_type_id = ct.id)
                           ->  Nested Loop  (cost=2.86..18511.69 rows=187 width=36) (actual time=137.054..144.915 rows=49 loops=3)
                                 ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=4) (actual time=136.942..137.043 rows=83 loops=3)
                                       Hash Cond: (mi_idx.info_type_id = it.id)
                                       ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=8) (actual time=0.036..81.011 rows=460012 loops=3)
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.055..0.056 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.044..0.046 rows=1 loops=3)
                                                   Filter: ((info)::text = 'top 250 rank'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.63 rows=1 width=32) (actual time=0.092..0.093 rows=1 loops=250)
                                       Index Cond: (movie_id = mi_idx.movie_id)
                                       Filter: (((note)::text !~~ '%(as Metro-Goldwyn-Mayer Pictures)%'::text) AND (((note)::text ~~ '%(co-production)%'::text) OR ((note)::text ~~ '%(presents)%'::text)))
                                       Rows Removed by Filter: 33
                           ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.065..0.065 rows=1 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                 ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.044..0.046 rows=1 loops=3)
                                       Filter: ((kind)::text = 'production companies'::text)
                                       Rows Removed by Filter: 3
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=25) (actual time=0.032..0.032 rows=1 loops=142)
                           Index Cond: (id = mi_idx.movie_id)
 Planning Time: 5.003 ms
 Execution Time: 163.584 ms
(31 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=20151.20..20151.21 rows=1 width=68) (actual time=144.503..144.503 rows=1 loops=1)
   ->  Gather  (cost=20150.97..20151.18 rows=2 width=68) (actual time=143.172..145.851 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=19150.97..19150.98 rows=1 width=68) (actual time=136.682..136.682 rows=1 loops=3)
               ->  Hash Join  (cost=4.35..19143.68 rows=972 width=45) (actual time=136.675..136.676 rows=1 loops=3)
                     Hash Cond: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=3.29..19121.60 rows=3890 width=49) (actual time=136.260..136.441 rows=22 loops=3)
                           Join Filter: (t.id = mc.movie_id)
                           ->  Nested Loop  (cost=2.86..18189.65 rows=1450 width=29) (actual time=136.206..136.277 rows=1 loops=3)
                                 ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=4) (actual time=136.046..136.051 rows=3 loops=3)
                                       Hash Cond: (mi_idx.info_type_id = it.id)
                                       ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=8) (actual time=0.041..80.136 rows=460012 loops=3)
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.049..0.049 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.038..0.039 rows=1 loops=3)
                                                   Filter: ((info)::text = 'bottom 10 rank'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.58 rows=1 width=25) (actual time=0.067..0.067 rows=0 loops=10)
                                       Index Cond: (id = mi_idx.movie_id)
                                       Filter: ((production_year >= 2005) AND (production_year <= 2010))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.61 rows=3 width=32) (actual time=0.087..0.118 rows=16 loops=4)
                                 Index Cond: (movie_id = mi_idx.movie_id)
                                 Filter: ((note)::text !~~ '%(as Metro-Goldwyn-Mayer Pictures)%'::text)
                                 Rows Removed by Filter: 2
                     ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.060..0.060 rows=1 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.040..0.041 rows=1 loops=3)
                                 Filter: ((kind)::text = 'production companies'::text)
                                 Rows Removed by Filter: 3
 Planning Time: 3.898 ms
 Execution Time: 146.443 ms
(33 rows)

SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=19470.70..19470.71 rows=1 width=68) (actual time=153.546..153.546 rows=1 loops=1)
   ->  Gather  (cost=19470.48..19470.69 rows=2 width=68) (actual time=143.223..155.822 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=18470.48..18470.49 rows=1 width=68) (actual time=141.590..141.591 rows=1 loops=3)
               ->  Nested Loop  (cost=4.35..18470.44 rows=5 width=45) (actual time=139.710..141.586 rows=1 loops=3)
                     Join Filter: (mc.movie_id = t.id)
                     ->  Hash Join  (cost=3.92..18449.90 rows=35 width=32) (actual time=137.835..141.434 rows=8 loops=3)
                           Hash Cond: (mc.company_type_id = ct.id)
                           ->  Nested Loop  (cost=2.86..18448.07 rows=141 width=36) (actual time=137.599..141.194 rows=8 loops=3)
                                 ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=4) (actual time=136.219..136.320 rows=83 loops=3)
                                       Hash Cond: (mi_idx.info_type_id = it.id)
                                       ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=8) (actual time=0.047..80.400 rows=460012 loops=3)
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.049..0.049 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.038..0.039 rows=1 loops=3)
                                                   Filter: ((info)::text = 'top 250 rank'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.62 rows=1 width=32) (actual time=0.057..0.057 rows=0 loops=250)
                                       Index Cond: (movie_id = mi_idx.movie_id)
                                       Filter: (((note)::text !~~ '%(as Metro-Goldwyn-Mayer Pictures)%'::text) AND ((note)::text ~~ '%(co-production)%'::text))
                                       Rows Removed by Filter: 33
                           ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.061..0.061 rows=1 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                 ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.040..0.041 rows=1 loops=3)
                                       Filter: ((kind)::text = 'production companies'::text)
                                       Rows Removed by Filter: 3
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=25) (actual time=0.019..0.019 rows=0 loops=23)
                           Index Cond: (id = mi_idx.movie_id)
                           Filter: (production_year > 2010)
                           Rows Removed by Filter: 1
 Planning Time: 3.851 ms
 Execution Time: 156.320 ms
(33 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=20999.43..20999.44 rows=1 width=68) (actual time=143.772..143.772 rows=1 loops=1)
   ->  Gather  (cost=20999.20..20999.41 rows=2 width=68) (actual time=142.744..145.248 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=19999.20..19999.21 rows=1 width=68) (actual time=136.308..136.308 rows=1 loops=3)
               ->  Hash Join  (cost=4.35..19985.21 rows=1865 width=45) (actual time=136.281..136.300 rows=1 loops=3)
                     Hash Cond: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=3.29..19943.82 rows=7460 width=49) (actual time=135.904..136.096 rows=26 loops=3)
                           ->  Nested Loop  (cost=2.86..18176.93 rows=2782 width=29) (actual time=135.853..135.930 rows=2 loops=3)
                                 ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=4) (actual time=135.802..135.806 rows=3 loops=3)
                                       Hash Cond: (mi_idx.info_type_id = it.id)
                                       ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=8) (actual time=0.043..79.823 rows=460012 loops=3)
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.054..0.054 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.043..0.044 rows=1 loops=3)
                                                   Filter: ((info)::text = 'bottom 10 rank'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=25) (actual time=0.036..0.036 rows=1 loops=10)
                                       Index Cond: (id = mi_idx.movie_id)
                                       Filter: (production_year > 2000)
                                       Rows Removed by Filter: 0
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.61 rows=3 width=32) (actual time=0.059..0.080 rows=13 loops=6)
                                 Index Cond: (movie_id = t.id)
                                 Filter: ((note)::text !~~ '%(as Metro-Goldwyn-Mayer Pictures)%'::text)
                                 Rows Removed by Filter: 2
                     ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.060..0.060 rows=1 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.039..0.041 rows=1 loops=3)
                                 Filter: ((kind)::text = 'production companies'::text)
                                 Rows Removed by Filter: 3
 Planning Time: 3.779 ms
 Execution Time: 145.693 ms
(32 rows)

SET
                                                                                             QUERY PLAN                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=12310.68..12310.69 rows=1 width=32) (actual time=12373.769..12373.769 rows=1 loops=1)
   ->  Nested Loop  (cost=9.03..12310.67 rows=1 width=17) (actual time=123.320..12373.643 rows=33 loops=1)
         ->  Nested Loop  (cost=8.60..12310.22 rows=1 width=21) (actual time=123.254..12372.578 rows=33 loops=1)
               ->  Nested Loop  (cost=8.17..12305.16 rows=11 width=25) (actual time=13.151..7456.955 rows=532809 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=7.61..12299.20 rows=3 width=29) (actual time=13.072..1563.196 rows=6016 loops=1)
                           Join Filter: (t.kind_id = kt.id)
                           Rows Removed by Join Filter: 1347
                           ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.045..0.047 rows=1 loops=1)
                                 Filter: ((kind)::text = 'movie'::text)
                                 Rows Removed by Filter: 6
                           ->  Nested Loop  (cost=7.61..12297.85 rows=21 width=33) (actual time=2.083..1560.339 rows=7363 loops=1)
                                 ->  Nested Loop  (cost=7.18..12286.63 rows=23 width=8) (actual time=2.026..1373.387 rows=8765 loops=1)
                                       Join Filter: (cc.status_id = cct2.id)
                                       Rows Removed by Join Filter: 8765
                                       ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.029..0.031 rows=2 loops=1)
                                             Filter: ((kind)::text ~~ '%complete%'::text)
                                             Rows Removed by Filter: 2
                                       ->  Nested Loop  (cost=7.18..12284.40 rows=94 width=12) (actual time=1.609..684.877 rows=8765 loops=2)
                                             Join Filter: (cc.subject_id = cct1.id)
                                             Rows Removed by Join Filter: 4045
                                             ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.005..0.008 rows=1 loops=2)
                                                   Filter: ((kind)::text = 'cast'::text)
                                                   Rows Removed by Filter: 3
                                             ->  Nested Loop  (cost=7.18..12278.66 rows=375 width=16) (actual time=1.601..680.700 rows=12810 loops=2)
                                                   ->  Nested Loop  (cost=6.76..12150.15 rows=270 width=4) (actual time=0.880..473.302 rows=35548 loops=2)
                                                         ->  Seq Scan on keyword k  (cost=0.00..3632.40 rows=8 width=4) (actual time=0.171..49.145 rows=8 loops=2)
                                                               Filter: ((keyword)::text = ANY ('{superhero,sequel,second-part,marvel-comics,based-on-comic,tv-special,fight,violence}'::text[]))
                                                               Rows Removed by Filter: 134162
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1061.72 rows=300 width=8) (actual time=1.553..51.222 rows=4444 loops=16)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=46976
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=1.134..1.134 rows=4444 loops=16)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.004..0.005 rows=0 loops=71096)
                                                         Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.020..0.020 rows=1 loops=8765)
                                       Index Cond: (id = mk.movie_id)
                                       Filter: (production_year > 1950)
                                       Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.028..0.915 rows=89 loops=6016)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=4) (actual time=0.008..0.008 rows=0 loops=532809)
                     Index Cond: (id = ci.person_role_id)
                     Filter: (((name)::text !~~ '%Sherlock%'::text) AND (((name)::text ~~ '%Tony%Stark%'::text) OR ((name)::text ~~ '%Iron%Man%'::text)))
                     Rows Removed by Filter: 0
         ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.030..0.030 rows=1 loops=33)
               Index Cond: (id = ci.person_id)
               Heap Fetches: 33
 Planning Time: 32.854 ms
 Execution Time: 12374.394 ms
(51 rows)

SET
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=12305.07..12305.08 rows=1 width=32) (actual time=9421.616..9421.616 rows=1 loops=1)
   ->  Nested Loop  (cost=9.03..12305.06 rows=1 width=17) (actual time=149.224..9421.520 rows=17 loops=1)
         ->  Nested Loop  (cost=8.60..12304.60 rows=1 width=21) (actual time=149.186..9420.522 rows=27 loops=1)
               ->  Nested Loop  (cost=8.17..12301.40 rows=7 width=25) (actual time=19.756..4874.053 rows=222518 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=7.61..12297.43 rows=2 width=29) (actual time=19.683..2274.541 rows=1472 loops=1)
                           Join Filter: (cc.status_id = cct2.id)
                           Rows Removed by Join Filter: 1472
                           ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.041..0.043 rows=2 loops=1)
                                 Filter: ((kind)::text ~~ '%complete%'::text)
                                 Rows Removed by Filter: 2
                           ->  Nested Loop  (cost=7.61..12296.29 rows=7 width=33) (actual time=16.406..1136.876 rows=1472 loops=2)
                                 Join Filter: (cc.subject_id = cct1.id)
                                 Rows Removed by Join Filter: 243
                                 ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.006..0.008 rows=1 loops=2)
                                       Filter: ((kind)::text = 'cast'::text)
                                       Rows Removed by Filter: 3
                                 ->  Nested Loop  (cost=7.61..12294.88 rows=29 width=37) (actual time=16.395..1136.181 rows=1715 loops=2)
                                       ->  Nested Loop  (cost=7.19..12284.84 rows=21 width=25) (actual time=16.152..1085.808 rows=6043 loops=2)
                                             Join Filter: (t.kind_id = kt.id)
                                             Rows Removed by Join Filter: 8122
                                             ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.012..0.014 rows=1 loops=2)
                                                   Filter: ((kind)::text = 'movie'::text)
                                                   Rows Removed by Filter: 6
                                             ->  Nested Loop  (cost=7.19..12281.90 rows=148 width=29) (actual time=0.910..1081.274 rows=14165 loops=2)
                                                   ->  Nested Loop  (cost=6.76..12150.15 rows=270 width=4) (actual time=0.873..479.104 rows=35548 loops=2)
                                                         ->  Seq Scan on keyword k  (cost=0.00..3632.40 rows=8 width=4) (actual time=0.173..48.845 rows=8 loops=2)
                                                               Filter: ((keyword)::text = ANY ('{superhero,sequel,second-part,marvel-comics,based-on-comic,tv-special,fight,violence}'::text[]))
                                                               Rows Removed by Filter: 134162
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1061.72 rows=300 width=8) (actual time=1.570..51.671 rows=4444 loops=16)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=46976
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=1.153..1.153 rows=4444 loops=16)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.016..0.016 rows=0 loops=71096)
                                                         Index Cond: (id = mk.movie_id)
                                                         Filter: (production_year > 2000)
                                                         Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.007..0.007 rows=0 loops=12086)
                                             Index Cond: (movie_id = t.id)
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.034..1.647 rows=151 loops=1472)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=4) (actual time=0.019..0.019 rows=0 loops=222518)
                     Index Cond: (id = ci.person_id)
                     Filter: ((name)::text ~~ '%Downey%Robert%'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=4) (actual time=0.035..0.035 rows=1 loops=27)
               Index Cond: (id = ci.person_role_id)
               Filter: (((name)::text !~~ '%Sherlock%'::text) AND (((name)::text ~~ '%Tony%Stark%'::text) OR ((name)::text ~~ '%Iron%Man%'::text)))
               Rows Removed by Filter: 0
 Planning Time: 34.021 ms
 Execution Time: 9422.264 ms
(52 rows)

SET
                                                                                             QUERY PLAN                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=14700.60..14700.61 rows=1 width=64) (actual time=5348.732..5348.732 rows=1 loops=1)
   ->  Nested Loop  (cost=9.03..14700.60 rows=1 width=32) (actual time=19.618..5341.977 rows=5406 loops=1)
         ->  Nested Loop  (cost=8.60..14700.14 rows=1 width=21) (actual time=19.552..5200.534 rows=5406 loops=1)
               ->  Nested Loop  (cost=8.17..14696.48 rows=8 width=25) (actual time=18.817..3672.748 rows=189844 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=7.61..14692.51 rows=2 width=29) (actual time=18.728..1656.968 rows=1267 loops=1)
                           Join Filter: (cc.status_id = cct2.id)
                           Rows Removed by Join Filter: 1267
                           ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.031..0.033 rows=2 loops=1)
                                 Filter: ((kind)::text ~~ '%complete%'::text)
                                 Rows Removed by Filter: 2
                           ->  Nested Loop  (cost=7.61..14691.35 rows=9 width=33) (actual time=15.784..828.160 rows=1267 loops=2)
                                 Join Filter: (cc.subject_id = cct1.id)
                                 Rows Removed by Join Filter: 218
                                 ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=2)
                                       Filter: ((kind)::text = 'cast'::text)
                                       Rows Removed by Filter: 3
                                 ->  Nested Loop  (cost=7.61..14689.84 rows=37 width=37) (actual time=15.769..827.602 rows=1485 loops=2)
                                       ->  Nested Loop  (cost=7.19..14677.40 rows=26 width=25) (actual time=15.542..786.993 rows=5032 loops=2)
                                             Join Filter: (t.kind_id = kt.id)
                                             Rows Removed by Join Filter: 5581
                                             ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.012..0.015 rows=1 loops=2)
                                                   Filter: ((kind)::text = 'movie'::text)
                                                   Rows Removed by Filter: 6
                                             ->  Nested Loop  (cost=7.19..14674.02 rows=184 width=29) (actual time=0.944..783.544 rows=10613 loops=2)
                                                   ->  Nested Loop  (cost=6.76..14509.57 rows=337 width=4) (actual time=0.906..364.511 rows=24091 loops=2)
                                                         ->  Seq Scan on keyword k  (cost=0.00..3967.82 rows=10 width=4) (actual time=0.194..55.696 rows=10 loops=2)
                                                               Filter: ((keyword)::text = ANY ('{superhero,marvel-comics,based-on-comic,tv-special,fight,violence,magnet,web,claw,laser}'::text[]))
                                                               Rows Removed by Filter: 134160
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1051.17 rows=300 width=8) (actual time=0.978..29.759 rows=2409 loops=20)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=34254
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.726..0.726 rows=2409 loops=20)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.016..0.016 rows=0 loops=48182)
                                                         Index Cond: (id = mk.movie_id)
                                                         Filter: (production_year > 2000)
                                                         Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.006..0.007 rows=0 loops=10064)
                                             Index Cond: (movie_id = t.id)
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.032..1.487 rows=150 loops=1267)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=4) (actual time=0.007..0.007 rows=0 loops=189844)
                     Index Cond: (id = ci.person_role_id)
                     Filter: ((name IS NOT NULL) AND (((name)::text ~~ '%man%'::text) OR ((name)::text ~~ '%Man%'::text)))
                     Rows Removed by Filter: 0
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=19) (actual time=0.025..0.025 rows=1 loops=5406)
               Index Cond: (id = ci.person_id)
 Planning Time: 33.726 ms
 Execution Time: 5349.365 ms
(50 rows)

SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3756.64..3756.65 rows=1 width=96) (actual time=270.079..270.080 rows=1 loops=1)
   ->  Nested Loop  (cost=8.76..3756.63 rows=1 width=118) (actual time=6.856..268.353 rows=1410 loops=1)
         Join Filter: (ml.movie_id = t.id)
         ->  Nested Loop  (cost=8.33..3756.13 rows=1 width=117) (actual time=6.814..258.686 rows=1816 loops=1)
               Join Filter: (mc.company_type_id = ct.id)
               Rows Removed by Join Filter: 95
               ->  Nested Loop  (cost=8.33..3755.07 rows=1 width=121) (actual time=6.787..243.172 rows=1911 loops=1)
                     ->  Nested Loop  (cost=7.91..3754.61 rows=1 width=106) (actual time=6.731..229.046 rows=4365 loops=1)
                           Join Filter: (ml.movie_id = mc.movie_id)
                           ->  Nested Loop  (cost=7.48..3754.04 rows=1 width=94) (actual time=6.687..223.720 rows=684 loops=1)
                                 Join Filter: (ml.movie_id = mi.movie_id)
                                 ->  Nested Loop  (cost=7.04..3752.25 rows=1 width=90) (actual time=5.440..216.574 rows=199 loops=1)
                                       Join Filter: (ml.link_type_id = lt.id)
                                       Rows Removed by Join Filter: 303
                                       ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.036..0.047 rows=2 loops=1)
                                             Filter: ((link)::text ~~ '%follow%'::text)
                                             Rows Removed by Filter: 16
                                       ->  Nested Loop  (cost=7.04..3750.90 rows=10 width=12) (actual time=4.750..108.213 rows=251 loops=2)
                                             ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=4.738..86.268 rows=10544 loops=2)
                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.248..17.759 rows=1 loops=2)
                                                         Filter: ((keyword)::text = 'sequel'::text)
                                                         Rows Removed by Filter: 134169
                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=3.437..65.857 rows=10544 loops=2)
                                                         Recheck Cond: (keyword_id = k.id)
                                                         Heap Blocks: exact=11140
                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=2.654..2.654 rows=10544 loops=2)
                                                               Index Cond: (keyword_id = k.id)
                                             ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.002..0.002 rows=0 loops=21088)
                                                   Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.77 rows=1 width=4) (actual time=0.031..0.035 rows=3 loops=199)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German}'::text[]))
                                       Rows Removed by Filter: 17
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=12) (actual time=0.003..0.006 rows=6 loops=684)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: (note IS NULL)
                                 Rows Removed by Filter: 2
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=4365)
                           Index Cond: (id = mc.company_id)
                           Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                           Rows Removed by Filter: 1
               ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1911)
                     Filter: ((kind)::text = 'production companies'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.004..0.004 rows=1 loops=1816)
               Index Cond: (id = mk.movie_id)
               Filter: ((production_year >= 1950) AND (production_year <= 2000))
               Rows Removed by Filter: 0
 Planning Time: 30.563 ms
 Execution Time: 270.758 ms
(50 rows)

SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3756.33..3756.34 rows=1 width=96) (actual time=128.699..128.699 rows=1 loops=1)
   ->  Nested Loop  (cost=8.76..3756.32 rows=1 width=118) (actual time=6.249..128.620 rows=38 loops=1)
         Join Filter: (ml.movie_id = t.id)
         ->  Nested Loop  (cost=8.33..3755.82 rows=1 width=117) (actual time=5.197..126.858 rows=308 loops=1)
               Join Filter: (mc.company_type_id = ct.id)
               Rows Removed by Join Filter: 19
               ->  Nested Loop  (cost=8.33..3754.75 rows=1 width=121) (actual time=5.186..124.204 rows=327 loops=1)
                     ->  Nested Loop  (cost=7.91..3754.30 rows=1 width=106) (actual time=5.170..121.661 rows=749 loops=1)
                           Join Filter: (ml.movie_id = mc.movie_id)
                           ->  Nested Loop  (cost=7.48..3753.72 rows=1 width=94) (actual time=5.146..120.738 rows=118 loops=1)
                                 Join Filter: (ml.movie_id = mi.movie_id)
                                 ->  Nested Loop  (cost=7.04..3752.25 rows=1 width=90) (actual time=4.657..117.199 rows=199 loops=1)
                                       Join Filter: (ml.link_type_id = lt.id)
                                       Rows Removed by Join Filter: 303
                                       ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.015..0.025 rows=2 loops=1)
                                             Filter: ((link)::text ~~ '%follow%'::text)
                                             Rows Removed by Filter: 16
                                       ->  Nested Loop  (cost=7.04..3750.90 rows=10 width=12) (actual time=4.359..58.539 rows=251 loops=2)
                                             ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=4.341..42.786 rows=10544 loops=2)
                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.040..17.776 rows=1 loops=2)
                                                         Filter: ((keyword)::text = 'sequel'::text)
                                                         Rows Removed by Filter: 134169
                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=3.255..23.090 rows=10544 loops=2)
                                                         Recheck Cond: (keyword_id = k.id)
                                                         Heap Blocks: exact=11140
                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=2.485..2.485 rows=10544 loops=2)
                                                               Index Cond: (keyword_id = k.id)
                                             ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.001..0.001 rows=0 loops=21088)
                                                   Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.45 rows=1 width=4) (actual time=0.016..0.017 rows=1 loops=199)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Germany,German}'::text[]))
                                       Rows Removed by Filter: 20
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=12) (actual time=0.003..0.006 rows=6 loops=118)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: (note IS NULL)
                                 Rows Removed by Filter: 2
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=749)
                           Index Cond: (id = mc.company_id)
                           Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                           Rows Removed by Filter: 1
               ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=327)
                     Filter: ((kind)::text = 'production companies'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.005..0.005 rows=0 loops=308)
               Index Cond: (id = mk.movie_id)
               Filter: ((production_year >= 2000) AND (production_year <= 2010))
               Rows Removed by Filter: 1
 Planning Time: 28.553 ms
 Execution Time: 129.307 ms
(50 rows)

SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3756.72..3756.73 rows=1 width=96) (actual time=135.226..135.226 rows=1 loops=1)
   ->  Nested Loop  (cost=8.76..3756.71 rows=1 width=118) (actual time=5.689..134.150 rows=1874 loops=1)
         Join Filter: (ml.movie_id = mi.movie_id)
         ->  Nested Loop  (cost=8.32..3754.85 rows=1 width=134) (actual time=5.664..126.385 rows=402 loops=1)
               Join Filter: (mc.company_type_id = ct.id)
               Rows Removed by Join Filter: 20
               ->  Nested Loop  (cost=8.32..3753.79 rows=1 width=138) (actual time=5.653..122.937 rows=422 loops=1)
                     ->  Nested Loop  (cost=7.90..3753.33 rows=1 width=123) (actual time=4.777..118.654 rows=1021 loops=1)
                           Join Filter: (ml.movie_id = mc.movie_id)
                           ->  Nested Loop  (cost=7.47..3752.76 rows=1 width=111) (actual time=4.701..116.456 rows=199 loops=1)
                                 Join Filter: (ml.movie_id = t.id)
                                 ->  Nested Loop  (cost=7.04..3752.25 rows=1 width=90) (actual time=4.614..114.954 rows=199 loops=1)
                                       Join Filter: (ml.link_type_id = lt.id)
                                       Rows Removed by Join Filter: 303
                                       ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.014..0.025 rows=2 loops=1)
                                             Filter: ((link)::text ~~ '%follow%'::text)
                                             Rows Removed by Filter: 16
                                       ->  Nested Loop  (cost=7.04..3750.90 rows=10 width=12) (actual time=4.353..57.413 rows=251 loops=2)
                                             ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=4.341..41.574 rows=10544 loops=2)
                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.035..17.662 rows=1 loops=2)
                                                         Filter: ((keyword)::text = 'sequel'::text)
                                                         Rows Removed by Filter: 134169
                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=3.261..21.972 rows=10544 loops=2)
                                                         Recheck Cond: (keyword_id = k.id)
                                                         Heap Blocks: exact=11140
                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=2.490..2.490 rows=10544 loops=2)
                                                               Index Cond: (keyword_id = k.id)
                                             ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.001..0.001 rows=0 loops=21088)
                                                   Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.007..0.007 rows=1 loops=199)
                                       Index Cond: (id = mk.movie_id)
                                       Filter: ((production_year >= 1950) AND (production_year <= 2010))
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=12) (actual time=0.007..0.009 rows=5 loops=199)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: (note IS NULL)
                                 Rows Removed by Filter: 2
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.004..0.004 rows=0 loops=1021)
                           Index Cond: (id = mc.company_id)
                           Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                           Rows Removed by Filter: 1
               ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=422)
                     Filter: ((kind)::text = 'production companies'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.82 rows=3 width=4) (actual time=0.013..0.017 rows=5 loops=402)
               Index Cond: (movie_id = mk.movie_id)
               Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,English}'::text[]))
               Rows Removed by Filter: 16
 Planning Time: 29.277 ms
 Execution Time: 135.870 ms
(49 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7401.04..7401.05 rows=1 width=96) (actual time=1632.227..1632.227 rows=1 loops=1)
   ->  Nested Loop  (cost=8.90..7401.03 rows=1 width=41) (actual time=35.194..1628.812 rows=2851 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         Rows Removed by Join Filter: 191
         ->  Nested Loop  (cost=8.90..7398.61 rows=1 width=45) (actual time=35.178..1595.437 rows=3042 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=8.46..7397.02 rows=1 width=57) (actual time=13.344..1339.525 rows=2958 loops=1)
                     Join Filter: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=8.46..7395.93 rows=1 width=61) (actual time=13.320..1316.595 rows=2958 loops=1)
                           ->  Nested Loop  (cost=8.04..7395.38 rows=1 width=46) (actual time=13.288..1277.334 rows=3374 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.62..7394.80 rows=1 width=34) (actual time=13.222..1173.610 rows=2378 loops=1)
                                       Join Filter: (mi_idx.info_type_id = it2.id)
                                       Rows Removed by Join Filter: 6321
                                       ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.032..0.035 rows=1 loops=1)
                                             Filter: ((info)::text = 'rating'::text)
                                             Rows Removed by Filter: 112
                                       ->  Nested Loop  (cost=7.62..7392.07 rows=26 width=38) (actual time=7.660..1171.789 rows=8699 loops=1)
                                             Join Filter: (t.id = mi_idx.movie_id)
                                             ->  Nested Loop  (cost=7.19..7386.71 rows=10 width=25) (actual time=7.608..1075.642 rows=4832 loops=1)
                                                   Join Filter: (t.kind_id = kt.id)
                                                   Rows Removed by Join Filter: 2286
                                                   ->  Nested Loop  (cost=7.19..7384.59 rows=36 width=29) (actual time=7.551..1069.395 rows=5606 loops=1)
                                                         ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=7.382..502.609 rows=37091 loops=1)
                                                               ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.506..38.044 rows=3 loops=1)
                                                                     Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                     Rows Removed by Filter: 134167
                                                               ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=5.088..149.110 rows=12364 loops=3)
                                                                     Recheck Cond: (keyword_id = k.id)
                                                                     Heap Blocks: exact=26312
                                                                     ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.785..3.785 rows=12364 loops=3)
                                                                           Index Cond: (keyword_id = k.id)
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.014..0.014 rows=0 loops=37091)
                                                               Index Cond: (id = mk.movie_id)
                                                               Filter: (production_year > 2008)
                                                               Rows Removed by Filter: 1
                                                   ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=5606)
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.036..0.039 rows=2 loops=1)
                                                               Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                               Rows Removed by Filter: 5
                                             ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=13) (actual time=0.017..0.018 rows=2 loops=4832)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((info)::text < '7.0'::text)
                                                   Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.036..0.042 rows=1 loops=2378)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                                       Rows Removed by Filter: 10
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.010..0.010 rows=1 loops=3374)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text <> '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.002..0.002 rows=1 loops=2958)
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.56 rows=2 width=8) (actual time=0.077..0.085 rows=1 loops=2958)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Germany,German,USA,American}'::text[]))
                     Rows Removed by Filter: 155
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=3042)
               Filter: ((info)::text = 'countries'::text)
               Rows Removed by Filter: 14
 Planning Time: 76.861 ms
 Execution Time: 1632.997 ms
(62 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7399.71..7399.72 rows=1 width=96) (actual time=1232.950..1232.950 rows=1 loops=1)
   ->  Nested Loop  (cost=8.90..7399.70 rows=1 width=41) (actual time=43.386..1232.850 rows=31 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         Rows Removed by Join Filter: 3
         ->  Nested Loop  (cost=8.90..7397.27 rows=1 width=45) (actual time=43.370..1232.424 rows=34 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=8.46..7395.69 rows=1 width=57) (actual time=43.155..1223.104 rows=50 loops=1)
                     Join Filter: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=8.46..7394.60 rows=1 width=61) (actual time=43.129..1222.526 rows=50 loops=1)
                           ->  Nested Loop  (cost=8.04..7394.05 rows=1 width=46) (actual time=43.091..1220.617 rows=78 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.62..7393.47 rows=1 width=34) (actual time=17.241..1152.056 rows=1615 loops=1)
                                       Join Filter: (mi_idx.info_type_id = it2.id)
                                       Rows Removed by Join Filter: 4362
                                       ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.031..0.034 rows=1 loops=1)
                                             Filter: ((info)::text = 'rating'::text)
                                             Rows Removed by Filter: 112
                                       ->  Nested Loop  (cost=7.62..7390.80 rows=21 width=38) (actual time=8.024..1150.804 rows=5977 loops=1)
                                             Join Filter: (t.id = mi_idx.movie_id)
                                             ->  Nested Loop  (cost=7.19..7386.51 rows=8 width=25) (actual time=7.970..1081.771 rows=3517 loops=1)
                                                   Join Filter: (t.kind_id = kt.id)
                                                   Rows Removed by Join Filter: 1618
                                                   ->  Nested Loop  (cost=7.19..7384.59 rows=29 width=29) (actual time=7.931..1077.335 rows=4040 loops=1)
                                                         ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=7.764..536.375 rows=37091 loops=1)
                                                               ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.953..38.520 rows=3 loops=1)
                                                                     Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                     Rows Removed by Filter: 134167
                                                               ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=5.021..160.272 rows=12364 loops=3)
                                                                     Recheck Cond: (keyword_id = k.id)
                                                                     Heap Blocks: exact=26312
                                                                     ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.729..3.729 rows=12364 loops=3)
                                                                           Index Cond: (keyword_id = k.id)
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.014..0.014 rows=0 loops=37091)
                                                               Index Cond: (id = mk.movie_id)
                                                               Filter: (production_year > 2009)
                                                               Rows Removed by Filter: 1
                                                   ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=4040)
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.027..0.029 rows=2 loops=1)
                                                               Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                               Rows Removed by Filter: 5
                                             ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=13) (actual time=0.017..0.018 rows=2 loops=3517)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((info)::text < '7.0'::text)
                                                   Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.041..0.041 rows=0 loops=1615)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                                       Rows Removed by Filter: 12
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.023..0.023 rows=1 loops=78)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text <> '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.003..0.003 rows=1 loops=50)
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.56 rows=2 width=8) (actual time=0.170..0.184 rows=1 loops=50)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Germany,German,USA,American}'::text[]))
                     Rows Removed by Filter: 53
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=34)
               Filter: ((info)::text = 'countries'::text)
               Rows Removed by Filter: 16
 Planning Time: 78.697 ms
 Execution Time: 1233.831 ms
(62 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7405.36..7405.37 rows=1 width=96) (actual time=4745.719..4745.720 rows=1 loops=1)
   ->  Nested Loop  (cost=8.90..7405.35 rows=1 width=41) (actual time=12.102..4721.226 rows=21489 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         Rows Removed by Join Filter: 3123
         ->  Nested Loop  (cost=8.90..7402.92 rows=1 width=45) (actual time=12.089..4435.220 rows=24612 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=8.46..7401.02 rows=1 width=57) (actual time=11.950..1901.816 rows=23425 loops=1)
                     Join Filter: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=8.46..7399.93 rows=1 width=61) (actual time=11.925..1721.417 rows=23425 loops=1)
                           ->  Nested Loop  (cost=8.04..7399.38 rows=1 width=46) (actual time=11.892..1533.062 rows=25316 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.62..7398.81 rows=1 width=34) (actual time=8.052..1283.385 rows=5949 loops=1)
                                       Join Filter: (mi_idx.info_type_id = it2.id)
                                       Rows Removed by Join Filter: 11942
                                       ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.030..0.032 rows=1 loops=1)
                                             Filter: ((info)::text = 'rating'::text)
                                             Rows Removed by Filter: 112
                                       ->  Nested Loop  (cost=7.62..7395.82 rows=46 width=38) (actual time=8.017..1279.611 rows=17891 loops=1)
                                             Join Filter: (t.id = mi_idx.movie_id)
                                             ->  Nested Loop  (cost=7.19..7387.25 rows=16 width=25) (actual time=7.964..1124.334 rows=8073 loops=1)
                                                   Join Filter: (t.kind_id = kt.id)
                                                   Rows Removed by Join Filter: 4332
                                                   ->  Nested Loop  (cost=7.19..7384.59 rows=55 width=29) (actual time=7.803..1113.414 rows=9739 loops=1)
                                                         ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=7.754..532.956 rows=37091 loops=1)
                                                               ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.967..38.449 rows=3 loops=1)
                                                                     Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                     Rows Removed by Filter: 134167
                                                               ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=5.024..159.046 rows=12364 loops=3)
                                                                     Recheck Cond: (keyword_id = k.id)
                                                                     Heap Blocks: exact=26312
                                                                     ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.727..3.727 rows=12364 loops=3)
                                                                           Index Cond: (keyword_id = k.id)
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.014..0.014 rows=0 loops=37091)
                                                               Index Cond: (id = mk.movie_id)
                                                               Filter: (production_year > 2005)
                                                               Rows Removed by Filter: 1
                                                   ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=9739)
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.028..0.030 rows=2 loops=1)
                                                               Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                               Rows Removed by Filter: 5
                                             ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=13) (actual time=0.016..0.018 rows=2 loops=8073)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((info)::text < '8.5'::text)
                                                   Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.028..0.039 rows=4 loops=5949)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                                       Rows Removed by Filter: 8
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.006..0.006 rows=1 loops=25316)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text <> '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.002..0.002 rows=1 loops=23425)
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.089..0.107 rows=1 loops=23425)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                     Rows Removed by Filter: 180
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=24612)
               Filter: ((info)::text = 'countries'::text)
               Rows Removed by Filter: 20
 Planning Time: 78.379 ms
 Execution Time: 4746.541 ms
(62 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7405.28..7405.29 rows=1 width=96) (actual time=3523.306..3523.306 rows=1 loops=1)
   ->  Nested Loop  (cost=8.90..7405.27 rows=1 width=41) (actual time=12.439..3467.221 rows=46281 loops=1)
         Join Filter: (mc.company_type_id = ct.id)
         Rows Removed by Join Filter: 4783
         ->  Nested Loop  (cost=8.90..7404.18 rows=1 width=45) (actual time=12.416..3112.814 rows=46281 loops=1)
               ->  Nested Loop  (cost=8.48..7403.73 rows=1 width=30) (actual time=8.265..2660.440 rows=64848 loops=1)
                     Join Filter: (t.id = mc.movie_id)
                     ->  Nested Loop  (cost=8.05..7403.13 rows=1 width=38) (actual time=8.226..2475.126 rows=4115 loops=1)
                           Join Filter: (mi.info_type_id = it1.id)
                           Rows Removed by Join Filter: 594
                           ->  Nested Loop  (cost=8.05..7400.71 rows=1 width=42) (actual time=8.214..2418.081 rows=4709 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=7.62..7398.81 rows=1 width=34) (actual time=8.097..1286.091 rows=5949 loops=1)
                                       Join Filter: (mi_idx.info_type_id = it2.id)
                                       Rows Removed by Join Filter: 11942
                                       ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.031..0.033 rows=1 loops=1)
                                             Filter: ((info)::text = 'rating'::text)
                                             Rows Removed by Filter: 112
                                       ->  Nested Loop  (cost=7.62..7395.82 rows=46 width=38) (actual time=8.062..1282.194 rows=17891 loops=1)
                                             Join Filter: (t.id = mi_idx.movie_id)
                                             ->  Nested Loop  (cost=7.19..7387.25 rows=16 width=25) (actual time=8.013..1127.176 rows=8073 loops=1)
                                                   Join Filter: (t.kind_id = kt.id)
                                                   Rows Removed by Join Filter: 4332
                                                   ->  Nested Loop  (cost=7.19..7384.59 rows=55 width=29) (actual time=7.853..1116.388 rows=9739 loops=1)
                                                         ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=7.814..532.012 rows=37091 loops=1)
                                                               ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.970..38.520 rows=3 loops=1)
                                                                     Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                     Rows Removed by Filter: 134167
                                                               ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=5.053..158.746 rows=12364 loops=3)
                                                                     Recheck Cond: (keyword_id = k.id)
                                                                     Heap Blocks: exact=26312
                                                                     ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.750..3.750 rows=12364 loops=3)
                                                                           Index Cond: (keyword_id = k.id)
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.015..0.015 rows=0 loops=37091)
                                                               Index Cond: (id = mk.movie_id)
                                                               Filter: (production_year > 2005)
                                                               Rows Removed by Filter: 1
                                                   ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=9739)
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.031..0.033 rows=2 loops=1)
                                                               Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                               Rows Removed by Filter: 5
                                             ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=13) (actual time=0.016..0.018 rows=2 loops=8073)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((info)::text < '8.5'::text)
                                                   Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.164..0.189 rows=1 loops=5949)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                                       Rows Removed by Filter: 71
                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=4709)
                                 Filter: ((info)::text = 'countries'::text)
                                 Rows Removed by Filter: 20
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=12) (actual time=0.020..0.037 rows=16 loops=4115)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.006..0.006 rows=1 loops=64848)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text <> '[us]'::text)
                     Rows Removed by Filter: 0
         ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.002..0.002 rows=1 loops=46281)
 Planning Time: 80.893 ms
 Execution Time: 3524.120 ms
(61 rows)

SET
                                                                                                    QUERY PLAN                                                                                                    
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=57963.27..57963.28 rows=1 width=64) (actual time=552.396..552.397 rows=1 loops=1)
   ->  Nested Loop  (cost=4238.90..57963.26 rows=1 width=65) (actual time=495.979..551.921 rows=618 loops=1)
         ->  Nested Loop  (cost=4238.48..57962.82 rows=1 width=69) (actual time=495.903..546.341 rows=618 loops=1)
               ->  Gather  (cost=4238.35..57962.67 rows=1 width=73) (actual time=495.808..551.346 rows=618 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Nested Loop  (cost=3238.35..56962.57 rows=1 width=73) (actual time=502.862..542.044 rows=206 loops=3)
                           ->  Nested Loop  (cost=3237.93..56962.12 rows=1 width=77) (actual time=502.776..541.451 rows=206 loops=3)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=3237.50..56961.52 rows=1 width=85) (actual time=502.702..540.819 rows=205 loops=3)
                                       ->  Nested Loop  (cost=3237.06..56959.69 rows=1 width=77) (actual time=502.632..540.633 rows=2 loops=3)
                                             ->  Nested Loop  (cost=3236.92..56959.27 rows=2 width=81) (actual time=502.575..540.572 rows=2 loops=3)
                                                   ->  Hash Join  (cost=3236.49..54671.45 rows=1099 width=73) (actual time=269.294..387.576 rows=344 loops=3)
                                                         Hash Cond: (t.kind_id = kt.id)
                                                         ->  Hash Join  (cost=3235.39..54637.93 rows=7692 width=29) (actual time=50.839..387.010 rows=694 loops=3)
                                                               Hash Cond: (t.id = cc.movie_id)
                                                               ->  Parallel Seq Scan on title t  (cost=0.00..49166.29 rows=575821 width=25) (actual time=0.042..279.754 rows=460484 loops=3)
                                                                     Filter: (production_year > 2000)
                                                                     Rows Removed by Filter: 382286
                                                               ->  Hash  (cost=2813.24..2813.24 rows=33772 width=4) (actual time=49.415..49.415 rows=24592 loops=3)
                                                                     Buckets: 65536  Batches: 1  Memory Usage: 1377kB
                                                                     ->  Hash Join  (cost=1.06..2813.24 rows=33772 width=4) (actual time=0.125..42.209 rows=24592 loops=3)
                                                                           Hash Cond: (cc.status_id = cct1.id)
                                                                           ->  Seq Scan on complete_cast cc  (cost=0.00..2081.86 rows=135086 width=8) (actual time=0.032..21.454 rows=135086 loops=3)
                                                                           ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.036..0.036 rows=1 loops=3)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.025..0.026 rows=1 loops=3)
                                                                                       Filter: ((kind)::text = 'complete+verified'::text)
                                                                                       Rows Removed by Filter: 3
                                                         ->  Hash  (cost=1.09..1.09 rows=1 width=52) (actual time=0.089..0.089 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=52) (actual time=0.062..0.064 rows=1 loops=3)
                                                                     Filter: ((kind)::text = 'movie'::text)
                                                                     Rows Removed by Filter: 6
                                                   ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.07 rows=1 width=8) (actual time=0.443..0.443 rows=0 loops=1033)
                                                         Index Cond: (movie_id = t.id)
                                                         Filter: ((info IS NOT NULL) AND ((note)::text ~~ '%internet%'::text) AND (((info)::text ~~ 'USA:% 199%'::text) OR ((info)::text ~~ 'USA:% 200%'::text)))
                                                         Rows Removed by Filter: 211
                                             ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.19 rows=1 width=4) (actual time=0.035..0.035 rows=1 loops=5)
                                                   Index Cond: (id = mi.info_type_id)
                                                   Filter: ((info)::text = 'release dates'::text)
                                       ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.36 rows=47 width=8) (actual time=0.042..0.083 rows=123 loops=5)
                                             Index Cond: (movie_id = t.id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=12) (actual time=0.002..0.002 rows=1 loops=615)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=618)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
               ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=618)
                     Index Cond: (id = mc.company_type_id)
                     Heap Fetches: 618
         ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=618)
               Index Cond: (id = mk.keyword_id)
               Heap Fetches: 618
 Planning Time: 75.850 ms
 Execution Time: 559.771 ms
(56 rows)

SET
                                                                                              QUERY PLAN                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7402.39..7402.40 rows=1 width=64) (actual time=162.423..162.424 rows=1 loops=1)
   ->  Nested Loop  (cost=8.89..7402.38 rows=1 width=65) (actual time=47.833..162.386 rows=16 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         ->  Nested Loop  (cost=8.89..7399.96 rows=1 width=69) (actual time=47.818..162.197 rows=16 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=8.46..7398.38 rows=1 width=81) (actual time=10.039..128.762 rows=315 loops=1)
                     Join Filter: (mc.company_type_id = ct.id)
                     Rows Removed by Join Filter: 140
                     ->  Nested Loop  (cost=8.46..7397.29 rows=1 width=85) (actual time=10.016..126.234 rows=315 loops=1)
                           ->  Nested Loop  (cost=8.04..7395.51 rows=4 width=89) (actual time=9.844..113.555 rows=1218 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.61..7393.10 rows=4 width=77) (actual time=9.782..109.860 rows=60 loops=1)
                                       Join Filter: (cc.status_id = cct1.id)
                                       Rows Removed by Join Filter: 81
                                       ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.036..0.036 rows=1 loops=1)
                                             Filter: ((kind)::text = 'complete+verified'::text)
                                             Rows Removed by Filter: 3
                                       ->  Nested Loop  (cost=7.61..7391.86 rows=15 width=81) (actual time=9.710..109.775 rows=141 loops=1)
                                             ->  Nested Loop  (cost=7.19..7386.60 rows=11 width=73) (actual time=9.147..104.012 rows=401 loops=1)
                                                   Join Filter: (t.kind_id = kt.id)
                                                   Rows Removed by Join Filter: 156
                                                   ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=52) (actual time=0.010..0.012 rows=1 loops=1)
                                                         Filter: ((kind)::text = 'movie'::text)
                                                         Rows Removed by Filter: 6
                                                   ->  Nested Loop  (cost=7.19..7384.59 rows=74 width=29) (actual time=1.661..103.787 rows=557 loops=1)
                                                         ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=1.611..67.223 rows=1133 loops=1)
                                                               ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.192..42.736 rows=4 loops=1)
                                                                     Filter: ((keyword)::text = ANY ('{nerd,loner,alienation,dignity}'::text[]))
                                                                     Rows Removed by Filter: 134166
                                                               ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=0.183..5.968 rows=283 loops=4)
                                                                     Recheck Cond: (keyword_id = k.id)
                                                                     Heap Blocks: exact=1083
                                                                     ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.127..0.127 rows=283 loops=4)
                                                                           Index Cond: (keyword_id = k.id)
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.031..0.031 rows=0 loops=1133)
                                                               Index Cond: (id = mk.movie_id)
                                                               Filter: (production_year > 2000)
                                                               Rows Removed by Filter: 1
                                             ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=8) (actual time=0.012..0.013 rows=0 loops=401)
                                                   Index Cond: (movie_id = t.id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=12) (actual time=0.031..0.052 rows=20 loops=60)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.010..0.010 rows=0 loops=1218)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.002..0.002 rows=1 loops=315)
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.56 rows=1 width=8) (actual time=0.104..0.105 rows=0 loops=315)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: (((note)::text ~~ '%internet%'::text) AND ((info)::text ~~ 'USA:% 200%'::text))
                     Rows Removed by Filter: 268
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=16)
               Filter: ((info)::text = 'release dates'::text)
               Rows Removed by Filter: 15
 Planning Time: 75.449 ms
 Execution Time: 163.144 ms
(56 rows)

SET
                                                                                                       QUERY PLAN                                                                                                       
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=67209.67..67209.68 rows=1 width=64) (actual time=829.989..829.989 rows=1 loops=1)
   ->  Gather  (cost=67209.45..67209.66 rows=2 width=64) (actual time=829.662..841.479 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=66209.45..66209.46 rows=1 width=64) (actual time=821.860..821.861 rows=1 loops=3)
               ->  Nested Loop  (cost=3238.95..66209.44 rows=2 width=65) (actual time=662.750..821.727 rows=209 loops=3)
                     ->  Nested Loop  (cost=3238.53..66208.57 rows=2 width=69) (actual time=662.686..819.819 rows=209 loops=3)
                           ->  Nested Loop  (cost=3238.10..66206.76 rows=1 width=81) (actual time=662.616..819.596 rows=2 loops=3)
                                 ->  Nested Loop  (cost=3237.97..66206.60 rows=1 width=85) (actual time=662.560..819.531 rows=2 loops=3)
                                       ->  Nested Loop  (cost=3237.55..66206.16 rows=1 width=89) (actual time=662.492..819.419 rows=2 loops=3)
                                             ->  Nested Loop  (cost=3237.12..66205.53 rows=1 width=77) (actual time=662.430..819.324 rows=2 loops=3)
                                                   ->  Nested Loop  (cost=3236.98..66203.98 rows=8 width=81) (actual time=662.387..819.268 rows=2 loops=3)
                                                         ->  Hash Join  (cost=3236.54..55283.32 rows=5580 width=73) (actual time=277.558..421.890 rows=1684 loops=3)
                                                               Hash Cond: (t.kind_id = kt.id)
                                                               ->  Hash Join  (cost=3235.39..55241.01 rows=9766 width=29) (actual time=51.553..420.448 rows=2141 loops=3)
                                                                     Hash Cond: (t.id = cc.movie_id)
                                                                     ->  Parallel Seq Scan on title t  (cost=0.00..49166.29 rows=731112 width=25) (actual time=0.061..291.343 rows=583011 loops=3)
                                                                           Filter: (production_year > 1990)
                                                                           Rows Removed by Filter: 259760
                                                                     ->  Hash  (cost=2813.24..2813.24 rows=33772 width=4) (actual time=49.965..49.965 rows=24592 loops=3)
                                                                           Buckets: 65536  Batches: 1  Memory Usage: 1377kB
                                                                           ->  Hash Join  (cost=1.06..2813.24 rows=33772 width=4) (actual time=0.116..42.785 rows=24592 loops=3)
                                                                                 Hash Cond: (cc.status_id = cct1.id)
                                                                                 ->  Seq Scan on complete_cast cc  (cost=0.00..2081.86 rows=135086 width=8) (actual time=0.025..21.950 rows=135086 loops=3)
                                                                                 ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.030..0.030 rows=1 loops=3)
                                                                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                       ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.020..0.020 rows=1 loops=3)
                                                                                             Filter: ((kind)::text = 'complete+verified'::text)
                                                                                             Rows Removed by Filter: 3
                                                               ->  Hash  (cost=1.10..1.10 rows=4 width=52) (actual time=0.081..0.081 rows=4 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on kind_type kt  (cost=0.00..1.10 rows=4 width=52) (actual time=0.050..0.054 rows=4 loops=3)
                                                                           Filter: ((kind)::text = ANY ('{movie,"tv movie","video movie","video game"}'::text[]))
                                                                           Rows Removed by Filter: 3
                                                         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.95 rows=1 width=8) (actual time=0.235..0.235 rows=0 loops=5053)
                                                               Index Cond: (movie_id = t.id)
                                                               Filter: ((info IS NOT NULL) AND ((note)::text ~~ '%internet%'::text) AND (((info)::text ~~ 'USA:% 199%'::text) OR ((info)::text ~~ 'USA:% 200%'::text)))
                                                               Rows Removed by Filter: 123
                                                   ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.19 rows=1 width=4) (actual time=0.026..0.026 rows=1 loops=6)
                                                         Index Cond: (id = mi.info_type_id)
                                                         Filter: ((info)::text = 'release dates'::text)
                                             ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.58 rows=5 width=12) (actual time=0.042..0.045 rows=1 loops=6)
                                                   Index Cond: (movie_id = t.id)
                                       ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.046..0.046 rows=1 loops=7)
                                             Index Cond: (id = mc.company_id)
                                             Filter: ((country_code)::text = '[us]'::text)
                                 ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.026..0.026 rows=1 loops=7)
                                       Index Cond: (id = mc.company_type_id)
                                       Heap Fetches: 7
                           ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.34 rows=47 width=8) (actual time=0.040..0.073 rows=90 loops=7)
                                 Index Cond: (movie_id = t.id)
                     ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=628)
                           Index Cond: (id = mk.keyword_id)
                           Heap Fetches: 628
 Planning Time: 74.111 ms
 Execution Time: 842.424 ms
(56 rows)

SET
                                                                                                  QUERY PLAN                                                                                                  
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=6567.88..6567.89 rows=1 width=96) (actual time=1516.403..1516.403 rows=1 loops=1)
   ->  Nested Loop  (cost=10.32..6567.87 rows=1 width=48) (actual time=230.463..1516.145 rows=275 loops=1)
         ->  Nested Loop  (cost=9.89..6566.07 rows=1 width=41) (actual time=5.243..1491.799 rows=6518 loops=1)
               Join Filter: (rt.id = ci.role_id)
               Rows Removed by Join Filter: 30060
               ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.027..0.030 rows=1 loops=1)
                     Filter: ((role)::text = 'actress'::text)
                     Rows Removed by Filter: 11
               ->  Nested Loop  (cost=9.89..6564.90 rows=2 width=45) (actual time=4.763..1487.532 rows=36578 loops=1)
                     ->  Nested Loop  (cost=9.47..6562.80 rows=1 width=41) (actual time=4.720..1403.802 rows=13608 loops=1)
                           ->  Nested Loop  (cost=9.04..6561.09 rows=1 width=29) (actual time=4.653..1325.546 rows=13758 loops=1)
                                 Join Filter: (t.id = ci.movie_id)
                                 ->  Nested Loop  (cost=8.47..6521.26 rows=1 width=33) (actual time=2.284..627.021 rows=3406 loops=1)
                                       Join Filter: (it.id = mi.info_type_id)
                                       ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.012..0.024 rows=1 loops=1)
                                             Filter: ((info)::text = 'release dates'::text)
                                             Rows Removed by Filter: 112
                                       ->  Nested Loop  (cost=8.47..6518.83 rows=1 width=37) (actual time=2.270..626.149 rows=3406 loops=1)
                                             Join Filter: (t.id = mi.movie_id)
                                             ->  Nested Loop  (cost=8.04..6322.71 rows=6 width=29) (actual time=2.212..477.105 rows=1576 loops=1)
                                                   ->  Nested Loop  (cost=7.62..6297.69 rows=17 width=33) (actual time=2.172..415.702 rows=5566 loops=1)
                                                         Join Filter: (t.id = mc.movie_id)
                                                         ->  Nested Loop  (cost=7.19..6242.22 rows=16 width=25) (actual time=2.131..393.352 rows=495 loops=1)
                                                               ->  Nested Loop  (cost=6.76..6082.75 rows=101 width=4) (actual time=1.702..183.846 rows=9696 loops=1)
                                                                     ->  Seq Scan on keyword k  (cost=0.00..2793.84 rows=3 width=4) (actual time=0.045..35.752 rows=3 loops=1)
                                                                           Filter: ((keyword)::text = ANY ('{hero,martial-arts,hand-to-hand-combat}'::text[]))
                                                                           Rows Removed by Filter: 134167
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1093.30 rows=300 width=8) (actual time=1.482..47.707 rows=3232 loops=3)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=7446
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=1.141..1.141 rows=3232 loops=3)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using title_pkey on title t  (cost=0.43..1.58 rows=1 width=21) (actual time=0.020..0.020 rows=0 loops=9696)
                                                                     Index Cond: (id = mk.movie_id)
                                                                     Filter: (production_year > 2010)
                                                                     Rows Removed by Filter: 1
                                                         ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..3.40 rows=5 width=8) (actual time=0.026..0.039 rows=11 loops=495)
                                                               Index Cond: (movie_id = mk.movie_id)
                                                   ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.47 rows=1 width=4) (actual time=0.010..0.010 rows=0 loops=5566)
                                                         Index Cond: (id = mc.company_id)
                                                         Filter: ((country_code)::text = '[us]'::text)
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..32.67 rows=1 width=8) (actual time=0.031..0.093 rows=2 loops=1576)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%201%'::text) OR ((info)::text ~~ 'USA:%201%'::text)))
                                                   Rows Removed by Filter: 131
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..39.82 rows=1 width=16) (actual time=0.134..0.203 rows=4 loops=3406)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                       Rows Removed by Filter: 169
                           ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..1.70 rows=1 width=20) (actual time=0.005..0.005 rows=1 loops=13758)
                                 Index Cond: (id = ci.person_role_id)
                     ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.08 rows=2 width=4) (actual time=0.004..0.005 rows=3 loops=13608)
                           Index Cond: (person_id = ci.person_id)
                           Heap Fetches: 36578
         ->  Index Scan using name_pkey on name n  (cost=0.43..1.80 rows=1 width=19) (actual time=0.003..0.003 rows=0 loops=6518)
               Index Cond: (id = ci.person_id)
               Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
               Rows Removed by Filter: 1
 Planning Time: 101.974 ms
 Execution Time: 1517.311 ms
(61 rows)

SET
                                                                                                            QUERY PLAN                                                                                                            
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=6518.41..6518.42 rows=1 width=96) (actual time=111.742..111.742 rows=1 loops=1)
   ->  Nested Loop  (cost=1004.27..6518.40 rows=1 width=48) (actual time=63.274..111.684 rows=45 loops=1)
         ->  Nested Loop  (cost=1003.85..6516.52 rows=1 width=52) (actual time=21.650..108.190 rows=810 loops=1)
               ->  Nested Loop  (cost=1003.42..6514.72 rows=1 width=45) (actual time=21.597..102.236 rows=1986 loops=1)
                     ->  Nested Loop  (cost=1003.28..6514.53 rows=1 width=49) (actual time=21.570..98.593 rows=1986 loops=1)
                           Join Filter: (t.id = mi.movie_id)
                           ->  Nested Loop  (cost=1002.85..6481.85 rows=1 width=61) (actual time=21.511..49.539 rows=842 loops=1)
                                 ->  Gather  (cost=1002.42..6480.14 rows=1 width=49) (actual time=21.467..47.061 rows=857 loops=1)
                                       Workers Planned: 1
                                       Workers Launched: 1
                                       ->  Nested Loop  (cost=2.42..5480.04 rows=1 width=49) (actual time=44.750..57.361 rows=428 loops=2)
                                             ->  Nested Loop  (cost=2.28..5479.87 rows=1 width=53) (actual time=44.310..53.525 rows=2428 loops=2)
                                                   ->  Nested Loop  (cost=1.86..5477.77 rows=1 width=49) (actual time=44.269..49.366 rows=920 loops=2)
                                                         Join Filter: (t.id = ci.movie_id)
                                                         ->  Nested Loop  (cost=1.29..5437.93 rows=1 width=33) (actual time=43.190..45.169 rows=42 loops=2)
                                                               Join Filter: (t.id = mk.movie_id)
                                                               ->  Nested Loop  (cost=0.86..5434.87 rows=1 width=25) (actual time=43.154..45.062 rows=2 loops=2)
                                                                     ->  Nested Loop  (cost=0.43..5425.21 rows=6 width=4) (actual time=42.695..43.366 rows=50 loops=2)
                                                                           ->  Parallel Seq Scan on company_name cn  (cost=0.00..5068.50 rows=1 width=4) (actual time=42.646..42.652 rows=0 loops=2)
                                                                                 Filter: (((country_code)::text = '[us]'::text) AND ((name)::text = 'DreamWorks Animation'::text))
                                                                                 Rows Removed by Filter: 117498
                                                                           ->  Index Scan using company_id_movie_companies on movie_companies mc  (cost=0.43..355.38 rows=133 width=8) (actual time=0.089..1.371 rows=99 loops=1)
                                                                                 Index Cond: (company_id = cn.id)
                                                                     ->  Index Scan using title_pkey on title t  (cost=0.43..1.60 rows=1 width=21) (actual time=0.033..0.033 rows=0 loops=99)
                                                                           Index Cond: (id = mc.movie_id)
                                                                           Filter: ((production_year > 2010) AND ((title)::text ~~ 'Kung Fu Panda%'::text))
                                                                           Rows Removed by Filter: 1
                                                               ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..2.47 rows=47 width=8) (actual time=0.034..0.043 rows=21 loops=4)
                                                                     Index Cond: (movie_id = mc.movie_id)
                                                         ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..39.82 rows=1 width=16) (actual time=0.012..0.095 rows=22 loops=83)
                                                               Index Cond: (movie_id = mk.movie_id)
                                                               Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                               Rows Removed by Filter: 75
                                                   ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.08 rows=2 width=4) (actual time=0.003..0.004 rows=3 loops=1841)
                                                         Index Cond: (person_id = ci.person_id)
                                                         Heap Fetches: 4855
                                             ->  Index Scan using role_type_pkey on role_type rt  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=4855)
                                                   Index Cond: (id = ci.role_id)
                                                   Filter: ((role)::text = 'actress'::text)
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..1.70 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=857)
                                       Index Cond: (id = ci.person_role_id)
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..32.67 rows=1 width=8) (actual time=0.010..0.057 rows=2 loops=842)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%201%'::text) OR ((info)::text ~~ 'USA:%201%'::text)))
                                 Rows Removed by Filter: 166
                     ->  Index Scan using info_type_pkey on info_type it  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1986)
                           Index Cond: (id = mi.info_type_id)
                           Filter: ((info)::text = 'release dates'::text)
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.80 rows=1 width=19) (actual time=0.003..0.003 rows=0 loops=1986)
                     Index Cond: (id = ci.person_id)
                     Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                     Rows Removed by Filter: 1
         ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..1.46 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=810)
               Index Cond: (id = mk.keyword_id)
               Filter: ((keyword)::text = ANY ('{hero,martial-arts,hand-to-hand-combat,computer-animated-movie}'::text[]))
               Rows Removed by Filter: 1
 Planning Time: 100.500 ms
 Execution Time: 112.773 ms
(59 rows)

SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7505.11..7505.12 rows=1 width=128) (actual time=9123.207..9123.207 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.03..7505.10 rows=1 width=80) (actual time=60.512..9114.895 rows=4407 loops=1)
         Join Filter: (mi.movie_id = t.id)
         ->  Nested Loop  (cost=1011.60..7504.28 rows=1 width=79) (actual time=60.421..9015.872 rows=4407 loops=1)
               ->  Nested Loop  (cost=1011.17..7503.25 rows=1 width=68) (actual time=34.067..8808.950 rows=7112 loops=1)
                     ->  Nested Loop  (cost=1011.03..7503.07 rows=1 width=72) (actual time=34.014..8772.278 rows=7740 loops=1)
                           Join Filter: (mi.movie_id = ci.movie_id)
                           ->  Gather  (cost=1010.47..7474.12 rows=1 width=64) (actual time=9.918..1989.623 rows=12260 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Nested Loop  (cost=10.46..6474.02 rows=1 width=64) (actual time=10.828..2671.637 rows=4087 loops=3)
                                       Join Filter: (mi_idx.movie_id = mi.movie_id)
                                       ->  Hash Join  (cost=10.03..6438.32 rows=2 width=13) (actual time=7.275..634.125 rows=16920 loops=3)
                                             Hash Cond: (mi_idx.info_type_id = it2.id)
                                             ->  Nested Loop  (cost=7.61..6435.32 rows=213 width=17) (actual time=7.049..608.031 rows=50907 loops=3)
                                                   ->  Nested Loop  (cost=7.18..6379.27 rows=70 width=4) (actual time=6.977..326.671 rows=20699 loops=3)
                                                         ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4207.70 rows=2 width=4) (actual time=0.404..32.219 rows=2 loops=3)
                                                               Filter: ((keyword)::text = ANY ('{murder,blood,gore,death,female-nudity}'::text[]))
                                                               Rows Removed by Filter: 44722
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1082.78 rows=300 width=8) (actual time=5.401..171.595 rows=12419 loops=5)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=12389
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=4.175..4.175 rows=12419 loops=5)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.77 rows=3 width=13) (actual time=0.011..0.012 rows=2 loops=62096)
                                                         Index Cond: (movie_id = mk.movie_id)
                                             ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.086..0.086 rows=1 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.063..0.066 rows=1 loops=3)
                                                         Filter: ((info)::text = 'votes'::text)
                                                         Rows Removed by Filter: 112
                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..17.84 rows=1 width=51) (actual time=0.119..0.120 rows=0 loops=50760)
                                             Index Cond: (movie_id = mk.movie_id)
                                             Filter: ((info)::text = 'Horror'::text)
                                             Rows Removed by Filter: 56
                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..28.93 rows=1 width=8) (actual time=0.451..0.552 rows=1 loops=12260)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                 Rows Removed by Filter: 47
                     ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=7740)
                           Index Cond: (id = mi.info_type_id)
                           Filter: ((info)::text = 'genres'::text)
                           Rows Removed by Filter: 0
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.03 rows=1 width=19) (actual time=0.028..0.028 rows=1 loops=7112)
                     Index Cond: (id = ci.person_id)
                     Filter: ((gender)::text = 'm'::text)
                     Rows Removed by Filter: 0
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.81 rows=1 width=21) (actual time=0.020..0.020 rows=1 loops=4407)
               Index Cond: (id = mk.movie_id)
 Planning Time: 26.752 ms
 Execution Time: 9124.314 ms
(51 rows)

SET
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7485.20..7485.21 rows=1 width=128) (actual time=836.207..836.208 rows=1 loops=1)
   ->  Nested Loop  (cost=1009.75..7485.19 rows=1 width=80) (actual time=402.389..836.150 rows=6 loops=1)
         ->  Nested Loop  (cost=1009.32..7484.17 rows=1 width=69) (actual time=402.309..835.926 rows=6 loops=1)
               ->  Nested Loop  (cost=1009.18..7483.98 rows=1 width=73) (actual time=402.281..835.832 rows=18 loops=1)
                     Join Filter: (t.id = mi_idx.movie_id)
                     ->  Nested Loop  (cost=1008.75..7483.18 rows=1 width=80) (actual time=402.199..835.666 rows=6 loops=1)
                           ->  Nested Loop  (cost=1008.61..7482.99 rows=1 width=84) (actual time=402.105..835.546 rows=6 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=1008.17..7465.14 rows=1 width=33) (actual time=401.821..834.653 rows=6 loops=1)
                                       Join Filter: (t.id = ci.movie_id)
                                       ->  Gather  (cost=1007.61..7436.20 rows=1 width=25) (actual time=401.012..838.588 rows=9 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Nested Loop  (cost=7.61..6436.10 rows=1 width=25) (actual time=417.529..593.057 rows=3 loops=3)
                                                   ->  Nested Loop  (cost=7.18..6379.27 rows=70 width=4) (actual time=6.874..290.540 rows=20699 loops=3)
                                                         ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4207.70 rows=2 width=4) (actual time=0.363..45.208 rows=2 loops=3)
                                                               Filter: ((keyword)::text = ANY ('{murder,blood,gore,death,female-nudity}'::text[]))
                                                               Rows Removed by Filter: 44722
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1082.78 rows=300 width=8) (actual time=5.344..142.241 rows=12419 loops=5)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=12389
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=4.130..4.130 rows=12419 loops=5)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.81 rows=1 width=21) (actual time=0.014..0.014 rows=0 loops=62096)
                                                         Index Cond: (id = mk.movie_id)
                                                         Filter: ((production_year > 2010) AND ((title)::text ~~ 'Vampire%'::text))
                                                         Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..28.93 rows=1 width=8) (actual time=0.194..0.237 rows=1 loops=9)
                                             Index Cond: (movie_id = mk.movie_id)
                                             Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                             Rows Removed by Filter: 21
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..17.84 rows=1 width=51) (actual time=0.146..0.147 rows=1 loops=6)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = 'Horror'::text)
                                       Rows Removed by Filter: 20
                           ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.016..0.016 rows=1 loops=6)
                                 Index Cond: (id = mi.info_type_id)
                                 Filter: ((info)::text = 'genres'::text)
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.77 rows=3 width=13) (actual time=0.024..0.025 rows=3 loops=6)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=18)
                     Index Cond: (id = mi_idx.info_type_id)
                     Filter: ((info)::text = 'votes'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using name_pkey on name n  (cost=0.43..1.03 rows=1 width=19) (actual time=0.036..0.036 rows=1 loops=6)
               Index Cond: (id = ci.person_id)
               Filter: ((gender)::text = 'm'::text)
 Planning Time: 28.119 ms
 Execution Time: 843.046 ms
(49 rows)

SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8711.77..8711.78 rows=1 width=128) (actual time=31021.655..31021.655 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.03..8711.76 rows=1 width=80) (actual time=14.170..30982.751 rows=26153 loops=1)
         Join Filter: (mi.movie_id = t.id)
         ->  Nested Loop  (cost=1011.60..8710.94 rows=1 width=79) (actual time=14.112..30646.990 rows=26153 loops=1)
               ->  Nested Loop  (cost=1011.17..8709.91 rows=1 width=68) (actual time=14.026..29852.535 rows=42900 loops=1)
                     Join Filter: (mi.movie_id = ci.movie_id)
                     ->  Gather  (cost=1010.61..8680.97 rows=1 width=60) (actual time=10.052..2258.126 rows=63386 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop  (cost=10.61..7680.87 rows=1 width=60) (actual time=7.717..3873.398 rows=21129 loops=3)
                                 ->  Nested Loop  (cost=10.46..7680.52 rows=2 width=64) (actual time=7.690..3792.935 rows=22577 loops=3)
                                       Join Filter: (mi_idx.movie_id = mi.movie_id)
                                       ->  Hash Join  (cost=10.03..7644.40 rows=2 width=13) (actual time=7.443..819.401 rows=21234 loops=3)
                                             Hash Cond: (mi_idx.info_type_id = it2.id)
                                             ->  Nested Loop  (cost=7.61..7641.16 rows=298 width=17) (actual time=7.206..785.600 rows=63896 loops=3)
                                                   ->  Nested Loop  (cost=7.18..7562.69 rows=98 width=4) (actual time=7.129..419.905 rows=25571 loops=3)
                                                         ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4347.46 rows=3 width=4) (actual time=0.550..35.952 rows=2 loops=3)
                                                               Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                               Rows Removed by Filter: 44721
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1068.74 rows=300 width=8) (actual time=4.986..159.878 rows=10959 loops=7)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=12389
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.864..3.864 rows=10959 loops=7)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.77 rows=3 width=13) (actual time=0.012..0.013 rows=2 loops=76714)
                                                         Index Cond: (movie_id = mk.movie_id)
                                             ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.085..0.085 rows=1 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.058..0.060 rows=1 loops=3)
                                                         Filter: ((info)::text = 'votes'::text)
                                                         Rows Removed by Filter: 112
                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..18.05 rows=1 width=51) (actual time=0.135..0.139 rows=1 loops=63701)
                                             Index Cond: (movie_id = mk.movie_id)
                                             Filter: ((info)::text = ANY ('{Horror,Action,Sci-Fi,Thriller,Crime,War}'::text[]))
                                             Rows Removed by Filter: 58
                                 ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=67732)
                                       Index Cond: (id = mi.info_type_id)
                                       Filter: ((info)::text = 'genres'::text)
                                       Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..28.93 rows=1 width=8) (actual time=0.346..0.434 rows=1 loops=63386)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                           Rows Removed by Filter: 63
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.03 rows=1 width=19) (actual time=0.017..0.017 rows=1 loops=42900)
                     Index Cond: (id = ci.person_id)
                     Filter: ((gender)::text = 'm'::text)
                     Rows Removed by Filter: 0
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.81 rows=1 width=21) (actual time=0.011..0.011 rows=1 loops=26153)
               Index Cond: (id = mk.movie_id)
 Planning Time: 28.570 ms
 Execution Time: 31022.744 ms
(51 rows)

SET
                                                                                                      QUERY PLAN                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=14697.96..14697.97 rows=1 width=128) (actual time=5675.060..5675.061 rows=1 loops=1)
   ->  Nested Loop  (cost=9.46..14697.95 rows=1 width=53) (actual time=34.583..5671.745 rows=1728 loops=1)
         Join Filter: (cct1.id = cc.subject_id)
         Rows Removed by Join Filter: 471
         ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.030..0.031 rows=1 loops=1)
               Filter: ((kind)::text = 'cast'::text)
               Rows Removed by Filter: 3
         ->  Nested Loop  (cost=9.46..14696.89 rows=1 width=57) (actual time=34.550..5671.074 rows=2199 loops=1)
               Join Filter: (cct2.id = cc.status_id)
               Rows Removed by Join Filter: 2199
               ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.008..0.011 rows=2 loops=1)
                     Filter: ((kind)::text ~~ '%complete%'::text)
                     Rows Removed by Filter: 2
               ->  Nested Loop  (cost=9.46..14695.82 rows=1 width=61) (actual time=28.763..2834.794 rows=2199 loops=2)
                     ->  Nested Loop  (cost=9.04..14695.35 rows=1 width=69) (actual time=20.917..2811.467 rows=2929 loops=2)
                           ->  Nested Loop  (cost=8.61..14694.89 rows=1 width=58) (actual time=20.872..2737.007 rows=2929 loops=2)
                                 ->  Nested Loop  (cost=8.18..14688.49 rows=14 width=46) (actual time=20.418..1887.512 rows=105632 loops=2)
                                       Join Filter: (t.id = ci.movie_id)
                                       ->  Nested Loop  (cost=7.62..14686.50 rows=1 width=34) (actual time=20.350..792.325 rows=884 loops=2)
                                             Join Filter: (kt.id = t.kind_id)
                                             Rows Removed by Join Filter: 1016
                                             ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.017..0.020 rows=1 loops=2)
                                                   Filter: ((kind)::text = 'movie'::text)
                                                   Rows Removed by Filter: 6
                                             ->  Nested Loop  (cost=7.62..14685.40 rows=1 width=38) (actual time=1.163..791.637 rows=1900 loops=2)
                                                   ->  Nested Loop  (cost=7.19..14684.91 rows=1 width=13) (actual time=1.126..703.614 rows=3908 loops=2)
                                                         Join Filter: (mi_idx.info_type_id = it2.id)
                                                         Rows Removed by Join Filter: 2713
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.018..0.021 rows=1 loops=2)
                                                               Filter: ((info)::text = 'rating'::text)
                                                               Rows Removed by Filter: 112
                                                         ->  Nested Loop  (cost=7.19..14680.72 rows=142 width=17) (actual time=1.105..701.559 rows=6621 loops=2)
                                                               ->  Nested Loop  (cost=6.76..14509.57 rows=337 width=4) (actual time=0.879..363.028 rows=24091 loops=2)
                                                                     ->  Seq Scan on keyword k  (cost=0.00..3967.82 rows=10 width=4) (actual time=0.184..53.862 rows=10 loops=2)
                                                                           Filter: ((keyword)::text = ANY ('{superhero,marvel-comics,based-on-comic,tv-special,fight,violence,magnet,web,claw,laser}'::text[]))
                                                                           Rows Removed by Filter: 134160
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1051.17 rows=300 width=8) (actual time=0.977..29.870 rows=2409 loops=20)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=34254
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.723..0.723 rows=2409 loops=20)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=13) (actual time=0.013..0.013 rows=0 loops=48182)
                                                                     Index Cond: (movie_id = mk.movie_id)
                                                                     Filter: ((info)::text > '7.0'::text)
                                                                     Rows Removed by Filter: 2
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.021..0.021 rows=0 loops=7816)
                                                         Index Cond: (id = mk.movie_id)
                                                         Filter: (production_year > 2000)
                                                         Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.031..1.153 rows=119 loops=1768)
                                             Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=20) (actual time=0.007..0.007 rows=0 loops=211264)
                                       Index Cond: (id = ci.person_role_id)
                                       Filter: ((name IS NOT NULL) AND (((name)::text ~~ '%man%'::text) OR ((name)::text ~~ '%Man%'::text)))
                                       Rows Removed by Filter: 0
                           ->  Index Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=19) (actual time=0.024..0.024 rows=1 loops=5858)
                                 Index Cond: (id = ci.person_id)
                     ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.006..0.007 rows=1 loops=5858)
                           Index Cond: (movie_id = t.id)
 Planning Time: 87.985 ms
 Execution Time: 5675.807 ms
(61 rows)

SET
                                                                                                      QUERY PLAN                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7402.91..7402.92 rows=1 width=96) (actual time=775.835..775.836 rows=1 loops=1)
   ->  Nested Loop  (cost=9.46..7402.90 rows=1 width=38) (actual time=68.570..775.679 rows=93 loops=1)
         Join Filter: (cct1.id = cc.subject_id)
         Rows Removed by Join Filter: 87
         ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.023..0.025 rows=1 loops=1)
               Filter: ((kind)::text = 'cast'::text)
               Rows Removed by Filter: 3
         ->  Nested Loop  (cost=9.46..7401.84 rows=1 width=42) (actual time=68.544..775.617 rows=180 loops=1)
               Join Filter: (cct2.id = cc.status_id)
               Rows Removed by Join Filter: 180
               ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.009..0.011 rows=2 loops=1)
                     Filter: ((kind)::text ~~ '%complete%'::text)
                     Rows Removed by Filter: 2
               ->  Nested Loop  (cost=9.46..7400.78 rows=1 width=46) (actual time=56.556..387.760 rows=180 loops=2)
                     ->  Nested Loop  (cost=9.04..7400.30 rows=1 width=54) (actual time=53.065..386.840 rows=191 loops=2)
                           ->  Nested Loop  (cost=8.61..7399.84 rows=1 width=58) (actual time=53.038..383.898 rows=191 loops=2)
                                 ->  Nested Loop  (cost=8.18..7393.44 rows=14 width=46) (actual time=52.949..348.383 rows=7981 loops=2)
                                       Join Filter: (t.id = ci.movie_id)
                                       ->  Nested Loop  (cost=7.62..7391.45 rows=1 width=34) (actual time=52.920..303.107 rows=31 loops=2)
                                             Join Filter: (kt.id = t.kind_id)
                                             Rows Removed by Join Filter: 167
                                             ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.010..0.012 rows=1 loops=2)
                                                   Filter: ((kind)::text = 'movie'::text)
                                                   Rows Removed by Filter: 6
                                             ->  Nested Loop  (cost=7.62..7390.35 rows=1 width=38) (actual time=1.538..303.026 rows=198 loops=2)
                                                   ->  Nested Loop  (cost=7.19..7389.87 rows=1 width=13) (actual time=1.495..296.185 rows=313 loops=2)
                                                         Join Filter: (mi_idx.info_type_id = it2.id)
                                                         Rows Removed by Join Filter: 613
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.017..0.020 rows=1 loops=2)
                                                               Filter: ((info)::text = 'rating'::text)
                                                               Rows Removed by Filter: 112
                                                         ->  Nested Loop  (cost=7.19..7387.28 rows=14 width=17) (actual time=1.156..295.911 rows=926 loops=2)
                                                               ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=0.884..166.782 rows=9984 loops=2)
                                                                     ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=0.137..38.479 rows=4 loops=2)
                                                                           Filter: ((keyword)::text = ANY ('{superhero,marvel-comics,based-on-comic,fight}'::text[]))
                                                                           Rows Removed by Filter: 134166
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=1.018..30.981 rows=2496 loops=8)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=15372
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.753..0.753 rows=2496 loops=8)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=13) (actual time=0.012..0.012 rows=0 loops=19968)
                                                                     Index Cond: (movie_id = mk.movie_id)
                                                                     Filter: ((info)::text > '8.0'::text)
                                                                     Rows Removed by Filter: 2
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.021..0.021 rows=1 loops=626)
                                                         Index Cond: (id = mk.movie_id)
                                                         Filter: (production_year > 2005)
                                                         Rows Removed by Filter: 0
                                       ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.031..1.339 rows=257 loops=62)
                                             Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=20) (actual time=0.004..0.004 rows=0 loops=15962)
                                       Index Cond: (id = ci.person_role_id)
                                       Filter: ((name IS NOT NULL) AND (((name)::text ~~ '%man%'::text) OR ((name)::text ~~ '%Man%'::text)))
                                       Rows Removed by Filter: 0
                           ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=382)
                                 Index Cond: (id = ci.person_id)
                                 Heap Fetches: 382
                     ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.003..0.004 rows=1 loops=382)
                           Index Cond: (movie_id = t.id)
 Planning Time: 87.790 ms
 Execution Time: 776.555 ms
(62 rows)

SET
                                                                                                   QUERY PLAN                                                                                                   
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=14709.67..14709.68 rows=1 width=96) (actual time=9531.464..9531.464 rows=1 loops=1)
   ->  Nested Loop  (cost=9.46..14709.67 rows=1 width=38) (actual time=19.082..9523.272 rows=5400 loops=1)
         Join Filter: (it2.id = mi_idx.info_type_id)
         Rows Removed by Join Filter: 11196
         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.026..0.029 rows=1 loops=1)
               Filter: ((info)::text = 'rating'::text)
               Rows Removed by Filter: 112
         ->  Nested Loop  (cost=9.46..14707.24 rows=1 width=42) (actual time=19.052..9520.223 rows=16596 loops=1)
               Join Filter: (t.id = mi_idx.movie_id)
               ->  Nested Loop  (cost=9.03..14706.72 rows=1 width=49) (actual time=18.992..9459.251 rows=5406 loops=1)
                     ->  Nested Loop  (cost=8.60..14700.32 rows=14 width=37) (actual time=17.947..7755.957 rows=189844 loops=1)
                           ->  Nested Loop  (cost=8.17..14693.95 rows=14 width=41) (actual time=17.919..3942.802 rows=189844 loops=1)
                                 Join Filter: (t.id = ci.movie_id)
                                 ->  Nested Loop  (cost=7.61..14691.96 rows=1 width=29) (actual time=17.836..1696.225 rows=1267 loops=1)
                                       Join Filter: (cct2.id = cc.status_id)
                                       Rows Removed by Join Filter: 1267
                                       ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.020..0.023 rows=2 loops=1)
                                             Filter: ((kind)::text ~~ '%complete%'::text)
                                             Rows Removed by Filter: 2
                                       ->  Nested Loop  (cost=7.61..14690.90 rows=1 width=33) (actual time=15.409..847.752 rows=1267 loops=2)
                                             Join Filter: (cct1.id = cc.subject_id)
                                             Rows Removed by Join Filter: 218
                                             ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=2)
                                                   Filter: ((kind)::text = 'cast'::text)
                                                   Rows Removed by Filter: 3
                                             ->  Nested Loop  (cost=7.61..14689.84 rows=1 width=37) (actual time=15.400..847.134 rows=1485 loops=2)
                                                   ->  Nested Loop  (cost=7.19..14677.40 rows=26 width=25) (actual time=15.151..804.591 rows=5032 loops=2)
                                                         Join Filter: (kt.id = t.kind_id)
                                                         Rows Removed by Join Filter: 5581
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.006..0.008 rows=1 loops=2)
                                                               Filter: ((kind)::text = 'movie'::text)
                                                               Rows Removed by Filter: 6
                                                         ->  Nested Loop  (cost=7.19..14674.02 rows=184 width=29) (actual time=0.920..801.152 rows=10613 loops=2)
                                                               ->  Nested Loop  (cost=6.76..14509.57 rows=337 width=4) (actual time=0.883..367.068 rows=24091 loops=2)
                                                                     ->  Seq Scan on keyword k  (cost=0.00..3967.82 rows=10 width=4) (actual time=0.192..53.836 rows=10 loops=2)
                                                                           Filter: ((keyword)::text = ANY ('{superhero,marvel-comics,based-on-comic,tv-special,fight,violence,magnet,web,claw,laser}'::text[]))
                                                                           Rows Removed by Filter: 134160
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1051.17 rows=300 width=8) (actual time=0.989..30.187 rows=2409 loops=20)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=34254
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.736..0.736 rows=2409 loops=20)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.017..0.017 rows=0 loops=48182)
                                                                     Index Cond: (id = mk.movie_id)
                                                                     Filter: (production_year > 2000)
                                                                     Rows Removed by Filter: 1
                                                   ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.007..0.007 rows=0 loops=10064)
                                                         Index Cond: (movie_id = t.id)
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.034..1.653 rows=150 loops=1267)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.019..0.019 rows=1 loops=189844)
                                 Index Cond: (id = ci.person_id)
                                 Heap Fetches: 189844
                     ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=20) (actual time=0.008..0.008 rows=0 loops=189844)
                           Index Cond: (id = ci.person_role_id)
                           Filter: ((name IS NOT NULL) AND (((name)::text ~~ '%man%'::text) OR ((name)::text ~~ '%Man%'::text)))
                           Rows Removed by Filter: 0
               ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.48 rows=3 width=13) (actual time=0.008..0.009 rows=3 loops=5406)
                     Index Cond: (movie_id = ci.movie_id)
 Planning Time: 88.409 ms
 Execution Time: 9532.212 ms
(61 rows)

SET
                                                                                                  QUERY PLAN                                                                                                   
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3759.09..3759.10 rows=1 width=96) (actual time=229.891..229.892 rows=1 loops=1)
   ->  Nested Loop  (cost=9.18..3759.08 rows=1 width=118) (actual time=10.223..229.514 rows=477 loops=1)
         Join Filter: (ml.movie_id = mi.movie_id)
         ->  Nested Loop  (cost=8.74..3757.51 rows=1 width=138) (actual time=9.936..226.314 rows=172 loops=1)
               Join Filter: (cc.subject_id = cct1.id)
               Rows Removed by Join Filter: 57
               ->  Nested Loop  (cost=8.74..3756.43 rows=1 width=142) (actual time=9.923..224.881 rows=172 loops=1)
                     Join Filter: (cct2.id = cc.status_id)
                     Rows Removed by Join Filter: 57
                     ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.026..0.027 rows=1 loops=1)
                           Filter: ((kind)::text = 'complete'::text)
                           Rows Removed by Filter: 3
                     ->  Nested Loop  (cost=8.74..3755.36 rows=2 width=146) (actual time=9.895..224.800 rows=229 loops=1)
                           Join Filter: (ml.movie_id = cc.movie_id)
                           ->  Nested Loop  (cost=8.32..3754.88 rows=1 width=134) (actual time=6.564..223.829 rows=310 loops=1)
                                 Join Filter: (ml.movie_id = t.id)
                                 ->  Nested Loop  (cost=7.89..3754.38 rows=1 width=113) (actual time=6.497..222.325 rows=402 loops=1)
                                       ->  Nested Loop  (cost=7.47..3753.92 rows=1 width=98) (actual time=5.618..218.285 rows=962 loops=1)
                                             Join Filter: (ct.id = mc.company_type_id)
                                             Rows Removed by Join Filter: 59
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.028..0.030 rows=1 loops=1)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                             ->  Nested Loop  (cost=7.47..3752.83 rows=3 width=102) (actual time=5.588..218.053 rows=1021 loops=1)
                                                   Join Filter: (ml.movie_id = mc.movie_id)
                                                   ->  Nested Loop  (cost=7.04..3752.25 rows=1 width=90) (actual time=5.512..215.856 rows=199 loops=1)
                                                         Join Filter: (lt.id = ml.link_type_id)
                                                         Rows Removed by Join Filter: 303
                                                         ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.025..0.034 rows=2 loops=1)
                                                               Filter: ((link)::text ~~ '%follow%'::text)
                                                               Rows Removed by Filter: 16
                                                         ->  Nested Loop  (cost=7.04..3750.90 rows=10 width=12) (actual time=4.822..107.864 rows=251 loops=2)
                                                               ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=4.803..86.023 rows=10544 loops=2)
                                                                     ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.244..17.758 rows=1 loops=2)
                                                                           Filter: ((keyword)::text = 'sequel'::text)
                                                                           Rows Removed by Filter: 134169
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=3.511..65.682 rows=10544 loops=2)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=11140
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=2.694..2.694 rows=10544 loops=2)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.002..0.002 rows=0 loops=21088)
                                                                     Index Cond: (movie_id = mk.movie_id)
                                                   ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=12) (actual time=0.007..0.010 rows=5 loops=199)
                                                         Index Cond: (movie_id = mk.movie_id)
                                                         Filter: (note IS NULL)
                                                         Rows Removed by Filter: 2
                                       ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.004..0.004 rows=0 loops=962)
                                             Index Cond: (id = mc.company_id)
                                             Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.003..0.003 rows=1 loops=402)
                                       Index Cond: (id = mk.movie_id)
                                       Filter: ((production_year >= 1950) AND (production_year <= 2000))
                                       Rows Removed by Filter: 0
                           ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.002..0.003 rows=1 loops=310)
                                 Index Cond: (movie_id = mk.movie_id)
               ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=2 width=4) (actual time=0.002..0.002 rows=1 loops=172)
                     Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.56 rows=1 width=4) (actual time=0.014..0.017 rows=3 loops=172)
               Index Cond: (movie_id = mk.movie_id)
               Filter: ((info)::text = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
               Rows Removed by Filter: 17
 Planning Time: 87.476 ms
 Execution Time: 230.681 ms
(65 rows)

SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=2479.14..2479.15 rows=1 width=96) (actual time=68.557..68.558 rows=1 loops=1)
   ->  Nested Loop  (cost=4.75..2479.13 rows=1 width=118) (actual time=44.623..68.217 rows=247 loops=1)
         Join Filter: (mc.company_type_id = ct.id)
         ->  Nested Loop  (cost=4.75..2478.07 rows=1 width=122) (actual time=44.607..66.206 rows=247 loops=1)
               ->  Nested Loop  (cost=4.33..2457.31 rows=47 width=126) (actual time=44.471..60.740 rows=1919 loops=1)
                     Join Filter: (ml.movie_id = mk.movie_id)
                     ->  Nested Loop  (cost=3.90..2455.35 rows=1 width=142) (actual time=44.407..58.982 rows=247 loops=1)
                           Join Filter: (ml.movie_id = mi.movie_id)
                           ->  Nested Loop  (cost=3.47..2453.33 rows=1 width=138) (actual time=44.298..57.826 rows=95 loops=1)
                                 ->  Nested Loop  (cost=3.05..2451.96 rows=3 width=123) (actual time=44.251..57.173 rows=190 loops=1)
                                       Join Filter: (ml.movie_id = t.id)
                                       ->  Hash Join  (cost=2.62..2365.94 rows=144 width=102) (actual time=3.502..53.822 rows=794 loops=1)
                                             Hash Cond: (ml.link_type_id = lt.id)
                                             ->  Merge Join  (cost=1.38..2356.27 rows=2601 width=24) (actual time=0.810..52.672 rows=7314 loops=1)
                                                   Merge Cond: (mc.movie_id = ml.movie_id)
                                                   ->  Nested Loop  (cost=0.85..33295.88 rows=43182 width=16) (actual time=0.745..37.585 rows=4811 loops=1)
                                                         ->  Nested Loop  (cost=0.42..11074.61 rows=16886 width=4) (actual time=0.089..9.561 rows=5561 loops=1)
                                                               Join Filter: (cct2.id = cc.status_id)
                                                               Rows Removed by Join Filter: 432
                                                               ->  Nested Loop  (cost=0.42..10060.41 rows=67543 width=8) (actual time=0.062..7.529 rows=5993 loops=1)
                                                                     Join Filter: (cct1.id = cc.subject_id)
                                                                     Rows Removed by Join Filter: 2305
                                                                     ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..6344.49 rows=135086 width=12) (actual time=0.024..4.094 rows=5993 loops=1)
                                                                     ->  Materialize  (cost=0.00..1.06 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=5993)
                                                                           ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=2 width=4) (actual time=0.023..0.025 rows=2 loops=1)
                                                                                 Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
                                                               ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=5993)
                                                                     ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.016..0.017 rows=1 loops=1)
                                                                           Filter: ((kind)::text = 'complete'::text)
                                                                           Rows Removed by Filter: 3
                                                         ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..1.29 rows=3 width=12) (actual time=0.004..0.005 rows=1 loops=5561)
                                                               Index Cond: (movie_id = cc.movie_id)
                                                               Filter: (note IS NULL)
                                                               Rows Removed by Filter: 2
                                                   ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..959.51 rows=29997 width=8) (actual time=0.023..9.691 rows=35147 loops=1)
                                             ->  Hash  (cost=1.23..1.23 rows=1 width=86) (actual time=0.047..0.047 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.022..0.027 rows=2 loops=1)
                                                         Filter: ((link)::text ~~ '%follow%'::text)
                                                         Rows Removed by Filter: 16
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.58 rows=1 width=21) (actual time=0.004..0.004 rows=0 loops=794)
                                             Index Cond: (id = mc.movie_id)
                                             Filter: (production_year = 1998)
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=190)
                                       Index Cond: (id = mc.company_id)
                                       Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                                       Rows Removed by Filter: 0
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.02 rows=1 width=4) (actual time=0.008..0.011 rows=3 loops=95)
                                 Index Cond: (movie_id = mc.movie_id)
                                 Filter: ((info)::text = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
                                 Rows Removed by Filter: 10
                     ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.37 rows=47 width=8) (actual time=0.002..0.005 rows=8 loops=247)
                           Index Cond: (movie_id = mc.movie_id)
               ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=1919)
                     Index Cond: (id = mk.keyword_id)
                     Filter: ((keyword)::text = 'sequel'::text)
                     Rows Removed by Filter: 1
         ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=247)
               Filter: ((kind)::text = 'production companies'::text)
               Rows Removed by Filter: 1
 Planning Time: 85.960 ms
 Execution Time: 69.395 ms
(63 rows)

SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=2071.28..2071.29 rows=1 width=96) (actual time=118.687..118.688 rows=1 loops=1)
   ->  Nested Loop  (cost=3.52..2071.27 rows=1 width=118) (actual time=10.415..118.241 rows=743 loops=1)
         ->  Nested Loop  (cost=3.10..1948.16 rows=279 width=122) (actual time=5.543..89.536 rows=11620 loops=1)
               Join Filter: (ml.movie_id = mk.movie_id)
               ->  Nested Loop  (cost=2.66..1936.64 rows=6 width=138) (actual time=5.491..81.160 rows=1150 loops=1)
                     ->  Nested Loop  (cost=2.24..1920.67 rows=35 width=123) (actual time=2.651..71.900 rows=2871 loops=1)
                           Join Filter: (ml.movie_id = mi.movie_id)
                           ->  Nested Loop  (cost=1.81..1891.16 rows=14 width=119) (actual time=2.340..44.602 rows=763 loops=1)
                                 Join Filter: (mc.company_type_id = ct.id)
                                 Rows Removed by Join Filter: 101
                                 ->  Nested Loop  (cost=1.81..1889.30 rows=54 width=123) (actual time=2.319..44.179 rows=864 loops=1)
                                       Join Filter: (ml.movie_id = t.id)
                                       ->  Nested Loop  (cost=1.38..1846.11 rows=72 width=102) (actual time=2.280..40.572 rows=864 loops=1)
                                             Join Filter: (lt.id = ml.link_type_id)
                                             Rows Removed by Join Filter: 12659
                                             ->  Merge Join  (cost=1.38..1825.36 rows=1301 width=24) (actual time=0.561..36.477 rows=6843 loops=1)
                                                   Merge Cond: (mc.movie_id = ml.movie_id)
                                                   ->  Nested Loop  (cost=0.85..19990.11 rows=21591 width=16) (actual time=0.487..24.105 rows=3202 loops=1)
                                                         ->  Nested Loop  (cost=0.42..8879.47 rows=8443 width=4) (actual time=0.069..8.128 rows=3688 loops=1)
                                                               Join Filter: (cc.subject_id = cct1.id)
                                                               Rows Removed by Join Filter: 2305
                                                               ->  Nested Loop  (cost=0.42..8371.84 rows=33772 width=8) (actual time=0.050..5.980 rows=5993 loops=1)
                                                                     Join Filter: (cct2.id = cc.status_id)
                                                                     Rows Removed by Join Filter: 432
                                                                     ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..6344.49 rows=135086 width=12) (actual time=0.009..3.299 rows=5993 loops=1)
                                                                     ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=5993)
                                                                           ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.024..0.024 rows=2 loops=1)
                                                                                 Filter: ((kind)::text ~~ 'complete%'::text)
                                                                                 Rows Removed by Filter: 2
                                                               ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=5993)
                                                                     ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=1)
                                                                           Filter: ((kind)::text = 'cast'::text)
                                                                           Rows Removed by Filter: 3
                                                         ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..1.29 rows=3 width=12) (actual time=0.004..0.004 rows=1 loops=3688)
                                                               Index Cond: (movie_id = cc.movie_id)
                                                               Filter: (note IS NULL)
                                                               Rows Removed by Filter: 2
                                                   ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..959.51 rows=29997 width=8) (actual time=0.024..7.366 rows=33905 loops=1)
                                             ->  Materialize  (cost=0.00..1.23 rows=1 width=86) (actual time=0.000..0.000 rows=2 loops=6843)
                                                   ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.027..0.031 rows=2 loops=1)
                                                         Filter: ((link)::text ~~ '%follow%'::text)
                                                         Rows Removed by Filter: 16
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.59 rows=1 width=21) (actual time=0.004..0.004 rows=1 loops=864)
                                             Index Cond: (id = mc.movie_id)
                                             Filter: ((production_year >= 1950) AND (production_year <= 2010))
                                 ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=864)
                                       ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.009..0.011 rows=1 loops=1)
                                             Filter: ((kind)::text = 'production companies'::text)
                                             Rows Removed by Filter: 3
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.07 rows=3 width=4) (actual time=0.031..0.035 rows=4 loops=763)
                                 Index Cond: (movie_id = t.id)
                                 Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,English}'::text[]))
                                 Rows Removed by Filter: 31
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=2871)
                           Index Cond: (id = mc.company_id)
                           Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.33 rows=47 width=8) (actual time=0.002..0.004 rows=10 loops=1150)
                     Index Cond: (movie_id = t.id)
         ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=11620)
               Index Cond: (id = mk.keyword_id)
               Filter: ((keyword)::text = 'sequel'::text)
               Rows Removed by Filter: 1
 Planning Time: 85.038 ms
 Execution Time: 119.472 ms
(65 rows)

SET
                                                                                                        QUERY PLAN                                                                                                         
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7410.76..7410.77 rows=1 width=96) (actual time=1685.554..1685.554 rows=1 loops=1)
   ->  Nested Loop  (cost=9.32..7410.76 rows=1 width=41) (actual time=11.633..1679.792 rows=4803 loops=1)
         ->  Nested Loop  (cost=8.90..7410.21 rows=1 width=26) (actual time=11.603..1633.303 rows=4955 loops=1)
               Join Filter: (ct.id = mc.company_type_id)
               ->  Nested Loop  (cost=8.90..7409.12 rows=1 width=30) (actual time=11.584..1595.266 rows=4955 loops=1)
                     Join Filter: (t.id = mc.movie_id)
                     ->  Nested Loop  (cost=8.47..7408.54 rows=1 width=42) (actual time=11.536..1569.297 rows=432 loops=1)
                           Join Filter: (it1.id = mi.info_type_id)
                           Rows Removed by Join Filter: 49
                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.014..0.026 rows=1 loops=1)
                                 Filter: ((info)::text = 'countries'::text)
                                 Rows Removed by Filter: 112
                           ->  Nested Loop  (cost=8.47..7406.11 rows=1 width=46) (actual time=11.521..1569.096 rows=481 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=8.04..7404.21 rows=1 width=38) (actual time=11.370..1426.507 rows=473 loops=1)
                                       Join Filter: (cc.subject_id = cct1.id)
                                       Rows Removed by Join Filter: 1570
                                       ->  Nested Loop  (cost=8.04..7403.15 rows=1 width=42) (actual time=11.324..1409.546 rows=2043 loops=1)
                                             Join Filter: (cct2.id = cc.status_id)
                                             Rows Removed by Join Filter: 6987
                                             ->  Nested Loop  (cost=8.04..7402.06 rows=1 width=46) (actual time=11.311..1382.682 rows=3010 loops=1)
                                                   ->  Nested Loop  (cost=7.62..7401.59 rows=1 width=34) (actual time=7.563..1319.160 rows=9301 loops=1)
                                                         Join Filter: (it2.id = mi_idx.info_type_id)
                                                         Rows Removed by Join Filter: 18529
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.019..0.023 rows=1 loops=1)
                                                               Filter: ((info)::text = 'rating'::text)
                                                               Rows Removed by Filter: 112
                                                         ->  Nested Loop  (cost=7.62..7399.04 rows=11 width=38) (actual time=7.540..1314.225 rows=27830 loops=1)
                                                               Join Filter: (t.id = mi_idx.movie_id)
                                                               ->  Nested Loop  (cost=7.19..7387.79 rows=21 width=25) (actual time=7.487..1104.235 rows=11686 loops=1)
                                                                     Join Filter: (kt.id = t.kind_id)
                                                                     Rows Removed by Join Filter: 7484
                                                                     ->  Nested Loop  (cost=7.19..7384.59 rows=74 width=29) (actual time=7.315..1088.458 rows=14771 loops=1)
                                                                           ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=7.269..523.953 rows=37091 loops=1)
                                                                                 ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.487..38.231 rows=3 loops=1)
                                                                                       Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                       Rows Removed by Filter: 134167
                                                                                 ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=5.031..156.275 rows=12364 loops=3)
                                                                                       Recheck Cond: (keyword_id = k.id)
                                                                                       Heap Blocks: exact=26312
                                                                                       ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.736..3.736 rows=12364 loops=3)
                                                                                             Index Cond: (keyword_id = k.id)
                                                                           ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.014..0.014 rows=0 loops=37091)
                                                                                 Index Cond: (id = mk.movie_id)
                                                                                 Filter: (production_year > 2000)
                                                                                 Rows Removed by Filter: 1
                                                                     ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=14771)
                                                                           ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.023..0.025 rows=2 loops=1)
                                                                                 Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                                                 Rows Removed by Filter: 5
                                                               ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=13) (actual time=0.015..0.016 rows=2 loops=11686)
                                                                     Index Cond: (movie_id = mk.movie_id)
                                                                     Filter: ((info)::text < '8.5'::text)
                                                                     Rows Removed by Filter: 0
                                                   ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.005..0.006 rows=0 loops=9301)
                                                         Index Cond: (movie_id = t.id)
                                             ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=3 width=4) (actual time=0.002..0.003 rows=3 loops=3010)
                                                   Filter: ((kind)::text <> 'complete+verified'::text)
                                                   Rows Removed by Filter: 0
                                       ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=2043)
                                             Filter: ((kind)::text = 'crew'::text)
                                             Rows Removed by Filter: 3
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.259..0.300 rows=1 loops=473)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                                       Rows Removed by Filter: 139
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.027..0.054 rows=11 loops=432)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                           Rows Removed by Filter: 10
               ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.002..0.002 rows=1 loops=4955)
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.008..0.008 rows=1 loops=4955)
               Index Cond: (id = mc.company_id)
               Filter: ((country_code)::text <> '[us]'::text)
               Rows Removed by Filter: 0
 Planning Time: 109.151 ms
 Execution Time: 1686.408 ms
(77 rows)

SET
                                                                                                            QUERY PLAN                                                                                                            
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7401.26..7401.27 rows=1 width=96) (actual time=1298.516..1298.516 rows=1 loops=1)
   ->  Nested Loop  (cost=9.32..7401.25 rows=1 width=41) (actual time=17.421..1298.259 rows=148 loops=1)
         ->  Nested Loop  (cost=8.90..7400.70 rows=1 width=26) (actual time=17.370..1295.671 rows=150 loops=1)
               Join Filter: (ct.id = mc.company_type_id)
               ->  Nested Loop  (cost=8.90..7399.61 rows=1 width=30) (actual time=17.348..1294.470 rows=150 loops=1)
                     Join Filter: (t.id = mc.movie_id)
                     ->  Nested Loop  (cost=8.47..7399.03 rows=1 width=42) (actual time=17.283..1293.247 rows=13 loops=1)
                           Join Filter: (it1.id = mi.info_type_id)
                           Rows Removed by Join Filter: 7
                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.015..0.027 rows=1 loops=1)
                                 Filter: ((info)::text = 'countries'::text)
                                 Rows Removed by Filter: 112
                           ->  Nested Loop  (cost=8.47..7396.60 rows=1 width=46) (actual time=17.265..1293.205 rows=20 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=8.04..7395.03 rows=1 width=38) (actual time=12.585..1251.176 rows=179 loops=1)
                                       Join Filter: (cct2.id = cc.status_id)
                                       Rows Removed by Join Filter: 394
                                       ->  Nested Loop  (cost=8.04..7393.94 rows=1 width=42) (actual time=12.574..1249.440 rows=191 loops=1)
                                             Join Filter: (cct1.id = cc.subject_id)
                                             Rows Removed by Join Filter: 689
                                             ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.022..0.024 rows=1 loops=1)
                                                   Filter: ((kind)::text = 'crew'::text)
                                                   Rows Removed by Filter: 3
                                             ->  Nested Loop  (cost=8.04..7392.88 rows=1 width=46) (actual time=12.532..1249.139 rows=880 loops=1)
                                                   ->  Nested Loop  (cost=7.62..7392.40 rows=1 width=34) (actual time=8.123..1227.119 rows=2312 loops=1)
                                                         Join Filter: (kt.id = t.kind_id)
                                                         Rows Removed by Join Filter: 1695
                                                         ->  Nested Loop  (cost=7.62..7391.29 rows=1 width=38) (actual time=7.876..1200.984 rows=2835 loops=1)
                                                               ->  Nested Loop  (cost=7.19..7390.80 rows=1 width=13) (actual time=7.836..985.627 rows=11708 loops=1)
                                                                     Join Filter: (it2.id = mi_idx.info_type_id)
                                                                     Rows Removed by Join Filter: 5912
                                                                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.019..0.022 rows=1 loops=1)
                                                                           Filter: ((info)::text = 'rating'::text)
                                                                           Rows Removed by Filter: 112
                                                                     ->  Nested Loop  (cost=7.19..7387.28 rows=89 width=17) (actual time=7.816..980.395 rows=17620 loops=1)
                                                                           ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=7.769..538.213 rows=37091 loops=1)
                                                                                 ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.955..38.672 rows=3 loops=1)
                                                                                       Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                       Rows Removed by Filter: 134167
                                                                                 ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=5.032..161.229 rows=12364 loops=3)
                                                                                       Recheck Cond: (keyword_id = k.id)
                                                                                       Heap Blocks: exact=26312
                                                                                       ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.737..3.737 rows=12364 loops=3)
                                                                                             Index Cond: (keyword_id = k.id)
                                                                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=13) (actual time=0.011..0.011 rows=0 loops=37091)
                                                                                 Index Cond: (movie_id = mk.movie_id)
                                                                                 Filter: ((info)::text > '6.5'::text)
                                                                                 Rows Removed by Filter: 2
                                                               ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.018..0.018 rows=0 loops=11708)
                                                                     Index Cond: (id = mk.movie_id)
                                                                     Filter: (production_year > 2005)
                                                                     Rows Removed by Filter: 1
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.003..0.003 rows=1 loops=2835)
                                                               Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                               Rows Removed by Filter: 2
                                                   ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.008..0.008 rows=0 loops=2312)
                                                         Index Cond: (movie_id = t.id)
                                       ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=3 width=4) (actual time=0.002..0.003 rows=3 loops=191)
                                             Filter: ((kind)::text <> 'complete+verified'::text)
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.56 rows=1 width=8) (actual time=0.225..0.234 rows=0 loops=179)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
                                       Rows Removed by Filter: 130
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.048..0.087 rows=12 loops=13)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                           Rows Removed by Filter: 17
               ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.002..0.002 rows=1 loops=150)
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.016..0.016 rows=1 loops=150)
               Index Cond: (id = mc.company_id)
               Filter: ((country_code)::text <> '[us]'::text)
               Rows Removed by Filter: 0
 Planning Time: 111.913 ms
 Execution Time: 1299.388 ms
(75 rows)

SET
                                                                                                        QUERY PLAN                                                                                                         
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7408.04..7408.05 rows=1 width=96) (actual time=4455.490..4455.490 rows=1 loops=1)
   ->  Nested Loop  (cost=9.32..7408.03 rows=1 width=41) (actual time=12.578..4444.072 rows=8373 loops=1)
         Join Filter: (mc.company_type_id = ct.id)
         ->  Nested Loop  (cost=9.32..7406.94 rows=1 width=45) (actual time=12.556..4379.464 rows=8373 loops=1)
               Join Filter: (it1.id = mi.info_type_id)
               Rows Removed by Join Filter: 1116
               ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.014..0.025 rows=1 loops=1)
                     Filter: ((info)::text = 'countries'::text)
                     Rows Removed by Filter: 112
               ->  Nested Loop  (cost=9.32..7404.51 rows=1 width=49) (actual time=12.541..4377.089 rows=9489 loops=1)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=8.88..7402.62 rows=1 width=65) (actual time=12.393..3443.998 rows=8156 loops=1)
                           Join Filter: (cc.subject_id = cct1.id)
                           Rows Removed by Join Filter: 1453
                           ->  Nested Loop  (cost=8.88..7401.55 rows=1 width=69) (actual time=12.382..3367.161 rows=9609 loops=1)
                                 Join Filter: (cct2.id = cc.status_id)
                                 Rows Removed by Join Filter: 5617
                                 ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.022..0.023 rows=1 loops=1)
                                       Filter: ((kind)::text = 'complete'::text)
                                       Rows Removed by Filter: 3
                                 ->  Nested Loop  (cost=8.88..7400.49 rows=1 width=73) (actual time=12.358..3363.297 rows=15226 loops=1)
                                       ->  Nested Loop  (cost=8.46..7400.01 rows=1 width=61) (actual time=12.311..3227.133 rows=23425 loops=1)
                                             Join Filter: (mi_idx.info_type_id = it2.id)
                                             Rows Removed by Join Filter: 46773
                                             ->  Nested Loop  (cost=8.46..7397.59 rows=1 width=65) (actual time=11.099..1813.898 rows=70198 loops=1)
                                                   Join Filter: (t.id = mi_idx.movie_id)
                                                   ->  Nested Loop  (cost=8.04..7397.05 rows=1 width=52) (actual time=11.054..1598.859 rows=23902 loops=1)
                                                         ->  Nested Loop  (cost=7.62..7396.50 rows=1 width=37) (actual time=11.012..1431.259 rows=25853 loops=1)
                                                               Join Filter: (t.id = mc.movie_id)
                                                               ->  Nested Loop  (cost=7.19..7387.25 rows=16 width=25) (actual time=7.912..1134.569 rows=8073 loops=1)
                                                                     Join Filter: (t.kind_id = kt.id)
                                                                     Rows Removed by Join Filter: 4332
                                                                     ->  Nested Loop  (cost=7.19..7384.59 rows=55 width=29) (actual time=7.748..1123.975 rows=9739 loops=1)
                                                                           ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=7.699..539.875 rows=37091 loops=1)
                                                                                 ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.941..38.294 rows=3 loops=1)
                                                                                       Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                       Rows Removed by Filter: 134167
                                                                                 ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=5.016..161.296 rows=12364 loops=3)
                                                                                       Recheck Cond: (keyword_id = k.id)
                                                                                       Heap Blocks: exact=26312
                                                                                       ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.720..3.720 rows=12364 loops=3)
                                                                                             Index Cond: (keyword_id = k.id)
                                                                           ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.015..0.015 rows=0 loops=37091)
                                                                                 Index Cond: (id = mk.movie_id)
                                                                                 Filter: (production_year > 2005)
                                                                                 Rows Removed by Filter: 1
                                                                     ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=9739)
                                                                           ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.022..0.024 rows=2 loops=1)
                                                                                 Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                                                 Rows Removed by Filter: 5
                                                               ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.025..0.035 rows=3 loops=8073)
                                                                     Index Cond: (movie_id = mk.movie_id)
                                                                     Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                                                                     Rows Removed by Filter: 7
                                                         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.006..0.006 rows=1 loops=25853)
                                                               Index Cond: (id = mc.company_id)
                                                               Filter: ((country_code)::text <> '[us]'::text)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=13) (actual time=0.005..0.008 rows=3 loops=23902)
                                                         Index Cond: (movie_id = mk.movie_id)
                                                         Filter: ((info)::text < '8.5'::text)
                                                         Rows Removed by Filter: 0
                                             ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.014..0.015 rows=1 loops=70198)
                                                   Filter: ((info)::text = 'rating'::text)
                                                   Rows Removed by Filter: 108
                                       ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.004..0.005 rows=1 loops=23425)
                                             Index Cond: (movie_id = t.id)
                           ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=9609)
                                 Filter: ((kind)::text = 'cast'::text)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.094..0.113 rows=1 loops=8156)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                           Rows Removed by Filter: 206
         ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.002..0.002 rows=1 loops=8373)
 Planning Time: 111.385 ms
 Execution Time: 4456.458 ms
(77 rows)

SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3946.87..3946.88 rows=1 width=96) (actual time=61.789..61.790 rows=1 loops=1)
   ->  Nested Loop  (cost=11.17..3946.87 rows=1 width=48) (actual time=19.313..61.269 rows=1620 loops=1)
         Join Filter: (it3.id = pi.info_type_id)
         Rows Removed by Join Filter: 3270
         ->  Seq Scan on info_type it3  (cost=0.00..2.41 rows=1 width=4) (actual time=0.017..0.027 rows=1 loops=1)
               Filter: ((info)::text = 'trivia'::text)
               Rows Removed by Filter: 112
         ->  Nested Loop  (cost=11.17..3944.44 rows=1 width=52) (actual time=19.255..60.735 rows=4890 loops=1)
               Join Filter: (n.id = pi.person_id)
               ->  Nested Loop  (cost=10.74..3924.23 rows=1 width=60) (actual time=19.174..58.331 rows=30 loops=1)
                     Join Filter: (it.id = mi.info_type_id)
                     ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.011..0.022 rows=1 loops=1)
                           Filter: ((info)::text = 'release dates'::text)
                           Rows Removed by Filter: 112
                     ->  Nested Loop  (cost=10.74..3921.81 rows=1 width=64) (actual time=19.162..58.300 rows=30 loops=1)
                           Join Filter: (t.id = mi.movie_id)
                           ->  Nested Loop  (cost=10.31..3878.76 rows=1 width=80) (actual time=18.983..55.472 rows=15 loops=1)
                                 Join Filter: (cct2.id = cc.status_id)
                                 ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.023..0.023 rows=1 loops=1)
                                       Filter: ((kind)::text = 'complete+verified'::text)
                                       Rows Removed by Filter: 3
                                 ->  Nested Loop  (cost=10.31..3877.70 rows=1 width=84) (actual time=18.959..55.443 rows=15 loops=1)
                                       Join Filter: (cct1.id = cc.subject_id)
                                       ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.007..0.010 rows=1 loops=1)
                                             Filter: ((kind)::text = 'cast'::text)
                                             Rows Removed by Filter: 3
                                       ->  Nested Loop  (cost=10.31..3876.64 rows=1 width=88) (actual time=18.949..55.427 rows=15 loops=1)
                                             Join Filter: (t.id = cc.movie_id)
                                             ->  Nested Loop  (cost=9.89..3873.84 rows=1 width=76) (actual time=18.895..55.324 rows=15 loops=1)
                                                   ->  Nested Loop  (cost=9.46..3871.53 rows=1 width=57) (actual time=18.812..55.178 rows=15 loops=1)
                                                         ->  Nested Loop  (cost=9.04..3869.51 rows=1 width=61) (actual time=18.764..54.511 rows=66 loops=1)
                                                               ->  Nested Loop  (cost=8.61..3865.49 rows=1 width=49) (actual time=18.678..53.227 rows=352 loops=1)
                                                                     Join Filter: (rt.id = ci.role_id)
                                                                     Rows Removed by Join Filter: 1100
                                                                     ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.032..0.035 rows=1 loops=1)
                                                                           Filter: ((role)::text = 'actress'::text)
                                                                           Rows Removed by Filter: 11
                                                                     ->  Nested Loop  (cost=8.61..3864.32 rows=2 width=53) (actual time=17.622..53.001 rows=1452 loops=1)
                                                                           ->  Nested Loop  (cost=8.18..3861.40 rows=1 width=49) (actual time=17.465..49.178 rows=836 loops=1)
                                                                                 Join Filter: (t.id = ci.movie_id)
                                                                                 ->  Nested Loop  (cost=7.62..3813.81 rows=1 width=33) (actual time=17.382..42.099 rows=22 loops=1)
                                                                                       Join Filter: (t.id = mc.movie_id)
                                                                                       ->  Nested Loop  (cost=7.19..3808.95 rows=1 width=25) (actual time=17.273..41.950 rows=1 loops=1)
                                                                                             ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=0.335..28.419 rows=414 loops=1)
                                                                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.105..20.258 rows=1 loops=1)
                                                                                                         Filter: ((keyword)::text = 'computer-animation'::text)
                                                                                                         Rows Removed by Filter: 134169
                                                                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=0.223..7.935 rows=414 loops=1)
                                                                                                         Recheck Cond: (keyword_id = k.id)
                                                                                                         Heap Blocks: exact=358
                                                                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.154..0.154 rows=414 loops=1)
                                                                                                               Index Cond: (keyword_id = k.id)
                                                                                             ->  Index Scan using title_pkey on title t  (cost=0.43..2.12 rows=1 width=21) (actual time=0.031..0.031 rows=0 loops=414)
                                                                                                   Index Cond: (id = mk.movie_id)
                                                                                                   Filter: ((production_year >= 2000) AND (production_year <= 2010) AND ((title)::text = 'Shrek 2'::text))
                                                                                                   Rows Removed by Filter: 1
                                                                                       ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..4.80 rows=5 width=8) (actual time=0.106..0.136 rows=22 loops=1)
                                                                                             Index Cond: (movie_id = mk.movie_id)
                                                                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..47.58 rows=1 width=16) (actual time=0.008..0.311 rows=38 loops=22)
                                                                                       Index Cond: (movie_id = mk.movie_id)
                                                                                       Filter: ((note)::text = ANY ('{(voice),"(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                                       Rows Removed by Filter: 191
                                                                           ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.90 rows=2 width=4) (actual time=0.003..0.004 rows=2 loops=836)
                                                                                 Index Cond: (person_id = ci.person_id)
                                                                                 Heap Fetches: 1452
                                                               ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..2.22 rows=1 width=20) (actual time=0.003..0.003 rows=0 loops=352)
                                                                     Index Cond: (id = ci.person_role_id)
                                                                     Filter: ((name)::text = 'Queen'::text)
                                                                     Rows Removed by Filter: 1
                                                         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..2.03 rows=1 width=4) (actual time=0.010..0.010 rows=0 loops=66)
                                                               Index Cond: (id = mc.company_id)
                                                               Filter: ((country_code)::text = '[us]'::text)
                                                               Rows Removed by Filter: 1
                                                   ->  Index Scan using name_pkey on name n  (cost=0.43..2.30 rows=1 width=19) (actual time=0.009..0.009 rows=1 loops=15)
                                                         Index Cond: (id = ci.person_id)
                                                         Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                             ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..2.78 rows=2 width=12) (actual time=0.005..0.006 rows=1 loops=15)
                                                   Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..43.02 rows=2 width=8) (actual time=0.027..0.187 rows=2 loops=15)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%200%'::text) OR ((info)::text ~~ 'USA:%200%'::text)))
                                 Rows Removed by Filter: 455
               ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..19.88 rows=26 width=8) (actual time=0.005..0.043 rows=163 loops=30)
                     Index Cond: (person_id = an.person_id)
 Planning Time: 146.685 ms
 Execution Time: 63.034 ms
(86 rows)

SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3950.13..3950.14 rows=1 width=96) (actual time=35.358..35.359 rows=1 loops=1)
   ->  Nested Loop  (cost=11.17..3950.12 rows=1 width=48) (actual time=8.853..35.336 rows=15 loops=1)
         Join Filter: (ci.person_id = n.id)
         ->  Nested Loop  (cost=10.74..3947.92 rows=1 width=45) (actual time=8.810..35.242 rows=15 loops=1)
               Join Filter: (it3.id = pi.info_type_id)
               Rows Removed by Join Filter: 2430
               ->  Seq Scan on info_type it3  (cost=0.00..2.41 rows=1 width=4) (actual time=0.019..0.030 rows=1 loops=1)
                     Filter: ((info)::text = 'height'::text)
                     Rows Removed by Filter: 112
               ->  Nested Loop  (cost=10.74..3945.19 rows=26 width=49) (actual time=8.691..34.993 rows=2445 loops=1)
                     ->  Nested Loop  (cost=10.31..3925.03 rows=1 width=41) (actual time=8.661..33.964 rows=15 loops=1)
                           ->  Nested Loop  (cost=9.89..3923.01 rows=1 width=45) (actual time=8.625..33.404 rows=66 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=9.46..3918.14 rows=1 width=61) (actual time=8.581..33.293 rows=3 loops=1)
                                       Join Filter: (mi.info_type_id = it.id)
                                       ->  Nested Loop  (cost=9.46..3915.72 rows=1 width=65) (actual time=8.568..33.257 rows=3 loops=1)
                                             Join Filter: (cc.status_id = cct2.id)
                                             ->  Nested Loop  (cost=9.46..3914.65 rows=1 width=69) (actual time=8.557..33.229 rows=3 loops=1)
                                                   Join Filter: (cct1.id = cc.subject_id)
                                                   ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.024..0.026 rows=1 loops=1)
                                                         Filter: ((kind)::text = 'cast'::text)
                                                         Rows Removed by Filter: 3
                                                   ->  Nested Loop  (cost=9.46..3913.59 rows=1 width=73) (actual time=8.531..33.201 rows=3 loops=1)
                                                         Join Filter: (t.id = cc.movie_id)
                                                         ->  Nested Loop  (cost=9.04..3907.99 rows=2 width=61) (actual time=8.483..33.141 rows=3 loops=1)
                                                               ->  Nested Loop  (cost=8.62..3905.08 rows=1 width=57) (actual time=8.434..33.075 rows=1 loops=1)
                                                                     Join Filter: (t.id = mi.movie_id)
                                                                     ->  Nested Loop  (cost=8.18..3862.13 rows=1 width=49) (actual time=8.350..32.774 rows=1 loops=1)
                                                                           ->  Nested Loop  (cost=7.75..3858.12 rows=1 width=37) (actual time=8.297..32.260 rows=11 loops=1)
                                                                                 Join Filter: (rt.id = ci.role_id)
                                                                                 Rows Removed by Join Filter: 27
                                                                                 ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.020..0.022 rows=1 loops=1)
                                                                                       Filter: ((role)::text = 'actress'::text)
                                                                                       Rows Removed by Filter: 11
                                                                                 ->  Nested Loop  (cost=7.75..3856.96 rows=1 width=41) (actual time=8.061..32.229 rows=38 loops=1)
                                                                                       Join Filter: (t.id = ci.movie_id)
                                                                                       ->  Nested Loop  (cost=7.19..3809.37 rows=1 width=25) (actual time=8.015..30.805 rows=1 loops=1)
                                                                                             ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=0.253..22.902 rows=414 loops=1)
                                                                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.066..20.092 rows=1 loops=1)
                                                                                                         Filter: ((keyword)::text = 'computer-animation'::text)
                                                                                                         Rows Removed by Filter: 134169
                                                                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=0.179..2.639 rows=414 loops=1)
                                                                                                         Recheck Cond: (keyword_id = k.id)
                                                                                                         Heap Blocks: exact=358
                                                                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.119..0.119 rows=414 loops=1)
                                                                                                               Index Cond: (keyword_id = k.id)
                                                                                             ->  Index Scan using title_pkey on title t  (cost=0.43..2.12 rows=1 width=21) (actual time=0.018..0.018 rows=0 loops=414)
                                                                                                   Index Cond: (id = mk.movie_id)
                                                                                                   Filter: ((production_year >= 2000) AND (production_year <= 2005) AND ((title)::text = 'Shrek 2'::text))
                                                                                                   Rows Removed by Filter: 1
                                                                                       ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..47.58 rows=1 width=16) (actual time=0.043..1.402 rows=38 loops=1)
                                                                                             Index Cond: (movie_id = mk.movie_id)
                                                                                             Filter: ((note)::text = ANY ('{(voice),"(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                                             Rows Removed by Filter: 191
                                                                           ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..2.22 rows=1 width=20) (actual time=0.045..0.045 rows=0 loops=11)
                                                                                 Index Cond: (id = ci.person_role_id)
                                                                                 Filter: ((name)::text = 'Queen'::text)
                                                                                 Rows Removed by Filter: 1
                                                                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..42.92 rows=2 width=8) (actual time=0.082..0.298 rows=1 loops=1)
                                                                           Index Cond: (movie_id = mk.movie_id)
                                                                           Filter: ((info)::text ~~ 'USA:%200%'::text)
                                                                           Rows Removed by Filter: 456
                                                               ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.90 rows=2 width=4) (actual time=0.046..0.062 rows=3 loops=1)
                                                                     Index Cond: (person_id = ci.person_id)
                                                                     Heap Fetches: 3
                                                         ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..2.78 rows=2 width=12) (actual time=0.018..0.018 rows=1 loops=3)
                                                               Index Cond: (movie_id = mk.movie_id)
                                             ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'complete+verified'::text)
                                                   Rows Removed by Filter: 3
                                       ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=3)
                                             Filter: ((info)::text = 'release dates'::text)
                                             Rows Removed by Filter: 15
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..4.80 rows=5 width=8) (actual time=0.017..0.028 rows=22 loops=3)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..2.03 rows=1 width=4) (actual time=0.008..0.008 rows=0 loops=66)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..19.89 rows=26 width=8) (actual time=0.004..0.043 rows=163 loops=15)
                           Index Cond: (person_id = ci.person_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..2.19 rows=1 width=19) (actual time=0.005..0.005 rows=1 loops=15)
               Index Cond: (id = pi.person_id)
               Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
 Planning Time: 143.899 ms
 Execution Time: 36.533 ms
(86 rows)

SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=5517.26..5517.27 rows=1 width=96) (actual time=5815.078..5815.078 rows=1 loops=1)
   ->  Nested Loop  (cost=11.17..5517.25 rows=1 width=48) (actual time=853.696..5796.972 rows=16308 loops=1)
         Join Filter: (pi.info_type_id = it3.id)
         Rows Removed by Join Filter: 51519
         ->  Nested Loop  (cost=11.17..5514.83 rows=1 width=52) (actual time=300.694..4546.191 rows=67827 loops=1)
               Join Filter: (cc.subject_id = cct1.id)
               ->  Nested Loop  (cost=11.17..5513.77 rows=1 width=56) (actual time=300.683..4014.311 rows=67827 loops=1)
                     Join Filter: (ci.role_id = rt.id)
                     ->  Nested Loop  (cost=11.17..5512.60 rows=1 width=60) (actual time=300.666..3448.434 rows=67827 loops=1)
                           Join Filter: (it.id = mi.info_type_id)
                           ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.019..0.030 rows=1 loops=1)
                                 Filter: ((info)::text = 'release dates'::text)
                                 Rows Removed by Filter: 112
                           ->  Nested Loop  (cost=11.17..5510.18 rows=1 width=64) (actual time=300.645..3432.615 rows=67827 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=10.74..5467.13 rows=1 width=80) (actual time=300.492..1100.260 rows=23424 loops=1)
                                       Join Filter: (mc.movie_id = t.id)
                                       ->  Nested Loop  (cost=10.31..5465.00 rows=1 width=59) (actual time=32.179..1015.858 rows=27549 loops=1)
                                             Join Filter: (cct2.id = cc.status_id)
                                             Rows Removed by Join Filter: 19742
                                             ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.025..0.026 rows=1 loops=1)
                                                   Filter: ((kind)::text = 'complete+verified'::text)
                                                   Rows Removed by Filter: 3
                                             ->  Nested Loop  (cost=10.31..5463.94 rows=1 width=63) (actual time=32.151..1006.451 rows=47291 loops=1)
                                                   ->  Nested Loop  (cost=9.89..5461.14 rows=1 width=51) (actual time=32.087..855.132 rows=56941 loops=1)
                                                         ->  Nested Loop  (cost=9.46..5458.93 rows=1 width=39) (actual time=32.034..666.288 rows=58777 loops=1)
                                                               Join Filter: (n.id = an.person_id)
                                                               ->  Nested Loop  (cost=9.03..5456.03 rows=1 width=51) (actual time=31.921..579.675 rows=15702 loops=1)
                                                                     ->  Nested Loop  (cost=8.61..5449.96 rows=3 width=55) (actual time=31.745..369.723 rows=75939 loops=1)
                                                                           Join Filter: (ci.movie_id = mc.movie_id)
                                                                           ->  Nested Loop  (cost=8.18..5445.09 rows=1 width=47) (actual time=31.670..315.372 rows=2996 loops=1)
                                                                                 Join Filter: (n.id = pi.person_id)
                                                                                 ->  Nested Loop  (cost=7.75..5424.88 rows=1 width=39) (actual time=31.589..311.223 rows=45 loops=1)
                                                                                       ->  Nested Loop  (cost=7.32..5355.96 rows=30 width=20) (actual time=0.356..223.601 rows=4395 loops=1)
                                                                                             ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=0.266..27.296 rows=414 loops=1)
                                                                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.086..22.614 rows=1 loops=1)
                                                                                                         Filter: ((keyword)::text = 'computer-animation'::text)
                                                                                                         Rows Removed by Filter: 134169
                                                                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=0.173..4.466 rows=414 loops=1)
                                                                                                         Recheck Cond: (keyword_id = k.id)
                                                                                                         Heap Blocks: exact=358
                                                                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.112..0.112 rows=414 loops=1)
                                                                                                               Index Cond: (keyword_id = k.id)
                                                                                             ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..47.62 rows=1 width=16) (actual time=0.121..0.468 rows=11 loops=414)
                                                                                                   Index Cond: (movie_id = mk.movie_id)
                                                                                                   Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                                                   Rows Removed by Filter: 33
                                                                                       ->  Index Scan using name_pkey on name n  (cost=0.43..2.30 rows=1 width=19) (actual time=0.019..0.019 rows=0 loops=4395)
                                                                                             Index Cond: (id = ci.person_id)
                                                                                             Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                                                                             Rows Removed by Filter: 1
                                                                                 ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..19.89 rows=26 width=8) (actual time=0.027..0.064 rows=67 loops=45)
                                                                                       Index Cond: (person_id = ci.person_id)
                                                                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..4.80 rows=5 width=8) (actual time=0.004..0.010 rows=25 loops=2996)
                                                                                 Index Cond: (movie_id = mk.movie_id)
                                                                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..2.03 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=75939)
                                                                           Index Cond: (id = mc.company_id)
                                                                           Filter: ((country_code)::text = '[us]'::text)
                                                                           Rows Removed by Filter: 1
                                                               ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.87 rows=2 width=4) (actual time=0.002..0.004 rows=4 loops=15702)
                                                                     Index Cond: (person_id = pi.person_id)
                                                                     Heap Fetches: 58777
                                                         ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..2.21 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=58777)
                                                               Index Cond: (id = ci.person_role_id)
                                                   ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..2.78 rows=2 width=12) (actual time=0.002..0.002 rows=1 loops=56941)
                                                         Index Cond: (movie_id = mc.movie_id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..2.12 rows=1 width=21) (actual time=0.002..0.002 rows=1 loops=27549)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..43.02 rows=2 width=8) (actual time=0.015..0.098 rows=3 loops=23424)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%200%'::text) OR ((info)::text ~~ 'USA:%200%'::text)))
                                       Rows Removed by Filter: 298
                     ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=67827)
                           Filter: ((role)::text = 'actress'::text)
                           Rows Removed by Filter: 1
               ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=67827)
                     Filter: ((kind)::text = 'cast'::text)
         ->  Seq Scan on info_type it3  (cost=0.00..2.41 rows=1 width=4) (actual time=0.005..0.013 rows=1 loops=67827)
               Filter: ((info)::text = 'trivia'::text)
               Rows Removed by Filter: 89
 Planning Time: 147.249 ms
 Execution Time: 5816.160 ms
(84 rows)

SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3839.34..3839.35 rows=1 width=32) (actual time=1356.651..1356.651 rows=1 loops=1)
   ->  Nested Loop  (cost=8.04..3839.32 rows=7 width=17) (actual time=12.480..1351.005 rows=7834 loops=1)
         Join Filter: (mc.movie_id = t.id)
         ->  Nested Loop  (cost=7.61..3835.84 rows=7 width=8) (actual time=12.435..1261.741 rows=7834 loops=1)
               ->  Nested Loop  (cost=7.19..3756.52 rows=178 width=12) (actual time=10.648..704.569 rows=148552 loops=1)
                     ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.547..263.163 rows=41840 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.873..26.250 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'character-name-in-title'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.665..225.930 rows=41840 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=11541
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.957..7.957 rows=41840 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.007..0.009 rows=4 loops=41840)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=148552)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text = '[de]'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.010..0.010 rows=1 loops=7834)
               Index Cond: (id = mk.movie_id)
 Planning Time: 4.136 ms
 Execution Time: 1357.140 ms
(24 rows)

SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3836.84..3836.85 rows=1 width=32) (actual time=1293.497..1293.498 rows=1 loops=1)
   ->  Nested Loop  (cost=8.04..3836.83 rows=2 width=17) (actual time=16.621..1289.983 rows=5228 loops=1)
         Join Filter: (mc.movie_id = t.id)
         ->  Nested Loop  (cost=7.61..3835.84 rows=2 width=8) (actual time=16.580..1231.036 rows=5228 loops=1)
               ->  Nested Loop  (cost=7.19..3756.52 rows=178 width=12) (actual time=10.931..693.202 rows=148552 loops=1)
                     ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.845..260.938 rows=41840 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.334..26.798 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'character-name-in-title'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.503..222.879 rows=41840 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=11541
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.784..7.784 rows=41840 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.006..0.009 rows=4 loops=41840)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=148552)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text = '[nl]'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.010..0.010 rows=1 loops=5228)
               Index Cond: (id = mk.movie_id)
 Planning Time: 5.241 ms
 Execution Time: 1293.975 ms
(24 rows)

SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3836.34..3836.35 rows=1 width=32) (actual time=1208.096..1208.096 rows=1 loops=1)
   ->  Nested Loop  (cost=8.04..3836.34 rows=1 width=17) (actual time=1208.089..1208.089 rows=0 loops=1)
         Join Filter: (mc.movie_id = t.id)
         ->  Nested Loop  (cost=7.61..3835.84 rows=1 width=8) (actual time=1208.088..1208.088 rows=0 loops=1)
               ->  Nested Loop  (cost=7.19..3756.52 rows=178 width=12) (actual time=10.964..690.293 rows=148552 loops=1)
                     ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.878..259.986 rows=41840 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.317..26.596 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'character-name-in-title'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.553..222.339 rows=41840 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=11541
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.846..7.846 rows=41840 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.006..0.009 rows=4 loops=41840)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=148552)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text = '[sm]'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (never executed)
               Index Cond: (id = mk.movie_id)
 Planning Time: 5.296 ms
 Execution Time: 1208.597 ms
(24 rows)

SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3852.93..3852.94 rows=1 width=32) (actual time=1771.675..1771.676 rows=1 loops=1)
   ->  Nested Loop  (cost=8.04..3852.77 rows=64 width=17) (actual time=11.221..1740.920 rows=68316 loops=1)
         ->  Nested Loop  (cost=7.62..3773.45 rows=178 width=21) (actual time=11.077..1182.670 rows=148552 loops=1)
               Join Filter: (t.id = mc.movie_id)
               ->  Nested Loop  (cost=7.19..3752.95 rows=34 width=25) (actual time=10.942..711.491 rows=41840 loops=1)
                     ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.914..257.687 rows=41840 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.341..26.705 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'character-name-in-title'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.565..219.197 rows=41840 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=11541
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.860..7.860 rows=41840 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.010..0.010 rows=1 loops=41840)
                           Index Cond: (id = mk.movie_id)
               ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.007..0.009 rows=4 loops=41840)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=148552)
               Index Cond: (id = mc.company_id)
               Filter: ((country_code)::text = '[us]'::text)
               Rows Removed by Filter: 1
 Planning Time: 5.335 ms
 Execution Time: 1772.157 ms
(24 rows)

SET
                                                                                                         QUERY PLAN                                                                                                         
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8702.65..8702.66 rows=1 width=128) (actual time=12772.522..12772.522 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.71..8702.64 rows=1 width=80) (actual time=92.662..12769.498 rows=757 loops=1)
         ->  Nested Loop  (cost=1012.58..8702.48 rows=1 width=84) (actual time=92.634..12767.588 rows=757 loops=1)
               ->  Nested Loop  (cost=1012.45..8702.31 rows=1 width=88) (actual time=83.522..12760.833 rows=2492 loops=1)
                     ->  Nested Loop  (cost=1012.31..8702.12 rows=1 width=92) (actual time=83.487..12750.208 rows=2492 loops=1)
                           Join Filter: (mi.movie_id = t.id)
                           ->  Nested Loop  (cost=1011.88..8701.29 rows=1 width=95) (actual time=33.596..12607.317 rows=9940 loops=1)
                                 ->  Nested Loop  (cost=1011.45..8700.26 rows=1 width=84) (actual time=31.380..12317.337 rows=15093 loops=1)
                                       Join Filter: (mi.movie_id = ci.movie_id)
                                       ->  Gather  (cost=1010.88..8671.17 rows=1 width=76) (actual time=14.348..1701.205 rows=19944 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Nested Loop  (cost=10.88..7671.07 rows=1 width=76) (actual time=10.892..2796.093 rows=6648 loops=3)
                                                   Join Filter: (mi_idx.movie_id = mi.movie_id)
                                                   ->  Nested Loop  (cost=10.45..7653.03 rows=1 width=25) (actual time=8.394..922.625 rows=11782 loops=3)
                                                         ->  Hash Join  (cost=10.03..7651.37 rows=2 width=13) (actual time=7.611..801.589 rows=21234 loops=3)
                                                               Hash Cond: (mi_idx.info_type_id = it2.id)
                                                               ->  Nested Loop  (cost=7.61..7648.12 rows=298 width=17) (actual time=7.374..773.358 rows=63896 loops=3)
                                                                     ->  Nested Loop  (cost=7.18..7568.64 rows=98 width=4) (actual time=7.306..417.075 rows=25571 loops=3)
                                                                           ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4353.41 rows=3 width=4) (actual time=0.647..34.482 rows=2 loops=3)
                                                                                 Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                                 Rows Removed by Filter: 44721
                                                                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1068.74 rows=300 width=8) (actual time=5.025..159.448 rows=10959 loops=7)
                                                                                 Recheck Cond: (keyword_id = k.id)
                                                                                 Heap Blocks: exact=12389
                                                                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.905..3.906 rows=10959 loops=7)
                                                                                       Index Cond: (keyword_id = k.id)
                                                                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.78 rows=3 width=13) (actual time=0.011..0.012 rows=2 loops=76714)
                                                                           Index Cond: (movie_id = mk.movie_id)
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.086..0.086 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.056..0.059 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'votes'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.81 rows=2 width=12) (actual time=0.004..0.005 rows=1 loops=63701)
                                                               Index Cond: (movie_id = mi_idx.movie_id)
                                                   ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..18.03 rows=1 width=51) (actual time=0.155..0.158 rows=1 loops=35346)
                                                         Index Cond: (movie_id = mk.movie_id)
                                                         Filter: ((info)::text = ANY ('{Horror,Thriller}'::text[]))
                                                         Rows Removed by Filter: 101
                                       ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..29.07 rows=1 width=8) (actual time=0.396..0.531 rows=1 loops=19944)
                                             Index Cond: (movie_id = mk.movie_id)
                                             Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                             Rows Removed by Filter: 73
                                 ->  Index Scan using name_pkey on name n  (cost=0.43..1.04 rows=1 width=19) (actual time=0.018..0.018 rows=1 loops=15093)
                                       Index Cond: (id = ci.person_id)
                                       Filter: ((gender)::text = 'm'::text)
                                       Rows Removed by Filter: 0
                           ->  Index Scan using title_pkey on title t  (cost=0.43..0.82 rows=1 width=21) (actual time=0.013..0.013 rows=0 loops=9940)
                                 Index Cond: (id = mk.movie_id)
                                 Filter: (production_year > 2000)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=2492)
                           Index Cond: (id = mi.info_type_id)
                           Filter: ((info)::text = 'genres'::text)
               ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=2492)
                     Index Cond: (id = cc.status_id)
                     Filter: ((kind)::text = 'complete+verified'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=757)
               Index Cond: (id = cc.subject_id)
               Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
 Planning Time: 93.482 ms
 Execution Time: 12773.847 ms
(64 rows)

SET
                                                                                                           QUERY PLAN                                                                                                            
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8700.30..8700.31 rows=1 width=128) (actual time=1109.696..1109.697 rows=1 loops=1)
   ->  Nested Loop  (cost=1010.43..8700.29 rows=1 width=80) (actual time=199.549..1109.625 rows=28 loops=1)
         ->  Nested Loop  (cost=1010.30..8700.12 rows=1 width=84) (actual time=199.524..1109.547 rows=28 loops=1)
               ->  Nested Loop  (cost=1010.17..8699.95 rows=1 width=88) (actual time=199.495..1109.301 rows=108 loops=1)
                     Join Filter: (t.id = cc.movie_id)
                     ->  Nested Loop  (cost=1009.75..8699.12 rows=1 width=100) (actual time=199.435..1108.750 rows=108 loops=1)
                           ->  Nested Loop  (cost=1009.61..8698.94 rows=1 width=104) (actual time=199.410..1108.519 rows=108 loops=1)
                                 ->  Nested Loop  (cost=1009.46..8698.75 rows=1 width=108) (actual time=199.369..1107.886 rows=324 loops=1)
                                       Join Filter: (t.id = mi_idx.movie_id)
                                       ->  Nested Loop  (cost=1009.04..8697.94 rows=1 width=95) (actual time=199.273..1107.061 rows=108 loops=1)
                                             ->  Nested Loop  (cost=1008.61..8696.90 rows=1 width=84) (actual time=199.175..1105.894 rows=108 loops=1)
                                                   Join Filter: (t.id = ci.movie_id)
                                                   ->  Nested Loop  (cost=1008.04..8667.81 rows=1 width=76) (actual time=198.161..1084.608 rows=65 loops=1)
                                                         Join Filter: (t.id = mi.movie_id)
                                                         ->  Gather  (cost=1007.61..8649.77 rows=1 width=25) (actual time=151.981..1080.211 rows=49 loops=1)
                                                               Workers Planned: 2
                                                               Workers Launched: 2
                                                               ->  Nested Loop  (cost=7.61..7649.67 rows=1 width=25) (actual time=173.489..753.683 rows=16 loops=3)
                                                                     ->  Nested Loop  (cost=7.18..7568.64 rows=98 width=4) (actual time=7.053..357.766 rows=25571 loops=3)
                                                                           ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4353.41 rows=3 width=4) (actual time=0.464..35.628 rows=2 loops=3)
                                                                                 Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                                 Rows Removed by Filter: 44721
                                                                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1068.74 rows=300 width=8) (actual time=4.938..133.533 rows=10959 loops=7)
                                                                                 Recheck Cond: (keyword_id = k.id)
                                                                                 Heap Blocks: exact=12389
                                                                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.818..3.818 rows=10959 loops=7)
                                                                                       Index Cond: (keyword_id = k.id)
                                                                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.83 rows=1 width=21) (actual time=0.015..0.015 rows=0 loops=76714)
                                                                           Index Cond: (id = mk.movie_id)
                                                                           Filter: ((production_year > 2000) AND (((title)::text ~~ '%Freddy%'::text) OR ((title)::text ~~ '%Jason%'::text) OR ((title)::text ~~ 'Saw%'::text)))
                                                                           Rows Removed by Filter: 1
                                                         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..18.03 rows=1 width=51) (actual time=0.207..0.208 rows=1 loops=49)
                                                               Index Cond: (movie_id = mk.movie_id)
                                                               Filter: ((info)::text = ANY ('{Horror,Thriller}'::text[]))
                                                               Rows Removed by Filter: 230
                                                   ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..29.07 rows=1 width=8) (actual time=0.204..0.326 rows=2 loops=65)
                                                         Index Cond: (movie_id = mk.movie_id)
                                                         Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                                         Rows Removed by Filter: 85
                                             ->  Index Scan using name_pkey on name n  (cost=0.43..1.04 rows=1 width=19) (actual time=0.010..0.010 rows=1 loops=108)
                                                   Index Cond: (id = ci.person_id)
                                                   Filter: ((gender)::text = 'm'::text)
                                       ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.78 rows=3 width=13) (actual time=0.005..0.006 rows=3 loops=108)
                                             Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=324)
                                       Index Cond: (id = mi_idx.info_type_id)
                                       Filter: ((info)::text = 'votes'::text)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=108)
                                 Index Cond: (id = mi.info_type_id)
                                 Filter: ((info)::text = 'genres'::text)
                     ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.81 rows=2 width=12) (actual time=0.004..0.004 rows=1 loops=108)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=108)
                     Index Cond: (id = cc.status_id)
                     Filter: ((kind)::text = 'complete+verified'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=28)
               Index Cond: (id = cc.subject_id)
               Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
 Planning Time: 93.246 ms
 Execution Time: 1116.515 ms
(62 rows)

SET
                                                                                                         QUERY PLAN                                                                                                         
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8720.29..8720.30 rows=1 width=128) (actual time=11695.493..11695.493 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.71..8720.28 rows=1 width=80) (actual time=38.237..11683.476 rows=8024 loops=1)
         Join Filter: (mi.movie_id = t.id)
         ->  Nested Loop  (cost=1012.28..8719.45 rows=1 width=83) (actual time=38.152..11568.498 rows=8024 loops=1)
               ->  Nested Loop  (cost=1011.85..8718.42 rows=1 width=72) (actual time=38.068..11342.133 rows=11863 loops=1)
                     Join Filter: (mi.movie_id = ci.movie_id)
                     ->  Nested Loop  (cost=1011.29..8689.33 rows=1 width=64) (actual time=17.721..2422.957 rows=14655 loops=1)
                           ->  Nested Loop  (cost=1011.14..8689.15 rows=1 width=68) (actual time=17.697..2385.241 rows=18333 loops=1)
                                 ->  Nested Loop  (cost=1011.01..8688.98 rows=1 width=72) (actual time=17.667..2345.052 rows=23704 loops=1)
                                       ->  Gather  (cost=1010.88..8688.81 rows=1 width=76) (actual time=12.967..2241.651 rows=43984 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Nested Loop  (cost=10.88..7688.71 rows=1 width=76) (actual time=12.600..3929.090 rows=14661 loops=3)
                                                   Join Filter: (mi.movie_id = cc.movie_id)
                                                   ->  Nested Loop  (cost=10.46..7687.87 rows=1 width=64) (actual time=7.635..3794.693 rows=22577 loops=3)
                                                         Join Filter: (mi_idx.movie_id = mi.movie_id)
                                                         ->  Hash Join  (cost=10.03..7651.37 rows=2 width=13) (actual time=7.393..820.710 rows=21234 loops=3)
                                                               Hash Cond: (mi_idx.info_type_id = it2.id)
                                                               ->  Nested Loop  (cost=7.61..7648.12 rows=298 width=17) (actual time=7.161..787.837 rows=63896 loops=3)
                                                                     ->  Nested Loop  (cost=7.18..7568.64 rows=98 width=4) (actual time=7.086..422.783 rows=25571 loops=3)
                                                                           ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4353.41 rows=3 width=4) (actual time=0.533..34.640 rows=2 loops=3)
                                                                                 Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                                 Rows Removed by Filter: 44721
                                                                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1068.74 rows=300 width=8) (actual time=4.978..161.748 rows=10959 loops=7)
                                                                                 Recheck Cond: (keyword_id = k.id)
                                                                                 Heap Blocks: exact=12389
                                                                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.861..3.861 rows=10959 loops=7)
                                                                                       Index Cond: (keyword_id = k.id)
                                                                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.78 rows=3 width=13) (actual time=0.012..0.013 rows=2 loops=76714)
                                                                           Index Cond: (movie_id = mk.movie_id)
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.084..0.084 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.056..0.059 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'votes'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..18.24 rows=1 width=51) (actual time=0.135..0.139 rows=1 loops=63701)
                                                               Index Cond: (movie_id = mk.movie_id)
                                                               Filter: ((info)::text = ANY ('{Horror,Action,Sci-Fi,Thriller,Crime,War}'::text[]))
                                                               Rows Removed by Filter: 58
                                                   ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.81 rows=2 width=12) (actual time=0.004..0.005 rows=1 loops=67732)
                                                         Index Cond: (movie_id = mk.movie_id)
                                       ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=43984)
                                             Index Cond: (id = cc.status_id)
                                             Filter: ((kind)::text = 'complete+verified'::text)
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=23704)
                                       Index Cond: (id = cc.subject_id)
                                       Filter: ((kind)::text = 'cast'::text)
                                       Rows Removed by Filter: 0
                           ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=18333)
                                 Index Cond: (id = mi.info_type_id)
                                 Filter: ((info)::text = 'genres'::text)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..29.07 rows=1 width=8) (actual time=0.459..0.608 rows=1 loops=14655)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                           Rows Removed by Filter: 83
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.04 rows=1 width=19) (actual time=0.018..0.018 rows=1 loops=11863)
                     Index Cond: (id = ci.person_id)
                     Filter: ((gender)::text = 'm'::text)
                     Rows Removed by Filter: 0
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.82 rows=1 width=21) (actual time=0.013..0.013 rows=1 loops=8024)
               Index Cond: (id = mk.movie_id)
 Planning Time: 94.430 ms
 Execution Time: 11696.800 ms
(65 rows)

SET
                                                                                                      QUERY PLAN                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8966.22..8966.23 rows=1 width=128) (actual time=3472.314..3472.315 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.88..8966.21 rows=1 width=80) (actual time=138.536..3470.571 rows=1273 loops=1)
         Join Filter: (mi.movie_id = t.id)
         ->  Nested Loop  (cost=1012.45..8965.10 rows=1 width=83) (actual time=138.459..3457.034 rows=1273 loops=1)
               ->  Nested Loop  (cost=1012.02..8963.80 rows=1 width=72) (actual time=138.372..3435.036 rows=1556 loops=1)
                     ->  Nested Loop  (cost=1011.88..8963.62 rows=1 width=76) (actual time=138.336..3429.963 rows=1616 loops=1)
                           Join Filter: (mi_idx.movie_id = mi.movie_id)
                           ->  Nested Loop  (cost=1011.45..8940.22 rows=1 width=25) (actual time=64.164..3214.017 rows=1471 loops=1)
                                 Join Filter: (mi_idx.movie_id = ci.movie_id)
                                 ->  Gather  (cost=1010.88..8907.19 rows=1 width=17) (actual time=63.464..2108.185 rows=1547 loops=1)
                                       Workers Planned: 2
                                       Workers Launched: 2
                                       ->  Nested Loop  (cost=10.88..7907.09 rows=1 width=17) (actual time=38.021..2294.612 rows=516 loops=3)
                                             ->  Nested Loop  (cost=10.46..7893.34 rows=14 width=21) (actual time=7.448..1293.990 rows=199419 loops=3)
                                                   Join Filter: (mi_idx.movie_id = mc.movie_id)
                                                   ->  Hash Join  (cost=10.03..7888.91 rows=2 width=13) (actual time=7.377..763.507 rows=21234 loops=3)
                                                         Hash Cond: (mi_idx.info_type_id = it2.id)
                                                         ->  Nested Loop  (cost=7.61..7885.67 rows=298 width=17) (actual time=7.137..734.167 rows=63896 loops=3)
                                                               ->  Nested Loop  (cost=7.18..7778.10 rows=98 width=4) (actual time=7.055..403.756 rows=25571 loops=3)
                                                                     ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4562.87 rows=3 width=4) (actual time=0.484..36.495 rows=2 loops=3)
                                                                           Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                           Rows Removed by Filter: 44721
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1068.74 rows=300 width=8) (actual time=4.966..153.073 rows=10959 loops=7)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=12389
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.844..3.844 rows=10959 loops=7)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..1.07 rows=3 width=13) (actual time=0.010..0.011 rows=2 loops=76714)
                                                                     Index Cond: (movie_id = mk.movie_id)
                                                         ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.084..0.084 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.060..0.063 rows=1 loops=3)
                                                                     Filter: ((info)::text = 'votes'::text)
                                                                     Rows Removed by Filter: 112
                                                   ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.15 rows=5 width=8) (actual time=0.014..0.021 rows=9 loops=63701)
                                                         Index Cond: (movie_id = mk.movie_id)
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.98 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=598256)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((name)::text ~~ 'Lionsgate%'::text)
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..33.03 rows=1 width=8) (actual time=0.519..0.717 rows=1 loops=1547)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                       Rows Removed by Filter: 119
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..23.38 rows=1 width=51) (actual time=0.143..0.145 rows=1 loops=1471)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((info)::text = ANY ('{Horror,Thriller}'::text[]))
                                 Rows Removed by Filter: 173
                     ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1616)
                           Index Cond: (id = mi.info_type_id)
                           Filter: ((info)::text = 'genres'::text)
                           Rows Removed by Filter: 0
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.30 rows=1 width=19) (actual time=0.013..0.013 rows=1 loops=1556)
                     Index Cond: (id = ci.person_id)
                     Filter: ((gender)::text = 'm'::text)
                     Rows Removed by Filter: 0
         ->  Index Scan using title_pkey on title t  (cost=0.43..1.10 rows=1 width=21) (actual time=0.009..0.009 rows=1 loops=1273)
               Index Cond: (id = mk.movie_id)
 Planning Time: 107.734 ms
 Execution Time: 3479.406 ms
(60 rows)

SET
                                                                                                        QUERY PLAN                                                                                                         
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8956.88..8956.89 rows=1 width=128) (actual time=1105.565..1105.566 rows=1 loops=1)
   ->  Nested Loop  (cost=1010.60..8956.87 rows=1 width=80) (actual time=327.586..1105.439 rows=84 loops=1)
         ->  Nested Loop  (cost=1010.17..8955.57 rows=1 width=69) (actual time=327.494..1104.583 rows=84 loops=1)
               ->  Nested Loop  (cost=1010.03..8955.39 rows=1 width=73) (actual time=327.465..1104.092 rows=252 loops=1)
                     Join Filter: (t.id = mi_idx.movie_id)
                     ->  Nested Loop  (cost=1009.60..8954.29 rows=1 width=84) (actual time=327.381..1103.632 rows=84 loops=1)
                           ->  Nested Loop  (cost=1009.46..8954.10 rows=1 width=88) (actual time=327.329..1103.389 rows=84 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=1009.02..8930.71 rows=1 width=37) (actual time=326.605..1096.850 rows=53 loops=1)
                                       ->  Nested Loop  (cost=1008.60..8921.93 rows=1 width=41) (actual time=326.432..1096.131 rows=119 loops=1)
                                             Join Filter: (t.id = mc.movie_id)
                                             ->  Nested Loop  (cost=1008.17..8919.75 rows=1 width=33) (actual time=194.495..1094.256 rows=77 loops=1)
                                                   Join Filter: (t.id = ci.movie_id)
                                                   ->  Gather  (cost=1007.61..8886.71 rows=1 width=25) (actual time=150.014..1069.706 rows=49 loops=1)
                                                         Workers Planned: 2
                                                         Workers Launched: 2
                                                         ->  Nested Loop  (cost=7.61..7886.61 rows=1 width=25) (actual time=170.966..747.388 rows=16 loops=3)
                                                               ->  Nested Loop  (cost=7.18..7778.10 rows=98 width=4) (actual time=7.036..354.744 rows=25571 loops=3)
                                                                     ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4562.87 rows=3 width=4) (actual time=0.439..35.530 rows=2 loops=3)
                                                                           Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                           Rows Removed by Filter: 44721
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1068.74 rows=300 width=8) (actual time=4.937..132.281 rows=10959 loops=7)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=12389
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.811..3.811 rows=10959 loops=7)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using title_pkey on title t  (cost=0.43..1.11 rows=1 width=21) (actual time=0.014..0.014 rows=0 loops=76714)
                                                                     Index Cond: (id = mk.movie_id)
                                                                     Filter: ((production_year > 2000) AND (((title)::text ~~ '%Freddy%'::text) OR ((title)::text ~~ '%Jason%'::text) OR ((title)::text ~~ 'Saw%'::text)))
                                                                     Rows Removed by Filter: 1
                                                   ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..33.03 rows=1 width=8) (actual time=0.419..0.621 rows=2 loops=49)
                                                         Index Cond: (movie_id = mk.movie_id)
                                                         Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                                         Rows Removed by Filter: 82
                                             ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.16 rows=1 width=8) (actual time=0.017..0.023 rows=2 loops=77)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((note)::text ~~ '%(Blu-ray)%'::text)
                                                   Rows Removed by Filter: 24
                                       ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..8.14 rows=1 width=4) (actual time=0.006..0.006 rows=0 loops=119)
                                             Index Cond: (id = mc.company_id)
                                             Filter: ((name)::text ~~ 'Lionsgate%'::text)
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..23.38 rows=1 width=51) (actual time=0.122..0.122 rows=2 loops=53)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Horror,Thriller}'::text[]))
                                       Rows Removed by Filter: 292
                           ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=84)
                                 Index Cond: (id = mi.info_type_id)
                                 Filter: ((info)::text = 'genres'::text)
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..1.07 rows=3 width=13) (actual time=0.003..0.004 rows=3 loops=84)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=252)
                     Index Cond: (id = mi_idx.info_type_id)
                     Filter: ((info)::text = 'votes'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using name_pkey on name n  (cost=0.43..1.30 rows=1 width=19) (actual time=0.010..0.010 rows=1 loops=84)
               Index Cond: (id = ci.person_id)
               Filter: ((gender)::text = 'm'::text)
 Planning Time: 106.650 ms
 Execution Time: 1112.598 ms
(60 rows)

SET
                                                                                                      QUERY PLAN                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8966.43..8966.44 rows=1 width=128) (actual time=3487.237..3487.238 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.88..8966.42 rows=1 width=80) (actual time=136.462..3484.409 rows=2825 loops=1)
         Join Filter: (mi.movie_id = t.id)
         ->  Nested Loop  (cost=1012.45..8965.31 rows=1 width=83) (actual time=136.404..3464.074 rows=2825 loops=1)
               ->  Nested Loop  (cost=1012.02..8964.01 rows=1 width=72) (actual time=136.329..3436.999 rows=2825 loops=1)
                     ->  Nested Loop  (cost=1011.88..8963.83 rows=1 width=76) (actual time=136.296..3428.632 rows=3007 loops=1)
                           Join Filter: (mi_idx.movie_id = mi.movie_id)
                           ->  Nested Loop  (cost=1011.45..8940.22 rows=1 width=25) (actual time=63.927..3186.492 rows=1471 loops=1)
                                 Join Filter: (mi_idx.movie_id = ci.movie_id)
                                 ->  Gather  (cost=1010.88..8907.19 rows=1 width=17) (actual time=63.261..2059.026 rows=1547 loops=1)
                                       Workers Planned: 2
                                       Workers Launched: 2
                                       ->  Nested Loop  (cost=10.88..7907.09 rows=1 width=17) (actual time=37.962..2305.051 rows=516 loops=3)
                                             ->  Nested Loop  (cost=10.46..7893.34 rows=14 width=21) (actual time=7.570..1302.660 rows=199419 loops=3)
                                                   Join Filter: (mi_idx.movie_id = mc.movie_id)
                                                   ->  Hash Join  (cost=10.03..7888.91 rows=2 width=13) (actual time=7.484..768.297 rows=21234 loops=3)
                                                         Hash Cond: (mi_idx.info_type_id = it2.id)
                                                         ->  Nested Loop  (cost=7.61..7885.67 rows=298 width=17) (actual time=7.246..739.384 rows=63896 loops=3)
                                                               ->  Nested Loop  (cost=7.18..7778.10 rows=98 width=4) (actual time=7.181..407.244 rows=25571 loops=3)
                                                                     ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4562.87 rows=3 width=4) (actual time=0.592..36.884 rows=2 loops=3)
                                                                           Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                           Rows Removed by Filter: 44721
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1068.74 rows=300 width=8) (actual time=4.959..154.419 rows=10959 loops=7)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=12389
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.834..3.834 rows=10959 loops=7)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..1.07 rows=3 width=13) (actual time=0.011..0.011 rows=2 loops=76714)
                                                                     Index Cond: (movie_id = mk.movie_id)
                                                         ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.081..0.081 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.058..0.060 rows=1 loops=3)
                                                                     Filter: ((info)::text = 'votes'::text)
                                                                     Rows Removed by Filter: 112
                                                   ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.15 rows=5 width=8) (actual time=0.014..0.022 rows=9 loops=63701)
                                                         Index Cond: (movie_id = mk.movie_id)
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.98 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=598256)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((name)::text ~~ 'Lionsgate%'::text)
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..33.03 rows=1 width=8) (actual time=0.527..0.731 rows=1 loops=1547)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                       Rows Removed by Filter: 119
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..23.59 rows=1 width=51) (actual time=0.158..0.163 rows=2 loops=1471)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((info)::text = ANY ('{Horror,Action,Sci-Fi,Thriller,Crime,War}'::text[]))
                                 Rows Removed by Filter: 172
                     ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=3007)
                           Index Cond: (id = mi.info_type_id)
                           Filter: ((info)::text = 'genres'::text)
                           Rows Removed by Filter: 0
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.29 rows=1 width=19) (actual time=0.009..0.009 rows=1 loops=2825)
                     Index Cond: (id = ci.person_id)
         ->  Index Scan using title_pkey on title t  (cost=0.43..1.10 rows=1 width=21) (actual time=0.006..0.006 rows=1 loops=2825)
               Index Cond: (id = mk.movie_id)
 Planning Time: 107.577 ms
 Execution Time: 3494.292 ms
(58 rows)

SET
                                                                              QUERY PLAN                                                                               
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3801.48..3801.49 rows=1 width=96) (actual time=31.260..31.260 rows=1 loops=1)
   ->  Nested Loop  (cost=7.90..3801.40 rows=10 width=116) (actual time=31.253..31.253 rows=0 loops=1)
         ->  Nested Loop  (cost=7.47..3759.44 rows=10 width=103) (actual time=31.253..31.253 rows=0 loops=1)
               ->  Nested Loop  (cost=7.04..3754.59 rows=10 width=94) (actual time=31.253..31.253 rows=0 loops=1)
                     Join Filter: (ml.link_type_id = lt.id)
                     ->  Nested Loop  (cost=7.04..3750.90 rows=10 width=16) (actual time=31.252..31.252 rows=0 loops=1)
                           ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=30.542..31.226 rows=1 loops=1)
                                 ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=30.449..31.132 rows=1 loops=1)
                                       Filter: ((keyword)::text = '10,000-mile-club'::text)
                                       Rows Removed by Filter: 134169
                                 ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=0.078..0.078 rows=1 loops=1)
                                       Recheck Cond: (keyword_id = k.id)
                                       Heap Blocks: exact=1
                                       ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.034..0.034 rows=1 loops=1)
                                             Index Cond: (keyword_id = k.id)
                           ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=12) (actual time=0.024..0.024 rows=0 loops=1)
                                 Index Cond: (movie_id = mk.movie_id)
                     ->  Materialize  (cost=0.00..1.27 rows=18 width=86) (never executed)
                           ->  Seq Scan on link_type lt  (cost=0.00..1.18 rows=18 width=86) (never executed)
               ->  Index Scan using title_pkey on title t1  (cost=0.43..0.49 rows=1 width=21) (never executed)
                     Index Cond: (id = mk.movie_id)
         ->  Index Scan using title_pkey on title t2  (cost=0.43..4.20 rows=1 width=21) (never executed)
               Index Cond: (id = ml.linked_movie_id)
 Planning Time: 6.030 ms
 Execution Time: 31.795 ms
(25 rows)

SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3801.48..3801.49 rows=1 width=96) (actual time=503.585..503.585 rows=1 loops=1)
   ->  Nested Loop  (cost=7.90..3801.40 rows=10 width=116) (actual time=11.159..498.731 rows=4388 loops=1)
         ->  Nested Loop  (cost=7.47..3759.44 rows=10 width=103) (actual time=11.077..403.048 rows=4388 loops=1)
               ->  Nested Loop  (cost=7.04..3754.59 rows=10 width=94) (actual time=11.019..375.270 rows=4388 loops=1)
                     Join Filter: (ml.link_type_id = lt.id)
                     Rows Removed by Join Filter: 30206
                     ->  Nested Loop  (cost=7.04..3750.90 rows=10 width=16) (actual time=10.970..365.924 rows=4388 loops=1)
                           ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.698..275.745 rows=41840 loops=1)
                                 ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.962..26.838 rows=1 loops=1)
                                       Filter: ((keyword)::text = 'character-name-in-title'::text)
                                       Rows Removed by Filter: 134169
                                 ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.728..238.495 rows=41840 loops=1)
                                       Recheck Cond: (keyword_id = k.id)
                                       Heap Blocks: exact=11541
                                       ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=8.002..8.003 rows=41840 loops=1)
                                             Index Cond: (keyword_id = k.id)
                           ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=12) (actual time=0.002..0.002 rows=0 loops=41840)
                                 Index Cond: (movie_id = mk.movie_id)
                     ->  Materialize  (cost=0.00..1.27 rows=18 width=86) (actual time=0.000..0.001 rows=8 loops=4388)
                           ->  Seq Scan on link_type lt  (cost=0.00..1.18 rows=18 width=86) (actual time=0.026..0.035 rows=17 loops=1)
               ->  Index Scan using title_pkey on title t1  (cost=0.43..0.49 rows=1 width=21) (actual time=0.005..0.005 rows=1 loops=4388)
                     Index Cond: (id = mk.movie_id)
         ->  Index Scan using title_pkey on title t2  (cost=0.43..4.20 rows=1 width=21) (actual time=0.021..0.021 rows=1 loops=4388)
               Index Cond: (id = ml.linked_movie_id)
 Planning Time: 4.934 ms
 Execution Time: 504.129 ms
(26 rows)

SET
                                                                                                               QUERY PLAN                                                                                                               
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3985.44..3985.45 rows=1 width=192) (actual time=280.799..280.800 rows=1 loops=1)
   ->  Nested Loop  (cost=874.71..3985.43 rows=1 width=82) (actual time=67.907..280.776 rows=8 loops=1)
         Join Filter: ((ml.linked_movie_id = t2.id) AND (kt2.id = t2.kind_id))
         ->  Nested Loop  (cost=874.28..3984.89 rows=1 width=81) (actual time=67.867..280.531 rows=35 loops=1)
               Join Filter: (mi_idx2.info_type_id = it2.id)
               Rows Removed by Join Filter: 16250
               ->  Nested Loop  (cost=874.28..3981.65 rows=55 width=85) (actual time=11.699..273.401 rows=16285 loops=1)
                     ->  Nested Loop  (cost=873.86..3913.92 rows=152 width=70) (actual time=11.531..171.176 rows=39869 loops=1)
                           ->  Nested Loop  (cost=873.43..3824.47 rows=147 width=78) (actual time=11.511..131.418 rows=6175 loops=1)
                                 ->  Nested Loop  (cost=873.01..3759.33 rows=147 width=63) (actual time=11.489..105.635 rows=6175 loops=1)
                                       Join Filter: (ml.linked_movie_id = mc2.movie_id)
                                       ->  Nested Loop  (cost=872.58..3738.66 rows=28 width=55) (actual time=11.432..80.747 rows=1602 loops=1)
                                             Join Filter: (kt1.id = t1.kind_id)
                                             Rows Removed by Join Filter: 1143
                                             ->  Nested Loop  (cost=0.13..13.35 rows=1 width=8) (actual time=0.063..0.072 rows=1 loops=1)
                                                   ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.13..12.26 rows=1 width=4) (actual time=0.052..0.054 rows=1 loops=1)
                                                         Filter: ((kind)::text = 'tv series'::text)
                                                         Rows Removed by Filter: 6
                                                   ->  Seq Scan on kind_type kt1  (cost=0.00..1.09 rows=1 width=4) (actual time=0.009..0.015 rows=1 loops=1)
                                                         Filter: ((kind)::text = 'tv series'::text)
                                                         Rows Removed by Filter: 6
                                             ->  Nested Loop  (cost=872.44..3722.90 rows=193 width=55) (actual time=11.367..80.066 rows=2745 loops=1)
                                                   Join Filter: (ml.movie_id = t1.id)
                                                   ->  Nested Loop  (cost=872.01..3610.10 rows=193 width=30) (actual time=11.340..63.221 rows=2745 loops=1)
                                                         ->  Hash Join  (cost=871.59..3333.95 rows=134 width=17) (actual time=11.283..40.926 rows=2064 loops=1)
                                                               Hash Cond: (mi_idx1.info_type_id = it1.id)
                                                               ->  Merge Join  (cost=869.16..3290.24 rows=15158 width=21) (actual time=11.174..39.371 rows=6192 loops=1)
                                                                     Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43826.36 rows=1380035 width=13) (actual time=0.023..18.618 rows=63901 loops=1)
                                                                     ->  Sort  (cost=868.72..881.22 rows=5000 width=8) (actual time=11.119..11.708 rows=6443 loops=1)
                                                                           Sort Key: ml.movie_id
                                                                           Sort Method: quicksort  Memory: 205kB
                                                                           ->  Hash Join  (cost=1.29..561.53 rows=5000 width=8) (actual time=0.126..9.952 rows=2315 loops=1)
                                                                                 Hash Cond: (ml.link_type_id = lt.id)
                                                                                 ->  Seq Scan on movie_link ml  (cost=0.00..462.97 rows=29997 width=12) (actual time=0.009..5.657 rows=29997 loops=1)
                                                                                 ->  Hash  (cost=1.25..1.25 rows=3 width=4) (actual time=0.054..0.054 rows=2 loops=1)
                                                                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                       ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=3 width=4) (actual time=0.037..0.042 rows=2 loops=1)
                                                                                             Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                             Rows Removed by Filter: 16
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.038..0.038 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.021..0.024 rows=1 loops=1)
                                                                           Filter: ((info)::text = 'rating'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=1 width=13) (actual time=0.009..0.010 rows=1 loops=2064)
                                                               Index Cond: (movie_id = ml.linked_movie_id)
                                                               Filter: ((info)::text < '3.0'::text)
                                                               Rows Removed by Filter: 2
                                                   ->  Index Scan using title_pkey on title t1  (cost=0.43..0.57 rows=1 width=25) (actual time=0.005..0.005 rows=1 loops=2745)
                                                         Index Cond: (id = mi_idx1.movie_id)
                                       ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.68 rows=5 width=8) (actual time=0.010..0.014 rows=4 loops=1602)
                                             Index Cond: (movie_id = mi_idx2.movie_id)
                                 ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.003..0.003 rows=1 loops=6175)
                                       Index Cond: (id = mc2.company_id)
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.003..0.005 rows=6 loops=6175)
                                 Index Cond: (movie_id = t1.id)
                     ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=39869)
                           Index Cond: (id = mc1.company_id)
                           Filter: ((country_code)::text = '[us]'::text)
                           Rows Removed by Filter: 1
               ->  Materialize  (cost=0.00..2.42 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=16285)
                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.022..0.023 rows=1 loops=1)
                           Filter: ((info)::text = 'rating'::text)
                           Rows Removed by Filter: 112
         ->  Index Scan using title_pkey on title t2  (cost=0.43..0.52 rows=1 width=25) (actual time=0.006..0.006 rows=0 loops=35)
               Index Cond: (id = mc2.movie_id)
               Filter: ((production_year >= 2005) AND (production_year <= 2008))
               Rows Removed by Filter: 1
 Planning Time: 110.709 ms
 Execution Time: 281.772 ms
(71 rows)

SET
                                                                                                                  QUERY PLAN                                                                                                                  
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=2780.95..2780.96 rows=1 width=192) (actual time=79.092..79.092 rows=1 loops=1)
   ->  Nested Loop  (cost=340.63..2780.94 rows=1 width=82) (actual time=15.633..79.076 rows=4 loops=1)
         Join Filter: ((t2.id = mi_idx2.movie_id) AND (it2.id = mi_idx2.info_type_id))
         Rows Removed by Join Filter: 4
         ->  Nested Loop  (cost=340.20..2780.42 rows=1 width=93) (actual time=15.600..79.029 rows=4 loops=1)
               ->  Nested Loop  (cost=340.07..2780.25 rows=1 width=97) (actual time=15.577..78.999 rows=4 loops=1)
                     Join Filter: (ml.movie_id = t1.id)
                     ->  Nested Loop  (cost=339.64..2779.72 rows=1 width=88) (actual time=15.556..78.970 rows=4 loops=1)
                           ->  Nested Loop  (cost=339.22..2779.28 rows=1 width=73) (actual time=15.549..78.954 rows=4 loops=1)
                                 ->  Nested Loop  (cost=338.79..2777.83 rows=1 width=65) (actual time=15.528..78.929 rows=1 loops=1)
                                       ->  Nested Loop  (cost=338.66..2777.66 rows=1 width=69) (actual time=4.108..78.885 rows=6 loops=1)
                                             ->  Nested Loop  (cost=338.23..2769.26 rows=2 width=44) (actual time=4.051..73.896 rows=477 loops=1)
                                                   ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..14.12 rows=1 width=4) (actual time=0.027..0.032 rows=1 loops=1)
                                                         Filter: ((info)::text = 'rating'::text)
                                                         Rows Removed by Filter: 112
                                                   ->  Nested Loop  (cost=338.08..2755.12 rows=2 width=40) (actual time=4.021..73.759 rows=477 loops=1)
                                                         ->  Nested Loop  (cost=337.66..2649.97 rows=236 width=25) (actual time=3.898..42.716 rows=9674 loops=1)
                                                               Join Filter: (ml.movie_id = mc1.movie_id)
                                                               ->  Hash Join  (cost=337.23..2620.48 rows=45 width=17) (actual time=3.887..28.070 rows=2064 loops=1)
                                                                     Hash Cond: (mi_idx1.info_type_id = it1.id)
                                                                     ->  Merge Join  (cost=334.81..2604.30 rows=5051 width=21) (actual time=3.786..26.745 rows=6192 loops=1)
                                                                           Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43826.36 rows=1380035 width=13) (actual time=0.030..13.852 rows=63901 loops=1)
                                                                           ->  Sort  (cost=334.38..338.55 rows=1666 width=8) (actual time=3.723..4.246 rows=6443 loops=1)
                                                                                 Sort Key: ml.movie_id
                                                                                 Sort Method: quicksort  Memory: 205kB
                                                                                 ->  Nested Loop  (cost=38.82..245.23 rows=1666 width=8) (actual time=0.221..2.583 rows=2315 loops=1)
                                                                                       ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=4) (actual time=0.026..0.032 rows=2 loops=1)
                                                                                             Filter: ((link)::text ~~ '%follow%'::text)
                                                                                             Rows Removed by Filter: 16
                                                                                       ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..225.26 rows=1875 width=12) (actual time=0.156..1.073 rows=1158 loops=2)
                                                                                             Recheck Cond: (link_type_id = lt.id)
                                                                                             Heap Blocks: exact=191
                                                                                             ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.135..0.135 rows=1158 loops=2)
                                                                                                   Index Cond: (link_type_id = lt.id)
                                                                     ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.033..0.033 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.020..0.023 rows=1 loops=1)
                                                                                 Filter: ((info)::text = 'rating'::text)
                                                                                 Rows Removed by Filter: 112
                                                               ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.59 rows=5 width=8) (actual time=0.004..0.005 rows=5 loops=2064)
                                                                     Index Cond: (movie_id = mi_idx1.movie_id)
                                                         ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=9674)
                                                               Index Cond: (id = mc1.company_id)
                                                               Filter: ((country_code)::text = '[nl]'::text)
                                                               Rows Removed by Filter: 1
                                             ->  Index Scan using title_pkey on title t2  (cost=0.43..4.20 rows=1 width=25) (actual time=0.010..0.010 rows=0 loops=477)
                                                   Index Cond: (id = ml.linked_movie_id)
                                                   Filter: (production_year = 2007)
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.006..0.006 rows=0 loops=6)
                                             Index Cond: (id = t2.kind_id)
                                             Filter: ((kind)::text = 'tv series'::text)
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..1.39 rows=5 width=8) (actual time=0.019..0.023 rows=4 loops=1)
                                       Index Cond: (movie_id = t2.id)
                           ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.003..0.003 rows=1 loops=4)
                                 Index Cond: (id = mc2.company_id)
                     ->  Index Scan using title_pkey on title t1  (cost=0.43..0.51 rows=1 width=25) (actual time=0.006..0.006 rows=1 loops=4)
                           Index Cond: (id = mc1.movie_id)
               ->  Index Scan using kind_type_pkey on kind_type kt1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=4)
                     Index Cond: (id = t1.kind_id)
                     Filter: ((kind)::text = 'tv series'::text)
         ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..0.51 rows=1 width=13) (actual time=0.009..0.010 rows=2 loops=4)
               Index Cond: (movie_id = mc2.movie_id)
               Filter: ((info)::text < '3.0'::text)
               Rows Removed by Filter: 1
 Planning Time: 109.668 ms
 Execution Time: 80.163 ms
(69 rows)

SET
                                                                                                                  QUERY PLAN                                                                                                                  
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4007.21..4007.22 rows=1 width=192) (actual time=82.460..82.460 rows=1 loops=1)
   ->  Nested Loop  (cost=874.85..4007.20 rows=1 width=82) (actual time=19.974..82.313 rows=114 loops=1)
         ->  Nested Loop  (cost=874.43..4006.75 rows=1 width=67) (actual time=19.949..81.674 rows=131 loops=1)
               ->  Nested Loop  (cost=874.30..4006.58 rows=1 width=71) (actual time=19.914..81.396 rows=131 loops=1)
                     Join Filter: (ml.movie_id = t1.id)
                     ->  Nested Loop  (cost=873.87..4006.06 rows=1 width=62) (actual time=19.876..80.889 rows=131 loops=1)
                           ->  Nested Loop  (cost=873.45..4005.62 rows=1 width=47) (actual time=19.831..80.207 rows=131 loops=1)
                                 ->  Nested Loop  (cost=873.02..4004.95 rows=1 width=55) (actual time=19.813..79.817 rows=51 loops=1)
                                       Join Filter: (it2.id = mi_idx2.info_type_id)
                                       Rows Removed by Join Filter: 4467
                                       ->  Nested Loop  (cost=872.59..3959.22 rows=82 width=50) (actual time=11.255..67.197 rows=3300 loops=1)
                                             Join Filter: (t2.kind_id = kt2.id)
                                             Rows Removed by Join Filter: 4017
                                             ->  Nested Loop  (cost=872.59..3949.90 rows=288 width=54) (actual time=10.384..64.739 rows=4087 loops=1)
                                                   ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..14.12 rows=1 width=4) (actual time=0.026..0.031 rows=1 loops=1)
                                                         Filter: ((info)::text = 'rating'::text)
                                                         Rows Removed by Filter: 112
                                                   ->  Nested Loop  (cost=872.45..3932.90 rows=288 width=50) (actual time=10.355..63.923 rows=4087 loops=1)
                                                         Join Filter: (ml.movie_id = mc1.movie_id)
                                                         ->  Nested Loop  (cost=872.02..3896.86 rows=55 width=42) (actual time=10.346..57.255 rows=851 loops=1)
                                                               ->  Hash Join  (cost=871.59..3333.95 rows=134 width=17) (actual time=10.262..34.641 rows=2064 loops=1)
                                                                     Hash Cond: (mi_idx1.info_type_id = it1.id)
                                                                     ->  Merge Join  (cost=869.16..3290.24 rows=15158 width=21) (actual time=10.150..33.191 rows=6192 loops=1)
                                                                           Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43826.36 rows=1380035 width=13) (actual time=0.023..13.784 rows=63901 loops=1)
                                                                           ->  Sort  (cost=868.72..881.22 rows=5000 width=8) (actual time=10.096..10.645 rows=6443 loops=1)
                                                                                 Sort Key: ml.movie_id
                                                                                 Sort Method: quicksort  Memory: 205kB
                                                                                 ->  Hash Join  (cost=1.29..561.53 rows=5000 width=8) (actual time=0.115..8.948 rows=2315 loops=1)
                                                                                       Hash Cond: (ml.link_type_id = lt.id)
                                                                                       ->  Seq Scan on movie_link ml  (cost=0.00..462.97 rows=29997 width=12) (actual time=0.009..4.747 rows=29997 loops=1)
                                                                                       ->  Hash  (cost=1.25..1.25 rows=3 width=4) (actual time=0.059..0.059 rows=2 loops=1)
                                                                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                             ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=3 width=4) (actual time=0.036..0.041 rows=2 loops=1)
                                                                                                   Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                                   Rows Removed by Filter: 16
                                                                     ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.035..0.035 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.021..0.023 rows=1 loops=1)
                                                                                 Filter: ((info)::text = 'rating'::text)
                                                                                 Rows Removed by Filter: 112
                                                               ->  Index Scan using title_pkey on title t2  (cost=0.43..4.20 rows=1 width=25) (actual time=0.010..0.010 rows=0 loops=2064)
                                                                     Index Cond: (id = ml.linked_movie_id)
                                                                     Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                                                     Rows Removed by Filter: 1
                                                         ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.59 rows=5 width=8) (actual time=0.004..0.006 rows=5 loops=851)
                                                               Index Cond: (movie_id = mi_idx1.movie_id)
                                             ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=2 loops=4087)
                                                   ->  Seq Scan on kind_type kt2  (cost=0.00..1.09 rows=2 width=4) (actual time=0.011..0.012 rows=2 loops=1)
                                                         Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                                                         Rows Removed by Filter: 5
                                       ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..0.53 rows=2 width=13) (actual time=0.003..0.003 rows=1 loops=3300)
                                             Index Cond: (movie_id = t2.id)
                                             Filter: ((info)::text < '3.5'::text)
                                             Rows Removed by Filter: 2
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.62 rows=5 width=8) (actual time=0.005..0.007 rows=3 loops=51)
                                       Index Cond: (movie_id = t2.id)
                           ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.004..0.004 rows=1 loops=131)
                                 Index Cond: (id = mc2.company_id)
                     ->  Index Scan using title_pkey on title t1  (cost=0.43..0.51 rows=1 width=25) (actual time=0.003..0.003 rows=1 loops=131)
                           Index Cond: (id = mc1.movie_id)
               ->  Index Scan using kind_type_pkey on kind_type kt1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=131)
                     Index Cond: (id = t1.kind_id)
                     Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
         ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.004..0.004 rows=1 loops=131)
               Index Cond: (id = mc1.company_id)
               Filter: ((country_code)::text <> '[us]'::text)
               Rows Removed by Filter: 0
 Planning Time: 108.736 ms
 Execution Time: 83.419 ms
(70 rows)

SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16631.00..16631.01 rows=1 width=32) (actual time=641.137..641.137 rows=1 loops=1)
   ->  Nested Loop  (cost=7.62..16630.82 rows=72 width=17) (actual time=14.527..640.877 rows=206 loops=1)
         Join Filter: (t.id = mi.movie_id)
         ->  Nested Loop  (cost=7.19..16315.45 rows=177 width=25) (actual time=9.943..379.824 rows=2235 loops=1)
               ->  Nested Loop  (cost=6.76..16101.73 rows=438 width=4) (actual time=5.708..174.856 rows=12951 loops=1)
                     ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=1.910..39.969 rows=30 loops=1)
                           Filter: ((keyword)::text ~~ '%sequel%'::text)
                           Rows Removed by Filter: 134140
                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1033.58 rows=300 width=8) (actual time=0.171..4.306 rows=432 loops=30)
                           Recheck Cond: (keyword_id = k.id)
                           Heap Blocks: exact=6979
                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.129..0.129 rows=432 loops=30)
                                 Index Cond: (keyword_id = k.id)
               ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.015..0.015 rows=0 loops=12951)
                     Index Cond: (id = mk.movie_id)
                     Filter: (production_year > 2005)
                     Rows Removed by Filter: 1
         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.77 rows=1 width=4) (actual time=0.110..0.116 rows=0 loops=2235)
               Index Cond: (movie_id = mk.movie_id)
               Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German}'::text[]))
               Rows Removed by Filter: 45
 Planning Time: 3.764 ms
 Execution Time: 641.457 ms
(23 rows)

SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16416.66..16416.67 rows=1 width=32) (actual time=400.014..400.014 rows=1 loops=1)
   ->  Nested Loop  (cost=7.62..16416.66 rows=1 width=17) (actual time=24.613..399.971 rows=5 loops=1)
         Join Filter: (t.id = mi.movie_id)
         ->  Nested Loop  (cost=7.19..16315.45 rows=69 width=25) (actual time=10.513..345.759 rows=405 loops=1)
               ->  Nested Loop  (cost=6.76..16101.73 rows=438 width=4) (actual time=6.029..161.898 rows=12951 loops=1)
                     ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=2.270..39.115 rows=30 loops=1)
                           Filter: ((keyword)::text ~~ '%sequel%'::text)
                           Rows Removed by Filter: 134140
                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1033.58 rows=300 width=8) (actual time=0.164..3.905 rows=432 loops=30)
                           Recheck Cond: (keyword_id = k.id)
                           Heap Blocks: exact=6979
                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.124..0.124 rows=432 loops=30)
                                 Index Cond: (keyword_id = k.id)
               ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.013..0.013 rows=0 loops=12951)
                     Index Cond: (id = mk.movie_id)
                     Filter: (production_year > 2010)
                     Rows Removed by Filter: 1
         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.45 rows=1 width=4) (actual time=0.132..0.133 rows=0 loops=405)
               Index Cond: (movie_id = mk.movie_id)
               Filter: ((info)::text = 'Bulgaria'::text)
               Rows Removed by Filter: 63
 Planning Time: 4.159 ms
 Execution Time: 400.356 ms
(23 rows)

SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16894.26..16894.27 rows=1 width=32) (actual time=1062.214..1062.215 rows=1 loops=1)
   ->  Nested Loop  (cost=7.62..16892.82 rows=578 width=17) (actual time=6.733..1056.739 rows=7250 loops=1)
         Join Filter: (t.id = mi.movie_id)
         ->  Nested Loop  (cost=7.19..16315.45 rows=304 width=25) (actual time=6.052..363.356 rows=7874 loops=1)
               ->  Nested Loop  (cost=6.76..16101.73 rows=438 width=4) (actual time=5.999..167.791 rows=12951 loops=1)
                     ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=2.254..38.797 rows=30 loops=1)
                           Filter: ((keyword)::text ~~ '%sequel%'::text)
                           Rows Removed by Filter: 134140
                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1033.58 rows=300 width=8) (actual time=0.168..4.111 rows=432 loops=30)
                           Recheck Cond: (keyword_id = k.id)
                           Heap Blocks: exact=6979
                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.126..0.126 rows=432 loops=30)
                                 Index Cond: (keyword_id = k.id)
               ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.014..0.014 rows=1 loops=12951)
                     Index Cond: (id = mk.movie_id)
                     Filter: (production_year > 1990)
                     Rows Removed by Filter: 0
         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=4) (actual time=0.075..0.087 rows=1 loops=7874)
               Index Cond: (movie_id = mk.movie_id)
               Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,USA,American}'::text[]))
               Rows Removed by Filter: 35
 Planning Time: 4.473 ms
 Execution Time: 1062.530 ms
(23 rows)

SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16334.91..16334.92 rows=1 width=64) (actual time=420.589..420.589 rows=1 loops=1)
   ->  Nested Loop  (cost=7.62..16334.90 rows=2 width=22) (actual time=11.883..419.746 rows=740 loops=1)
         Join Filter: (mi_idx.movie_id = t.id)
         ->  Nested Loop  (cost=7.19..16332.90 rows=4 width=13) (actual time=6.111..313.417 rows=5820 loops=1)
               Join Filter: (mi_idx.info_type_id = it.id)
               Rows Removed by Join Filter: 2643
               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.032..0.035 rows=1 loops=1)
                     Filter: ((info)::text = 'rating'::text)
                     Rows Removed by Filter: 112
               ->  Nested Loop  (cost=7.19..16324.17 rows=505 width=17) (actual time=6.077..311.011 rows=8463 loops=1)
                     ->  Nested Loop  (cost=6.76..16101.73 rows=438 width=4) (actual time=6.023..168.551 rows=12951 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=2.235..39.428 rows=30 loops=1)
                                 Filter: ((keyword)::text ~~ '%sequel%'::text)
                                 Rows Removed by Filter: 134140
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1033.58 rows=300 width=8) (actual time=0.167..4.141 rows=432 loops=30)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=6979
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.127..0.127 rows=432 loops=30)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=13) (actual time=0.010..0.010 rows=1 loops=12951)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((info)::text > '5.0'::text)
                           Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.018..0.018 rows=0 loops=5820)
               Index Cond: (id = mk.movie_id)
               Filter: (production_year > 2005)
               Rows Removed by Filter: 1
 Planning Time: 5.015 ms
 Execution Time: 421.006 ms
(29 rows)

SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16327.16..16327.17 rows=1 width=64) (actual time=207.836..207.837 rows=1 loops=1)
   ->  Nested Loop  (cost=7.62..16327.16 rows=1 width=22) (actual time=36.331..207.806 rows=6 loops=1)
         Join Filter: (mi_idx.movie_id = t.id)
         ->  Nested Loop  (cost=7.19..16326.66 rows=1 width=13) (actual time=31.587..207.352 rows=21 loops=1)
               Join Filter: (mi_idx.info_type_id = it.id)
               Rows Removed by Join Filter: 285
               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.026..0.030 rows=1 loops=1)
                     Filter: ((info)::text = 'rating'::text)
                     Rows Removed by Filter: 112
               ->  Nested Loop  (cost=7.19..16324.17 rows=6 width=17) (actual time=7.028..207.253 rows=306 loops=1)
                     ->  Nested Loop  (cost=6.76..16101.73 rows=438 width=4) (actual time=6.087..112.887 rows=12951 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=2.286..29.990 rows=30 loops=1)
                                 Filter: ((keyword)::text ~~ '%sequel%'::text)
                                 Rows Removed by Filter: 134140
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1033.58 rows=300 width=8) (actual time=0.153..2.638 rows=432 loops=30)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=6979
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.116..0.116 rows=432 loops=30)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=13) (actual time=0.007..0.007 rows=0 loops=12951)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((info)::text > '9.0'::text)
                           Rows Removed by Filter: 2
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.020..0.020 rows=0 loops=21)
               Index Cond: (id = mk.movie_id)
               Filter: (production_year > 2010)
               Rows Removed by Filter: 1
 Planning Time: 4.594 ms
 Execution Time: 208.232 ms
(29 rows)

SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16344.82..16344.83 rows=1 width=64) (actual time=312.629..312.630 rows=1 loops=1)
   ->  Nested Loop  (cost=7.62..16344.79 rows=5 width=22) (actual time=5.307..308.281 rows=4700 loops=1)
         Join Filter: (mi_idx.movie_id = t.id)
         ->  Nested Loop  (cost=7.19..16341.29 rows=7 width=13) (actual time=5.235..195.450 rows=8092 loops=1)
               Join Filter: (mi_idx.info_type_id = it.id)
               Rows Removed by Join Filter: 6865
               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.033..0.037 rows=1 loops=1)
                     Filter: ((info)::text = 'rating'::text)
                     Rows Removed by Filter: 112
               ->  Nested Loop  (cost=7.19..16328.55 rows=826 width=17) (actual time=5.199..192.080 rows=14957 loops=1)
                     ->  Nested Loop  (cost=6.76..16101.73 rows=438 width=4) (actual time=5.163..98.600 rows=12951 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=1.765..38.657 rows=30 loops=1)
                                 Filter: ((keyword)::text ~~ '%sequel%'::text)
                                 Rows Removed by Filter: 134140
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1033.58 rows=300 width=8) (actual time=0.150..1.865 rows=432 loops=30)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=6979
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.113..0.113 rows=432 loops=30)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=2 width=13) (actual time=0.006..0.006 rows=1 loops=12951)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((info)::text > '2.0'::text)
                           Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.013..0.013 rows=1 loops=8092)
               Index Cond: (id = mk.movie_id)
               Filter: (production_year > 1990)
               Rows Removed by Filter: 0
 Planning Time: 3.961 ms
 Execution Time: 313.015 ms
(29 rows)

SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=39503.41..39503.42 rows=1 width=32) (actual time=264.088..264.088 rows=1 loops=1)
   ->  Gather  (cost=39503.19..39503.40 rows=2 width=32) (actual time=263.975..265.237 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=38503.19..38503.20 rows=1 width=32) (actual time=257.247..257.247 rows=1 loops=3)
               ->  Hash Join  (cost=5.47..38503.07 rows=48 width=17) (actual time=257.243..257.243 rows=0 loops=3)
                     Hash Cond: (mi.info_type_id = it.id)
                     ->  Nested Loop  (cost=1.93..38499.40 rows=48 width=21) (actual time=257.242..257.242 rows=0 loops=3)
                           ->  Nested Loop  (cost=1.49..38104.61 rows=165 width=25) (actual time=257.242..257.242 rows=0 loops=3)
                                 ->  Hash Join  (cost=1.06..35106.92 rows=407 width=4) (actual time=257.241..257.242 rows=0 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..35097.06 rows=1629 width=8) (actual time=10.297..255.417 rows=8008 loops=3)
                                             Filter: (((note)::text ~~ '%(theatrical)%'::text) AND ((note)::text ~~ '%(France)%'::text))
                                             Rows Removed by Filter: 861701
                                       ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.070..0.070 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.038..0.040 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..7.37 rows=1 width=21) (never executed)
                                       Index Cond: (id = mc.movie_id)
                                       Filter: (production_year > 2005)
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.38 rows=1 width=8) (never executed)
                                 Index Cond: (movie_id = t.id)
                                 Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German}'::text[]))
                     ->  Hash  (cost=2.13..2.13 rows=113 width=4) (never executed)
                           ->  Seq Scan on info_type it  (cost=0.00..2.13 rows=113 width=4) (never executed)
 Planning Time: 5.102 ms
 Execution Time: 265.656 ms
(29 rows)

SET
                                                                               QUERY PLAN                                                                               
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=38870.49..38870.50 rows=1 width=32) (actual time=250.445..250.445 rows=1 loops=1)
   ->  Gather  (cost=38870.28..38870.49 rows=2 width=32) (actual time=250.345..251.723 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=37870.28..37870.29 rows=1 width=32) (actual time=243.874..243.874 rows=1 loops=3)
               ->  Nested Loop  (cost=2.07..37870.28 rows=1 width=17) (actual time=243.871..243.871 rows=0 loops=3)
                     ->  Nested Loop  (cost=1.93..37870.12 rows=1 width=21) (actual time=243.871..243.871 rows=0 loops=3)
                           ->  Nested Loop  (cost=1.49..37866.79 rows=1 width=25) (actual time=243.870..243.870 rows=0 loops=3)
                                 ->  Hash Join  (cost=1.06..37816.09 rows=6 width=4) (actual time=243.870..243.871 rows=0 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..37814.90 rows=25 width=8) (actual time=2.905..243.451 rows=473 loops=3)
                                             Filter: (((note)::text ~~ '%(VHS)%'::text) AND ((note)::text ~~ '%(USA)%'::text) AND ((note)::text ~~ '%(1994)%'::text))
                                             Rows Removed by Filter: 869237
                                       ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.058..0.058 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.036..0.038 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..8.45 rows=1 width=21) (never executed)
                                       Index Cond: (id = mc.movie_id)
                                       Filter: (production_year > 2010)
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..3.31 rows=1 width=8) (never executed)
                                 Index Cond: (movie_id = t.id)
                                 Filter: ((info)::text = ANY ('{USA,America}'::text[]))
                     ->  Index Only Scan using info_type_pkey on info_type it  (cost=0.14..0.16 rows=1 width=4) (never executed)
                           Index Cond: (id = mi.info_type_id)
                           Heap Fetches: 0
 Planning Time: 4.244 ms
 Execution Time: 252.193 ms
(29 rows)

SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=91609.00..91609.01 rows=1 width=32) (actual time=367.179..367.179 rows=1 loops=1)
   ->  Gather  (cost=91608.78..91608.99 rows=2 width=32) (actual time=366.984..371.594 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=90608.78..90608.79 rows=1 width=32) (actual time=360.349..360.349 rows=1 loops=3)
               ->  Hash Join  (cost=5.47..90564.24 rows=17818 width=17) (actual time=213.376..360.098 rows=223 loops=3)
                     Hash Cond: (mi.info_type_id = it.id)
                     ->  Nested Loop  (cost=1.93..90512.17 rows=17818 width=21) (actual time=213.232..359.719 rows=223 loops=3)
                           ->  Nested Loop  (cost=1.49..61913.67 rows=13136 width=25) (actual time=213.058..310.755 rows=256 loops=3)
                                 ->  Hash Join  (cost=1.06..35507.44 rows=18928 width=4) (actual time=212.922..299.701 rows=266 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..35097.06 rows=75712 width=8) (actual time=0.051..289.371 rows=98543 loops=3)
                                             Filter: (((note)::text !~~ '%(TV)%'::text) AND ((note)::text ~~ '%(USA)%'::text))
                                             Rows Removed by Filter: 771167
                                       ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.062..0.063 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.032..0.033 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..1.40 rows=1 width=21) (actual time=0.040..0.040 rows=1 loops=798)
                                       Index Cond: (id = mc.movie_id)
                                       Filter: (production_year > 1990)
                                       Rows Removed by Filter: 0
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.16 rows=2 width=8) (actual time=0.169..0.190 rows=1 loops=767)
                                 Index Cond: (movie_id = t.id)
                                 Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,USA,American}'::text[]))
                                 Rows Removed by Filter: 10
                     ->  Hash  (cost=2.13..2.13 rows=113 width=4) (actual time=0.081..0.081 rows=113 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 12kB
                           ->  Seq Scan on info_type it  (cost=0.00..2.13 rows=113 width=4) (actual time=0.027..0.042 rows=113 loops=3)
 Planning Time: 4.183 ms
 Execution Time: 372.044 ms
(32 rows)

SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3852.63..3852.64 rows=1 width=96) (actual time=88.312..88.312 rows=1 loops=1)
   ->  Nested Loop  (cost=8.18..3852.62 rows=1 width=48) (actual time=11.627..88.278 rows=6 loops=1)
         ->  Nested Loop  (cost=7.75..3762.97 rows=196 width=37) (actual time=0.959..50.744 rows=1224 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.19..3753.04 rows=5 width=41) (actual time=0.892..31.966 rows=11 loops=1)
                     ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=20) (actual time=0.817..31.297 rows=14 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=20) (actual time=0.732..30.921 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'marvel-cinematic-universe'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=0.077..0.358 rows=14 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=12
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.043..0.044 rows=14 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.046..0.046 rows=1 loops=14)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2010)
                           Rows Removed by Filter: 0
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.045..1.623 rows=111 loops=11)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.030..0.030 rows=0 loops=1224)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ '%Downey%Robert%'::text)
               Rows Removed by Filter: 1
 Planning Time: 4.696 ms
 Execution Time: 88.714 ms
(26 rows)

SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=12284.35..12284.36 rows=1 width=96) (actual time=930.399..930.399 rows=1 loops=1)
   ->  Nested Loop  (cost=8.18..12284.35 rows=1 width=48) (actual time=82.792..930.338 rows=12 loops=1)
         ->  Nested Loop  (cost=7.75..12283.89 rows=1 width=37) (actual time=24.666..923.965 rows=383 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.19..12281.90 rows=1 width=41) (actual time=24.647..920.093 rows=36 loops=1)
                     ->  Nested Loop  (cost=6.76..12150.15 rows=270 width=20) (actual time=1.096..429.303 rows=35548 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..3632.40 rows=8 width=20) (actual time=0.143..50.031 rows=8 loops=1)
                                 Filter: ((keyword)::text = ANY ('{superhero,sequel,second-part,marvel-comics,based-on-comic,tv-special,fight,violence}'::text[]))
                                 Rows Removed by Filter: 134162
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1061.72 rows=300 width=8) (actual time=1.788..45.051 rows=4444 loops=8)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=23488
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=1.368..1.368 rows=4444 loops=8)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.013..0.013 rows=0 loops=35548)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2014)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.030..0.101 rows=11 loops=36)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.016..0.016 rows=0 loops=383)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ '%Downey%Robert%'::text)
               Rows Removed by Filter: 1
 Planning Time: 4.378 ms
 Execution Time: 930.798 ms
(26 rows)

SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3755.49..3755.50 rows=1 width=96) (actual time=21.313..21.314 rows=1 loops=1)
   ->  Nested Loop  (cost=8.18..3755.48 rows=1 width=48) (actual time=1.872..21.303 rows=2 loops=1)
         ->  Nested Loop  (cost=7.75..3755.03 rows=1 width=37) (actual time=0.977..20.744 rows=33 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.19..3753.04 rows=1 width=41) (actual time=0.914..20.412 rows=2 loops=1)
                     ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=20) (actual time=0.820..19.827 rows=14 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=20) (actual time=0.758..19.581 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'marvel-cinematic-universe'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=0.054..0.228 rows=14 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=12
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.045..0.045 rows=14 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.041..0.041 rows=0 loops=14)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2014)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.056..0.154 rows=16 loops=2)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.016..0.016 rows=0 loops=33)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ '%Downey%Robert%'::text)
               Rows Removed by Filter: 1
 Planning Time: 5.440 ms
 Execution Time: 21.783 ms
(26 rows)

SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=15065.52..15065.53 rows=1 width=96) (actual time=24086.760..24086.760 rows=1 loops=1)
   ->  Nested Loop  (cost=8.18..15065.51 rows=1 width=48) (actual time=570.889..24086.162 rows=88 loops=1)
         ->  Nested Loop  (cost=7.75..12575.89 rows=5443 width=37) (actual time=1.144..9747.860 rows=785477 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.19..12281.90 rows=148 width=41) (actual time=1.098..1138.222 rows=14165 loops=1)
                     ->  Nested Loop  (cost=6.76..12150.15 rows=270 width=20) (actual time=1.055..492.950 rows=35548 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..3632.40 rows=8 width=20) (actual time=0.160..50.561 rows=8 loops=1)
                                 Filter: ((keyword)::text = ANY ('{superhero,sequel,second-part,marvel-comics,based-on-comic,tv-special,fight,violence}'::text[]))
                                 Rows Removed by Filter: 134162
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1061.72 rows=300 width=8) (actual time=1.751..52.748 rows=4444 loops=8)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=23488
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=1.332..1.332 rows=4444 loops=8)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.017..0.017 rows=0 loops=35548)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2000)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.023..0.567 rows=55 loops=14165)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.017..0.017 rows=0 loops=785477)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ '%Downey%Robert%'::text)
               Rows Removed by Filter: 1
 Planning Time: 4.396 ms
 Execution Time: 24087.152 ms
(26 rows)

SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4102.27..4102.28 rows=1 width=96) (actual time=53.658..53.658 rows=1 loops=1)
   ->  Nested Loop  (cost=8.18..4102.27 rows=1 width=48) (actual time=10.167..53.631 rows=6 loops=1)
         ->  Nested Loop  (cost=7.75..3790.78 rows=681 width=37) (actual time=0.959..30.040 rows=1224 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.19..3753.04 rows=19 width=41) (actual time=0.883..18.771 rows=11 loops=1)
                     ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=20) (actual time=0.820..18.269 rows=14 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=20) (actual time=0.749..17.979 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'marvel-cinematic-universe'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=0.063..0.273 rows=14 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=12
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.041..0.041 rows=14 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.034..0.034 rows=1 loops=14)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2000)
                           Rows Removed by Filter: 0
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.038..0.955 rows=111 loops=11)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.018..0.018 rows=0 loops=1224)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ '%Downey%Robert%'::text)
               Rows Removed by Filter: 1
 Planning Time: 5.507 ms
 Execution Time: 54.133 ms
(26 rows)

SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=15092.73..15092.74 rows=1 width=96) (actual time=24373.044..24373.044 rows=1 loops=1)
   ->  Nested Loop  (cost=8.18..15051.90 rows=5443 width=48) (actual time=1.204..23528.117 rows=785477 loops=1)
         ->  Nested Loop  (cost=7.75..12575.89 rows=5443 width=37) (actual time=1.135..9896.257 rows=785477 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.19..12281.90 rows=148 width=41) (actual time=1.087..1135.321 rows=14165 loops=1)
                     ->  Nested Loop  (cost=6.76..12150.15 rows=270 width=20) (actual time=1.043..492.974 rows=35548 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..3632.40 rows=8 width=20) (actual time=0.158..51.661 rows=8 loops=1)
                                 Filter: ((keyword)::text = ANY ('{superhero,sequel,second-part,marvel-comics,based-on-comic,tv-special,fight,violence}'::text[]))
                                 Rows Removed by Filter: 134162
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1061.72 rows=300 width=8) (actual time=1.761..52.706 rows=4444 loops=8)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=23488
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=1.342..1.342 rows=4444 loops=8)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.017..0.017 rows=0 loops=35548)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2000)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.023..0.579 rows=55 loops=14165)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=19) (actual time=0.016..0.016 rows=1 loops=785477)
               Index Cond: (id = ci.person_id)
 Planning Time: 4.595 ms
 Execution Time: 24373.423 ms
(24 rows)

SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=13380.61..13380.62 rows=1 width=64) (actual time=3144.765..3144.766 rows=1 loops=1)
   ->  Nested Loop  (cost=41.24..13380.61 rows=1 width=32) (actual time=146.787..3144.692 rows=32 loops=1)
         ->  Nested Loop  (cost=41.10..13379.60 rows=1 width=36) (actual time=146.722..3144.469 rows=32 loops=1)
               Join Filter: (n.id = an.person_id)
               ->  Nested Loop  (cost=40.67..13379.10 rows=1 width=48) (actual time=146.651..3143.882 rows=14 loops=1)
                     Join Filter: (n.id = pi.person_id)
                     ->  Nested Loop  (cost=40.24..12435.27 rows=974 width=40) (actual time=0.788..2788.471 rows=17559 loops=1)
                           ->  Nested Loop  (cost=39.81..8528.28 rows=8359 width=21) (actual time=0.730..1070.559 rows=105262 loops=1)
                                 ->  Nested Loop  (cost=39.25..7243.89 rows=226 width=25) (actual time=0.656..119.585 rows=1467 loops=1)
                                       ->  Nested Loop  (cost=38.82..245.23 rows=1666 width=4) (actual time=0.572..6.918 rows=5186 loops=1)
                                             ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=4) (actual time=0.032..0.037 rows=1 loops=1)
                                                   Filter: ((link)::text = 'features'::text)
                                                   Rows Removed by Filter: 17
                                             ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..225.26 rows=1875 width=8) (actual time=0.533..4.754 rows=5186 loops=1)
                                                   Recheck Cond: (link_type_id = lt.id)
                                                   Heap Blocks: exact=132
                                                   ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.488..0.488 rows=5186 loops=1)
                                                         Index Cond: (link_type_id = lt.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..4.20 rows=1 width=21) (actual time=0.021..0.021 rows=0 loops=5186)
                                             Index Cond: (id = ml.linked_movie_id)
                                             Filter: ((production_year >= 1980) AND (production_year <= 1995))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..5.31 rows=37 width=8) (actual time=0.028..0.614 rows=72 loops=1467)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Scan using name_pkey on name n  (cost=0.43..0.47 rows=1 width=19) (actual time=0.015..0.015 rows=0 loops=105262)
                                 Index Cond: (id = ci.person_id)
                                 Filter: (((name_pcode_cf)::text >= 'A'::text) AND ((name_pcode_cf)::text <= 'F'::text) AND (((gender)::text = 'm'::text) OR (((gender)::text = 'f'::text) AND ((name)::text ~~ 'B%'::text))))
                                 Rows Removed by Filter: 1
                     ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..0.96 rows=1 width=8) (actual time=0.019..0.019 rows=0 loops=17559)
                           Index Cond: (person_id = ci.person_id)
                           Filter: ((note)::text = 'Volker Boehm'::text)
                           Rows Removed by Filter: 20
               ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.47 rows=2 width=4) (actual time=0.031..0.039 rows=2 loops=14)
                     Index Cond: (person_id = ci.person_id)
                     Filter: ((name)::text ~~ '%a%'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using info_type_pkey on info_type it  (cost=0.14..0.58 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=32)
               Index Cond: (id = pi.info_type_id)
               Filter: ((info)::text = 'mini biography'::text)
 Planning Time: 14.956 ms
 Execution Time: 3145.407 ms
(41 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=9090.16..9090.17 rows=1 width=64) (actual time=797.168..797.168 rows=1 loops=1)
   ->  Nested Loop  (cost=41.24..9090.16 rows=1 width=32) (actual time=30.743..797.116 rows=16 loops=1)
         ->  Nested Loop  (cost=41.10..9089.15 rows=1 width=36) (actual time=30.696..797.001 rows=16 loops=1)
               Join Filter: (n.id = an.person_id)
               ->  Nested Loop  (cost=40.67..9088.65 rows=1 width=48) (actual time=30.649..796.814 rows=8 loops=1)
                     Join Filter: (n.id = pi.person_id)
                     ->  Nested Loop  (cost=40.24..9045.05 rows=45 width=40) (actual time=1.250..778.732 rows=1076 loops=1)
                           ->  Nested Loop  (cost=39.81..8143.65 rows=1960 width=21) (actual time=0.740..339.421 rows=33415 loops=1)
                                 ->  Nested Loop  (cost=39.25..7243.89 rows=53 width=25) (actual time=0.651..104.528 rows=435 loops=1)
                                       ->  Nested Loop  (cost=38.82..245.23 rows=1666 width=4) (actual time=0.580..6.320 rows=5186 loops=1)
                                             ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=4) (actual time=0.025..0.031 rows=1 loops=1)
                                                   Filter: ((link)::text = 'features'::text)
                                                   Rows Removed by Filter: 17
                                             ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..225.26 rows=1875 width=8) (actual time=0.548..4.406 rows=5186 loops=1)
                                                   Recheck Cond: (link_type_id = lt.id)
                                                   Heap Blocks: exact=132
                                                   ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.501..0.501 rows=5186 loops=1)
                                                         Index Cond: (link_type_id = lt.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..4.20 rows=1 width=21) (actual time=0.018..0.018 rows=0 loops=5186)
                                             Index Cond: (id = ml.linked_movie_id)
                                             Filter: ((production_year >= 1980) AND (production_year <= 1984))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..16.61 rows=37 width=8) (actual time=0.026..0.509 rows=77 loops=435)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.012..0.012 rows=0 loops=33415)
                                 Index Cond: (id = ci.person_id)
                                 Filter: (((name_pcode_cf)::text ~~ 'D%'::text) AND ((gender)::text = 'm'::text))
                                 Rows Removed by Filter: 1
                     ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..0.96 rows=1 width=8) (actual time=0.016..0.016 rows=0 loops=1076)
                           Index Cond: (person_id = ci.person_id)
                           Filter: ((note)::text = 'Volker Boehm'::text)
                           Rows Removed by Filter: 16
               ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.47 rows=2 width=4) (actual time=0.017..0.021 rows=2 loops=8)
                     Index Cond: (person_id = ci.person_id)
                     Filter: ((name)::text ~~ '%a%'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using info_type_pkey on info_type it  (cost=0.14..0.58 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=16)
               Index Cond: (id = pi.info_type_id)
               Filter: ((info)::text = 'mini biography'::text)
 Planning Time: 14.819 ms
 Execution Time: 797.822 ms
(41 rows)

SET
                                                                                                             QUERY PLAN                                                                                                              
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=57980.82..57980.83 rows=1 width=64) (actual time=6468.747..6468.748 rows=1 loops=1)
   ->  Nested Loop  (cost=2495.17..57980.79 rows=6 width=109) (actual time=27.553..6074.112 rows=68185 loops=1)
         ->  Hash Join  (cost=2494.74..57976.67 rows=9 width=117) (actual time=27.479..5609.087 rows=109842 loops=1)
               Hash Cond: (ml.link_type_id = lt.id)
               ->  Nested Loop  (cost=2493.42..57975.22 rows=42 width=121) (actual time=27.359..5563.557 rows=127027 loops=1)
                     ->  Nested Loop  (cost=2493.13..57509.04 rows=1361 width=113) (actual time=27.279..3037.066 rows=1618304 loops=1)
                           ->  Nested Loop  (cost=2492.57..57244.88 rows=15 width=121) (actual time=27.214..2062.114 rows=12595 loops=1)
                                 ->  Nested Loop  (cost=2492.14..56116.79 rows=1360 width=102) (actual time=26.942..1365.907 rows=72979 loops=1)
                                       ->  Nested Loop  (cost=2491.71..55265.79 rows=735 width=98) (actual time=26.800..771.406 rows=84183 loops=1)
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.038..0.053 rows=1 loops=1)
                                                   Filter: ((info)::text = 'mini biography'::text)
                                                   Rows Removed by Filter: 112
                                             ->  Bitmap Heap Scan on person_info pi  (cost=2491.71..55225.61 rows=3776 width=102) (actual time=26.754..749.028 rows=84183 loops=1)
                                                   Recheck Cond: (info_type_id = it.id)
                                                   Filter: (note IS NOT NULL)
                                                   Rows Removed by Filter: 1
                                                   Heap Blocks: exact=40537
                                                   ->  Bitmap Index Scan on info_type_id_person_info  (cost=0.00..2490.77 rows=134712 width=0) (actual time=19.555..19.555 rows=84184 loops=1)
                                                         Index Cond: (info_type_id = it.id)
                                       ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..1.14 rows=2 width=4) (actual time=0.005..0.006 rows=1 loops=84183)
                                             Index Cond: (person_id = pi.person_id)
                                             Filter: ((name IS NOT NULL) AND (((name)::text ~~ '%a%'::text) OR ((name)::text ~~ 'A%'::text)))
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using name_pkey on name n  (cost=0.43..0.83 rows=1 width=19) (actual time=0.009..0.009 rows=0 loops=72979)
                                       Index Cond: (id = an.person_id)
                                       Filter: (((name_pcode_cf)::text >= 'A'::text) AND ((name_pcode_cf)::text <= 'F'::text) AND (((gender)::text = 'm'::text) OR (((gender)::text = 'f'::text) AND ((name)::text ~~ 'A%'::text))))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using person_id_cast_info on cast_info ci  (cost=0.56..12.48 rows=513 width=8) (actual time=0.014..0.055 rows=128 loops=12595)
                                 Index Cond: (person_id = n.id)
                     ->  Index Scan using linked_movie_id_movie_link on movie_link ml  (cost=0.29..0.32 rows=2 width=8) (actual time=0.001..0.001 rows=0 loops=1618304)
                           Index Cond: (linked_movie_id = ci.movie_id)
               ->  Hash  (cost=1.27..1.27 rows=4 width=4) (actual time=0.044..0.045 rows=4 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                     ->  Seq Scan on link_type lt  (cost=0.00..1.27 rows=4 width=4) (actual time=0.025..0.029 rows=4 loops=1)
                           Filter: ((link)::text = ANY ('{references,"referenced in",features,"featured in"}'::text[]))
                           Rows Removed by Filter: 14
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.46 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=109842)
               Index Cond: (id = ci.movie_id)
               Filter: ((production_year >= 1980) AND (production_year <= 2010))
               Rows Removed by Filter: 0
 Planning Time: 15.178 ms
 Execution Time: 6469.649 ms
(42 rows)

SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=42573.42..42573.43 rows=1 width=64) (actual time=4549.920..4549.920 rows=1 loops=1)
   ->  Gather  (cost=5776.21..42573.41 rows=1 width=33) (actual time=309.363..4556.101 rows=62 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Nested Loop  (cost=4776.21..41573.31 rows=1 width=33) (actual time=796.921..4542.291 rows=21 loops=3)
               ->  Nested Loop  (cost=4775.78..41569.56 rows=5 width=41) (actual time=36.297..4508.434 rows=5793 loops=3)
                     ->  Hash Join  (cost=4775.35..41567.47 rows=2 width=21) (actual time=36.200..4475.292 rows=2479 loops=3)
                           Hash Cond: (ci.role_id = rt.id)
                           ->  Nested Loop  (cost=4774.19..41566.22 rows=25 width=25) (actual time=35.917..4472.356 rows=6533 loops=3)
                                 ->  Nested Loop  (cost=4773.62..41105.65 rows=246 width=25) (actual time=35.360..559.620 rows=16109 loops=3)
                                       ->  Parallel Hash Join  (cost=4773.19..39892.48 rows=246 width=4) (actual time=35.247..311.755 rows=16109 loops=3)
                                             Hash Cond: (mc.company_id = cn.id)
                                             ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..35097.06 rows=8470 width=8) (actual time=0.132..259.429 rows=16299 loops=3)
                                                   Filter: (((note)::text ~~ '%(Japan)%'::text) AND ((note)::text !~~ '%(USA)%'::text))
                                                   Rows Removed by Filter: 853411
                                             ->  Parallel Hash  (cost=4722.92..4722.92 rows=4022 width=4) (actual time=34.616..34.616 rows=2251 loops=3)
                                                   Buckets: 8192  Batches: 1  Memory Usage: 384kB
                                                   ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=4022 width=4) (actual time=0.043..32.775 rows=2251 loops=3)
                                                         Filter: ((country_code)::text = '[jp]'::text)
                                                         Rows Removed by Filter: 76082
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..4.93 rows=1 width=21) (actual time=0.014..0.014 rows=1 loops=48328)
                                             Index Cond: (id = mc.movie_id)
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.86 rows=1 width=12) (actual time=0.233..0.242 rows=0 loops=48328)
                                       Index Cond: (movie_id = t.id)
                                       Filter: ((note)::text = '(voice: English version)'::text)
                                       Rows Removed by Filter: 32
                           ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.071..0.071 rows=1 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                 ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.047..0.049 rows=1 loops=3)
                                       Filter: ((role)::text = 'actress'::text)
                                       Rows Removed by Filter: 11
                     ->  Index Scan using person_id_aka_name on aka_name an1  (cost=0.42..1.03 rows=2 width=20) (actual time=0.011..0.012 rows=2 loops=7438)
                           Index Cond: (person_id = ci.person_id)
               ->  Index Scan using name_pkey on name n1  (cost=0.43..0.75 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=17379)
                     Index Cond: (id = an1.person_id)
                     Filter: (((name)::text ~~ '%Yo%'::text) AND ((name)::text !~~ '%Yu%'::text))
                     Rows Removed by Filter: 1
 Planning Time: 10.285 ms
 Execution Time: 4556.772 ms
(39 rows)

SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=43935.52..43935.53 rows=1 width=64) (actual time=347.473..347.474 rows=1 loops=1)
   ->  Nested Loop  (cost=1002.40..43935.52 rows=1 width=33) (actual time=146.778..347.421 rows=6 loops=1)
         ->  Nested Loop  (cost=1002.27..43935.34 rows=1 width=37) (actual time=146.695..347.324 rows=6 loops=1)
               ->  Nested Loop  (cost=1001.84..43934.59 rows=1 width=45) (actual time=145.056..345.445 rows=171 loops=1)
                     ->  Nested Loop  (cost=1001.42..43933.55 rows=1 width=25) (actual time=144.991..343.320 rows=104 loops=1)
                           Join Filter: (t.id = ci.movie_id)
                           ->  Gather  (cost=1000.85..43788.54 rows=1 width=25) (actual time=144.860..342.058 rows=4 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Nested Loop  (cost=0.85..42788.44 rows=1 width=25) (actual time=223.648..336.613 rows=1 loops=3)
                                       ->  Nested Loop  (cost=0.42..42706.13 rows=10 width=4) (actual time=0.180..272.809 rows=2832 loops=3)
                                             ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..40532.74 rows=338 width=8) (actual time=0.097..248.972 rows=2856 loops=3)
                                                   Filter: (((note)::text ~~ '%(Japan)%'::text) AND ((note)::text !~~ '%(USA)%'::text) AND (((note)::text ~~ '%(2006)%'::text) OR ((note)::text ~~ '%(2007)%'::text)))
                                                   Rows Removed by Filter: 866853
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..6.43 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=8569)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((country_code)::text = '[jp]'::text)
                                                   Rows Removed by Filter: 0
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..8.20 rows=1 width=21) (actual time=0.022..0.022 rows=0 loops=8495)
                                             Index Cond: (id = mc.movie_id)
                                             Filter: ((production_year >= 2006) AND (production_year <= 2007) AND (((title)::text ~~ 'One Piece%'::text) OR ((title)::text ~~ 'Dragon Ball Z%'::text)))
                                             Rows Removed by Filter: 1
                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..145.00 rows=1 width=12) (actual time=0.158..0.492 rows=26 loops=4)
                                 Index Cond: (movie_id = mc.movie_id)
                                 Filter: ((note)::text = '(voice: English version)'::text)
                                 Rows Removed by Filter: 17
                     ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..1.03 rows=2 width=20) (actual time=0.016..0.019 rows=2 loops=104)
                           Index Cond: (person_id = ci.person_id)
               ->  Index Scan using name_pkey on name n  (cost=0.43..0.75 rows=1 width=4) (actual time=0.010..0.010 rows=0 loops=171)
                     Index Cond: (id = an.person_id)
                     Filter: (((name)::text ~~ '%Yo%'::text) AND ((name)::text !~~ '%Yu%'::text))
                     Rows Removed by Filter: 1
         ->  Index Scan using role_type_pkey on role_type rt  (cost=0.14..0.16 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=6)
               Index Cond: (id = ci.role_id)
               Filter: ((role)::text = 'actress'::text)
 Planning Time: 10.359 ms
 Execution Time: 348.779 ms
(37 rows)

SET
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=507448.30..507448.31 rows=1 width=64) (actual time=7302.481..7302.482 rows=1 loops=1)
   ->  Gather  (cost=507448.08..507448.29 rows=2 width=64) (actual time=7298.872..7417.049 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=506448.08..506448.09 rows=1 width=64) (actual time=7291.801..7291.802 rows=1 loops=3)
               ->  Parallel Hash Join  (cost=369446.57..492488.07 rows=2792002 width=33) (actual time=6769.584..7056.368 rows=829204 loops=3)
                     Hash Cond: (ci.person_id = a1.person_id)
                     ->  Hash Join  (cost=243680.90..334088.98 rows=1215217 width=21) (actual time=4593.382..5044.486 rows=656886 loops=3)
                           Hash Cond: (t.id = ci.movie_id)
                           ->  Parallel Hash Join  (cost=44347.81..110366.87 rows=395029 width=25) (actual time=1108.604..1385.359 rows=384599 loops=3)
                                 Hash Cond: (t.id = mc.movie_id)
                                 ->  Parallel Seq Scan on title t  (cost=0.00..46532.63 rows=1053463 width=21) (actual time=0.059..259.770 rows=842771 loops=3)
                                 ->  Parallel Hash  (cost=37865.94..37865.94 rows=395029 width=4) (actual time=537.169..537.169 rows=384599 loops=3)
                                       Buckets: 131072  Batches: 16  Memory Usage: 3904kB
                                       ->  Parallel Hash Join  (cost=5350.78..37865.94 rows=395029 width=4) (actual time=47.174..413.635 rows=384599 loops=3)
                                             Hash Cond: (mc.company_id = cn.id)
                                             ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=8) (actual time=0.039..168.148 rows=869710 loops=3)
                                             ->  Parallel Hash  (cost=4722.92..4722.92 rows=50229 width=4) (actual time=46.200..46.201 rows=28281 loops=3)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 4384kB
                                                   ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=50229 width=4) (actual time=0.051..32.100 rows=28281 loops=3)
                                                         Filter: ((country_code)::text = '[us]'::text)
                                                         Rows Removed by Filter: 50051
                           ->  Hash  (cost=149779.57..149779.57 rows=3020362 width=8) (actual time=3195.129..3195.130 rows=2728943 loops=3)
                                 Buckets: 131072  Batches: 64  Memory Usage: 2675kB
                                 ->  Nested Loop  (cost=0.56..149779.57 rows=3020362 width=8) (actual time=0.086..2365.703 rows=2728943 loops=3)
                                       ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.027..0.034 rows=1 loops=3)
                                             Filter: ((role)::text = 'writer'::text)
                                             Rows Removed by Filter: 11
                                       ->  Index Scan using role_id_cast_info on cast_info ci  (cost=0.56..116829.02 rows=3294940 width=12) (actual time=0.048..1951.009 rows=2728943 loops=3)
                                             Index Cond: (role_id = rt.id)
                     ->  Parallel Hash  (cost=118870.18..118870.18 rows=375560 width=24) (actual time=1462.951..1462.951 rows=300448 loops=3)
                           Buckets: 65536  Batches: 16  Memory Usage: 3872kB
                           ->  Parallel Hash Join  (cost=22047.10..118870.18 rows=375560 width=24) (actual time=998.870..1345.844 rows=300448 loops=3)
                                 Hash Cond: (n1.id = a1.person_id)
                                 ->  Parallel Seq Scan on name n1  (cost=0.00..72977.55 rows=1736455 width=4) (actual time=0.053..397.149 rows=1389164 loops=3)
                                 ->  Parallel Hash  (cost=15151.60..15151.60 rows=375560 width=20) (actual time=207.533..207.533 rows=300448 loops=3)
                                       Buckets: 65536  Batches: 16  Memory Usage: 3680kB
                                       ->  Parallel Seq Scan on aka_name a1  (cost=0.00..15151.60 rows=375560 width=20) (actual time=0.039..94.416 rows=300448 loops=3)
 Planning Time: 8.954 ms
 Execution Time: 7417.690 ms
(40 rows)

SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=507448.30..507448.31 rows=1 width=64) (actual time=3551.283..3551.284 rows=1 loops=1)
   ->  Gather  (cost=507448.08..507448.29 rows=2 width=64) (actual time=3547.574..3653.768 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=506448.08..506448.09 rows=1 width=64) (actual time=3540.475..3540.475 rows=1 loops=3)
               ->  Parallel Hash Join  (cost=369446.57..492488.07 rows=2792002 width=33) (actual time=3438.135..3509.757 rows=107668 loops=3)
                     Hash Cond: (ci.person_id = an1.person_id)
                     ->  Hash Join  (cost=243680.90..334088.98 rows=1215217 width=21) (actual time=1647.126..1907.701 rows=95179 loops=3)
                           Hash Cond: (t.id = ci.movie_id)
                           ->  Parallel Hash Join  (cost=44347.81..110366.87 rows=395029 width=25) (actual time=1142.285..1433.653 rows=384599 loops=3)
                                 Hash Cond: (t.id = mc.movie_id)
                                 ->  Parallel Seq Scan on title t  (cost=0.00..46532.63 rows=1053463 width=21) (actual time=0.059..266.973 rows=842771 loops=3)
                                 ->  Parallel Hash  (cost=37865.94..37865.94 rows=395029 width=4) (actual time=542.442..542.442 rows=384599 loops=3)
                                       Buckets: 131072  Batches: 16  Memory Usage: 3872kB
                                       ->  Parallel Hash Join  (cost=5350.78..37865.94 rows=395029 width=4) (actual time=48.990..418.348 rows=384599 loops=3)
                                             Hash Cond: (mc.company_id = cn.id)
                                             ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=8) (actual time=0.037..167.947 rows=869710 loops=3)
                                             ->  Parallel Hash  (cost=4722.92..4722.92 rows=50229 width=4) (actual time=48.606..48.606 rows=28281 loops=3)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 4384kB
                                                   ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=50229 width=4) (actual time=0.085..35.564 rows=28281 loops=3)
                                                         Filter: ((country_code)::text = '[us]'::text)
                                                         Rows Removed by Filter: 50051
                           ->  Hash  (cost=149779.57..149779.57 rows=3020362 width=8) (actual time=213.487..213.487 rows=276403 loops=3)
                                 Buckets: 131072  Batches: 64  Memory Usage: 1193kB
                                 ->  Nested Loop  (cost=0.56..149779.57 rows=3020362 width=8) (actual time=0.166..131.332 rows=276403 loops=3)
                                       ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.049..0.056 rows=1 loops=3)
                                             Filter: ((role)::text = 'costume designer'::text)
                                             Rows Removed by Filter: 11
                                       ->  Index Scan using role_id_cast_info on cast_info ci  (cost=0.56..116829.02 rows=3294940 width=12) (actual time=0.108..90.208 rows=276403 loops=3)
                                             Index Cond: (role_id = rt.id)
                     ->  Parallel Hash  (cost=118870.18..118870.18 rows=375560 width=24) (actual time=1481.560..1481.560 rows=300448 loops=3)
                           Buckets: 65536  Batches: 16  Memory Usage: 3872kB
                           ->  Parallel Hash Join  (cost=22047.10..118870.18 rows=375560 width=24) (actual time=1004.140..1363.623 rows=300448 loops=3)
                                 Hash Cond: (n1.id = an1.person_id)
                                 ->  Parallel Seq Scan on name n1  (cost=0.00..72977.55 rows=1736455 width=4) (actual time=0.057..401.773 rows=1389164 loops=3)
                                 ->  Parallel Hash  (cost=15151.60..15151.60 rows=375560 width=20) (actual time=207.976..207.976 rows=300448 loops=3)
                                       Buckets: 65536  Batches: 16  Memory Usage: 3712kB
                                       ->  Parallel Seq Scan on aka_name an1  (cost=0.00..15151.60 rows=375560 width=20) (actual time=0.041..94.756 rows=300448 loops=3)
 Planning Time: 10.362 ms
 Execution Time: 3654.568 ms
(40 rows)

SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=83284.29..83284.30 rows=1 width=96) (actual time=585.335..585.336 rows=1 loops=1)
   ->  Nested Loop  (cost=1003.86..83284.28 rows=1 width=49) (actual time=236.760..585.201 rows=121 loops=1)
         ->  Nested Loop  (cost=1003.44..83283.79 rows=1 width=53) (actual time=236.694..583.579 rows=123 loops=1)
               Join Filter: (ci.movie_id = mc.movie_id)
               ->  Gather  (cost=1003.01..83283.14 rows=1 width=57) (actual time=232.885..583.236 rows=139 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Nested Loop  (cost=3.01..82283.04 rows=1 width=57) (actual time=229.177..576.262 rows=46 loops=3)
                           ->  Nested Loop  (cost=2.58..82282.39 rows=1 width=45) (actual time=226.428..575.257 rows=52 loops=3)
                                 ->  Hash Join  (cost=2.15..82281.10 rows=2 width=24) (actual time=224.946..571.798 rows=142 loops=3)
                                       Hash Cond: (ci.role_id = rt.id)
                                       ->  Nested Loop  (cost=0.99..82279.86 rows=19 width=28) (actual time=224.705..571.464 rows=142 loops=3)
                                             Join Filter: (n.id = ci.person_id)
                                             ->  Nested Loop  (cost=0.42..82155.48 rows=9 width=24) (actual time=218.913..547.674 rows=519 loops=3)
                                                   ->  Parallel Seq Scan on name n  (cost=0.00..81659.82 rows=40 width=4) (actual time=217.574..519.056 rows=2256 loops=3)
                                                         Filter: (((name)::text ~~ '%Ang%'::text) AND ((gender)::text = 'f'::text))
                                                         Rows Removed by Filter: 1386908
                                                   ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..12.37 rows=2 width=20) (actual time=0.011..0.012 rows=0 loops=6768)
                                                         Index Cond: (person_id = n.id)
                                             ->  Index Scan using person_id_cast_info on cast_info ci  (cost=0.56..13.67 rows=12 width=16) (actual time=0.042..0.045 rows=0 loops=1558)
                                                   Index Cond: (person_id = an.person_id)
                                                   Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                   Rows Removed by Filter: 44
                                       ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.084..0.084 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.054..0.057 rows=1 loops=3)
                                                   Filter: ((role)::text = 'actress'::text)
                                                   Rows Removed by Filter: 11
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.65 rows=1 width=21) (actual time=0.024..0.024 rows=0 loops=425)
                                       Index Cond: (id = ci.movie_id)
                                       Filter: ((production_year >= 2005) AND (production_year <= 2015))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.65 rows=1 width=20) (actual time=0.018..0.018 rows=1 loops=155)
                                 Index Cond: (id = ci.person_role_id)
               ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.64 rows=1 width=8) (actual time=0.020..0.025 rows=1 loops=139)
                     Index Cond: (movie_id = t.id)
                     Filter: ((note IS NOT NULL) AND (((note)::text ~~ '%(USA)%'::text) OR ((note)::text ~~ '%(worldwide)%'::text)))
                     Rows Removed by Filter: 5
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.49 rows=1 width=4) (actual time=0.012..0.012 rows=1 loops=123)
               Index Cond: (id = mc.company_id)
               Filter: ((country_code)::text = '[us]'::text)
               Rows Removed by Filter: 0
 Planning Time: 16.269 ms
 Execution Time: 589.243 ms
(44 rows)

SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=83272.11..83272.12 rows=1 width=128) (actual time=534.500..534.501 rows=1 loops=1)
   ->  Nested Loop  (cost=1003.86..83272.10 rows=1 width=64) (actual time=227.370..534.428 rows=40 loops=1)
         ->  Nested Loop  (cost=1003.43..83271.40 rows=1 width=55) (actual time=220.439..533.590 rows=94 loops=1)
               ->  Nested Loop  (cost=1003.01..83270.82 rows=1 width=59) (actual time=220.362..532.667 rows=94 loops=1)
                     ->  Gather  (cost=1002.58..83270.12 rows=1 width=47) (actual time=220.316..534.646 rows=103 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop  (cost=2.58..82270.02 rows=1 width=47) (actual time=240.406..526.545 rows=34 loops=3)
                                 ->  Hash Join  (cost=2.15..82269.31 rows=1 width=39) (actual time=214.604..524.513 rows=88 loops=3)
                                       Hash Cond: (ci.role_id = rt.id)
                                       ->  Nested Loop  (cost=0.99..82268.09 rows=15 width=43) (actual time=214.369..524.227 rows=88 loops=3)
                                             Join Filter: (n.id = ci.person_id)
                                             ->  Nested Loop  (cost=0.42..82155.48 rows=9 width=39) (actual time=209.834..513.875 rows=432 loops=3)
                                                   ->  Parallel Seq Scan on name n  (cost=0.00..81659.82 rows=40 width=19) (actual time=208.545..497.441 rows=1803 loops=3)
                                                         Filter: (((name)::text ~~ '%Angel%'::text) AND ((gender)::text = 'f'::text))
                                                         Rows Removed by Filter: 1387361
                                                   ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..12.37 rows=2 width=20) (actual time=0.008..0.008 rows=0 loops=5409)
                                                         Index Cond: (person_id = n.id)
                                             ->  Index Scan using person_id_cast_info on cast_info ci  (cost=0.56..12.39 rows=10 width=16) (actual time=0.022..0.023 rows=0 loops=1296)
                                                   Index Cond: (person_id = an.person_id)
                                                   Filter: ((note)::text = '(voice)'::text)
                                                   Rows Removed by Filter: 43
                                       ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.069..0.069 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.045..0.047 rows=1 loops=3)
                                                   Filter: ((role)::text = 'actress'::text)
                                                   Rows Removed by Filter: 11
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.70 rows=1 width=8) (actual time=0.019..0.022 rows=0 loops=265)
                                       Index Cond: (movie_id = ci.movie_id)
                                       Filter: (((note)::text ~~ '%(200%)%'::text) AND (((note)::text ~~ '%(USA)%'::text) OR ((note)::text ~~ '%(worldwide)%'::text)))
                                       Rows Removed by Filter: 4
                     ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.70 rows=1 width=20) (actual time=0.010..0.010 rows=1 loops=103)
                           Index Cond: (id = ci.person_role_id)
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.59 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=94)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text = '[us]'::text)
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.69 rows=1 width=21) (actual time=0.008..0.008 rows=0 loops=94)
               Index Cond: (id = ci.movie_id)
               Filter: ((production_year >= 2007) AND (production_year <= 2010))
               Rows Removed by Filter: 1
 Planning Time: 14.502 ms
 Execution Time: 538.302 ms
(42 rows)

SET
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=160431.48..160431.49 rows=1 width=128) (actual time=961.063..961.063 rows=1 loops=1)
   ->  Gather  (cost=160431.25..160431.46 rows=2 width=128) (actual time=960.124..967.196 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=159431.25..159431.26 rows=1 width=128) (actual time=952.830..952.831 rows=1 loops=3)
               ->  Nested Loop  (cost=81913.67..159427.47 rows=378 width=64) (actual time=541.888..950.482 rows=2715 loops=3)
                     Join Filter: (ci.movie_id = t.id)
                     ->  Nested Loop  (cost=81913.24..159228.71 rows=378 width=55) (actual time=541.752..931.291 rows=2715 loops=3)
                           ->  Nested Loop  (cost=81912.82..158764.41 rows=1042 width=59) (actual time=540.829..891.784 rows=6115 loops=3)
                                 ->  Nested Loop  (cost=81912.39..158495.75 rows=392 width=51) (actual time=540.689..864.030 rows=2575 loops=3)
                                       ->  Hash Join  (cost=81911.96..157967.51 rows=810 width=39) (actual time=540.563..841.972 rows=2735 loops=3)
                                             Hash Cond: (ci.role_id = rt.id)
                                             ->  Nested Loop  (cost=81910.80..157931.79 rows=9727 width=43) (actual time=540.329..840.456 rows=2735 loops=3)
                                                   Join Filter: (n.id = ci.person_id)
                                                   ->  Parallel Hash Join  (cost=81910.23..98047.67 rows=4333 width=39) (actual time=535.686..683.673 rows=3508 loops=3)
                                                         Hash Cond: (an.person_id = n.id)
                                                         ->  Parallel Seq Scan on aka_name an  (cost=0.00..15151.60 rows=375560 width=20) (actual time=0.032..80.066 rows=300448 loops=3)
                                                         ->  Parallel Hash  (cost=81659.82..81659.82 rows=20033 width=19) (actual time=534.703..534.703 rows=16670 loops=3)
                                                               Buckets: 65536  Batches: 1  Memory Usage: 3296kB
                                                               ->  Parallel Seq Scan on name n  (cost=0.00..81659.82 rows=20033 width=19) (actual time=217.497..520.109 rows=16670 loops=3)
                                                                     Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                                                     Rows Removed by Filter: 1372493
                                                   ->  Index Scan using person_id_cast_info on cast_info ci  (cost=0.56..13.67 rows=12 width=16) (actual time=0.040..0.044 rows=1 loops=10525)
                                                         Index Cond: (person_id = an.person_id)
                                                         Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                         Rows Removed by Filter: 44
                                             ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.088..0.088 rows=1 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.062..0.064 rows=1 loops=3)
                                                         Filter: ((role)::text = 'actress'::text)
                                                         Rows Removed by Filter: 11
                                       ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.65 rows=1 width=20) (actual time=0.007..0.007 rows=1 loops=8204)
                                             Index Cond: (id = ci.person_role_id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.64 rows=5 width=8) (actual time=0.007..0.010 rows=2 loops=7726)
                                       Index Cond: (movie_id = ci.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.006..0.006 rows=0 loops=18345)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.51 rows=1 width=21) (actual time=0.006..0.006 rows=1 loops=8144)
                           Index Cond: (id = mc.movie_id)
 Planning Time: 14.742 ms
 Execution Time: 967.941 ms
(43 rows)

SET
                                                                                                  QUERY PLAN                                                                                                  
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=210684.16..210684.17 rows=1 width=128) (actual time=5336.096..5336.096 rows=1 loops=1)
   ->  Gather  (cost=210683.93..210684.14 rows=2 width=128) (actual time=5333.119..5341.372 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=209683.93..209683.94 rows=1 width=128) (actual time=5316.596..5316.596 rows=1 loops=3)
               ->  Nested Loop  (cost=140734.47..209608.99 rows=7494 width=64) (actual time=2886.814..5219.874 rows=161027 loops=3)
                     ->  Nested Loop  (cost=140734.04..207853.12 rows=3262 width=56) (actual time=2885.664..4846.493 rows=57856 loops=3)
                           Join Filter: (ci.movie_id = t.id)
                           ->  Nested Loop  (cost=140733.61..206137.89 rows=3262 width=47) (actual time=2885.597..4467.533 rows=57856 loops=3)
                                 ->  Nested Loop  (cost=140733.18..201739.10 rows=6745 width=35) (actual time=2885.533..3958.103 rows=63155 loops=3)
                                       ->  Hash Join  (cost=140732.75..179459.15 rows=29530 width=16) (actual time=2885.457..3513.182 rows=63185 loops=3)
                                             Hash Cond: (mc.movie_id = ci.movie_id)
                                             ->  Parallel Hash Join  (cost=5350.78..37865.94 rows=395029 width=4) (actual time=47.040..443.327 rows=384599 loops=3)
                                                   Hash Cond: (mc.company_id = cn.id)
                                                   ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=8) (actual time=0.048..170.105 rows=869710 loops=3)
                                                   ->  Parallel Hash  (cost=4722.92..4722.92 rows=50229 width=4) (actual time=45.758..45.758 rows=28281 loops=3)
                                                         Buckets: 131072  Batches: 1  Memory Usage: 4384kB
                                                         ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=50229 width=4) (actual time=0.050..31.229 rows=28281 loops=3)
                                                               Filter: ((country_code)::text = '[us]'::text)
                                                               Rows Removed by Filter: 50051
                                             ->  Hash  (cost=134105.54..134105.54 rows=73395 width=12) (actual time=2835.760..2835.760 rows=276166 loops=3)
                                                   Buckets: 131072 (originally 131072)  Batches: 4 (originally 2)  Memory Usage: 3984kB
                                                   ->  Nested Loop  (cost=0.56..134105.54 rows=73395 width=12) (actual time=0.290..2724.302 rows=276166 loops=3)
                                                         ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.041..0.046 rows=1 loops=3)
                                                               Filter: ((role)::text = 'actress'::text)
                                                               Rows Removed by Filter: 11
                                                         ->  Index Scan using role_id_cast_info on cast_info ci  (cost=0.56..133303.71 rows=80067 width=16) (actual time=0.244..2686.178 rows=276166 loops=3)
                                                               Index Cond: (role_id = rt.id)
                                                               Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                               Rows Removed by Filter: 7175807
                                       ->  Index Scan using name_pkey on name n  (cost=0.43..0.75 rows=1 width=19) (actual time=0.006..0.006 rows=1 loops=189554)
                                             Index Cond: (id = ci.person_id)
                                             Filter: ((gender)::text = 'f'::text)
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.65 rows=1 width=20) (actual time=0.007..0.007 rows=1 loops=189464)
                                       Index Cond: (id = ci.person_role_id)
                           ->  Index Scan using title_pkey on title t  (cost=0.43..0.51 rows=1 width=21) (actual time=0.006..0.006 rows=1 loops=173567)
                                 Index Cond: (id = mc.movie_id)
                     ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.52 rows=2 width=20) (actual time=0.004..0.005 rows=3 loops=173567)
                           Index Cond: (person_id = n.id)
 Planning Time: 15.459 ms
 Execution Time: 5342.096 ms
(42 rows)

