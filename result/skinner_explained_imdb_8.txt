SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=46738.99..46739.00 rows=1 width=64) (actual time=1102.581..1102.581 rows=1 loops=1)
   ->  Gather  (cost=46738.77..46738.98 rows=2 width=64) (actual time=1102.053..1107.456 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=45738.77..45738.78 rows=1 width=64) (actual time=1094.885..1094.885 rows=1 loops=3)
               ->  Nested Loop  (cost=4735.95..45738.76 rows=2 width=33) (actual time=126.157..1094.741 rows=35 loops=3)
                     ->  Nested Loop  (cost=4735.82..45738.46 rows=2 width=37) (actual time=126.061..1094.444 rows=35 loops=3)
                           ->  Hash Join  (cost=4735.39..45712.02 rows=5 width=25) (actual time=125.921..1093.200 rows=37 loops=3)
                                 Hash Cond: (ci.role_id = rt.id)
                                 ->  Nested Loop  (cost=4734.23..45710.67 rows=54 width=29) (actual time=125.701..1092.902 rows=50 loops=3)
                                       Join Filter: (t.id = ci.movie_id)
                                       ->  Nested Loop  (cost=4733.66..40594.00 rows=2624 width=29) (actual time=33.568..389.350 rows=1513 loops=3)
                                             ->  Parallel Hash Join  (cost=4733.23..37248.39 rows=6486 width=8) (actual time=33.246..324.095 rows=2930 loops=3)
                                                   Hash Cond: (mc.company_id = cn.id)
                                                   ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=12) (actual time=0.048..163.741 rows=869710 loops=3)
                                                   ->  Parallel Hash  (cost=4722.92..4722.92 rows=825 width=4) (actual time=32.018..32.018 rows=454 loops=3)
                                                         Buckets: 2048  Batches: 1  Memory Usage: 112kB
                                                         ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=825 width=4) (actual time=0.072..31.489 rows=454 loops=3)
                                                               Filter: ((country_code)::text = '[ru]'::text)
                                                               Rows Removed by Filter: 77879
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..0.52 rows=1 width=21) (actual time=0.021..0.021 rows=1 loops=8790)
                                                   Index Cond: (id = mc.movie_id)
                                                   Filter: (production_year > 2005)
                                                   Rows Removed by Filter: 0
                                       ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.94 rows=1 width=12) (actual time=0.435..0.464 rows=0 loops=4539)
                                             Index Cond: (movie_id = mc.movie_id)
                                             Filter: (((note)::text ~~ '%(voice)%'::text) AND ((note)::text ~~ '%(uncredited)%'::text))
                                             Rows Removed by Filter: 50
                                 ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.075..0.075 rows=1 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.050..0.053 rows=1 loops=3)
                                             Filter: ((role)::text = 'actor'::text)
                                             Rows Removed by Filter: 11
                           ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..5.29 rows=1 width=20) (actual time=0.031..0.031 rows=1 loops=112)
                                 Index Cond: (id = ci.person_role_id)
                     ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=104)
                           Index Cond: (id = mc.company_type_id)
                           Heap Fetches: 104
 Planning Time: 9.095 ms
 Execution Time: 1108.081 ms
(40 rows)

SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=43565.51..43565.52 rows=1 width=64) (actual time=563.759..563.759 rows=1 loops=1)
   ->  Gather  (cost=43565.29..43565.50 rows=2 width=64) (actual time=563.463..568.912 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=42565.29..42565.30 rows=1 width=64) (actual time=556.534..556.534 rows=1 loops=3)
               ->  Hash Join  (cost=4736.91..42565.02 rows=55 width=33) (actual time=556.527..556.527 rows=0 loops=3)
                     Hash Cond: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=4735.82..42563.63 rows=55 width=37) (actual time=556.334..556.334 rows=0 loops=3)
                           ->  Hash Join  (cost=4735.39..42496.51 rows=115 width=25) (actual time=556.333..556.333 rows=0 loops=3)
                                 Hash Cond: (ci.role_id = rt.id)
                                 ->  Nested Loop  (cost=4734.23..42490.46 rows=1377 width=29) (actual time=36.208..555.895 rows=871 loops=3)
                                       Join Filter: (t.id = ci.movie_id)
                                       ->  Nested Loop  (cost=4733.66..40594.00 rows=1021 width=29) (actual time=34.329..387.287 rows=420 loops=3)
                                             ->  Parallel Hash Join  (cost=4733.23..37248.39 rows=6486 width=8) (actual time=32.336..322.032 rows=2930 loops=3)
                                                   Hash Cond: (mc.company_id = cn.id)
                                                   ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=12) (actual time=0.044..162.664 rows=869710 loops=3)
                                                   ->  Parallel Hash  (cost=4722.92..4722.92 rows=825 width=4) (actual time=31.207..31.207 rows=454 loops=3)
                                                         Buckets: 2048  Batches: 1  Memory Usage: 112kB
                                                         ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=825 width=4) (actual time=0.099..30.672 rows=454 loops=3)
                                                               Filter: ((country_code)::text = '[ru]'::text)
                                                               Rows Removed by Filter: 77879
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..0.52 rows=1 width=21) (actual time=0.021..0.021 rows=0 loops=8790)
                                                   Index Cond: (id = mc.movie_id)
                                                   Filter: (production_year > 2010)
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.84 rows=1 width=12) (actual time=0.208..0.400 rows=2 loops=1259)
                                             Index Cond: (movie_id = mc.movie_id)
                                             Filter: ((note)::text ~~ '%(producer)%'::text)
                                             Rows Removed by Filter: 44
                                 ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.056..0.056 rows=1 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.044..0.047 rows=1 loops=3)
                                             Filter: ((role)::text = 'actor'::text)
                                             Rows Removed by Filter: 11
                           ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.58 rows=1 width=20) (never executed)
                                 Index Cond: (id = ci.person_role_id)
                     ->  Hash  (cost=1.04..1.04 rows=4 width=4) (actual time=0.063..0.063 rows=4 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.041..0.042 rows=4 loops=3)
 Planning Time: 9.036 ms
 Execution Time: 569.535 ms
(41 rows)

SET
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=652016.30..652016.31 rows=1 width=64) (actual time=5327.282..5327.283 rows=1 loops=1)
   ->  Gather  (cost=652016.08..652016.29 rows=2 width=64) (actual time=5322.696..5427.606 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=651016.08..651016.09 rows=1 width=64) (actual time=5315.697..5315.698 rows=1 loops=3)
               ->  Hash Join  (cost=609518.31..650122.02 rows=178812 width=33) (actual time=5279.121..5315.679 rows=3 loops=3)
                     Hash Cond: (ci.role_id = rt.id)
                     ->  Hash Join  (cost=609517.04..649485.59 rows=178812 width=37) (actual time=5278.840..5315.396 rows=3 loops=3)
                           Hash Cond: (mc.company_type_id = ct.id)
                           ->  Parallel Hash Join  (cost=609515.95..648517.80 rows=178812 width=41) (actual time=5278.719..5315.273 rows=3 loops=3)
                                 Hash Cond: (mc.movie_id = t.id)
                                 ->  Parallel Hash Join  (cost=5350.78..37865.94 rows=395029 width=8) (actual time=45.899..431.609 rows=384599 loops=3)
                                       Hash Cond: (mc.company_id = cn.id)
                                       ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=12) (actual time=0.041..176.634 rows=869710 loops=3)
                                       ->  Parallel Hash  (cost=4722.92..4722.92 rows=50229 width=4) (actual time=45.463..45.464 rows=28281 loops=3)
                                             Buckets: 131072  Batches: 1  Memory Usage: 4384kB
                                             ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=50229 width=4) (actual time=0.071..31.728 rows=28281 loops=3)
                                                   Filter: ((country_code)::text = '[us]'::text)
                                                   Rows Removed by Filter: 50051
                                 ->  Parallel Hash  (cost=600222.44..600222.44 rows=185178 width=45) (actual time=4680.268..4680.268 rows=4 loops=3)
                                       Buckets: 65536  Batches: 16  Memory Usage: 544kB
                                       ->  Parallel Hash Join  (cost=136144.88..600222.44 rows=185178 width=45) (actual time=4570.015..4678.832 rows=4 loops=3)
                                             Hash Cond: (ci.movie_id = t.id)
                                             ->  Parallel Hash Join  (cost=73555.68..529520.84 rows=266824 width=24) (actual time=3811.777..4018.019 rows=5 loops=3)
                                                   Hash Cond: (ci.person_role_id = chn.id)
                                                   ->  Parallel Seq Scan on cast_info ci  (cost=0.00..441459.62 rows=551821 width=12) (actual time=336.114..2895.003 rows=478480 loops=3)
                                                         Filter: ((note)::text ~~ '%(producer)%'::text)
                                                         Rows Removed by Filter: 11602968
                                                   ->  Parallel Hash  (cost=49532.75..49532.75 rows=1308475 width=20) (actual time=708.518..708.518 rows=1046780 loops=3)
                                                         Buckets: 65536  Batches: 64  Memory Usage: 3264kB
                                                         ->  Parallel Seq Scan on char_name chn  (cost=0.00..49532.75 rows=1308475 width=20) (actual time=0.053..313.705 rows=1046780 loops=3)
                                             ->  Parallel Hash  (cost=49166.29..49166.29 rows=731112 width=21) (actual time=529.010..529.011 rows=583011 loops=3)
                                                   Buckets: 65536  Batches: 32  Memory Usage: 3616kB
                                                   ->  Parallel Seq Scan on title t  (cost=0.00..49166.29 rows=731112 width=21) (actual time=0.046..302.069 rows=583011 loops=3)
                                                         Filter: (production_year > 1990)
                                                         Rows Removed by Filter: 259760
                           ->  Hash  (cost=1.04..1.04 rows=4 width=4) (actual time=0.048..0.048 rows=4 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                 ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.027..0.028 rows=4 loops=3)
                     ->  Hash  (cost=1.12..1.12 rows=12 width=4) (actual time=0.062..0.062 rows=12 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on role_type rt  (cost=0.00..1.12 rows=12 width=4) (actual time=0.034..0.037 rows=12 loops=3)
 Planning Time: 9.076 ms
 Execution Time: 5428.314 ms
(44 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3754.86..3754.87 rows=1 width=96) (actual time=244.148..244.148 rows=1 loops=1)
   ->  Nested Loop  (cost=8.32..3754.85 rows=1 width=118) (actual time=6.481..243.706 rows=310 loops=1)
         Join Filter: (mc.company_type_id = ct.id)
         Rows Removed by Join Filter: 20
         ->  Nested Loop  (cost=8.32..3753.79 rows=1 width=122) (actual time=6.457..240.967 rows=330 loops=1)
               ->  Nested Loop  (cost=7.90..3753.33 rows=1 width=107) (actual time=5.694..237.236 rows=705 loops=1)
                     Join Filter: (ml.movie_id = mc.movie_id)
                     ->  Nested Loop  (cost=7.47..3752.76 rows=1 width=111) (actual time=5.647..235.252 rows=152 loops=1)
                           Join Filter: (ml.movie_id = t.id)
                           ->  Nested Loop  (cost=7.04..3752.25 rows=1 width=90) (actual time=5.481..233.630 rows=199 loops=1)
                                 Join Filter: (ml.link_type_id = lt.id)
                                 Rows Removed by Join Filter: 303
                                 ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.031..0.042 rows=2 loops=1)
                                       Filter: ((link)::text ~~ '%follow%'::text)
                                       Rows Removed by Filter: 16
                                 ->  Nested Loop  (cost=7.04..3750.90 rows=10 width=12) (actual time=4.745..116.747 rows=251 loops=2)
                                       ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=4.734..94.592 rows=10544 loops=2)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.280..23.591 rows=1 loops=2)
                                                   Filter: ((keyword)::text = 'sequel'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=3.407..68.348 rows=10544 loops=2)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=11140
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=2.639..2.639 rows=10544 loops=2)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.002..0.002 rows=0 loops=21088)
                                             Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.007..0.007 rows=1 loops=199)
                                 Index Cond: (id = mk.movie_id)
                                 Filter: ((production_year >= 1950) AND (production_year <= 2000))
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=12) (actual time=0.008..0.011 rows=5 loops=152)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: (note IS NULL)
                           Rows Removed by Filter: 1
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.005..0.005 rows=0 loops=705)
                     Index Cond: (id = mc.company_id)
                     Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                     Rows Removed by Filter: 1
         ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=330)
               Filter: ((kind)::text = 'production companies'::text)
               Rows Removed by Filter: 1
 Planning Time: 13.390 ms
 Execution Time: 244.724 ms
(44 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3754.86..3754.87 rows=1 width=96) (actual time=61.328..61.328 rows=1 loops=1)
   ->  Nested Loop  (cost=8.32..3754.85 rows=1 width=118) (actual time=5.387..61.292 rows=14 loops=1)
         Join Filter: (mc.company_type_id = ct.id)
         ->  Nested Loop  (cost=8.32..3753.79 rows=1 width=122) (actual time=5.365..61.166 rows=14 loops=1)
               ->  Nested Loop  (cost=7.90..3753.33 rows=1 width=107) (actual time=5.341..61.007 rows=21 loops=1)
                     Join Filter: (ml.movie_id = mc.movie_id)
                     ->  Nested Loop  (cost=7.47..3752.76 rows=1 width=111) (actual time=5.326..60.953 rows=7 loops=1)
                           Join Filter: (ml.movie_id = t.id)
                           ->  Nested Loop  (cost=7.04..3752.25 rows=1 width=90) (actual time=4.458..60.455 rows=64 loops=1)
                                 Join Filter: (ml.link_type_id = lt.id)
                                 Rows Removed by Join Filter: 187
                                 ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.014..0.021 rows=1 loops=1)
                                       Filter: ((link)::text ~~ '%follows%'::text)
                                       Rows Removed by Filter: 17
                                 ->  Nested Loop  (cost=7.04..3750.90 rows=10 width=12) (actual time=4.439..60.398 rows=251 loops=1)
                                       ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=4.429..44.533 rows=10544 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.059..18.576 rows=1 loops=1)
                                                   Filter: ((keyword)::text = 'sequel'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=3.361..23.992 rows=10544 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=5570
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=2.575..2.575 rows=10544 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.001..0.001 rows=0 loops=10544)
                                             Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.007..0.007 rows=0 loops=64)
                                 Index Cond: (id = mk.movie_id)
                                 Filter: (((title)::text ~~ '%Money%'::text) AND (production_year = 1998))
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=12) (actual time=0.004..0.006 rows=3 loops=7)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: (note IS NULL)
                           Rows Removed by Filter: 1
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.007..0.007 rows=1 loops=21)
                     Index Cond: (id = mc.company_id)
                     Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                     Rows Removed by Filter: 0
         ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=14)
               Filter: ((kind)::text = 'production companies'::text)
               Rows Removed by Filter: 1
 Planning Time: 12.973 ms
 Execution Time: 61.970 ms
(43 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=6178.62..6178.63 rows=1 width=96) (actual time=601.966..601.966 rows=1 loops=1)
   ->  Nested Loop  (cost=8.32..6178.61 rows=1 width=60) (actual time=5.492..591.630 rows=6946 loops=1)
         Join Filter: (ml.movie_id = t.id)
         ->  Nested Loop  (cost=7.89..6178.11 rows=1 width=55) (actual time=5.447..555.985 rows=6946 loops=1)
               Join Filter: (ml.link_type_id = lt.id)
               Rows Removed by Join Filter: 42158
               ->  Nested Loop  (cost=7.89..6176.70 rows=1 width=59) (actual time=5.435..494.828 rows=6946 loops=1)
                     ->  Nested Loop  (cost=7.47..6147.98 rows=63 width=44) (actual time=4.764..448.915 rows=14916 loops=1)
                           Join Filter: (mc.company_type_id = ct.id)
                           Rows Removed by Join Filter: 1782
                           ->  Nested Loop  (cost=7.47..6143.61 rows=84 width=48) (actual time=4.736..440.094 rows=15510 loops=1)
                                 Join Filter: (ml.movie_id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.04..6125.70 rows=31 width=12) (actual time=4.691..422.254 rows=1460 loops=1)
                                       ->  Nested Loop  (cost=6.76..6082.75 rows=101 width=4) (actual time=4.681..320.510 rows=47403 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2793.84 rows=3 width=4) (actual time=1.099..27.532 rows=3 loops=1)
                                                   Filter: ((keyword)::text = ANY ('{sequel,revenge,based-on-novel}'::text[]))
                                                   Rows Removed by Filter: 134167
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1093.30 rows=300 width=8) (actual time=4.908..93.339 rows=15801 loops=3)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=23953
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.753..3.753 rows=15801 loops=3)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.002..0.002 rows=0 loops=47403)
                                             Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=36) (actual time=0.004..0.009 rows=11 loops=1460)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: (note IS NOT NULL)
                                       Rows Removed by Filter: 2
                           ->  Materialize  (cost=0.00..1.06 rows=3 width=4) (actual time=0.000..0.000 rows=1 loops=15510)
                                 ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=3 width=4) (actual time=0.021..0.022 rows=3 loops=1)
                                       Filter: ((kind IS NOT NULL) AND ((kind)::text <> 'production companies'::text))
                                       Rows Removed by Filter: 1
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=14916)
                           Index Cond: (id = mc.company_id)
                           Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '20th Century Fox%'::text) OR ((name)::text ~~ 'Twentieth Century Fox%'::text)))
                           Rows Removed by Filter: 1
               ->  Seq Scan on link_type lt  (cost=0.00..1.18 rows=18 width=4) (actual time=0.002..0.002 rows=7 loops=6946)
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.004..0.004 rows=1 loops=6946)
               Index Cond: (id = mk.movie_id)
               Filter: (production_year > 1950)
 Planning Time: 13.020 ms
 Execution Time: 602.540 ms
(42 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=6195.83..6195.84 rows=1 width=96) (actual time=506.818..506.818 rows=1 loops=1)
   ->  Nested Loop  (cost=8.32..6195.45 rows=51 width=60) (actual time=4.891..497.743 rows=14899 loops=1)
         ->  Nested Loop  (cost=7.90..6169.75 rows=57 width=45) (actual time=4.861..459.058 rows=14916 loops=1)
               Join Filter: (mc.company_type_id = ct.id)
               Rows Removed by Join Filter: 1782
               ->  Nested Loop  (cost=7.90..6165.70 rows=76 width=49) (actual time=4.837..453.191 rows=15510 loops=1)
                     Join Filter: (ml.movie_id = mc.movie_id)
                     ->  Nested Loop  (cost=7.47..6149.51 rows=28 width=29) (actual time=4.809..439.036 rows=1460 loops=1)
                           Join Filter: (ml.link_type_id = lt.id)
                           Rows Removed by Join Filter: 10576
                           ->  Nested Loop  (cost=7.47..6141.21 rows=28 width=33) (actual time=4.793..436.619 rows=1460 loops=1)
                                 Join Filter: (ml.movie_id = t.id)
                                 ->  Nested Loop  (cost=7.04..6125.70 rows=31 width=12) (actual time=4.765..429.254 rows=1460 loops=1)
                                       ->  Nested Loop  (cost=6.76..6082.75 rows=101 width=4) (actual time=4.746..323.417 rows=47403 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2793.84 rows=3 width=4) (actual time=1.135..36.237 rows=3 loops=1)
                                                   Filter: ((keyword)::text = ANY ('{sequel,revenge,based-on-novel}'::text[]))
                                                   Rows Removed by Filter: 134167
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1093.30 rows=300 width=8) (actual time=5.067..91.177 rows=15801 loops=3)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=23953
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.901..3.901 rows=15801 loops=3)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.002..0.002 rows=0 loops=47403)
                                             Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.004..0.004 rows=1 loops=1460)
                                       Index Cond: (id = mk.movie_id)
                                       Filter: (production_year > 1950)
                           ->  Materialize  (cost=0.00..1.27 rows=18 width=4) (actual time=0.000..0.001 rows=8 loops=1460)
                                 ->  Seq Scan on link_type lt  (cost=0.00..1.18 rows=18 width=4) (actual time=0.008..0.012 rows=16 loops=1)
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=36) (actual time=0.003..0.007 rows=11 loops=1460)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: (note IS NOT NULL)
                           Rows Removed by Filter: 2
               ->  Materialize  (cost=0.00..1.06 rows=3 width=4) (actual time=0.000..0.000 rows=1 loops=15510)
                     ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=3 width=4) (actual time=0.020..0.022 rows=3 loops=1)
                           Filter: ((kind IS NOT NULL) AND ((kind)::text <> 'production companies'::text))
                           Rows Removed by Filter: 1
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=1 loops=14916)
               Index Cond: (id = mc.company_id)
               Filter: ((country_code)::text <> '[pl]'::text)
               Rows Removed by Filter: 0
 Planning Time: 13.869 ms
 Execution Time: 507.378 ms
(43 rows)

SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16837.50..16837.51 rows=1 width=96) (actual time=510.592..510.593 rows=1 loops=1)
   ->  Gather  (cost=1005.35..16837.49 rows=1 width=41) (actual time=45.970..517.042 rows=397 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Nested Loop  (cost=5.34..15837.39 rows=1 width=41) (actual time=29.541..502.617 rows=132 loops=3)
               ->  Nested Loop  (cost=5.20..15835.91 rows=9 width=45) (actual time=29.507..501.983 rows=132 loops=3)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=4.77..15811.93 rows=15 width=53) (actual time=2.429..393.762 rows=1891 loops=3)
                           ->  Nested Loop  (cost=4.35..15793.67 rows=41 width=38) (actual time=2.334..368.300 rows=2203 loops=3)
                                 Join Filter: (mi_idx.movie_id = t.id)
                                 ->  Hash Join  (cost=3.92..15669.98 rows=233 width=17) (actual time=0.519..247.385 rows=8078 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Nested Loop  (cost=2.86..15663.88 rows=932 width=21) (actual time=0.278..240.348 rows=21569 loops=3)
                                             ->  Hash Join  (cost=2.43..15179.85 rows=178 width=9) (actual time=0.177..142.068 rows=5283 loops=3)
                                                   Hash Cond: (mi_idx.info_type_id = it2.id)
                                                   ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..15122.68 rows=20101 width=13) (actual time=0.052..136.751 rows=17883 loops=3)
                                                         Filter: ((info)::text > '8.0'::text)
                                                         Rows Removed by Filter: 442129
                                                   ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.064..0.064 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.044..0.047 rows=1 loops=3)
                                                               Filter: ((info)::text = 'rating'::text)
                                                               Rows Removed by Filter: 112
                                             ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.67 rows=5 width=12) (actual time=0.013..0.017 rows=4 loops=15849)
                                                   Index Cond: (movie_id = mi_idx.movie_id)
                                       ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.068..0.068 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.044..0.046 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.52 rows=1 width=21) (actual time=0.014..0.014 rows=0 loops=24233)
                                       Index Cond: (id = mc.movie_id)
                                       Filter: ((production_year >= 2005) AND (production_year <= 2008))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.010..0.010 rows=1 loops=6610)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.59 rows=1 width=8) (actual time=0.057..0.057 rows=0 loops=5674)
                           Index Cond: (movie_id = mc.movie_id)
                           Filter: ((info)::text = ANY ('{Drama,Horror}'::text[]))
                           Rows Removed by Filter: 28
               ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=397)
                     Index Cond: (id = mi.info_type_id)
                     Filter: ((info)::text = 'genres'::text)
 Planning Time: 14.282 ms
 Execution Time: 518.084 ms
(47 rows)

SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=19208.43..19208.44 rows=1 width=64) (actual time=146.218..146.219 rows=1 loops=1)
   ->  Nested Loop  (cost=1006.70..19208.43 rows=1 width=60) (actual time=144.440..146.196 rows=10 loops=1)
         ->  Gather  (cost=1006.57..19208.26 rows=1 width=64) (actual time=144.347..147.524 rows=10 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Nested Loop  (cost=6.57..18208.16 rows=1 width=64) (actual time=136.646..137.215 rows=3 loops=3)
                     ->  Nested Loop  (cost=6.15..18207.71 rows=1 width=68) (actual time=136.610..136.928 rows=11 loops=3)
                           Join Filter: (t.id = mc.movie_id)
                           ->  Hash Join  (cost=5.72..18207.13 rows=1 width=72) (actual time=136.555..136.829 rows=1 loops=3)
                                 Hash Cond: (mi.info_type_id = it1.id)
                                 ->  Nested Loop  (cost=3.29..18204.66 rows=17 width=76) (actual time=136.258..136.598 rows=74 loops=3)
                                       Join Filter: (t.id = mi.movie_id)
                                       ->  Nested Loop  (cost=2.86..18202.37 rows=1 width=25) (actual time=136.215..136.265 rows=1 loops=3)
                                             ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=4) (actual time=136.038..136.043 rows=3 loops=3)
                                                   Hash Cond: (mi_idx.info_type_id = it2.id)
                                                   ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=8) (actual time=0.036..80.306 rows=460012 loops=3)
                                                   ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.032..0.032 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.021..0.022 rows=1 loops=3)
                                                               Filter: ((info)::text = 'bottom 10 rank'::text)
                                                               Rows Removed by Filter: 112
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..0.58 rows=1 width=21) (actual time=0.065..0.065 rows=0 loops=10)
                                                   Index Cond: (id = mi_idx.movie_id)
                                                   Filter: ((production_year > 2000) AND (((title)::text ~~ 'Birdemic%'::text) OR ((title)::text ~~ '%Movie%'::text)))
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.76 rows=42 width=51) (actual time=0.092..0.459 rows=110 loops=2)
                                             Index Cond: (movie_id = mi_idx.movie_id)
                                 ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.087..0.087 rows=1 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.066..0.068 rows=1 loops=3)
                                             Filter: ((info)::text = 'budget'::text)
                                             Rows Removed by Filter: 112
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.52 rows=5 width=12) (actual time=0.111..0.136 rows=16 loops=2)
                                 Index Cond: (movie_id = mi.movie_id)
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.025..0.025 rows=0 loops=33)
                           Index Cond: (id = mc.company_id)
                           Filter: ((country_code)::text = '[us]'::text)
                           Rows Removed by Filter: 1
         ->  Index Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.011..0.011 rows=1 loops=10)
               Index Cond: (id = mc.company_type_id)
               Filter: ((kind IS NOT NULL) AND (((kind)::text = 'production companies'::text) OR ((kind)::text = 'distributors'::text)))
 Planning Time: 14.727 ms
 Execution Time: 148.391 ms
(43 rows)

SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=17908.15..17908.16 rows=1 width=96) (actual time=1712.487..1712.487 rows=1 loops=1)
   ->  Gather  (cost=1007.63..17908.14 rows=2 width=41) (actual time=7.442..1716.473 rows=4711 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Hash Join  (cost=7.63..16907.94 rows=1 width=41) (actual time=8.524..1701.397 rows=1570 loops=3)
               Hash Cond: (mi.info_type_id = it1.id)
               ->  Nested Loop  (cost=5.20..16905.24 rows=98 width=45) (actual time=8.301..1699.883 rows=1570 loops=3)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=4.77..16670.19 rows=138 width=53) (actual time=0.909..1082.775 rows=14111 loops=3)
                           ->  Hash Join  (cost=4.35..16500.42 rows=381 width=38) (actual time=0.491..893.206 rows=22822 loops=3)
                                 Hash Cond: (mc.company_type_id = ct.id)
                                 ->  Nested Loop  (cost=3.29..16491.13 rows=1523 width=42) (actual time=0.365..874.832 rows=56386 loops=3)
                                       ->  Nested Loop  (cost=2.86..16296.91 rows=291 width=30) (actual time=0.273..649.272 rows=17435 loops=3)
                                             ->  Hash Join  (cost=2.43..15342.82 rows=708 width=9) (actual time=0.151..185.433 rows=40524 loops=3)
                                                   Hash Cond: (mi_idx.info_type_id = it2.id)
                                                   ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..15122.68 rows=79942 width=13) (actual time=0.064..160.657 rows=64632 loops=3)
                                                         Filter: ((info)::text > '7.0'::text)
                                                         Rows Removed by Filter: 395380
                                                   ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.033..0.033 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.020..0.023 rows=1 loops=3)
                                                               Filter: ((info)::text = 'rating'::text)
                                                               Rows Removed by Filter: 112
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..1.35 rows=1 width=21) (actual time=0.011..0.011 rows=0 loops=121572)
                                                   Index Cond: (id = mi_idx.movie_id)
                                                   Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.62 rows=5 width=12) (actual time=0.009..0.011 rows=3 loops=52304)
                                             Index Cond: (movie_id = t.id)
                                 ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.048..0.048 rows=1 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.031..0.033 rows=1 loops=3)
                                             Filter: ((kind)::text = 'production companies'::text)
                                             Rows Removed by Filter: 3
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.008..0.008 rows=1 loops=68466)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.69 rows=1 width=8) (actual time=0.043..0.043 rows=0 loops=42332)
                           Index Cond: (movie_id = mc.movie_id)
                           Filter: ((info)::text = ANY ('{Drama,Horror,Western,Family}'::text[]))
                           Rows Removed by Filter: 29
               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.084..0.085 rows=1 loops=3)
                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                     ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.053..0.065 rows=1 loops=3)
                           Filter: ((info)::text = 'genres'::text)
                           Rows Removed by Filter: 112
 Planning Time: 13.787 ms
 Execution Time: 1720.821 ms
(49 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=20155.74..20155.75 rows=1 width=96) (actual time=2829.353..2829.354 rows=1 loops=1)
   ->  Gather  (cost=20155.52..20155.73 rows=2 width=96) (actual time=2829.318..2836.741 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=19155.52..19155.53 rows=1 width=96) (actual time=2821.092..2821.092 rows=1 loops=3)
               ->  Hash Join  (cost=8.73..19155.43 rows=11 width=65) (actual time=605.983..2802.065 rows=37034 loops=3)
                     Hash Cond: (mi.info_type_id = it2.id)
                     ->  Nested Loop  (cost=6.30..19149.54 rows=1275 width=69) (actual time=605.719..2772.302 rows=172109 loops=3)
                           ->  Nested Loop  (cost=5.87..19075.02 rows=39 width=34) (actual time=605.617..2383.977 rows=5490 loops=3)
                                 ->  Hash Join  (cost=5.45..18650.83 rows=952 width=38) (actual time=602.768..1816.063 rows=100870 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Nested Loop  (cost=4.39..18629.17 rows=3809 width=42) (actual time=602.648..1762.551 rows=257695 loops=3)
                                             ->  Hash Join  (cost=3.96..18186.75 rows=727 width=30) (actual time=602.516..1265.704 rows=69960 loops=3)
                                                   Hash Cond: (t.kind_id = kt.id)
                                                   ->  Nested Loop  (cost=2.86..18164.20 rows=5089 width=34) (actual time=0.236..1224.151 rows=153308 loops=3)
                                                         ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=9) (actual time=0.142..192.159 rows=153308 loops=3)
                                                               Hash Cond: (miidx.info_type_id = it.id)
                                                               ->  Parallel Seq Scan on movie_info_idx miidx  (cost=0.00..13685.15 rows=575015 width=13) (actual time=0.035..89.884 rows=460012 loops=3)
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.046..0.047 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.025..0.028 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'rating'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=25) (actual time=0.006..0.006 rows=1 loops=459925)
                                                               Index Cond: (id = miidx.movie_id)
                                                   ->  Hash  (cost=1.09..1.09 rows=1 width=4) (actual time=0.036..0.036 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.024..0.026 rows=1 loops=3)
                                                               Filter: ((kind)::text = 'movie'::text)
                                                               Rows Removed by Filter: 6
                                             ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.56 rows=5 width=12) (actual time=0.004..0.006 rows=4 loops=209880)
                                                   Index Cond: (movie_id = t.id)
                                       ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.047..0.047 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.034..0.036 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                 ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=302610)
                                       Index Cond: (id = mc.company_id)
                                       Filter: ((country_code)::text = '[de]'::text)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.49 rows=42 width=51) (actual time=0.013..0.063 rows=31 loops=16470)
                                 Index Cond: (movie_id = t.id)
                     ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.076..0.076 rows=1 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.040..0.051 rows=1 loops=3)
                                 Filter: ((info)::text = 'release dates'::text)
                                 Rows Removed by Filter: 112
 Planning Time: 21.291 ms
 Execution Time: 2837.604 ms
(50 rows)

SET
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=19206.33..19206.34 rows=1 width=96) (actual time=1393.167..1393.167 rows=1 loops=1)
   ->  Gather  (cost=1004.54..19206.32 rows=1 width=41) (actual time=715.862..1404.637 rows=372 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Nested Loop  (cost=4.54..18206.22 rows=1 width=41) (actual time=694.854..1385.285 rows=124 loops=3)
               ->  Nested Loop  (cost=4.40..18205.87 rows=2 width=45) (actual time=694.748..1383.719 rows=707 loops=3)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=3.97..18203.87 rows=1 width=53) (actual time=694.636..1381.054 rows=20 loops=3)
                           ->  Nested Loop  (cost=3.84..18203.70 rows=1 width=57) (actual time=694.445..1380.773 rows=54 loops=3)
                                 ->  Nested Loop  (cost=3.42..18203.25 rows=1 width=42) (actual time=671.890..1378.326 rows=104 loops=3)
                                       Join Filter: (t.id = mc.movie_id)
                                       ->  Nested Loop  (cost=2.99..18202.60 rows=1 width=30) (actual time=670.985..1377.202 rows=30 loops=3)
                                             ->  Nested Loop  (cost=2.86..18202.37 rows=1 width=34) (actual time=5.698..1376.751 rows=117 loops=3)
                                                   ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=9) (actual time=0.268..195.203 rows=153308 loops=3)
                                                         Hash Cond: (miidx.info_type_id = it.id)
                                                         ->  Parallel Seq Scan on movie_info_idx miidx  (cost=0.00..13685.15 rows=575015 width=13) (actual time=0.043..87.325 rows=460012 loops=3)
                                                         ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.072..0.072 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.049..0.052 rows=1 loops=3)
                                                                     Filter: ((info)::text = 'rating'::text)
                                                                     Rows Removed by Filter: 112
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.58 rows=1 width=25) (actual time=0.007..0.007 rows=0 loops=459925)
                                                         Index Cond: (id = miidx.movie_id)
                                                         Filter: (((title)::text <> ''::text) AND (((title)::text ~~ '%Champion%'::text) OR ((title)::text ~~ '%Loser%'::text)))
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using kind_type_pkey on kind_type kt  (cost=0.13..0.18 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=352)
                                                   Index Cond: (id = t.kind_id)
                                                   Filter: ((kind)::text = 'movie'::text)
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.59 rows=5 width=12) (actual time=0.028..0.035 rows=3 loops=90)
                                             Index Cond: (movie_id = miidx.movie_id)
                                 ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.022..0.022 rows=1 loops=313)
                                       Index Cond: (id = mc.company_id)
                                       Filter: ((country_code)::text = '[us]'::text)
                                       Rows Removed by Filter: 0
                           ->  Index Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=161)
                                 Index Cond: (id = mc.company_type_id)
                                 Filter: ((kind)::text = 'production companies'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.48 rows=42 width=8) (actual time=0.029..0.118 rows=35 loops=61)
                           Index Cond: (movie_id = mc.movie_id)
               ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=2122)
                     Index Cond: (id = mi.info_type_id)
                     Filter: ((info)::text = 'release dates'::text)
                     Rows Removed by Filter: 1
 Planning Time: 22.115 ms
 Execution Time: 1405.705 ms
(47 rows)

SET
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=19206.33..19206.34 rows=1 width=96) (actual time=1210.233..1210.234 rows=1 loops=1)
   ->  Gather  (cost=1004.54..19206.32 rows=1 width=41) (actual time=668.423..1217.981 rows=53 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Nested Loop  (cost=4.54..18206.22 rows=1 width=41) (actual time=1022.016..1202.497 rows=18 loops=3)
               ->  Nested Loop  (cost=4.40..18205.87 rows=2 width=45) (actual time=1021.968..1202.311 rows=73 loops=3)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=3.97..18203.87 rows=1 width=53) (actual time=1021.933..1201.994 rows=5 loops=3)
                           ->  Nested Loop  (cost=3.84..18203.70 rows=1 width=57) (actual time=1021.808..1201.910 rows=16 loops=3)
                                 ->  Nested Loop  (cost=3.42..18203.25 rows=1 width=42) (actual time=1021.776..1201.147 rows=32 loops=3)
                                       Join Filter: (t.id = mc.movie_id)
                                       ->  Nested Loop  (cost=2.99..18202.60 rows=1 width=30) (actual time=1021.747..1201.018 rows=10 loops=3)
                                             ->  Nested Loop  (cost=2.86..18202.37 rows=1 width=34) (actual time=57.709..1200.909 rows=22 loops=3)
                                                   ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=9) (actual time=0.306..195.122 rows=153308 loops=3)
                                                         Hash Cond: (miidx.info_type_id = it.id)
                                                         ->  Parallel Seq Scan on movie_info_idx miidx  (cost=0.00..13685.15 rows=575015 width=13) (actual time=0.041..86.819 rows=460012 loops=3)
                                                         ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.078..0.079 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.055..0.057 rows=1 loops=3)
                                                                     Filter: ((info)::text = 'rating'::text)
                                                                     Rows Removed by Filter: 112
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.58 rows=1 width=25) (actual time=0.006..0.006 rows=0 loops=459925)
                                                         Index Cond: (id = miidx.movie_id)
                                                         Filter: (((title)::text <> ''::text) AND (((title)::text ~~ 'Champion%'::text) OR ((title)::text ~~ 'Loser%'::text)))
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using kind_type_pkey on kind_type kt  (cost=0.13..0.18 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=66)
                                                   Index Cond: (id = t.kind_id)
                                                   Filter: ((kind)::text = 'movie'::text)
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.59 rows=5 width=12) (actual time=0.008..0.011 rows=3 loops=29)
                                             Index Cond: (movie_id = miidx.movie_id)
                                 ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.023..0.023 rows=0 loops=95)
                                       Index Cond: (id = mc.company_id)
                                       Filter: ((country_code)::text = '[us]'::text)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=47)
                                 Index Cond: (id = mc.company_type_id)
                                 Filter: ((kind)::text = 'production companies'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.48 rows=42 width=8) (actual time=0.017..0.061 rows=16 loops=14)
                           Index Cond: (movie_id = mc.movie_id)
               ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=218)
                     Index Cond: (id = mi.info_type_id)
                     Filter: ((info)::text = 'release dates'::text)
                     Rows Removed by Filter: 1
 Planning Time: 21.826 ms
 Execution Time: 1218.916 ms
(47 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=20770.24..20770.25 rows=1 width=96) (actual time=4380.944..4380.944 rows=1 loops=1)
   ->  Gather  (cost=20770.01..20770.22 rows=2 width=96) (actual time=4380.888..4388.572 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=19770.01..19770.02 rows=1 width=96) (actual time=4372.785..4372.785 rows=1 loops=3)
               ->  Hash Join  (cost=8.73..19769.26 rows=100 width=41) (actual time=617.712..4262.457 rows=223463 loops=3)
                     Hash Cond: (mi.info_type_id = it2.id)
                     ->  Nested Loop  (cost=6.30..19736.13 rows=11276 width=45) (actual time=617.344..4073.021 rows=1438861 loops=3)
                           ->  Nested Loop  (cost=5.87..19075.02 rows=346 width=53) (actual time=617.239..2501.560 rows=29098 loops=3)
                                 ->  Hash Join  (cost=5.45..18650.83 rows=952 width=38) (actual time=617.088..1856.368 rows=100870 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Nested Loop  (cost=4.39..18629.17 rows=3809 width=42) (actual time=616.981..1801.137 rows=257695 loops=3)
                                             ->  Hash Join  (cost=3.96..18186.75 rows=727 width=30) (actual time=616.826..1305.149 rows=69960 loops=3)
                                                   Hash Cond: (t.kind_id = kt.id)
                                                   ->  Nested Loop  (cost=2.86..18164.20 rows=5089 width=34) (actual time=0.254..1262.291 rows=153308 loops=3)
                                                         ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=9) (actual time=0.144..199.803 rows=153308 loops=3)
                                                               Hash Cond: (miidx.info_type_id = it.id)
                                                               ->  Parallel Seq Scan on movie_info_idx miidx  (cost=0.00..13685.15 rows=575015 width=13) (actual time=0.039..92.856 rows=460012 loops=3)
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.044..0.045 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.026..0.028 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'rating'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=25) (actual time=0.006..0.006 rows=1 loops=459925)
                                                               Index Cond: (id = miidx.movie_id)
                                                   ->  Hash  (cost=1.09..1.09 rows=1 width=4) (actual time=0.046..0.046 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.035..0.037 rows=1 loops=3)
                                                               Filter: ((kind)::text = 'movie'::text)
                                                               Rows Removed by Filter: 6
                                             ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.56 rows=5 width=12) (actual time=0.004..0.006 rows=4 loops=209880)
                                                   Index Cond: (movie_id = t.id)
                                       ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.044..0.044 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.031..0.032 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                 ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.006..0.006 rows=0 loops=302610)
                                       Index Cond: (id = mc.company_id)
                                       Filter: ((country_code)::text = '[us]'::text)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.49 rows=42 width=8) (actual time=0.009..0.045 rows=49 loops=87293)
                                 Index Cond: (movie_id = t.id)
                     ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.084..0.084 rows=1 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.049..0.060 rows=1 loops=3)
                                 Filter: ((info)::text = 'release dates'::text)
                                 Rows Removed by Filter: 112
 Planning Time: 21.731 ms
 Execution Time: 4389.370 ms
(50 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7394.40..7394.41 rows=1 width=64) (actual time=1439.826..1439.827 rows=1 loops=1)
   ->  Nested Loop  (cost=8.05..7394.40 rows=1 width=22) (actual time=38.943..1438.880 rows=761 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         Rows Removed by Join Filter: 117
         ->  Nested Loop  (cost=8.05..7391.97 rows=1 width=26) (actual time=38.923..1428.258 rows=878 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=7.62..7390.07 rows=1 width=34) (actual time=37.442..1171.231 rows=1147 loops=1)
                     Join Filter: (mi_idx.info_type_id = it2.id)
                     Rows Removed by Join Filter: 2256
                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.023..0.026 rows=1 loops=1)
                           Filter: ((info)::text = 'rating'::text)
                           Rows Removed by Filter: 112
                     ->  Nested Loop  (cost=7.62..7387.55 rows=9 width=38) (actual time=36.418..1170.439 rows=3403 loops=1)
                           Join Filter: (t.id = mi_idx.movie_id)
                           ->  Nested Loop  (cost=7.19..7385.94 rows=3 width=25) (actual time=36.345..1126.854 rows=1966 loops=1)
                                 Join Filter: (t.kind_id = kt.id)
                                 Rows Removed by Join Filter: 616
                                 ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.028..0.030 rows=1 loops=1)
                                       Filter: ((kind)::text = 'movie'::text)
                                       Rows Removed by Filter: 6
                                 ->  Nested Loop  (cost=7.19..7384.59 rows=21 width=29) (actual time=8.466..1125.886 rows=2582 loops=1)
                                       ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=7.802..550.084 rows=37091 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=2.015..38.958 rows=3 loops=1)
                                                   Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                   Rows Removed by Filter: 134167
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=5.020..164.554 rows=12364 loops=3)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=26312
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.726..3.726 rows=12364 loops=3)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.014..0.014 rows=0 loops=37091)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: (production_year > 2010)
                                             Rows Removed by Filter: 1
                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=13) (actual time=0.020..0.021 rows=2 loops=1966)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((info)::text < '8.5'::text)
                                 Rows Removed by Filter: 0
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.191..0.223 rows=1 loops=1147)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,USA,American}'::text[]))
                     Rows Removed by Filter: 69
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=878)
               Filter: ((info)::text = 'countries'::text)
               Rows Removed by Filter: 21
 Planning Time: 13.879 ms
 Execution Time: 1440.358 ms
(47 rows)

SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4874.32..4874.33 rows=1 width=64) (actual time=583.138..583.138 rows=1 loops=1)
   ->  Nested Loop  (cost=8.05..4874.31 rows=1 width=22) (actual time=371.567..583.120 rows=1 loops=1)
         Join Filter: (t.kind_id = kt.id)
         Rows Removed by Join Filter: 1
         ->  Nested Loop  (cost=8.05..4873.21 rows=1 width=26) (actual time=15.442..583.075 rows=2 loops=1)
               Join Filter: (mi_idx.info_type_id = it2.id)
               Rows Removed by Join Filter: 1
               ->  Nested Loop  (cost=8.05..4870.79 rows=1 width=30) (actual time=15.397..583.012 rows=3 loops=1)
                     Join Filter: (t.id = mi_idx.movie_id)
                     ->  Nested Loop  (cost=7.62..4870.28 rows=1 width=33) (actual time=15.349..582.728 rows=8 loops=1)
                           Join Filter: (mi.info_type_id = it1.id)
                           ->  Nested Loop  (cost=7.62..4867.85 rows=1 width=37) (actual time=15.335..582.595 rows=8 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=7.19..4865.95 rows=1 width=29) (actual time=15.003..580.456 rows=15 loops=1)
                                       ->  Nested Loop  (cost=6.76..4832.75 rows=67 width=4) (actual time=9.836..282.207 rows=19528 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=2 width=4) (actual time=2.086..32.344 rows=1 loops=1)
                                                   Filter: ((keyword)::text = ANY ('{murder,murder-in-title}'::text[]))
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1100.31 rows=300 width=8) (actual time=7.741..240.955 rows=19528 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=12389
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=5.896..5.896 rows=19528 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.50 rows=1 width=25) (actual time=0.014..0.014 rows=0 loops=19528)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: ((production_year > 2010) AND (((title)::text ~~ '%murder%'::text) OR ((title)::text ~~ '%Murder%'::text) OR ((title)::text ~~ '%Mord%'::text)))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.133..0.140 rows=1 loops=15)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,USA,American}'::text[]))
                                       Rows Removed by Filter: 12
                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=8)
                                 Filter: ((info)::text = 'countries'::text)
                                 Rows Removed by Filter: 7
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=13) (actual time=0.033..0.033 rows=0 loops=8)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((info)::text > '6.0'::text)
                           Rows Removed by Filter: 1
               ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.016..0.016 rows=1 loops=3)
                     Filter: ((info)::text = 'rating'::text)
                     Rows Removed by Filter: 104
         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.017..0.018 rows=1 loops=2)
               Filter: ((kind)::text = 'movie'::text)
               Rows Removed by Filter: 3
 Planning Time: 13.591 ms
 Execution Time: 583.784 ms
(46 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7403.14..7403.15 rows=1 width=64) (actual time=2462.870..2462.870 rows=1 loops=1)
   ->  Nested Loop  (cost=8.05..7403.13 rows=1 width=22) (actual time=8.249..2458.044 rows=4115 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         Rows Removed by Join Filter: 594
         ->  Nested Loop  (cost=8.05..7400.71 rows=1 width=26) (actual time=8.228..2401.986 rows=4709 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=7.62..7398.81 rows=1 width=34) (actual time=8.079..1270.440 rows=5949 loops=1)
                     Join Filter: (mi_idx.info_type_id = it2.id)
                     Rows Removed by Join Filter: 11942
                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.024..0.026 rows=1 loops=1)
                           Filter: ((info)::text = 'rating'::text)
                           Rows Removed by Filter: 112
                     ->  Nested Loop  (cost=7.62..7395.82 rows=46 width=38) (actual time=8.051..1266.631 rows=17891 loops=1)
                           Join Filter: (t.id = mi_idx.movie_id)
                           ->  Nested Loop  (cost=7.19..7387.25 rows=16 width=25) (actual time=8.006..1113.216 rows=8073 loops=1)
                                 Join Filter: (t.kind_id = kt.id)
                                 Rows Removed by Join Filter: 4332
                                 ->  Nested Loop  (cost=7.19..7384.59 rows=55 width=29) (actual time=7.849..1102.657 rows=9739 loops=1)
                                       ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=7.796..532.314 rows=37091 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.975..39.628 rows=3 loops=1)
                                                   Filter: ((keyword IS NOT NULL) AND ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[])))
                                                   Rows Removed by Filter: 134167
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=5.031..158.311 rows=12364 loops=3)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=26312
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.741..3.741 rows=12364 loops=3)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.014..0.014 rows=0 loops=37091)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: (production_year > 2005)
                                             Rows Removed by Filter: 1
                                 ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=9739)
                                       ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.030..0.031 rows=2 loops=1)
                                             Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                             Rows Removed by Filter: 5
                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=13) (actual time=0.016..0.017 rows=2 loops=8073)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((info)::text < '8.5'::text)
                                 Rows Removed by Filter: 0
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.163..0.189 rows=1 loops=5949)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                     Rows Removed by Filter: 71
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=4709)
               Filter: ((info)::text = 'countries'::text)
               Rows Removed by Filter: 20
 Planning Time: 13.076 ms
 Execution Time: 2463.441 ms
(48 rows)

SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=51296.76..51296.77 rows=1 width=64) (actual time=725.556..725.556 rows=1 loops=1)
   ->  Gather  (cost=51296.54..51296.75 rows=2 width=64) (actual time=724.496..732.077 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=50296.54..50296.55 rows=1 width=64) (actual time=717.063..717.064 rows=1 loops=3)
               ->  Nested Loop  (cost=5353.19..50296.50 rows=8 width=60) (actual time=215.843..716.925 rows=109 loops=3)
                     ->  Nested Loop  (cost=5352.77..50292.99 rows=8 width=64) (actual time=215.720..715.293 rows=109 loops=3)
                           ->  Nested Loop  (cost=5352.34..50291.15 rows=1 width=76) (actual time=75.846..714.716 rows=19 loops=3)
                                 ->  Nested Loop  (cost=5352.20..50290.92 rows=1 width=80) (actual time=75.756..714.549 rows=19 loops=3)
                                       ->  Nested Loop  (cost=5352.07..50290.76 rows=1 width=84) (actual time=75.665..714.375 rows=19 loops=3)
                                             ->  Nested Loop  (cost=5351.63..48102.52 rows=1107 width=33) (actual time=54.320..497.025 rows=1711 loops=3)
                                                   ->  Nested Loop  (cost=5351.20..46229.21 rows=2025 width=12) (actual time=54.198..431.811 rows=4566 loops=3)
                                                         ->  Parallel Hash Join  (cost=5350.78..40467.98 rows=2789 width=8) (actual time=53.429..327.483 rows=14612 loops=3)
                                                               Hash Cond: (mc.company_id = cn.id)
                                                               ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..35097.06 rows=7675 width=12) (actual time=0.067..261.457 rows=20555 loops=3)
                                                                     Filter: (((note)::text ~~ '%(200%)%'::text) AND ((note)::text ~~ '%(worldwide)%'::text))
                                                                     Rows Removed by Filter: 849155
                                                               ->  Parallel Hash  (cost=4722.92..4722.92 rows=50229 width=4) (actual time=51.951..51.952 rows=28281 loops=3)
                                                                     Buckets: 131072  Batches: 1  Memory Usage: 4384kB
                                                                     ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=50229 width=4) (actual time=0.054..35.281 rows=28281 loops=3)
                                                                           Filter: ((country_code)::text = '[us]'::text)
                                                                           Rows Removed by Filter: 50051
                                                         ->  Index Only Scan using movie_id_aka_title on aka_title at  (cost=0.42..2.04 rows=3 width=4) (actual time=0.005..0.007 rows=0 loops=43837)
                                                               Index Cond: (movie_id = mc.movie_id)
                                                               Heap Fetches: 13699
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.93 rows=1 width=21) (actual time=0.013..0.013 rows=0 loops=13699)
                                                         Index Cond: (id = at.movie_id)
                                                         Filter: (production_year > 2000)
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.97 rows=1 width=51) (actual time=0.126..0.126 rows=0 loops=5134)
                                                   Index Cond: (movie_id = t.id)
                                                   Filter: (((note)::text ~~ '%internet%'::text) AND ((info)::text ~~ 'USA:% 200%'::text))
                                                   Rows Removed by Filter: 72
                                       ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=57)
                                             Index Cond: (id = mc.company_type_id)
                                             Heap Fetches: 57
                                 ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.19 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=57)
                                       Index Cond: (id = mi.info_type_id)
                                       Filter: ((info)::text = 'release dates'::text)
                           ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.36 rows=47 width=8) (actual time=0.025..0.028 rows=6 loops=57)
                                 Index Cond: (movie_id = t.id)
                     ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=328)
                           Index Cond: (id = mk.keyword_id)
                           Heap Fetches: 328
 Planning Time: 29.706 ms
 Execution Time: 732.792 ms
(46 rows)

SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=6434.72..6434.73 rows=1 width=64) (actual time=68.912..68.912 rows=1 loops=1)
   ->  Gather  (cost=6434.61..6434.72 rows=1 width=64) (actual time=68.729..71.185 rows=2 loops=1)
         Workers Planned: 1
         Workers Launched: 1
         ->  Partial Aggregate  (cost=5434.61..5434.62 rows=1 width=64) (actual time=62.852..62.853 rows=1 loops=2)
               ->  Nested Loop  (cost=2.84..5434.58 rows=5 width=60) (actual time=47.541..62.822 rows=18 loops=2)
                     ->  Nested Loop  (cost=2.42..5432.39 rows=5 width=64) (actual time=47.505..62.374 rows=18 loops=2)
                           ->  Nested Loop  (cost=1.99..5430.46 rows=1 width=76) (actual time=40.868..62.288 rows=2 loops=2)
                                 ->  Nested Loop  (cost=1.85..5430.22 rows=1 width=80) (actual time=40.853..62.266 rows=2 loops=2)
                                       ->  Nested Loop  (cost=1.41..5427.71 rows=1 width=29) (actual time=35.897..59.859 rows=13 loops=2)
                                             ->  Nested Loop  (cost=0.98..5426.78 rows=1 width=8) (actual time=35.856..59.269 rows=14 loops=2)
                                                   ->  Nested Loop  (cost=0.85..5426.62 rows=1 width=12) (actual time=35.811..59.164 rows=14 loops=2)
                                                         ->  Nested Loop  (cost=0.43..5424.56 rows=1 width=8) (actual time=34.946..57.024 rows=139 loops=2)
                                                               ->  Parallel Seq Scan on company_name cn  (cost=0.00..5068.50 rows=1 width=4) (actual time=34.871..46.707 rows=0 loops=2)
                                                                     Filter: (((country_code)::text = '[us]'::text) AND ((name)::text = 'YouTube'::text))
                                                                     Rows Removed by Filter: 117498
                                                               ->  Index Scan using company_id_movie_companies on movie_companies mc  (cost=0.43..356.04 rows=1 width=12) (actual time=0.146..20.527 rows=278 loops=1)
                                                                     Index Cond: (company_id = cn.id)
                                                                     Filter: (((note)::text ~~ '%(200%)%'::text) AND ((note)::text ~~ '%(worldwide)%'::text))
                                                                     Rows Removed by Filter: 1180
                                                         ->  Index Only Scan using movie_id_aka_title on aka_title at  (cost=0.42..2.04 rows=3 width=4) (actual time=0.014..0.014 rows=0 loops=278)
                                                               Index Cond: (movie_id = mc.movie_id)
                                                               Heap Fetches: 27
                                                   ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=27)
                                                         Index Cond: (id = mc.company_type_id)
                                                         Heap Fetches: 27
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..0.93 rows=1 width=21) (actual time=0.043..0.043 rows=1 loops=27)
                                                   Index Cond: (id = at.movie_id)
                                                   Filter: ((production_year >= 2005) AND (production_year <= 2010))
                                                   Rows Removed by Filter: 0
                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.51 rows=1 width=51) (actual time=0.174..0.184 rows=0 loops=26)
                                             Index Cond: (movie_id = t.id)
                                             Filter: (((note)::text ~~ '%internet%'::text) AND ((info)::text ~~ 'USA:% 200%'::text))
                                             Rows Removed by Filter: 19
                                 ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.19 rows=1 width=4) (actual time=0.012..0.012 rows=1 loops=3)
                                       Index Cond: (id = mi.info_type_id)
                                       Filter: ((info)::text = 'release dates'::text)
                           ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.46 rows=47 width=8) (actual time=0.045..0.051 rows=12 loops=3)
                                 Index Cond: (movie_id = t.id)
                     ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.023..0.023 rows=1 loops=37)
                           Index Cond: (id = mk.keyword_id)
                           Heap Fetches: 37
 Planning Time: 30.667 ms
 Execution Time: 71.897 ms
(44 rows)

SET
                                                                                                          QUERY PLAN                                                                                                          
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=271217.23..271217.24 rows=1 width=64) (actual time=1380.803..1380.803 rows=1 loops=1)
   ->  Gather  (cost=271217.01..271217.22 rows=2 width=64) (actual time=1380.673..1387.326 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=270217.01..270217.02 rows=1 width=64) (actual time=1373.126..1373.127 rows=1 loops=3)
               ->  Nested Loop  (cost=5.11..270216.63 rows=76 width=60) (actual time=318.493..1372.642 rows=757 loops=3)
                     Join Filter: (t.id = at.movie_id)
                     ->  Nested Loop  (cost=4.69..270201.06 rows=30 width=76) (actual time=311.468..1363.549 rows=2655 loops=3)
                           ->  Nested Loop  (cost=4.27..270187.90 rows=30 width=80) (actual time=311.389..1347.733 rows=2655 loops=3)
                                 ->  Nested Loop  (cost=3.84..270184.28 rows=2 width=72) (actual time=310.768..1332.737 rows=882 loops=3)
                                       ->  Nested Loop  (cost=3.71..270183.98 rows=2 width=76) (actual time=310.686..1329.515 rows=882 loops=3)
                                             ->  Nested Loop  (cost=3.29..270181.31 rows=6 width=80) (actual time=310.454..1314.368 rows=961 loops=3)
                                                   ->  Nested Loop  (cost=2.86..270180.68 rows=1 width=68) (actual time=310.356..1290.263 rows=594 loops=3)
                                                         ->  Hash Join  (cost=2.43..270164.10 rows=2 width=47) (actual time=310.243..1268.432 rows=594 loops=3)
                                                               Hash Cond: (mi.info_type_id = it1.id)
                                                               ->  Parallel Seq Scan on movie_info mi  (cost=0.00..270161.12 rows=200 width=51) (actual time=309.922..1267.441 rows=594 loops=3)
                                                                     Filter: ((info IS NOT NULL) AND ((note)::text ~~ '%internet%'::text) AND (((info)::text ~~ 'USA:% 199%'::text) OR ((info)::text ~~ 'USA:% 200%'::text)))
                                                                     Rows Removed by Filter: 4944646
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.093..0.093 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.056..0.067 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'release dates'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..8.29 rows=1 width=21) (actual time=0.035..0.035 rows=1 loops=1783)
                                                               Index Cond: (id = mi.movie_id)
                                                               Filter: (production_year > 1990)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.58 rows=5 width=12) (actual time=0.031..0.039 rows=2 loops=1782)
                                                         Index Cond: (movie_id = t.id)
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=2884)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((country_code)::text = '[us]'::text)
                                                   Rows Removed by Filter: 0
                                       ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=2647)
                                             Index Cond: (id = mc.company_type_id)
                                             Heap Fetches: 2647
                                 ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.34 rows=47 width=8) (actual time=0.015..0.016 rows=3 loops=2647)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=7964)
                                 Index Cond: (id = mk.keyword_id)
                                 Heap Fetches: 7964
                     ->  Index Only Scan using movie_id_aka_title on aka_title at  (cost=0.42..0.48 rows=3 width=4) (actual time=0.003..0.003 rows=0 loops=7964)
                           Index Cond: (movie_id = mk.movie_id)
                           Heap Fetches: 2271
 Planning Time: 30.134 ms
 Execution Time: 1388.104 ms
(46 rows)

SET
                                                                                               QUERY PLAN                                                                                               
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=241404.07..241404.08 rows=1 width=64) (actual time=1580.929..1580.930 rows=1 loops=1)
   ->  Gather  (cost=241403.85..241404.06 rows=2 width=64) (actual time=1580.742..1587.375 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=240403.85..240403.86 rows=1 width=64) (actual time=1573.350..1573.350 rows=1 loops=3)
               ->  Nested Loop  (cost=6.07..240394.49 rows=1873 width=38) (actual time=311.597..1571.810 rows=3782 loops=3)
                     Join Filter: (t.id = at.movie_id)
                     ->  Nested Loop  (cost=5.65..240025.58 rows=711 width=33) (actual time=299.711..1545.881 rows=8521 loops=3)
                           ->  Nested Loop  (cost=5.23..239713.69 rows=711 width=37) (actual time=299.624..1510.414 rows=8521 loops=3)
                                 ->  Hash Join  (cost=4.80..239612.38 rows=56 width=29) (actual time=299.226..1469.308 rows=3286 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Nested Loop  (cost=3.71..239610.99 rows=56 width=33) (actual time=298.995..1466.190 rows=3286 loops=3)
                                             ->  Nested Loop  (cost=3.29..239542.81 rows=153 width=37) (actual time=298.914..1415.918 rows=4792 loops=3)
                                                   ->  Nested Loop  (cost=2.86..239524.64 rows=29 width=25) (actual time=298.664..1325.632 rows=3554 loops=3)
                                                         ->  Hash Join  (cost=2.43..239268.80 rows=42 width=4) (actual time=298.564..1237.993 rows=3560 loops=3)
                                                               Hash Cond: (mi.info_type_id = it1.id)
                                                               ->  Parallel Seq Scan on movie_info mi  (cost=0.00..239253.38 rows=4774 width=8) (actual time=54.044..1234.719 rows=3603 loops=3)
                                                                     Filter: ((note)::text ~~ '%internet%'::text)
                                                                     Rows Removed by Filter: 4941637
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.069..0.069 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.048..0.059 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'release dates'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..6.09 rows=1 width=21) (actual time=0.023..0.023 rows=1 loops=10679)
                                                               Index Cond: (id = mi.movie_id)
                                                               Filter: (production_year > 1990)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.58 rows=5 width=12) (actual time=0.020..0.024 rows=1 loops=10662)
                                                         Index Cond: (movie_id = t.id)
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=14377)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((country_code)::text = '[us]'::text)
                                                   Rows Removed by Filter: 0
                                       ->  Hash  (cost=1.04..1.04 rows=4 width=4) (actual time=0.070..0.071 rows=4 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.046..0.047 rows=4 loops=3)
                                 ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.34 rows=47 width=8) (actual time=0.011..0.011 rows=3 loops=9857)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=25564)
                                 Index Cond: (id = mk.keyword_id)
                                 Heap Fetches: 25564
                     ->  Index Scan using movie_id_aka_title on aka_title at  (cost=0.42..0.48 rows=3 width=25) (actual time=0.002..0.003 rows=0 loops=25564)
                           Index Cond: (movie_id = mk.movie_id)
 Planning Time: 30.665 ms
 Execution Time: 1588.132 ms
(46 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3790.42..3790.43 rows=1 width=64) (actual time=829.940..829.940 rows=1 loops=1)
   ->  Nested Loop  (cost=9.46..3790.05 rows=74 width=33) (actual time=37.166..829.601 rows=385 loops=1)
         Join Filter: (n.id = an.person_id)
         ->  Nested Loop  (cost=9.03..3774.48 rows=32 width=25) (actual time=37.084..823.719 rows=323 loops=1)
               ->  Nested Loop  (cost=8.60..3759.93 rows=32 width=21) (actual time=36.986..816.779 rows=323 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=8.04..3755.95 rows=2 width=29) (actual time=36.910..812.978 rows=25 loops=1)
                           ->  Nested Loop  (cost=7.62..3753.72 rows=5 width=33) (actual time=36.456..812.074 rows=54 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.19..3753.12 rows=1 width=25) (actual time=29.309..810.325 rows=146 loops=1)
                                       ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.930..270.721 rows=41840 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.247..26.835 rows=1 loops=1)
                                                   Filter: ((keyword)::text = 'character-name-in-title'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.674..229.059 rows=41840 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=11541
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.949..7.949 rows=41840 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.012..0.012 rows=0 loops=41840)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: ((episode_nr >= 50) AND (episode_nr < 100))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.009..0.011 rows=0 loops=146)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.015..0.015 rows=0 loops=54)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.033..0.143 rows=13 loops=25)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.020..0.020 rows=1 loops=323)
                     Index Cond: (id = ci.person_id)
                     Heap Fetches: 323
         ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.46 rows=2 width=20) (actual time=0.015..0.017 rows=1 loops=323)
               Index Cond: (person_id = ci.person_id)
 Planning Time: 16.659 ms
 Execution Time: 830.642 ms
(38 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=5125.30..5125.31 rows=1 width=64) (actual time=51310.172..51310.172 rows=1 loops=1)
   ->  Nested Loop  (cost=9.46..5111.49 rows=2761 width=33) (actual time=12.365..49712.643 rows=3710592 loops=1)
         Join Filter: (n.id = an.person_id)
         ->  Nested Loop  (cost=9.03..4526.68 rows=1202 width=25) (actual time=12.284..33695.244 rows=2832555 loops=1)
               ->  Nested Loop  (cost=8.60..3979.90 rows=1202 width=21) (actual time=12.200..13536.342 rows=2832555 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=8.04..3852.77 rows=64 width=29) (actual time=11.235..3251.140 rows=68316 loops=1)
                           ->  Nested Loop  (cost=7.62..3773.45 rows=178 width=33) (actual time=11.100..1484.350 rows=148552 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.19..3752.95 rows=34 width=25) (actual time=10.975..907.484 rows=41840 loops=1)
                                       ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.937..271.640 rows=41840 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.330..26.352 rows=1 loops=1)
                                                   Filter: ((keyword)::text = 'character-name-in-title'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.599..230.108 rows=41840 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=11541
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.880..7.880 rows=41840 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.014..0.014 rows=1 loops=41840)
                                             Index Cond: (id = mk.movie_id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.008..0.011 rows=4 loops=41840)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.011..0.011 rows=0 loops=148552)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.010..0.136 rows=41 loops=68316)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=2832555)
                     Index Cond: (id = ci.person_id)
                     Heap Fetches: 2832555
         ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.46 rows=2 width=20) (actual time=0.004..0.005 rows=1 loops=2832555)
               Index Cond: (person_id = ci.person_id)
 Planning Time: 16.685 ms
 Execution Time: 51310.918 ms
(36 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4271.02..4271.03 rows=1 width=64) (actual time=4451.548..4451.548 rows=1 loops=1)
   ->  Nested Loop  (cost=9.46..4265.81 rows=1042 width=33) (actual time=12.306..4315.200 rows=319932 loops=1)
         Join Filter: (n.id = an.person_id)
         ->  Nested Loop  (cost=9.03..4044.93 rows=454 width=25) (actual time=12.237..3078.761 rows=221609 loops=1)
               ->  Nested Loop  (cost=8.60..3838.40 rows=454 width=21) (actual time=12.147..1630.803 rows=221609 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=8.04..3790.73 rows=24 width=29) (actual time=12.086..873.648 rows=8538 loops=1)
                           ->  Nested Loop  (cost=7.62..3760.87 rows=67 width=33) (actual time=11.169..806.375 rows=11406 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.19..3753.04 rows=13 width=25) (actual time=10.969..739.339 rows=6926 loops=1)
                                       ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.937..256.207 rows=41840 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.344..26.670 rows=1 loops=1)
                                                   Filter: ((keyword)::text = 'character-name-in-title'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.585..215.024 rows=41840 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=11541
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.858..7.858 rows=41840 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.011..0.011 rows=0 loops=41840)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: (episode_nr < 100)
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.006..0.008 rows=2 loops=6926)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=11406)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.008..0.080 rows=26 loops=8538)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=221609)
                     Index Cond: (id = ci.person_id)
                     Heap Fetches: 221609
         ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.46 rows=2 width=20) (actual time=0.004..0.005 rows=1 loops=221609)
               Index Cond: (person_id = ci.person_id)
 Planning Time: 16.859 ms
 Execution Time: 4452.240 ms
(38 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4132.51..4132.52 rows=1 width=64) (actual time=3655.015..3655.015 rows=1 loops=1)
   ->  Nested Loop  (cost=9.46..4128.69 rows=764 width=33) (actual time=12.349..3547.411 rows=249455 loops=1)
         Join Filter: (n.id = an.person_id)
         ->  Nested Loop  (cost=9.03..3967.16 rows=332 width=25) (actual time=12.277..2573.852 rows=169273 loops=1)
               ->  Nested Loop  (cost=8.60..3816.14 rows=332 width=21) (actual time=12.196..1445.056 rows=169273 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=8.04..3780.38 rows=18 width=29) (actual time=12.129..853.485 rows=6766 loops=1)
                           ->  Nested Loop  (cost=7.62..3758.55 rows=49 width=33) (actual time=11.283..802.106 rows=8661 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.19..3753.12 rows=9 width=25) (actual time=11.087..747.936 rows=5385 loops=1)
                                       ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=11.055..258.228 rows=41840 loops=1)
                                             ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.304..26.643 rows=1 loops=1)
                                                   Filter: ((keyword)::text = 'character-name-in-title'::text)
                                                   Rows Removed by Filter: 134169
                                             ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.743..216.989 rows=41840 loops=1)
                                                   Recheck Cond: (keyword_id = k.id)
                                                   Heap Blocks: exact=11541
                                                   ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=8.000..8.000 rows=41840 loops=1)
                                                         Index Cond: (keyword_id = k.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.011..0.011 rows=0 loops=41840)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: ((episode_nr >= 5) AND (episode_nr < 100))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.007..0.008 rows=2 loops=5385)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=8661)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.009..0.078 rows=25 loops=6766)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=169273)
                     Index Cond: (id = ci.person_id)
                     Heap Fetches: 169273
         ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.46 rows=2 width=20) (actual time=0.004..0.005 rows=1 loops=169273)
               Index Cond: (person_id = ci.person_id)
 Planning Time: 16.885 ms
 Execution Time: 3655.717 ms
(38 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4530.17..4530.18 rows=1 width=64) (actual time=34708.913..34708.913 rows=1 loops=1)
   ->  Nested Loop  (cost=9.03..4529.69 rows=97 width=15) (actual time=12.854..34550.713 rows=258289 loops=1)
         ->  Nested Loop  (cost=8.60..3979.90 rows=1202 width=4) (actual time=12.683..13195.376 rows=2832555 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=8.04..3852.77 rows=64 width=12) (actual time=11.693..3208.582 rows=68316 loops=1)
                     ->  Nested Loop  (cost=7.62..3773.45 rows=178 width=16) (actual time=11.553..1531.566 rows=148552 loops=1)
                           Join Filter: (t.id = mc.movie_id)
                           ->  Nested Loop  (cost=7.19..3752.95 rows=34 width=8) (actual time=11.423..962.610 rows=41840 loops=1)
                                 ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=11.392..279.199 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.438..26.653 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.946..237.862 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=8.228..8.228 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=41840)
                                       Index Cond: (id = mk.movie_id)
                                       Heap Fetches: 41840
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.008..0.011 rows=4 loops=41840)
                                 Index Cond: (movie_id = mk.movie_id)
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.011..0.011 rows=0 loops=148552)
                           Index Cond: (id = mc.company_id)
                           Filter: ((country_code)::text = '[us]'::text)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.009..0.132 rows=41 loops=68316)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.007..0.007 rows=0 loops=2832555)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ 'B%'::text)
               Rows Removed by Filter: 1
 Planning Time: 10.827 ms
 Execution Time: 34709.710 ms
(34 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4371.77..4371.78 rows=1 width=64) (actual time=32281.408..32281.409 rows=1 loops=1)
   ->  Nested Loop  (cost=9.03..4371.77 rows=1 width=15) (actual time=27.165..32242.127 rows=52306 loops=1)
         ->  Nested Loop  (cost=8.60..4371.31 rows=1 width=27) (actual time=27.098..31980.004 rows=52306 loops=1)
               ->  Nested Loop  (cost=8.18..4370.87 rows=1 width=31) (actual time=27.044..31482.513 rows=52306 loops=1)
                     ->  Nested Loop  (cost=7.75..4370.30 rows=1 width=23) (actual time=27.008..31320.473 rows=6642 loops=1)
                           ->  Nested Loop  (cost=7.32..3800.84 rows=1245 width=12) (actual time=11.067..11860.293 rows=1038393 loops=1)
                                 ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=11.017..266.283 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.326..26.436 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.683..223.604 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.934..7.934 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.017..0.262 rows=25 loops=41840)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.018..0.018 rows=0 loops=1038393)
                                 Index Cond: (id = ci.person_id)
                                 Filter: ((name)::text ~~ 'Z%'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.52 rows=5 width=8) (actual time=0.014..0.021 rows=8 loops=6642)
                           Index Cond: (movie_id = ci.movie_id)
               ->  Index Only Scan using company_name_pkey on company_name cn  (cost=0.42..0.44 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=52306)
                     Index Cond: (id = mc.company_id)
                     Heap Fetches: 52306
         ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.45 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=52306)
               Index Cond: (id = ci.movie_id)
               Heap Fetches: 52306
 Planning Time: 10.835 ms
 Execution Time: 32282.071 ms
(31 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4371.77..4371.78 rows=1 width=64) (actual time=31344.743..31344.744 rows=1 loops=1)
   ->  Nested Loop  (cost=9.03..4371.77 rows=1 width=15) (actual time=226.178..31341.957 rows=1918 loops=1)
         ->  Nested Loop  (cost=8.60..4371.31 rows=1 width=27) (actual time=226.105..31327.950 rows=1918 loops=1)
               ->  Nested Loop  (cost=8.18..4370.87 rows=1 width=31) (actual time=226.045..31292.883 rows=1918 loops=1)
                     ->  Nested Loop  (cost=7.75..4370.30 rows=1 width=23) (actual time=225.997..31282.103 rows=250 loops=1)
                           ->  Nested Loop  (cost=7.32..3800.84 rows=1245 width=12) (actual time=10.889..11879.653 rows=1038393 loops=1)
                                 ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.841..265.921 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.306..26.704 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.527..223.165 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.810..7.810 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.017..0.263 rows=25 loops=41840)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.018..0.018 rows=0 loops=1038393)
                                 Index Cond: (id = ci.person_id)
                                 Filter: ((name)::text ~~ 'X%'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.52 rows=5 width=8) (actual time=0.027..0.037 rows=8 loops=250)
                           Index Cond: (movie_id = ci.movie_id)
               ->  Index Only Scan using company_name_pkey on company_name cn  (cost=0.42..0.44 rows=1 width=4) (actual time=0.017..0.017 rows=1 loops=1918)
                     Index Cond: (id = mc.company_id)
                     Heap Fetches: 1918
         ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.45 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=1918)
               Index Cond: (id = ci.movie_id)
               Heap Fetches: 1918
 Planning Time: 10.704 ms
 Execution Time: 31345.379 ms
(31 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4371.77..4371.78 rows=1 width=32) (actual time=31692.416..31692.417 rows=1 loops=1)
   ->  Nested Loop  (cost=9.03..4371.77 rows=1 width=15) (actual time=130.055..31678.969 rows=11538 loops=1)
         ->  Nested Loop  (cost=8.60..4371.31 rows=1 width=27) (actual time=129.986..31595.380 rows=11538 loops=1)
               ->  Nested Loop  (cost=8.18..4370.87 rows=1 width=31) (actual time=129.913..31418.981 rows=11538 loops=1)
                     ->  Nested Loop  (cost=7.75..4370.30 rows=1 width=23) (actual time=129.864..31355.696 rows=1972 loops=1)
                           ->  Nested Loop  (cost=7.32..3800.84 rows=1245 width=12) (actual time=10.934..11833.306 rows=1038393 loops=1)
                                 ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.886..266.205 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.307..26.384 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.571..223.731 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.851..7.852 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.017..0.262 rows=25 loops=41840)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.018..0.018 rows=0 loops=1038393)
                                 Index Cond: (id = ci.person_id)
                                 Filter: ((name)::text ~~ '%Bert%'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.52 rows=5 width=8) (actual time=0.020..0.028 rows=6 loops=1972)
                           Index Cond: (movie_id = ci.movie_id)
               ->  Index Only Scan using company_name_pkey on company_name cn  (cost=0.42..0.44 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=11538)
                     Index Cond: (id = mc.company_id)
                     Heap Fetches: 11538
         ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.45 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=11538)
               Index Cond: (id = ci.movie_id)
               Heap Fetches: 11538
 Planning Time: 10.923 ms
 Execution Time: 31693.072 ms
(31 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4529.69..4529.70 rows=1 width=32) (actual time=33511.439..33511.440 rows=1 loops=1)
   ->  Nested Loop  (cost=9.03..4526.68 rows=1202 width=15) (actual time=12.162..32333.263 rows=2832555 loops=1)
         ->  Nested Loop  (cost=8.60..3979.90 rows=1202 width=4) (actual time=12.076..13287.639 rows=2832555 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=8.04..3852.77 rows=64 width=12) (actual time=11.148..3065.838 rows=68316 loops=1)
                     ->  Nested Loop  (cost=7.62..3773.45 rows=178 width=16) (actual time=11.017..1450.092 rows=148552 loops=1)
                           Join Filter: (t.id = mc.movie_id)
                           ->  Nested Loop  (cost=7.19..3752.95 rows=34 width=8) (actual time=10.888..888.795 rows=41840 loops=1)
                                 ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.859..264.969 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.292..26.501 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.558..223.999 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.823..7.823 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=41840)
                                       Index Cond: (id = mk.movie_id)
                                       Heap Fetches: 41840
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.008..0.011 rows=4 loops=41840)
                                 Index Cond: (movie_id = mk.movie_id)
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.010..0.010 rows=0 loops=148552)
                           Index Cond: (id = mc.company_id)
                           Filter: ((country_code)::text = '[us]'::text)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.009..0.136 rows=41 loops=68316)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=19) (actual time=0.006..0.006 rows=1 loops=2832555)
               Index Cond: (id = ci.person_id)
 Planning Time: 10.539 ms
 Execution Time: 33512.099 ms
(32 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4654.76..4654.77 rows=1 width=32) (actual time=37916.019..37916.020 rows=1 loops=1)
   ->  Nested Loop  (cost=9.03..4653.75 rows=401 width=15) (actual time=15.285..37522.802 rows=1113120 loops=1)
         ->  Nested Loop  (cost=8.61..4476.08 rows=401 width=19) (actual time=15.221..34067.434 rows=1113120 loops=1)
               ->  Nested Loop  (cost=8.18..4389.95 rows=151 width=27) (actual time=11.111..32586.924 rows=149494 loops=1)
                     ->  Nested Loop  (cost=7.75..3820.49 rows=1245 width=16) (actual time=11.038..12791.177 rows=1038393 loops=1)
                           Join Filter: (t.id = ci.movie_id)
                           ->  Nested Loop  (cost=7.19..3752.95 rows=34 width=8) (actual time=10.988..899.007 rows=41840 loops=1)
                                 ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.948..269.036 rows=41840 loops=1)
                                       ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.296..26.538 rows=1 loops=1)
                                             Filter: ((keyword)::text = 'character-name-in-title'::text)
                                             Rows Removed by Filter: 134169
                                       ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.643..226.025 rows=41840 loops=1)
                                             Recheck Cond: (keyword_id = k.id)
                                             Heap Blocks: exact=11541
                                             ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.916..7.916 rows=41840 loops=1)
                                                   Index Cond: (keyword_id = k.id)
                                 ->  Index Only Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=41840)
                                       Index Cond: (id = mk.movie_id)
                                       Heap Fetches: 41840
                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.018..0.265 rows=25 loops=41840)
                                 Index Cond: (movie_id = mk.movie_id)
                     ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.018..0.018 rows=0 loops=1038393)
                           Index Cond: (id = ci.person_id)
                           Filter: ((name)::text ~~ '%B%'::text)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.52 rows=5 width=8) (actual time=0.005..0.008 rows=7 loops=149494)
                     Index Cond: (movie_id = ci.movie_id)
         ->  Index Only Scan using company_name_pkey on company_name cn  (cost=0.42..0.44 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1113120)
               Index Cond: (id = mc.company_id)
               Heap Fetches: 1113120
 Planning Time: 10.845 ms
 Execution Time: 37916.697 ms
(32 rows)

SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=111692.15..111692.16 rows=1 width=96) (actual time=13840.967..13840.967 rows=1 loops=1)
   ->  Nested Loop  (cost=1006.71..111692.14 rows=1 width=65) (actual time=329.555..13839.446 rows=410 loops=1)
         ->  Gather  (cost=1006.28..111691.68 rows=1 width=60) (actual time=329.452..13831.146 rows=410 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Nested Loop  (cost=6.28..110691.58 rows=1 width=60) (actual time=357.678..13827.514 rows=137 loops=3)
                     ->  Nested Loop  (cost=5.85..108696.70 rows=3377 width=64) (actual time=2.102..12671.956 rows=35780 loops=3)
                           ->  Hash Join  (cost=5.29..74146.13 rows=1468 width=56) (actual time=1.269..3942.299 rows=15144 loops=3)
                                 Hash Cond: (mi.info_type_id = it1.id)
                                 ->  Nested Loop  (cost=2.86..73692.04 rows=165842 width=60) (actual time=0.252..3667.807 rows=2310111 loops=3)
                                       ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=9) (actual time=0.127..213.238 rows=153308 loops=3)
                                             Hash Cond: (mi_idx.info_type_id = it2.id)
                                             ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=13) (actual time=0.036..93.770 rows=460012 loops=3)
                                             ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.037..0.037 rows=1 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.020..0.022 rows=1 loops=3)
                                                         Filter: ((info)::text = 'votes'::text)
                                                         Rows Removed by Filter: 112
                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..11.06 rows=42 width=51) (actual time=0.005..0.019 rows=15 loops=459925)
                                             Index Cond: (movie_id = mi_idx.movie_id)
                                 ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.079..0.079 rows=1 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.055..0.057 rows=1 loops=3)
                                             Filter: ((info)::text = 'budget'::text)
                                             Rows Removed by Filter: 112
                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..23.52 rows=2 width=8) (actual time=0.333..0.574 rows=2 loops=45431)
                                 Index Cond: (movie_id = mi.movie_id)
                                 Filter: ((note)::text = ANY ('{(producer),"(executive producer)"}'::text[]))
                                 Rows Removed by Filter: 38
                     ->  Index Scan using name_pkey on name n  (cost=0.43..0.59 rows=1 width=4) (actual time=0.031..0.031 rows=0 loops=107339)
                           Index Cond: (id = ci.person_id)
                           Filter: (((name)::text ~~ '%Tim%'::text) AND ((gender)::text = 'm'::text))
                           Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.46 rows=1 width=21) (actual time=0.032..0.032 rows=1 loops=410)
               Index Cond: (id = mi.movie_id)
 Planning Time: 10.423 ms
 Execution Time: 13847.241 ms
(37 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=17462.60..17462.61 rows=1 width=96) (actual time=523.090..523.090 rows=1 loops=1)
   ->  Nested Loop  (cost=1004.43..17462.59 rows=1 width=65) (actual time=265.060..523.025 rows=11 loops=1)
         ->  Nested Loop  (cost=1004.00..17461.90 rows=1 width=69) (actual time=80.766..514.475 rows=268 loops=1)
               ->  Gather  (cost=1003.43..17437.17 rows=1 width=77) (actual time=79.661..353.453 rows=358 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Nested Loop  (cost=3.43..16437.07 rows=1 width=77) (actual time=53.332..457.086 rows=119 loops=3)
                           ->  Nested Loop  (cost=3.29..16435.43 rows=10 width=81) (actual time=53.295..456.454 rows=119 loops=3)
                                 ->  Nested Loop  (cost=2.86..15789.08 rows=56 width=30) (actual time=2.021..282.391 rows=2051 loops=3)
                                       ->  Hash Join  (cost=2.43..15179.85 rows=178 width=9) (actual time=0.297..144.611 rows=5283 loops=3)
                                             Hash Cond: (mi_idx.info_type_id = it2.id)
                                             ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..15122.68 rows=20101 width=13) (actual time=0.067..137.271 rows=17883 loops=3)
                                                   Filter: ((info)::text > '8.0'::text)
                                                   Rows Removed by Filter: 442129
                                             ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.063..0.063 rows=1 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.038..0.040 rows=1 loops=3)
                                                         Filter: ((info)::text = 'rating'::text)
                                                         Rows Removed by Filter: 112
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..3.42 rows=1 width=21) (actual time=0.025..0.025 rows=0 loops=15849)
                                             Index Cond: (id = mi_idx.movie_id)
                                             Filter: ((production_year >= 2008) AND (production_year <= 2014))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..11.53 rows=1 width=51) (actual time=0.084..0.084 rows=0 loops=6152)
                                       Index Cond: (movie_id = t.id)
                                       Filter: ((note IS NULL) AND ((info)::text = ANY ('{Horror,Thriller}'::text[])))
                                       Rows Removed by Filter: 18
                           ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=358)
                                 Index Cond: (id = mi.info_type_id)
                                 Filter: ((info)::text = 'genres'::text)
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..24.72 rows=1 width=8) (actual time=0.358..0.466 rows=1 loops=358)
                     Index Cond: (movie_id = t.id)
                     Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                     Rows Removed by Filter: 34
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.69 rows=1 width=4) (actual time=0.031..0.031 rows=0 loops=268)
               Index Cond: (id = ci.person_id)
               Filter: ((gender IS NOT NULL) AND ((gender)::text = 'f'::text))
               Rows Removed by Filter: 1
 Planning Time: 10.191 ms
 Execution Time: 529.991 ms
(40 rows)

SET
                                                                                          QUERY PLAN                                                                                          
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=74751.79..74751.80 rows=1 width=96) (actual time=17522.848..17522.848 rows=1 loops=1)
   ->  Gather  (cost=74751.57..74751.78 rows=2 width=96) (actual time=17518.792..17530.486 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=73751.57..73751.58 rows=1 width=96) (actual time=17514.122..17514.122 rows=1 loops=3)
               ->  Nested Loop  (cost=6.71..73751.49 rows=11 width=65) (actual time=51.150..17500.430 rows=9358 loops=3)
                     ->  Nested Loop  (cost=6.28..73732.96 rows=27 width=69) (actual time=23.682..17031.731 rows=18052 loops=3)
                           ->  Nested Loop  (cost=5.72..73229.83 rows=21 width=77) (actual time=1.484..4320.792 rows=34172 loops=3)
                                 Join Filter: (mi.movie_id = t.id)
                                 ->  Hash Join  (cost=5.29..73217.55 rows=21 width=56) (actual time=1.368..3800.468 rows=34172 loops=3)
                                       Hash Cond: (mi.info_type_id = it1.id)
                                       ->  Nested Loop  (cost=2.86..73208.58 rows=2405 width=60) (actual time=1.137..3771.650 rows=34964 loops=3)
                                             ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=9) (actual time=0.130..253.521 rows=153308 loops=3)
                                                   Hash Cond: (mi_idx.info_type_id = it2.id)
                                                   ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=13) (actual time=0.036..99.358 rows=460012 loops=3)
                                                   ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.039..0.039 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.020..0.022 rows=1 loops=3)
                                                               Filter: ((info)::text = 'votes'::text)
                                                               Rows Removed by Filter: 112
                                             ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..11.38 rows=1 width=51) (actual time=0.022..0.022 rows=0 loops=459925)
                                                   Index Cond: (movie_id = mi_idx.movie_id)
                                                   Filter: ((info)::text = ANY ('{Horror,Action,Sci-Fi,Thriller,Crime,War}'::text[]))
                                                   Rows Removed by Filter: 15
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.079..0.079 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.045..0.057 rows=1 loops=3)
                                                   Filter: ((info)::text = 'genres'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=21) (actual time=0.014..0.014 rows=1 loops=102516)
                                       Index Cond: (id = mi_idx.movie_id)
                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..23.95 rows=1 width=8) (actual time=0.317..0.371 rows=1 loops=102516)
                                 Index Cond: (movie_id = t.id)
                                 Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                 Rows Removed by Filter: 39
                     ->  Index Scan using name_pkey on name n  (cost=0.43..0.69 rows=1 width=4) (actual time=0.025..0.025 rows=1 loops=54155)
                           Index Cond: (id = ci.person_id)
                           Filter: ((gender)::text = 'm'::text)
                           Rows Removed by Filter: 0
 Planning Time: 10.291 ms
 Execution Time: 17531.134 ms
(41 rows)

SET
                                                                                                QUERY PLAN                                                                                                 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=85507.29..85507.30 rows=1 width=64) (actual time=582.013..582.013 rows=1 loops=1)
   ->  Nested Loop  (cost=1004.44..85507.29 rows=1 width=32) (actual time=233.498..581.873 rows=184 loops=1)
         ->  Nested Loop  (cost=1004.30..85507.10 rows=1 width=36) (actual time=233.462..581.420 rows=184 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=1003.86..85479.65 rows=1 width=44) (actual time=233.357..569.845 rows=77 loops=1)
                     ->  Nested Loop  (cost=1003.44..85478.45 rows=1 width=48) (actual time=233.287..568.612 rows=79 loops=1)
                           Join Filter: (t.id = mc.movie_id)
                           ->  Nested Loop  (cost=1003.01..85475.72 rows=1 width=40) (actual time=232.849..565.891 rows=102 loops=1)
                                 ->  Gather  (cost=1002.58..85474.30 rows=1 width=44) (actual time=231.708..567.539 rows=115 loops=1)
                                       Workers Planned: 2
                                       Workers Launched: 2
                                       ->  Nested Loop  (cost=2.58..84474.20 rows=1 width=44) (actual time=232.541..568.967 rows=38 loops=3)
                                             ->  Hash Join  (cost=2.15..84471.40 rows=2 width=23) (actual time=223.475..565.703 rows=142 loops=3)
                                                   Hash Cond: (ci.role_id = rt.id)
                                                   ->  Nested Loop  (cost=0.99..84470.16 rows=19 width=27) (actual time=223.235..565.371 rows=142 loops=3)
                                                         Join Filter: (n.id = ci.person_id)
                                                         ->  Nested Loop  (cost=0.42..82155.48 rows=9 width=23) (actual time=216.893..542.548 rows=519 loops=3)
                                                               ->  Parallel Seq Scan on name n  (cost=0.00..81659.82 rows=40 width=19) (actual time=216.101..514.872 rows=2256 loops=3)
                                                                     Filter: (((name)::text ~~ '%Ang%'::text) AND ((gender)::text = 'f'::text))
                                                                     Rows Removed by Filter: 1386908
                                                               ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..12.37 rows=2 width=4) (actual time=0.011..0.011 rows=0 loops=6768)
                                                                     Index Cond: (person_id = n.id)
                                                                     Heap Fetches: 1558
                                                         ->  Index Scan using person_id_cast_info on cast_info ci  (cost=0.56..257.04 rows=12 width=16) (actual time=0.041..0.043 rows=0 loops=1558)
                                                               Index Cond: (person_id = an.person_id)
                                                               Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                               Rows Removed by Filter: 44
                                                   ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.070..0.070 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.036..0.038 rows=1 loops=3)
                                                               Filter: ((role)::text = 'actress'::text)
                                                               Rows Removed by Filter: 11
                                             ->  Index Scan using title_pkey on title t  (cost=0.43..1.40 rows=1 width=21) (actual time=0.022..0.022 rows=0 loops=425)
                                                   Index Cond: (id = ci.movie_id)
                                                   Filter: ((production_year >= 2005) AND (production_year <= 2009))
                                                   Rows Removed by Filter: 1
                                 ->  Index Only Scan using char_name_pkey on char_name chn  (cost=0.43..1.42 rows=1 width=4) (actual time=0.016..0.016 rows=1 loops=115)
                                       Index Cond: (id = ci.person_role_id)
                                       Heap Fetches: 102
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.72 rows=1 width=8) (actual time=0.020..0.026 rows=1 loops=102)
                                 Index Cond: (movie_id = ci.movie_id)
                                 Filter: ((note IS NOT NULL) AND (((note)::text ~~ '%(USA)%'::text) OR ((note)::text ~~ '%(worldwide)%'::text)))
                                 Rows Removed by Filter: 6
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.20 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=79)
                           Index Cond: (id = mc.company_id)
                           Filter: ((country_code)::text = '[us]'::text)
                           Rows Removed by Filter: 0
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..27.43 rows=2 width=8) (actual time=0.043..0.149 rows=2 loops=77)
                     Index Cond: (movie_id = ci.movie_id)
                     Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%200%'::text) OR ((info)::text ~~ 'USA:%200%'::text)))
                     Rows Removed by Filter: 166
         ->  Index Scan using info_type_pkey on info_type it  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=184)
               Index Cond: (id = mi.info_type_id)
               Filter: ((info)::text = 'release dates'::text)
 Planning Time: 50.156 ms
 Execution Time: 586.360 ms
(56 rows)

SET
                                                                                                   QUERY PLAN                                                                                                   
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=55722.95..55722.96 rows=1 width=64) (actual time=282.596..282.597 rows=1 loops=1)
   ->  Nested Loop  (cost=1003.41..55722.94 rows=1 width=32) (actual time=232.926..282.576 rows=15 loops=1)
         ->  Nested Loop  (cost=1003.28..55722.77 rows=1 width=36) (actual time=232.869..282.487 rows=15 loops=1)
               Join Filter: (ci.person_id = n.id)
               ->  Nested Loop  (cost=1002.85..55721.23 rows=1 width=29) (actual time=220.994..280.422 rows=275 loops=1)
                     ->  Nested Loop  (cost=1002.70..55721.05 rows=1 width=33) (actual time=220.959..279.830 rows=275 loops=1)
                           Join Filter: (t.id = mi.movie_id)
                           ->  Nested Loop  (cost=1002.27..55693.47 rows=1 width=41) (actual time=220.817..252.397 rows=275 loops=1)
                                 ->  Nested Loop  (cost=1001.85..55692.20 rows=1 width=45) (actual time=220.756..251.263 rows=275 loops=1)
                                       ->  Nested Loop  (cost=1001.42..55690.54 rows=1 width=41) (actual time=220.682..249.185 rows=99 loops=1)
                                             ->  Nested Loop  (cost=1001.00..55689.08 rows=1 width=45) (actual time=220.587..246.756 rows=100 loops=1)
                                                   Join Filter: (t.id = ci.movie_id)
                                                   ->  Gather  (cost=1000.43..55647.01 rows=1 width=29) (actual time=220.494..243.756 rows=4 loops=1)
                                                         Workers Planned: 2
                                                         Workers Launched: 2
                                                         ->  Nested Loop  (cost=0.43..54646.91 rows=1 width=29) (actual time=235.724..262.638 rows=1 loops=3)
                                                               ->  Parallel Seq Scan on title t  (cost=0.00..54433.61 rows=10 width=21) (actual time=35.345..262.431 rows=2 loops=3)
                                                                     Filter: ((production_year >= 2007) AND (production_year <= 2008) AND ((title)::text ~~ '%Kung%Fu%Panda%'::text))
                                                                     Rows Removed by Filter: 842768
                                                               ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..21.32 rows=1 width=8) (actual time=0.082..0.086 rows=1 loops=7)
                                                                     Index Cond: (movie_id = t.id)
                                                                     Filter: (((note)::text ~~ '%(200%)%'::text) AND (((note)::text ~~ '%(USA)%'::text) OR ((note)::text ~~ '%(worldwide)%'::text)))
                                                                     Rows Removed by Filter: 6
                                                   ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..42.06 rows=1 width=16) (actual time=0.033..1.184 rows=25 loops=4)
                                                         Index Cond: (movie_id = mc.movie_id)
                                                         Filter: ((note)::text = '(voice)'::text)
                                                         Rows Removed by Filter: 127
                                             ->  Index Only Scan using char_name_pkey on char_name chn  (cost=0.43..1.46 rows=1 width=4) (actual time=0.023..0.023 rows=1 loops=100)
                                                   Index Cond: (id = ci.person_role_id)
                                                   Heap Fetches: 99
                                       ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..1.64 rows=2 width=4) (actual time=0.015..0.020 rows=3 loops=99)
                                             Index Cond: (person_id = ci.person_id)
                                             Heap Fetches: 275
                                 ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.27 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=275)
                                       Index Cond: (id = mc.company_id)
                                       Filter: ((country_code)::text = '[us]'::text)
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..27.56 rows=1 width=8) (actual time=0.017..0.099 rows=1 loops=275)
                                 Index Cond: (movie_id = ci.movie_id)
                                 Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%2007%'::text) OR ((info)::text ~~ 'USA:%2008%'::text)))
                                 Rows Removed by Filter: 295
                     ->  Index Scan using info_type_pkey on info_type it  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=275)
                           Index Cond: (id = mi.info_type_id)
                           Filter: ((info)::text = 'release dates'::text)
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.53 rows=1 width=19) (actual time=0.007..0.007 rows=0 loops=275)
                     Index Cond: (id = an.person_id)
                     Filter: (((name)::text ~~ '%Angel%'::text) AND ((gender)::text = 'f'::text))
                     Rows Removed by Filter: 1
         ->  Index Scan using role_type_pkey on role_type rt  (cost=0.14..0.16 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=15)
               Index Cond: (id = ci.role_id)
               Filter: ((role)::text = 'actress'::text)
 Planning Time: 48.972 ms
 Execution Time: 285.154 ms
(52 rows)

SET
                                                                                                           QUERY PLAN                                                                                                           
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=224820.56..224820.57 rows=1 width=64) (actual time=4010.516..4010.516 rows=1 loops=1)
   ->  Gather  (cost=224820.34..224820.55 rows=2 width=64) (actual time=3976.340..4015.624 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=223820.34..223820.35 rows=1 width=64) (actual time=3989.341..3989.341 rows=1 loops=3)
               ->  Nested Loop  (cost=135386.97..223820.33 rows=2 width=32) (actual time=3004.776..3988.633 rows=1192 loops=3)
                     Join Filter: (n.id = an.person_id)
                     ->  Nested Loop  (cost=135386.54..223818.68 rows=1 width=40) (actual time=2989.616..3983.459 rows=877 loops=3)
                           ->  Nested Loop  (cost=135386.12..223816.35 rows=2 width=44) (actual time=2988.779..3965.732 rows=2862 loops=3)
                                 ->  Hash Join  (cost=135385.69..223813.63 rows=1 width=52) (actual time=2931.307..3955.065 rows=710 loops=3)
                                       Hash Cond: (mi.info_type_id = it.id)
                                       ->  Nested Loop  (cost=135383.27..223811.07 rows=52 width=56) (actual time=2931.059..3954.222 rows=710 loops=3)
                                             ->  Nested Loop  (cost=135382.83..221277.71 rows=93 width=48) (actual time=2923.463..3882.352 rows=1116 loops=3)
                                                   ->  Nested Loop  (cost=135382.40..221003.48 rows=193 width=52) (actual time=2923.336..3864.176 rows=1229 loops=3)
                                                         ->  Hash Join  (cost=135381.97..195421.31 rows=16716 width=33) (actual time=2922.252..3498.685 rows=56136 loops=3)
                                                               Hash Cond: (t.id = ci.movie_id)
                                                               ->  Parallel Seq Scan on title t  (cost=0.00..49166.29 rows=575821 width=21) (actual time=0.052..281.818 rows=460484 loops=3)
                                                                     Filter: (production_year > 2000)
                                                                     Rows Removed by Filter: 382286
                                                               ->  Hash  (cost=134105.54..134105.54 rows=73395 width=12) (actual time=2919.517..2919.517 rows=276166 loops=3)
                                                                     Buckets: 131072 (originally 131072)  Batches: 4 (originally 2)  Memory Usage: 3984kB
                                                                     ->  Nested Loop  (cost=0.56..134105.54 rows=73395 width=12) (actual time=0.294..2778.786 rows=276166 loops=3)
                                                                           ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.041..0.046 rows=1 loops=3)
                                                                                 Filter: ((role)::text = 'actress'::text)
                                                                                 Rows Removed by Filter: 11
                                                                           ->  Index Scan using role_id_cast_info on cast_info ci  (cost=0.56..133303.71 rows=80067 width=16) (actual time=0.250..2740.743 rows=276166 loops=3)
                                                                                 Index Cond: (role_id = rt.id)
                                                                                 Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                                 Rows Removed by Filter: 7175807
                                                         ->  Index Scan using name_pkey on name n  (cost=0.43..1.53 rows=1 width=19) (actual time=0.006..0.006 rows=0 loops=168407)
                                                               Index Cond: (id = ci.person_id)
                                                               Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                                               Rows Removed by Filter: 1
                                                   ->  Index Only Scan using char_name_pkey on char_name chn  (cost=0.43..1.42 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=3686)
                                                         Index Cond: (id = ci.person_role_id)
                                                         Heap Fetches: 3349
                                             ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..27.22 rows=2 width=8) (actual time=0.045..0.063 rows=1 loops=3349)
                                                   Index Cond: (movie_id = t.id)
                                                   Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%200%'::text) OR ((info)::text ~~ 'USA:%200%'::text)))
                                                   Rows Removed by Filter: 15
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.083..0.083 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.049..0.060 rows=1 loops=3)
                                                   Filter: ((info)::text = 'release dates'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.67 rows=5 width=8) (actual time=0.010..0.013 rows=4 loops=2129)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.16 rows=1 width=4) (actual time=0.006..0.006 rows=0 loops=8585)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..1.63 rows=2 width=4) (actual time=0.004..0.005 rows=1 loops=2632)
                           Index Cond: (person_id = ci.person_id)
                           Heap Fetches: 3575
 Planning Time: 48.631 ms
 Execution Time: 4016.468 ms
(56 rows)

SET
                                                                                                           QUERY PLAN                                                                                                           
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=281048.09..281048.10 rows=1 width=64) (actual time=13586.418..13586.418 rows=1 loops=1)
   ->  Gather  (cost=281047.87..281048.08 rows=2 width=64) (actual time=13586.378..13586.590 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=280047.87..280047.88 rows=1 width=64) (actual time=12484.419..12484.419 rows=1 loops=3)
               ->  Nested Loop  (cost=135386.97..280042.47 rows=1080 width=32) (actual time=2898.030..12289.859 rows=586882 loops=3)
                     ->  Nested Loop  (cost=135386.54..279269.61 rows=470 width=40) (actual time=2897.844..11230.466 rows=262348 loops=3)
                           ->  Nested Loop  (cost=135386.12..277763.14 rows=1294 width=44) (actual time=2897.328..7183.510 rows=1076352 loops=3)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Hash Join  (cost=135385.69..277101.59 rows=247 width=52) (actual time=2896.998..6088.775 rows=113945 loops=3)
                                       Hash Cond: (mi.info_type_id = it.id)
                                       ->  Nested Loop  (cost=135383.27..277023.18 rows=27899 width=56) (actual time=2896.731..5974.127 rows=540998 loops=3)
                                             ->  Nested Loop  (cost=135382.83..226386.57 rows=1846 width=48) (actual time=2896.640..4839.576 rows=53102 loops=3)
                                                   ->  Nested Loop  (cost=135382.40..220961.69 rows=3818 width=52) (actual time=2896.534..4137.083 rows=56088 loops=3)
                                                         ->  Hash Join  (cost=135381.97..195421.31 rows=16716 width=33) (actual time=2896.431..3538.705 rows=56136 loops=3)
                                                               Hash Cond: (t.id = ci.movie_id)
                                                               ->  Parallel Seq Scan on title t  (cost=0.00..49166.29 rows=575821 width=21) (actual time=0.045..291.047 rows=460484 loops=3)
                                                                     Filter: (production_year > 2000)
                                                                     Rows Removed by Filter: 382286
                                                               ->  Hash  (cost=134105.54..134105.54 rows=73395 width=12) (actual time=2893.749..2893.749 rows=276166 loops=3)
                                                                     Buckets: 131072 (originally 131072)  Batches: 4 (originally 2)  Memory Usage: 3984kB
                                                                     ->  Nested Loop  (cost=0.56..134105.54 rows=73395 width=12) (actual time=0.309..2760.077 rows=276166 loops=3)
                                                                           ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.033..0.038 rows=1 loops=3)
                                                                                 Filter: ((role)::text = 'actress'::text)
                                                                                 Rows Removed by Filter: 11
                                                                           ->  Index Scan using role_id_cast_info on cast_info ci  (cost=0.56..133303.71 rows=80067 width=16) (actual time=0.268..2722.271 rows=276166 loops=3)
                                                                                 Index Cond: (role_id = rt.id)
                                                                                 Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                                 Rows Removed by Filter: 7175807
                                                         ->  Index Scan using name_pkey on name n  (cost=0.43..1.53 rows=1 width=19) (actual time=0.010..0.010 rows=1 loops=168407)
                                                               Index Cond: (id = ci.person_id)
                                                               Filter: ((gender)::text = 'f'::text)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Only Scan using char_name_pkey on char_name chn  (cost=0.43..1.42 rows=1 width=4) (actual time=0.012..0.012 rows=1 loops=168264)
                                                         Index Cond: (id = ci.person_role_id)
                                                         Heap Fetches: 159307
                                             ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..27.01 rows=42 width=8) (actual time=0.007..0.018 rows=10 loops=159307)
                                                   Index Cond: (movie_id = t.id)
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.078..0.078 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.048..0.058 rows=1 loops=3)
                                                   Filter: ((info)::text = 'release dates'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.62 rows=5 width=8) (actual time=0.004..0.007 rows=9 loops=341836)
                                       Index Cond: (movie_id = mi.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.16 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=3229056)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..1.62 rows=2 width=4) (actual time=0.003..0.003 rows=2 loops=787043)
                           Index Cond: (person_id = n.id)
                           Heap Fetches: 1760645
 Planning Time: 52.073 ms
 Execution Time: 13587.747 ms
(54 rows)

SET
                                                                                                 QUERY PLAN                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=19541.81..19541.82 rows=1 width=68) (actual time=163.828..163.829 rows=1 loops=1)
   ->  Gather  (cost=19541.58..19541.79 rows=2 width=68) (actual time=143.902..165.681 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=18541.58..18541.59 rows=1 width=68) (actual time=147.282..147.282 rows=1 loops=3)
               ->  Nested Loop  (cost=4.35..18541.23 rows=47 width=45) (actual time=137.082..147.200 rows=47 loops=3)
                     Join Filter: (mc.movie_id = t.id)
                     ->  Hash Join  (cost=3.92..18513.76 rows=47 width=32) (actual time=136.989..145.398 rows=47 loops=3)
                           Hash Cond: (mc.company_type_id = ct.id)
                           ->  Nested Loop  (cost=2.86..18511.69 rows=187 width=36) (actual time=136.770..145.136 rows=49 loops=3)
                                 ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=4) (actual time=136.622..136.723 rows=83 loops=3)
                                       Hash Cond: (mi_idx.info_type_id = it.id)
                                       ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=8) (actual time=0.036..80.800 rows=460012 loops=3)
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.055..0.056 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.044..0.046 rows=1 loops=3)
                                                   Filter: ((info)::text = 'top 250 rank'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.63 rows=1 width=32) (actual time=0.098..0.100 rows=1 loops=250)
                                       Index Cond: (movie_id = mi_idx.movie_id)
                                       Filter: (((note)::text !~~ '%(as Metro-Goldwyn-Mayer Pictures)%'::text) AND (((note)::text ~~ '%(co-production)%'::text) OR ((note)::text ~~ '%(presents)%'::text)))
                                       Rows Removed by Filter: 33
                           ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.065..0.065 rows=1 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                 ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.044..0.045 rows=1 loops=3)
                                       Filter: ((kind)::text = 'production companies'::text)
                                       Rows Removed by Filter: 3
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=25) (actual time=0.036..0.036 rows=1 loops=142)
                           Index Cond: (id = mi_idx.movie_id)
 Planning Time: 5.011 ms
 Execution Time: 166.145 ms
(31 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=20151.20..20151.21 rows=1 width=68) (actual time=145.345..145.346 rows=1 loops=1)
   ->  Gather  (cost=20150.97..20151.18 rows=2 width=68) (actual time=144.097..146.602 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=19150.97..19150.98 rows=1 width=68) (actual time=137.694..137.694 rows=1 loops=3)
               ->  Hash Join  (cost=4.35..19143.68 rows=972 width=45) (actual time=137.687..137.688 rows=1 loops=3)
                     Hash Cond: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=3.29..19121.60 rows=3890 width=49) (actual time=137.281..137.454 rows=22 loops=3)
                           Join Filter: (t.id = mc.movie_id)
                           ->  Nested Loop  (cost=2.86..18189.65 rows=1450 width=29) (actual time=137.232..137.298 rows=1 loops=3)
                                 ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=4) (actual time=137.074..137.079 rows=3 loops=3)
                                       Hash Cond: (mi_idx.info_type_id = it.id)
                                       ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=8) (actual time=0.044..80.760 rows=460012 loops=3)
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.049..0.049 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.039..0.039 rows=1 loops=3)
                                                   Filter: ((info)::text = 'bottom 10 rank'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.58 rows=1 width=25) (actual time=0.064..0.064 rows=0 loops=10)
                                       Index Cond: (id = mi_idx.movie_id)
                                       Filter: ((production_year >= 2005) AND (production_year <= 2010))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.61 rows=3 width=32) (actual time=0.087..0.113 rows=16 loops=4)
                                 Index Cond: (movie_id = mi_idx.movie_id)
                                 Filter: ((note)::text !~~ '%(as Metro-Goldwyn-Mayer Pictures)%'::text)
                                 Rows Removed by Filter: 2
                     ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.061..0.061 rows=1 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.040..0.042 rows=1 loops=3)
                                 Filter: ((kind)::text = 'production companies'::text)
                                 Rows Removed by Filter: 3
 Planning Time: 3.980 ms
 Execution Time: 147.212 ms
(33 rows)

SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=19470.70..19470.71 rows=1 width=68) (actual time=150.878..150.878 rows=1 loops=1)
   ->  Gather  (cost=19470.48..19470.69 rows=2 width=68) (actual time=147.096..152.633 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=18470.48..18470.49 rows=1 width=68) (actual time=139.774..139.774 rows=1 loops=3)
               ->  Nested Loop  (cost=4.35..18470.44 rows=5 width=45) (actual time=138.173..139.768 rows=1 loops=3)
                     Join Filter: (mc.movie_id = t.id)
                     ->  Hash Join  (cost=3.92..18449.90 rows=35 width=32) (actual time=136.341..139.646 rows=8 loops=3)
                           Hash Cond: (mc.company_type_id = ct.id)
                           ->  Nested Loop  (cost=2.86..18448.07 rows=141 width=36) (actual time=136.111..139.411 rows=8 loops=3)
                                 ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=4) (actual time=134.600..134.701 rows=83 loops=3)
                                       Hash Cond: (mi_idx.info_type_id = it.id)
                                       ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=8) (actual time=0.042..78.982 rows=460012 loops=3)
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.048..0.049 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.037..0.039 rows=1 loops=3)
                                                   Filter: ((info)::text = 'top 250 rank'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.62 rows=1 width=32) (actual time=0.055..0.056 rows=0 loops=250)
                                       Index Cond: (movie_id = mi_idx.movie_id)
                                       Filter: (((note)::text !~~ '%(as Metro-Goldwyn-Mayer Pictures)%'::text) AND ((note)::text ~~ '%(co-production)%'::text))
                                       Rows Removed by Filter: 33
                           ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.064..0.064 rows=1 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                 ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.042..0.043 rows=1 loops=3)
                                       Filter: ((kind)::text = 'production companies'::text)
                                       Rows Removed by Filter: 3
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=25) (actual time=0.015..0.015 rows=0 loops=23)
                           Index Cond: (id = mi_idx.movie_id)
                           Filter: (production_year > 2010)
                           Rows Removed by Filter: 1
 Planning Time: 3.950 ms
 Execution Time: 153.157 ms
(33 rows)

SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=20999.43..20999.44 rows=1 width=68) (actual time=142.741..142.741 rows=1 loops=1)
   ->  Gather  (cost=20999.20..20999.41 rows=2 width=68) (actual time=141.773..144.049 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=19999.20..19999.21 rows=1 width=68) (actual time=135.577..135.577 rows=1 loops=3)
               ->  Hash Join  (cost=4.35..19985.21 rows=1865 width=45) (actual time=135.542..135.570 rows=1 loops=3)
                     Hash Cond: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=3.29..19943.82 rows=7460 width=49) (actual time=135.178..135.375 rows=26 loops=3)
                           ->  Nested Loop  (cost=2.86..18176.93 rows=2782 width=29) (actual time=135.131..135.209 rows=2 loops=3)
                                 ->  Hash Join  (cost=2.43..15253.60 rows=5089 width=4) (actual time=135.083..135.087 rows=3 loops=3)
                                       Hash Cond: (mi_idx.info_type_id = it.id)
                                       ->  Parallel Seq Scan on movie_info_idx mi_idx  (cost=0.00..13685.15 rows=575015 width=8) (actual time=0.046..79.197 rows=460012 loops=3)
                                       ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.053..0.054 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.042..0.043 rows=1 loops=3)
                                                   Filter: ((info)::text = 'bottom 10 rank'::text)
                                                   Rows Removed by Filter: 112
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.57 rows=1 width=25) (actual time=0.035..0.035 rows=1 loops=10)
                                       Index Cond: (id = mi_idx.movie_id)
                                       Filter: (production_year > 2000)
                                       Rows Removed by Filter: 0
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.61 rows=3 width=32) (actual time=0.058..0.080 rows=13 loops=6)
                                 Index Cond: (movie_id = t.id)
                                 Filter: ((note)::text !~~ '%(as Metro-Goldwyn-Mayer Pictures)%'::text)
                                 Rows Removed by Filter: 2
                     ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.059..0.059 rows=1 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.039..0.040 rows=1 loops=3)
                                 Filter: ((kind)::text = 'production companies'::text)
                                 Rows Removed by Filter: 3
 Planning Time: 3.845 ms
 Execution Time: 144.490 ms
(32 rows)

SET
                                                                                             QUERY PLAN                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=12310.68..12310.69 rows=1 width=32) (actual time=12397.511..12397.512 rows=1 loops=1)
   ->  Nested Loop  (cost=9.03..12310.67 rows=1 width=17) (actual time=123.306..12397.385 rows=33 loops=1)
         ->  Nested Loop  (cost=8.60..12310.22 rows=1 width=21) (actual time=123.239..12396.382 rows=33 loops=1)
               ->  Nested Loop  (cost=8.17..12305.16 rows=11 width=25) (actual time=12.983..7469.854 rows=532809 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=7.61..12299.20 rows=3 width=29) (actual time=12.901..1565.160 rows=6016 loops=1)
                           Join Filter: (t.kind_id = kt.id)
                           Rows Removed by Join Filter: 1347
                           ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.048..0.050 rows=1 loops=1)
                                 Filter: ((kind)::text = 'movie'::text)
                                 Rows Removed by Filter: 6
                           ->  Nested Loop  (cost=7.61..12297.85 rows=21 width=33) (actual time=2.090..1562.201 rows=7363 loops=1)
                                 ->  Nested Loop  (cost=7.18..12286.63 rows=23 width=8) (actual time=2.032..1374.831 rows=8765 loops=1)
                                       Join Filter: (cc.status_id = cct2.id)
                                       Rows Removed by Join Filter: 8765
                                       ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.030..0.032 rows=2 loops=1)
                                             Filter: ((kind)::text ~~ '%complete%'::text)
                                             Rows Removed by Filter: 2
                                       ->  Nested Loop  (cost=7.18..12284.40 rows=94 width=12) (actual time=1.607..685.547 rows=8765 loops=2)
                                             Join Filter: (cc.subject_id = cct1.id)
                                             Rows Removed by Join Filter: 4045
                                             ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.005..0.008 rows=1 loops=2)
                                                   Filter: ((kind)::text = 'cast'::text)
                                                   Rows Removed by Filter: 3
                                             ->  Nested Loop  (cost=7.18..12278.66 rows=375 width=16) (actual time=1.598..681.327 rows=12810 loops=2)
                                                   ->  Nested Loop  (cost=6.76..12150.15 rows=270 width=4) (actual time=0.883..473.869 rows=35548 loops=2)
                                                         ->  Seq Scan on keyword k  (cost=0.00..3632.40 rows=8 width=4) (actual time=0.177..50.004 rows=8 loops=2)
                                                               Filter: ((keyword)::text = ANY ('{superhero,sequel,second-part,marvel-comics,based-on-comic,tv-special,fight,violence}'::text[]))
                                                               Rows Removed by Filter: 134162
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1061.72 rows=300 width=8) (actual time=1.563..51.199 rows=4444 loops=16)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=46976
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=1.145..1.145 rows=4444 loops=16)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.004..0.005 rows=0 loops=71096)
                                                         Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.020..0.020 rows=1 loops=8765)
                                       Index Cond: (id = mk.movie_id)
                                       Filter: (production_year > 1950)
                                       Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.029..0.916 rows=89 loops=6016)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=4) (actual time=0.008..0.008 rows=0 loops=532809)
                     Index Cond: (id = ci.person_role_id)
                     Filter: (((name)::text !~~ '%Sherlock%'::text) AND (((name)::text ~~ '%Tony%Stark%'::text) OR ((name)::text ~~ '%Iron%Man%'::text)))
                     Rows Removed by Filter: 0
         ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.028..0.028 rows=1 loops=33)
               Index Cond: (id = ci.person_id)
               Heap Fetches: 33
 Planning Time: 32.897 ms
 Execution Time: 12398.130 ms
(51 rows)

SET
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=12305.07..12305.08 rows=1 width=32) (actual time=9403.289..9403.289 rows=1 loops=1)
   ->  Nested Loop  (cost=9.03..12305.06 rows=1 width=17) (actual time=148.089..9403.189 rows=17 loops=1)
         ->  Nested Loop  (cost=8.60..12304.60 rows=1 width=21) (actual time=148.052..9402.199 rows=27 loops=1)
               ->  Nested Loop  (cost=8.17..12301.40 rows=7 width=25) (actual time=19.581..4878.084 rows=222518 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=7.61..12297.43 rows=2 width=29) (actual time=19.501..2264.645 rows=1472 loops=1)
                           Join Filter: (cc.status_id = cct2.id)
                           Rows Removed by Join Filter: 1472
                           ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.038..0.040 rows=2 loops=1)
                                 Filter: ((kind)::text ~~ '%complete%'::text)
                                 Rows Removed by Filter: 2
                           ->  Nested Loop  (cost=7.61..12296.29 rows=7 width=33) (actual time=16.283..1131.931 rows=1472 loops=2)
                                 Join Filter: (cc.subject_id = cct1.id)
                                 Rows Removed by Join Filter: 243
                                 ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.005..0.007 rows=1 loops=2)
                                       Filter: ((kind)::text = 'cast'::text)
                                       Rows Removed by Filter: 3
                                 ->  Nested Loop  (cost=7.61..12294.88 rows=29 width=37) (actual time=16.273..1131.257 rows=1715 loops=2)
                                       ->  Nested Loop  (cost=7.19..12284.84 rows=21 width=25) (actual time=16.030..1081.051 rows=6043 loops=2)
                                             Join Filter: (t.kind_id = kt.id)
                                             Rows Removed by Join Filter: 8122
                                             ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.011..0.013 rows=1 loops=2)
                                                   Filter: ((kind)::text = 'movie'::text)
                                                   Rows Removed by Filter: 6
                                             ->  Nested Loop  (cost=7.19..12281.90 rows=148 width=29) (actual time=0.924..1076.614 rows=14165 loops=2)
                                                   ->  Nested Loop  (cost=6.76..12150.15 rows=270 width=4) (actual time=0.887..476.828 rows=35548 loops=2)
                                                         ->  Seq Scan on keyword k  (cost=0.00..3632.40 rows=8 width=4) (actual time=0.172..49.144 rows=8 loops=2)
                                                               Filter: ((keyword)::text = ANY ('{superhero,sequel,second-part,marvel-comics,based-on-comic,tv-special,fight,violence}'::text[]))
                                                               Rows Removed by Filter: 134162
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1061.72 rows=300 width=8) (actual time=1.562..51.425 rows=4444 loops=16)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=46976
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=1.147..1.147 rows=4444 loops=16)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.016..0.016 rows=0 loops=71096)
                                                         Index Cond: (id = mk.movie_id)
                                                         Filter: (production_year > 2000)
                                                         Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.007..0.007 rows=0 loops=12086)
                                             Index Cond: (movie_id = t.id)
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.034..1.656 rows=151 loops=1472)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=4) (actual time=0.019..0.019 rows=0 loops=222518)
                     Index Cond: (id = ci.person_id)
                     Filter: ((name)::text ~~ '%Downey%Robert%'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=4) (actual time=0.035..0.035 rows=1 loops=27)
               Index Cond: (id = ci.person_role_id)
               Filter: (((name)::text !~~ '%Sherlock%'::text) AND (((name)::text ~~ '%Tony%Stark%'::text) OR ((name)::text ~~ '%Iron%Man%'::text)))
               Rows Removed by Filter: 0
 Planning Time: 33.810 ms
 Execution Time: 9403.941 ms
(52 rows)

SET
                                                                                             QUERY PLAN                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=14700.60..14700.61 rows=1 width=64) (actual time=5327.724..5327.724 rows=1 loops=1)
   ->  Nested Loop  (cost=9.03..14700.60 rows=1 width=32) (actual time=19.717..5320.938 rows=5406 loops=1)
         ->  Nested Loop  (cost=8.60..14700.14 rows=1 width=21) (actual time=19.648..5180.133 rows=5406 loops=1)
               ->  Nested Loop  (cost=8.17..14696.48 rows=8 width=25) (actual time=18.899..3658.582 rows=189844 loops=1)
                     Join Filter: (t.id = ci.movie_id)
                     ->  Nested Loop  (cost=7.61..14692.51 rows=2 width=29) (actual time=18.816..1656.736 rows=1267 loops=1)
                           Join Filter: (cc.status_id = cct2.id)
                           Rows Removed by Join Filter: 1267
                           ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.222..0.224 rows=2 loops=1)
                                 Filter: ((kind)::text ~~ '%complete%'::text)
                                 Rows Removed by Filter: 2
                           ->  Nested Loop  (cost=7.61..14691.35 rows=9 width=33) (actual time=15.746..827.938 rows=1267 loops=2)
                                 Join Filter: (cc.subject_id = cct1.id)
                                 Rows Removed by Join Filter: 218
                                 ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.010..0.012 rows=1 loops=2)
                                       Filter: ((kind)::text = 'cast'::text)
                                       Rows Removed by Filter: 3
                                 ->  Nested Loop  (cost=7.61..14689.84 rows=37 width=37) (actual time=15.731..827.377 rows=1485 loops=2)
                                       ->  Nested Loop  (cost=7.19..14677.40 rows=26 width=25) (actual time=15.508..787.104 rows=5032 loops=2)
                                             Join Filter: (t.kind_id = kt.id)
                                             Rows Removed by Join Filter: 5581
                                             ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.011..0.013 rows=1 loops=2)
                                                   Filter: ((kind)::text = 'movie'::text)
                                                   Rows Removed by Filter: 6
                                             ->  Nested Loop  (cost=7.19..14674.02 rows=184 width=29) (actual time=0.932..783.661 rows=10613 loops=2)
                                                   ->  Nested Loop  (cost=6.76..14509.57 rows=337 width=4) (actual time=0.892..363.379 rows=24091 loops=2)
                                                         ->  Seq Scan on keyword k  (cost=0.00..3967.82 rows=10 width=4) (actual time=0.190..53.744 rows=10 loops=2)
                                                               Filter: ((keyword)::text = ANY ('{superhero,marvel-comics,based-on-comic,tv-special,fight,violence,magnet,web,claw,laser}'::text[]))
                                                               Rows Removed by Filter: 134160
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1051.17 rows=300 width=8) (actual time=0.985..29.831 rows=2409 loops=20)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=34254
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.731..0.731 rows=2409 loops=20)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.016..0.016 rows=0 loops=48182)
                                                         Index Cond: (id = mk.movie_id)
                                                         Filter: (production_year > 2000)
                                                         Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.006..0.007 rows=0 loops=10064)
                                             Index Cond: (movie_id = t.id)
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.033..1.474 rows=150 loops=1267)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=4) (actual time=0.007..0.007 rows=0 loops=189844)
                     Index Cond: (id = ci.person_role_id)
                     Filter: ((name IS NOT NULL) AND (((name)::text ~~ '%man%'::text) OR ((name)::text ~~ '%Man%'::text)))
                     Rows Removed by Filter: 0
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=19) (actual time=0.024..0.024 rows=1 loops=5406)
               Index Cond: (id = ci.person_id)
 Planning Time: 34.059 ms
 Execution Time: 5328.370 ms
(50 rows)

SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3756.64..3756.65 rows=1 width=96) (actual time=270.748..270.749 rows=1 loops=1)
   ->  Nested Loop  (cost=8.76..3756.63 rows=1 width=118) (actual time=6.890..269.000 rows=1410 loops=1)
         Join Filter: (ml.movie_id = t.id)
         ->  Nested Loop  (cost=8.33..3756.13 rows=1 width=117) (actual time=6.845..259.169 rows=1816 loops=1)
               Join Filter: (mc.company_type_id = ct.id)
               Rows Removed by Join Filter: 95
               ->  Nested Loop  (cost=8.33..3755.07 rows=1 width=121) (actual time=6.819..243.574 rows=1911 loops=1)
                     ->  Nested Loop  (cost=7.91..3754.61 rows=1 width=106) (actual time=6.763..229.318 rows=4365 loops=1)
                           Join Filter: (ml.movie_id = mc.movie_id)
                           ->  Nested Loop  (cost=7.48..3754.04 rows=1 width=94) (actual time=6.720..223.934 rows=684 loops=1)
                                 Join Filter: (ml.movie_id = mi.movie_id)
                                 ->  Nested Loop  (cost=7.04..3752.25 rows=1 width=90) (actual time=5.445..216.794 rows=199 loops=1)
                                       Join Filter: (ml.link_type_id = lt.id)
                                       Rows Removed by Join Filter: 303
                                       ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.040..0.049 rows=2 loops=1)
                                             Filter: ((link)::text ~~ '%follow%'::text)
                                             Rows Removed by Filter: 16
                                       ->  Nested Loop  (cost=7.04..3750.90 rows=10 width=12) (actual time=4.750..108.321 rows=251 loops=2)
                                             ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=4.739..86.200 rows=10544 loops=2)
                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.230..17.695 rows=1 loops=2)
                                                         Filter: ((keyword)::text = 'sequel'::text)
                                                         Rows Removed by Filter: 134169
                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=3.458..65.845 rows=10544 loops=2)
                                                         Recheck Cond: (keyword_id = k.id)
                                                         Heap Blocks: exact=11140
                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=2.680..2.680 rows=10544 loops=2)
                                                               Index Cond: (keyword_id = k.id)
                                             ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.002..0.002 rows=0 loops=21088)
                                                   Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.77 rows=1 width=4) (actual time=0.031..0.035 rows=3 loops=199)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German}'::text[]))
                                       Rows Removed by Filter: 17
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=12) (actual time=0.003..0.006 rows=6 loops=684)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: (note IS NULL)
                                 Rows Removed by Filter: 2
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=4365)
                           Index Cond: (id = mc.company_id)
                           Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                           Rows Removed by Filter: 1
               ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1911)
                     Filter: ((kind)::text = 'production companies'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.004..0.004 rows=1 loops=1816)
               Index Cond: (id = mk.movie_id)
               Filter: ((production_year >= 1950) AND (production_year <= 2000))
               Rows Removed by Filter: 0
 Planning Time: 30.615 ms
 Execution Time: 271.374 ms
(50 rows)

SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3756.33..3756.34 rows=1 width=96) (actual time=128.285..128.286 rows=1 loops=1)
   ->  Nested Loop  (cost=8.76..3756.32 rows=1 width=118) (actual time=6.330..128.204 rows=38 loops=1)
         Join Filter: (ml.movie_id = t.id)
         ->  Nested Loop  (cost=8.33..3755.82 rows=1 width=117) (actual time=5.344..126.431 rows=308 loops=1)
               Join Filter: (mc.company_type_id = ct.id)
               Rows Removed by Join Filter: 19
               ->  Nested Loop  (cost=8.33..3754.75 rows=1 width=121) (actual time=5.332..123.745 rows=327 loops=1)
                     ->  Nested Loop  (cost=7.91..3754.30 rows=1 width=106) (actual time=5.309..121.189 rows=749 loops=1)
                           Join Filter: (ml.movie_id = mc.movie_id)
                           ->  Nested Loop  (cost=7.48..3753.72 rows=1 width=94) (actual time=5.295..120.260 rows=118 loops=1)
                                 Join Filter: (ml.movie_id = mi.movie_id)
                                 ->  Nested Loop  (cost=7.04..3752.25 rows=1 width=90) (actual time=4.800..116.713 rows=199 loops=1)
                                       Join Filter: (ml.link_type_id = lt.id)
                                       Rows Removed by Join Filter: 303
                                       ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.017..0.026 rows=2 loops=1)
                                             Filter: ((link)::text ~~ '%follow%'::text)
                                             Rows Removed by Filter: 16
                                       ->  Nested Loop  (cost=7.04..3750.90 rows=10 width=12) (actual time=4.458..58.296 rows=251 loops=2)
                                             ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=4.443..42.216 rows=10544 loops=2)
                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.037..17.627 rows=1 loops=2)
                                                         Filter: ((keyword)::text = 'sequel'::text)
                                                         Rows Removed by Filter: 134169
                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=3.357..22.633 rows=10544 loops=2)
                                                         Recheck Cond: (keyword_id = k.id)
                                                         Heap Blocks: exact=11140
                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=2.581..2.581 rows=10544 loops=2)
                                                               Index Cond: (keyword_id = k.id)
                                             ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.001..0.001 rows=0 loops=21088)
                                                   Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.45 rows=1 width=4) (actual time=0.016..0.017 rows=1 loops=199)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Germany,German}'::text[]))
                                       Rows Removed by Filter: 20
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=12) (actual time=0.003..0.006 rows=6 loops=118)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: (note IS NULL)
                                 Rows Removed by Filter: 2
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=749)
                           Index Cond: (id = mc.company_id)
                           Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                           Rows Removed by Filter: 1
               ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=327)
                     Filter: ((kind)::text = 'production companies'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.005..0.005 rows=0 loops=308)
               Index Cond: (id = mk.movie_id)
               Filter: ((production_year >= 2000) AND (production_year <= 2010))
               Rows Removed by Filter: 1
 Planning Time: 29.011 ms
 Execution Time: 128.897 ms
(50 rows)

SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3756.72..3756.73 rows=1 width=96) (actual time=135.575..135.575 rows=1 loops=1)
   ->  Nested Loop  (cost=8.76..3756.71 rows=1 width=118) (actual time=5.704..134.494 rows=1874 loops=1)
         Join Filter: (ml.movie_id = mi.movie_id)
         ->  Nested Loop  (cost=8.32..3754.85 rows=1 width=134) (actual time=5.670..126.729 rows=402 loops=1)
               Join Filter: (mc.company_type_id = ct.id)
               Rows Removed by Join Filter: 20
               ->  Nested Loop  (cost=8.32..3753.79 rows=1 width=138) (actual time=5.658..123.233 rows=422 loops=1)
                     ->  Nested Loop  (cost=7.90..3753.33 rows=1 width=123) (actual time=4.796..118.970 rows=1021 loops=1)
                           Join Filter: (ml.movie_id = mc.movie_id)
                           ->  Nested Loop  (cost=7.47..3752.76 rows=1 width=111) (actual time=4.721..116.777 rows=199 loops=1)
                                 Join Filter: (ml.movie_id = t.id)
                                 ->  Nested Loop  (cost=7.04..3752.25 rows=1 width=90) (actual time=4.636..115.319 rows=199 loops=1)
                                       Join Filter: (ml.link_type_id = lt.id)
                                       Rows Removed by Join Filter: 303
                                       ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.015..0.025 rows=2 loops=1)
                                             Filter: ((link)::text ~~ '%follow%'::text)
                                             Rows Removed by Filter: 16
                                       ->  Nested Loop  (cost=7.04..3750.90 rows=10 width=12) (actual time=4.361..57.595 rows=251 loops=2)
                                             ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=4.349..41.647 rows=10544 loops=2)
                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.030..17.622 rows=1 loops=2)
                                                         Filter: ((keyword)::text = 'sequel'::text)
                                                         Rows Removed by Filter: 134169
                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=3.276..22.054 rows=10544 loops=2)
                                                         Recheck Cond: (keyword_id = k.id)
                                                         Heap Blocks: exact=11140
                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=2.499..2.499 rows=10544 loops=2)
                                                               Index Cond: (keyword_id = k.id)
                                             ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.001..0.001 rows=0 loops=21088)
                                                   Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.007..0.007 rows=1 loops=199)
                                       Index Cond: (id = mk.movie_id)
                                       Filter: ((production_year >= 1950) AND (production_year <= 2010))
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=12) (actual time=0.007..0.009 rows=5 loops=199)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: (note IS NULL)
                                 Rows Removed by Filter: 2
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.004..0.004 rows=0 loops=1021)
                           Index Cond: (id = mc.company_id)
                           Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                           Rows Removed by Filter: 1
               ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=422)
                     Filter: ((kind)::text = 'production companies'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.82 rows=3 width=4) (actual time=0.013..0.017 rows=5 loops=402)
               Index Cond: (movie_id = mk.movie_id)
               Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,English}'::text[]))
               Rows Removed by Filter: 16
 Planning Time: 29.406 ms
 Execution Time: 136.222 ms
(49 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7401.04..7401.05 rows=1 width=96) (actual time=1634.463..1634.463 rows=1 loops=1)
   ->  Nested Loop  (cost=8.90..7401.03 rows=1 width=41) (actual time=35.081..1631.093 rows=2851 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         Rows Removed by Join Filter: 191
         ->  Nested Loop  (cost=8.90..7398.61 rows=1 width=45) (actual time=35.067..1597.602 rows=3042 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=8.46..7397.02 rows=1 width=57) (actual time=13.237..1341.519 rows=2958 loops=1)
                     Join Filter: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=8.46..7395.93 rows=1 width=61) (actual time=13.215..1318.486 rows=2958 loops=1)
                           ->  Nested Loop  (cost=8.04..7395.38 rows=1 width=46) (actual time=13.181..1279.337 rows=3374 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.62..7394.80 rows=1 width=34) (actual time=13.111..1175.202 rows=2378 loops=1)
                                       Join Filter: (mi_idx.info_type_id = it2.id)
                                       Rows Removed by Join Filter: 6321
                                       ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.031..0.034 rows=1 loops=1)
                                             Filter: ((info)::text = 'rating'::text)
                                             Rows Removed by Filter: 112
                                       ->  Nested Loop  (cost=7.62..7392.07 rows=26 width=38) (actual time=7.616..1173.343 rows=8699 loops=1)
                                             Join Filter: (t.id = mi_idx.movie_id)
                                             ->  Nested Loop  (cost=7.19..7386.71 rows=10 width=25) (actual time=7.565..1076.650 rows=4832 loops=1)
                                                   Join Filter: (t.kind_id = kt.id)
                                                   Rows Removed by Join Filter: 2286
                                                   ->  Nested Loop  (cost=7.19..7384.59 rows=36 width=29) (actual time=7.511..1070.390 rows=5606 loops=1)
                                                         ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=7.343..502.652 rows=37091 loops=1)
                                                               ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.476..38.246 rows=3 loops=1)
                                                                     Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                     Rows Removed by Filter: 134167
                                                               ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=5.082..149.110 rows=12364 loops=3)
                                                                     Recheck Cond: (keyword_id = k.id)
                                                                     Heap Blocks: exact=26312
                                                                     ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.782..3.782 rows=12364 loops=3)
                                                                           Index Cond: (keyword_id = k.id)
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.014..0.014 rows=0 loops=37091)
                                                               Index Cond: (id = mk.movie_id)
                                                               Filter: (production_year > 2008)
                                                               Rows Removed by Filter: 1
                                                   ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=5606)
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.034..0.036 rows=2 loops=1)
                                                               Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                               Rows Removed by Filter: 5
                                             ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=13) (actual time=0.017..0.019 rows=2 loops=4832)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((info)::text < '7.0'::text)
                                                   Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.037..0.042 rows=1 loops=2378)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                                       Rows Removed by Filter: 10
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.010..0.010 rows=1 loops=3374)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text <> '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.002..0.002 rows=1 loops=2958)
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.56 rows=2 width=8) (actual time=0.077..0.085 rows=1 loops=2958)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Germany,German,USA,American}'::text[]))
                     Rows Removed by Filter: 155
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=3042)
               Filter: ((info)::text = 'countries'::text)
               Rows Removed by Filter: 14
 Planning Time: 76.918 ms
 Execution Time: 1635.215 ms
(62 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7399.71..7399.72 rows=1 width=96) (actual time=1238.488..1238.489 rows=1 loops=1)
   ->  Nested Loop  (cost=8.90..7399.70 rows=1 width=41) (actual time=43.564..1238.390 rows=31 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         Rows Removed by Join Filter: 3
         ->  Nested Loop  (cost=8.90..7397.27 rows=1 width=45) (actual time=43.548..1237.956 rows=34 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=8.46..7395.69 rows=1 width=57) (actual time=43.335..1228.583 rows=50 loops=1)
                     Join Filter: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=8.46..7394.60 rows=1 width=61) (actual time=43.309..1227.999 rows=50 loops=1)
                           ->  Nested Loop  (cost=8.04..7394.05 rows=1 width=46) (actual time=43.271..1226.119 rows=78 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.62..7393.47 rows=1 width=34) (actual time=17.237..1157.365 rows=1615 loops=1)
                                       Join Filter: (mi_idx.info_type_id = it2.id)
                                       Rows Removed by Join Filter: 4362
                                       ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.035..0.038 rows=1 loops=1)
                                             Filter: ((info)::text = 'rating'::text)
                                             Rows Removed by Filter: 112
                                       ->  Nested Loop  (cost=7.62..7390.80 rows=21 width=38) (actual time=8.091..1156.102 rows=5977 loops=1)
                                             Join Filter: (t.id = mi_idx.movie_id)
                                             ->  Nested Loop  (cost=7.19..7386.51 rows=8 width=25) (actual time=8.039..1086.912 rows=3517 loops=1)
                                                   Join Filter: (t.kind_id = kt.id)
                                                   Rows Removed by Join Filter: 1618
                                                   ->  Nested Loop  (cost=7.19..7384.59 rows=29 width=29) (actual time=8.002..1082.467 rows=4040 loops=1)
                                                         ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=7.833..539.642 rows=37091 loops=1)
                                                               ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.961..38.748 rows=3 loops=1)
                                                                     Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                     Rows Removed by Filter: 134167
                                                               ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=5.056..161.247 rows=12364 loops=3)
                                                                     Recheck Cond: (keyword_id = k.id)
                                                                     Heap Blocks: exact=26312
                                                                     ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.757..3.757 rows=12364 loops=3)
                                                                           Index Cond: (keyword_id = k.id)
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.014..0.014 rows=0 loops=37091)
                                                               Index Cond: (id = mk.movie_id)
                                                               Filter: (production_year > 2009)
                                                               Rows Removed by Filter: 1
                                                   ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=4040)
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.026..0.028 rows=2 loops=1)
                                                               Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                               Rows Removed by Filter: 5
                                             ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=13) (actual time=0.017..0.018 rows=2 loops=3517)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((info)::text < '7.0'::text)
                                                   Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.041..0.041 rows=0 loops=1615)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                                       Rows Removed by Filter: 12
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.022..0.022 rows=1 loops=78)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text <> '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.003..0.003 rows=1 loops=50)
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.56 rows=2 width=8) (actual time=0.171..0.185 rows=1 loops=50)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Germany,German,USA,American}'::text[]))
                     Rows Removed by Filter: 53
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=34)
               Filter: ((info)::text = 'countries'::text)
               Rows Removed by Filter: 16
 Planning Time: 78.754 ms
 Execution Time: 1239.363 ms
(62 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7405.36..7405.37 rows=1 width=96) (actual time=4750.001..4750.001 rows=1 loops=1)
   ->  Nested Loop  (cost=8.90..7405.35 rows=1 width=41) (actual time=12.113..4725.273 rows=21489 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         Rows Removed by Join Filter: 3123
         ->  Nested Loop  (cost=8.90..7402.92 rows=1 width=45) (actual time=12.100..4437.695 rows=24612 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=8.46..7401.02 rows=1 width=57) (actual time=11.954..1901.291 rows=23425 loops=1)
                     Join Filter: (mc.company_type_id = ct.id)
                     ->  Nested Loop  (cost=8.46..7399.93 rows=1 width=61) (actual time=11.920..1720.209 rows=23425 loops=1)
                           ->  Nested Loop  (cost=8.04..7399.38 rows=1 width=46) (actual time=11.888..1533.997 rows=25316 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.62..7398.81 rows=1 width=34) (actual time=8.148..1283.550 rows=5949 loops=1)
                                       Join Filter: (mi_idx.info_type_id = it2.id)
                                       Rows Removed by Join Filter: 11942
                                       ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.032..0.034 rows=1 loops=1)
                                             Filter: ((info)::text = 'rating'::text)
                                             Rows Removed by Filter: 112
                                       ->  Nested Loop  (cost=7.62..7395.82 rows=46 width=38) (actual time=8.111..1279.806 rows=17891 loops=1)
                                             Join Filter: (t.id = mi_idx.movie_id)
                                             ->  Nested Loop  (cost=7.19..7387.25 rows=16 width=25) (actual time=8.058..1123.948 rows=8073 loops=1)
                                                   Join Filter: (t.kind_id = kt.id)
                                                   Rows Removed by Join Filter: 4332
                                                   ->  Nested Loop  (cost=7.19..7384.59 rows=55 width=29) (actual time=7.897..1113.239 rows=9739 loops=1)
                                                         ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=7.845..533.601 rows=37091 loops=1)
                                                               ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.974..39.046 rows=3 loops=1)
                                                                     Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                     Rows Removed by Filter: 134167
                                                               ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=5.073..159.100 rows=12364 loops=3)
                                                                     Recheck Cond: (keyword_id = k.id)
                                                                     Heap Blocks: exact=26312
                                                                     ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.748..3.748 rows=12364 loops=3)
                                                                           Index Cond: (keyword_id = k.id)
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.014..0.014 rows=0 loops=37091)
                                                               Index Cond: (id = mk.movie_id)
                                                               Filter: (production_year > 2005)
                                                               Rows Removed by Filter: 1
                                                   ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=9739)
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.029..0.030 rows=2 loops=1)
                                                               Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                               Rows Removed by Filter: 5
                                             ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=13) (actual time=0.017..0.018 rows=2 loops=8073)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((info)::text < '8.5'::text)
                                                   Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.028..0.040 rows=4 loops=5949)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                                       Rows Removed by Filter: 8
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.006..0.006 rows=1 loops=25316)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text <> '[us]'::text)
                                 Rows Removed by Filter: 0
                     ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.002..0.002 rows=1 loops=23425)
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.089..0.107 rows=1 loops=23425)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                     Rows Removed by Filter: 180
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=24612)
               Filter: ((info)::text = 'countries'::text)
               Rows Removed by Filter: 20
 Planning Time: 78.414 ms
 Execution Time: 4750.823 ms
(62 rows)

SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7405.28..7405.29 rows=1 width=96) (actual time=3532.721..3532.722 rows=1 loops=1)
   ->  Nested Loop  (cost=8.90..7405.27 rows=1 width=41) (actual time=12.528..3476.295 rows=46281 loops=1)
         Join Filter: (mc.company_type_id = ct.id)
         Rows Removed by Join Filter: 4783
         ->  Nested Loop  (cost=8.90..7404.18 rows=1 width=45) (actual time=12.496..3120.049 rows=46281 loops=1)
               ->  Nested Loop  (cost=8.48..7403.73 rows=1 width=30) (actual time=8.334..2667.782 rows=64848 loops=1)
                     Join Filter: (t.id = mc.movie_id)
                     ->  Nested Loop  (cost=8.05..7403.13 rows=1 width=38) (actual time=8.295..2481.925 rows=4115 loops=1)
                           Join Filter: (mi.info_type_id = it1.id)
                           Rows Removed by Join Filter: 594
                           ->  Nested Loop  (cost=8.05..7400.71 rows=1 width=42) (actual time=8.283..2425.044 rows=4709 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=7.62..7398.81 rows=1 width=34) (actual time=8.165..1290.903 rows=5949 loops=1)
                                       Join Filter: (mi_idx.info_type_id = it2.id)
                                       Rows Removed by Join Filter: 11942
                                       ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.032..0.034 rows=1 loops=1)
                                             Filter: ((info)::text = 'rating'::text)
                                             Rows Removed by Filter: 112
                                       ->  Nested Loop  (cost=7.62..7395.82 rows=46 width=38) (actual time=8.129..1287.005 rows=17891 loops=1)
                                             Join Filter: (t.id = mi_idx.movie_id)
                                             ->  Nested Loop  (cost=7.19..7387.25 rows=16 width=25) (actual time=8.088..1131.483 rows=8073 loops=1)
                                                   Join Filter: (t.kind_id = kt.id)
                                                   Rows Removed by Join Filter: 4332
                                                   ->  Nested Loop  (cost=7.19..7384.59 rows=55 width=29) (actual time=7.924..1120.721 rows=9739 loops=1)
                                                         ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=7.885..534.785 rows=37091 loops=1)
                                                               ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.992..38.631 rows=3 loops=1)
                                                                     Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                     Rows Removed by Filter: 134167
                                                               ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=5.081..159.574 rows=12364 loops=3)
                                                                     Recheck Cond: (keyword_id = k.id)
                                                                     Heap Blocks: exact=26312
                                                                     ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.767..3.767 rows=12364 loops=3)
                                                                           Index Cond: (keyword_id = k.id)
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.015..0.015 rows=0 loops=37091)
                                                               Index Cond: (id = mk.movie_id)
                                                               Filter: (production_year > 2005)
                                                               Rows Removed by Filter: 1
                                                   ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=9739)
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.031..0.033 rows=2 loops=1)
                                                               Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                               Rows Removed by Filter: 5
                                             ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=13) (actual time=0.016..0.018 rows=2 loops=8073)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((info)::text < '8.5'::text)
                                                   Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.164..0.189 rows=1 loops=5949)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                                       Rows Removed by Filter: 71
                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=4709)
                                 Filter: ((info)::text = 'countries'::text)
                                 Rows Removed by Filter: 20
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=12) (actual time=0.020..0.038 rows=16 loops=4115)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23) (actual time=0.006..0.006 rows=1 loops=64848)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text <> '[us]'::text)
                     Rows Removed by Filter: 0
         ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.002..0.002 rows=1 loops=46281)
 Planning Time: 81.180 ms
 Execution Time: 3533.536 ms
(61 rows)

SET
                                                                                                    QUERY PLAN                                                                                                    
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=57963.27..57963.28 rows=1 width=64) (actual time=570.467..570.467 rows=1 loops=1)
   ->  Nested Loop  (cost=4238.90..57963.26 rows=1 width=65) (actual time=564.159..570.133 rows=618 loops=1)
         ->  Nested Loop  (cost=4238.48..57962.82 rows=1 width=69) (actual time=564.058..565.447 rows=618 loops=1)
               ->  Gather  (cost=4238.35..57962.67 rows=1 width=73) (actual time=563.977..565.052 rows=618 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Nested Loop  (cost=3238.35..56962.57 rows=1 width=73) (actual time=533.780..556.478 rows=206 loops=3)
                           ->  Nested Loop  (cost=3237.93..56962.12 rows=1 width=77) (actual time=533.723..555.889 rows=206 loops=3)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=3237.50..56961.52 rows=1 width=85) (actual time=533.680..555.272 rows=205 loops=3)
                                       ->  Nested Loop  (cost=3237.06..56959.69 rows=1 width=77) (actual time=533.624..555.086 rows=2 loops=3)
                                             ->  Nested Loop  (cost=3236.92..56959.27 rows=2 width=81) (actual time=533.579..555.036 rows=2 loops=3)
                                                   ->  Hash Join  (cost=3236.49..54671.45 rows=1099 width=73) (actual time=276.726..398.127 rows=344 loops=3)
                                                         Hash Cond: (t.kind_id = kt.id)
                                                         ->  Hash Join  (cost=3235.39..54637.93 rows=7692 width=29) (actual time=51.687..397.546 rows=694 loops=3)
                                                               Hash Cond: (t.id = cc.movie_id)
                                                               ->  Parallel Seq Scan on title t  (cost=0.00..49166.29 rows=575821 width=25) (actual time=0.044..289.742 rows=460484 loops=3)
                                                                     Filter: (production_year > 2000)
                                                                     Rows Removed by Filter: 382286
                                                               ->  Hash  (cost=2813.24..2813.24 rows=33772 width=4) (actual time=50.202..50.202 rows=24592 loops=3)
                                                                     Buckets: 65536  Batches: 1  Memory Usage: 1377kB
                                                                     ->  Hash Join  (cost=1.06..2813.24 rows=33772 width=4) (actual time=0.135..43.039 rows=24592 loops=3)
                                                                           Hash Cond: (cc.status_id = cct1.id)
                                                                           ->  Seq Scan on complete_cast cc  (cost=0.00..2081.86 rows=135086 width=8) (actual time=0.040..22.282 rows=135086 loops=3)
                                                                           ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.037..0.037 rows=1 loops=3)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.026..0.027 rows=1 loops=3)
                                                                                       Filter: ((kind)::text = 'complete+verified'::text)
                                                                                       Rows Removed by Filter: 3
                                                         ->  Hash  (cost=1.09..1.09 rows=1 width=52) (actual time=0.088..0.088 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=52) (actual time=0.064..0.065 rows=1 loops=3)
                                                                     Filter: ((kind)::text = 'movie'::text)
                                                                     Rows Removed by Filter: 6
                                                   ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.07 rows=1 width=8) (actual time=0.454..0.454 rows=0 loops=1033)
                                                         Index Cond: (movie_id = t.id)
                                                         Filter: ((info IS NOT NULL) AND ((note)::text ~~ '%internet%'::text) AND (((info)::text ~~ 'USA:% 199%'::text) OR ((info)::text ~~ 'USA:% 200%'::text)))
                                                         Rows Removed by Filter: 211
                                             ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.19 rows=1 width=4) (actual time=0.028..0.028 rows=1 loops=5)
                                                   Index Cond: (id = mi.info_type_id)
                                                   Filter: ((info)::text = 'release dates'::text)
                                       ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.36 rows=47 width=8) (actual time=0.044..0.083 rows=123 loops=5)
                                             Index Cond: (movie_id = t.id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=12) (actual time=0.002..0.002 rows=1 loops=615)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=618)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
               ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=618)
                     Index Cond: (id = mc.company_type_id)
                     Heap Fetches: 618
         ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=618)
               Index Cond: (id = mk.keyword_id)
               Heap Fetches: 618
 Planning Time: 76.277 ms
 Execution Time: 572.265 ms
(56 rows)

SET
                                                                                              QUERY PLAN                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7402.39..7402.40 rows=1 width=64) (actual time=164.490..164.490 rows=1 loops=1)
   ->  Nested Loop  (cost=8.89..7402.38 rows=1 width=65) (actual time=48.565..164.455 rows=16 loops=1)
         Join Filter: (mi.info_type_id = it1.id)
         ->  Nested Loop  (cost=8.89..7399.96 rows=1 width=69) (actual time=48.548..164.262 rows=16 loops=1)
               Join Filter: (t.id = mi.movie_id)
               ->  Nested Loop  (cost=8.46..7398.38 rows=1 width=81) (actual time=10.080..130.441 rows=315 loops=1)
                     Join Filter: (mc.company_type_id = ct.id)
                     Rows Removed by Join Filter: 140
                     ->  Nested Loop  (cost=8.46..7397.29 rows=1 width=85) (actual time=10.041..127.895 rows=315 loops=1)
                           ->  Nested Loop  (cost=8.04..7395.51 rows=4 width=89) (actual time=9.901..114.918 rows=1218 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=7.61..7393.10 rows=4 width=77) (actual time=9.838..111.122 rows=60 loops=1)
                                       Join Filter: (cc.status_id = cct1.id)
                                       Rows Removed by Join Filter: 81
                                       ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.036..0.037 rows=1 loops=1)
                                             Filter: ((kind)::text = 'complete+verified'::text)
                                             Rows Removed by Filter: 3
                                       ->  Nested Loop  (cost=7.61..7391.86 rows=15 width=81) (actual time=9.767..111.033 rows=141 loops=1)
                                             ->  Nested Loop  (cost=7.19..7386.60 rows=11 width=73) (actual time=9.217..104.872 rows=401 loops=1)
                                                   Join Filter: (t.kind_id = kt.id)
                                                   Rows Removed by Join Filter: 156
                                                   ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=52) (actual time=0.036..0.038 rows=1 loops=1)
                                                         Filter: ((kind)::text = 'movie'::text)
                                                         Rows Removed by Filter: 6
                                                   ->  Nested Loop  (cost=7.19..7384.59 rows=74 width=29) (actual time=1.626..104.616 rows=557 loops=1)
                                                         ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=1.579..67.674 rows=1133 loops=1)
                                                               ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.169..42.949 rows=4 loops=1)
                                                                     Filter: ((keyword)::text = ANY ('{nerd,loner,alienation,dignity}'::text[]))
                                                                     Rows Removed by Filter: 134166
                                                               ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=0.176..6.027 rows=283 loops=4)
                                                                     Recheck Cond: (keyword_id = k.id)
                                                                     Heap Blocks: exact=1083
                                                                     ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.119..0.119 rows=283 loops=4)
                                                                           Index Cond: (keyword_id = k.id)
                                                         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.031..0.031 rows=0 loops=1133)
                                                               Index Cond: (id = mk.movie_id)
                                                               Filter: (production_year > 2000)
                                                               Rows Removed by Filter: 1
                                             ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=8) (actual time=0.013..0.014 rows=0 loops=401)
                                                   Index Cond: (movie_id = t.id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=12) (actual time=0.033..0.053 rows=20 loops=60)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.010..0.010 rows=0 loops=1218)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.002..0.002 rows=1 loops=315)
               ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.56 rows=1 width=8) (actual time=0.106..0.106 rows=0 loops=315)
                     Index Cond: (movie_id = mk.movie_id)
                     Filter: (((note)::text ~~ '%internet%'::text) AND ((info)::text ~~ 'USA:% 200%'::text))
                     Rows Removed by Filter: 268
         ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=16)
               Filter: ((info)::text = 'release dates'::text)
               Rows Removed by Filter: 15
 Planning Time: 75.729 ms
 Execution Time: 165.225 ms
(56 rows)

SET
                                                                                                       QUERY PLAN                                                                                                       
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=67209.67..67209.68 rows=1 width=64) (actual time=828.716..828.716 rows=1 loops=1)
   ->  Gather  (cost=67209.45..67209.66 rows=2 width=64) (actual time=828.432..840.264 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=66209.45..66209.46 rows=1 width=64) (actual time=820.649..820.649 rows=1 loops=3)
               ->  Nested Loop  (cost=3238.95..66209.44 rows=2 width=65) (actual time=662.377..820.520 rows=209 loops=3)
                     ->  Nested Loop  (cost=3238.53..66208.57 rows=2 width=69) (actual time=662.296..818.655 rows=209 loops=3)
                           ->  Nested Loop  (cost=3238.10..66206.76 rows=1 width=81) (actual time=662.200..818.405 rows=2 loops=3)
                                 ->  Nested Loop  (cost=3237.97..66206.60 rows=1 width=85) (actual time=662.144..818.341 rows=2 loops=3)
                                       ->  Nested Loop  (cost=3237.55..66206.16 rows=1 width=89) (actual time=662.059..818.210 rows=2 loops=3)
                                             ->  Nested Loop  (cost=3237.12..66205.53 rows=1 width=77) (actual time=661.979..818.099 rows=2 loops=3)
                                                   ->  Nested Loop  (cost=3236.98..66203.98 rows=8 width=81) (actual time=661.904..818.013 rows=2 loops=3)
                                                         ->  Hash Join  (cost=3236.54..55283.32 rows=5580 width=73) (actual time=278.531..422.587 rows=1684 loops=3)
                                                               Hash Cond: (t.kind_id = kt.id)
                                                               ->  Hash Join  (cost=3235.39..55241.01 rows=9766 width=29) (actual time=51.922..421.141 rows=2141 loops=3)
                                                                     Hash Cond: (t.id = cc.movie_id)
                                                                     ->  Parallel Seq Scan on title t  (cost=0.00..49166.29 rows=731112 width=25) (actual time=0.060..291.092 rows=583011 loops=3)
                                                                           Filter: (production_year > 1990)
                                                                           Rows Removed by Filter: 259760
                                                                     ->  Hash  (cost=2813.24..2813.24 rows=33772 width=4) (actual time=50.302..50.302 rows=24592 loops=3)
                                                                           Buckets: 65536  Batches: 1  Memory Usage: 1377kB
                                                                           ->  Hash Join  (cost=1.06..2813.24 rows=33772 width=4) (actual time=0.140..43.114 rows=24592 loops=3)
                                                                                 Hash Cond: (cc.status_id = cct1.id)
                                                                                 ->  Seq Scan on complete_cast cc  (cost=0.00..2081.86 rows=135086 width=8) (actual time=0.037..22.280 rows=135086 loops=3)
                                                                                 ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.030..0.031 rows=1 loops=3)
                                                                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                       ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.020..0.020 rows=1 loops=3)
                                                                                             Filter: ((kind)::text = 'complete+verified'::text)
                                                                                             Rows Removed by Filter: 3
                                                               ->  Hash  (cost=1.10..1.10 rows=4 width=52) (actual time=0.085..0.085 rows=4 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on kind_type kt  (cost=0.00..1.10 rows=4 width=52) (actual time=0.055..0.058 rows=4 loops=3)
                                                                           Filter: ((kind)::text = ANY ('{movie,"tv movie","video movie","video game"}'::text[]))
                                                                           Rows Removed by Filter: 3
                                                         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.95 rows=1 width=8) (actual time=0.233..0.234 rows=0 loops=5053)
                                                               Index Cond: (movie_id = t.id)
                                                               Filter: ((info IS NOT NULL) AND ((note)::text ~~ '%internet%'::text) AND (((info)::text ~~ 'USA:% 199%'::text) OR ((info)::text ~~ 'USA:% 200%'::text)))
                                                               Rows Removed by Filter: 123
                                                   ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.19 rows=1 width=4) (actual time=0.041..0.041 rows=1 loops=6)
                                                         Index Cond: (id = mi.info_type_id)
                                                         Filter: ((info)::text = 'release dates'::text)
                                             ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.58 rows=5 width=12) (actual time=0.050..0.053 rows=1 loops=6)
                                                   Index Cond: (movie_id = t.id)
                                       ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.054..0.054 rows=1 loops=7)
                                             Index Cond: (id = mc.company_id)
                                             Filter: ((country_code)::text = '[us]'::text)
                                 ->  Index Only Scan using company_type_pkey on company_type ct  (cost=0.13..0.15 rows=1 width=4) (actual time=0.025..0.025 rows=1 loops=7)
                                       Index Cond: (id = mc.company_type_id)
                                       Heap Fetches: 7
                           ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.34 rows=47 width=8) (actual time=0.052..0.085 rows=90 loops=7)
                                 Index Cond: (movie_id = t.id)
                     ->  Index Only Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=628)
                           Index Cond: (id = mk.keyword_id)
                           Heap Fetches: 628
 Planning Time: 74.282 ms
 Execution Time: 841.212 ms
(56 rows)

SET
                                                                                                  QUERY PLAN                                                                                                  
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=6567.88..6567.89 rows=1 width=96) (actual time=1522.171..1522.172 rows=1 loops=1)
   ->  Nested Loop  (cost=10.32..6567.87 rows=1 width=48) (actual time=231.701..1521.888 rows=275 loops=1)
         ->  Nested Loop  (cost=9.89..6566.07 rows=1 width=41) (actual time=5.242..1497.290 rows=6518 loops=1)
               Join Filter: (rt.id = ci.role_id)
               Rows Removed by Join Filter: 30060
               ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.030..0.033 rows=1 loops=1)
                     Filter: ((role)::text = 'actress'::text)
                     Rows Removed by Filter: 11
               ->  Nested Loop  (cost=9.89..6564.90 rows=2 width=45) (actual time=4.752..1493.005 rows=36578 loops=1)
                     ->  Nested Loop  (cost=9.47..6562.80 rows=1 width=41) (actual time=4.707..1409.457 rows=13608 loops=1)
                           ->  Nested Loop  (cost=9.04..6561.09 rows=1 width=29) (actual time=4.643..1331.200 rows=13758 loops=1)
                                 Join Filter: (t.id = ci.movie_id)
                                 ->  Nested Loop  (cost=8.47..6521.26 rows=1 width=33) (actual time=2.286..630.588 rows=3406 loops=1)
                                       Join Filter: (it.id = mi.info_type_id)
                                       ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.012..0.024 rows=1 loops=1)
                                             Filter: ((info)::text = 'release dates'::text)
                                             Rows Removed by Filter: 112
                                       ->  Nested Loop  (cost=8.47..6518.83 rows=1 width=37) (actual time=2.273..629.715 rows=3406 loops=1)
                                             Join Filter: (t.id = mi.movie_id)
                                             ->  Nested Loop  (cost=8.04..6322.71 rows=6 width=29) (actual time=2.212..478.312 rows=1576 loops=1)
                                                   ->  Nested Loop  (cost=7.62..6297.69 rows=17 width=33) (actual time=2.168..416.939 rows=5566 loops=1)
                                                         Join Filter: (t.id = mc.movie_id)
                                                         ->  Nested Loop  (cost=7.19..6242.22 rows=16 width=25) (actual time=2.123..394.528 rows=495 loops=1)
                                                               ->  Nested Loop  (cost=6.76..6082.75 rows=101 width=4) (actual time=1.678..184.155 rows=9696 loops=1)
                                                                     ->  Seq Scan on keyword k  (cost=0.00..2793.84 rows=3 width=4) (actual time=0.041..35.857 rows=3 loops=1)
                                                                           Filter: ((keyword)::text = ANY ('{hero,martial-arts,hand-to-hand-combat}'::text[]))
                                                                           Rows Removed by Filter: 134167
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1093.30 rows=300 width=8) (actual time=1.461..47.753 rows=3232 loops=3)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=7446
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=1.118..1.118 rows=3232 loops=3)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using title_pkey on title t  (cost=0.43..1.58 rows=1 width=21) (actual time=0.021..0.021 rows=0 loops=9696)
                                                                     Index Cond: (id = mk.movie_id)
                                                                     Filter: (production_year > 2010)
                                                                     Rows Removed by Filter: 1
                                                         ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..3.40 rows=5 width=8) (actual time=0.026..0.039 rows=11 loops=495)
                                                               Index Cond: (movie_id = mk.movie_id)
                                                   ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..1.47 rows=1 width=4) (actual time=0.010..0.010 rows=0 loops=5566)
                                                         Index Cond: (id = mc.company_id)
                                                         Filter: ((country_code)::text = '[us]'::text)
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..32.67 rows=1 width=8) (actual time=0.031..0.095 rows=2 loops=1576)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%201%'::text) OR ((info)::text ~~ 'USA:%201%'::text)))
                                                   Rows Removed by Filter: 131
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..39.82 rows=1 width=16) (actual time=0.134..0.204 rows=4 loops=3406)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                       Rows Removed by Filter: 169
                           ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..1.70 rows=1 width=20) (actual time=0.005..0.005 rows=1 loops=13758)
                                 Index Cond: (id = ci.person_role_id)
                     ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.08 rows=2 width=4) (actual time=0.004..0.005 rows=3 loops=13608)
                           Index Cond: (person_id = ci.person_id)
                           Heap Fetches: 36578
         ->  Index Scan using name_pkey on name n  (cost=0.43..1.80 rows=1 width=19) (actual time=0.003..0.003 rows=0 loops=6518)
               Index Cond: (id = ci.person_id)
               Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
               Rows Removed by Filter: 1
 Planning Time: 102.159 ms
 Execution Time: 1523.091 ms
(61 rows)

SET
                                                                                                            QUERY PLAN                                                                                                            
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=6518.41..6518.42 rows=1 width=96) (actual time=111.775..111.775 rows=1 loops=1)
   ->  Nested Loop  (cost=1004.27..6518.40 rows=1 width=48) (actual time=63.181..111.719 rows=45 loops=1)
         ->  Nested Loop  (cost=1003.85..6516.52 rows=1 width=52) (actual time=21.646..108.120 rows=810 loops=1)
               ->  Nested Loop  (cost=1003.42..6514.72 rows=1 width=45) (actual time=21.589..102.184 rows=1986 loops=1)
                     ->  Nested Loop  (cost=1003.28..6514.53 rows=1 width=49) (actual time=21.562..98.544 rows=1986 loops=1)
                           Join Filter: (t.id = mi.movie_id)
                           ->  Nested Loop  (cost=1002.85..6481.85 rows=1 width=61) (actual time=21.495..49.504 rows=842 loops=1)
                                 ->  Gather  (cost=1002.42..6480.14 rows=1 width=49) (actual time=21.454..47.007 rows=857 loops=1)
                                       Workers Planned: 1
                                       Workers Launched: 1
                                       ->  Nested Loop  (cost=2.42..5480.04 rows=1 width=49) (actual time=44.676..57.300 rows=428 loops=2)
                                             ->  Nested Loop  (cost=2.28..5479.87 rows=1 width=53) (actual time=44.225..53.450 rows=2428 loops=2)
                                                   ->  Nested Loop  (cost=1.86..5477.77 rows=1 width=49) (actual time=44.179..49.271 rows=920 loops=2)
                                                         Join Filter: (t.id = ci.movie_id)
                                                         ->  Nested Loop  (cost=1.29..5437.93 rows=1 width=33) (actual time=43.108..45.082 rows=42 loops=2)
                                                               Join Filter: (t.id = mk.movie_id)
                                                               ->  Nested Loop  (cost=0.86..5434.87 rows=1 width=25) (actual time=43.068..44.969 rows=2 loops=2)
                                                                     ->  Nested Loop  (cost=0.43..5425.21 rows=6 width=4) (actual time=42.595..43.277 rows=50 loops=2)
                                                                           ->  Parallel Seq Scan on company_name cn  (cost=0.00..5068.50 rows=1 width=4) (actual time=42.550..42.556 rows=0 loops=2)
                                                                                 Filter: (((country_code)::text = '[us]'::text) AND ((name)::text = 'DreamWorks Animation'::text))
                                                                                 Rows Removed by Filter: 117498
                                                                           ->  Index Scan using company_id_movie_companies on movie_companies mc  (cost=0.43..355.38 rows=133 width=8) (actual time=0.083..1.386 rows=99 loops=1)
                                                                                 Index Cond: (company_id = cn.id)
                                                                     ->  Index Scan using title_pkey on title t  (cost=0.43..1.60 rows=1 width=21) (actual time=0.033..0.033 rows=0 loops=99)
                                                                           Index Cond: (id = mc.movie_id)
                                                                           Filter: ((production_year > 2010) AND ((title)::text ~~ 'Kung Fu Panda%'::text))
                                                                           Rows Removed by Filter: 1
                                                               ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..2.47 rows=47 width=8) (actual time=0.036..0.046 rows=21 loops=4)
                                                                     Index Cond: (movie_id = mc.movie_id)
                                                         ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..39.82 rows=1 width=16) (actual time=0.012..0.095 rows=22 loops=83)
                                                               Index Cond: (movie_id = mk.movie_id)
                                                               Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                               Rows Removed by Filter: 75
                                                   ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.08 rows=2 width=4) (actual time=0.003..0.004 rows=3 loops=1841)
                                                         Index Cond: (person_id = ci.person_id)
                                                         Heap Fetches: 4855
                                             ->  Index Scan using role_type_pkey on role_type rt  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=4855)
                                                   Index Cond: (id = ci.role_id)
                                                   Filter: ((role)::text = 'actress'::text)
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..1.70 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=857)
                                       Index Cond: (id = ci.person_role_id)
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..32.67 rows=1 width=8) (actual time=0.010..0.057 rows=2 loops=842)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%201%'::text) OR ((info)::text ~~ 'USA:%201%'::text)))
                                 Rows Removed by Filter: 166
                     ->  Index Scan using info_type_pkey on info_type it  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1986)
                           Index Cond: (id = mi.info_type_id)
                           Filter: ((info)::text = 'release dates'::text)
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.80 rows=1 width=19) (actual time=0.003..0.003 rows=0 loops=1986)
                     Index Cond: (id = ci.person_id)
                     Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                     Rows Removed by Filter: 1
         ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..1.46 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=810)
               Index Cond: (id = mk.keyword_id)
               Filter: ((keyword)::text = ANY ('{hero,martial-arts,hand-to-hand-combat,computer-animated-movie}'::text[]))
               Rows Removed by Filter: 1
 Planning Time: 100.213 ms
 Execution Time: 112.813 ms
(59 rows)

SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7505.11..7505.12 rows=1 width=128) (actual time=9143.692..9143.692 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.03..7505.10 rows=1 width=80) (actual time=60.468..9135.415 rows=4407 loops=1)
         Join Filter: (mi.movie_id = t.id)
         ->  Nested Loop  (cost=1011.60..7504.28 rows=1 width=79) (actual time=60.373..9036.203 rows=4407 loops=1)
               ->  Nested Loop  (cost=1011.17..7503.25 rows=1 width=68) (actual time=33.933..8829.493 rows=7112 loops=1)
                     ->  Nested Loop  (cost=1011.03..7503.07 rows=1 width=72) (actual time=33.883..8792.444 rows=7740 loops=1)
                           Join Filter: (mi.movie_id = ci.movie_id)
                           ->  Gather  (cost=1010.47..7474.12 rows=1 width=64) (actual time=10.069..2001.078 rows=12260 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Nested Loop  (cost=10.46..6474.02 rows=1 width=64) (actual time=10.859..2672.201 rows=4087 loops=3)
                                       Join Filter: (mi_idx.movie_id = mi.movie_id)
                                       ->  Hash Join  (cost=10.03..6438.32 rows=2 width=13) (actual time=7.282..634.886 rows=16920 loops=3)
                                             Hash Cond: (mi_idx.info_type_id = it2.id)
                                             ->  Nested Loop  (cost=7.61..6435.32 rows=213 width=17) (actual time=7.050..608.895 rows=50907 loops=3)
                                                   ->  Nested Loop  (cost=7.18..6379.27 rows=70 width=4) (actual time=6.979..325.979 rows=20699 loops=3)
                                                         ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4207.70 rows=2 width=4) (actual time=0.389..32.145 rows=2 loops=3)
                                                               Filter: ((keyword)::text = ANY ('{murder,blood,gore,death,female-nudity}'::text[]))
                                                               Rows Removed by Filter: 44722
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1082.78 rows=300 width=8) (actual time=5.386..171.206 rows=12419 loops=5)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=12389
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=4.159..4.159 rows=12419 loops=5)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.77 rows=3 width=13) (actual time=0.011..0.012 rows=2 loops=62096)
                                                         Index Cond: (movie_id = mk.movie_id)
                                             ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.092..0.092 rows=1 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.069..0.072 rows=1 loops=3)
                                                         Filter: ((info)::text = 'votes'::text)
                                                         Rows Removed by Filter: 112
                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..17.84 rows=1 width=51) (actual time=0.119..0.120 rows=0 loops=50760)
                                             Index Cond: (movie_id = mk.movie_id)
                                             Filter: ((info)::text = 'Horror'::text)
                                             Rows Removed by Filter: 56
                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..28.93 rows=1 width=8) (actual time=0.451..0.552 rows=1 loops=12260)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                 Rows Removed by Filter: 47
                     ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=7740)
                           Index Cond: (id = mi.info_type_id)
                           Filter: ((info)::text = 'genres'::text)
                           Rows Removed by Filter: 0
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.03 rows=1 width=19) (actual time=0.028..0.028 rows=1 loops=7112)
                     Index Cond: (id = ci.person_id)
                     Filter: ((gender)::text = 'm'::text)
                     Rows Removed by Filter: 0
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.81 rows=1 width=21) (actual time=0.020..0.020 rows=1 loops=4407)
               Index Cond: (id = mk.movie_id)
 Planning Time: 26.857 ms
 Execution Time: 9144.889 ms
(51 rows)

SET
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7485.20..7485.21 rows=1 width=128) (actual time=786.920..786.921 rows=1 loops=1)
   ->  Nested Loop  (cost=1009.75..7485.19 rows=1 width=80) (actual time=410.038..786.859 rows=6 loops=1)
         ->  Nested Loop  (cost=1009.32..7484.17 rows=1 width=69) (actual time=409.939..786.629 rows=6 loops=1)
               ->  Nested Loop  (cost=1009.18..7483.98 rows=1 width=73) (actual time=409.911..786.547 rows=18 loops=1)
                     Join Filter: (t.id = mi_idx.movie_id)
                     ->  Nested Loop  (cost=1008.75..7483.18 rows=1 width=80) (actual time=409.829..786.383 rows=6 loops=1)
                           ->  Nested Loop  (cost=1008.61..7482.99 rows=1 width=84) (actual time=409.736..786.264 rows=6 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=1008.17..7465.14 rows=1 width=33) (actual time=409.452..785.371 rows=6 loops=1)
                                       Join Filter: (t.id = ci.movie_id)
                                       ->  Gather  (cost=1007.61..7436.20 rows=1 width=25) (actual time=408.602..789.018 rows=9 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Nested Loop  (cost=7.61..6436.10 rows=1 width=25) (actual time=420.555..591.085 rows=3 loops=3)
                                                   ->  Nested Loop  (cost=7.18..6379.27 rows=70 width=4) (actual time=6.973..294.347 rows=20699 loops=3)
                                                         ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4207.70 rows=2 width=4) (actual time=0.389..53.756 rows=2 loops=3)
                                                               Filter: ((keyword)::text = ANY ('{murder,blood,gore,death,female-nudity}'::text[]))
                                                               Rows Removed by Filter: 44722
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1082.78 rows=300 width=8) (actual time=5.369..139.408 rows=12419 loops=5)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=12389
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=4.148..4.148 rows=12419 loops=5)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.81 rows=1 width=21) (actual time=0.013..0.013 rows=0 loops=62096)
                                                         Index Cond: (id = mk.movie_id)
                                                         Filter: ((production_year > 2010) AND ((title)::text ~~ 'Vampire%'::text))
                                                         Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..28.93 rows=1 width=8) (actual time=0.194..0.236 rows=1 loops=9)
                                             Index Cond: (movie_id = mk.movie_id)
                                             Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                             Rows Removed by Filter: 21
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..17.84 rows=1 width=51) (actual time=0.146..0.147 rows=1 loops=6)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = 'Horror'::text)
                                       Rows Removed by Filter: 20
                           ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=6)
                                 Index Cond: (id = mi.info_type_id)
                                 Filter: ((info)::text = 'genres'::text)
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.77 rows=3 width=13) (actual time=0.023..0.024 rows=3 loops=6)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=18)
                     Index Cond: (id = mi_idx.info_type_id)
                     Filter: ((info)::text = 'votes'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using name_pkey on name n  (cost=0.43..1.03 rows=1 width=19) (actual time=0.037..0.037 rows=1 loops=6)
               Index Cond: (id = ci.person_id)
               Filter: ((gender)::text = 'm'::text)
 Planning Time: 28.302 ms
 Execution Time: 793.480 ms
(49 rows)

SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8711.77..8711.78 rows=1 width=128) (actual time=31139.521..31139.522 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.03..8711.76 rows=1 width=80) (actual time=14.178..31100.475 rows=26153 loops=1)
         Join Filter: (mi.movie_id = t.id)
         ->  Nested Loop  (cost=1011.60..8710.94 rows=1 width=79) (actual time=14.117..30763.637 rows=26153 loops=1)
               ->  Nested Loop  (cost=1011.17..8709.91 rows=1 width=68) (actual time=14.026..29965.567 rows=42900 loops=1)
                     Join Filter: (mi.movie_id = ci.movie_id)
                     ->  Gather  (cost=1010.61..8680.97 rows=1 width=60) (actual time=10.089..2272.016 rows=63386 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop  (cost=10.61..7680.87 rows=1 width=60) (actual time=7.664..3889.452 rows=21129 loops=3)
                                 ->  Nested Loop  (cost=10.46..7680.52 rows=2 width=64) (actual time=7.644..3807.956 rows=22577 loops=3)
                                       Join Filter: (mi_idx.movie_id = mi.movie_id)
                                       ->  Hash Join  (cost=10.03..7644.40 rows=2 width=13) (actual time=7.412..823.551 rows=21234 loops=3)
                                             Hash Cond: (mi_idx.info_type_id = it2.id)
                                             ->  Nested Loop  (cost=7.61..7641.16 rows=298 width=17) (actual time=7.193..789.631 rows=63896 loops=3)
                                                   ->  Nested Loop  (cost=7.18..7562.69 rows=98 width=4) (actual time=7.122..421.550 rows=25571 loops=3)
                                                         ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4347.46 rows=3 width=4) (actual time=0.546..35.956 rows=2 loops=3)
                                                               Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                               Rows Removed by Filter: 44721
                                                         ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1068.74 rows=300 width=8) (actual time=4.999..160.607 rows=10959 loops=7)
                                                               Recheck Cond: (keyword_id = k.id)
                                                               Heap Blocks: exact=12389
                                                               ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.869..3.869 rows=10959 loops=7)
                                                                     Index Cond: (keyword_id = k.id)
                                                   ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.77 rows=3 width=13) (actual time=0.012..0.013 rows=2 loops=76714)
                                                         Index Cond: (movie_id = mk.movie_id)
                                             ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.077..0.077 rows=1 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.050..0.053 rows=1 loops=3)
                                                         Filter: ((info)::text = 'votes'::text)
                                                         Rows Removed by Filter: 112
                                       ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..18.05 rows=1 width=51) (actual time=0.136..0.139 rows=1 loops=63701)
                                             Index Cond: (movie_id = mk.movie_id)
                                             Filter: ((info)::text = ANY ('{Horror,Action,Sci-Fi,Thriller,Crime,War}'::text[]))
                                             Rows Removed by Filter: 58
                                 ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=67732)
                                       Index Cond: (id = mi.info_type_id)
                                       Filter: ((info)::text = 'genres'::text)
                                       Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..28.93 rows=1 width=8) (actual time=0.347..0.436 rows=1 loops=63386)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                           Rows Removed by Filter: 63
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.03 rows=1 width=19) (actual time=0.017..0.017 rows=1 loops=42900)
                     Index Cond: (id = ci.person_id)
                     Filter: ((gender)::text = 'm'::text)
                     Rows Removed by Filter: 0
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.81 rows=1 width=21) (actual time=0.011..0.011 rows=1 loops=26153)
               Index Cond: (id = mk.movie_id)
 Planning Time: 28.570 ms
 Execution Time: 31140.708 ms
(51 rows)

SET
                                                                                                      QUERY PLAN                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=14697.96..14697.97 rows=1 width=128) (actual time=5654.822..5654.822 rows=1 loops=1)
   ->  Nested Loop  (cost=9.46..14697.95 rows=1 width=53) (actual time=34.233..5651.582 rows=1728 loops=1)
         Join Filter: (cct1.id = cc.subject_id)
         Rows Removed by Join Filter: 471
         ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.030..0.031 rows=1 loops=1)
               Filter: ((kind)::text = 'cast'::text)
               Rows Removed by Filter: 3
         ->  Nested Loop  (cost=9.46..14696.89 rows=1 width=57) (actual time=34.201..5650.942 rows=2199 loops=1)
               Join Filter: (cct2.id = cc.status_id)
               Rows Removed by Join Filter: 2199
               ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.008..0.011 rows=2 loops=1)
                     Filter: ((kind)::text ~~ '%complete%'::text)
                     Rows Removed by Filter: 2
               ->  Nested Loop  (cost=9.46..14695.82 rows=1 width=61) (actual time=28.560..2824.748 rows=2199 loops=2)
                     ->  Nested Loop  (cost=9.04..14695.35 rows=1 width=69) (actual time=20.785..2801.393 rows=2929 loops=2)
                           ->  Nested Loop  (cost=8.61..14694.89 rows=1 width=58) (actual time=20.742..2727.195 rows=2929 loops=2)
                                 ->  Nested Loop  (cost=8.18..14688.49 rows=14 width=46) (actual time=20.292..1880.728 rows=105632 loops=2)
                                       Join Filter: (t.id = ci.movie_id)
                                       ->  Nested Loop  (cost=7.62..14686.50 rows=1 width=34) (actual time=20.222..790.451 rows=884 loops=2)
                                             Join Filter: (kt.id = t.kind_id)
                                             Rows Removed by Join Filter: 1016
                                             ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.017..0.019 rows=1 loops=2)
                                                   Filter: ((kind)::text = 'movie'::text)
                                                   Rows Removed by Filter: 6
                                             ->  Nested Loop  (cost=7.62..14685.40 rows=1 width=38) (actual time=1.172..789.779 rows=1900 loops=2)
                                                   ->  Nested Loop  (cost=7.19..14684.91 rows=1 width=13) (actual time=1.136..702.050 rows=3908 loops=2)
                                                         Join Filter: (mi_idx.info_type_id = it2.id)
                                                         Rows Removed by Join Filter: 2713
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.023..0.026 rows=1 loops=2)
                                                               Filter: ((info)::text = 'rating'::text)
                                                               Rows Removed by Filter: 112
                                                         ->  Nested Loop  (cost=7.19..14680.72 rows=142 width=17) (actual time=1.109..699.981 rows=6621 loops=2)
                                                               ->  Nested Loop  (cost=6.76..14509.57 rows=337 width=4) (actual time=0.884..362.623 rows=24091 loops=2)
                                                                     ->  Seq Scan on keyword k  (cost=0.00..3967.82 rows=10 width=4) (actual time=0.183..53.660 rows=10 loops=2)
                                                                           Filter: ((keyword)::text = ANY ('{superhero,marvel-comics,based-on-comic,tv-special,fight,violence,magnet,web,claw,laser}'::text[]))
                                                                           Rows Removed by Filter: 134160
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1051.17 rows=300 width=8) (actual time=0.975..29.849 rows=2409 loops=20)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=34254
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.722..0.722 rows=2409 loops=20)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=13) (actual time=0.013..0.013 rows=0 loops=48182)
                                                                     Index Cond: (movie_id = mk.movie_id)
                                                                     Filter: ((info)::text > '7.0'::text)
                                                                     Rows Removed by Filter: 2
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.021..0.021 rows=0 loops=7816)
                                                         Index Cond: (id = mk.movie_id)
                                                         Filter: (production_year > 2000)
                                                         Rows Removed by Filter: 1
                                       ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.031..1.148 rows=119 loops=1768)
                                             Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=20) (actual time=0.007..0.007 rows=0 loops=211264)
                                       Index Cond: (id = ci.person_role_id)
                                       Filter: ((name IS NOT NULL) AND (((name)::text ~~ '%man%'::text) OR ((name)::text ~~ '%Man%'::text)))
                                       Rows Removed by Filter: 0
                           ->  Index Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=19) (actual time=0.024..0.024 rows=1 loops=5858)
                                 Index Cond: (id = ci.person_id)
                     ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.006..0.007 rows=1 loops=5858)
                           Index Cond: (movie_id = t.id)
 Planning Time: 87.882 ms
 Execution Time: 5655.572 ms
(61 rows)

SET
                                                                                                      QUERY PLAN                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7402.91..7402.92 rows=1 width=96) (actual time=775.962..775.962 rows=1 loops=1)
   ->  Nested Loop  (cost=9.46..7402.90 rows=1 width=38) (actual time=67.781..775.806 rows=93 loops=1)
         Join Filter: (cct1.id = cc.subject_id)
         Rows Removed by Join Filter: 87
         ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.032..0.033 rows=1 loops=1)
               Filter: ((kind)::text = 'cast'::text)
               Rows Removed by Filter: 3
         ->  Nested Loop  (cost=9.46..7401.84 rows=1 width=42) (actual time=67.746..775.736 rows=180 loops=1)
               Join Filter: (cct2.id = cc.status_id)
               Rows Removed by Join Filter: 180
               ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.009..0.012 rows=2 loops=1)
                     Filter: ((kind)::text ~~ '%complete%'::text)
                     Rows Removed by Filter: 2
               ->  Nested Loop  (cost=9.46..7400.78 rows=1 width=46) (actual time=56.250..387.820 rows=180 loops=2)
                     ->  Nested Loop  (cost=9.04..7400.30 rows=1 width=54) (actual time=52.741..386.887 rows=191 loops=2)
                           ->  Nested Loop  (cost=8.61..7399.84 rows=1 width=58) (actual time=52.719..383.876 rows=191 loops=2)
                                 ->  Nested Loop  (cost=8.18..7393.44 rows=14 width=46) (actual time=52.626..348.006 rows=7981 loops=2)
                                       Join Filter: (t.id = ci.movie_id)
                                       ->  Nested Loop  (cost=7.62..7391.45 rows=1 width=34) (actual time=52.601..302.699 rows=31 loops=2)
                                             Join Filter: (kt.id = t.kind_id)
                                             Rows Removed by Join Filter: 167
                                             ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.009..0.011 rows=1 loops=2)
                                                   Filter: ((kind)::text = 'movie'::text)
                                                   Rows Removed by Filter: 6
                                             ->  Nested Loop  (cost=7.62..7390.35 rows=1 width=38) (actual time=1.528..302.616 rows=198 loops=2)
                                                   ->  Nested Loop  (cost=7.19..7389.87 rows=1 width=13) (actual time=1.491..295.791 rows=313 loops=2)
                                                         Join Filter: (mi_idx.info_type_id = it2.id)
                                                         Rows Removed by Join Filter: 613
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.022..0.025 rows=1 loops=2)
                                                               Filter: ((info)::text = 'rating'::text)
                                                               Rows Removed by Filter: 112
                                                         ->  Nested Loop  (cost=7.19..7387.28 rows=14 width=17) (actual time=1.151..295.518 rows=926 loops=2)
                                                               ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=0.883..166.352 rows=9984 loops=2)
                                                                     ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=0.137..38.474 rows=4 loops=2)
                                                                           Filter: ((keyword)::text = ANY ('{superhero,marvel-comics,based-on-comic,fight}'::text[]))
                                                                           Rows Removed by Filter: 134166
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=1.018..30.892 rows=2496 loops=8)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=15372
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.752..0.752 rows=2496 loops=8)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=13) (actual time=0.012..0.012 rows=0 loops=19968)
                                                                     Index Cond: (movie_id = mk.movie_id)
                                                                     Filter: ((info)::text > '8.0'::text)
                                                                     Rows Removed by Filter: 2
                                                   ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.021..0.021 rows=1 loops=626)
                                                         Index Cond: (id = mk.movie_id)
                                                         Filter: (production_year > 2005)
                                                         Rows Removed by Filter: 0
                                       ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.031..1.341 rows=257 loops=62)
                                             Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=20) (actual time=0.004..0.004 rows=0 loops=15962)
                                       Index Cond: (id = ci.person_role_id)
                                       Filter: ((name IS NOT NULL) AND (((name)::text ~~ '%man%'::text) OR ((name)::text ~~ '%Man%'::text)))
                                       Rows Removed by Filter: 0
                           ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=382)
                                 Index Cond: (id = ci.person_id)
                                 Heap Fetches: 382
                     ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.003..0.004 rows=1 loops=382)
                           Index Cond: (movie_id = t.id)
 Planning Time: 87.463 ms
 Execution Time: 776.671 ms
(62 rows)

SET
                                                                                                   QUERY PLAN                                                                                                   
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=14709.67..14709.68 rows=1 width=96) (actual time=9575.981..9575.981 rows=1 loops=1)
   ->  Nested Loop  (cost=9.46..14709.67 rows=1 width=38) (actual time=19.022..9567.611 rows=5400 loops=1)
         Join Filter: (it2.id = mi_idx.info_type_id)
         Rows Removed by Join Filter: 11196
         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.036..0.038 rows=1 loops=1)
               Filter: ((info)::text = 'rating'::text)
               Rows Removed by Filter: 112
         ->  Nested Loop  (cost=9.46..14707.24 rows=1 width=42) (actual time=18.981..9564.591 rows=16596 loops=1)
               Join Filter: (t.id = mi_idx.movie_id)
               ->  Nested Loop  (cost=9.03..14706.72 rows=1 width=49) (actual time=18.922..9503.116 rows=5406 loops=1)
                     ->  Nested Loop  (cost=8.60..14700.32 rows=14 width=37) (actual time=17.884..7792.185 rows=189844 loops=1)
                           ->  Nested Loop  (cost=8.17..14693.95 rows=14 width=41) (actual time=17.852..3964.618 rows=189844 loops=1)
                                 Join Filter: (t.id = ci.movie_id)
                                 ->  Nested Loop  (cost=7.61..14691.96 rows=1 width=29) (actual time=17.767..1708.861 rows=1267 loops=1)
                                       Join Filter: (cct2.id = cc.status_id)
                                       Rows Removed by Join Filter: 1267
                                       ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.030..0.031 rows=2 loops=1)
                                             Filter: ((kind)::text ~~ '%complete%'::text)
                                             Rows Removed by Filter: 2
                                       ->  Nested Loop  (cost=7.61..14690.90 rows=1 width=33) (actual time=15.450..854.079 rows=1267 loops=2)
                                             Join Filter: (cct1.id = cc.subject_id)
                                             Rows Removed by Join Filter: 218
                                             ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=2)
                                                   Filter: ((kind)::text = 'cast'::text)
                                                   Rows Removed by Filter: 3
                                             ->  Nested Loop  (cost=7.61..14689.84 rows=1 width=37) (actual time=15.440..853.459 rows=1485 loops=2)
                                                   ->  Nested Loop  (cost=7.19..14677.40 rows=26 width=25) (actual time=15.189..810.593 rows=5032 loops=2)
                                                         Join Filter: (kt.id = t.kind_id)
                                                         Rows Removed by Join Filter: 5581
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4) (actual time=0.006..0.008 rows=1 loops=2)
                                                               Filter: ((kind)::text = 'movie'::text)
                                                               Rows Removed by Filter: 6
                                                         ->  Nested Loop  (cost=7.19..14674.02 rows=184 width=29) (actual time=0.923..806.986 rows=10613 loops=2)
                                                               ->  Nested Loop  (cost=6.76..14509.57 rows=337 width=4) (actual time=0.886..369.772 rows=24091 loops=2)
                                                                     ->  Seq Scan on keyword k  (cost=0.00..3967.82 rows=10 width=4) (actual time=0.194..53.679 rows=10 loops=2)
                                                                           Filter: ((keyword)::text = ANY ('{superhero,marvel-comics,based-on-comic,tv-special,fight,violence,magnet,web,claw,laser}'::text[]))
                                                                           Rows Removed by Filter: 134160
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1051.17 rows=300 width=8) (actual time=1.003..30.406 rows=2409 loops=20)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=34254
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.748..0.748 rows=2409 loops=20)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.017..0.017 rows=0 loops=48182)
                                                                     Index Cond: (id = mk.movie_id)
                                                                     Filter: (production_year > 2000)
                                                                     Rows Removed by Filter: 1
                                                   ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.007..0.007 rows=0 loops=10064)
                                                         Index Cond: (movie_id = t.id)
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=12) (actual time=0.034..1.658 rows=150 loops=1267)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Only Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=4) (actual time=0.019..0.019 rows=1 loops=189844)
                                 Index Cond: (id = ci.person_id)
                                 Heap Fetches: 189844
                     ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.46 rows=1 width=20) (actual time=0.008..0.008 rows=0 loops=189844)
                           Index Cond: (id = ci.person_role_id)
                           Filter: ((name IS NOT NULL) AND (((name)::text ~~ '%man%'::text) OR ((name)::text ~~ '%Man%'::text)))
                           Rows Removed by Filter: 0
               ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.48 rows=3 width=13) (actual time=0.008..0.009 rows=3 loops=5406)
                     Index Cond: (movie_id = ci.movie_id)
 Planning Time: 88.810 ms
 Execution Time: 9576.732 ms
(61 rows)

SET
                                                                                                  QUERY PLAN                                                                                                   
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3759.09..3759.10 rows=1 width=96) (actual time=228.361..228.361 rows=1 loops=1)
   ->  Nested Loop  (cost=9.18..3759.08 rows=1 width=118) (actual time=10.201..227.986 rows=477 loops=1)
         Join Filter: (ml.movie_id = mi.movie_id)
         ->  Nested Loop  (cost=8.74..3757.51 rows=1 width=138) (actual time=9.907..224.771 rows=172 loops=1)
               Join Filter: (cc.subject_id = cct1.id)
               Rows Removed by Join Filter: 57
               ->  Nested Loop  (cost=8.74..3756.43 rows=1 width=142) (actual time=9.896..223.366 rows=172 loops=1)
                     Join Filter: (cct2.id = cc.status_id)
                     Rows Removed by Join Filter: 57
                     ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.032..0.033 rows=1 loops=1)
                           Filter: ((kind)::text = 'complete'::text)
                           Rows Removed by Filter: 3
                     ->  Nested Loop  (cost=8.74..3755.36 rows=2 width=146) (actual time=9.862..223.280 rows=229 loops=1)
                           Join Filter: (ml.movie_id = cc.movie_id)
                           ->  Nested Loop  (cost=8.32..3754.88 rows=1 width=134) (actual time=6.556..222.327 rows=310 loops=1)
                                 Join Filter: (ml.movie_id = t.id)
                                 ->  Nested Loop  (cost=7.89..3754.38 rows=1 width=113) (actual time=6.487..220.820 rows=402 loops=1)
                                       ->  Nested Loop  (cost=7.47..3753.92 rows=1 width=98) (actual time=5.588..216.775 rows=962 loops=1)
                                             Join Filter: (ct.id = mc.company_type_id)
                                             Rows Removed by Join Filter: 59
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.025..0.027 rows=1 loops=1)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                             ->  Nested Loop  (cost=7.47..3752.83 rows=3 width=102) (actual time=5.562..216.546 rows=1021 loops=1)
                                                   Join Filter: (ml.movie_id = mc.movie_id)
                                                   ->  Nested Loop  (cost=7.04..3752.25 rows=1 width=90) (actual time=5.486..214.333 rows=199 loops=1)
                                                         Join Filter: (lt.id = ml.link_type_id)
                                                         Rows Removed by Join Filter: 303
                                                         ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.027..0.035 rows=2 loops=1)
                                                               Filter: ((link)::text ~~ '%follow%'::text)
                                                               Rows Removed by Filter: 16
                                                         ->  Nested Loop  (cost=7.04..3750.90 rows=10 width=12) (actual time=4.818..107.102 rows=251 loops=2)
                                                               ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=4.800..85.203 rows=10544 loops=2)
                                                                     ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.233..17.565 rows=1 loops=2)
                                                                           Filter: ((keyword)::text = 'sequel'::text)
                                                                           Rows Removed by Filter: 134169
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=3.514..65.003 rows=10544 loops=2)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=11140
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=2.683..2.683 rows=10544 loops=2)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=8) (actual time=0.002..0.002 rows=0 loops=21088)
                                                                     Index Cond: (movie_id = mk.movie_id)
                                                   ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=3 width=12) (actual time=0.007..0.010 rows=5 loops=199)
                                                         Index Cond: (movie_id = mk.movie_id)
                                                         Filter: (note IS NULL)
                                                         Rows Removed by Filter: 2
                                       ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.004..0.004 rows=0 loops=962)
                                             Index Cond: (id = mc.company_id)
                                             Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.003..0.003 rows=1 loops=402)
                                       Index Cond: (id = mk.movie_id)
                                       Filter: ((production_year >= 1950) AND (production_year <= 2000))
                                       Rows Removed by Filter: 0
                           ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.002..0.002 rows=1 loops=310)
                                 Index Cond: (movie_id = mk.movie_id)
               ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=2 width=4) (actual time=0.002..0.002 rows=1 loops=172)
                     Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.56 rows=1 width=4) (actual time=0.014..0.017 rows=3 loops=172)
               Index Cond: (movie_id = mk.movie_id)
               Filter: ((info)::text = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
               Rows Removed by Filter: 17
 Planning Time: 87.318 ms
 Execution Time: 229.094 ms
(65 rows)

SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=2479.14..2479.15 rows=1 width=96) (actual time=69.079..69.079 rows=1 loops=1)
   ->  Nested Loop  (cost=4.75..2479.13 rows=1 width=118) (actual time=44.838..68.727 rows=247 loops=1)
         Join Filter: (mc.company_type_id = ct.id)
         ->  Nested Loop  (cost=4.75..2478.07 rows=1 width=122) (actual time=44.823..66.679 rows=247 loops=1)
               ->  Nested Loop  (cost=4.33..2457.31 rows=47 width=126) (actual time=44.703..61.066 rows=1919 loops=1)
                     Join Filter: (ml.movie_id = mk.movie_id)
                     ->  Nested Loop  (cost=3.90..2455.35 rows=1 width=142) (actual time=44.649..59.322 rows=247 loops=1)
                           Join Filter: (ml.movie_id = mi.movie_id)
                           ->  Nested Loop  (cost=3.47..2453.33 rows=1 width=138) (actual time=44.554..58.160 rows=95 loops=1)
                                 ->  Nested Loop  (cost=3.05..2451.96 rows=3 width=123) (actual time=44.509..57.483 rows=190 loops=1)
                                       Join Filter: (ml.movie_id = t.id)
                                       ->  Hash Join  (cost=2.62..2365.94 rows=144 width=102) (actual time=3.552..54.083 rows=794 loops=1)
                                             Hash Cond: (ml.link_type_id = lt.id)
                                             ->  Merge Join  (cost=1.38..2356.27 rows=2601 width=24) (actual time=0.822..52.932 rows=7314 loops=1)
                                                   Merge Cond: (mc.movie_id = ml.movie_id)
                                                   ->  Nested Loop  (cost=0.85..33295.88 rows=43182 width=16) (actual time=0.756..37.691 rows=4811 loops=1)
                                                         ->  Nested Loop  (cost=0.42..11074.61 rows=16886 width=4) (actual time=0.098..9.585 rows=5561 loops=1)
                                                               Join Filter: (cct2.id = cc.status_id)
                                                               Rows Removed by Join Filter: 432
                                                               ->  Nested Loop  (cost=0.42..10060.41 rows=67543 width=8) (actual time=0.071..7.546 rows=5993 loops=1)
                                                                     Join Filter: (cct1.id = cc.subject_id)
                                                                     Rows Removed by Join Filter: 2305
                                                                     ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..6344.49 rows=135086 width=12) (actual time=0.025..4.071 rows=5993 loops=1)
                                                                     ->  Materialize  (cost=0.00..1.06 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=5993)
                                                                           ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=2 width=4) (actual time=0.031..0.033 rows=2 loops=1)
                                                                                 Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
                                                               ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=5993)
                                                                     ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.016..0.017 rows=1 loops=1)
                                                                           Filter: ((kind)::text = 'complete'::text)
                                                                           Rows Removed by Filter: 3
                                                         ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..1.29 rows=3 width=12) (actual time=0.004..0.005 rows=1 loops=5561)
                                                               Index Cond: (movie_id = cc.movie_id)
                                                               Filter: (note IS NULL)
                                                               Rows Removed by Filter: 2
                                                   ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..959.51 rows=29997 width=8) (actual time=0.024..9.803 rows=35147 loops=1)
                                             ->  Hash  (cost=1.23..1.23 rows=1 width=86) (actual time=0.038..0.038 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.013..0.018 rows=2 loops=1)
                                                         Filter: ((link)::text ~~ '%follow%'::text)
                                                         Rows Removed by Filter: 16
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.58 rows=1 width=21) (actual time=0.004..0.004 rows=0 loops=794)
                                             Index Cond: (id = mc.movie_id)
                                             Filter: (production_year = 1998)
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=190)
                                       Index Cond: (id = mc.company_id)
                                       Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                                       Rows Removed by Filter: 0
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.02 rows=1 width=4) (actual time=0.008..0.011 rows=3 loops=95)
                                 Index Cond: (movie_id = mc.movie_id)
                                 Filter: ((info)::text = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
                                 Rows Removed by Filter: 10
                     ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.37 rows=47 width=8) (actual time=0.002..0.005 rows=8 loops=247)
                           Index Cond: (movie_id = mc.movie_id)
               ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=1919)
                     Index Cond: (id = mk.keyword_id)
                     Filter: ((keyword)::text = 'sequel'::text)
                     Rows Removed by Filter: 1
         ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=247)
               Filter: ((kind)::text = 'production companies'::text)
               Rows Removed by Filter: 1
 Planning Time: 86.272 ms
 Execution Time: 69.891 ms
(63 rows)

SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=2071.28..2071.29 rows=1 width=96) (actual time=119.928..119.929 rows=1 loops=1)
   ->  Nested Loop  (cost=3.52..2071.27 rows=1 width=118) (actual time=10.506..119.497 rows=743 loops=1)
         ->  Nested Loop  (cost=3.10..1948.16 rows=279 width=122) (actual time=5.584..90.651 rows=11620 loops=1)
               Join Filter: (ml.movie_id = mk.movie_id)
               ->  Nested Loop  (cost=2.66..1936.64 rows=6 width=138) (actual time=5.531..82.188 rows=1150 loops=1)
                     ->  Nested Loop  (cost=2.24..1920.67 rows=35 width=123) (actual time=2.648..72.819 rows=2871 loops=1)
                           Join Filter: (ml.movie_id = mi.movie_id)
                           ->  Nested Loop  (cost=1.81..1891.16 rows=14 width=119) (actual time=2.329..45.253 rows=763 loops=1)
                                 Join Filter: (mc.company_type_id = ct.id)
                                 Rows Removed by Join Filter: 101
                                 ->  Nested Loop  (cost=1.81..1889.30 rows=54 width=123) (actual time=2.309..44.828 rows=864 loops=1)
                                       Join Filter: (ml.movie_id = t.id)
                                       ->  Nested Loop  (cost=1.38..1846.11 rows=72 width=102) (actual time=2.266..41.110 rows=864 loops=1)
                                             Join Filter: (lt.id = ml.link_type_id)
                                             Rows Removed by Join Filter: 12659
                                             ->  Merge Join  (cost=1.38..1825.36 rows=1301 width=24) (actual time=0.590..37.011 rows=6843 loops=1)
                                                   Merge Cond: (mc.movie_id = ml.movie_id)
                                                   ->  Nested Loop  (cost=0.85..19990.11 rows=21591 width=16) (actual time=0.514..24.533 rows=3202 loops=1)
                                                         ->  Nested Loop  (cost=0.42..8879.47 rows=8443 width=4) (actual time=0.079..8.348 rows=3688 loops=1)
                                                               Join Filter: (cc.subject_id = cct1.id)
                                                               Rows Removed by Join Filter: 2305
                                                               ->  Nested Loop  (cost=0.42..8371.84 rows=33772 width=8) (actual time=0.060..6.182 rows=5993 loops=1)
                                                                     Join Filter: (cct2.id = cc.status_id)
                                                                     Rows Removed by Join Filter: 432
                                                                     ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..6344.49 rows=135086 width=12) (actual time=0.011..3.469 rows=5993 loops=1)
                                                                     ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=5993)
                                                                           ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.033..0.033 rows=2 loops=1)
                                                                                 Filter: ((kind)::text ~~ 'complete%'::text)
                                                                                 Rows Removed by Filter: 2
                                                               ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=5993)
                                                                     ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=1)
                                                                           Filter: ((kind)::text = 'cast'::text)
                                                                           Rows Removed by Filter: 3
                                                         ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..1.29 rows=3 width=12) (actual time=0.004..0.004 rows=1 loops=3688)
                                                               Index Cond: (movie_id = cc.movie_id)
                                                               Filter: (note IS NULL)
                                                               Rows Removed by Filter: 2
                                                   ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..959.51 rows=29997 width=8) (actual time=0.024..7.444 rows=33905 loops=1)
                                             ->  Materialize  (cost=0.00..1.23 rows=1 width=86) (actual time=0.000..0.000 rows=2 loops=6843)
                                                   ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=86) (actual time=0.017..0.022 rows=2 loops=1)
                                                         Filter: ((link)::text ~~ '%follow%'::text)
                                                         Rows Removed by Filter: 16
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..0.59 rows=1 width=21) (actual time=0.004..0.004 rows=1 loops=864)
                                             Index Cond: (id = mc.movie_id)
                                             Filter: ((production_year >= 1950) AND (production_year <= 2010))
                                 ->  Materialize  (cost=0.00..1.05 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=864)
                                       ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.009..0.011 rows=1 loops=1)
                                             Filter: ((kind)::text = 'production companies'::text)
                                             Rows Removed by Filter: 3
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.07 rows=3 width=4) (actual time=0.031..0.035 rows=4 loops=763)
                                 Index Cond: (movie_id = t.id)
                                 Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,English}'::text[]))
                                 Rows Removed by Filter: 31
                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.46 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=2871)
                           Index Cond: (id = mc.company_id)
                           Filter: (((country_code)::text <> '[pl]'::text) AND (((name)::text ~~ '%Film%'::text) OR ((name)::text ~~ '%Warner%'::text)))
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_movie_keyword on movie_keyword mk  (cost=0.43..1.33 rows=47 width=8) (actual time=0.003..0.004 rows=10 loops=1150)
                     Index Cond: (movie_id = t.id)
         ->  Index Scan using keyword_pkey on keyword k  (cost=0.42..0.44 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=11620)
               Index Cond: (id = mk.keyword_id)
               Filter: ((keyword)::text = 'sequel'::text)
               Rows Removed by Filter: 1
 Planning Time: 85.951 ms
 Execution Time: 120.771 ms
(65 rows)

SET
                                                                                                        QUERY PLAN                                                                                                         
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7410.76..7410.77 rows=1 width=96) (actual time=1687.384..1687.385 rows=1 loops=1)
   ->  Nested Loop  (cost=9.32..7410.76 rows=1 width=41) (actual time=11.796..1681.581 rows=4803 loops=1)
         ->  Nested Loop  (cost=8.90..7410.21 rows=1 width=26) (actual time=11.766..1635.440 rows=4955 loops=1)
               Join Filter: (ct.id = mc.company_type_id)
               ->  Nested Loop  (cost=8.90..7409.12 rows=1 width=30) (actual time=11.748..1597.405 rows=4955 loops=1)
                     Join Filter: (t.id = mc.movie_id)
                     ->  Nested Loop  (cost=8.47..7408.54 rows=1 width=42) (actual time=11.702..1571.413 rows=432 loops=1)
                           Join Filter: (it1.id = mi.info_type_id)
                           Rows Removed by Join Filter: 49
                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.014..0.025 rows=1 loops=1)
                                 Filter: ((info)::text = 'countries'::text)
                                 Rows Removed by Filter: 112
                           ->  Nested Loop  (cost=8.47..7406.11 rows=1 width=46) (actual time=11.686..1571.222 rows=481 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=8.04..7404.21 rows=1 width=38) (actual time=11.546..1429.272 rows=473 loops=1)
                                       Join Filter: (cc.subject_id = cct1.id)
                                       Rows Removed by Join Filter: 1570
                                       ->  Nested Loop  (cost=8.04..7403.15 rows=1 width=42) (actual time=11.500..1412.299 rows=2043 loops=1)
                                             Join Filter: (cct2.id = cc.status_id)
                                             Rows Removed by Join Filter: 6987
                                             ->  Nested Loop  (cost=8.04..7402.06 rows=1 width=46) (actual time=11.478..1385.478 rows=3010 loops=1)
                                                   ->  Nested Loop  (cost=7.62..7401.59 rows=1 width=34) (actual time=7.752..1322.769 rows=9301 loops=1)
                                                         Join Filter: (it2.id = mi_idx.info_type_id)
                                                         Rows Removed by Join Filter: 18529
                                                         ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.019..0.022 rows=1 loops=1)
                                                               Filter: ((info)::text = 'rating'::text)
                                                               Rows Removed by Filter: 112
                                                         ->  Nested Loop  (cost=7.62..7399.04 rows=11 width=38) (actual time=7.729..1317.790 rows=27830 loops=1)
                                                               Join Filter: (t.id = mi_idx.movie_id)
                                                               ->  Nested Loop  (cost=7.19..7387.79 rows=21 width=25) (actual time=7.677..1108.520 rows=11686 loops=1)
                                                                     Join Filter: (kt.id = t.kind_id)
                                                                     Rows Removed by Join Filter: 7484
                                                                     ->  Nested Loop  (cost=7.19..7384.59 rows=74 width=29) (actual time=7.528..1092.761 rows=14771 loops=1)
                                                                           ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=7.483..527.011 rows=37091 loops=1)
                                                                                 ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.496..38.294 rows=3 loops=1)
                                                                                       Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                       Rows Removed by Filter: 134167
                                                                                 ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=5.144..157.220 rows=12364 loops=3)
                                                                                       Recheck Cond: (keyword_id = k.id)
                                                                                       Heap Blocks: exact=26312
                                                                                       ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.840..3.840 rows=12364 loops=3)
                                                                                             Index Cond: (keyword_id = k.id)
                                                                           ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.014..0.014 rows=0 loops=37091)
                                                                                 Index Cond: (id = mk.movie_id)
                                                                                 Filter: (production_year > 2000)
                                                                                 Rows Removed by Filter: 1
                                                                     ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=14771)
                                                                           ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.022..0.023 rows=2 loops=1)
                                                                                 Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                                                 Rows Removed by Filter: 5
                                                               ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=13) (actual time=0.015..0.016 rows=2 loops=11686)
                                                                     Index Cond: (movie_id = mk.movie_id)
                                                                     Filter: ((info)::text < '8.5'::text)
                                                                     Rows Removed by Filter: 0
                                                   ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.005..0.006 rows=0 loops=9301)
                                                         Index Cond: (movie_id = t.id)
                                             ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=3 width=4) (actual time=0.002..0.003 rows=3 loops=3010)
                                                   Filter: ((kind)::text <> 'complete+verified'::text)
                                                   Rows Removed by Filter: 0
                                       ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=2043)
                                             Filter: ((kind)::text = 'crew'::text)
                                             Rows Removed by Filter: 3
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.257..0.298 rows=1 loops=473)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                                       Rows Removed by Filter: 139
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.027..0.055 rows=11 loops=432)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                           Rows Removed by Filter: 10
               ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.002..0.002 rows=1 loops=4955)
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.008..0.008 rows=1 loops=4955)
               Index Cond: (id = mc.company_id)
               Filter: ((country_code)::text <> '[us]'::text)
               Rows Removed by Filter: 0
 Planning Time: 109.755 ms
 Execution Time: 1688.229 ms
(77 rows)

SET
                                                                                                            QUERY PLAN                                                                                                            
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7401.26..7401.27 rows=1 width=96) (actual time=1297.256..1297.256 rows=1 loops=1)
   ->  Nested Loop  (cost=9.32..7401.25 rows=1 width=41) (actual time=17.319..1297.000 rows=148 loops=1)
         ->  Nested Loop  (cost=8.90..7400.70 rows=1 width=26) (actual time=17.263..1294.295 rows=150 loops=1)
               Join Filter: (ct.id = mc.company_type_id)
               ->  Nested Loop  (cost=8.90..7399.61 rows=1 width=30) (actual time=17.230..1293.086 rows=150 loops=1)
                     Join Filter: (t.id = mc.movie_id)
                     ->  Nested Loop  (cost=8.47..7399.03 rows=1 width=42) (actual time=17.169..1291.846 rows=13 loops=1)
                           Join Filter: (it1.id = mi.info_type_id)
                           Rows Removed by Join Filter: 7
                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.014..0.026 rows=1 loops=1)
                                 Filter: ((info)::text = 'countries'::text)
                                 Rows Removed by Filter: 112
                           ->  Nested Loop  (cost=8.47..7396.60 rows=1 width=46) (actual time=17.153..1291.801 rows=20 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=8.04..7395.03 rows=1 width=38) (actual time=12.501..1249.701 rows=179 loops=1)
                                       Join Filter: (cct2.id = cc.status_id)
                                       Rows Removed by Join Filter: 394
                                       ->  Nested Loop  (cost=8.04..7393.94 rows=1 width=42) (actual time=12.490..1247.936 rows=191 loops=1)
                                             Join Filter: (cct1.id = cc.subject_id)
                                             Rows Removed by Join Filter: 689
                                             ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.030..0.031 rows=1 loops=1)
                                                   Filter: ((kind)::text = 'crew'::text)
                                                   Rows Removed by Filter: 3
                                             ->  Nested Loop  (cost=8.04..7392.88 rows=1 width=46) (actual time=12.438..1247.626 rows=880 loops=1)
                                                   ->  Nested Loop  (cost=7.62..7392.40 rows=1 width=34) (actual time=8.072..1225.469 rows=2312 loops=1)
                                                         Join Filter: (kt.id = t.kind_id)
                                                         Rows Removed by Join Filter: 1695
                                                         ->  Nested Loop  (cost=7.62..7391.29 rows=1 width=38) (actual time=7.825..1199.493 rows=2835 loops=1)
                                                               ->  Nested Loop  (cost=7.19..7390.80 rows=1 width=13) (actual time=7.783..984.176 rows=11708 loops=1)
                                                                     Join Filter: (it2.id = mi_idx.info_type_id)
                                                                     Rows Removed by Join Filter: 5912
                                                                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.019..0.023 rows=1 loops=1)
                                                                           Filter: ((info)::text = 'rating'::text)
                                                                           Rows Removed by Filter: 112
                                                                     ->  Nested Loop  (cost=7.19..7387.28 rows=89 width=17) (actual time=7.762..978.968 rows=17620 loops=1)
                                                                           ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=7.714..536.199 rows=37091 loops=1)
                                                                                 ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.930..38.592 rows=3 loops=1)
                                                                                       Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                       Rows Removed by Filter: 134167
                                                                                 ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=5.021..160.655 rows=12364 loops=3)
                                                                                       Recheck Cond: (keyword_id = k.id)
                                                                                       Heap Blocks: exact=26312
                                                                                       ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.722..3.722 rows=12364 loops=3)
                                                                                             Index Cond: (keyword_id = k.id)
                                                                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=13) (actual time=0.011..0.011 rows=0 loops=37091)
                                                                                 Index Cond: (movie_id = mk.movie_id)
                                                                                 Filter: ((info)::text > '6.5'::text)
                                                                                 Rows Removed by Filter: 2
                                                               ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.018..0.018 rows=0 loops=11708)
                                                                     Index Cond: (id = mk.movie_id)
                                                                     Filter: (production_year > 2005)
                                                                     Rows Removed by Filter: 1
                                                         ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.003..0.003 rows=1 loops=2835)
                                                               Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                               Rows Removed by Filter: 2
                                                   ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.008..0.008 rows=0 loops=2312)
                                                         Index Cond: (movie_id = t.id)
                                       ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=3 width=4) (actual time=0.002..0.003 rows=3 loops=191)
                                             Filter: ((kind)::text <> 'complete+verified'::text)
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.56 rows=1 width=8) (actual time=0.225..0.234 rows=0 loops=179)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Sweden,Germany,Swedish,German}'::text[]))
                                       Rows Removed by Filter: 130
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.049..0.088 rows=12 loops=13)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                           Rows Removed by Filter: 17
               ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.002..0.002 rows=1 loops=150)
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.017..0.017 rows=1 loops=150)
               Index Cond: (id = mc.company_id)
               Filter: ((country_code)::text <> '[us]'::text)
               Rows Removed by Filter: 0
 Planning Time: 111.893 ms
 Execution Time: 1298.087 ms
(75 rows)

SET
                                                                                                        QUERY PLAN                                                                                                         
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=7408.04..7408.05 rows=1 width=96) (actual time=4457.300..4457.301 rows=1 loops=1)
   ->  Nested Loop  (cost=9.32..7408.03 rows=1 width=41) (actual time=12.581..4446.067 rows=8373 loops=1)
         Join Filter: (mc.company_type_id = ct.id)
         ->  Nested Loop  (cost=9.32..7406.94 rows=1 width=45) (actual time=12.561..4381.124 rows=8373 loops=1)
               Join Filter: (it1.id = mi.info_type_id)
               Rows Removed by Join Filter: 1116
               ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.015..0.027 rows=1 loops=1)
                     Filter: ((info)::text = 'countries'::text)
                     Rows Removed by Filter: 112
               ->  Nested Loop  (cost=9.32..7404.51 rows=1 width=49) (actual time=12.544..4378.766 rows=9489 loops=1)
                     Join Filter: (t.id = mi.movie_id)
                     ->  Nested Loop  (cost=8.88..7402.62 rows=1 width=65) (actual time=12.398..3443.212 rows=8156 loops=1)
                           Join Filter: (cc.subject_id = cct1.id)
                           Rows Removed by Join Filter: 1453
                           ->  Nested Loop  (cost=8.88..7401.55 rows=1 width=69) (actual time=12.388..3365.998 rows=9609 loops=1)
                                 Join Filter: (cct2.id = cc.status_id)
                                 Rows Removed by Join Filter: 5617
                                 ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.031..0.032 rows=1 loops=1)
                                       Filter: ((kind)::text = 'complete'::text)
                                       Rows Removed by Filter: 3
                                 ->  Nested Loop  (cost=8.88..7400.49 rows=1 width=73) (actual time=12.355..3362.094 rows=15226 loops=1)
                                       ->  Nested Loop  (cost=8.46..7400.01 rows=1 width=61) (actual time=12.310..3224.993 rows=23425 loops=1)
                                             Join Filter: (mi_idx.info_type_id = it2.id)
                                             Rows Removed by Join Filter: 46773
                                             ->  Nested Loop  (cost=8.46..7397.59 rows=1 width=65) (actual time=11.116..1811.214 rows=70198 loops=1)
                                                   Join Filter: (t.id = mi_idx.movie_id)
                                                   ->  Nested Loop  (cost=8.04..7397.05 rows=1 width=52) (actual time=11.070..1595.852 rows=23902 loops=1)
                                                         ->  Nested Loop  (cost=7.62..7396.50 rows=1 width=37) (actual time=11.031..1429.629 rows=25853 loops=1)
                                                               Join Filter: (t.id = mc.movie_id)
                                                               ->  Nested Loop  (cost=7.19..7387.25 rows=16 width=25) (actual time=7.994..1133.998 rows=8073 loops=1)
                                                                     Join Filter: (t.kind_id = kt.id)
                                                                     Rows Removed by Join Filter: 4332
                                                                     ->  Nested Loop  (cost=7.19..7384.59 rows=55 width=29) (actual time=7.844..1123.409 rows=9739 loops=1)
                                                                           ->  Nested Loop  (cost=6.76..7318.72 rows=135 width=4) (actual time=7.799..540.152 rows=37091 loops=1)
                                                                                 ->  Seq Scan on keyword k  (cost=0.00..2961.55 rows=4 width=4) (actual time=1.921..38.407 rows=3 loops=1)
                                                                                       Filter: ((keyword)::text = ANY ('{murder,murder-in-title,blood,violence}'::text[]))
                                                                                       Rows Removed by Filter: 134167
                                                                                 ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1086.29 rows=300 width=8) (actual time=5.085..161.403 rows=12364 loops=3)
                                                                                       Recheck Cond: (keyword_id = k.id)
                                                                                       Heap Blocks: exact=26312
                                                                                       ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.780..3.780 rows=12364 loops=3)
                                                                                             Index Cond: (keyword_id = k.id)
                                                                           ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=25) (actual time=0.015..0.015 rows=0 loops=37091)
                                                                                 Index Cond: (id = mk.movie_id)
                                                                                 Filter: (production_year > 2005)
                                                                                 Rows Removed by Filter: 1
                                                                     ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=1 loops=9739)
                                                                           ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=2 width=4) (actual time=0.012..0.014 rows=2 loops=1)
                                                                                 Filter: ((kind)::text = ANY ('{movie,episode}'::text[]))
                                                                                 Rows Removed by Filter: 5
                                                               ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.57 rows=1 width=12) (actual time=0.025..0.035 rows=3 loops=8073)
                                                                     Index Cond: (movie_id = mk.movie_id)
                                                                     Filter: (((note)::text !~~ '%(USA)%'::text) AND ((note)::text ~~ '%(200%)%'::text))
                                                                     Rows Removed by Filter: 7
                                                         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.55 rows=1 width=23) (actual time=0.006..0.006 rows=1 loops=25853)
                                                               Index Cond: (id = mc.company_id)
                                                               Filter: ((country_code)::text <> '[us]'::text)
                                                               Rows Removed by Filter: 0
                                                   ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=3 width=13) (actual time=0.005..0.008 rows=3 loops=23902)
                                                         Index Cond: (movie_id = mk.movie_id)
                                                         Filter: ((info)::text < '8.5'::text)
                                                         Rows Removed by Filter: 0
                                             ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.014..0.015 rows=1 loops=70198)
                                                   Filter: ((info)::text = 'rating'::text)
                                                   Rows Removed by Filter: 108
                                       ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.46 rows=2 width=12) (actual time=0.004..0.005 rows=1 loops=23425)
                                             Index Cond: (movie_id = t.id)
                           ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=9609)
                                 Filter: ((kind)::text = 'cast'::text)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=8) (actual time=0.094..0.113 rows=1 loops=8156)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Danish,Norwegian,German,USA,American}'::text[]))
                           Rows Removed by Filter: 206
         ->  Seq Scan on company_type ct  (cost=0.00..1.04 rows=4 width=4) (actual time=0.002..0.002 rows=1 loops=8373)
 Planning Time: 111.837 ms
 Execution Time: 4458.184 ms
(77 rows)

SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3946.87..3946.88 rows=1 width=96) (actual time=62.495..62.495 rows=1 loops=1)
   ->  Nested Loop  (cost=11.17..3946.87 rows=1 width=48) (actual time=19.110..61.976 rows=1620 loops=1)
         Join Filter: (it3.id = pi.info_type_id)
         Rows Removed by Join Filter: 3270
         ->  Seq Scan on info_type it3  (cost=0.00..2.41 rows=1 width=4) (actual time=0.017..0.027 rows=1 loops=1)
               Filter: ((info)::text = 'trivia'::text)
               Rows Removed by Filter: 112
         ->  Nested Loop  (cost=11.17..3944.44 rows=1 width=52) (actual time=19.054..61.437 rows=4890 loops=1)
               Join Filter: (n.id = pi.person_id)
               ->  Nested Loop  (cost=10.74..3924.23 rows=1 width=60) (actual time=18.978..59.017 rows=30 loops=1)
                     Join Filter: (it.id = mi.info_type_id)
                     ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.011..0.024 rows=1 loops=1)
                           Filter: ((info)::text = 'release dates'::text)
                           Rows Removed by Filter: 112
                     ->  Nested Loop  (cost=10.74..3921.81 rows=1 width=64) (actual time=18.966..58.983 rows=30 loops=1)
                           Join Filter: (t.id = mi.movie_id)
                           ->  Nested Loop  (cost=10.31..3878.76 rows=1 width=80) (actual time=18.791..56.097 rows=15 loops=1)
                                 Join Filter: (cct2.id = cc.status_id)
                                 ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.031..0.032 rows=1 loops=1)
                                       Filter: ((kind)::text = 'complete+verified'::text)
                                       Rows Removed by Filter: 3
                                 ->  Nested Loop  (cost=10.31..3877.70 rows=1 width=84) (actual time=18.758..56.058 rows=15 loops=1)
                                       Join Filter: (cct1.id = cc.subject_id)
                                       ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.007..0.009 rows=1 loops=1)
                                             Filter: ((kind)::text = 'cast'::text)
                                             Rows Removed by Filter: 3
                                       ->  Nested Loop  (cost=10.31..3876.64 rows=1 width=88) (actual time=18.749..56.042 rows=15 loops=1)
                                             Join Filter: (t.id = cc.movie_id)
                                             ->  Nested Loop  (cost=9.89..3873.84 rows=1 width=76) (actual time=18.704..55.950 rows=15 loops=1)
                                                   ->  Nested Loop  (cost=9.46..3871.53 rows=1 width=57) (actual time=18.627..55.808 rows=15 loops=1)
                                                         ->  Nested Loop  (cost=9.04..3869.51 rows=1 width=61) (actual time=18.577..55.151 rows=66 loops=1)
                                                               ->  Nested Loop  (cost=8.61..3865.49 rows=1 width=49) (actual time=18.496..53.866 rows=352 loops=1)
                                                                     Join Filter: (rt.id = ci.role_id)
                                                                     Rows Removed by Join Filter: 1100
                                                                     ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.026..0.028 rows=1 loops=1)
                                                                           Filter: ((role)::text = 'actress'::text)
                                                                           Rows Removed by Filter: 11
                                                                     ->  Nested Loop  (cost=8.61..3864.32 rows=2 width=53) (actual time=17.450..53.647 rows=1452 loops=1)
                                                                           ->  Nested Loop  (cost=8.18..3861.40 rows=1 width=49) (actual time=17.299..49.856 rows=836 loops=1)
                                                                                 Join Filter: (t.id = ci.movie_id)
                                                                                 ->  Nested Loop  (cost=7.62..3813.81 rows=1 width=33) (actual time=17.220..42.826 rows=22 loops=1)
                                                                                       Join Filter: (t.id = mc.movie_id)
                                                                                       ->  Nested Loop  (cost=7.19..3808.95 rows=1 width=25) (actual time=17.114..42.682 rows=1 loops=1)
                                                                                             ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=0.331..29.206 rows=414 loops=1)
                                                                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.104..21.126 rows=1 loops=1)
                                                                                                         Filter: ((keyword)::text = 'computer-animation'::text)
                                                                                                         Rows Removed by Filter: 134169
                                                                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=0.220..7.859 rows=414 loops=1)
                                                                                                         Recheck Cond: (keyword_id = k.id)
                                                                                                         Heap Blocks: exact=358
                                                                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.149..0.149 rows=414 loops=1)
                                                                                                               Index Cond: (keyword_id = k.id)
                                                                                             ->  Index Scan using title_pkey on title t  (cost=0.43..2.12 rows=1 width=21) (actual time=0.031..0.031 rows=0 loops=414)
                                                                                                   Index Cond: (id = mk.movie_id)
                                                                                                   Filter: ((production_year >= 2000) AND (production_year <= 2010) AND ((title)::text = 'Shrek 2'::text))
                                                                                                   Rows Removed by Filter: 1
                                                                                       ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..4.80 rows=5 width=8) (actual time=0.102..0.130 rows=22 loops=1)
                                                                                             Index Cond: (movie_id = mk.movie_id)
                                                                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..47.58 rows=1 width=16) (actual time=0.007..0.309 rows=38 loops=22)
                                                                                       Index Cond: (movie_id = mk.movie_id)
                                                                                       Filter: ((note)::text = ANY ('{(voice),"(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                                       Rows Removed by Filter: 191
                                                                           ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.90 rows=2 width=4) (actual time=0.003..0.004 rows=2 loops=836)
                                                                                 Index Cond: (person_id = ci.person_id)
                                                                                 Heap Fetches: 1452
                                                               ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..2.22 rows=1 width=20) (actual time=0.003..0.003 rows=0 loops=352)
                                                                     Index Cond: (id = ci.person_role_id)
                                                                     Filter: ((name)::text = 'Queen'::text)
                                                                     Rows Removed by Filter: 1
                                                         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..2.03 rows=1 width=4) (actual time=0.009..0.009 rows=0 loops=66)
                                                               Index Cond: (id = mc.company_id)
                                                               Filter: ((country_code)::text = '[us]'::text)
                                                               Rows Removed by Filter: 1
                                                   ->  Index Scan using name_pkey on name n  (cost=0.43..2.30 rows=1 width=19) (actual time=0.008..0.008 rows=1 loops=15)
                                                         Index Cond: (id = ci.person_id)
                                                         Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                             ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..2.78 rows=2 width=12) (actual time=0.005..0.005 rows=1 loops=15)
                                                   Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..43.02 rows=2 width=8) (actual time=0.027..0.191 rows=2 loops=15)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%200%'::text) OR ((info)::text ~~ 'USA:%200%'::text)))
                                 Rows Removed by Filter: 455
               ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..19.88 rows=26 width=8) (actual time=0.005..0.043 rows=163 loops=30)
                     Index Cond: (person_id = an.person_id)
 Planning Time: 146.375 ms
 Execution Time: 63.684 ms
(86 rows)

SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3950.13..3950.14 rows=1 width=96) (actual time=35.535..35.536 rows=1 loops=1)
   ->  Nested Loop  (cost=11.17..3950.12 rows=1 width=48) (actual time=8.670..35.514 rows=15 loops=1)
         Join Filter: (ci.person_id = n.id)
         ->  Nested Loop  (cost=10.74..3947.92 rows=1 width=45) (actual time=8.640..35.434 rows=15 loops=1)
               Join Filter: (it3.id = pi.info_type_id)
               Rows Removed by Join Filter: 2430
               ->  Seq Scan on info_type it3  (cost=0.00..2.41 rows=1 width=4) (actual time=0.017..0.027 rows=1 loops=1)
                     Filter: ((info)::text = 'height'::text)
                     Rows Removed by Filter: 112
               ->  Nested Loop  (cost=10.74..3945.19 rows=26 width=49) (actual time=8.526..35.190 rows=2445 loops=1)
                     ->  Nested Loop  (cost=10.31..3925.03 rows=1 width=41) (actual time=8.496..34.152 rows=15 loops=1)
                           ->  Nested Loop  (cost=9.89..3923.01 rows=1 width=45) (actual time=8.460..33.613 rows=66 loops=1)
                                 Join Filter: (t.id = mc.movie_id)
                                 ->  Nested Loop  (cost=9.46..3918.14 rows=1 width=61) (actual time=8.417..33.503 rows=3 loops=1)
                                       Join Filter: (mi.info_type_id = it.id)
                                       ->  Nested Loop  (cost=9.46..3915.72 rows=1 width=65) (actual time=8.404..33.468 rows=3 loops=1)
                                             Join Filter: (cc.status_id = cct2.id)
                                             ->  Nested Loop  (cost=9.46..3914.65 rows=1 width=69) (actual time=8.393..33.439 rows=3 loops=1)
                                                   Join Filter: (cct1.id = cc.subject_id)
                                                   ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.030..0.032 rows=1 loops=1)
                                                         Filter: ((kind)::text = 'cast'::text)
                                                         Rows Removed by Filter: 3
                                                   ->  Nested Loop  (cost=9.46..3913.59 rows=1 width=73) (actual time=8.361..33.404 rows=3 loops=1)
                                                         Join Filter: (t.id = cc.movie_id)
                                                         ->  Nested Loop  (cost=9.04..3907.99 rows=2 width=61) (actual time=8.322..33.355 rows=3 loops=1)
                                                               ->  Nested Loop  (cost=8.62..3905.08 rows=1 width=57) (actual time=8.265..33.283 rows=1 loops=1)
                                                                     Join Filter: (t.id = mi.movie_id)
                                                                     ->  Nested Loop  (cost=8.18..3862.13 rows=1 width=49) (actual time=8.171..32.997 rows=1 loops=1)
                                                                           ->  Nested Loop  (cost=7.75..3858.12 rows=1 width=37) (actual time=8.120..32.492 rows=11 loops=1)
                                                                                 Join Filter: (rt.id = ci.role_id)
                                                                                 Rows Removed by Join Filter: 27
                                                                                 ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.010..0.013 rows=1 loops=1)
                                                                                       Filter: ((role)::text = 'actress'::text)
                                                                                       Rows Removed by Filter: 11
                                                                                 ->  Nested Loop  (cost=7.75..3856.96 rows=1 width=41) (actual time=7.914..32.470 rows=38 loops=1)
                                                                                       Join Filter: (t.id = ci.movie_id)
                                                                                       ->  Nested Loop  (cost=7.19..3809.37 rows=1 width=25) (actual time=7.878..31.125 rows=1 loops=1)
                                                                                             ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=0.271..23.292 rows=414 loops=1)
                                                                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.078..20.549 rows=1 loops=1)
                                                                                                         Filter: ((keyword)::text = 'computer-animation'::text)
                                                                                                         Rows Removed by Filter: 134169
                                                                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=0.185..2.565 rows=414 loops=1)
                                                                                                         Recheck Cond: (keyword_id = k.id)
                                                                                                         Heap Blocks: exact=358
                                                                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.122..0.122 rows=414 loops=1)
                                                                                                               Index Cond: (keyword_id = k.id)
                                                                                             ->  Index Scan using title_pkey on title t  (cost=0.43..2.12 rows=1 width=21) (actual time=0.018..0.018 rows=0 loops=414)
                                                                                                   Index Cond: (id = mk.movie_id)
                                                                                                   Filter: ((production_year >= 2000) AND (production_year <= 2005) AND ((title)::text = 'Shrek 2'::text))
                                                                                                   Rows Removed by Filter: 1
                                                                                       ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..47.58 rows=1 width=16) (actual time=0.033..1.323 rows=38 loops=1)
                                                                                             Index Cond: (movie_id = mk.movie_id)
                                                                                             Filter: ((note)::text = ANY ('{(voice),"(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                                             Rows Removed by Filter: 191
                                                                           ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..2.22 rows=1 width=20) (actual time=0.045..0.045 rows=0 loops=11)
                                                                                 Index Cond: (id = ci.person_role_id)
                                                                                 Filter: ((name)::text = 'Queen'::text)
                                                                                 Rows Removed by Filter: 1
                                                                     ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..42.92 rows=2 width=8) (actual time=0.091..0.284 rows=1 loops=1)
                                                                           Index Cond: (movie_id = mk.movie_id)
                                                                           Filter: ((info)::text ~~ 'USA:%200%'::text)
                                                                           Rows Removed by Filter: 456
                                                               ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.90 rows=2 width=4) (actual time=0.054..0.068 rows=3 loops=1)
                                                                     Index Cond: (person_id = ci.person_id)
                                                                     Heap Fetches: 3
                                                         ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..2.78 rows=2 width=12) (actual time=0.014..0.015 rows=1 loops=3)
                                                               Index Cond: (movie_id = mk.movie_id)
                                             ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'complete+verified'::text)
                                                   Rows Removed by Filter: 3
                                       ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=3)
                                             Filter: ((info)::text = 'release dates'::text)
                                             Rows Removed by Filter: 15
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..4.80 rows=5 width=8) (actual time=0.017..0.028 rows=22 loops=3)
                                       Index Cond: (movie_id = mk.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..2.03 rows=1 width=4) (actual time=0.008..0.008 rows=0 loops=66)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..19.89 rows=26 width=8) (actual time=0.004..0.043 rows=163 loops=15)
                           Index Cond: (person_id = ci.person_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..2.19 rows=1 width=19) (actual time=0.005..0.005 rows=1 loops=15)
               Index Cond: (id = pi.person_id)
               Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
 Planning Time: 145.860 ms
 Execution Time: 36.740 ms
(86 rows)

SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=5517.26..5517.27 rows=1 width=96) (actual time=5785.753..5785.753 rows=1 loops=1)
   ->  Nested Loop  (cost=11.17..5517.25 rows=1 width=48) (actual time=848.438..5767.545 rows=16308 loops=1)
         Join Filter: (pi.info_type_id = it3.id)
         Rows Removed by Join Filter: 51519
         ->  Nested Loop  (cost=11.17..5514.83 rows=1 width=52) (actual time=299.734..4522.709 rows=67827 loops=1)
               Join Filter: (cc.subject_id = cct1.id)
               ->  Nested Loop  (cost=11.17..5513.77 rows=1 width=56) (actual time=299.722..3994.181 rows=67827 loops=1)
                     Join Filter: (ci.role_id = rt.id)
                     ->  Nested Loop  (cost=11.17..5512.60 rows=1 width=60) (actual time=299.705..3430.710 rows=67827 loops=1)
                           Join Filter: (it.id = mi.info_type_id)
                           ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.014..0.025 rows=1 loops=1)
                                 Filter: ((info)::text = 'release dates'::text)
                                 Rows Removed by Filter: 112
                           ->  Nested Loop  (cost=11.17..5510.18 rows=1 width=64) (actual time=299.687..3414.859 rows=67827 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=10.74..5467.13 rows=1 width=80) (actual time=299.542..1090.759 rows=23424 loops=1)
                                       Join Filter: (mc.movie_id = t.id)
                                       ->  Nested Loop  (cost=10.31..5465.00 rows=1 width=59) (actual time=32.095..1007.602 rows=27549 loops=1)
                                             Join Filter: (cct2.id = cc.status_id)
                                             Rows Removed by Join Filter: 19742
                                             ->  Seq Scan on comp_cast_type cct2  (cost=0.00..1.05 rows=1 width=4) (actual time=0.030..0.031 rows=1 loops=1)
                                                   Filter: ((kind)::text = 'complete+verified'::text)
                                                   Rows Removed by Filter: 3
                                             ->  Nested Loop  (cost=10.31..5463.94 rows=1 width=63) (actual time=32.062..998.384 rows=47291 loops=1)
                                                   ->  Nested Loop  (cost=9.89..5461.14 rows=1 width=51) (actual time=31.997..848.934 rows=56941 loops=1)
                                                         ->  Nested Loop  (cost=9.46..5458.93 rows=1 width=39) (actual time=31.948..663.619 rows=58777 loops=1)
                                                               Join Filter: (n.id = an.person_id)
                                                               ->  Nested Loop  (cost=9.03..5456.03 rows=1 width=51) (actual time=31.837..578.023 rows=15702 loops=1)
                                                                     ->  Nested Loop  (cost=8.61..5449.96 rows=3 width=55) (actual time=31.684..369.223 rows=75939 loops=1)
                                                                           Join Filter: (ci.movie_id = mc.movie_id)
                                                                           ->  Nested Loop  (cost=8.18..5445.09 rows=1 width=47) (actual time=31.603..315.148 rows=2996 loops=1)
                                                                                 Join Filter: (n.id = pi.person_id)
                                                                                 ->  Nested Loop  (cost=7.75..5424.88 rows=1 width=39) (actual time=31.518..311.138 rows=45 loops=1)
                                                                                       ->  Nested Loop  (cost=7.32..5355.96 rows=30 width=20) (actual time=0.348..223.795 rows=4395 loops=1)
                                                                                             ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=0.262..27.350 rows=414 loops=1)
                                                                                                   ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.077..22.782 rows=1 loops=1)
                                                                                                         Filter: ((keyword)::text = 'computer-animation'::text)
                                                                                                         Rows Removed by Filter: 134169
                                                                                                   ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=0.177..4.354 rows=414 loops=1)
                                                                                                         Recheck Cond: (keyword_id = k.id)
                                                                                                         Heap Blocks: exact=358
                                                                                                         ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.116..0.116 rows=414 loops=1)
                                                                                                               Index Cond: (keyword_id = k.id)
                                                                                             ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..47.62 rows=1 width=16) (actual time=0.121..0.469 rows=11 loops=414)
                                                                                                   Index Cond: (movie_id = mk.movie_id)
                                                                                                   Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                                                                   Rows Removed by Filter: 33
                                                                                       ->  Index Scan using name_pkey on name n  (cost=0.43..2.30 rows=1 width=19) (actual time=0.019..0.019 rows=0 loops=4395)
                                                                                             Index Cond: (id = ci.person_id)
                                                                                             Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                                                                             Rows Removed by Filter: 1
                                                                                 ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..19.89 rows=26 width=8) (actual time=0.027..0.062 rows=67 loops=45)
                                                                                       Index Cond: (person_id = ci.person_id)
                                                                           ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..4.80 rows=5 width=8) (actual time=0.004..0.009 rows=25 loops=2996)
                                                                                 Index Cond: (movie_id = mk.movie_id)
                                                                     ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..2.03 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=75939)
                                                                           Index Cond: (id = mc.company_id)
                                                                           Filter: ((country_code)::text = '[us]'::text)
                                                                           Rows Removed by Filter: 1
                                                               ->  Index Only Scan using person_id_aka_name on aka_name an  (cost=0.42..2.87 rows=2 width=4) (actual time=0.002..0.004 rows=4 loops=15702)
                                                                     Index Cond: (person_id = pi.person_id)
                                                                     Heap Fetches: 58777
                                                         ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..2.21 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=58777)
                                                               Index Cond: (id = ci.person_role_id)
                                                   ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..2.78 rows=2 width=12) (actual time=0.002..0.002 rows=1 loops=56941)
                                                         Index Cond: (movie_id = mc.movie_id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..2.12 rows=1 width=21) (actual time=0.002..0.002 rows=1 loops=27549)
                                             Index Cond: (id = mk.movie_id)
                                             Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..43.02 rows=2 width=8) (actual time=0.015..0.098 rows=3 loops=23424)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info IS NOT NULL) AND (((info)::text ~~ 'Japan:%200%'::text) OR ((info)::text ~~ 'USA:%200%'::text)))
                                       Rows Removed by Filter: 298
                     ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=67827)
                           Filter: ((role)::text = 'actress'::text)
                           Rows Removed by Filter: 1
               ->  Seq Scan on comp_cast_type cct1  (cost=0.00..1.05 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=67827)
                     Filter: ((kind)::text = 'cast'::text)
         ->  Seq Scan on info_type it3  (cost=0.00..2.41 rows=1 width=4) (actual time=0.005..0.013 rows=1 loops=67827)
               Filter: ((info)::text = 'trivia'::text)
               Rows Removed by Filter: 89
 Planning Time: 146.206 ms
 Execution Time: 5786.824 ms
(84 rows)

SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3839.34..3839.35 rows=1 width=32) (actual time=1355.849..1355.850 rows=1 loops=1)
   ->  Nested Loop  (cost=8.04..3839.32 rows=7 width=17) (actual time=12.520..1350.177 rows=7834 loops=1)
         Join Filter: (mc.movie_id = t.id)
         ->  Nested Loop  (cost=7.61..3835.84 rows=7 width=8) (actual time=12.476..1259.995 rows=7834 loops=1)
               ->  Nested Loop  (cost=7.19..3756.52 rows=178 width=12) (actual time=10.713..704.422 rows=148552 loops=1)
                     ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.614..263.120 rows=41840 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.926..26.034 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'character-name-in-title'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.679..226.058 rows=41840 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=11541
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.967..7.967 rows=41840 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.007..0.009 rows=4 loops=41840)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=148552)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text = '[de]'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.011..0.011 rows=1 loops=7834)
               Index Cond: (id = mk.movie_id)
 Planning Time: 4.204 ms
 Execution Time: 1356.335 ms
(24 rows)

SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3836.84..3836.85 rows=1 width=32) (actual time=1288.329..1288.329 rows=1 loops=1)
   ->  Nested Loop  (cost=8.04..3836.83 rows=2 width=17) (actual time=16.702..1284.842 rows=5228 loops=1)
         Join Filter: (mc.movie_id = t.id)
         ->  Nested Loop  (cost=7.61..3835.84 rows=2 width=8) (actual time=16.661..1226.047 rows=5228 loops=1)
               ->  Nested Loop  (cost=7.19..3756.52 rows=178 width=12) (actual time=10.965..690.539 rows=148552 loops=1)
                     ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.869..259.113 rows=41840 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.307..26.635 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'character-name-in-title'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.554..221.691 rows=41840 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=11541
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.829..7.829 rows=41840 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.006..0.009 rows=4 loops=41840)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=148552)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text = '[nl]'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.010..0.010 rows=1 loops=5228)
               Index Cond: (id = mk.movie_id)
 Planning Time: 5.313 ms
 Execution Time: 1288.815 ms
(24 rows)

SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3836.34..3836.35 rows=1 width=32) (actual time=1212.089..1212.089 rows=1 loops=1)
   ->  Nested Loop  (cost=8.04..3836.34 rows=1 width=17) (actual time=1212.081..1212.081 rows=0 loops=1)
         Join Filter: (mc.movie_id = t.id)
         ->  Nested Loop  (cost=7.61..3835.84 rows=1 width=8) (actual time=1212.080..1212.080 rows=0 loops=1)
               ->  Nested Loop  (cost=7.19..3756.52 rows=178 width=12) (actual time=10.903..691.722 rows=148552 loops=1)
                     ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.813..260.429 rows=41840 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.308..26.535 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'character-name-in-title'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.497..222.849 rows=41840 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=11541
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.774..7.774 rows=41840 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.006..0.009 rows=4 loops=41840)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=148552)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text = '[sm]'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (never executed)
               Index Cond: (id = mk.movie_id)
 Planning Time: 5.285 ms
 Execution Time: 1212.571 ms
(24 rows)

SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3852.93..3852.94 rows=1 width=32) (actual time=1779.746..1779.747 rows=1 loops=1)
   ->  Nested Loop  (cost=8.04..3852.77 rows=64 width=17) (actual time=11.293..1748.860 rows=68316 loops=1)
         ->  Nested Loop  (cost=7.62..3773.45 rows=178 width=21) (actual time=11.150..1188.374 rows=148552 loops=1)
               Join Filter: (t.id = mc.movie_id)
               ->  Nested Loop  (cost=7.19..3752.95 rows=34 width=25) (actual time=11.014..714.115 rows=41840 loops=1)
                     ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.986..258.704 rows=41840 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=1.309..26.567 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'character-name-in-title'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.668..220.099 rows=41840 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=11541
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=7.952..7.952 rows=41840 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.010..0.010 rows=1 loops=41840)
                           Index Cond: (id = mk.movie_id)
               ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.54 rows=5 width=8) (actual time=0.007..0.009 rows=4 loops=41840)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=148552)
               Index Cond: (id = mc.company_id)
               Filter: ((country_code)::text = '[us]'::text)
               Rows Removed by Filter: 1
 Planning Time: 5.417 ms
 Execution Time: 1780.235 ms
(24 rows)

SET
                                                                                                         QUERY PLAN                                                                                                         
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8702.65..8702.66 rows=1 width=128) (actual time=12716.254..12716.254 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.71..8702.64 rows=1 width=80) (actual time=91.520..12713.159 rows=757 loops=1)
         ->  Nested Loop  (cost=1012.58..8702.48 rows=1 width=84) (actual time=91.492..12711.171 rows=757 loops=1)
               ->  Nested Loop  (cost=1012.45..8702.31 rows=1 width=88) (actual time=82.459..12704.390 rows=2492 loops=1)
                     ->  Nested Loop  (cost=1012.31..8702.12 rows=1 width=92) (actual time=82.421..12693.554 rows=2492 loops=1)
                           Join Filter: (mi.movie_id = t.id)
                           ->  Nested Loop  (cost=1011.88..8701.29 rows=1 width=95) (actual time=33.074..12552.145 rows=9940 loops=1)
                                 ->  Nested Loop  (cost=1011.45..8700.26 rows=1 width=84) (actual time=30.861..12263.235 rows=15093 loops=1)
                                       Join Filter: (mi.movie_id = ci.movie_id)
                                       ->  Gather  (cost=1010.88..8671.17 rows=1 width=76) (actual time=13.962..1694.651 rows=19944 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Nested Loop  (cost=10.88..7671.07 rows=1 width=76) (actual time=10.715..2771.613 rows=6648 loops=3)
                                                   Join Filter: (mi_idx.movie_id = mi.movie_id)
                                                   ->  Nested Loop  (cost=10.45..7653.03 rows=1 width=25) (actual time=8.265..915.118 rows=11782 loops=3)
                                                         ->  Hash Join  (cost=10.03..7651.37 rows=2 width=13) (actual time=7.504..795.151 rows=21234 loops=3)
                                                               Hash Cond: (mi_idx.info_type_id = it2.id)
                                                               ->  Nested Loop  (cost=7.61..7648.12 rows=298 width=17) (actual time=7.273..766.999 rows=63896 loops=3)
                                                                     ->  Nested Loop  (cost=7.18..7568.64 rows=98 width=4) (actual time=7.193..413.798 rows=25571 loops=3)
                                                                           ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4353.41 rows=3 width=4) (actual time=0.650..34.620 rows=2 loops=3)
                                                                                 Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                                 Rows Removed by Filter: 44721
                                                                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1068.74 rows=300 width=8) (actual time=4.970..158.011 rows=10959 loops=7)
                                                                                 Recheck Cond: (keyword_id = k.id)
                                                                                 Heap Blocks: exact=12389
                                                                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.848..3.848 rows=10959 loops=7)
                                                                                       Index Cond: (keyword_id = k.id)
                                                                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.78 rows=3 width=13) (actual time=0.011..0.012 rows=2 loops=76714)
                                                                           Index Cond: (movie_id = mk.movie_id)
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.082..0.082 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.052..0.055 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'votes'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.81 rows=2 width=12) (actual time=0.004..0.005 rows=1 loops=63701)
                                                               Index Cond: (movie_id = mi_idx.movie_id)
                                                   ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..18.03 rows=1 width=51) (actual time=0.154..0.157 rows=1 loops=35346)
                                                         Index Cond: (movie_id = mk.movie_id)
                                                         Filter: ((info)::text = ANY ('{Horror,Thriller}'::text[]))
                                                         Rows Removed by Filter: 101
                                       ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..29.07 rows=1 width=8) (actual time=0.394..0.529 rows=1 loops=19944)
                                             Index Cond: (movie_id = mk.movie_id)
                                             Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                             Rows Removed by Filter: 73
                                 ->  Index Scan using name_pkey on name n  (cost=0.43..1.04 rows=1 width=19) (actual time=0.018..0.018 rows=1 loops=15093)
                                       Index Cond: (id = ci.person_id)
                                       Filter: ((gender)::text = 'm'::text)
                                       Rows Removed by Filter: 0
                           ->  Index Scan using title_pkey on title t  (cost=0.43..0.82 rows=1 width=21) (actual time=0.013..0.013 rows=0 loops=9940)
                                 Index Cond: (id = mk.movie_id)
                                 Filter: (production_year > 2000)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=2492)
                           Index Cond: (id = mi.info_type_id)
                           Filter: ((info)::text = 'genres'::text)
               ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=2492)
                     Index Cond: (id = cc.status_id)
                     Filter: ((kind)::text = 'complete+verified'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=757)
               Index Cond: (id = cc.subject_id)
               Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
 Planning Time: 93.105 ms
 Execution Time: 12717.551 ms
(64 rows)

SET
                                                                                                           QUERY PLAN                                                                                                            
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8700.30..8700.31 rows=1 width=128) (actual time=1100.291..1100.291 rows=1 loops=1)
   ->  Nested Loop  (cost=1010.43..8700.29 rows=1 width=80) (actual time=197.413..1100.222 rows=28 loops=1)
         ->  Nested Loop  (cost=1010.30..8700.12 rows=1 width=84) (actual time=197.388..1100.145 rows=28 loops=1)
               ->  Nested Loop  (cost=1010.17..8699.95 rows=1 width=88) (actual time=197.359..1099.908 rows=108 loops=1)
                     Join Filter: (t.id = cc.movie_id)
                     ->  Nested Loop  (cost=1009.75..8699.12 rows=1 width=100) (actual time=197.286..1099.358 rows=108 loops=1)
                           ->  Nested Loop  (cost=1009.61..8698.94 rows=1 width=104) (actual time=197.262..1099.128 rows=108 loops=1)
                                 ->  Nested Loop  (cost=1009.46..8698.75 rows=1 width=108) (actual time=197.222..1098.496 rows=324 loops=1)
                                       Join Filter: (t.id = mi_idx.movie_id)
                                       ->  Nested Loop  (cost=1009.04..8697.94 rows=1 width=95) (actual time=197.145..1097.678 rows=108 loops=1)
                                             ->  Nested Loop  (cost=1008.61..8696.90 rows=1 width=84) (actual time=197.055..1096.543 rows=108 loops=1)
                                                   Join Filter: (t.id = ci.movie_id)
                                                   ->  Nested Loop  (cost=1008.04..8667.81 rows=1 width=76) (actual time=196.106..1075.390 rows=65 loops=1)
                                                         Join Filter: (t.id = mi.movie_id)
                                                         ->  Gather  (cost=1007.61..8649.77 rows=1 width=25) (actual time=151.339..1070.932 rows=49 loops=1)
                                                               Workers Planned: 2
                                                               Workers Launched: 2
                                                               ->  Nested Loop  (cost=7.61..7649.67 rows=1 width=25) (actual time=172.052..746.110 rows=16 loops=3)
                                                                     ->  Nested Loop  (cost=7.18..7568.64 rows=98 width=4) (actual time=7.029..354.598 rows=25571 loops=3)
                                                                           ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4353.41 rows=3 width=4) (actual time=0.464..35.981 rows=2 loops=3)
                                                                                 Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                                 Rows Removed by Filter: 44721
                                                                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1068.74 rows=300 width=8) (actual time=4.935..132.046 rows=10959 loops=7)
                                                                                 Recheck Cond: (keyword_id = k.id)
                                                                                 Heap Blocks: exact=12389
                                                                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.813..3.813 rows=10959 loops=7)
                                                                                       Index Cond: (keyword_id = k.id)
                                                                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.83 rows=1 width=21) (actual time=0.014..0.014 rows=0 loops=76714)
                                                                           Index Cond: (id = mk.movie_id)
                                                                           Filter: ((production_year > 2000) AND (((title)::text ~~ '%Freddy%'::text) OR ((title)::text ~~ '%Jason%'::text) OR ((title)::text ~~ 'Saw%'::text)))
                                                                           Rows Removed by Filter: 1
                                                         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..18.03 rows=1 width=51) (actual time=0.209..0.209 rows=1 loops=49)
                                                               Index Cond: (movie_id = mk.movie_id)
                                                               Filter: ((info)::text = ANY ('{Horror,Thriller}'::text[]))
                                                               Rows Removed by Filter: 230
                                                   ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..29.07 rows=1 width=8) (actual time=0.202..0.324 rows=2 loops=65)
                                                         Index Cond: (movie_id = mk.movie_id)
                                                         Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                                         Rows Removed by Filter: 85
                                             ->  Index Scan using name_pkey on name n  (cost=0.43..1.04 rows=1 width=19) (actual time=0.010..0.010 rows=1 loops=108)
                                                   Index Cond: (id = ci.person_id)
                                                   Filter: ((gender)::text = 'm'::text)
                                       ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.78 rows=3 width=13) (actual time=0.005..0.006 rows=3 loops=108)
                                             Index Cond: (movie_id = mk.movie_id)
                                 ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=324)
                                       Index Cond: (id = mi_idx.info_type_id)
                                       Filter: ((info)::text = 'votes'::text)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=108)
                                 Index Cond: (id = mi.info_type_id)
                                 Filter: ((info)::text = 'genres'::text)
                     ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.81 rows=2 width=12) (actual time=0.004..0.004 rows=1 loops=108)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=108)
                     Index Cond: (id = cc.status_id)
                     Filter: ((kind)::text = 'complete+verified'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=28)
               Index Cond: (id = cc.subject_id)
               Filter: ((kind)::text = ANY ('{cast,crew}'::text[]))
 Planning Time: 93.973 ms
 Execution Time: 1107.139 ms
(62 rows)

SET
                                                                                                         QUERY PLAN                                                                                                         
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8720.29..8720.30 rows=1 width=128) (actual time=11281.887..11281.888 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.71..8720.28 rows=1 width=80) (actual time=36.939..11269.859 rows=8024 loops=1)
         Join Filter: (mi.movie_id = t.id)
         ->  Nested Loop  (cost=1012.28..8719.45 rows=1 width=83) (actual time=36.867..11160.111 rows=8024 loops=1)
               ->  Nested Loop  (cost=1011.85..8718.42 rows=1 width=72) (actual time=36.776..10943.507 rows=11863 loops=1)
                     Join Filter: (mi.movie_id = ci.movie_id)
                     ->  Nested Loop  (cost=1011.29..8689.33 rows=1 width=64) (actual time=17.383..2413.285 rows=14655 loops=1)
                           ->  Nested Loop  (cost=1011.14..8689.15 rows=1 width=68) (actual time=17.358..2376.208 rows=18333 loops=1)
                                 ->  Nested Loop  (cost=1011.01..8688.98 rows=1 width=72) (actual time=17.327..2336.081 rows=23704 loops=1)
                                       ->  Gather  (cost=1010.88..8688.81 rows=1 width=76) (actual time=12.724..2234.119 rows=43984 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Nested Loop  (cost=10.88..7688.71 rows=1 width=76) (actual time=12.151..3679.601 rows=14661 loops=3)
                                                   Join Filter: (mi.movie_id = cc.movie_id)
                                                   ->  Nested Loop  (cost=10.46..7687.87 rows=1 width=64) (actual time=7.514..3550.371 rows=22577 loops=3)
                                                         Join Filter: (mi_idx.movie_id = mi.movie_id)
                                                         ->  Hash Join  (cost=10.03..7651.37 rows=2 width=13) (actual time=7.289..768.752 rows=21234 loops=3)
                                                               Hash Cond: (mi_idx.info_type_id = it2.id)
                                                               ->  Nested Loop  (cost=7.61..7648.12 rows=298 width=17) (actual time=7.085..735.753 rows=63896 loops=3)
                                                                     ->  Nested Loop  (cost=7.18..7568.64 rows=98 width=4) (actual time=7.009..394.139 rows=25571 loops=3)
                                                                           ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4353.41 rows=3 width=4) (actual time=0.503..34.944 rows=2 loops=3)
                                                                                 Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                                 Rows Removed by Filter: 44721
                                                                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1068.74 rows=300 width=8) (actual time=4.953..149.278 rows=10959 loops=7)
                                                                                 Recheck Cond: (keyword_id = k.id)
                                                                                 Heap Blocks: exact=12389
                                                                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.826..3.826 rows=10959 loops=7)
                                                                                       Index Cond: (keyword_id = k.id)
                                                                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.78 rows=3 width=13) (actual time=0.011..0.012 rows=2 loops=76714)
                                                                           Index Cond: (movie_id = mk.movie_id)
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.077..0.077 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.049..0.052 rows=1 loops=3)
                                                                           Filter: ((info)::text = 'votes'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..18.24 rows=1 width=51) (actual time=0.126..0.130 rows=1 loops=63701)
                                                               Index Cond: (movie_id = mk.movie_id)
                                                               Filter: ((info)::text = ANY ('{Horror,Action,Sci-Fi,Thriller,Crime,War}'::text[]))
                                                               Rows Removed by Filter: 58
                                                   ->  Index Scan using movie_id_complete_cast on complete_cast cc  (cost=0.42..0.81 rows=2 width=12) (actual time=0.004..0.005 rows=1 loops=67732)
                                                         Index Cond: (movie_id = mk.movie_id)
                                       ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=43984)
                                             Index Cond: (id = cc.status_id)
                                             Filter: ((kind)::text = 'complete+verified'::text)
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using comp_cast_type_pkey on comp_cast_type cct1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=23704)
                                       Index Cond: (id = cc.subject_id)
                                       Filter: ((kind)::text = 'cast'::text)
                                       Rows Removed by Filter: 0
                           ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=18333)
                                 Index Cond: (id = mi.info_type_id)
                                 Filter: ((info)::text = 'genres'::text)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..29.07 rows=1 width=8) (actual time=0.439..0.581 rows=1 loops=14655)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                           Rows Removed by Filter: 83
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.04 rows=1 width=19) (actual time=0.017..0.017 rows=1 loops=11863)
                     Index Cond: (id = ci.person_id)
                     Filter: ((gender)::text = 'm'::text)
                     Rows Removed by Filter: 0
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.82 rows=1 width=21) (actual time=0.012..0.012 rows=1 loops=8024)
               Index Cond: (id = mk.movie_id)
 Planning Time: 93.941 ms
 Execution Time: 11283.043 ms
(65 rows)

SET
                                                                                                      QUERY PLAN                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8966.22..8966.23 rows=1 width=128) (actual time=3039.328..3039.329 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.88..8966.21 rows=1 width=80) (actual time=131.665..3037.563 rows=1273 loops=1)
         Join Filter: (mi.movie_id = t.id)
         ->  Nested Loop  (cost=1012.45..8965.10 rows=1 width=83) (actual time=131.598..3024.597 rows=1273 loops=1)
               ->  Nested Loop  (cost=1012.02..8963.80 rows=1 width=72) (actual time=131.523..3003.834 rows=1556 loops=1)
                     ->  Nested Loop  (cost=1011.88..8963.62 rows=1 width=76) (actual time=131.488..2998.807 rows=1616 loops=1)
                           Join Filter: (mi_idx.movie_id = mi.movie_id)
                           ->  Nested Loop  (cost=1011.45..8940.22 rows=1 width=25) (actual time=61.653..2791.117 rows=1471 loops=1)
                                 Join Filter: (mi_idx.movie_id = ci.movie_id)
                                 ->  Gather  (cost=1010.88..8907.19 rows=1 width=17) (actual time=61.002..1753.027 rows=1547 loops=1)
                                       Workers Planned: 2
                                       Workers Launched: 2
                                       ->  Nested Loop  (cost=10.88..7907.09 rows=1 width=17) (actual time=35.505..2058.669 rows=516 loops=3)
                                             ->  Nested Loop  (cost=10.46..7893.34 rows=14 width=21) (actual time=7.309..1181.189 rows=199419 loops=3)
                                                   Join Filter: (mi_idx.movie_id = mc.movie_id)
                                                   ->  Hash Join  (cost=10.03..7888.91 rows=2 width=13) (actual time=7.241..696.674 rows=21234 loops=3)
                                                         Hash Cond: (mi_idx.info_type_id = it2.id)
                                                         ->  Nested Loop  (cost=7.61..7885.67 rows=298 width=17) (actual time=7.024..667.647 rows=63896 loops=3)
                                                               ->  Nested Loop  (cost=7.18..7778.10 rows=98 width=4) (actual time=6.962..365.298 rows=25571 loops=3)
                                                                     ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4562.87 rows=3 width=4) (actual time=0.459..34.757 rows=2 loops=3)
                                                                           Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                           Rows Removed by Filter: 44721
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1068.74 rows=300 width=8) (actual time=4.884..137.343 rows=10959 loops=7)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=12389
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.756..3.756 rows=10959 loops=7)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..1.07 rows=3 width=13) (actual time=0.009..0.010 rows=2 loops=76714)
                                                                     Index Cond: (movie_id = mk.movie_id)
                                                         ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.081..0.081 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.058..0.061 rows=1 loops=3)
                                                                     Filter: ((info)::text = 'votes'::text)
                                                                     Rows Removed by Filter: 112
                                                   ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.15 rows=5 width=8) (actual time=0.012..0.019 rows=9 loops=63701)
                                                         Index Cond: (movie_id = mk.movie_id)
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.98 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=598256)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((name)::text ~~ 'Lionsgate%'::text)
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..33.03 rows=1 width=8) (actual time=0.485..0.673 rows=1 loops=1547)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                       Rows Removed by Filter: 119
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..23.38 rows=1 width=51) (actual time=0.138..0.140 rows=1 loops=1471)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((info)::text = ANY ('{Horror,Thriller}'::text[]))
                                 Rows Removed by Filter: 173
                     ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1616)
                           Index Cond: (id = mi.info_type_id)
                           Filter: ((info)::text = 'genres'::text)
                           Rows Removed by Filter: 0
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.30 rows=1 width=19) (actual time=0.013..0.013 rows=1 loops=1556)
                     Index Cond: (id = ci.person_id)
                     Filter: ((gender)::text = 'm'::text)
                     Rows Removed by Filter: 0
         ->  Index Scan using title_pkey on title t  (cost=0.43..1.10 rows=1 width=21) (actual time=0.009..0.009 rows=1 loops=1273)
               Index Cond: (id = mk.movie_id)
 Planning Time: 108.918 ms
 Execution Time: 3045.154 ms
(60 rows)

SET
                                                                                                        QUERY PLAN                                                                                                         
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8956.88..8956.89 rows=1 width=128) (actual time=989.272..989.272 rows=1 loops=1)
   ->  Nested Loop  (cost=1010.60..8956.87 rows=1 width=80) (actual time=305.786..989.141 rows=84 loops=1)
         ->  Nested Loop  (cost=1010.17..8955.57 rows=1 width=69) (actual time=305.703..988.360 rows=84 loops=1)
               ->  Nested Loop  (cost=1010.03..8955.39 rows=1 width=73) (actual time=305.666..987.871 rows=252 loops=1)
                     Join Filter: (t.id = mi_idx.movie_id)
                     ->  Nested Loop  (cost=1009.60..8954.29 rows=1 width=84) (actual time=305.581..987.390 rows=84 loops=1)
                           ->  Nested Loop  (cost=1009.46..8954.10 rows=1 width=88) (actual time=305.531..987.150 rows=84 loops=1)
                                 Join Filter: (t.id = mi.movie_id)
                                 ->  Nested Loop  (cost=1009.02..8930.71 rows=1 width=37) (actual time=304.820..980.777 rows=53 loops=1)
                                       ->  Nested Loop  (cost=1008.60..8921.93 rows=1 width=41) (actual time=304.661..980.131 rows=119 loops=1)
                                             Join Filter: (t.id = mc.movie_id)
                                             ->  Nested Loop  (cost=1008.17..8919.75 rows=1 width=33) (actual time=183.734..978.382 rows=77 loops=1)
                                                   Join Filter: (t.id = ci.movie_id)
                                                   ->  Gather  (cost=1007.61..8886.71 rows=1 width=25) (actual time=143.764..952.568 rows=49 loops=1)
                                                         Workers Planned: 2
                                                         Workers Launched: 2
                                                         ->  Nested Loop  (cost=7.61..7886.61 rows=1 width=25) (actual time=158.042..681.063 rows=16 loops=3)
                                                               ->  Nested Loop  (cost=7.18..7778.10 rows=98 width=4) (actual time=7.021..327.741 rows=25571 loops=3)
                                                                     ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4562.87 rows=3 width=4) (actual time=0.500..34.835 rows=2 loops=3)
                                                                           Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                           Rows Removed by Filter: 44721
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1068.74 rows=300 width=8) (actual time=4.905..121.014 rows=10959 loops=7)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=12389
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.785..3.785 rows=10959 loops=7)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using title_pkey on title t  (cost=0.43..1.11 rows=1 width=21) (actual time=0.013..0.013 rows=0 loops=76714)
                                                                     Index Cond: (id = mk.movie_id)
                                                                     Filter: ((production_year > 2000) AND (((title)::text ~~ '%Freddy%'::text) OR ((title)::text ~~ '%Jason%'::text) OR ((title)::text ~~ 'Saw%'::text)))
                                                                     Rows Removed by Filter: 1
                                                   ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..33.03 rows=1 width=8) (actual time=0.414..0.617 rows=2 loops=49)
                                                         Index Cond: (movie_id = mk.movie_id)
                                                         Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                                         Rows Removed by Filter: 82
                                             ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.16 rows=1 width=8) (actual time=0.016..0.021 rows=2 loops=77)
                                                   Index Cond: (movie_id = mk.movie_id)
                                                   Filter: ((note)::text ~~ '%(Blu-ray)%'::text)
                                                   Rows Removed by Filter: 24
                                       ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..8.14 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=119)
                                             Index Cond: (id = mc.company_id)
                                             Filter: ((name)::text ~~ 'Lionsgate%'::text)
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..23.38 rows=1 width=51) (actual time=0.119..0.119 rows=2 loops=53)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((info)::text = ANY ('{Horror,Thriller}'::text[]))
                                       Rows Removed by Filter: 292
                           ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=84)
                                 Index Cond: (id = mi.info_type_id)
                                 Filter: ((info)::text = 'genres'::text)
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..1.07 rows=3 width=13) (actual time=0.004..0.004 rows=3 loops=84)
                           Index Cond: (movie_id = mk.movie_id)
               ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=252)
                     Index Cond: (id = mi_idx.info_type_id)
                     Filter: ((info)::text = 'votes'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using name_pkey on name n  (cost=0.43..1.30 rows=1 width=19) (actual time=0.009..0.009 rows=1 loops=84)
               Index Cond: (id = ci.person_id)
               Filter: ((gender)::text = 'm'::text)
 Planning Time: 106.438 ms
 Execution Time: 994.834 ms
(60 rows)

SET
                                                                                                      QUERY PLAN                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=8966.43..8966.44 rows=1 width=128) (actual time=3495.789..3495.789 rows=1 loops=1)
   ->  Nested Loop  (cost=1012.88..8966.42 rows=1 width=80) (actual time=135.357..3492.931 rows=2825 loops=1)
         Join Filter: (mi.movie_id = t.id)
         ->  Nested Loop  (cost=1012.45..8965.31 rows=1 width=83) (actual time=135.298..3472.290 rows=2825 loops=1)
               ->  Nested Loop  (cost=1012.02..8964.01 rows=1 width=72) (actual time=135.226..3445.242 rows=2825 loops=1)
                     ->  Nested Loop  (cost=1011.88..8963.83 rows=1 width=76) (actual time=135.193..3437.034 rows=3007 loops=1)
                           Join Filter: (mi_idx.movie_id = mi.movie_id)
                           ->  Nested Loop  (cost=1011.45..8940.22 rows=1 width=25) (actual time=64.224..3196.570 rows=1471 loops=1)
                                 Join Filter: (mi_idx.movie_id = ci.movie_id)
                                 ->  Gather  (cost=1010.88..8907.19 rows=1 width=17) (actual time=63.559..2076.892 rows=1547 loops=1)
                                       Workers Planned: 2
                                       Workers Launched: 2
                                       ->  Nested Loop  (cost=10.88..7907.09 rows=1 width=17) (actual time=37.921..2301.782 rows=516 loops=3)
                                             ->  Nested Loop  (cost=10.46..7893.34 rows=14 width=21) (actual time=7.584..1300.683 rows=199419 loops=3)
                                                   Join Filter: (mi_idx.movie_id = mc.movie_id)
                                                   ->  Hash Join  (cost=10.03..7888.91 rows=2 width=13) (actual time=7.494..766.460 rows=21234 loops=3)
                                                         Hash Cond: (mi_idx.info_type_id = it2.id)
                                                         ->  Nested Loop  (cost=7.61..7885.67 rows=298 width=17) (actual time=7.244..737.589 rows=63896 loops=3)
                                                               ->  Nested Loop  (cost=7.18..7778.10 rows=98 width=4) (actual time=7.167..404.850 rows=25571 loops=3)
                                                                     ->  Parallel Index Scan using keyword_pkey on keyword k  (cost=0.42..4562.87 rows=3 width=4) (actual time=0.549..35.926 rows=2 loops=3)
                                                                           Filter: ((keyword)::text = ANY ('{murder,violence,blood,gore,death,female-nudity,hospital}'::text[]))
                                                                           Rows Removed by Filter: 44721
                                                                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1068.74 rows=300 width=8) (actual time=4.972..153.792 rows=10959 loops=7)
                                                                           Recheck Cond: (keyword_id = k.id)
                                                                           Heap Blocks: exact=12389
                                                                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=3.853..3.853 rows=10959 loops=7)
                                                                                 Index Cond: (keyword_id = k.id)
                                                               ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..1.07 rows=3 width=13) (actual time=0.011..0.011 rows=2 loops=76714)
                                                                     Index Cond: (movie_id = mk.movie_id)
                                                         ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.082..0.083 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.060..0.062 rows=1 loops=3)
                                                                     Filter: ((info)::text = 'votes'::text)
                                                                     Rows Removed by Filter: 112
                                                   ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..2.15 rows=5 width=8) (actual time=0.014..0.022 rows=9 loops=63701)
                                                         Index Cond: (movie_id = mk.movie_id)
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.98 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=598256)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((name)::text ~~ 'Lionsgate%'::text)
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..33.03 rows=1 width=8) (actual time=0.525..0.726 rows=1 loops=1547)
                                       Index Cond: (movie_id = mk.movie_id)
                                       Filter: ((note)::text = ANY ('{(writer),"(head writer)","(written by)",(story),"(story editor)"}'::text[]))
                                       Rows Removed by Filter: 119
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..23.59 rows=1 width=51) (actual time=0.157..0.162 rows=2 loops=1471)
                                 Index Cond: (movie_id = mk.movie_id)
                                 Filter: ((info)::text = ANY ('{Horror,Action,Sci-Fi,Thriller,Crime,War}'::text[]))
                                 Rows Removed by Filter: 172
                     ->  Index Scan using info_type_pkey on info_type it1  (cost=0.14..0.16 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=3007)
                           Index Cond: (id = mi.info_type_id)
                           Filter: ((info)::text = 'genres'::text)
                           Rows Removed by Filter: 0
               ->  Index Scan using name_pkey on name n  (cost=0.43..1.29 rows=1 width=19) (actual time=0.009..0.009 rows=1 loops=2825)
                     Index Cond: (id = ci.person_id)
         ->  Index Scan using title_pkey on title t  (cost=0.43..1.10 rows=1 width=21) (actual time=0.006..0.006 rows=1 loops=2825)
               Index Cond: (id = mk.movie_id)
 Planning Time: 108.176 ms
 Execution Time: 3502.858 ms
(58 rows)

SET
                                                                              QUERY PLAN                                                                               
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3801.48..3801.49 rows=1 width=96) (actual time=31.364..31.364 rows=1 loops=1)
   ->  Nested Loop  (cost=7.90..3801.40 rows=10 width=116) (actual time=31.358..31.358 rows=0 loops=1)
         ->  Nested Loop  (cost=7.47..3759.44 rows=10 width=103) (actual time=31.358..31.358 rows=0 loops=1)
               ->  Nested Loop  (cost=7.04..3754.59 rows=10 width=94) (actual time=31.357..31.357 rows=0 loops=1)
                     Join Filter: (ml.link_type_id = lt.id)
                     ->  Nested Loop  (cost=7.04..3750.90 rows=10 width=16) (actual time=31.357..31.357 rows=0 loops=1)
                           ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=30.628..31.329 rows=1 loops=1)
                                 ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=30.542..31.241 rows=1 loops=1)
                                       Filter: ((keyword)::text = '10,000-mile-club'::text)
                                       Rows Removed by Filter: 134169
                                 ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=0.073..0.074 rows=1 loops=1)
                                       Recheck Cond: (keyword_id = k.id)
                                       Heap Blocks: exact=1
                                       ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.031..0.031 rows=1 loops=1)
                                             Index Cond: (keyword_id = k.id)
                           ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=12) (actual time=0.026..0.026 rows=0 loops=1)
                                 Index Cond: (movie_id = mk.movie_id)
                     ->  Materialize  (cost=0.00..1.27 rows=18 width=86) (never executed)
                           ->  Seq Scan on link_type lt  (cost=0.00..1.18 rows=18 width=86) (never executed)
               ->  Index Scan using title_pkey on title t1  (cost=0.43..0.49 rows=1 width=21) (never executed)
                     Index Cond: (id = mk.movie_id)
         ->  Index Scan using title_pkey on title t2  (cost=0.43..4.20 rows=1 width=21) (never executed)
               Index Cond: (id = ml.linked_movie_id)
 Planning Time: 6.094 ms
 Execution Time: 31.892 ms
(25 rows)

SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3801.48..3801.49 rows=1 width=96) (actual time=508.533..508.533 rows=1 loops=1)
   ->  Nested Loop  (cost=7.90..3801.40 rows=10 width=116) (actual time=11.272..503.642 rows=4388 loops=1)
         ->  Nested Loop  (cost=7.47..3759.44 rows=10 width=103) (actual time=11.190..407.594 rows=4388 loops=1)
               ->  Nested Loop  (cost=7.04..3754.59 rows=10 width=94) (actual time=11.116..379.485 rows=4388 loops=1)
                     Join Filter: (ml.link_type_id = lt.id)
                     Rows Removed by Join Filter: 30206
                     ->  Nested Loop  (cost=7.04..3750.90 rows=10 width=16) (actual time=11.069..370.105 rows=4388 loops=1)
                           ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=4) (actual time=10.795..277.974 rows=41840 loops=1)
                                 ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=4) (actual time=0.921..26.770 rows=1 loops=1)
                                       Filter: ((keyword)::text = 'character-name-in-title'::text)
                                       Rows Removed by Filter: 134169
                                 ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=9.866..240.638 rows=41840 loops=1)
                                       Recheck Cond: (keyword_id = k.id)
                                       Heap Blocks: exact=11541
                                       ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=8.126..8.126 rows=41840 loops=1)
                                             Index Cond: (keyword_id = k.id)
                           ->  Index Scan using movie_id_movie_link on movie_link ml  (cost=0.29..0.38 rows=5 width=12) (actual time=0.002..0.002 rows=0 loops=41840)
                                 Index Cond: (movie_id = mk.movie_id)
                     ->  Materialize  (cost=0.00..1.27 rows=18 width=86) (actual time=0.000..0.001 rows=8 loops=4388)
                           ->  Seq Scan on link_type lt  (cost=0.00..1.18 rows=18 width=86) (actual time=0.026..0.035 rows=17 loops=1)
               ->  Index Scan using title_pkey on title t1  (cost=0.43..0.49 rows=1 width=21) (actual time=0.005..0.005 rows=1 loops=4388)
                     Index Cond: (id = mk.movie_id)
         ->  Index Scan using title_pkey on title t2  (cost=0.43..4.20 rows=1 width=21) (actual time=0.021..0.021 rows=1 loops=4388)
               Index Cond: (id = ml.linked_movie_id)
 Planning Time: 5.074 ms
 Execution Time: 509.077 ms
(26 rows)

SET
                                                                                                               QUERY PLAN                                                                                                               
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3985.44..3985.45 rows=1 width=192) (actual time=279.861..279.862 rows=1 loops=1)
   ->  Nested Loop  (cost=874.71..3985.43 rows=1 width=82) (actual time=67.701..279.838 rows=8 loops=1)
         Join Filter: ((ml.linked_movie_id = t2.id) AND (kt2.id = t2.kind_id))
         ->  Nested Loop  (cost=874.28..3984.89 rows=1 width=81) (actual time=67.659..279.593 rows=35 loops=1)
               Join Filter: (mi_idx2.info_type_id = it2.id)
               Rows Removed by Join Filter: 16250
               ->  Nested Loop  (cost=874.28..3981.65 rows=55 width=85) (actual time=11.702..272.513 rows=16285 loops=1)
                     ->  Nested Loop  (cost=873.86..3913.92 rows=152 width=70) (actual time=11.535..170.559 rows=39869 loops=1)
                           ->  Nested Loop  (cost=873.43..3824.47 rows=147 width=78) (actual time=11.516..131.045 rows=6175 loops=1)
                                 ->  Nested Loop  (cost=873.01..3759.33 rows=147 width=63) (actual time=11.496..105.203 rows=6175 loops=1)
                                       Join Filter: (ml.linked_movie_id = mc2.movie_id)
                                       ->  Nested Loop  (cost=872.58..3738.66 rows=28 width=55) (actual time=11.441..80.222 rows=1602 loops=1)
                                             Join Filter: (kt1.id = t1.kind_id)
                                             Rows Removed by Join Filter: 1143
                                             ->  Nested Loop  (cost=0.13..13.35 rows=1 width=8) (actual time=0.052..0.061 rows=1 loops=1)
                                                   ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.13..12.26 rows=1 width=4) (actual time=0.041..0.044 rows=1 loops=1)
                                                         Filter: ((kind)::text = 'tv series'::text)
                                                         Rows Removed by Filter: 6
                                                   ->  Seq Scan on kind_type kt1  (cost=0.00..1.09 rows=1 width=4) (actual time=0.009..0.015 rows=1 loops=1)
                                                         Filter: ((kind)::text = 'tv series'::text)
                                                         Rows Removed by Filter: 6
                                             ->  Nested Loop  (cost=872.44..3722.90 rows=193 width=55) (actual time=11.387..79.488 rows=2745 loops=1)
                                                   Join Filter: (ml.movie_id = t1.id)
                                                   ->  Nested Loop  (cost=872.01..3610.10 rows=193 width=30) (actual time=11.361..62.625 rows=2745 loops=1)
                                                         ->  Hash Join  (cost=871.59..3333.95 rows=134 width=17) (actual time=11.301..40.652 rows=2064 loops=1)
                                                               Hash Cond: (mi_idx1.info_type_id = it1.id)
                                                               ->  Merge Join  (cost=869.16..3290.24 rows=15158 width=21) (actual time=11.185..39.114 rows=6192 loops=1)
                                                                     Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43826.36 rows=1380035 width=13) (actual time=0.023..18.438 rows=63901 loops=1)
                                                                     ->  Sort  (cost=868.72..881.22 rows=5000 width=8) (actual time=11.132..11.710 rows=6443 loops=1)
                                                                           Sort Key: ml.movie_id
                                                                           Sort Method: quicksort  Memory: 205kB
                                                                           ->  Hash Join  (cost=1.29..561.53 rows=5000 width=8) (actual time=0.126..9.950 rows=2315 loops=1)
                                                                                 Hash Cond: (ml.link_type_id = lt.id)
                                                                                 ->  Seq Scan on movie_link ml  (cost=0.00..462.97 rows=29997 width=12) (actual time=0.010..5.715 rows=29997 loops=1)
                                                                                 ->  Hash  (cost=1.25..1.25 rows=3 width=4) (actual time=0.054..0.054 rows=2 loops=1)
                                                                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                       ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=3 width=4) (actual time=0.037..0.042 rows=2 loops=1)
                                                                                             Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                             Rows Removed by Filter: 16
                                                               ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.038..0.038 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.022..0.025 rows=1 loops=1)
                                                                           Filter: ((info)::text = 'rating'::text)
                                                                           Rows Removed by Filter: 112
                                                         ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..2.05 rows=1 width=13) (actual time=0.009..0.010 rows=1 loops=2064)
                                                               Index Cond: (movie_id = ml.linked_movie_id)
                                                               Filter: ((info)::text < '3.0'::text)
                                                               Rows Removed by Filter: 2
                                                   ->  Index Scan using title_pkey on title t1  (cost=0.43..0.57 rows=1 width=25) (actual time=0.005..0.005 rows=1 loops=2745)
                                                         Index Cond: (id = mi_idx1.movie_id)
                                       ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.68 rows=5 width=8) (actual time=0.010..0.014 rows=4 loops=1602)
                                             Index Cond: (movie_id = mi_idx2.movie_id)
                                 ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.003..0.003 rows=1 loops=6175)
                                       Index Cond: (id = mc2.company_id)
                           ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.56 rows=5 width=8) (actual time=0.003..0.005 rows=6 loops=6175)
                                 Index Cond: (movie_id = t1.id)
                     ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.002..0.002 rows=0 loops=39869)
                           Index Cond: (id = mc1.company_id)
                           Filter: ((country_code)::text = '[us]'::text)
                           Rows Removed by Filter: 1
               ->  Materialize  (cost=0.00..2.42 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=16285)
                     ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4) (actual time=0.021..0.023 rows=1 loops=1)
                           Filter: ((info)::text = 'rating'::text)
                           Rows Removed by Filter: 112
         ->  Index Scan using title_pkey on title t2  (cost=0.43..0.52 rows=1 width=25) (actual time=0.006..0.006 rows=0 loops=35)
               Index Cond: (id = mc2.movie_id)
               Filter: ((production_year >= 2005) AND (production_year <= 2008))
               Rows Removed by Filter: 1
 Planning Time: 110.568 ms
 Execution Time: 280.821 ms
(71 rows)

SET
                                                                                                                  QUERY PLAN                                                                                                                  
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=2780.95..2780.96 rows=1 width=192) (actual time=78.899..78.899 rows=1 loops=1)
   ->  Nested Loop  (cost=340.63..2780.94 rows=1 width=82) (actual time=15.500..78.883 rows=4 loops=1)
         Join Filter: ((t2.id = mi_idx2.movie_id) AND (it2.id = mi_idx2.info_type_id))
         Rows Removed by Join Filter: 4
         ->  Nested Loop  (cost=340.20..2780.42 rows=1 width=93) (actual time=15.465..78.833 rows=4 loops=1)
               ->  Nested Loop  (cost=340.07..2780.25 rows=1 width=97) (actual time=15.440..78.803 rows=4 loops=1)
                     Join Filter: (ml.movie_id = t1.id)
                     ->  Nested Loop  (cost=339.64..2779.72 rows=1 width=88) (actual time=15.418..78.771 rows=4 loops=1)
                           ->  Nested Loop  (cost=339.22..2779.28 rows=1 width=73) (actual time=15.412..78.755 rows=4 loops=1)
                                 ->  Nested Loop  (cost=338.79..2777.83 rows=1 width=65) (actual time=15.392..78.732 rows=1 loops=1)
                                       ->  Nested Loop  (cost=338.66..2777.66 rows=1 width=69) (actual time=4.047..78.696 rows=6 loops=1)
                                             ->  Nested Loop  (cost=338.23..2769.26 rows=2 width=44) (actual time=3.983..73.673 rows=477 loops=1)
                                                   ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..14.12 rows=1 width=4) (actual time=0.026..0.032 rows=1 loops=1)
                                                         Filter: ((info)::text = 'rating'::text)
                                                         Rows Removed by Filter: 112
                                                   ->  Nested Loop  (cost=338.08..2755.12 rows=2 width=40) (actual time=3.954..73.534 rows=477 loops=1)
                                                         ->  Nested Loop  (cost=337.66..2649.97 rows=236 width=25) (actual time=3.833..42.443 rows=9674 loops=1)
                                                               Join Filter: (ml.movie_id = mc1.movie_id)
                                                               ->  Hash Join  (cost=337.23..2620.48 rows=45 width=17) (actual time=3.823..28.029 rows=2064 loops=1)
                                                                     Hash Cond: (mi_idx1.info_type_id = it1.id)
                                                                     ->  Merge Join  (cost=334.81..2604.30 rows=5051 width=21) (actual time=3.719..26.688 rows=6192 loops=1)
                                                                           Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43826.36 rows=1380035 width=13) (actual time=0.030..13.828 rows=63901 loops=1)
                                                                           ->  Sort  (cost=334.38..338.55 rows=1666 width=8) (actual time=3.655..4.180 rows=6443 loops=1)
                                                                                 Sort Key: ml.movie_id
                                                                                 Sort Method: quicksort  Memory: 205kB
                                                                                 ->  Nested Loop  (cost=38.82..245.23 rows=1666 width=8) (actual time=0.206..2.496 rows=2315 loops=1)
                                                                                       ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=4) (actual time=0.025..0.031 rows=2 loops=1)
                                                                                             Filter: ((link)::text ~~ '%follow%'::text)
                                                                                             Rows Removed by Filter: 16
                                                                                       ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..225.26 rows=1875 width=12) (actual time=0.145..1.029 rows=1158 loops=2)
                                                                                             Recheck Cond: (link_type_id = lt.id)
                                                                                             Heap Blocks: exact=191
                                                                                             ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.124..0.124 rows=1158 loops=2)
                                                                                                   Index Cond: (link_type_id = lt.id)
                                                                     ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.034..0.034 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.020..0.023 rows=1 loops=1)
                                                                                 Filter: ((info)::text = 'rating'::text)
                                                                                 Rows Removed by Filter: 112
                                                               ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.59 rows=5 width=8) (actual time=0.004..0.005 rows=5 loops=2064)
                                                                     Index Cond: (movie_id = mi_idx1.movie_id)
                                                         ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.003..0.003 rows=0 loops=9674)
                                                               Index Cond: (id = mc1.company_id)
                                                               Filter: ((country_code)::text = '[nl]'::text)
                                                               Rows Removed by Filter: 1
                                             ->  Index Scan using title_pkey on title t2  (cost=0.43..4.20 rows=1 width=25) (actual time=0.010..0.010 rows=0 loops=477)
                                                   Index Cond: (id = ml.linked_movie_id)
                                                   Filter: (production_year = 2007)
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using kind_type_pkey on kind_type kt2  (cost=0.13..0.15 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=6)
                                             Index Cond: (id = t2.kind_id)
                                             Filter: ((kind)::text = 'tv series'::text)
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..1.39 rows=5 width=8) (actual time=0.018..0.021 rows=4 loops=1)
                                       Index Cond: (movie_id = t2.id)
                           ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.003..0.003 rows=1 loops=4)
                                 Index Cond: (id = mc2.company_id)
                     ->  Index Scan using title_pkey on title t1  (cost=0.43..0.51 rows=1 width=25) (actual time=0.006..0.006 rows=1 loops=4)
                           Index Cond: (id = mc1.movie_id)
               ->  Index Scan using kind_type_pkey on kind_type kt1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=4)
                     Index Cond: (id = t1.kind_id)
                     Filter: ((kind)::text = 'tv series'::text)
         ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..0.51 rows=1 width=13) (actual time=0.010..0.011 rows=2 loops=4)
               Index Cond: (movie_id = mc2.movie_id)
               Filter: ((info)::text < '3.0'::text)
               Rows Removed by Filter: 1
 Planning Time: 110.570 ms
 Execution Time: 79.956 ms
(69 rows)

SET
                                                                                                                  QUERY PLAN                                                                                                                  
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4007.21..4007.22 rows=1 width=192) (actual time=82.379..82.380 rows=1 loops=1)
   ->  Nested Loop  (cost=874.85..4007.20 rows=1 width=82) (actual time=19.918..82.230 rows=114 loops=1)
         ->  Nested Loop  (cost=874.43..4006.75 rows=1 width=67) (actual time=19.892..81.601 rows=131 loops=1)
               ->  Nested Loop  (cost=874.30..4006.58 rows=1 width=71) (actual time=19.867..81.332 rows=131 loops=1)
                     Join Filter: (ml.movie_id = t1.id)
                     ->  Nested Loop  (cost=873.87..4006.06 rows=1 width=62) (actual time=19.827..80.833 rows=131 loops=1)
                           ->  Nested Loop  (cost=873.45..4005.62 rows=1 width=47) (actual time=19.783..80.189 rows=131 loops=1)
                                 ->  Nested Loop  (cost=873.02..4004.95 rows=1 width=55) (actual time=19.765..79.817 rows=51 loops=1)
                                       Join Filter: (it2.id = mi_idx2.info_type_id)
                                       Rows Removed by Join Filter: 4467
                                       ->  Nested Loop  (cost=872.59..3959.22 rows=82 width=50) (actual time=11.271..67.257 rows=3300 loops=1)
                                             Join Filter: (t2.kind_id = kt2.id)
                                             Rows Removed by Join Filter: 4017
                                             ->  Nested Loop  (cost=872.59..3949.90 rows=288 width=54) (actual time=10.425..64.818 rows=4087 loops=1)
                                                   ->  Index Scan using info_type_pkey on info_type it2  (cost=0.14..14.12 rows=1 width=4) (actual time=0.025..0.031 rows=1 loops=1)
                                                         Filter: ((info)::text = 'rating'::text)
                                                         Rows Removed by Filter: 112
                                                   ->  Nested Loop  (cost=872.45..3932.90 rows=288 width=50) (actual time=10.396..64.000 rows=4087 loops=1)
                                                         Join Filter: (ml.movie_id = mc1.movie_id)
                                                         ->  Nested Loop  (cost=872.02..3896.86 rows=55 width=42) (actual time=10.387..57.408 rows=851 loops=1)
                                                               ->  Hash Join  (cost=871.59..3333.95 rows=134 width=17) (actual time=10.292..34.555 rows=2064 loops=1)
                                                                     Hash Cond: (mi_idx1.info_type_id = it1.id)
                                                                     ->  Merge Join  (cost=869.16..3290.24 rows=15158 width=21) (actual time=10.181..33.109 rows=6192 loops=1)
                                                                           Merge Cond: (mi_idx1.movie_id = ml.movie_id)
                                                                           ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx1  (cost=0.43..43826.36 rows=1380035 width=13) (actual time=0.023..13.670 rows=63901 loops=1)
                                                                           ->  Sort  (cost=868.72..881.22 rows=5000 width=8) (actual time=10.127..10.672 rows=6443 loops=1)
                                                                                 Sort Key: ml.movie_id
                                                                                 Sort Method: quicksort  Memory: 205kB
                                                                                 ->  Hash Join  (cost=1.29..561.53 rows=5000 width=8) (actual time=0.119..8.983 rows=2315 loops=1)
                                                                                       Hash Cond: (ml.link_type_id = lt.id)
                                                                                       ->  Seq Scan on movie_link ml  (cost=0.00..462.97 rows=29997 width=12) (actual time=0.010..4.802 rows=29997 loops=1)
                                                                                       ->  Hash  (cost=1.25..1.25 rows=3 width=4) (actual time=0.061..0.061 rows=2 loops=1)
                                                                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                             ->  Seq Scan on link_type lt  (cost=0.00..1.25 rows=3 width=4) (actual time=0.038..0.043 rows=2 loops=1)
                                                                                                   Filter: ((link)::text = ANY ('{sequel,follows,"followed by"}'::text[]))
                                                                                                   Rows Removed by Filter: 16
                                                                     ->  Hash  (cost=2.41..2.41 rows=1 width=4) (actual time=0.034..0.034 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on info_type it1  (cost=0.00..2.41 rows=1 width=4) (actual time=0.021..0.023 rows=1 loops=1)
                                                                                 Filter: ((info)::text = 'rating'::text)
                                                                                 Rows Removed by Filter: 112
                                                               ->  Index Scan using title_pkey on title t2  (cost=0.43..4.20 rows=1 width=25) (actual time=0.010..0.010 rows=0 loops=2064)
                                                                     Index Cond: (id = ml.linked_movie_id)
                                                                     Filter: ((production_year >= 2000) AND (production_year <= 2010))
                                                                     Rows Removed by Filter: 1
                                                         ->  Index Scan using movie_id_movie_companies on movie_companies mc1  (cost=0.43..0.59 rows=5 width=8) (actual time=0.004..0.006 rows=5 loops=851)
                                                               Index Cond: (movie_id = mi_idx1.movie_id)
                                             ->  Materialize  (cost=0.00..1.10 rows=2 width=4) (actual time=0.000..0.000 rows=2 loops=4087)
                                                   ->  Seq Scan on kind_type kt2  (cost=0.00..1.09 rows=2 width=4) (actual time=0.011..0.013 rows=2 loops=1)
                                                         Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
                                                         Rows Removed by Filter: 5
                                       ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx2  (cost=0.43..0.53 rows=2 width=13) (actual time=0.003..0.003 rows=1 loops=3300)
                                             Index Cond: (movie_id = t2.id)
                                             Filter: ((info)::text < '3.5'::text)
                                             Rows Removed by Filter: 2
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc2  (cost=0.43..0.62 rows=5 width=8) (actual time=0.005..0.006 rows=3 loops=51)
                                       Index Cond: (movie_id = t2.id)
                           ->  Index Scan using company_name_pkey on company_name cn2  (cost=0.42..0.44 rows=1 width=23) (actual time=0.004..0.004 rows=1 loops=131)
                                 Index Cond: (id = mc2.company_id)
                     ->  Index Scan using title_pkey on title t1  (cost=0.43..0.51 rows=1 width=25) (actual time=0.003..0.003 rows=1 loops=131)
                           Index Cond: (id = mc1.movie_id)
               ->  Index Scan using kind_type_pkey on kind_type kt1  (cost=0.13..0.15 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=131)
                     Index Cond: (id = t1.kind_id)
                     Filter: ((kind)::text = ANY ('{"tv series",episode}'::text[]))
         ->  Index Scan using company_name_pkey on company_name cn1  (cost=0.42..0.45 rows=1 width=23) (actual time=0.004..0.004 rows=1 loops=131)
               Index Cond: (id = mc1.company_id)
               Filter: ((country_code)::text <> '[us]'::text)
               Rows Removed by Filter: 0
 Planning Time: 108.287 ms
 Execution Time: 83.338 ms
(70 rows)

SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16631.00..16631.01 rows=1 width=32) (actual time=643.033..643.034 rows=1 loops=1)
   ->  Nested Loop  (cost=7.62..16630.82 rows=72 width=17) (actual time=14.394..642.780 rows=206 loops=1)
         Join Filter: (t.id = mi.movie_id)
         ->  Nested Loop  (cost=7.19..16315.45 rows=177 width=25) (actual time=9.797..382.315 rows=2235 loops=1)
               ->  Nested Loop  (cost=6.76..16101.73 rows=438 width=4) (actual time=5.656..176.189 rows=12951 loops=1)
                     ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=1.818..40.068 rows=30 loops=1)
                           Filter: ((keyword)::text ~~ '%sequel%'::text)
                           Rows Removed by Filter: 134140
                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1033.58 rows=300 width=8) (actual time=0.173..4.342 rows=432 loops=30)
                           Recheck Cond: (keyword_id = k.id)
                           Heap Blocks: exact=6979
                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.131..0.131 rows=432 loops=30)
                                 Index Cond: (keyword_id = k.id)
               ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.015..0.015 rows=0 loops=12951)
                     Index Cond: (id = mk.movie_id)
                     Filter: (production_year > 2005)
                     Rows Removed by Filter: 1
         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.77 rows=1 width=4) (actual time=0.109..0.116 rows=0 loops=2235)
               Index Cond: (movie_id = mk.movie_id)
               Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German}'::text[]))
               Rows Removed by Filter: 45
 Planning Time: 3.992 ms
 Execution Time: 643.353 ms
(23 rows)

SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16416.66..16416.67 rows=1 width=32) (actual time=399.878..399.878 rows=1 loops=1)
   ->  Nested Loop  (cost=7.62..16416.66 rows=1 width=17) (actual time=24.664..399.833 rows=5 loops=1)
         Join Filter: (t.id = mi.movie_id)
         ->  Nested Loop  (cost=7.19..16315.45 rows=69 width=25) (actual time=10.611..345.761 rows=405 loops=1)
               ->  Nested Loop  (cost=6.76..16101.73 rows=438 width=4) (actual time=6.049..161.449 rows=12951 loops=1)
                     ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=2.260..39.065 rows=30 loops=1)
                           Filter: ((keyword)::text ~~ '%sequel%'::text)
                           Rows Removed by Filter: 134140
                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1033.58 rows=300 width=8) (actual time=0.166..3.898 rows=432 loops=30)
                           Recheck Cond: (keyword_id = k.id)
                           Heap Blocks: exact=6979
                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.126..0.126 rows=432 loops=30)
                                 Index Cond: (keyword_id = k.id)
               ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.013..0.013 rows=0 loops=12951)
                     Index Cond: (id = mk.movie_id)
                     Filter: (production_year > 2010)
                     Rows Removed by Filter: 1
         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.45 rows=1 width=4) (actual time=0.132..0.133 rows=0 loops=405)
               Index Cond: (movie_id = mk.movie_id)
               Filter: ((info)::text = 'Bulgaria'::text)
               Rows Removed by Filter: 63
 Planning Time: 4.196 ms
 Execution Time: 400.217 ms
(23 rows)

SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16894.26..16894.27 rows=1 width=32) (actual time=1059.650..1059.650 rows=1 loops=1)
   ->  Nested Loop  (cost=7.62..16892.82 rows=578 width=17) (actual time=6.757..1054.174 rows=7250 loops=1)
         Join Filter: (t.id = mi.movie_id)
         ->  Nested Loop  (cost=7.19..16315.45 rows=304 width=25) (actual time=6.081..363.912 rows=7874 loops=1)
               ->  Nested Loop  (cost=6.76..16101.73 rows=438 width=4) (actual time=6.028..168.233 rows=12951 loops=1)
                     ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=2.244..38.942 rows=30 loops=1)
                           Filter: ((keyword)::text ~~ '%sequel%'::text)
                           Rows Removed by Filter: 134140
                     ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1033.58 rows=300 width=8) (actual time=0.169..4.124 rows=432 loops=30)
                           Recheck Cond: (keyword_id = k.id)
                           Heap Blocks: exact=6979
                           ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.127..0.127 rows=432 loops=30)
                                 Index Cond: (keyword_id = k.id)
               ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.014..0.014 rows=1 loops=12951)
                     Index Cond: (id = mk.movie_id)
                     Filter: (production_year > 1990)
                     Rows Removed by Filter: 0
         ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..1.87 rows=2 width=4) (actual time=0.075..0.086 rows=1 loops=7874)
               Index Cond: (movie_id = mk.movie_id)
               Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,USA,American}'::text[]))
               Rows Removed by Filter: 35
 Planning Time: 4.487 ms
 Execution Time: 1059.966 ms
(23 rows)

SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16334.91..16334.92 rows=1 width=64) (actual time=420.572..420.572 rows=1 loops=1)
   ->  Nested Loop  (cost=7.62..16334.90 rows=2 width=22) (actual time=11.856..419.753 rows=740 loops=1)
         Join Filter: (mi_idx.movie_id = t.id)
         ->  Nested Loop  (cost=7.19..16332.90 rows=4 width=13) (actual time=6.075..313.568 rows=5820 loops=1)
               Join Filter: (mi_idx.info_type_id = it.id)
               Rows Removed by Join Filter: 2643
               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.032..0.036 rows=1 loops=1)
                     Filter: ((info)::text = 'rating'::text)
                     Rows Removed by Filter: 112
               ->  Nested Loop  (cost=7.19..16324.17 rows=505 width=17) (actual time=6.041..311.165 rows=8463 loops=1)
                     ->  Nested Loop  (cost=6.76..16101.73 rows=438 width=4) (actual time=5.986..168.196 rows=12951 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=2.227..39.507 rows=30 loops=1)
                                 Filter: ((keyword)::text ~~ '%sequel%'::text)
                                 Rows Removed by Filter: 134140
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1033.58 rows=300 width=8) (actual time=0.165..4.128 rows=432 loops=30)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=6979
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.126..0.126 rows=432 loops=30)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=13) (actual time=0.010..0.010 rows=1 loops=12951)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((info)::text > '5.0'::text)
                           Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.017..0.017 rows=0 loops=5820)
               Index Cond: (id = mk.movie_id)
               Filter: (production_year > 2005)
               Rows Removed by Filter: 1
 Planning Time: 5.065 ms
 Execution Time: 420.969 ms
(29 rows)

SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16327.16..16327.17 rows=1 width=64) (actual time=206.500..206.501 rows=1 loops=1)
   ->  Nested Loop  (cost=7.62..16327.16 rows=1 width=22) (actual time=35.855..206.472 rows=6 loops=1)
         Join Filter: (mi_idx.movie_id = t.id)
         ->  Nested Loop  (cost=7.19..16326.66 rows=1 width=13) (actual time=31.240..206.038 rows=21 loops=1)
               Join Filter: (mi_idx.info_type_id = it.id)
               Rows Removed by Join Filter: 285
               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.025..0.028 rows=1 loops=1)
                     Filter: ((info)::text = 'rating'::text)
                     Rows Removed by Filter: 112
               ->  Nested Loop  (cost=7.19..16324.17 rows=6 width=17) (actual time=6.958..205.942 rows=306 loops=1)
                     ->  Nested Loop  (cost=6.76..16101.73 rows=438 width=4) (actual time=6.043..112.012 rows=12951 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=2.261..30.016 rows=30 loops=1)
                                 Filter: ((keyword)::text ~~ '%sequel%'::text)
                                 Rows Removed by Filter: 134140
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1033.58 rows=300 width=8) (actual time=0.151..2.608 rows=432 loops=30)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=6979
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.114..0.114 rows=432 loops=30)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=1 width=13) (actual time=0.007..0.007 rows=0 loops=12951)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((info)::text > '9.0'::text)
                           Rows Removed by Filter: 2
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.019..0.019 rows=0 loops=21)
               Index Cond: (id = mk.movie_id)
               Filter: (production_year > 2010)
               Rows Removed by Filter: 1
 Planning Time: 4.433 ms
 Execution Time: 206.891 ms
(29 rows)

SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=16344.82..16344.83 rows=1 width=64) (actual time=313.987..313.987 rows=1 loops=1)
   ->  Nested Loop  (cost=7.62..16344.79 rows=5 width=22) (actual time=5.310..309.643 rows=4700 loops=1)
         Join Filter: (mi_idx.movie_id = t.id)
         ->  Nested Loop  (cost=7.19..16341.29 rows=7 width=13) (actual time=5.232..196.587 rows=8092 loops=1)
               Join Filter: (mi_idx.info_type_id = it.id)
               Rows Removed by Join Filter: 6865
               ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.035..0.038 rows=1 loops=1)
                     Filter: ((info)::text = 'rating'::text)
                     Rows Removed by Filter: 112
               ->  Nested Loop  (cost=7.19..16328.55 rows=826 width=17) (actual time=5.195..193.205 rows=14957 loops=1)
                     ->  Nested Loop  (cost=6.76..16101.73 rows=438 width=4) (actual time=5.158..99.279 rows=12951 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=13 width=4) (actual time=1.725..38.850 rows=30 loops=1)
                                 Filter: ((keyword)::text ~~ '%sequel%'::text)
                                 Rows Removed by Filter: 134140
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1033.58 rows=300 width=8) (actual time=0.152..1.882 rows=432 loops=30)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=6979
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.114..0.114 rows=432 loops=30)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using movie_id_movie_info_idx on movie_info_idx mi_idx  (cost=0.43..0.50 rows=2 width=13) (actual time=0.006..0.006 rows=1 loops=12951)
                           Index Cond: (movie_id = mk.movie_id)
                           Filter: ((info)::text > '2.0'::text)
                           Rows Removed by Filter: 1
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.013..0.013 rows=1 loops=8092)
               Index Cond: (id = mk.movie_id)
               Filter: (production_year > 1990)
               Rows Removed by Filter: 0
 Planning Time: 3.975 ms
 Execution Time: 314.376 ms
(29 rows)

SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=39503.41..39503.42 rows=1 width=32) (actual time=263.428..263.428 rows=1 loops=1)
   ->  Gather  (cost=39503.19..39503.40 rows=2 width=32) (actual time=263.364..264.658 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=38503.19..38503.20 rows=1 width=32) (actual time=256.445..256.445 rows=1 loops=3)
               ->  Hash Join  (cost=5.47..38503.07 rows=48 width=17) (actual time=256.442..256.442 rows=0 loops=3)
                     Hash Cond: (mi.info_type_id = it.id)
                     ->  Nested Loop  (cost=1.93..38499.40 rows=48 width=21) (actual time=256.440..256.440 rows=0 loops=3)
                           ->  Nested Loop  (cost=1.49..38104.61 rows=165 width=25) (actual time=256.440..256.440 rows=0 loops=3)
                                 ->  Hash Join  (cost=1.06..35106.92 rows=407 width=4) (actual time=256.440..256.440 rows=0 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..35097.06 rows=1629 width=8) (actual time=11.025..254.621 rows=8008 loops=3)
                                             Filter: (((note)::text ~~ '%(theatrical)%'::text) AND ((note)::text ~~ '%(France)%'::text))
                                             Rows Removed by Filter: 861701
                                       ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.077..0.078 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.037..0.039 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..7.37 rows=1 width=21) (never executed)
                                       Index Cond: (id = mc.movie_id)
                                       Filter: (production_year > 2005)
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.38 rows=1 width=8) (never executed)
                                 Index Cond: (movie_id = t.id)
                                 Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German}'::text[]))
                     ->  Hash  (cost=2.13..2.13 rows=113 width=4) (never executed)
                           ->  Seq Scan on info_type it  (cost=0.00..2.13 rows=113 width=4) (never executed)
 Planning Time: 5.100 ms
 Execution Time: 265.083 ms
(29 rows)

SET
                                                                               QUERY PLAN                                                                               
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=38870.49..38870.50 rows=1 width=32) (actual time=255.046..255.046 rows=1 loops=1)
   ->  Gather  (cost=38870.28..38870.49 rows=2 width=32) (actual time=254.950..256.471 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=37870.28..37870.29 rows=1 width=32) (actual time=248.255..248.255 rows=1 loops=3)
               ->  Nested Loop  (cost=2.07..37870.28 rows=1 width=17) (actual time=248.252..248.252 rows=0 loops=3)
                     ->  Nested Loop  (cost=1.93..37870.12 rows=1 width=21) (actual time=248.252..248.252 rows=0 loops=3)
                           ->  Nested Loop  (cost=1.49..37866.79 rows=1 width=25) (actual time=248.251..248.251 rows=0 loops=3)
                                 ->  Hash Join  (cost=1.06..37816.09 rows=6 width=4) (actual time=248.251..248.251 rows=0 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..37814.90 rows=25 width=8) (actual time=4.587..247.833 rows=473 loops=3)
                                             Filter: (((note)::text ~~ '%(VHS)%'::text) AND ((note)::text ~~ '%(USA)%'::text) AND ((note)::text ~~ '%(1994)%'::text))
                                             Rows Removed by Filter: 869237
                                       ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.066..0.066 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.046..0.047 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..8.45 rows=1 width=21) (never executed)
                                       Index Cond: (id = mc.movie_id)
                                       Filter: (production_year > 2010)
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..3.31 rows=1 width=8) (never executed)
                                 Index Cond: (movie_id = t.id)
                                 Filter: ((info)::text = ANY ('{USA,America}'::text[]))
                     ->  Index Only Scan using info_type_pkey on info_type it  (cost=0.14..0.16 rows=1 width=4) (never executed)
                           Index Cond: (id = mi.info_type_id)
                           Heap Fetches: 0
 Planning Time: 4.220 ms
 Execution Time: 256.933 ms
(29 rows)

SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=91609.00..91609.01 rows=1 width=32) (actual time=367.525..367.526 rows=1 loops=1)
   ->  Gather  (cost=91608.78..91608.99 rows=2 width=32) (actual time=367.309..371.687 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=90608.78..90608.79 rows=1 width=32) (actual time=360.578..360.578 rows=1 loops=3)
               ->  Hash Join  (cost=5.47..90564.24 rows=17818 width=17) (actual time=214.191..360.326 rows=223 loops=3)
                     Hash Cond: (mi.info_type_id = it.id)
                     ->  Nested Loop  (cost=1.93..90512.17 rows=17818 width=21) (actual time=214.046..359.949 rows=223 loops=3)
                           ->  Nested Loop  (cost=1.49..61913.67 rows=13136 width=25) (actual time=213.864..311.318 rows=256 loops=3)
                                 ->  Hash Join  (cost=1.06..35507.44 rows=18928 width=4) (actual time=213.732..300.333 rows=266 loops=3)
                                       Hash Cond: (mc.company_type_id = ct.id)
                                       ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..35097.06 rows=75712 width=8) (actual time=0.072..290.017 rows=98543 loops=3)
                                             Filter: (((note)::text !~~ '%(TV)%'::text) AND ((note)::text ~~ '%(USA)%'::text))
                                             Rows Removed by Filter: 771167
                                       ->  Hash  (cost=1.05..1.05 rows=1 width=4) (actual time=0.059..0.060 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4) (actual time=0.031..0.032 rows=1 loops=3)
                                                   Filter: ((kind)::text = 'production companies'::text)
                                                   Rows Removed by Filter: 3
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..1.40 rows=1 width=21) (actual time=0.040..0.040 rows=1 loops=798)
                                       Index Cond: (id = mc.movie_id)
                                       Filter: (production_year > 1990)
                                       Rows Removed by Filter: 0
                           ->  Index Scan using movie_id_movie_info on movie_info mi  (cost=0.43..2.16 rows=2 width=8) (actual time=0.168..0.189 rows=1 loops=767)
                                 Index Cond: (movie_id = t.id)
                                 Filter: ((info)::text = ANY ('{Sweden,Norway,Germany,Denmark,Swedish,Denish,Norwegian,German,USA,American}'::text[]))
                                 Rows Removed by Filter: 10
                     ->  Hash  (cost=2.13..2.13 rows=113 width=4) (actual time=0.082..0.082 rows=113 loops=3)
                           Buckets: 1024  Batches: 1  Memory Usage: 12kB
                           ->  Seq Scan on info_type it  (cost=0.00..2.13 rows=113 width=4) (actual time=0.027..0.041 rows=113 loops=3)
 Planning Time: 4.480 ms
 Execution Time: 372.158 ms
(32 rows)

SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3852.63..3852.64 rows=1 width=96) (actual time=87.955..87.955 rows=1 loops=1)
   ->  Nested Loop  (cost=8.18..3852.62 rows=1 width=48) (actual time=11.582..87.920 rows=6 loops=1)
         ->  Nested Loop  (cost=7.75..3762.97 rows=196 width=37) (actual time=0.935..50.556 rows=1224 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.19..3753.04 rows=5 width=41) (actual time=0.874..31.827 rows=11 loops=1)
                     ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=20) (actual time=0.823..31.172 rows=14 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=20) (actual time=0.741..30.792 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'marvel-cinematic-universe'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=0.073..0.362 rows=14 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=12
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.042..0.043 rows=14 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.045..0.045 rows=1 loops=14)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2010)
                           Rows Removed by Filter: 0
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.042..1.618 rows=111 loops=11)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.029..0.029 rows=0 loops=1224)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ '%Downey%Robert%'::text)
               Rows Removed by Filter: 1
 Planning Time: 4.763 ms
 Execution Time: 88.365 ms
(26 rows)

SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=12284.35..12284.36 rows=1 width=96) (actual time=935.080..935.080 rows=1 loops=1)
   ->  Nested Loop  (cost=8.18..12284.35 rows=1 width=48) (actual time=83.096..935.019 rows=12 loops=1)
         ->  Nested Loop  (cost=7.75..12283.89 rows=1 width=37) (actual time=24.777..928.468 rows=383 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.19..12281.90 rows=1 width=41) (actual time=24.747..924.648 rows=36 loops=1)
                     ->  Nested Loop  (cost=6.76..12150.15 rows=270 width=20) (actual time=1.072..430.569 rows=35548 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..3632.40 rows=8 width=20) (actual time=0.142..48.797 rows=8 loops=1)
                                 Filter: ((keyword)::text = ANY ('{superhero,sequel,second-part,marvel-comics,based-on-comic,tv-special,fight,violence}'::text[]))
                                 Rows Removed by Filter: 134162
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1061.72 rows=300 width=8) (actual time=1.791..45.398 rows=4444 loops=8)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=23488
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=1.369..1.369 rows=4444 loops=8)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.013..0.013 rows=0 loops=35548)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2014)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.030..0.099 rows=11 loops=36)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.016..0.016 rows=0 loops=383)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ '%Downey%Robert%'::text)
               Rows Removed by Filter: 1
 Planning Time: 4.414 ms
 Execution Time: 935.469 ms
(26 rows)

SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=3755.49..3755.50 rows=1 width=96) (actual time=20.988..20.989 rows=1 loops=1)
   ->  Nested Loop  (cost=8.18..3755.48 rows=1 width=48) (actual time=1.804..20.976 rows=2 loops=1)
         ->  Nested Loop  (cost=7.75..3755.03 rows=1 width=37) (actual time=0.985..20.436 rows=33 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.19..3753.04 rows=1 width=41) (actual time=0.925..20.123 rows=2 loops=1)
                     ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=20) (actual time=0.812..19.544 rows=14 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=20) (actual time=0.750..19.290 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'marvel-cinematic-universe'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=0.053..0.237 rows=14 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=12
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.045..0.045 rows=14 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.040..0.040 rows=0 loops=14)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2014)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.047..0.145 rows=16 loops=2)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.015..0.015 rows=0 loops=33)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ '%Downey%Robert%'::text)
               Rows Removed by Filter: 1
 Planning Time: 5.342 ms
 Execution Time: 21.392 ms
(26 rows)

SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=15065.52..15065.53 rows=1 width=96) (actual time=24087.623..24087.624 rows=1 loops=1)
   ->  Nested Loop  (cost=8.18..15065.51 rows=1 width=48) (actual time=568.960..24087.061 rows=88 loops=1)
         ->  Nested Loop  (cost=7.75..12575.89 rows=5443 width=37) (actual time=1.143..9738.852 rows=785477 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.19..12281.90 rows=148 width=41) (actual time=1.097..1144.715 rows=14165 loops=1)
                     ->  Nested Loop  (cost=6.76..12150.15 rows=270 width=20) (actual time=1.052..495.615 rows=35548 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..3632.40 rows=8 width=20) (actual time=0.160..50.343 rows=8 loops=1)
                                 Filter: ((keyword)::text = ANY ('{superhero,sequel,second-part,marvel-comics,based-on-comic,tv-special,fight,violence}'::text[]))
                                 Rows Removed by Filter: 134162
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1061.72 rows=300 width=8) (actual time=1.771..53.074 rows=4444 loops=8)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=23488
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=1.350..1.350 rows=4444 loops=8)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.017..0.017 rows=0 loops=35548)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2000)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.023..0.566 rows=55 loops=14165)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.017..0.017 rows=0 loops=785477)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ '%Downey%Robert%'::text)
               Rows Removed by Filter: 1
 Planning Time: 4.388 ms
 Execution Time: 24088.008 ms
(26 rows)

SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=4102.27..4102.28 rows=1 width=96) (actual time=53.843..53.844 rows=1 loops=1)
   ->  Nested Loop  (cost=8.18..4102.27 rows=1 width=48) (actual time=10.225..53.815 rows=6 loops=1)
         ->  Nested Loop  (cost=7.75..3790.78 rows=681 width=37) (actual time=0.972..29.784 rows=1224 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.19..3753.04 rows=19 width=41) (actual time=0.898..18.547 rows=11 loops=1)
                     ->  Nested Loop  (cost=6.76..3736.45 rows=34 width=20) (actual time=0.835..18.051 rows=14 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..2626.12 rows=1 width=20) (actual time=0.764..17.772 rows=1 loops=1)
                                 Filter: ((keyword)::text = 'marvel-cinematic-universe'::text)
                                 Rows Removed by Filter: 134169
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1107.32 rows=300 width=8) (actual time=0.063..0.262 rows=14 loops=1)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=12
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=0.041..0.041 rows=14 loops=1)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.034..0.034 rows=1 loops=14)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2000)
                           Rows Removed by Filter: 0
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.036..0.954 rows=111 loops=11)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.019..0.019 rows=0 loops=1224)
               Index Cond: (id = ci.person_id)
               Filter: ((name)::text ~~ '%Downey%Robert%'::text)
               Rows Removed by Filter: 1
 Planning Time: 5.521 ms
 Execution Time: 54.312 ms
(26 rows)

SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=15092.73..15092.74 rows=1 width=96) (actual time=24520.981..24520.982 rows=1 loops=1)
   ->  Nested Loop  (cost=8.18..15051.90 rows=5443 width=48) (actual time=1.235..23669.916 rows=785477 loops=1)
         ->  Nested Loop  (cost=7.75..12575.89 rows=5443 width=37) (actual time=1.174..9883.901 rows=785477 loops=1)
               Join Filter: (t.id = ci.movie_id)
               ->  Nested Loop  (cost=7.19..12281.90 rows=148 width=41) (actual time=1.127..1143.230 rows=14165 loops=1)
                     ->  Nested Loop  (cost=6.76..12150.15 rows=270 width=20) (actual time=1.081..493.938 rows=35548 loops=1)
                           ->  Seq Scan on keyword k  (cost=0.00..3632.40 rows=8 width=20) (actual time=0.157..48.974 rows=8 loops=1)
                                 Filter: ((keyword)::text = ANY ('{superhero,sequel,second-part,marvel-comics,based-on-comic,tv-special,fight,violence}'::text[]))
                                 Rows Removed by Filter: 134162
                           ->  Bitmap Heap Scan on movie_keyword mk  (cost=6.76..1061.72 rows=300 width=8) (actual time=1.798..53.136 rows=4444 loops=8)
                                 Recheck Cond: (keyword_id = k.id)
                                 Heap Blocks: exact=23488
                                 ->  Bitmap Index Scan on keyword_id_movie_keyword  (cost=0.00..6.68 rows=300 width=0) (actual time=1.375..1.376 rows=4444 loops=8)
                                       Index Cond: (keyword_id = k.id)
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.49 rows=1 width=21) (actual time=0.017..0.017 rows=0 loops=35548)
                           Index Cond: (id = mk.movie_id)
                           Filter: (production_year > 2000)
                           Rows Removed by Filter: 1
               ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.52 rows=37 width=8) (actual time=0.024..0.577 rows=55 loops=14165)
                     Index Cond: (movie_id = mk.movie_id)
         ->  Index Scan using name_pkey on name n  (cost=0.43..0.45 rows=1 width=19) (actual time=0.016..0.016 rows=1 loops=785477)
               Index Cond: (id = ci.person_id)
 Planning Time: 4.721 ms
 Execution Time: 24521.388 ms
(24 rows)

SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=13380.61..13380.62 rows=1 width=64) (actual time=3167.880..3167.880 rows=1 loops=1)
   ->  Nested Loop  (cost=41.24..13380.61 rows=1 width=32) (actual time=148.323..3167.808 rows=32 loops=1)
         ->  Nested Loop  (cost=41.10..13379.60 rows=1 width=36) (actual time=148.260..3167.581 rows=32 loops=1)
               Join Filter: (n.id = an.person_id)
               ->  Nested Loop  (cost=40.67..13379.10 rows=1 width=48) (actual time=148.188..3166.975 rows=14 loops=1)
                     Join Filter: (n.id = pi.person_id)
                     ->  Nested Loop  (cost=40.24..12435.27 rows=974 width=40) (actual time=0.787..2808.526 rows=17559 loops=1)
                           ->  Nested Loop  (cost=39.81..8528.28 rows=8359 width=21) (actual time=0.728..1074.144 rows=105262 loops=1)
                                 ->  Nested Loop  (cost=39.25..7243.89 rows=226 width=25) (actual time=0.652..120.105 rows=1467 loops=1)
                                       ->  Nested Loop  (cost=38.82..245.23 rows=1666 width=4) (actual time=0.570..6.936 rows=5186 loops=1)
                                             ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=4) (actual time=0.032..0.039 rows=1 loops=1)
                                                   Filter: ((link)::text = 'features'::text)
                                                   Rows Removed by Filter: 17
                                             ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..225.26 rows=1875 width=8) (actual time=0.530..4.765 rows=5186 loops=1)
                                                   Recheck Cond: (link_type_id = lt.id)
                                                   Heap Blocks: exact=132
                                                   ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.486..0.487 rows=5186 loops=1)
                                                         Index Cond: (link_type_id = lt.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..4.20 rows=1 width=21) (actual time=0.021..0.021 rows=0 loops=5186)
                                             Index Cond: (id = ml.linked_movie_id)
                                             Filter: ((production_year >= 1980) AND (production_year <= 1995))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..5.31 rows=37 width=8) (actual time=0.028..0.616 rows=72 loops=1467)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Scan using name_pkey on name n  (cost=0.43..0.47 rows=1 width=19) (actual time=0.016..0.016 rows=0 loops=105262)
                                 Index Cond: (id = ci.person_id)
                                 Filter: (((name_pcode_cf)::text >= 'A'::text) AND ((name_pcode_cf)::text <= 'F'::text) AND (((gender)::text = 'm'::text) OR (((gender)::text = 'f'::text) AND ((name)::text ~~ 'B%'::text))))
                                 Rows Removed by Filter: 1
                     ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..0.96 rows=1 width=8) (actual time=0.020..0.020 rows=0 loops=17559)
                           Index Cond: (person_id = ci.person_id)
                           Filter: ((note)::text = 'Volker Boehm'::text)
                           Rows Removed by Filter: 20
               ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.47 rows=2 width=4) (actual time=0.031..0.040 rows=2 loops=14)
                     Index Cond: (person_id = ci.person_id)
                     Filter: ((name)::text ~~ '%a%'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using info_type_pkey on info_type it  (cost=0.14..0.58 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=32)
               Index Cond: (id = pi.info_type_id)
               Filter: ((info)::text = 'mini biography'::text)
 Planning Time: 15.008 ms
 Execution Time: 3168.475 ms
(41 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=9090.16..9090.17 rows=1 width=64) (actual time=799.754..799.755 rows=1 loops=1)
   ->  Nested Loop  (cost=41.24..9090.16 rows=1 width=32) (actual time=31.082..799.701 rows=16 loops=1)
         ->  Nested Loop  (cost=41.10..9089.15 rows=1 width=36) (actual time=31.044..799.594 rows=16 loops=1)
               Join Filter: (n.id = an.person_id)
               ->  Nested Loop  (cost=40.67..9088.65 rows=1 width=48) (actual time=31.005..799.414 rows=8 loops=1)
                     Join Filter: (n.id = pi.person_id)
                     ->  Nested Loop  (cost=40.24..9045.05 rows=45 width=40) (actual time=1.257..781.398 rows=1076 loops=1)
                           ->  Nested Loop  (cost=39.81..8143.65 rows=1960 width=21) (actual time=0.738..341.011 rows=33415 loops=1)
                                 ->  Nested Loop  (cost=39.25..7243.89 rows=53 width=25) (actual time=0.650..105.049 rows=435 loops=1)
                                       ->  Nested Loop  (cost=38.82..245.23 rows=1666 width=4) (actual time=0.576..6.301 rows=5186 loops=1)
                                             ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=4) (actual time=0.027..0.033 rows=1 loops=1)
                                                   Filter: ((link)::text = 'features'::text)
                                                   Rows Removed by Filter: 17
                                             ->  Bitmap Heap Scan on movie_link ml  (cost=38.82..225.26 rows=1875 width=8) (actual time=0.541..4.399 rows=5186 loops=1)
                                                   Recheck Cond: (link_type_id = lt.id)
                                                   Heap Blocks: exact=132
                                                   ->  Bitmap Index Scan on link_type_id_movie_link  (cost=0.00..38.35 rows=1875 width=0) (actual time=0.497..0.497 rows=5186 loops=1)
                                                         Index Cond: (link_type_id = lt.id)
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..4.20 rows=1 width=21) (actual time=0.018..0.018 rows=0 loops=5186)
                                             Index Cond: (id = ml.linked_movie_id)
                                             Filter: ((production_year >= 1980) AND (production_year <= 1984))
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..16.61 rows=37 width=8) (actual time=0.026..0.512 rows=77 loops=435)
                                       Index Cond: (movie_id = t.id)
                           ->  Index Scan using name_pkey on name n  (cost=0.43..0.46 rows=1 width=19) (actual time=0.012..0.012 rows=0 loops=33415)
                                 Index Cond: (id = ci.person_id)
                                 Filter: (((name_pcode_cf)::text ~~ 'D%'::text) AND ((gender)::text = 'm'::text))
                                 Rows Removed by Filter: 1
                     ->  Index Scan using person_id_person_info on person_info pi  (cost=0.43..0.96 rows=1 width=8) (actual time=0.016..0.016 rows=0 loops=1076)
                           Index Cond: (person_id = ci.person_id)
                           Filter: ((note)::text = 'Volker Boehm'::text)
                           Rows Removed by Filter: 16
               ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.47 rows=2 width=4) (actual time=0.016..0.020 rows=2 loops=8)
                     Index Cond: (person_id = ci.person_id)
                     Filter: ((name)::text ~~ '%a%'::text)
                     Rows Removed by Filter: 1
         ->  Index Scan using info_type_pkey on info_type it  (cost=0.14..0.58 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=16)
               Index Cond: (id = pi.info_type_id)
               Filter: ((info)::text = 'mini biography'::text)
 Planning Time: 14.711 ms
 Execution Time: 800.433 ms
(41 rows)

SET
                                                                                                             QUERY PLAN                                                                                                              
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=57980.82..57980.83 rows=1 width=64) (actual time=6453.982..6453.982 rows=1 loops=1)
   ->  Nested Loop  (cost=2495.17..57980.79 rows=6 width=109) (actual time=27.429..6060.352 rows=68185 loops=1)
         ->  Hash Join  (cost=2494.74..57976.67 rows=9 width=117) (actual time=27.345..5597.216 rows=109842 loops=1)
               Hash Cond: (ml.link_type_id = lt.id)
               ->  Nested Loop  (cost=2493.42..57975.22 rows=42 width=121) (actual time=27.223..5551.698 rows=127027 loops=1)
                     ->  Nested Loop  (cost=2493.13..57509.04 rows=1361 width=113) (actual time=27.143..3025.278 rows=1618304 loops=1)
                           ->  Nested Loop  (cost=2492.57..57244.88 rows=15 width=121) (actual time=27.077..2056.408 rows=12595 loops=1)
                                 ->  Nested Loop  (cost=2492.14..56116.79 rows=1360 width=102) (actual time=26.814..1361.299 rows=72979 loops=1)
                                       ->  Nested Loop  (cost=2491.71..55265.79 rows=735 width=98) (actual time=26.670..769.542 rows=84183 loops=1)
                                             ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4) (actual time=0.050..0.066 rows=1 loops=1)
                                                   Filter: ((info)::text = 'mini biography'::text)
                                                   Rows Removed by Filter: 112
                                             ->  Bitmap Heap Scan on person_info pi  (cost=2491.71..55225.61 rows=3776 width=102) (actual time=26.611..747.014 rows=84183 loops=1)
                                                   Recheck Cond: (info_type_id = it.id)
                                                   Filter: (note IS NOT NULL)
                                                   Rows Removed by Filter: 1
                                                   Heap Blocks: exact=40537
                                                   ->  Bitmap Index Scan on info_type_id_person_info  (cost=0.00..2490.77 rows=134712 width=0) (actual time=19.412..19.412 rows=84184 loops=1)
                                                         Index Cond: (info_type_id = it.id)
                                       ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..1.14 rows=2 width=4) (actual time=0.005..0.006 rows=1 loops=84183)
                                             Index Cond: (person_id = pi.person_id)
                                             Filter: ((name IS NOT NULL) AND (((name)::text ~~ '%a%'::text) OR ((name)::text ~~ 'A%'::text)))
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using name_pkey on name n  (cost=0.43..0.83 rows=1 width=19) (actual time=0.009..0.009 rows=0 loops=72979)
                                       Index Cond: (id = an.person_id)
                                       Filter: (((name_pcode_cf)::text >= 'A'::text) AND ((name_pcode_cf)::text <= 'F'::text) AND (((gender)::text = 'm'::text) OR (((gender)::text = 'f'::text) AND ((name)::text ~~ 'A%'::text))))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using person_id_cast_info on cast_info ci  (cost=0.56..12.48 rows=513 width=8) (actual time=0.014..0.054 rows=128 loops=12595)
                                 Index Cond: (person_id = n.id)
                     ->  Index Scan using linked_movie_id_movie_link on movie_link ml  (cost=0.29..0.32 rows=2 width=8) (actual time=0.001..0.001 rows=0 loops=1618304)
                           Index Cond: (linked_movie_id = ci.movie_id)
               ->  Hash  (cost=1.27..1.27 rows=4 width=4) (actual time=0.047..0.047 rows=4 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                     ->  Seq Scan on link_type lt  (cost=0.00..1.27 rows=4 width=4) (actual time=0.027..0.031 rows=4 loops=1)
                           Filter: ((link)::text = ANY ('{references,"referenced in",features,"featured in"}'::text[]))
                           Rows Removed by Filter: 14
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.46 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=109842)
               Index Cond: (id = ci.movie_id)
               Filter: ((production_year >= 1980) AND (production_year <= 2010))
               Rows Removed by Filter: 0
 Planning Time: 15.093 ms
 Execution Time: 6454.871 ms
(42 rows)

SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=42573.42..42573.43 rows=1 width=64) (actual time=4484.637..4484.637 rows=1 loops=1)
   ->  Gather  (cost=5776.21..42573.41 rows=1 width=33) (actual time=894.315..4491.295 rows=62 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Nested Loop  (cost=4776.21..41573.31 rows=1 width=33) (actual time=494.935..4476.903 rows=21 loops=3)
               ->  Nested Loop  (cost=4775.78..41569.56 rows=5 width=41) (actual time=35.964..4443.408 rows=5793 loops=3)
                     ->  Hash Join  (cost=4775.35..41567.47 rows=2 width=21) (actual time=35.873..4410.765 rows=2479 loops=3)
                           Hash Cond: (ci.role_id = rt.id)
                           ->  Nested Loop  (cost=4774.19..41566.22 rows=25 width=25) (actual time=35.593..4407.879 rows=6533 loops=3)
                                 ->  Nested Loop  (cost=4773.62..41105.65 rows=246 width=25) (actual time=35.058..554.534 rows=16109 loops=3)
                                       ->  Parallel Hash Join  (cost=4773.19..39892.48 rows=246 width=4) (actual time=34.953..309.883 rows=16109 loops=3)
                                             Hash Cond: (mc.company_id = cn.id)
                                             ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..35097.06 rows=8470 width=8) (actual time=0.111..258.028 rows=16299 loops=3)
                                                   Filter: (((note)::text ~~ '%(Japan)%'::text) AND ((note)::text !~~ '%(USA)%'::text))
                                                   Rows Removed by Filter: 853411
                                             ->  Parallel Hash  (cost=4722.92..4722.92 rows=4022 width=4) (actual time=34.461..34.461 rows=2251 loops=3)
                                                   Buckets: 8192  Batches: 1  Memory Usage: 384kB
                                                   ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=4022 width=4) (actual time=0.042..32.617 rows=2251 loops=3)
                                                         Filter: ((country_code)::text = '[jp]'::text)
                                                         Rows Removed by Filter: 76082
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..4.93 rows=1 width=21) (actual time=0.014..0.014 rows=1 loops=48328)
                                             Index Cond: (id = mc.movie_id)
                                 ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..1.86 rows=1 width=12) (actual time=0.230..0.238 rows=0 loops=48328)
                                       Index Cond: (movie_id = t.id)
                                       Filter: ((note)::text = '(voice: English version)'::text)
                                       Rows Removed by Filter: 32
                           ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.072..0.072 rows=1 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                 ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.047..0.049 rows=1 loops=3)
                                       Filter: ((role)::text = 'actress'::text)
                                       Rows Removed by Filter: 11
                     ->  Index Scan using person_id_aka_name on aka_name an1  (cost=0.42..1.03 rows=2 width=20) (actual time=0.010..0.012 rows=2 loops=7438)
                           Index Cond: (person_id = ci.person_id)
               ->  Index Scan using name_pkey on name n1  (cost=0.43..0.75 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=17379)
                     Index Cond: (id = an1.person_id)
                     Filter: (((name)::text ~~ '%Yo%'::text) AND ((name)::text !~~ '%Yu%'::text))
                     Rows Removed by Filter: 1
 Planning Time: 10.339 ms
 Execution Time: 4491.946 ms
(39 rows)

SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=43935.52..43935.53 rows=1 width=64) (actual time=353.545..353.546 rows=1 loops=1)
   ->  Nested Loop  (cost=1002.40..43935.52 rows=1 width=33) (actual time=209.729..353.500 rows=6 loops=1)
         ->  Nested Loop  (cost=1002.27..43935.34 rows=1 width=37) (actual time=209.648..353.406 rows=6 loops=1)
               ->  Nested Loop  (cost=1001.84..43934.59 rows=1 width=45) (actual time=207.927..351.431 rows=171 loops=1)
                     ->  Nested Loop  (cost=1001.42..43933.55 rows=1 width=25) (actual time=207.862..349.211 rows=104 loops=1)
                           Join Filter: (t.id = ci.movie_id)
                           ->  Gather  (cost=1000.85..43788.54 rows=1 width=25) (actual time=207.288..352.090 rows=4 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Nested Loop  (cost=0.85..42788.44 rows=1 width=25) (actual time=230.333..344.691 rows=1 loops=3)
                                       ->  Nested Loop  (cost=0.42..42706.13 rows=10 width=4) (actual time=0.185..274.865 rows=2832 loops=3)
                                             ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..40532.74 rows=338 width=8) (actual time=0.098..249.116 rows=2856 loops=3)
                                                   Filter: (((note)::text ~~ '%(Japan)%'::text) AND ((note)::text !~~ '%(USA)%'::text) AND (((note)::text ~~ '%(2006)%'::text) OR ((note)::text ~~ '%(2007)%'::text)))
                                                   Rows Removed by Filter: 866853
                                             ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..6.43 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=8569)
                                                   Index Cond: (id = mc.company_id)
                                                   Filter: ((country_code)::text = '[jp]'::text)
                                                   Rows Removed by Filter: 0
                                       ->  Index Scan using title_pkey on title t  (cost=0.43..8.20 rows=1 width=21) (actual time=0.024..0.024 rows=0 loops=8495)
                                             Index Cond: (id = mc.movie_id)
                                             Filter: ((production_year >= 2006) AND (production_year <= 2007) AND (((title)::text ~~ 'One Piece%'::text) OR ((title)::text ~~ 'Dragon Ball Z%'::text)))
                                             Rows Removed by Filter: 1
                           ->  Index Scan using movie_id_cast_info on cast_info ci  (cost=0.56..145.00 rows=1 width=12) (actual time=0.149..0.492 rows=26 loops=4)
                                 Index Cond: (movie_id = mc.movie_id)
                                 Filter: ((note)::text = '(voice: English version)'::text)
                                 Rows Removed by Filter: 17
                     ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..1.03 rows=2 width=20) (actual time=0.017..0.020 rows=2 loops=104)
                           Index Cond: (person_id = ci.person_id)
               ->  Index Scan using name_pkey on name n  (cost=0.43..0.75 rows=1 width=4) (actual time=0.011..0.011 rows=0 loops=171)
                     Index Cond: (id = an.person_id)
                     Filter: (((name)::text ~~ '%Yo%'::text) AND ((name)::text !~~ '%Yu%'::text))
                     Rows Removed by Filter: 1
         ->  Index Scan using role_type_pkey on role_type rt  (cost=0.14..0.16 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=6)
               Index Cond: (id = ci.role_id)
               Filter: ((role)::text = 'actress'::text)
 Planning Time: 10.261 ms
 Execution Time: 359.017 ms
(37 rows)

SET
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=507448.30..507448.31 rows=1 width=64) (actual time=7297.494..7297.494 rows=1 loops=1)
   ->  Gather  (cost=507448.08..507448.29 rows=2 width=64) (actual time=7293.831..7417.054 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=506448.08..506448.09 rows=1 width=64) (actual time=7286.920..7286.920 rows=1 loops=3)
               ->  Parallel Hash Join  (cost=369446.57..492488.07 rows=2792002 width=33) (actual time=6769.170..7052.014 rows=829204 loops=3)
                     Hash Cond: (ci.person_id = a1.person_id)
                     ->  Hash Join  (cost=243680.90..334088.98 rows=1215217 width=21) (actual time=4596.069..5047.191 rows=656886 loops=3)
                           Hash Cond: (t.id = ci.movie_id)
                           ->  Parallel Hash Join  (cost=44347.81..110366.87 rows=395029 width=25) (actual time=1108.224..1388.341 rows=384599 loops=3)
                                 Hash Cond: (t.id = mc.movie_id)
                                 ->  Parallel Seq Scan on title t  (cost=0.00..46532.63 rows=1053463 width=21) (actual time=0.050..261.495 rows=842771 loops=3)
                                 ->  Parallel Hash  (cost=37865.94..37865.94 rows=395029 width=4) (actual time=535.460..535.460 rows=384599 loops=3)
                                       Buckets: 131072  Batches: 16  Memory Usage: 3936kB
                                       ->  Parallel Hash Join  (cost=5350.78..37865.94 rows=395029 width=4) (actual time=47.190..410.993 rows=384599 loops=3)
                                             Hash Cond: (mc.company_id = cn.id)
                                             ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=8) (actual time=0.049..168.055 rows=869710 loops=3)
                                             ->  Parallel Hash  (cost=4722.92..4722.92 rows=50229 width=4) (actual time=46.213..46.213 rows=28281 loops=3)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 4384kB
                                                   ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=50229 width=4) (actual time=0.050..32.286 rows=28281 loops=3)
                                                         Filter: ((country_code)::text = '[us]'::text)
                                                         Rows Removed by Filter: 50051
                           ->  Hash  (cost=149779.57..149779.57 rows=3020362 width=8) (actual time=3196.389..3196.389 rows=2728943 loops=3)
                                 Buckets: 131072  Batches: 64  Memory Usage: 2675kB
                                 ->  Nested Loop  (cost=0.56..149779.57 rows=3020362 width=8) (actual time=0.109..2362.385 rows=2728943 loops=3)
                                       ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.035..0.042 rows=1 loops=3)
                                             Filter: ((role)::text = 'writer'::text)
                                             Rows Removed by Filter: 11
                                       ->  Index Scan using role_id_cast_info on cast_info ci  (cost=0.56..116829.02 rows=3294940 width=12) (actual time=0.066..1951.021 rows=2728943 loops=3)
                                             Index Cond: (role_id = rt.id)
                     ->  Parallel Hash  (cost=118870.18..118870.18 rows=375560 width=24) (actual time=1461.924..1461.924 rows=300448 loops=3)
                           Buckets: 65536  Batches: 16  Memory Usage: 3872kB
                           ->  Parallel Hash Join  (cost=22047.10..118870.18 rows=375560 width=24) (actual time=997.790..1345.103 rows=300448 loops=3)
                                 Hash Cond: (n1.id = a1.person_id)
                                 ->  Parallel Seq Scan on name n1  (cost=0.00..72977.55 rows=1736455 width=4) (actual time=0.054..396.561 rows=1389164 loops=3)
                                 ->  Parallel Hash  (cost=15151.60..15151.60 rows=375560 width=20) (actual time=207.285..207.285 rows=300448 loops=3)
                                       Buckets: 65536  Batches: 16  Memory Usage: 3680kB
                                       ->  Parallel Seq Scan on aka_name a1  (cost=0.00..15151.60 rows=375560 width=20) (actual time=0.036..94.425 rows=300448 loops=3)
 Planning Time: 8.733 ms
 Execution Time: 7417.726 ms
(40 rows)

SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=507448.30..507448.31 rows=1 width=64) (actual time=3540.224..3540.225 rows=1 loops=1)
   ->  Gather  (cost=507448.08..507448.29 rows=2 width=64) (actual time=3536.272..3641.932 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=506448.08..506448.09 rows=1 width=64) (actual time=3529.113..3529.114 rows=1 loops=3)
               ->  Parallel Hash Join  (cost=369446.57..492488.07 rows=2792002 width=33) (actual time=3424.054..3498.698 rows=107668 loops=3)
                     Hash Cond: (ci.person_id = an1.person_id)
                     ->  Hash Join  (cost=243680.90..334088.98 rows=1215217 width=21) (actual time=1640.592..1900.553 rows=95179 loops=3)
                           Hash Cond: (t.id = ci.movie_id)
                           ->  Parallel Hash Join  (cost=44347.81..110366.87 rows=395029 width=25) (actual time=1138.576..1415.937 rows=384599 loops=3)
                                 Hash Cond: (t.id = mc.movie_id)
                                 ->  Parallel Seq Scan on title t  (cost=0.00..46532.63 rows=1053463 width=21) (actual time=0.052..266.910 rows=842771 loops=3)
                                 ->  Parallel Hash  (cost=37865.94..37865.94 rows=395029 width=4) (actual time=538.575..538.575 rows=384599 loops=3)
                                       Buckets: 131072  Batches: 16  Memory Usage: 3904kB
                                       ->  Parallel Hash Join  (cost=5350.78..37865.94 rows=395029 width=4) (actual time=50.485..415.028 rows=384599 loops=3)
                                             Hash Cond: (mc.company_id = cn.id)
                                             ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=8) (actual time=0.038..166.874 rows=869710 loops=3)
                                             ->  Parallel Hash  (cost=4722.92..4722.92 rows=50229 width=4) (actual time=49.541..49.542 rows=28281 loops=3)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 4384kB
                                                   ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=50229 width=4) (actual time=0.084..35.443 rows=28281 loops=3)
                                                         Filter: ((country_code)::text = '[us]'::text)
                                                         Rows Removed by Filter: 50051
                           ->  Hash  (cost=149779.57..149779.57 rows=3020362 width=8) (actual time=224.714..224.714 rows=276403 loops=3)
                                 Buckets: 131072  Batches: 64  Memory Usage: 1193kB
                                 ->  Nested Loop  (cost=0.56..149779.57 rows=3020362 width=8) (actual time=0.153..142.429 rows=276403 loops=3)
                                       ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.042..0.049 rows=1 loops=3)
                                             Filter: ((role)::text = 'costume designer'::text)
                                             Rows Removed by Filter: 11
                                       ->  Index Scan using role_id_cast_info on cast_info ci  (cost=0.56..116829.02 rows=3294940 width=12) (actual time=0.099..101.439 rows=276403 loops=3)
                                             Index Cond: (role_id = rt.id)
                     ->  Parallel Hash  (cost=118870.18..118870.18 rows=375560 width=24) (actual time=1478.498..1478.498 rows=300448 loops=3)
                           Buckets: 65536  Batches: 16  Memory Usage: 3872kB
                           ->  Parallel Hash Join  (cost=22047.10..118870.18 rows=375560 width=24) (actual time=1004.448..1361.471 rows=300448 loops=3)
                                 Hash Cond: (n1.id = an1.person_id)
                                 ->  Parallel Seq Scan on name n1  (cost=0.00..72977.55 rows=1736455 width=4) (actual time=0.064..402.915 rows=1389164 loops=3)
                                 ->  Parallel Hash  (cost=15151.60..15151.60 rows=375560 width=20) (actual time=207.945..207.945 rows=300448 loops=3)
                                       Buckets: 65536  Batches: 16  Memory Usage: 3680kB
                                       ->  Parallel Seq Scan on aka_name an1  (cost=0.00..15151.60 rows=375560 width=20) (actual time=0.036..94.643 rows=300448 loops=3)
 Planning Time: 10.460 ms
 Execution Time: 3642.580 ms
(40 rows)

SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=83284.29..83284.30 rows=1 width=96) (actual time=583.276..583.276 rows=1 loops=1)
   ->  Nested Loop  (cost=1003.86..83284.28 rows=1 width=49) (actual time=240.259..583.138 rows=121 loops=1)
         ->  Nested Loop  (cost=1003.44..83283.79 rows=1 width=53) (actual time=240.184..581.564 rows=123 loops=1)
               Join Filter: (ci.movie_id = mc.movie_id)
               ->  Gather  (cost=1003.01..83283.14 rows=1 width=57) (actual time=231.844..581.412 rows=139 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Nested Loop  (cost=3.01..82283.04 rows=1 width=57) (actual time=229.229..574.045 rows=46 loops=3)
                           ->  Nested Loop  (cost=2.58..82282.39 rows=1 width=45) (actual time=225.555..573.061 rows=52 loops=3)
                                 ->  Hash Join  (cost=2.15..82281.10 rows=2 width=24) (actual time=223.961..569.612 rows=142 loops=3)
                                       Hash Cond: (ci.role_id = rt.id)
                                       ->  Nested Loop  (cost=0.99..82279.86 rows=19 width=28) (actual time=223.696..569.254 rows=142 loops=3)
                                             Join Filter: (n.id = ci.person_id)
                                             ->  Nested Loop  (cost=0.42..82155.48 rows=9 width=24) (actual time=217.428..545.423 rows=519 loops=3)
                                                   ->  Parallel Seq Scan on name n  (cost=0.00..81659.82 rows=40 width=4) (actual time=216.435..516.628 rows=2256 loops=3)
                                                         Filter: (((name)::text ~~ '%Ang%'::text) AND ((gender)::text = 'f'::text))
                                                         Rows Removed by Filter: 1386908
                                                   ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..12.37 rows=2 width=20) (actual time=0.011..0.012 rows=0 loops=6768)
                                                         Index Cond: (person_id = n.id)
                                             ->  Index Scan using person_id_cast_info on cast_info ci  (cost=0.56..13.67 rows=12 width=16) (actual time=0.042..0.045 rows=0 loops=1558)
                                                   Index Cond: (person_id = an.person_id)
                                                   Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                   Rows Removed by Filter: 44
                                       ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.080..0.081 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.051..0.053 rows=1 loops=3)
                                                   Filter: ((role)::text = 'actress'::text)
                                                   Rows Removed by Filter: 11
                                 ->  Index Scan using title_pkey on title t  (cost=0.43..0.65 rows=1 width=21) (actual time=0.024..0.024 rows=0 loops=425)
                                       Index Cond: (id = ci.movie_id)
                                       Filter: ((production_year >= 2005) AND (production_year <= 2015))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.65 rows=1 width=20) (actual time=0.018..0.018 rows=1 loops=155)
                                 Index Cond: (id = ci.person_role_id)
               ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.64 rows=1 width=8) (actual time=0.020..0.026 rows=1 loops=139)
                     Index Cond: (movie_id = t.id)
                     Filter: ((note IS NOT NULL) AND (((note)::text ~~ '%(USA)%'::text) OR ((note)::text ~~ '%(worldwide)%'::text)))
                     Rows Removed by Filter: 5
         ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.49 rows=1 width=4) (actual time=0.012..0.012 rows=1 loops=123)
               Index Cond: (id = mc.company_id)
               Filter: ((country_code)::text = '[us]'::text)
               Rows Removed by Filter: 0
 Planning Time: 15.965 ms
 Execution Time: 587.439 ms
(44 rows)

SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=83272.11..83272.12 rows=1 width=128) (actual time=551.197..551.197 rows=1 loops=1)
   ->  Nested Loop  (cost=1003.86..83272.10 rows=1 width=64) (actual time=233.872..551.120 rows=40 loops=1)
         ->  Nested Loop  (cost=1003.43..83271.40 rows=1 width=55) (actual time=226.731..550.289 rows=94 loops=1)
               ->  Nested Loop  (cost=1003.01..83270.82 rows=1 width=59) (actual time=226.653..549.371 rows=94 loops=1)
                     ->  Gather  (cost=1002.58..83270.12 rows=1 width=47) (actual time=226.607..552.758 rows=103 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop  (cost=2.58..82270.02 rows=1 width=47) (actual time=220.774..543.205 rows=34 loops=3)
                                 ->  Hash Join  (cost=2.15..82269.31 rows=1 width=39) (actual time=220.421..541.091 rows=88 loops=3)
                                       Hash Cond: (ci.role_id = rt.id)
                                       ->  Nested Loop  (cost=0.99..82268.09 rows=15 width=43) (actual time=220.154..540.772 rows=88 loops=3)
                                             Join Filter: (n.id = ci.person_id)
                                             ->  Nested Loop  (cost=0.42..82155.48 rows=9 width=39) (actual time=215.352..529.766 rows=432 loops=3)
                                                   ->  Parallel Seq Scan on name n  (cost=0.00..81659.82 rows=40 width=19) (actual time=214.491..511.969 rows=1803 loops=3)
                                                         Filter: (((name)::text ~~ '%Angel%'::text) AND ((gender)::text = 'f'::text))
                                                         Rows Removed by Filter: 1387361
                                                   ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..12.37 rows=2 width=20) (actual time=0.009..0.009 rows=0 loops=5409)
                                                         Index Cond: (person_id = n.id)
                                             ->  Index Scan using person_id_cast_info on cast_info ci  (cost=0.56..12.39 rows=10 width=16) (actual time=0.023..0.025 rows=0 loops=1296)
                                                   Index Cond: (person_id = an.person_id)
                                                   Filter: ((note)::text = '(voice)'::text)
                                                   Rows Removed by Filter: 43
                                       ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.077..0.077 rows=1 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.053..0.056 rows=1 loops=3)
                                                   Filter: ((role)::text = 'actress'::text)
                                                   Rows Removed by Filter: 11
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.70 rows=1 width=8) (actual time=0.020..0.023 rows=0 loops=265)
                                       Index Cond: (movie_id = ci.movie_id)
                                       Filter: (((note)::text ~~ '%(200%)%'::text) AND (((note)::text ~~ '%(USA)%'::text) OR ((note)::text ~~ '%(worldwide)%'::text)))
                                       Rows Removed by Filter: 4
                     ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.70 rows=1 width=20) (actual time=0.010..0.010 rows=1 loops=103)
                           Index Cond: (id = ci.person_role_id)
               ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.59 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=94)
                     Index Cond: (id = mc.company_id)
                     Filter: ((country_code)::text = '[us]'::text)
         ->  Index Scan using title_pkey on title t  (cost=0.43..0.69 rows=1 width=21) (actual time=0.008..0.008 rows=0 loops=94)
               Index Cond: (id = ci.movie_id)
               Filter: ((production_year >= 2007) AND (production_year <= 2010))
               Rows Removed by Filter: 1
 Planning Time: 14.476 ms
 Execution Time: 556.405 ms
(42 rows)

SET
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=160431.48..160431.49 rows=1 width=128) (actual time=960.637..960.637 rows=1 loops=1)
   ->  Gather  (cost=160431.25..160431.46 rows=2 width=128) (actual time=959.641..967.000 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=159431.25..159431.26 rows=1 width=128) (actual time=952.221..952.221 rows=1 loops=3)
               ->  Nested Loop  (cost=81913.67..159427.47 rows=378 width=64) (actual time=542.272..949.820 rows=2715 loops=3)
                     Join Filter: (ci.movie_id = t.id)
                     ->  Nested Loop  (cost=81913.24..159228.71 rows=378 width=55) (actual time=542.165..931.064 rows=2715 loops=3)
                           ->  Nested Loop  (cost=81912.82..158764.41 rows=1042 width=59) (actual time=539.828..891.688 rows=6115 loops=3)
                                 ->  Nested Loop  (cost=81912.39..158495.75 rows=392 width=51) (actual time=539.699..864.174 rows=2575 loops=3)
                                       ->  Hash Join  (cost=81911.96..157967.51 rows=810 width=39) (actual time=539.553..841.908 rows=2735 loops=3)
                                             Hash Cond: (ci.role_id = rt.id)
                                             ->  Nested Loop  (cost=81910.80..157931.79 rows=9727 width=43) (actual time=539.297..840.359 rows=2735 loops=3)
                                                   Join Filter: (n.id = ci.person_id)
                                                   ->  Parallel Hash Join  (cost=81910.23..98047.67 rows=4333 width=39) (actual time=535.625..684.807 rows=3508 loops=3)
                                                         Hash Cond: (an.person_id = n.id)
                                                         ->  Parallel Seq Scan on aka_name an  (cost=0.00..15151.60 rows=375560 width=20) (actual time=0.030..79.768 rows=300448 loops=3)
                                                         ->  Parallel Hash  (cost=81659.82..81659.82 rows=20033 width=19) (actual time=534.643..534.643 rows=16670 loops=3)
                                                               Buckets: 65536  Batches: 1  Memory Usage: 3296kB
                                                               ->  Parallel Seq Scan on name n  (cost=0.00..81659.82 rows=20033 width=19) (actual time=217.740..520.271 rows=16670 loops=3)
                                                                     Filter: (((name)::text ~~ '%An%'::text) AND ((gender)::text = 'f'::text))
                                                                     Rows Removed by Filter: 1372493
                                                   ->  Index Scan using person_id_cast_info on cast_info ci  (cost=0.56..13.67 rows=12 width=16) (actual time=0.040..0.043 rows=1 loops=10525)
                                                         Index Cond: (person_id = an.person_id)
                                                         Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                         Rows Removed by Filter: 44
                                             ->  Hash  (cost=1.15..1.15 rows=1 width=4) (actual time=0.086..0.086 rows=1 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.059..0.061 rows=1 loops=3)
                                                         Filter: ((role)::text = 'actress'::text)
                                                         Rows Removed by Filter: 11
                                       ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.65 rows=1 width=20) (actual time=0.007..0.007 rows=1 loops=8204)
                                             Index Cond: (id = ci.person_role_id)
                                 ->  Index Scan using movie_id_movie_companies on movie_companies mc  (cost=0.43..0.64 rows=5 width=8) (actual time=0.007..0.010 rows=2 loops=7726)
                                       Index Cond: (movie_id = ci.movie_id)
                           ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=4) (actual time=0.006..0.006 rows=0 loops=18345)
                                 Index Cond: (id = mc.company_id)
                                 Filter: ((country_code)::text = '[us]'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using title_pkey on title t  (cost=0.43..0.51 rows=1 width=21) (actual time=0.006..0.006 rows=1 loops=8144)
                           Index Cond: (id = mc.movie_id)
 Planning Time: 14.993 ms
 Execution Time: 967.700 ms
(43 rows)

SET
                                                                                                  QUERY PLAN                                                                                                  
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=210684.16..210684.17 rows=1 width=128) (actual time=5369.913..5369.913 rows=1 loops=1)
   ->  Gather  (cost=210683.93..210684.14 rows=2 width=128) (actual time=5369.896..5374.312 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=209683.93..209683.94 rows=1 width=128) (actual time=5351.918..5351.919 rows=1 loops=3)
               ->  Nested Loop  (cost=140734.47..209608.99 rows=7494 width=64) (actual time=2921.288..5254.418 rows=161027 loops=3)
                     ->  Nested Loop  (cost=140734.04..207853.12 rows=3262 width=56) (actual time=2920.033..4880.929 rows=57856 loops=3)
                           Join Filter: (ci.movie_id = t.id)
                           ->  Nested Loop  (cost=140733.61..206137.89 rows=3262 width=47) (actual time=2919.966..4502.807 rows=57856 loops=3)
                                 ->  Nested Loop  (cost=140733.18..201739.10 rows=6745 width=35) (actual time=2919.905..3992.901 rows=63155 loops=3)
                                       ->  Hash Join  (cost=140732.75..179459.15 rows=29530 width=16) (actual time=2919.831..3548.263 rows=63185 loops=3)
                                             Hash Cond: (mc.movie_id = ci.movie_id)
                                             ->  Parallel Hash Join  (cost=5350.78..37865.94 rows=395029 width=4) (actual time=46.984..443.771 rows=384599 loops=3)
                                                   Hash Cond: (mc.company_id = cn.id)
                                                   ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29661.37 rows=1087137 width=8) (actual time=0.040..170.174 rows=869710 loops=3)
                                                   ->  Parallel Hash  (cost=4722.92..4722.92 rows=50229 width=4) (actual time=45.598..45.598 rows=28281 loops=3)
                                                         Buckets: 131072  Batches: 1  Memory Usage: 4384kB
                                                         ->  Parallel Seq Scan on company_name cn  (cost=0.00..4722.92 rows=50229 width=4) (actual time=0.046..31.193 rows=28281 loops=3)
                                                               Filter: ((country_code)::text = '[us]'::text)
                                                               Rows Removed by Filter: 50051
                                             ->  Hash  (cost=134105.54..134105.54 rows=73395 width=12) (actual time=2870.166..2870.166 rows=276166 loops=3)
                                                   Buckets: 131072 (originally 131072)  Batches: 4 (originally 2)  Memory Usage: 3984kB
                                                   ->  Nested Loop  (cost=0.56..134105.54 rows=73395 width=12) (actual time=0.407..2735.266 rows=276166 loops=3)
                                                         ->  Seq Scan on role_type rt  (cost=0.00..1.15 rows=1 width=4) (actual time=0.039..0.044 rows=1 loops=3)
                                                               Filter: ((role)::text = 'actress'::text)
                                                               Rows Removed by Filter: 11
                                                         ->  Index Scan using role_id_cast_info on cast_info ci  (cost=0.56..133303.71 rows=80067 width=16) (actual time=0.363..2697.176 rows=276166 loops=3)
                                                               Index Cond: (role_id = rt.id)
                                                               Filter: ((note)::text = ANY ('{(voice),"(voice: Japanese version)","(voice) (uncredited)","(voice: English version)"}'::text[]))
                                                               Rows Removed by Filter: 7175807
                                       ->  Index Scan using name_pkey on name n  (cost=0.43..0.75 rows=1 width=19) (actual time=0.006..0.006 rows=1 loops=189554)
                                             Index Cond: (id = ci.person_id)
                                             Filter: ((gender)::text = 'f'::text)
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using char_name_pkey on char_name chn  (cost=0.43..0.65 rows=1 width=20) (actual time=0.007..0.007 rows=1 loops=189464)
                                       Index Cond: (id = ci.person_role_id)
                           ->  Index Scan using title_pkey on title t  (cost=0.43..0.51 rows=1 width=21) (actual time=0.006..0.006 rows=1 loops=173567)
                                 Index Cond: (id = mc.movie_id)
                     ->  Index Scan using person_id_aka_name on aka_name an  (cost=0.42..0.52 rows=2 width=20) (actual time=0.004..0.005 rows=3 loops=173567)
                           Index Cond: (person_id = n.id)
 Planning Time: 15.488 ms
 Execution Time: 5375.028 ms
(42 rows)

